The real buggy line:
if ( str . startsWith ( "0x" ) || str . startsWith ( "-0x" ) ) { 

The real patch line:
if ( str . startsWith ( "0x" ) || str . startsWith ( "-0x" ) || str . startsWith ( "0X" ) || str . startsWith ( "-0X" ) ) { 

----------------------Similar Code (Buggy, patch):---------------------


if ( StringUtils . isEmpty ( str ) || StringUtils . isEmpty ( searchChars ) ) { return str ; }
if ( isEmpty ( str ) || isEmpty ( searchChars ) ) { return str ; }
--File: src_java_org_apache_commons_lang_StringUtils.java



if ( StringUtils . isEmpty ( str ) ) { return str ; }
if ( isEmpty ( str ) ) { return str ; }
--File: src_main_java_org_apache_commons_lang3_StringUtils.java



assertThat ( JSDocInfoPrinter . print ( info ) ) . isEqualTo ( output ) ;
assertThat ( jsDocInfoPrinter . print ( info ) ) . isEqualTo ( output ) ;
--File: test_com_google_javascript_jscomp_JSDocInfoPrinterTest.java



if ( StringUtils . isEmpty ( str ) || StringUtils . isEmpty ( remove ) ) { return str ; }
if ( isEmpty ( str ) || isEmpty ( remove ) ) { return str ; }
--File: src_java_org_apache_commons_lang_StringUtils.java



if ( StringUtils . isEmpty ( str ) || StringUtils . isEmpty ( remove ) ) { return str ; }
if ( isEmpty ( str ) || isEmpty ( remove ) ) { return str ; }
--File: src_java_org_apache_commons_lang_StringUtils.java



if ( dataset != null ) { this . setDataset ( dataset ) ; }
if ( dataset != null ) { setDataset ( dataset ) ; }
--File: source_org_jfree_chart_plot_dial_DialPlot.java



Math . abs ( dt ) <= Math . ulp ( stepStart )
FastMath . abs ( dt ) <= FastMath . ulp ( stepStart )
--File: src_main_java_org_apache_commons_math_ode_nonstiff_AdamsMoultonIntegrator.java



Math . abs ( dt ) <= Math . ulp ( stepStart )
FastMath . abs ( dt ) <= FastMath . ulp ( stepStart )
--File: src_main_java_org_apache_commons_math_ode_nonstiff_RungeKuttaIntegrator.java



return Math . abs ( u ) + Math . abs ( v ) ;
return FastMath . abs ( u ) + FastMath . abs ( v ) ;
--File: src_main_java_org_apache_commons_math_util_MathUtils.java



return Math . abs ( u ) + Math . abs ( v ) ;
return FastMath . abs ( u ) + FastMath . abs ( v ) ;
--File: src_main_java_org_apache_commons_math_util_MathUtils.java



if ( ArrayUtils . isEmpty ( css ) ) { return true ; }
if ( ArrayUtils . isEmpty ( css ) ) { return false ; }
--File: src_main_java_org_apache_commons_lang3_StringUtils.java



if ( ArrayUtils . isEmpty ( css ) ) { return true ; }
if ( ArrayUtils . isEmpty ( css ) ) { return false ; }
--File: src_main_java_org_apache_commons_lang3_StringUtils.java



if ( ArrayUtils . isEmpty ( css ) ) { return true ; }
if ( ArrayUtils . isEmpty ( css ) ) { return false ; }
--File: src_main_java_org_apache_commons_lang3_StringUtils.java



if ( ArrayUtils . isEmpty ( css ) ) { return true ; }
if ( ArrayUtils . isEmpty ( css ) ) { return false ; }
--File: src_main_java_org_apache_commons_lang3_StringUtils.java



when ( sorter . sort ( anyList () ) ) . thenReturn ( null ) ;
when ( sorter . sort ( ArgumentMatchers . < String > anyList () ) ) . thenReturn ( null ) ;
--File: src_test_java_org_mockitousage_matchers_GenericMatchersTest.java



assertThat ( timer . isCounting () , is ( true ) ) ;
Assertions . assertThat ( timer . isCounting () ) . isTrue () ;
--File: src_test_java_org_mockito_internal_util_TimerTest.java



assertTrue ( Double . isNaN ( statistic . getResult () ) ) ;
checkClearValue ( statistic ) ;
--File: src_test_java_org_apache_commons_math_stat_descriptive_StorelessUnivariateStatisticAbstractTest.java



assertTrue ( Double . isNaN ( statistic . getResult () ) ) ;
checkClearValue ( statistic ) ;
--File: src_test_java_org_apache_commons_math_stat_descriptive_StorelessUnivariateStatisticAbstractTest.java



{ return Math . log ( x ) / Math . log ( base ) ; }
{ return FastMath . log ( x ) / FastMath . log ( base ) ; }
--File: src_main_java_org_apache_commons_math_util_MathUtils.java



assertEquals ( STRING_CONSTANT , f . withZone ( UTC ) . print ( dt ) ) ;
assertEquals ( STRING_CONSTANT , f . withZoneUTC () . print ( dt ) ) ;
--File: JodaTime_src_test_org_joda_time_format_TestDateTimeFormatter.java



