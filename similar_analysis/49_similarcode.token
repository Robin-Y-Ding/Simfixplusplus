The real buggy line:
if ( Precision . compareTo ( entry , 0d , maxUlps ) > 0 ) { 

The real patch line:
if ( Precision . compareTo ( entry , 0d , epsilon ) > 0 ) { 

----------------------Similar Code (Buggy, patch):---------------------


if ( scope . isDeclared ( qName , false ) ) { continue; }
if ( scope . hasOwnSlot ( qName ) ) { continue; }
--File: src_com_google_javascript_jscomp_TypedScopeCreator.java



if ( Precision . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { return true ; }
if ( Precision . compareTo ( entry , NUMBER_CONSTANT , cutOff ) > NUMBER_CONSTANT ) { return true ; }
--File: src_main_java_org_apache_commons_math3_optim_linear_SimplexSolver.java



if ( ! jsScope . isDeclared ( name , false ) ) { return; }
if ( ! jsScope . isDeclaredSloppy ( name , false ) ) { return; }
--File: src_com_google_javascript_jscomp_LiveVariablesAnalysis.java



if ( ! jsScope . isDeclaredSloppy ( name , false ) ) { return; }
if ( ! jsScope . isDeclared ( name , false ) ) { return; }
--File: src_com_google_javascript_jscomp_LiveVariablesAnalysis.java



if ( NodeUtil . isVarOrSimpleAssignLhs ( n , parent ) ) { return; }
if ( NodeUtil . isNameDeclOrSimpleAssignLhs ( n , parent ) ) { return; }
--File: src_com_google_javascript_jscomp_InlineAliases.java



if ( ! functionScope . isDeclared ( name , false ) ) { return; }
if ( ! functionScope . isDeclaredSloppy ( name , false ) ) { return; }
--File: src_com_google_javascript_jscomp_DeadAssignmentsElimination.java



{ scope . declare ( name , n , input ) ; }
{ ( ( Scope ) scope ) . declare ( name , n , input ) ; }
--File: src_com_google_javascript_jscomp_SyntacticScopeCreator.java



result = solver . solve ( f , min , max ) ;
result = solver . solve ( NUMBER_CONSTANT , f , min , max ) ;
--File: src_test_java_org_apache_commons_math_analysis_solvers_LaguerreSolverTest.java



if ( ! isInferrableConst ( jsdoc , nameNode ) ) { return; }
if ( ! isInferrableConst ( jsdoc , nameNode , false ) ) { return; }
--File: src_com_google_javascript_jscomp_ConvertToTypedInterface.java



{ mPrinter . printTo ( buf , instant , chrono ) ; }
{ iPrinter . printTo ( buf , instant , chrono ) ; }
--File: JodaTime_src_java_org_joda_time_format_DateTimeFormat.java



{ mPrinter . printTo ( buf , instant , zone ) ; }
{ iPrinter . printTo ( buf , instant , zone ) ; }
--File: JodaTime_src_java_org_joda_time_format_DateTimeFormat.java



if ( NodeUtil . isForIn ( parent ) ) { return; }
if ( parent . isForIn () ) { return; }
--File: src_com_google_javascript_jscomp_UnreachableCodeElimination.java



{ getRealFormat () . format ( value , toAppendTo , pos ) ; }
{ format . format ( value , toAppendTo , pos ) ; }
--File: src_java_org_apache_commons_math_complex_ComplexFormat.java



{ return ( o1 . compareTo ( ( T ) o2 ) ) ; }
{ return o1 . compareTo ( ( T ) o2 ) ; }
--File: src_main_java_org_apache_commons_math_stat_Frequency.java



if ( ! functionBlockScope . isDeclaredSloppy ( name , false ) ) { return; }
if ( ! functionBlockScope . isDeclaredInFunctionBlockOrParameter ( name ) ) { return; }
--File: src_com_google_javascript_jscomp_DeadAssignmentsElimination.java



if ( scope . hasOwnSlot ( qName ) ) { continue; }
if ( currentScope . hasOwnSlot ( qName ) ) { continue; }
--File: src_com_google_javascript_jscomp_TypedScopeCreator.java



assertTrue ( bestFinal . compareTo ( bestInitial ) > NUMBER_CONSTANT ) ;
Assert . assertTrue ( bestFinal . compareTo ( bestInitial ) > NUMBER_CONSTANT ) ;
--File: src_test_java_org_apache_commons_math_genetics_GeneticAlgorithmTestPermutations.java



if ( NodeUtil . isFunctionExpression ( parent ) ) { break; }
if ( NodeUtil . isFunctionExpression ( parent ) ) { return; }
--File: src_com_google_javascript_jscomp_ProcessCommonJSModules.java



return new DateTime ( parseMillis ( text , millis , chrono ) , chrono ) ;
return new DateTime ( ( ( DateTimeParser ) this ) . parseMillis ( text , millis , chrono ) , chrono ) ;
--File: JodaTime_src_java_org_joda_time_format_BaseDateTimeFormatter.java



{ NodeTraversal . traverse ( compiler , root , this ) ; }
{ NodeTraversal . traverseEs6 ( compiler , root , this ) ; }
--File: src_com_google_javascript_jscomp_ChromePass.java



