The real buggy line:
return multiply ( 100 ) . doubleValue ( ) ; 

The real patch line:
return 100 * doubleValue ( ) ; 

----------------------Similar Code (Buggy, patch):---------------------


return Double . valueOf ( str ) . doubleValue () ;
return Double . parseDouble ( str ) ;
--File: src_main_java_org_apache_commons_math3_random_ValueServer.java



return - mean * Math . log ( unif ) ;
return - mean * FastMath . log ( unif ) ;
--File: src_main_java_org_apache_commons_math_random_RandomDataImpl.java



return ImmutableList . copyOf ( out ) ;
return out ;
--File: src_com_google_javascript_jscomp_gwt_client_GwtRunner.java



verify ( mock ) . oneArg ( two ) ;
verify ( mock , NUMBER_CONSTANT ) . oneArg ( two ) ;
--File: test_org_mockito_usage_verification_VerificationUsingMatchersTest.java



allDeps . addAll ( input . getRequires () ) ;
allDeps . addAll ( input . getRequiredSymbols () ) ;
--File: src_com_google_javascript_jscomp_Compiler.java



allDeps . addAll ( input . getRequires () ) ;
allDeps . addAll ( input . getRequiredSymbols () ) ;
--File: src_com_google_javascript_jscomp_Compiler.java



super ( field . getName () ) ;
super ( field . getType () ) ;
--File: JodaTime_src_java_org_joda_time_chrono_ZonedChronology.java



super ( field . getName () ) ;
super ( field . getType () ) ;
--File: JodaTime_src_java_org_joda_time_chrono_ZonedChronology.java



checkArgument ( expr . isCall () ) ;
checkArgument ( expr . isCall () || expr . isTaggedTemplateLit () ) ;
--File: src_com_google_javascript_jscomp_NewTypeInference.java



return sum / ( double ) v.length ;
return sum / v.length ;
--File: src_test_org_apache_commons_math_stat_descriptive_moment_VarianceTest.java



allDeps . addAll ( input . getRequiredSymbols () ) ;
allDeps . addAll ( input . getRequires () ) ;
--File: src_com_google_javascript_jscomp_Compiler.java



return ( chiSquareTest ( counts ) < alpha ) ;
return chiSquareTest ( counts ) < alpha ;
--File: src_main_java_org_apache_commons_math_stat_inference_ChiSquareTestImpl.java



return ( set . equals ( other.set ) ) ;
return set . equals ( other.set ) ;
--File: src_java_org_apache_commons_lang_CharSet.java



Double pi = Double . valueOf ( Math.PI ) ;
Double pi = Double . valueOf ( FastMath.PI ) ;
--File: src_test_java_org_apache_commons_math_complex_ComplexFormatAbstractTest.java



{ return x . ebeMultiply ( diag ) ; }
{ return x . ebeDivide ( diag ) ; }
--File: src_main_java_org_apache_commons_math_linear_JacobiPreconditioner.java



return parseLocale ( str , len ) ;
return parseLocale ( str ) ;
--File: src_main_java_org_apache_commons_lang3_LocaleUtils.java



assertEquals ( null , tok . next () ) ;
assertNull ( tok . next () ) ;
--File: src_test_java_org_apache_commons_lang3_text_StrTokenizerTest.java



assertEquals ( null , tok . next () ) ;
assertNull ( tok . next () ) ;
--File: src_test_java_org_apache_commons_lang3_text_StrTokenizerTest.java



assertEquals ( null , tok . next () ) ;
assertNull ( tok . next () ) ;
--File: src_test_java_org_apache_commons_lang3_text_StrTokenizerTest.java



assertEquals ( null , tok . next () ) ;
assertNull ( tok . next () ) ;
--File: src_test_java_org_apache_commons_lang3_text_StrTokenizerTest.java



