The real buggy line:
return StringDescription . toString ( m ) . equals ( arg . toString ( ) ) ; 

The real patch line:
return StringDescription . toString ( m ) . equals ( arg == null ? "null" : arg . toString ( ) ) ; 

----------------------Similar Code (Buggy, patch):---------------------


Preconditions . checkState ( NodeUtil . isForIn ( expr . getParent () ) ) ;
Preconditions . checkState ( expr . getParent () . isForIn () ) ;
--File: src_com_google_javascript_jscomp_NewTypeInference.java



return state . getIn () . reachingDef . get ( jsScope . getVar ( name ) ) ;
return state . getIn () . reachingDef . get ( allVarsInFn . get ( name ) ) ;
--File: src_com_google_javascript_jscomp_MustBeReachingVariableDef.java



Preconditions . checkState ( NodeUtil . isForIn ( lvalue . getParent () ) ) ;
Preconditions . checkState ( lvalue . getParent () . isForIn () ) ;
--File: src_com_google_javascript_jscomp_NewTypeInference.java



return ePlus . add ( eMinus ) . divide ( ePlus . subtract ( eMinus ) ) ;
return ePlus . subtract ( eMinus ) . divide ( ePlus . add ( eMinus ) ) ;
--File: src_main_java_org_apache_commons_math3_dfp_Dfp.java



return DateTimeFormat . getInstance ( getChronology () ) . forPattern ( pattern ) . print ( this ) ;
return DateTimeFormat . getInstance () . forPattern ( pattern ) . print ( this ) ;
--File: JodaTime_src_java_org_joda_time_base_AbstractDateTime.java



{ return StringDescription . toString ( m ) . equals ( arg == null ? STRING_CONSTANT : arg . toString () ) ; }
{ return new MatchersPrinter () . print ( m ) . equals ( arg == null ? STRING_CONSTANT : arg . toString () ) ; }
--File: src_org_mockito_internal_verification_argumentmatching_ArgumentMatchingTool.java



assertThat ( JSDocInfoPrinter . print ( info ) ) . isEqualTo ( output ) ;
assertThat ( jsDocInfoPrinter . print ( info ) ) . isEqualTo ( output ) ;
--File: test_com_google_javascript_jscomp_JSDocInfoPrinterTest.java



{ return ISOPeriodFormat . getInstance () . standard () . print ( this ) ; }
{ return ISOPeriodFormat . standard () . print ( this ) ; }
--File: JodaTime_src_java_org_joda_time_base_AbstractPeriod.java



return state . getOut () . mayUseMap . get ( jsScope . getVar ( name ) ) ;
return state . getOut () . mayUseMap . get ( allVarsInFn . get ( name ) ) ;
--File: src_com_google_javascript_jscomp_MaybeReachingVariableUse.java



return pattern . matcher ( decomposed ) . replaceAll ( StringUtils.EMPTY ) ;
return pattern . matcher ( decomposed ) . replaceAll ( EMPTY ) ;
--File: src_main_java_org_apache_commons_lang3_StringUtils.java



{ out . add ( new FormattedText ( matcher . toString () ) ) ; }
{ out . add ( new FormattedText ( MatcherToString . toString ( matcher ) ) ) ; }
--File: src_org_mockito_internal_matchers_text_MatchersPrinter.java



Preconditions . checkArgument ( NodeUtil . isAssociative ( n . getToken () ) ) ;
checkArgument ( NodeUtil . isAssociative ( n . getToken () ) ) ;
--File: src_com_google_javascript_jscomp_PeepholeSubstituteAlternateSyntax.java



Preconditions . checkState ( first . getString () . isEmpty () ) ;
checkState ( first . getString () . isEmpty () ) ;
--File: src_com_google_javascript_jscomp_CodeGenerator.java



assertEquals ( STRING_CONSTANT , StringDescription . toString ( m . withExtraTypeInfo () ) ) ;
assertEquals ( STRING_CONSTANT , describe ( m . withExtraTypeInfo () ) ) ;
--File: test_org_mockito_internal_matchers_LocalizedMatcherTest.java



Preconditions . checkArgument ( NodeUtil . isNameDeclaration ( node . getParent () ) ) ;
checkArgument ( NodeUtil . isNameDeclaration ( node . getParent () ) ) ;
--File: src_com_google_javascript_jscomp_PureFunctionIdentifier.java



catch ( Exception e ) { System.out . println ( e . toString () ) ; }
catch ( Exception e ) { e . printStackTrace () ; }
--File: tests_org_jfree_chart_labels_junit_CustomXYItemLabelGeneratorTests.java



catch ( Exception e ) { System.out . println ( e . toString () ) ; }
catch ( Exception e ) { e . printStackTrace () ; }
--File: tests_org_jfree_chart_labels_junit_BubbleXYItemLabelGeneratorTests.java



catch ( Exception e ) { System.out . println ( e . toString () ) ; }
catch ( Exception e ) { e . printStackTrace () ; }
--File: tests_org_jfree_chart_labels_junit_BoxAndWhiskerToolTipGeneratorTests.java



catch ( Exception e ) { System.out . println ( e . toString () ) ; }
catch ( Exception e ) { e . printStackTrace () ; }
--File: tests_org_jfree_chart_labels_junit_BoxAndWhiskerXYToolTipGeneratorTests.java



catch ( Exception e ) { System.out . println ( e . toString () ) ; }
catch ( Exception e ) { e . printStackTrace () ; }
--File: tests_org_jfree_chart_labels_junit_HighLowItemLabelGeneratorTests.java



