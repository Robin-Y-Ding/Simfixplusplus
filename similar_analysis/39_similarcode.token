The real buggy line:
classes [ i ] = array [ i ] . getClass ( ) ; 

The real patch line:
classes [ i ] = array [ i ] == null ? null : array [ i ] . getClass ( ) ; 

----------------------Similar Code (Buggy, patch):---------------------


{ vals [ i ] = values [ i ] ; }
{ vals [ i ] = values [ i ] . doubleValue () ; }
--File: src_java_org_apache_commons_math_linear_SparseRealVector.java



{ result [ i ] = new Float ( array [ i ] ) ; }
{ result [ i ] = Float . valueOf ( array [ i ] ) ; }
--File: src_java_org_apache_commons_lang_ArrayUtils.java



{ assertEquals ( y [ i ] , iResult [ i ] ) ; }
{ Assert . assertEquals ( y [ i ] , iResult [ i ] ) ; }
--File: src_test_java_org_apache_commons_math_transform_FastHadamardTransformerTest.java



{ result [ i ] = new Byte ( array [ i ] ) ; }
{ result [ i ] = Byte . valueOf ( array [ i ] ) ; }
--File: src_java_org_apache_commons_lang_ArrayUtils.java



{ result [ i ] = new Long ( array [ i ] ) ; }
{ result [ i ] = Long . valueOf ( array [ i ] ) ; }
--File: src_java_org_apache_commons_lang_ArrayUtils.java



{ result [ i ] = new Character ( array [ i ] ) ; }
{ result [ i ] = Character . valueOf ( array [ i ] ) ; }
--File: src_java_org_apache_commons_lang_ArrayUtils.java



{ result [ i ] = new Double ( array [ i ] ) ; }
{ result [ i ] = Double . valueOf ( array [ i ] ) ; }
--File: src_java_org_apache_commons_lang_ArrayUtils.java



{ result [ i ] = new Short ( array [ i ] ) ; }
{ result [ i ] = Short . valueOf ( array [ i ] ) ; }
--File: src_java_org_apache_commons_lang_ArrayUtils.java



data [ i ] = new Complex ( re , im ) ;
data [ i ] = Complex . ofCartesian ( re , im ) ;
--File: src_test_java_org_apache_commons_math4_transform_FastFourierTransformerTest.java



{ result [ i ] = new Integer ( array [ i ] ) ; }
{ result [ i ] = Integer . valueOf ( array [ i ] ) ; }
--File: src_java_org_apache_commons_lang_ArrayUtils.java



{ data [ i ] = data [ i ] / d ; }
{ data [ i ] /= d ; }
--File: src_main_java_org_apache_commons_math3_linear_ArrayRealVector.java



{ data [ i ] = data [ i ] * d ; }
{ data [ i ] *= d ; }
--File: src_main_java_org_apache_commons_math3_linear_ArrayRealVector.java



{ data [ i ] = data [ i ] - d ; }
{ data [ i ] -= d ; }
--File: src_main_java_org_apache_commons_math3_linear_ArrayRealVector.java



{ data [ i ] = data [ i ] + d ; }
{ data [ i ] += d ; }
--File: src_main_java_org_apache_commons_math3_linear_ArrayRealVector.java



rhs [ m ] = rhs [ m ] / X ;
rhs [ m ] /= X ;
--File: src_main_java_org_apache_commons_math3_stat_regression_MillerUpdatingRegression.java



y [ i ] = new Complex ( yr , yi ) ;
y [ i ] = Complex . ofCartesian ( yr , yi ) ;
--File: src_test_java_org_apache_commons_math4_transform_FastFourierTransformerTest.java



x [ i ] = Complex . ofCartesian ( f . value ( t ) ) ;
x [ i ] = Complex . ofReal ( f . value ( t ) ) ;
--File: src_test_java_org_apache_commons_math4_transform_FastFourierTransformerTest.java



{ se [ i ] = FastMath . sqrt ( rank ) ; continue; }
{ se [ i ] = FastMath . sqrt ( var ) ; continue; }
--File: src_main_java_org_apache_commons_math_stat_regression_RegressionResults.java



simplex [ i ] = new PointCostPair ( vertex ) ;
simplex [ i ] = new PointCostPair ( vertex , Double.NaN ) ;
--File: src_mantissa_src_org_spaceroots_mantissa_optimization_DirectSearchOptimizer.java



{ result [ i ] = r . call () ; }
{ result [ i ] = r . call () . doubleValue () ; }
--File: src_test_java_org_apache_commons_math3_PerfTestUtils.java



