{AST_ROOT_SC2NF{{(}{int}{)}{{(}{{{{(}{{v}{-}{{this}{.}{lowerBound}}}{)}}{/}{{(}{{{this}{.}{upperBound}}{-}{{this}{.}{lowerBound}}}{)}}}{*}{NUMBER_CONSTANT}}{)}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{paint}{,}{stroke}{,}{outlinePaint}{,}{outlineStroke}{,}{alpha}{)}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{UnknownKeyException}}{(}{{STRING_CONSTANT}{+}{key}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{categoryKeys.length}{!=}{{getCategoryCount}{()}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setDataset}{(}{dataset}{)}}{;}}}
{AST_ROOT_SC2NF{{{PathIterator}}{{iterator2}{=}{{p2}{.}{getPathIterator}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtilities}{.}{htmlEscape}{(}{toolTipText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{zone}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{dataset}{==}{null}}{)}{{{}{{return}{result}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{!}{name.inExterns}}{&&}{{name.globalSets}{==}{NUMBER_CONSTANT}}}{&&}{{name.localSets}{==}{NUMBER_CONSTANT}}}{&&}{{name.aliasingGets}{>}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{Context}}{{rhsContext}{=}{{getContextForNoInOperator}{(}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{topType}{.}{isAllType}{()}}{?}{{getNativeType}{(}{ARRAY_TYPE}{)}}{:}{topType}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{assignLhsChild}{!=}{null}}{)}{{{}{{return}{true}{;}}{}}}}{{return}{{{parent}{!=}{null}}{&&}{{NodeUtil}{.}{isGet}{(}{parent}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{indexOfDot}{=}{{namespace}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{indexOfDot}{=}{{namespace}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{!}{{{type}{.}{restrictByNotNullOrUndefined}{()}}{.}{isSubtype}{(}{{typeRegistry}{.}{getNativeType}{(}{OBJECT_TYPE}{)}}{)}}}}
{AST_ROOT_SC2NF{{return}{false}{;}}}
{AST_ROOT_SC2NF{{return}{TernaryValue.UNKNOWN}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{c}{>}{NUMBER_CONSTANT}}{&&}{{c}{<}{NUMBER_CONSTANT}}}{)}{{{}{{{sb}{.}{append}{(}{c}{)}}{;}}{}}}{else}{{{}{{{appendHexJavaScriptRepresentation}{(}{sb}{,}{c}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{defineSlot}{(}{astParameter}{,}{functionNode}{,}{{jsDocParameter}{.}{getJSType}{()}}{,}{false}{)}}{;}}{{{jsDocParameter}{=}{{jsDocParameter}{.}{getNext}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{token}{!=}{JsDocToken.LP}}{)}{{{}{{{restoreLookAhead}{(}{token}{)}}{;}}{{return}{{reportTypeSyntaxWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{initCompilerOptionsIfTesting}{()}}{;}}{{return}{{toSource}{(}{n}{,}{null}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{toSource}{(}{root}{,}{sourceMap}{,}{{inputSeqNum}{==}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{maybeAliased}}{=}{{NodeUtil}{.}{isExpressionResultUsed}{(}{assignNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{{x}{<}{NUMBER_CONSTANT}}{||}{negativeZero}}{)}}{&&}{{prev}{==}{CHAR_CONS}}}{)}{{{}{{{add}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{cc}{.}{addOp}{(}{opStr}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options.dependencyOptions}{.}{needsManagement}{()}}{&&}{options.closurePass}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{new}{{NodeTraversal}}{(}{compiler}{,}{this}{)}}{)}}{.}{traverseRoots}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{catchBody}{=}{{{blockUnchecked}{(}{catchNode}{)}}{.}{copyInformationFrom}{(}{catchNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Node}}{finallyNode}}{:}{{cfa.finallyMap}{.}{get}{(}{parent}{)}}{)}{{{}{{{cfa}{.}{createEdge}{(}{fromNode}{,}{Branch.ON_EX}{,}{finallyNode}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{recurse}{)}{{{}{{return}{{anyResultsMatch}{(}{n}{,}{MAY_BE_STRING_PREDICATE}{)}}{;}}{}}}{else}{{{}{{return}{{mayBeStringHelper}{(}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{moduleName}{=}{{guessCJSModuleName}{(}{{script}{.}{getSourceFileName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{c}{.}{canInline}{(}{{t}{.}{getScope}{()}}{)}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{{size}{-}{strLen}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{i}{<}{size}}}
{AST_ROOT_SC2NF{{i}{<}{{this}{.}{size}}}}
{AST_ROOT_SC2NF{{{}{{{str}{.}{getChars}{(}{NUMBER_CONSTANT}{,}{width}{,}{buffer}{,}{size}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{availableLocaleList}{()}}{.}{contains}{(}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{escapeJavaStyleString}{(}{out}{,}{str}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{escapeJavaStyleString}{(}{str}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{escapeJavaStyleString}{(}{out}{,}{str}{,}{false}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{escapeJavaStyleString}{(}{str}{,}{false}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{element}{!=}{null}}{)}{{{}{{{type}{=}{{element}{.}{getClass}{()}}}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{m}{!=}{null}}{&&}{{m}{.}{containsKey}{(}{value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{cs}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{new}{{GregorianCalendar}}{(}{mTimeZone}{,}{mLocale}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{chars}{[}{i}{]}}{==}{CHAR_CONS}}{||}{{{chars}{[}{i}{]}}{==}{CHAR_CONS}}}{)}{{{}{{return}{{foundDigit}{&&}{{!}{hasExp}}{&&}{{!}{hasDecPoint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{cal1}{.}{get}{(}{Calendar.HOUR_OF_DAY}{)}}{==}{{cal2}{.}{get}{(}{Calendar.HOUR_OF_DAY}{)}}}}
{AST_ROOT_SC2NF{{{}{{{pos}{+=}{{Character}{.}{charCount}{(}{{Character}{.}{codePointAt}{(}{input}{,}{pt}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{{result}{=}{{lookupMap}{.}{get}{(}{{subSeq}{.}{toString}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{cols}{=}{{{problem}{.}{getUnboundParameters}{()}}{.}{length}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BigDecimal}}{[]}}{{out}{=}{{new}{{{BigDecimal}}{[}}{nRows}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{out}{=}{{new}{{double}{[}}{nRows}{]}}}{;}}}
{AST_ROOT_SC2NF{{int}{{start}{=}{{ignoreObjectiveRows}{?}{{getNumObjectiveFunctions}{()}}{:}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{int}{{j}{=}{{NUMBER_CONSTANT}{*}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPct}{(}{{(}{{{Comparable}}{<}{?}{>}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{f}{,}{min}{,}{max}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{out}{[}{i}{]}}{[}{j}{]}}{=}{{NUMBER_CONSTANT}{*}{{tDistribution}{.}{cumulativeProbability}{(}{{-}{t}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NotStrictlyPositiveException}}{(}{LocalizedFormats.MEAN}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{a}{<=}{b}}{)}}{?}{b}{:}{{(}{{{Float}{.}{isNaN}{(}{{a}{+}{b}}{)}}{?}{Float.NaN}{:}{a}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{fit}{(}{guess}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{sum}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{Iterator}}{{iter}{=}{{entries}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Iterator}}{{iter}{=}{{entries}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Iterator}}{{iter}{=}{{entries}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Iterator}}{{iter}{=}{{entries}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{divisor}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{{isZero}{?}{NaN}{:}{INF}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{divisor}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{divisor.isZero}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{populationLimit}{)}{;}}{{{setElitismRate}{(}{elitismRate}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{chromosomes}{,}{populationLimit}{)}{;}}{{{setElitismRate}{(}{elitismRate}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getChromosomes}{()}}{.}{iterator}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{epsilon}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{columnsToDrop}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{n1n2prod}{=}{{n1}{*}{n2}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{y}{>=}{TWO_POWER_53}}{||}{{y}{<=}{{-}{TWO_POWER_53}}}}{)}{{{}{{return}{{pow}{(}{{-}{x}}{,}{y}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{pow}{(}{{NUMBER_CONSTANT}{*}{FastMath.PI}}{,}{{{-}{NUMBER_CONSTANT}}{*}{dim}}{)}}{*}{{FastMath}{.}{pow}{(}{covarianceMatrixDeterminant}{,}{{-}{NUMBER_CONSTANT}}{)}}{*}{{getExponentTerm}{(}{vals}{)}}}}
{AST_ROOT_SC2NF{{{iterations}{=}{{new}{{Incrementor}}{(}{Integer.MAX_VALUE}{,}{{new}{{MaxIterCallback}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{real}{==}{NUMBER_CONSTANT}}{&&}{{imaginary}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{INF}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{Reporter}}{()}}{.}{smartNullPointerException}{(}{obj}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{getMock}{(}{invocation}{,}{returnTypeGenericMetadata}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{mockSettings}{.}{serializable}{()}}{.}{defaultAnswer}{(}{{returnsDeepStubsAnswerUsing}{(}{returnTypeGenericMetadata}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{outerClassInstance}{==}{null}}{)}{{{}{{return}{{noArgConstructor}{(}{cls}{)}}{;}}{}}}}{{return}{{withParams}{(}{cls}{,}{outerClassInstance}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{{injected}{=}{{{mockCandidateFilter}{.}{filterCandidate}{(}{mocks}{,}{field}{,}{orderedInstanceFields}{,}{instance}{)}}{.}{thenInject}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{mockSettings}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{verificationStarted}{(}{{new}{{MockAwareVerificationMode}}{(}{mock}{,}{mode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{recordDeepStubAnswer}{(}{{newDeepStubMock}{(}{returnTypeGenericMetadata}{,}{{invocation}{.}{getMock}{()}}{)}}{,}{container}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{anyCollection}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Collection}}{.}{class}}{)}}{)}}{.}{returnList}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{anyMap}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Map}}{.}{class}}{)}}{)}}{.}{returnMap}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{anySet}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Set}}{.}{class}}{)}}{)}}{.}{returnSet}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{anyList}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{List}}{.}{class}}{)}}{)}}{.}{returnList}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{String}}{.}{class}}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{.}{returnFor}{(}{clazz}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Object}}{.}{class}}{)}}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Short}}{.}{class}}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Double}}{.}{class}}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Float}}{.}{class}}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Long}}{.}{class}}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Integer}}{.}{class}}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Character}}{.}{class}}{)}}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Byte}}{.}{class}}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Boolean}}{.}{class}}{)}}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{error}{=}{{handleVerifyException}{(}{e}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{VerificationInOrderFailure}}{(}{{join}{(}{STRING_CONSTANT}{,}{{new}{{LocationImpl}}{()}}{,}{{STRING_CONSTANT}{+}{{safelyGetMockName}{(}{{undesired}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}}{,}{{undesired}{.}{getLocation}{()}}{)}}{)}}}
{AST_ROOT_SC2NF{{join}{(}{STRING_CONSTANT}{,}{{new}{{LocationImpl}}{()}}{,}{{STRING_CONSTANT}{+}{{safelyGetMockName}{(}{{undesired}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}}{,}{{undesired}{.}{getLocation}{()}}{,}{scenario}{)}}}
{AST_ROOT_SC2NF{{return}{{iZone}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{iZone}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{iZone}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}{;}}}
{AST_ROOT_SC2NF{{long}{{result}{=}{{iZone}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{iZone}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{iZone}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{iZone}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}{;}}}
{AST_ROOT_SC2NF{{{Partial}}{{newPartial}{=}{{new}{{Partial}}{(}{newTypes}{,}{newValues}{,}{iChronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setZoneRetainFields}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{sm}{!=}{null}}{)}{{{}{{{sm}{.}{checkPermission}{(}{{new}{{JodaTimePermission}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sm}{!=}{null}}{)}{{{}{{{sm}{.}{checkPermission}{(}{{new}{{JodaTimePermission}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sm}{!=}{null}}{)}{{{}{{{sm}{.}{checkPermission}{(}{{new}{{JodaTimePermission}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getAsText}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{abstract}{{DurationField}}{getLeapDurationField}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{result}{=}{{new}{{DateTime}}{(}{{test}{.}{resolve}{(}{{dt}{.}{getMillis}{()}}{,}{DateTimeZone.UTC}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{instant}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{chronology}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TimeOfDay}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{iInstantConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableInstantConverter.INSTANCE}{,}{PartialInstantConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{CalendarConverter.INSTANCE}{,}{DateConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{getMillis}{()}}{<}{{readableInstant}{.}{getMillis}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iInstantConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableInstantConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{CalendarConverter.INSTANCE}{,}{DateConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getMaximumValue}{(}{{{ReadablePartial}}{instant}}{)}{;}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getMinimumValue}{(}{{{ReadablePartial}}{instant}}{)}{;}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{()}{{{}{{return}{{iYearMonthDay}{.}{getField}{(}{iFieldIndex}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMaximumValue}{(}{{getReadablePartial}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMinimumValue}{(}{{getReadablePartial}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsShortText}{(}{{getReadablePartial}{()}}{,}{{get}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsText}{(}{{getReadablePartial}{()}}{,}{{get}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximumValue}{(}{{{ReadablePartial}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{ReadablePartial}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{millisOfSecond}{()}}{.}{compareTo}{(}{{(}{{ReadablePartial}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{millisOfSecond}{()}}{.}{getReadablePartial}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{secondOfMinute}{()}}{.}{compareTo}{(}{{(}{{ReadablePartial}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{secondOfMinute}{()}}{.}{getReadablePartial}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{minuteOfHour}{()}}{.}{compareTo}{(}{{(}{{ReadablePartial}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{minuteOfHour}{()}}{.}{getReadablePartial}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{hourOfDay}{()}}{.}{compareTo}{(}{{(}{{ReadablePartial}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{hourOfDay}{()}}{.}{getReadablePartial}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{MockPartial.EMPTY_INSTANCE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{ReadablePartial}}{instant}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{void}{validate}{(}{{{ReadablePartial}}{instant}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{()}{{{}{{return}{{iTimeOfDay}{.}{getField}{(}{iFieldIndex}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{dayOfMonth}{()}}{.}{compareTo}{(}{{(}{{ReadablePartial}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{dayOfMonth}{()}}{.}{getReadablePartial}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{monthOfYear}{()}}{.}{compareTo}{(}{{(}{{ReadablePartial}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{monthOfYear}{()}}{.}{getReadablePartial}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{year}{()}}{.}{compareTo}{(}{{(}{{ReadablePartial}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{year}{()}}{.}{getReadablePartial}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{MockPartial.EMPTY_INSTANCE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximumValue}{(}{{{ReadablePartial}}{instant}}{,}{{{int}{[]}}{values}}{)}{{{}{{return}{{iField}{.}{getMaximumValue}{(}{instant}{,}{values}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximumValue}{(}{{{ReadablePartial}}{instant}}{)}{{{}{{return}{{iField}{.}{getMaximumValue}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{ReadablePartial}}{instant}}{,}{{{int}{[]}}{values}}{)}{{{}{{return}{{iField}{.}{getMinimumValue}{(}{instant}{,}{values}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{ReadablePartial}}{instant}}{)}{{{}{{return}{{iField}{.}{getMinimumValue}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAsShortText}{(}{{{ReadablePartial}}{partial}}{,}{{{Locale}}{locale}}{)}{{{}{{return}{{iField}{.}{getAsShortText}{(}{partial}{,}{locale}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAsText}{(}{{{ReadablePartial}}{partial}}{,}{{{Locale}}{locale}}{)}{{{}{{return}{{iField}{.}{getAsText}{(}{partial}{,}{locale}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{instant}}}
{AST_ROOT_SC2NF{{{}{{{t}{=}{{{{{new}{{DateTimeFormatterBuilder}}{(}{iChrono}{)}}{.}{append}{(}{{hourMinuteSecondMillis}{()}}{)}}{.}{append}{(}{{offsetElement}{()}}{)}}{.}{toFormatter}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{selectChronology}{(}{{converter}{.}{getChronology}{(}{instant}{,}{chronology}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{selectChronology}{(}{{converter}{.}{getChronology}{(}{instant}{,}{zone}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{selectChronology}{(}{{converter}{.}{getChronology}{(}{instant}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationType}{.}{getMillisType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{millis}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{seconds}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{minutes}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{hours}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{days}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{weeks}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{months}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{years}{()}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{abstract}{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{dayOfMonth}{()}}{.}{getReadableInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{monthOfYear}{()}}{.}{getReadableInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{year}{()}}{.}{getReadableInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{yearOfCentury}{()}}{.}{getReadableInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{centuryOfEra}{()}}{.}{getReadableInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{yearOfEra}{()}}{.}{getReadableInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{era}{()}}{.}{getReadableInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{remainder}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMaximumValue}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMinimumValue}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getLeapAmount}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{isLeap}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{getField}{()}}{.}{getDifferenceAsLong}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{,}{{instant}{.}{getMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{getField}{()}}{.}{getDifference}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{,}{{instant}{.}{getMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsShortText}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsText}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{get}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{iChrono}{.}{era}{()}}{.}{addWrapField}{(}{SMALL_MILLIS}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{round}{(}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{)}}{,}{iChronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{round}{(}{{converter}{.}{getInstantMillis}{(}{instant}{,}{zone}{)}}{,}{iChronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{round}{(}{{converter}{.}{getInstantMillis}{(}{instant}{)}}{,}{iChronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{selectChronology}{(}{chronology}{)}}}{;}}{{{iMillis}{=}{{round}{(}{instant}{,}{iChronology}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setMillis}{(}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{ReadableIntervalConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NullConverter.INSTANCE}{.}{setInto}{(}{m}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{instant}{=}{{{getChronology}{()}}{.}{getDateTimeMillis}{(}{{getMillis}{()}}{,}{hour}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}}{;}}{{{setMillis}{(}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{withUTC}{()}}{.}{dayOfYear}{()}}{.}{remainder}{(}{iCutoverMillis}{)}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{return}{{{getDateMidnightMillis}{(}{year}{,}{monthOfYear}{,}{dayOfMonth}{)}}{+}{millisOfDay}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{zone5}{.}{equals}{(}{zone4}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{DateTimeUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{protected}{DateTimeUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{int}{size}{()}{{{}{{return}{iConverters.length}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{set}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{(}{{NUMBER_CONSTANT}{-}{NUMBER_CONSTANT}}{)}}{*}{DateTimeConstants.MILLIS_PER_DAY}}{,}{{{test}{.}{monthOfYear}{()}}{.}{remainder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{duration}{=}{{new}{{MutableDuration}}{(}{NUMBER_CONSTANT}{,}{type}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{{getChronology}{()}}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{MaskedType}{.}{mask}{(}{{iType}{.}{withChronology}{(}{chrono}{)}}{,}{iMask}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{DurationType}{.}{getYearWeekType}{(}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{DurationType}{.}{getYearMonthType}{(}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{DurationType}{.}{getAllType}{(}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{DurationType}{.}{getAverageYearMonthType}{(}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isPrecise}{()}}{)}{{{}{{return}{{FieldUtils}{.}{safeAdd}{(}{instant}{,}{{{getTotalMillis}{()}}{*}{scalar}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{()}}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{type}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{null}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{duration}{=}{{duration}{.}{withDurationTypeUsingTotalMillis}{(}{type}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{type}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{null}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{Duration.ZERO}{.}{getTotalMillis}{()}}{)}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{Duration.ZERO}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{YearMonthType}{(}{{{Chronology}}{chrono}}{)}{{{}{{super}{(}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{YearWeekType}{(}{{{Chronology}}{chrono}}{)}{{{}{{super}{(}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testGetDurationType_Object}{(}{)}{throws}{{Exception}}{{{}{{{assertEquals}{(}{null}{,}{{NullConverter.INSTANCE}{.}{getDurationType}{(}{null}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{convId}{=}{{{offsetFormatter}{()}}{.}{print}{(}{NUMBER_CONSTANT}{,}{UTC}{,}{offset}{)}}}{;}}{{return}{{fixedOffsetZone}{(}{convId}{,}{offset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{id}{=}{{{offsetFormatter}{()}}{.}{print}{(}{NUMBER_CONSTANT}{,}{UTC}{,}{offset}{)}}}{;}}{{return}{{fixedOffsetZone}{(}{id}{,}{offset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Duration}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstance}{()}}{)}}}{)}{{{}{{return}{{getYearWeekType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstance}{()}}{)}}}{)}{{{}{{return}{{getYearMonthType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstance}{()}}{)}}}{)}{{{}{{return}{{getAllType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstance}{()}}{)}}}{)}{{{}{{return}{{getDayHourType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{type}{=}{{(}{{{type}{==}{null}}{?}{{converter}{.}{getDurationType}{(}{duration}{,}{totalMillisMaster}{)}}{:}{type}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Duration}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{type}{,}{{type}{.}{withChronology}{(}{{ISOChronology}{.}{getInstance}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{type}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ReadWritableTimePeriod}}{duration}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{ReadableDuration}}{)}{object}}{)}}{.}{getMillis}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getAllType}{()}}{,}{true}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{null}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{null}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{()}}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setInto}{(}{{{ReadWritableTimePeriod}}{duration}}{,}{{{Object}}{object}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setInto}{(}{{{ReadWritableTimePeriod}}{duration}}{,}{{{Object}}{object}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setInto}{(}{{{ReadWritableTimePeriod}}{duration}}{,}{{{Object}}{object}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverter}{(}{{new}{{TimePeriod}}{(}{{DurationType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{TimePeriod.ZERO}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{DURATION_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{DURATION_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{DURATION_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{DURATION_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{DurationConverter}}{[]}}{{array}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}}{;}}{{{assertEquals}{(}{DURATION_SIZE}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{DURATION_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{m}{.}{toDurationMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{m}{.}{toDurationMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{duration}{,}{{getDurationType}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{duration}{!=}{null}}{)}{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{{duration}{.}{getMillis}{()}}{,}{{getDurationType}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{PeriodType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{TimePeriod}}{(}{{toDurationMillis}{()}}{,}{{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{TestPeriodType}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{duration}{,}{{getPeriodType}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{duration}{!=}{null}}{)}{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{{duration}{.}{getMillis}{()}}{,}{{getPeriodType}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interval}{!=}{null}}{)}{{{}{{{add}{(}{{interval}{.}{toTimePeriod}{(}{{getPeriodType}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{PeriodType}}{{type}{=}{iType}}{;}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{int}{{hash}{=}{{{getPeriodType}{()}}{.}{hashCode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodType}}{{type}{=}{iType}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{TestPeriodType}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{{type}{=}{{period}{.}{getPeriodType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{mustParse}}{&&}{{!}{{isSupported}{(}{{period}{.}{getPeriodType}{()}}{)}}}}{)}{{{}{{return}{position}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodConverter}}{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getTimePeriodConverter}{(}{{new}{{TimePeriod}}{(}{{PeriodType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverter}{(}{{new}{{TimePeriod}}{(}{{PeriodType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MillisDuration}}{{base}{=}{{new}{{MillisDuration}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getDayHourType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{{PeriodType}}{type}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{<}{NUMBER_CONSTANT}}{)}{{{}{{{parser}{.}{parseMutableTimePeriod}{(}{{period}{.}{getPeriodType}{()}}{,}{str}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{PeriodType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseAllType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearMonthType}{()}}{.}{withMillisRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearMonthType}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearMonthType}{()}}{.}{withMinutesRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearMonthType}{()}}{.}{withHoursRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearMonthType}{()}}{.}{withDaysRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearWeekType}{()}}{.}{withWeeksRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearMonthType}{()}}{.}{withMonthsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getPreciseYearMonthType}{()}}{.}{withYearsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{PeriodType}{.}{getPreciseYearWeekType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{PeriodType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withMillisRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withMinutesRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withHoursRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withDaysRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withWeeksRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withMonthsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{PeriodType}{.}{getAllType}{()}}{.}{withYearsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{test}{.}{getPeriodType}{()}}{,}{{copy}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{test}{.}{getPeriodType}{()}}{,}{{copy}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadablePeriod}}{period}}}
{AST_ROOT_SC2NF{{{ReadablePeriod}}{period}}}
{AST_ROOT_SC2NF{{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverter}{(}{{new}{{Period}}{(}{{PeriodType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{result}{=}{{test}{.}{toMutableTimePeriod}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{()}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadablePeriod}}{period}}}
{AST_ROOT_SC2NF{{{ReadablePeriod}}{period}}}
{AST_ROOT_SC2NF{{public}{void}{testSetDuration_RD}{()}{{{}{{{setPeriod}{(}{{(}{{ReadableDuration}}{)}{null}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Period}}{{test}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{iInstantConverters}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{{iDurationConverters}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{{iPeriodConverters}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{{iIntervalConverters}{.}{size}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ReadablePeriod}}{period}}}
{AST_ROOT_SC2NF{{{ReadablePeriod}}{period}}}
{AST_ROOT_SC2NF{{{Period}}{{duration}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{{cls}{=}{{{ReadablePeriodConverter}}{.}{class}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSetPeriod_2}{()}{{{}{{{setPeriod}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSetPeriod_1}{()}{{{}{{{setPeriod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSetDuration_RD_1}{()}{{{}{{{setDuration}{(}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{PeriodType}{.}{getYearDayType}{(}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{PRECISE_ALL}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{PRECISE_YEAR_WEEK}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{PRECISE_YEAR_MONTH}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getPreciseYearDayType}{()}{{{}{{return}{PRECISE_YEAR_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getPreciseDayHourType}{()}{{{}{{return}{PRECISE_DAY_HOUR}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getYearWeekTypeUTC}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{YEAR_WEEK}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getYearMonthTypeUTC}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{YEAR_MONTH}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getYearDayType}{()}{{{}{{return}{YEAR_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getAllTypeUTC}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{ALL}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getMillisType}{()}{{{}{{return}{MILLIS}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllTypeUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllTypeUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{Duration}{(}{{long}{duration}}{)}{{{}{``;}}{super}{{{iMillis}{=}{duration}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{AbstractDuration}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{long}{{durationMillis}{=}{{DateTimeUtils}{.}{getDurationMillis}{(}{duration}{)}}}{;}}{{{setStartMillis}{(}{{FieldUtils}{.}{safeAdd}{(}{{getEndMillis}{()}}{,}{{-}{durationMillis}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{duration}}}
{AST_ROOT_SC2NF{{public}{Duration}{(}{{long}{duration}}{)}{{{}{{super}{(}{duration}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{long}{{endMillis}{=}{{DateTimeUtils}{.}{getInstantMillis}{(}{end}{)}}}{;}}{{{setEndMillis}{(}{endMillis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{startMillis}{=}{{DateTimeUtils}{.}{getInstantMillis}{(}{start}{)}}}{;}}{{{setStartMillis}{(}{startMillis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setStartMillis}{(}{startInstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{normalize}{()}{{{}{{{setPeriod}{(}{{toDurationMillis}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MutableDateTime}}{(}{{getMillis}{()}}{,}{chronology}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{toMutableDateTime}{()}{{{}{{return}{{new}{{MutableDateTime}}{(}{{getMillis}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{long}{{instant}{=}{{{getChronology}{()}}{.}{getDateTimeMillis}{(}{year}{,}{monthOfYear}{,}{dayOfMonth}{,}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}}{;}}{{{setMillis}{(}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{partial}{,}{values}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{partial}{,}{values}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Chronology}}{{chrono}{=}{{{getChronology}{()}}{.}{withZone}{(}{zone}{)}}}{;}}{{return}{{resolve}{(}{baseInstant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJYearDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJMonthOfYearDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerMonth}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{{chrono}{=}{iChronology}}{;}}}
{AST_ROOT_SC2NF{{CopticYearDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJWeekyearDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJEraDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NoWeekyearZeroField}{(}{{{BaseGJChronology}}{chronology}}{,}{{{DateTimeField}}{field}}{)}{{{}{{super}{(}{chronology}{,}{field}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{TestParseISO}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{TestDateTimeConstants}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{millis}{=}{{{getField}{(}{i}{,}{chrono}{)}}{.}{set}{(}{millis}{,}{{getValue}{(}{i}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{text}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}{}}}}{{return}{{appendSuffix}{(}{{new}{{SimpleAffix}}{(}{text}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{text}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}{}}}}{{return}{{appendPrefix}{(}{{new}{{SimpleAffix}}{(}{text}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeriodFieldAffix}}{{affix}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFieldAffix}}{{affix}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFieldAffix}}{{affix}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFieldAffix}}{suffix}}}
{AST_ROOT_SC2NF{{int}{scan}{(}{{{String}}{periodStr}}{,}{{int}{position}}{)}{;}}}
{AST_ROOT_SC2NF{{int}{parse}{(}{{{String}}{periodStr}}{,}{{int}{position}}{)}{;}}}
{AST_ROOT_SC2NF{{{PeriodFieldAffix}}{suffix}}}
{AST_ROOT_SC2NF{{{PeriodFieldAffix}}{prefix}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{iPrintZeroSetting}{==}{PRINT_ZERO_ALWAYS}}{||}{{{getFieldValue}{(}{period}{)}}{!=}{Long.MAX_VALUE}}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendMillis}{()}{{{}{{{appendField}{(}{MILLIS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendSecondsWithOptionalMillis}{()}{{{}{{{appendField}{(}{SECONDS_OPTIONAL_MILLIS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendSecondsWithMillis}{()}{{{}{{{appendField}{(}{SECONDS_MILLIS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendSeconds}{()}{{{}{{{appendField}{(}{SECONDS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendMinutes}{()}{{{}{{{appendField}{(}{MINUTES}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendHours}{()}{{{}{{{appendField}{(}{HOURS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendDays}{()}{{{}{{{appendField}{(}{DAYS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendWeeks}{()}{{{}{{{appendField}{(}{WEEKS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendMonths}{()}{{{}{{{appendField}{(}{MONTHS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendYears}{()}{{{}{{{appendField}{(}{YEARS}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeComparator}}{{c}{=}{{DateTimeComparator}{.}{getInstance}{(}{{DateTimeFieldType}{.}{hourOfDay}{()}}{,}{{DateTimeFieldType}{.}{dayOfYear}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFieldType}}{lowerLimit}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeComparator}}{getInstance}{()}{{{}{{return}{ALL_INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerMonth}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{iParseField}{==}{null}}{)}{{{}{{{iParseField}{=}{{new}{{PreciseDateTimeField}}{(}{{DateTimeFieldType}{.}{millisOfSecond}{()}}{,}{MillisDurationField.INSTANCE}{,}{{iField}{.}{getDurationField}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfMonth}{()}}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{{gregorianField}{.}{getType}{()}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{weekOfWeekyear}{()}}{,}{weeks}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{ISOYearOfEraDateTimeField}{()}{{{}{{super}{(}{{{GregorianChronology}{.}{getInstanceUTC}{()}}{.}{year}{()}}{,}{{DateTimeFieldType}{.}{yearOfEra}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJMonthOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerMonth}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{field}{,}{{field}{.}{getType}{()}}{)}{;}}{{{iDurationField}{=}{durationField}}{;}}{{{iRangeDurationField}{=}{rangeDurationField}}{;}}{{{iLeapDurationField}{=}{leapDurationField}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{{field}{.}{getType}{()}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJWeekyearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfYear}{()}}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfMonth}{()}}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{months}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{GJEraDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{era}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{era}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{era}{()}}{,}{{eras}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{centuryOfEra}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{centuryOfEra}{()}}{,}{{centuries}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{yearOfCentury}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{yearOfCentury}{()}}{,}{{years}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{yearOfEra}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{yearOfEra}{()}}{,}{{years}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{year}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{{years}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{monthOfYear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{{months}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{weekyear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{{weekyears}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{weekOfWeekyear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{weekOfWeekyear}{()}}{,}{{weeks}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{dayOfYear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{dayOfYear}{()}}{,}{{days}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{dayOfMonth}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{dayOfMonth}{()}}{,}{{days}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{,}{{days}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{halfdayOfDay}{()}}{,}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{clockhourOfHalfday}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{clockhourOfHalfday}{()}}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{hourOfHalfday}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{hourOfHalfday}{()}}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{clockhourOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{clockhourOfDay}{()}}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{hourOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{hourOfDay}{()}}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{minuteOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{minuteOfDay}{()}}{,}{{minutes}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{minuteOfHour}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{minuteOfHour}{()}}{,}{{minutes}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{secondOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{secondOfDay}{()}}{,}{{seconds}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{secondOfMinute}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{secondOfMinute}{()}}{,}{{seconds}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{millisOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{millisOfDay}{()}}{,}{{millis}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{millisOfSecond}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{millisOfSecond}{()}}{,}{{millis}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{yearField}{,}{{DateTimeFieldType}{.}{yearOfEra}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{LinkedDurationField}{(}{{{DurationField}}{durationField}}{,}{{{ImpreciseCutoverField}}{dateTimeField}}{)}{{{}{{super}{(}{durationField}{,}{{durationField}{.}{getType}{()}}{)}{;}}{{{iField}{=}{dateTimeField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{halfdayOfDay}{()}}{,}{{halfdays}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfYear}{()}}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfWeekField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{STRING_CONSTANT}{+}{{getName}{()}}{+}{CHAR_CONS}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{field}{,}{{DateTimeFieldType}{.}{centuryOfEra}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfMonthField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfMonth}{()}}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{{field}{.}{getType}{()}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJWeekyearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{field}{,}{{DateTimeFieldType}{.}{centuryOfEra}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{millis}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{seconds}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{minutes}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{days}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{weeks}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{months}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{{DurationFieldType}{.}{years}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{chrono}{)}{;}}{{{iMonths}{=}{{new}{{ScaledDurationField}}{(}{{chrono}{.}{days}{()}}{,}{{DurationFieldType}{.}{months}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{chrono}{)}{;}}{{{iYears}{=}{{new}{{ScaledDurationField}}{(}{{chrono}{.}{days}{()}}{,}{{DurationFieldType}{.}{years}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{ISOYearOfEraDateTimeField.INSTANCE}{,}{{DateTimeFieldType}{.}{centuryOfEra}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{{chronology}{.}{getAverageMillisPerMonth}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJMonthOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{{chrono}{.}{millisPerMonth}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{size}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{values}{=}{{new}{{int}{[}}{{size}{()}}{]}}}{;}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{NUMBER_CONSTANT}}{,}{{isize}{=}{{size}{()}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getAsShortText}{(}{partial}{,}{{partial}{.}{get}{(}{{getType}{()}}{)}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getAsText}{(}{partial}{,}{{partial}{.}{get}{(}{{getType}{()}}{)}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{size}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{size}{(}{)}{;}}}
{AST_ROOT_SC2NF{{partial}{.}{isSupported}{(}{{iField}{.}{getType}{()}}{)}}}
{AST_ROOT_SC2NF{{partial}{.}{isSupported}{(}{{iField}{.}{getType}{()}}{)}}}
{AST_ROOT_SC2NF{{partial}{.}{isSupported}{(}{{iField}{.}{getType}{()}}{)}}}
{AST_ROOT_SC2NF{{public}{int}{size}{()}{{{}{{return}{{{getFields}{()}}{.}{length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{era}{()}{{{}{{return}{ERA_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{centuryOfEra}{()}{{{}{{return}{CENTURY_OF_ERA_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{yearOfCentury}{()}{{{}{{return}{YEAR_OF_CENTURY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{yearOfEra}{()}{{{}{{return}{YEAR_OF_ERA_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{year}{()}{{{}{{return}{YEAR_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{monthOfYear}{()}{{{}{{return}{MONTH_OF_YEAR_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{weekyearOfCentury}{()}{{{}{{return}{WEEKYEAR_OF_CENTURY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{weekyear}{()}{{{}{{return}{WEEKYEAR_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{weekOfWeekyear}{()}{{{}{{return}{WEEK_OF_WEEKYEAR_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{dayOfYear}{()}{{{}{{return}{DAY_OF_YEAR_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{dayOfMonth}{()}{{{}{{return}{DAY_OF_MONTH_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{dayOfWeek}{()}{{{}{{return}{DAY_OF_WEEK_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{halfdayOfDay}{()}{{{}{{return}{HALFDAY_OF_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{clockhourOfHalfday}{()}{{{}{{return}{CLOCKHOUR_OF_HALFDAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{hourOfHalfday}{()}{{{}{{return}{HOUR_OF_HALFDAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{clockhourOfDay}{()}{{{}{{return}{CLOCKHOUR_OF_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{hourOfDay}{()}{{{}{{return}{HOUR_OF_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{minuteOfDay}{()}{{{}{{return}{MINUTE_OF_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{minuteOfHour}{()}{{{}{{return}{MINUTE_OF_HOUR_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{secondOfDay}{()}{{{}{{return}{SECOND_OF_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{secondOfMinute}{()}{{{}{{return}{SECOND_OF_MINUTE_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{millisOfDay}{()}{{{}{{return}{MILLIS_OF_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{millisOfSecond}{()}{{{}{{return}{MILLIS_OF_SECOND_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{otherValue}{=}{{{{getFieldType}{()}}{.}{getField}{(}{chrono}{)}}{.}{get}{(}{{instant}{.}{getMillis}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{eras}{()}{{{}{{return}{ERAS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{centuries}{()}{{{}{{return}{CENTURIES_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{years}{()}{{{}{{return}{YEARS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{months}{()}{{{}{{return}{MONTHS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{weekyears}{()}{{{}{{return}{WEEKYEARS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{weeks}{()}{{{}{{return}{WEEKS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{days}{()}{{{}{{return}{DAYS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{halfdays}{()}{{{}{{return}{HALFDAYS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{hours}{()}{{{}{{return}{HOURS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{minutes}{()}{{{}{{return}{MINUTES_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{seconds}{()}{{{}{{return}{SECONDS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{millis}{()}{{{}{{return}{MILLIS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isAfter}{(}{{(}{{ReadableInstant}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isBefore}{(}{{(}{{ReadableInstant}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isAfter}{(}{{(}{{ReadableInstant}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isBefore}{(}{{(}{{ReadableInstant}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{instant}{==}{null}}{)}{{{}{{return}{{isAfterNow}{()}}{;}}{}}}}{{return}{{isAfter}{(}{{instant}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{instant}{==}{null}}{)}{{{}{{return}{{isBeforeNow}{()}}{;}}{}}}}{{return}{{isBefore}{(}{{instant}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{instant}{==}{null}}{)}{{{}{{return}{{containsNow}{()}}{;}}{}}}}{{return}{{contains}{(}{{instant}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{standard}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{standard}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{standard}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{standard}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{result}{=}{{test}{.}{withPeriodType}{(}{{PeriodType}{.}{standard}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{dayTime}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Period}}{{test}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{ReadableIntervalConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{standard}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{standard}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{standard}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{standard}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{standard}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{millis}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{millis}{()}}{,}{millis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{seconds}{()}}{,}{seconds}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{minutes}{()}}{,}{minutes}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{hours}{()}}{,}{hours}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{days}{()}}{,}{days}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{weeks}{()}}{,}{weeks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{months}{()}}{,}{months}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setField}{(}{{DurationFieldType}{.}{years}{()}}{,}{years}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setPeriod}{(}{duration}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{type}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{null}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MutablePeriod}{(}{{{PeriodType}}{type}}{)}{{{}{{super}{(}{NUMBER_CONSTANT}{,}{type}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{dayTime}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{()}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{type}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{null}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setMillis}{(}{{period}{.}{addTo}{(}{{getMillis}{()}}{,}{scalar}{,}{{getChronology}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{year}{()}}{.}{compareTo}{(}{{(}{{ReadableInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{chrono}{=}{{DateTimeUtils}{.}{getChronology}{(}{chrono}{)}}}{;}}{{{setStartMillis}{(}{{chrono}{.}{add}{(}{{getEndMillis}{()}}{,}{period}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{chrono}{=}{{DateTimeUtils}{.}{getChronology}{(}{chrono}{)}}}{;}}{{{setEndMillis}{(}{{chrono}{.}{add}{(}{{getStartMillis}{()}}{,}{period}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setMillis}{(}{{{getChronology}{()}}{.}{add}{(}{{getMillis}{()}}{,}{period}{,}{scalar}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{standard}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{setYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{millis}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{seconds}{,}{NUMBER_CONSTANT}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{minutes}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{hours}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{days}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{weeks}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{months}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{years}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}}
{AST_ROOT_SC2NF{{{}{{{duration}{.}{setPeriod}{(}{{(}{{Period}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iIntervalConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableIntervalConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setInterval}{(}{{getStartMillis}{()}}{,}{endInstant}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setInterval}{(}{startInstant}{,}{{getEndMillis}{()}}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{toDurationMillis}{()}{{{}{{return}{{(}{{NUMBER_CONSTANT}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{toDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{toDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{INTERVAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{INTERVAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{INTERVAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{INTERVAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{IntervalConverter}}{[]}}{{array}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}}{;}}{{{assertEquals}{(}{INTERVAL_SIZE}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{toDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{toDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{long}{toDurationMillis}{()}{{{}{{return}{{(}{{NUMBER_CONSTANT}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTime}}{getEnd}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{getStart}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME1}{)}}}{;}}{{{assertSame}{(}{Duration.ZERO}{,}{{test}{.}{toDuration}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withEnd}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{.}{withEnd}{(}{{new}{{Instant}}{(}{{TEST_TIME1}{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withEnd}{(}{{new}{{Instant}}{(}{{TEST_TIME2}{-}{NUMBER_CONSTANT}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withStart}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{.}{withStart}{(}{{new}{{Instant}}{(}{{TEST_TIME2}{+}{NUMBER_CONSTANT}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withStart}{(}{{new}{{Instant}}{(}{{TEST_TIME1}{-}{NUMBER_CONSTANT}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME1}{)}}}{;}}{{{assertSame}{(}{Duration.ZERO}{,}{{test}{.}{toDuration}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{(}{{ReadableInterval}}{)}{object}}{)}}{)}}{.}{toDurationMillis}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iValues}{=}{{chronology}{.}{get}{(}{this}{,}{millis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iValues}{=}{{chronology}{.}{get}{(}{this}{,}{millis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iValues}{=}{{chronology}{.}{get}{(}{this}{,}{instant}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{resolved}{=}{{chrono}{.}{set}{(}{this}{,}{instantMillis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Chronology}}{{chrono}{=}{{{getChronology}{()}}{.}{withZone}{(}{zone}{)}}}{;}}{{return}{{chrono}{.}{set}{(}{this}{,}{baseInstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setMillis}{(}{{{getChronology}{()}}{.}{add}{(}{period}{,}{{getMillis}{()}}{,}{scalar}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{period}{==}{null}}{)}{{{}{{{iStartMillis}{=}{iEndMillis}}{;}}{}}}{else}{{{}{{{iStartMillis}{=}{{chrono}{.}{add}{(}{period}{,}{iEndMillis}{,}{{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{period}{==}{null}}{)}{{{}{{{iEndMillis}{=}{iStartMillis}}{;}}{}}}{else}{{{}{{{iEndMillis}{=}{{chrono}{.}{add}{(}{period}{,}{iStartMillis}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{{instant}{=}{{{getChronology}{()}}{.}{add}{(}{period}{,}{{getMillis}{()}}{,}{scalar}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{==}{null}}{)}{{{}{{{setValues}{(}{{new}{{int}{[}}{{size}{()}}{]}}{)}}{;}}{}}}{else}{{{}{{{setPeriodInternal}{(}{period}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{long}{{endMillis}{=}{{chrono}{.}{add}{(}{this}{,}{startMillis}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iValues}{=}{{chrono}{.}{get}{(}{this}{,}{startMillis}{,}{endMillis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setStartMillis}{(}{{{getChronology}{()}}{.}{add}{(}{period}{,}{{getEndMillis}{()}}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setEndMillis}{(}{{{getChronology}{()}}{.}{add}{(}{period}{,}{{getStartMillis}{()}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{super}{.}{addPeriod}{(}{period}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{partial}{==}{null}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{withMillis}{(}{{{getChronology}{()}}{.}{set}{(}{partial}{,}{{getMillis}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTime}}{{result}{=}{{test}{.}{toDateTimeUsing}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{millis}{=}{{{{this}{.}{iChrono}}{.}{withUTC}{()}}{.}{set}{(}{partial}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{printTo}{(}{null}{,}{out}{,}{millis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{{{this}{.}{iChrono}}{.}{withUTC}{()}}{.}{set}{(}{partial}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{result}{=}{{test}{.}{toDateTimeUsing}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Period}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{,}{type}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Period}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MutableInterval}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Interval}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{test4}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{,}{{Chronology}{.}{getGJ}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{endInstant}{==}{{getEndMillis}{()}}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{Interval}}{(}{{getStartMillis}{()}}{,}{endInstant}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{startInstant}{==}{{getStartMillis}{()}}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{Interval}}{(}{startInstant}{,}{{getEndMillis}{()}}{,}{{getChronology}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{.}{set}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{.}{set}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{f}}}
{AST_ROOT_SC2NF{{{Object}}{f}}}
{AST_ROOT_SC2NF{{{Object}}{f}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendEraText}{()}{{{}{{return}{{appendText}{(}{{DateTimeFieldType}{.}{era}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendMonthOfYearShortText}{()}{{{}{{return}{{appendShortText}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendMonthOfYearText}{()}{{{}{{return}{{appendText}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendDayOfWeekShortText}{()}{{{}{{return}{{appendShortText}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendDayOfWeekText}{()}{{{}{{return}{{appendText}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendHalfdayOfDayText}{()}{{{}{{return}{{appendText}{(}{{DateTimeFieldType}{.}{halfdayOfDay}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{text}}}
{AST_ROOT_SC2NF{{char}{c}}}
{AST_ROOT_SC2NF{{{Object}}{element}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{{DateTimePrinter}}{printer}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{formatter}}}
{AST_ROOT_SC2NF{{{Chronology}}{chrono}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{zone}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{{String}}{text}}{)}{{{}{{return}{{mParser}{.}{parseMutableDateTime}{(}{text}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{{String}}{text}}{)}{{{}{{return}{{mParser}{.}{parseDateTime}{(}{text}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{parseMillis}{(}{{{String}}{text}}{)}{{{}{{return}{{mParser}{.}{parseMillis}{(}{text}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{long}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{ReadableInstant}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{FParser}{(}{{{DateTimeParser}}{parser}}{)}{{{}{``;}}{super}{{{mParser}{=}{parser}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{{String}}{text}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{{String}}{text}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{parseMillis}{(}{{{String}}{text}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{long}{instant}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{ReadableInstant}}{instant}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{FPrinter}{(}{{{DateTimePrinter}}{printer}}{)}{{{}{``;}}{super}{{{mPrinter}{=}{printer}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{{Chronology}{.}{getISOUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{PartialConverter}}{[]}}{{array}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}}{;}}{{{assertEquals}{(}{PARTIAL_SIZE}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{PARTIAL_SIZE}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iPartialConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadablePartialConverter.INSTANCE}{,}{ReadableInstantConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{CalendarConverter.INSTANCE}{,}{DateConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{InternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{(}{{{Chronology}}{chronology}}{)}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{this}{,}{{UnsupportedDurationField}{.}{getInstance}{(}{{getDurationType}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{(}{{{Chronology}}{chronology}}{)}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{this}{,}{{UnsupportedDurationField}{.}{getInstance}{(}{{getDurationType}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{InternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MillisDurationField.INSTANCE}{.}{getDifferenceAsLong}{(}{Long.MAX_VALUE}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{ArithmeticException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FieldUtils}{.}{safeMultiply}{(}{value}{,}{{getUnitMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FieldUtils}{.}{safeMultiply}{(}{value}{,}{iUnitMillis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{BaseDateTimeField}}{{field}{=}{{new}{{MockStandardBaseDateTimeField}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PreciseDateTimeField}}{{field}{=}{{new}{{MockPreciseDateTimeField}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{dateTimeParser}{=}{{{ISODateTimeFormat}{.}{getInstance}{(}{chrono}{)}}{.}{dateTimeParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{PARIS}{,}{{DateTimeUtils}{.}{getZone}{(}{PARIS}{)}}{)}}{;}}{{{assertEquals}{(}{{DateTimeZone}{.}{getDefault}{()}}{,}{{DateTimeUtils}{.}{getZone}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{printTimeZone}{(}{{getOffset}{(}{instant}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{printTimeZone}{(}{{getOffset}{(}{instant}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{convId}{=}{{printTimeZone}{(}{offset}{)}}}{;}}{{return}{{fixedOffsetZone}{(}{convId}{,}{offset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{parsers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{Separator}}{finish}{(}{{{BasePeriodFormatter}}{after}}{)}{{{}{{{iAfter}{=}{after}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BasePeriodFormatter}}{before}}}
{AST_ROOT_SC2NF{{{BasePeriodFormatter}}{{composite}{=}{{createComposite}{(}{formatters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatterBuilder}}{{builder}{=}{{new}{{DateTimeFormatterBuilder}}{(}{iLocale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{p}{=}{{{ISODateTimeFormat}{.}{getInstance}{()}}{.}{hourMinuteSecondFraction}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{DateTimeFormat}{.}{getInstance}{(}{locale}{)}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{DateTimeFormat}{.}{getInstance}{()}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{{bucket}{=}{{new}{{ParseBucket}}{(}{instantLocal}{,}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{{bucket}{=}{{new}{{ParseBucket}}{(}{NUMBER_CONSTANT}{,}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{{bucket}{=}{{new}{{ParseBucket}}{(}{instantLocal}{,}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{permission}{instanceof}{{JodaTimePermission}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{permission}{instanceof}{{JodaTimePermission}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{permission}{instanceof}{{JodaTimePermission}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{iFieldType}{>=}{SECONDS_MILLIS}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSeparator}{(}{text}{,}{finalText}{,}{null}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSeparator}{(}{text}{,}{text}{,}{null}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{offset}{=}{{-}{{(}{int}{)}{{{offsetFormatter}{()}}{.}{parseMillis}{(}{convId}{,}{{ISOChronology}{.}{getInstance}{(}{UTC}{)}}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{offset}{=}{{-}{{(}{int}{)}{{{offsetFormatter}{()}}{.}{parseMillis}{(}{id}{,}{{ISOChronology}{.}{getInstance}{(}{UTC}{)}}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{itimeStyle}{=}{{selectStyle}{(}{timeStyle}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeField}}{{field}{=}{{iFieldType}{.}{getField}{(}{chronoLocal}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{printOffset}{(}{{getOffset}{(}{instant}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{printOffset}{(}{{getOffset}{(}{instant}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{id}{=}{{printOffset}{(}{offset}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{MutableDateTime}}{(}{{{(}{{(}{{DateTimeParser}}{)}{this}}{)}}{.}{parseMillis}{(}{text}{,}{millis}{,}{chrono}{)}}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MutableDateTime}}{(}{{{(}{{(}{{DateTimeParser}}{)}{this}}{)}}{.}{parseMillis}{(}{text}{,}{chrono}{)}}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTime}}{(}{{{(}{{(}{{DateTimeParser}}{)}{this}}{)}}{.}{parseMillis}{(}{text}{,}{millis}{,}{chrono}{)}}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{DateTime}}{(}{{{(}{{(}{{DateTimeParser}}{)}{this}}{)}}{.}{parseMillis}{(}{text}{,}{chrono}{)}}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{(}{{DateTimePrinter}}{)}{this}}{)}}{.}{print}{(}{millis}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{{(}{{(}{{DateTimePrinter}}{)}{this}}{)}}{.}{printTo}{(}{out}{,}{millis}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{{(}{{(}{{DateTimePrinter}}{)}{this}}{)}}{.}{printTo}{(}{buf}{,}{millis}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{{String}}{text}}{,}{{{ReadableInstant}}{instant}}{)}{{{}{{return}{{iParser}{.}{parseMutableDateTime}{(}{text}{,}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{{String}}{text}}{,}{{{Chronology}}{chrono}}{)}{{{}{{return}{{iParser}{.}{parseMutableDateTime}{(}{text}{,}{chrono}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{{String}}{text}}{,}{{{ReadableInstant}}{instant}}{)}{{{}{{return}{{iParser}{.}{parseDateTime}{(}{text}{,}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{{String}}{text}}{,}{{{Chronology}}{chrono}}{)}{{{}{{return}{{iParser}{.}{parseDateTime}{(}{text}{,}{chrono}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{iParser}{.}{parseMillis}{(}{text}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{iParser}{.}{parseInto}{(}{instant}{,}{text}{,}{position}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{long}{instant}}{,}{{{Chronology}}{chrono}}{)}{{{}{{return}{{iPrinter}{.}{print}{(}{instant}{,}{chrono}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{long}{instant}}{,}{{{DateTimeZone}}{zone}}{)}{{{}{{return}{{iPrinter}{.}{print}{(}{instant}{,}{zone}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{iPrinter}{.}{printTo}{(}{out}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iPrinter}{.}{printTo}{(}{buf}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iPrinter}{.}{printTo}{(}{out}{,}{instant}{,}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iPrinter}{.}{printTo}{(}{buf}{,}{instant}{,}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{printTo}{(}{{{Writer}}{out}}{,}{{long}{instant}}{)}{throws}{{IOException}}{{{}{{{iPrinter}{.}{printTo}{(}{out}{,}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{iPrinter}{.}{printTo}{(}{out}{,}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{iParsedLengthEstimate}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{iParsedLengthEstimate}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{DateTimePrinter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{{{DateTimePrinter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{estimatePrintedLength}{()}{{{}{{return}{iPrintedLengthEstimate}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{DateTimeFormatter}}{[]}}{printers}}}
{AST_ROOT_SC2NF{{public}{int}{estimatePrintedLength}{()}{{{}{{return}{{iShortFormat}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{{estimatePrintedLength}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{iMaxDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimatePrintedLength}{()}{{{}{{return}{iMaxDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{{estimatePrintedLength}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimatePrintedLength}{()}{{{}{{return}{{iShort}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimatePrintedLength}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimatePrintedLength}{()}{{{}{{return}{iMaxParsedDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimatePrintedLength}{()}{{{}{{return}{iMaxParsedDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{iMaxParsedDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{public}{int}{estimateParsedLength}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{PeriodFormatter}}{[]}}{{parsers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{Separator}}{finish}{(}{{{PeriodFormatter}}{after}}{)}{{{}{{{iAfter}{=}{after}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{before}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{composite}{=}{{createComposite}{(}{formatters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{remainder}{(}{{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMaximumValue}{(}{{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMinimumValue}{(}{{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getLeapAmount}{(}{{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{isLeap}{(}{{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsShortText}{(}{{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsText}{(}{{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{get}{(}{{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{==}{{getValue}{(}{index}{)}}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fields.era}{=}{ThaiBuddhistEraDateTimeField.INSTANCE}}{;}}}
{AST_ROOT_SC2NF{{{}{{{zone}{=}{{DateTimeZone}{.}{forTimeZone}{(}{{cal}{.}{getTimeZone}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}{.}{setDefault}{(}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{ISOChronology}{.}{getInstance}{(}{{DateTimeZone}{.}{forID}{(}{id}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{zones}{[}{{i}{++}}{]}}{=}{{new}{{ZoneData}}{(}{id}{,}{{DateTimeZone}{.}{forID}{(}{id}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{z}{=}{{DateTimeZone}{.}{forID}{(}{str}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{zone}{.}{getID}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfMonthField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfMonth}{()}}{,}{TestGJChronology.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{dayOfWeek}{=}{{(}{int}{)}{{TestGJChronology}{.}{mod}{(}{{iChronology}{.}{fixedFromMillis}{(}{millis}{)}}{,}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfWeekField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{,}{TestGJChronology.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfYear}{()}}{,}{TestGJChronology.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{{DateTimeFormat}{.}{forPattern}{(}{pattern}{)}}{.}{withLocale}{(}{locale}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{DateTimeFormat}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{-}{{(}{int}{)}{{{{offsetFormatter}{()}}{.}{withChronology}{(}{chrono}{)}}{.}{parseMillis}{(}{str}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{{DateTimeFormat}{.}{forPattern}{(}{pattern}{)}}{.}{withLocale}{(}{locale}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{DateTimeFormat}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{cOffsetFormatter}{.}{withZone}{(}{iZone}{)}}{.}{print}{(}{millis}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parse}{(}{{ISODateTimeFormat}{.}{dateTimeParser}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{p}}}
{AST_ROOT_SC2NF{{{{DateTimePrinter}}{[]}}{printers}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TimeZoneOffset}}{(}{zeroOffsetText}{,}{showSeparators}{,}{minFields}{,}{maxFields}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TimeZonePrinter}}{(}{true}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TimeZonePrinter}}{(}{false}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldType}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{new}{{TextField}}{(}{fieldType}{,}{true}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldType}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{new}{{TextField}}{(}{fieldType}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{formatter}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{formatter}{.}{getPrinter}{()}}{,}{{formatter}{.}{getParser}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{p}{=}{{ISODateTimeFormat}{.}{hourMinuteSecondFraction}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{g}{.}{parseMutableDateTime}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{g}{.}{parseDateTime}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{bucket}{.}{saveField}{(}{iType}{,}{year}{)}}{;}}}
{AST_ROOT_SC2NF{{{append0}{(}{field}{,}{field}{)}}{;}}}
{AST_ROOT_SC2NF{{{append0}{(}{literal}{,}{literal}{)}}{;}}}
{AST_ROOT_SC2NF{{{append0}{(}{{formatter}{.}{getPrinter}{()}}{,}{{formatter}{.}{getParser}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{formatter}{=}{{toFormatter}{(}{iElementPairs}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{PeriodParser}}{toParser}{()}{{{}{{return}{{{toFormatter}{()}}{.}{getParser}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodPrinter}}{toPrinter}{()}{{{}{{return}{{{toFormatter}{()}}{.}{getPrinter}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{f}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ISOPeriodFormat}{.}{standard}{()}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{periodParser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{ISOPeriodFormat}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InputStream}}{{in}{=}{{new}{{ByteArrayInputStream}}{(}{{data}{.}{getBytes}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{PeriodFormat}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{BasicYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{BasicYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{GJYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{CopticYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iZone}{==}{zone}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{iLocale}{,}{false}{,}{iChrono}{,}{zone}{,}{iPivotYear}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iChrono}{==}{chrono}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{iLocale}{,}{iOffsetParsed}{,}{chrono}{,}{iZone}{,}{iPivotYear}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iOffsetParsed}{==}{true}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{iLocale}{,}{true}{,}{iChrono}{,}{null}{,}{iPivotYear}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{locale}{,}{iOffsetParsed}{,}{iChrono}{,}{iZone}{,}{iPivotYear}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_UTC}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendTwoDigitWeekyear}{(}{pivot}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendTwoDigitYear}{(}{pivot}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{STRING_CONSTANT}{.}{equals}{(}{text}{)}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalFieldValueException}}{(}{{DateTimeFieldType}{.}{era}{()}}{,}{text}{)}}{;}}{}}}}{{return}{instant}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{{throw}{{new}{{IllegalFieldValueException}}{(}{{getType}{()}}{,}{text}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FieldUtils}{.}{verifyValueBounds}{(}{{DateTimeFieldType}{.}{millisOfDay}{()}}{,}{millisOfDay}{,}{NUMBER_CONSTANT}{,}{DateTimeConstants.MILLIS_PER_DAY}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{STRING_CONSTANT}{.}{equals}{(}{text}{)}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalFieldValueException}}{(}{{DateTimeFieldType}{.}{era}{()}}{,}{text}{)}}{;}}{}}}}{{return}{instant}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalFieldValueException}}{(}{{DateTimeFieldType}{.}{halfdayOfDay}{()}}{,}{text}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalFieldValueException}}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{,}{text}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalFieldValueException}}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{text}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalFieldValueException}}{(}{{DateTimeFieldType}{.}{era}{()}}{,}{text}{)}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{TestIllegalFieldValueException}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumDaysInFirstWeek}{()}{{{}{{return}{iMinDaysInFirstWeek}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{test}{=}{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{protected}{DateTimeFormat}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{protected}{PeriodFormat}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{protected}{ISOPeriodFormat}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{cfg}{.}{setProperty}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{{{getClass}{()}}{.}{getName}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{fields.era}{=}{ERA_FIELD}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{length}{,}{{PeriodType}{.}{standard}{()}}{,}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{length}{,}{{{PeriodType}{.}{time}{()}}{.}{withMillisRemoved}{()}}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{iField}{.}{compareTo}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{{iField}{.}{hashCode}{()}}{==}{{{{ISOChronology}{.}{getInstance}{()}}{.}{minutes}{()}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{iField}{.}{equals}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{GJChronology}{.}{getInstanceUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{MillisDurationField.INSTANCE}{.}{compareTo}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{seconds}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{iField}{.}{compareTo}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{{iField}{.}{hashCode}{()}}{==}{{{{ISOChronology}{.}{getInstance}{()}}{.}{minutes}{()}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{iField}{.}{equals}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{verifyValueBounds}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{monthOfYear}{()}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{ISOChronology}{.}{getInstance}{(}{{ZONES}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{ISOChronology}{.}{getInstance}{(}{{ZONES}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{GregorianChronology}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{actual}{=}{{ReadablePartialConverter.INSTANCE}{.}{getPartialValues}{(}{tod}{,}{{new}{{TimeOfDay}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{ISOChronology}{.}{getInstance}{(}{PARIS}{)}}{)}}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{actual}{=}{{NullConverter.INSTANCE}{.}{getPartialValues}{(}{tod}{,}{null}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{ms}{,}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{ms}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{NUMBER_CONSTANT}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{type}{.}{getField}{(}{{CopticChronology}{.}{getInstanceUTC}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InternalError}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{actual}{=}{{StringConverter.INSTANCE}{.}{getPartialValues}{(}{tod}{,}{STRING_CONSTANT}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{type}{.}{getField}{(}{{CopticChronology}{.}{getInstanceUTC}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InternalError}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{{new}{{Duration}}{(}{length}{)}}{,}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{{new}{{Duration}}{(}{length}{)}}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{length}{,}{{PeriodType}{.}{standard}{()}}{,}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{length}{,}{{{PeriodType}{.}{time}{()}}{.}{withMillisRemoved}{()}}{,}{{ISOChronology}{.}{getInstance}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadableIntervalConverter.INSTANCE}{.}{setInto}{(}{m}{,}{i}{,}{{CopticChronology}{.}{getInstance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{getChronology}{()}{{{}{{return}{{{ChronologyType}{.}{iso}{()}}{.}{getChronologyUTC}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{{{ChronologyType}{.}{iso}{()}}{.}{getChronologyUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{iStartMillis}{=}{{iEndMillis}{=}{{DateTimeUtils}{.}{currentTimeMillis}{()}}}}{;}}{{{iChronology}{=}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{iZone}{=}{zone}}{;}}}
{AST_ROOT_SC2NF{{{iZone}{=}{zone}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newValues}{=}{{{getField}{(}{index}{)}}{.}{add}{(}{this}{,}{index}{,}{newValues}{,}{{FieldUtils}{.}{safeMultiply}{(}{{period}{.}{getValue}{(}{i}{)}}{,}{scalar}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{newValues}{=}{{{getField}{(}{index}{)}}{.}{add}{(}{this}{,}{index}{,}{newValues}{,}{{FieldUtils}{.}{safeMultiply}{(}{{period}{.}{getValue}{(}{i}{)}}{,}{scalar}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{newValues}{=}{{{getField}{(}{index}{)}}{.}{addWrapPartial}{(}{this}{,}{index}{,}{newValues}{,}{{FieldUtils}{.}{safeMultiply}{(}{{period}{.}{getValue}{(}{i}{)}}{,}{scalar}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{val}{<}{NUMBER_CONSTANT}}{)}{{{}{{{System.out}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{val}{<}{NUMBER_CONSTANT}}{)}{{{}{{{System.out}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{cal}{.}{setTime}{(}{{convertToDate}{(}{cal}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{setTime}{(}{{convertToDate}{(}{cal}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{write}{(}{{print}{(}{{instant}{-}{displayOffset}}{,}{displayZone}{,}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{buf}{.}{append}{(}{{print}{(}{{instant}{-}{displayOffset}}{,}{displayZone}{,}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ISOChronology}{.}{getInstance}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iStartMillis}{=}{{iEndMillis}{=}{{DateTimeUtils}{.}{currentTimeMillis}{()}}}}{;}}{{{iChronology}{=}{{ISOChronology}{.}{getInstance}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{ISOChronology}{.}{getInstance}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ISOChronology}{.}{getInstance}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{getChronology}{()}{{{}{{return}{{ISOChronology}{.}{getInstanceUTC}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{ISOChronology}{.}{getInstance}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{iChronology}{.}{getDaysInYearMax}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{iChronology}{.}{getDaysInYearMax}{()}}{;}}}
{AST_ROOT_SC2NF{{{FieldUtils}{.}{verifyValueBounds}{(}{this}{,}{month}{,}{MIN}{,}{iMax}{)}}{;}}}
{AST_ROOT_SC2NF{{long}{{difference}{=}{{{{{(}{{minuendYear}{-}{subtrahendYear}}{)}}{*}{{(}{{(}{long}{)}{iMax}}{)}}}{+}{minuendMonth}}{-}{subtrahendMonth}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{set}{(}{instant}{,}{{FieldUtils}{.}{getWrappedValue}{(}{{get}{(}{instant}{)}}{,}{months}{,}{MIN}{,}{iMax}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{{{EthiopicChronology}{.}{getInstanceUTC}{()}}{.}{months}{()}}{.}{isPrecise}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{{SKIP}{=}{{NUMBER_CONSTANT}{*}{MILLIS_PER_DAY}}}{;}}{{return}{{new}{{TestSuite}}{(}{{{TestEthiopicChronology}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{{{CopticChronology}{.}{getInstanceUTC}{()}}{.}{months}{()}}{.}{isPrecise}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{{SKIP}{=}{{NUMBER_CONSTANT}{*}{MILLIS_PER_DAY}}}{;}}{{return}{{new}{{TestSuite}}{(}{{{TestCopticChronology}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fields.monthOfYear}{=}{{new}{{IslamicMonthOfYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{date}{.}{getHours}{()}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{date}{.}{getHours}{()}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{fields.monthOfYear}{=}{{new}{{BasicMonthOfYearDateTimeField}}{(}{this}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{+}{OFFSET}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{+}{OFFSET}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{+}{OFFSET}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{+}{OFFSET}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJEraDateTimeField}{(}{{{BasicChronology}}{chronology}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{era}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJMonthOfYearDateTimeField}{(}{{{BasicChronology}}{chronology}}{)}{{{}{{super}{(}{chronology}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BasicChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{len}{=}{{parser}{.}{estimateParsedLength}{()}}}{;}}{{if}{(}{{len}{>}{est}}{)}{{{}{{{est}{=}{len}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{long}{{instant}{=}{{chronology}{.}{getDateTimeMillis}{(}{NUMBER_CONSTANT}{,}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{(}{PARIS}{)}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{forInstant}{(}{{(}{{Object}}{)}{null}}{,}{JULIAN_LONDON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{forInstant}{(}{date}{,}{JULIAN_LONDON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{forInstant}{(}{TEST_TIME2}{,}{JULIAN_LONDON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{now}{(}{JULIAN_LONDON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{fromMillisOfDay}{(}{TEST_TIME1}{,}{JULIAN_LONDON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isSupported}{(}{{DurationFieldType}{.}{eras}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateMidnight}}{{test}{=}{{base}{.}{toDateMidnight}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{test}{=}{{base}{.}{toDateTimeAtCurrentTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{test}{=}{{base}{.}{toDateTimeAtMidnight}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSize}{()}{{{}{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{test}{.}{size}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{new}{{LocalDate}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{test}{=}{{base}{.}{toDateTimeToday}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{getApproxMillisAtEpochDividedByTwo}{()}{{{}{{return}{{{(}{{-}{MILLIS_YEAR_1}}{)}}{/}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{bucket}{.}{computeMillis}{(}{true}{,}{text}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{bucket}{.}{computeMillis}{(}{true}{,}{text}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newPos}{>=}{{text}{.}{length}{()}}}{)}{{{}{{return}{{bucket}{.}{computeMillis}{(}{true}{,}{text}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{instant}{.}{setMillis}{(}{{bucket}{.}{computeMillis}{(}{false}{,}{text}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{long}{computeMillis}{()}{{{}{{return}{{computeMillis}{(}{false}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{=}{{new}{{DateMidnight}}{(}{TEST_TIME1_UTC}{,}{GREGORIAN_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_PARIS}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_PARIS}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_PARIS}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{DateMidnight}}{(}{TEST_TIME1_UTC}{,}{GREGORIAN_DEFAULT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_DEFAULT}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{=}{{new}{{DateTime}}{(}{TEST_TIME1}{,}{GREGORIAN_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_PARIS}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_PARIS}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ISO_DEFAULT}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{,}{{ISODateTimeFormat}{.}{dateParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{,}{{ISODateTimeFormat}{.}{dateParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{,}{{ISODateTimeFormat}{.}{timeParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{,}{{ISODateTimeFormat}{.}{timeParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{instant}{,}{{DateTimeUtils}{.}{getChronology}{(}{chronology}{)}}{,}{{ISODateTimeFormat}{.}{timeParser}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{instant}{,}{null}{,}{{ISODateTimeFormat}{.}{timeParser}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{{(}{{{(}{{dateStyle}{<}{<}{NUMBER_CONSTANT}}{)}}{+}{dateStyle}}{)}}{+}{timeStyle}}}{;}}}
{AST_ROOT_SC2NF{{public}{{LocalDateTime}}{withMinimumValue}{()}{{{}{{return}{{setCopy}{(}{{getMinimumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{setCopy}{(}{{getMaximumValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{LocalDate}}{withMinimumValue}{()}{{{}{{return}{{setCopy}{(}{{getMinimumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{setCopy}{(}{{getMaximumValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{LocalTime}}{withMinimumValue}{()}{{{}{{return}{{setCopy}{(}{{getMinimumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{LocalTime}}{withMaximumValue}{()}{{{}{{return}{{setCopy}{(}{{getMaximumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{millisOfSecond}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{secondOfMinute}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{minuteOfHour}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{hourOfDay}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{millisOfSecond}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{secondOfMinute}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{minuteOfHour}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{hourOfDay}{()}}{.}{setCopy}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{interval33}{.}{contains}{(}{{new}{{Instant}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{interval33}{.}{containsNow}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{interval33}{.}{contains}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FieldUtils}{.}{equals}{(}{{getChronology}{()}}{,}{{other}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{synchronized}{{Set}}{getAvailableIDs}{()}{{{}{{return}{{new}{{TreeSet}}{(}{{iZoneInfoMap}{.}{keySet}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{value}{>=}{min}}{&&}{{value}{<=}{{getMaximumValue}{(}{instant}{)}}}}{)}{{{}{{return}{{super}{.}{set}{(}{instant}{,}{value}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{tz}{=}{{builder}{.}{toDateTimeZone}{(}{STRING_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{writeTo}{(}{STRING_CONSTANT}{,}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{createMessage}{(}{fieldName}{,}{value}{,}{lowerBound}{,}{upperBound}{,}{null}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{createMessage}{(}{{fieldType}{.}{getName}{()}}{,}{value}{,}{lowerBound}{,}{upperBound}{,}{null}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{createMessage}{(}{{fieldType}{.}{getName}{()}}{,}{value}{,}{lowerBound}{,}{upperBound}{,}{null}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{minusYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{plusYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{withYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{out}{,}{instant}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{buf}{,}{instant}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTime}}{{now}{=}{{new}{{DateTime}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{offsetLocal}{-}{offsetAdjusted}}{)}}{<}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{{t}{=}{{{{{new}{{DateTimeFormatterBuilder}}{()}}{.}{append}{(}{{hourMinuteSecondFraction}{()}}{)}}{.}{append}{(}{{offsetElement}{()}}{)}}{.}{toFormatter}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTime}}{{start}{=}{{base}{.}{toDateTimeAtStartOfDay}{(}{LONDON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{start}{=}{{base}{.}{toDateTimeAtStartOfDay}{(}{TOKYO}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{start}{=}{{base}{.}{toDateTimeAtStartOfDay}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateFormatSymbols}}{{dfs}{=}{{DateTimeUtils}{.}{getDateFormatSymbols}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}{[]}}{{zoneStrings}{=}{{{DateTimeUtils}{.}{getDateFormatSymbols}{(}{locale}{)}}{.}{getZoneStrings}{()}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{id}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{id}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Hibernate.DATE}{.}{nullSafeSet}{(}{preparedStatement}{,}{{{{(}{{(}{{LocalDate}}{)}{value}}{)}}{.}{toDateTimeAtStartOfDay}{()}}{.}{toDate}{()}}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{ReadableInstant}}{readableInstant}}}
{AST_ROOT_SC2NF{{{DurationField}}{durationField}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{DateTimeFieldType}}{>}}{fields}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{DateTimeFieldType}}{>}}{fields}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{DateTimeFieldType}}{>}}{fields}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{DateTimeFieldType}}{>}}{fields}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{DateTimeFieldType}}{>}}{fields}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{list}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{elementPairs}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{elementPairs}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{{pairs}{=}{iElementPairs}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{iElementPairs}{==}{null}}{)}{{{}{{{iElementPairs}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}{}}}{else}{{{}{{{iElementPairs}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{RuleSet}}{>}}{ruleSets}}}
{AST_ROOT_SC2NF{{{}{{{iRules}{=}{{new}{{{ArrayList}}{<}{{Rule}}{>}}{()}}}{;}}{{{iRules}{.}{add}{(}{rule}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{compareTo}{(}{{{DurationField}}{durationField}}{)}{{{}{{return}{{iField}{.}{compareTo}{(}{durationField}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{iRules}{=}{{new}{{{ArrayList}}{<}{{Rule}}{>}}{(}{rs.iRules}{)}}}{;}}}
{AST_ROOT_SC2NF{{RuleSet}{()}{{{}{{{iRules}{=}{{new}{{{ArrayList}}{<}{{Rule}}{>}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{iUpperYear}{=}{Integer.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{f}{=}{{cCache}{.}{get}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{{formatter}{=}{{cPatternedCache}{.}{get}{(}{pattern}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadablePartial}}{partial}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{Object}}{>}}{zimap}}}
{AST_ROOT_SC2NF{{{iZoneInfoMap}{.}{put}{(}{id}{,}{{new}{{{SoftReference}}{<}{{DateTimeZone}}{>}}{(}{tz}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{compareTo}{(}{{{DurationField}}{durationField}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{list}}}
{AST_ROOT_SC2NF{{public}{DateTimeFormatterBuilder}{()}{{{}{``;}}{super}{{{iElementPairs}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{HashMap}}{<}{{Object}}{,}{{Object}}{>}}{converted}}}
{AST_ROOT_SC2NF{{{{HashMap}}{<}{{Object}}{,}{{Object}}{>}}{converted}}}
{AST_ROOT_SC2NF{{{{HashMap}}{<}{{Object}}{,}{{Object}}{>}}{converted}}}
{AST_ROOT_SC2NF{{{{HashMap}}{<}{{Object}}{,}{{Object}}{>}}{converted}}}
{AST_ROOT_SC2NF{{{{TreeMap}}{<}{{String}}{,}{{Integer}}{>}}{map}}}
{AST_ROOT_SC2NF{{{{TreeMap}}{<}{{String}}{,}{{Integer}}{>}}{map}}}
{AST_ROOT_SC2NF{{{symbols}{=}{{cCache}{.}{get}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadableDuration}}{obj}}}
{AST_ROOT_SC2NF{{{chrono}{=}{{cCache}{.}{get}{(}{zone}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{Single}{.}{between}{(}{start}{,}{{new}{{LocalTime}}{()}}{,}{zero}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{f}{.}{withZoneUTC}{()}}{.}{print}{(}{dt}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.KOREAN}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withPivotYear}{(}{NUMBER_CONSTANT}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withPivotYear}{(}{NUMBER_CONSTANT}{)}}{.}{withZoneUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ldp}{==}{null}}{)}{{{}{{{ldp}{=}{{{dateElementParser}{()}}{.}{withZoneUTC}{()}}}{;}}{}}}}{{return}{ldp}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{new}{{Instant}}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{org.joda.time.gwt.util.Arrays}{.}{copyOf}{(}{iValues}{,}{iValues.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Arrays}{.}{copyOf}{(}{iValues}{,}{iValues.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TimeZone}{.}{setDefault}{(}{{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}{.}{toTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.JAPAN}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{locale}{=}{{Locale}{.}{getDefault}{()}}}{;}}{{{zone}{=}{{DateTimeZone}{.}{getDefault}{()}}}{;}}{{{Locale}{.}{setDefault}{(}{Locale.JAPAN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.JAPAN}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.JAPAN}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.JAPAN}{)}}{;}}}
{AST_ROOT_SC2NF{{{TimeZone}{.}{setDefault}{(}{{{DateTimeZone}{.}{forID}{(}{STRING_CONSTANT}{)}}{.}{toTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.JAPAN}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.JAPAN}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{YearMonth}}{getYearMonth}{()}{{{}{{return}{iBase}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{ReadablePartial}}{getReadablePartial}{()}{{{}{{return}{iBase}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{()}{{{}{{return}{{iBase}{.}{getField}{(}{iFieldIndex}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iBase}{=}{partial}}{;}}{{{iFieldIndex}{=}{fieldIndex}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{Object}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<}{{String}}{,}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}{.}{setDefault}{(}{PARIS}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{iBase}{.}{getZone}{()}}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{,}{instant}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{StandardBasicTypes.STRING}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{date}{=}{{StandardBasicTypes.DATE}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{value}{=}{{StandardBasicTypes.LONG}{.}{nullSafeGet}{(}{resultSet}{,}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{value}{=}{{StandardBasicTypes.TIMESTAMP}{.}{nullSafeGet}{(}{resultSet}{,}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{StandardBasicTypes.TIME}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{StandardBasicTypes.INTEGER}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{StandardBasicTypes.DATE}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{date}{=}{{StandardBasicTypes.TIME}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{StandardBasicTypes.TIMESTAMP}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{StandardBasicTypes.TIMESTAMP}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{s}{=}{{(}{{String}}{)}{{StandardBasicTypes.STRING}{.}{nullSafeGet}{(}{resultSet}{,}{{strings}{[}{NUMBER_CONSTANT}{]}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setValues}{(}{{addPeriodInto}{(}{{getValues}{()}}{,}{period}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setValues}{(}{{mergePeriodInto}{(}{{getValues}{()}}{,}{period}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{setValues}{(}{newValues}{)}}{;}}}
{AST_ROOT_SC2NF{{{array}{=}{{new}{{{Object}}{[]}}{{{}{validValues}{,}{{Integer}{.}{valueOf}{(}{maxLength}{)}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{integers}{[}{i}{]}}{=}{{Integer}{.}{valueOf}{(}{i}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{withPivotYear}{(}{{Integer}{.}{valueOf}{(}{pivotYear}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{array}{=}{{new}{{{Object}}{[]}}{{{}{validValues}{,}{{Integer}{.}{valueOf}{(}{maxLength}{)}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{withPivotYear}{(}{{Integer}{.}{valueOf}{(}{pivotYear}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{printer}{=}{{ISODateTimeFormat}{.}{dateTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{originalLocale}{=}{{Locale}{.}{getDefault}{()}}}{;}}{{{Locale}{.}{setDefault}{(}{DE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{convId}{=}{{zone}{.}{getID}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{ex}}{)}{{{}{{throw}{{new}{{IOException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{readZoneInfoMap}{(}{din}{,}{map}{)}}{;}}{}}}{finally}{{{}{{try}{{{}{{{din}{.}{close}{()}}{;}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}}}}}{}}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{msg}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tokenLen}{>=}{NUMBER_CONSTANT}}{)}{{{}{{{builder}{.}{appendTimeZoneName}{()}}{;}}{}}}{else}{{{}{{{builder}{.}{appendTimeZoneShortName}{(}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalInstantException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalInstantException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalInstantException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{ex}{.}{getMessage}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalInstantException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalInstantException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalInstantException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{ex}{.}{getMessage}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{localDateTime}{.}{toDateTime}{(}{this}{)}}{;}}{{return}{false}{;}}{}}}{{catch}{(}{{{IllegalInstantException}}{ex}}{)}{{{}{{return}{true}{;}}{}}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalInstantException}}{(}{message}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{divisor}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{Duration}}{(}{{FieldUtils}{.}{safeDivide}{(}{{getMillis}{()}}{,}{divisor}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{multiplicand}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{Duration}}{(}{{FieldUtils}{.}{safeMultiply}{(}{{getMillis}{()}}{,}{multiplicand}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{appendable}{,}{instant}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{f2}{=}{{new}{{DateTimeFormatter}}{(}{{(}{{InternalPrinter}}{)}{null}}{,}{{f}{.}{getParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{InternalPrinter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{{{InternalPrinter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{appendable}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{f}{instanceof}{{InternalPrinter}}}}
{AST_ROOT_SC2NF{{{InternalPrinter}}{printer}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{(}{printer}{)}}{;}}{{{checkParser}{(}{parser}{)}}{;}}{{return}{{append0}{(}{{DateTimePrinterInternalPrinter}{.}{of}{(}{printer}{)}}{,}{parser}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{(}{printer}{)}}{;}}{{return}{{append0}{(}{{DateTimePrinterInternalPrinter}{.}{of}{(}{printer}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{formatter}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{formatter}{.}{getPrinter0}{()}}{,}{{formatter}{.}{getParser}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{InternalPrinter}}{{p}{=}{{{getFormatter}{(}{locale}{)}}{.}{getPrinter0}{()}}}{;}}{{{p}{.}{printTo}{(}{appendable}{,}{partial}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{InternalPrinter}}{{p}{=}{{{getFormatter}{(}{locale}{)}}{.}{getPrinter0}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{(}{{StyleFormatter}}{)}{{formatter}{.}{getPrinter0}{()}}}{)}}{.}{getPattern}{(}{locale}{)}}{;}}}
{AST_ROOT_SC2NF{{{InternalPrinter}}{{printer}{=}{{requirePrinter}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InternalPrinter}}{{printer}{=}{{requirePrinter}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{{(}{{Appendable}}{)}{out}}{,}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{InternalPrinter}}{printer}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertMessageContains}{(}{ex}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeMillis}{(}{resetFields}{,}{{(}{{CharSequence}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeMillis}{(}{false}{,}{{(}{{CharSequence}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{obtainSaveField}{()}}{.}{init}{(}{{fieldType}{.}{getField}{(}{iChrono}{)}}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{obtainSaveField}{()}}{.}{init}{(}{field}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CharSequence}}{text}}}
{AST_ROOT_SC2NF{{{f2}{=}{{new}{{DateTimeFormatter}}{(}{{(}{{DateTimePrinter}}{)}{null}}{,}{{f}{.}{getParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{reset}{()}}{;}}{{return}{{doParseMillis}{(}{{DateTimeParserInternalParser}{.}{of}{(}{parser}{)}}{,}{text}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CharSequence}}{text}}}
{AST_ROOT_SC2NF{{{CharSequence}}{text}}}
{AST_ROOT_SC2NF{{{CharSequence}}{text}}}
{AST_ROOT_SC2NF{{f}{instanceof}{{InternalParser}}}}
{AST_ROOT_SC2NF{{{InternalParser}}{parser}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{(}{printer}{)}}{;}}{{{checkParser}{(}{parser}{)}}{;}}{{return}{{append0}{(}{{DateTimePrinterInternalPrinter}{.}{of}{(}{printer}{)}}{,}{{DateTimeParserInternalParser}{.}{of}{(}{parser}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkParser}{(}{parser}{)}}{;}}{{return}{{append0}{(}{null}{,}{{DateTimeParserInternalParser}{.}{of}{(}{parser}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{formatter}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{formatter}{.}{getPrinter0}{()}}{,}{{formatter}{.}{getParser0}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{InternalParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InternalParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InternalParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InternalParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InternalParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeParser}}{getParser}{()}{{{}{{return}{{InternalParserDateTimeParser}{.}{of}{(}{iParser}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InternalParser}}{parser}}}
{AST_ROOT_SC2NF{{{InternalParser}}{parser}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{DateTimePrinterInternalPrinter}{.}{of}{(}{printer}{)}}{,}{{DateTimeParserInternalParser}{.}{of}{(}{parser}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{FieldUtils}{.}{safeSubtract}{(}{endMillis}{,}{startMillis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iMillis}{=}{{FieldUtils}{.}{safeSubtract}{(}{endInstant}{,}{startInstant}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{builder}{.}{appendSuffix}{(}{NULL_STRING}{,}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{builder}{.}{appendPrefix}{(}{NULL_STRING}{,}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{iSuffixes}{=}{{texts}{.}{clone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{builder}{.}{appendDays}{()}}{.}{appendSuffix}{(}{STRING_CONSTANT}{)}}{.}{appendSuffix}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{builder}{.}{appendPrefix}{(}{STRING_CONSTANT}{)}}{.}{appendPrefix}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{periodStr}{.}{regionMatches}{(}{false}{,}{pos}{,}{text}{,}{NUMBER_CONSTANT}{,}{textLength}{)}}{)}{{{}{{if}{(}{{!}{{matchesOtherAffix}{(}{textLength}{,}{periodStr}{,}{pos}{)}}}{)}{{{}{{return}{pos}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{periodStr}{.}{regionMatches}{(}{true}{,}{pos}{,}{text}{,}{NUMBER_CONSTANT}{,}{textLength}{)}}{)}{{{}{{if}{(}{{!}{{matchesOtherAffix}{(}{textLength}{,}{periodStr}{,}{pos}{)}}}{)}{{{}{{return}{pos}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{synchronized}{(}{cDefaultLock}{)}{{{}{{{cDefault}{=}{zone}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{iZoneInfoKeys}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{{String}}{>}}{getAvailableIDs}{()}{{{}{{return}{AVAILABLE_IDS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{{Set}}{<}{{String}}{>}}{getAvailableIDs}{()}{{{}{{return}{{{getProvider}{()}}{.}{getAvailableIDs}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{{getProvider}{()}}{.}{getZone}{(}{id}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{zone}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{curMonth0}{=}{{{values}{[}{NUMBER_CONSTANT}{]}}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ZoneInfoLogger}{.}{verbose}{()}}{)}{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{{tz}{.}{getID}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ZoneInfoLogger}{.}{set}{(}{verbose}{)}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{interval}{=}{{new}{{Interval}}{(}{start}{,}{end}{,}{{getChronology}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{compare}{=}{{csCompare}{(}{text}{,}{position}{,}{value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FieldUtils}{.}{safeSubtract}{(}{{getEndMillis}{()}}{,}{{getStartMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{millis}{=}{{iField}{.}{setExtended}{(}{millis}{,}{iValue}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{str}{=}{{str}{.}{toLowerCase}{(}{Locale.ENGLISH}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{str}{.}{toUpperCase}{(}{Locale.ENGLISH}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.ENGLISH}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{fmt}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.ENGLISH}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Provider}}{{provider}{=}{{new}{{ZoneInfoProvider}}{(}{DEFAULT_TZ_DATA_PATH}{)}}}{;}}{{return}{{validateProvider}{(}{provider}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumPct}{(}{{Character}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumFreq}{(}{{Character}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPct}{(}{{Character}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{{Character}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{IntegratorException}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{initialStepSize}}}
{AST_ROOT_SC2NF{{final}{{SecondOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{public}{DerivativeException}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{METHOD_NAME}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{METHOD_NAME}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{GillStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{MidpointStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{EulerStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{ThreeEighthesStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{ClassicalRungeKuttaStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{VariableHandler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{cm}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{KeplerStepHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{VariableStepHandler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{KeplerStepHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integrator}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{VariableHandler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{stepHandlers}{=}{{new}{{{ArrayList}}{<}{{StepHandler}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ODEIntegrator}}{integrator}}}
{AST_ROOT_SC2NF{{{{createRegression}{()}}{.}{newSampleData}{(}{y}{,}{x}{,}{omega}{)}}{;}}}
{AST_ROOT_SC2NF{{{{createRegression}{()}}{.}{newSampleData}{(}{y}{,}{x}{,}{omega}{)}}{;}}}
{AST_ROOT_SC2NF{{{CombinedEventsManager}}{{manager}{=}{{addEndTimeChecker}{(}{t0}{,}{t}{,}{eventsHandlersManager}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedEventsManager}}{{manager}{=}{{addEndTimeChecker}{(}{t0}{,}{t}{,}{eventsHandlersManager}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maxValueError}{=}{NUMBER_CONSTANT}}{;}}{{{maxTimeError}{=}{NUMBER_CONSTANT}}{;}}{{{lastError}{=}{NUMBER_CONSTANT}}{;}}{{{expectedStepStart}{=}{Double.NaN}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CompositeFormat}}{{cf}{=}{{new}{{ComplexFormat}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{CompositeFormat}}{{cf}{=}{{ComplexFormat}{.}{getInstance}{(}{{getLocale}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{{Math}{.}{abs}{(}{step}{)}}}{;}}}
{AST_ROOT_SC2NF{{{stepSize}{=}{{forward}{?}{step}{:}{{-}{step}}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{{Math}{.}{abs}{(}{step}{)}}}{;}}}
{AST_ROOT_SC2NF{{{stepSize}{=}{{forward}{?}{step}{:}{{-}{step}}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{{Math}{.}{abs}{(}{step}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{qrt}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{System}{.}{arraycopy}{(}{{b}{[}{i}{]}}{,}{NUMBER_CONSTANT}{,}{{{root}{.}{getDataRef}{()}}{[}{{index}{[}{i}{]}}{]}}{,}{NUMBER_CONSTANT}{,}{rank}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{QRDecompositionImpl}}{()}}{.}{isNonSingular}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isNonSingular}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isNonSingular}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{cachedQT}{==}{null}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{sse}{=}{{{{u}{.}{transpose}{()}}{.}{multiply}{(}{{getOmegaInverse}{()}}{)}}{.}{multiply}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{RealMatrix}}{{XTX}{=}{{{X}{.}{transpose}{()}}{.}{multiply}{(}{X}{)}}}{;}}{{return}{{{new}{{LUDecompositionImpl}}{(}{XTX}{)}}{.}{getInverse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isNonSingular}{()}}}{)}{{{}{{throw}{{new}{{RankDeficientMatrixException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isNonSingular}{()}}}{)}{{{}{{throw}{{new}{{RankDeficientMatrixException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatrixIndexException}}{{ex}{=}{{new}{{MatrixIndexException}}{(}{msg}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{singular}{)}{{{}{{throw}{{new}{{SingularMatrixException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{singular}{)}{{{}{{throw}{{new}{{SingularMatrixException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{singular}{)}{{{}{{throw}{{new}{{SingularMatrixException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{matrix}{.}{isSquare}{()}}}{)}{{{}{{throw}{{new}{{NonSquareMatrixException}}{(}{{matrix}{.}{getRowDimension}{()}}{,}{{matrix}{.}{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{matrix}{.}{isSquare}{()}}}{)}{{{}{{throw}{{new}{{NonSquareMatrixException}}{(}{{matrix}{.}{getRowDimension}{()}}{,}{{matrix}{.}{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isSquare}{()}}}{)}{{{}{{throw}{{new}{{NonSquareMatrixException}}{(}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IndexOutOfBoundsException}}{e}}{)}{{{}{{{checkIndex}{(}{index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{arguments}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{pattern}}{=}{null}}{;}}{{{{this}{.}{arguments}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{arguments}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatrixIndexException}}{{ex}{=}{{new}{{MatrixIndexException}}{(}{msg}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvalidMatrixException}}{{ex}{=}{{new}{{InvalidMatrixException}}{(}{msg}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{ex}{.}{getMessage}{(}{Locale.FRENCH}{)}}{.}{length}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{ex}{.}{getMessage}{(}{Locale.FRENCH}{)}}{.}{length}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getZ}{()}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{o}{==}{null}}{)}{{{}{{throw}{{new}{{MathException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{pattern}}{=}{null}}{;}}{{{{this}{.}{arguments}}{=}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{ioe}{.}{getMessage}{()}}{.}{length}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{ioe}{.}{getMessage}{()}}{.}{length}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{qrt}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{iterationCount}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lu}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{iterationCount}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{loaded}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{vTv}{.}{subtract}{(}{id}{)}}{.}{getNorm}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{{refValues}{[}{i}{]}}{,}{{eigenValues}{[}{i}{]}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{transformer}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ds}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ds}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{copyIn}{(}{d}{)}}{;}}{{{ds}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ds}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getPivot}{(}{)}{throws}{{IllegalStateException}}{{{}{{return}{pivot}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{eigenvalues}{[}{i}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getEigenvalues}{(}{)}{throws}{{InvalidMatrixException}}{{{}{{return}{{eigenvalues}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{distinct}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{repeated}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{{t}{.}{getMainDiagonalRef}{()}}{,}{{t}{.}{getSecondaryDiagonalRef}{()}}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getNorm}{(}{)}{throws}{{InvalidMatrixException}}{{{}{{return}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getSingularValues}{(}{)}{throws}{{InvalidMatrixException}}{{{}{{return}{{singularValues}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{lu}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{lu}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{copyIn}{(}{d}{)}}{;}}{{{lu}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{lu}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{distinct}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{repeated}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{DescriptiveStatistics}{(}{{int}{window}}{)}{{{}{{{setWindowSize}{(}{window}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{stat}{.}{evaluate}{(}{{eDA}{.}{getInternalValues}{()}}{,}{{eDA}{.}{start}{()}}{,}{{eDA}{.}{getNumElements}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{in}}}
{AST_ROOT_SC2NF{{final}{{RealVectorImpl}}{v}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{v}}}
{AST_ROOT_SC2NF{{final}{{RealMatrixImpl}}{m}}}
{AST_ROOT_SC2NF{{final}{{RealMatrixImpl}}{m}}}
{AST_ROOT_SC2NF{{final}{{RealMatrixImpl}}{m}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{v}}}
{AST_ROOT_SC2NF{{{}{{{setup}{(}{f}{)}}{;}}{{return}{{{factory}{.}{newDefaultSolver}{()}}{.}{solve}{(}{f}{,}{x0}{,}{x1}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newSecantSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newBrentSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newNewtonSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newBisectionSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{iterator}{.}{advance}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{ConcurrentModificationException}}{cme}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m_outerProduct}{=}{{v1}{.}{outerProduct}{(}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedV}{=}{{{transformer}{.}{getV}{()}}{.}{multiply}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{iData}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedU}{=}{{{transformer}{.}{getU}{()}}{.}{multiply}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{iData}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{covRM}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{cov}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{bp}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{dData}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{xData}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{RealVectorImpl}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{matrix}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{testSquare}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Omega}}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{omega}{)}}}{;}}{{{{this}{.}{OmegaInverse}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{matrix}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{matrix}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{matrix}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{matrix}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{invData}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{bp}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{DenseRealMatrix}}{(}{x}{)}}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArrayIndexOutOfBoundsException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{solver}{.}{isNonSingular}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solver}{.}{solve}{(}{b}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{solver}}{=}{{decomposition}{.}{getSolver}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{RealMatrixImpl}}{(}{x}{)}}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Omega}}{=}{{new}{{RealMatrixImpl}}{(}{omega}{)}}}{;}}{{{{this}{.}{OmegaInverse}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{RealMatrixImpl}}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{RealMatrixImpl}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isSingular}{(}{)}{;}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{solver}}{=}{{decomposition}{.}{getSolver}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{eigenvectors}{[}{i}{]}}{=}{{findEigenvector}{(}{{realEigenvalues}{[}{i}{]}}{,}{d}{,}{l}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{realEigenvalues}{[}{index}{]}}{=}{{main}{[}{index}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{eigenvectors}{==}{null}}{)}{{{}{{{findEigenVectors}{()}}{;}}{}}}}{{return}{{new}{{Solver}}{(}{realEigenvalues}{,}{eigenvectors}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{determinant}{=}{NUMBER_CONSTANT}}{;}}{{for}{(}{{double}{lambda}}{:}{realEigenvalues}{)}{{{}{{{determinant}{*=}{lambda}}{;}}{}}}}{{return}{determinant}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cachedD}{==}{null}}{)}{{{}{{{cachedD}{=}{{MatrixUtils}{.}{createRealDiagonalMatrix}{(}{realEigenvalues}{)}}}{;}}{}}}}{{return}{cachedD}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{observed}{=}{{ed}{.}{getRealEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{lambda}{=}{{ed}{.}{getRealEigenvalue}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{eigenValues}{=}{{ed}{.}{getRealEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{eigenValues}{=}{{ed}{.}{getRealEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{eigenValues}{=}{{ed}{.}{getRealEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{ed}{.}{getRealEigenvalue}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{singularValues}{=}{{eigenDecomposition}{.}{getRealEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{eigenvectors}{==}{null}}{)}{{{}{{{findEigenVectors}{()}}{;}}{}}}}{{return}{{new}{{Solver}}{(}{realEigenvalues}{,}{imagEigenvalues}{,}{eigenvectors}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fht}{(}{f}{)}}{,}{{NUMBER_CONSTANT}{/}{f.length}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{OpenIntToDoubleHashMap}}{{map}{=}{{new}{{OpenIntToDoubleHashMap}}{()}}}{;}}{{{assertTrue}{(}{{Double}{.}{isNaN}{(}{{map}{.}{remove}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{entries}}{=}{{new}{{OpenIntToDoubleHashMap}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{previous}{=}{missingEntries}}{;}}}
{AST_ROOT_SC2NF{{{{values}{[}{index}{]}}{=}{missingEntries}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{LUDecompositionImpl}}{(}{XTX}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{{new}{{DenseRealMatrix}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{{new}{{DenseRealMatrix}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{rDiag}{=}{{new}{{double}{[}}{{Math}{.}{min}{(}{m}{,}{n}{)}}{]}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{LUDecompositionImpl}}{(}{XTOIX}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{double}{getDeterminant}{(}{{{RealMatrix}}{m}}{)}{{{}{{return}{{{new}{{LUDecompositionImpl}}{(}{m}{)}}{.}{getDeterminant}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{clearResult}{()}}{;}}{{return}{{localMin}{(}{min}{,}{max}{,}{relativeAccuracy}{,}{absoluteAccuracy}{,}{f}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertSame}{(}{Float.NaN}{,}{{MathUtils}{.}{sign}{(}{Float.NaN}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{vals}{[}{i}{]}}{=}{{{values}{[}{i}{]}}{.}{doubleValue}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{f.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{roots}{.}{computeOmega}{(}{f.length}{)}}{;}}{{return}{{fft}{(}{f}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{virtualSize}}{;}{{i}{++}}{)}{{{}{{{setEntry}{(}{i}{,}{value}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setEntry}{(}{i}{,}{{Math}{.}{log}{(}{{getEntry}{(}{i}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setEntry}{(}{i}{,}{{Math}{.}{log10}{(}{{getEntry}{(}{i}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setEntry}{(}{i}{,}{{NUMBER_CONSTANT}{/}{{getEntry}{(}{i}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setEntry}{(}{i}{,}{{{getEntry}{(}{i}{)}}{+}{d}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setEntry}{(}{i}{,}{{Math}{.}{acos}{(}{{getEntry}{(}{i}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{res}{.}{setEntry}{(}{{i}{+}{virtualSize}}{,}{{a}{[}{i}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{RealVector}}{{res}{=}{{new}{{SparseRealVector}}{(}{this}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{res}{.}{setEntry}{(}{virtualSize}{,}{d}{)}}{;}}{{return}{res}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSubVector}{(}{index}{,}{v.data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{w}{.}{setEntry}{(}{i}{,}{{{w}{.}{getEntry}{(}{i}{)}}{/}{si}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{m3}{.}{multiply}{(}{m4}{)}}{,}{m5}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixIndexException}}{{ex}{=}{{new}{{MatrixIndexException}}{(}{msg}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{expansionMode}{!=}{MULTIPLICATIVE_MODE}}{&&}{{expansionMode}{!=}{ADDITIVE_MODE}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{expansionMode}{,}{MULTIPLICATIVE_MODE}{,}{STRING_CONSTANT}{,}{ADDITIVE_MODE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{numElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArrayIndexOutOfBoundsException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getZ}{()}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{parts}}}
{AST_ROOT_SC2NF{{{FunctionEvaluationException}}{{ex}{=}{{new}{{FunctionEvaluationException}}{(}{cause}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionEvaluationException}}{{ex}{=}{{new}{{FunctionEvaluationException}}{(}{cause}{,}{NUMBER_CONSTANT}{,}{pattern}{,}{arguments}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isZero}{(}{norm}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{rows}{,}{columns}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{cce}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{arguments}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DimensionMismatchException}}{dme}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{dme}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{parts}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{arguments}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{parts}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{covarianceMatrix}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{isForward}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{arguments}}}
{AST_ROOT_SC2NF{{{}{{return}{{buildMessage}{(}{locale}{,}{pattern}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{f}{instanceof}{{PolynomialFunction}}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{instanceof}{{PolynomialFunction}}}{)}{{{}{{{p}{=}{{(}{{PolynomialFunction}}{)}{f}}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{arguments}}}
{AST_ROOT_SC2NF{{{MathException}}{{ex}{=}{{new}{{MathException}}{(}{cause}{,}{pattern}{,}{arguments}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{isCardan}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathConfigurationException}}{{ex}{=}{{new}{{MathConfigurationException}}{(}{cause}{,}{pattern}{,}{arguments}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{arguments}}}
{AST_ROOT_SC2NF{{{ConvergenceException}}{{ex}{=}{{new}{{ConvergenceException}}{(}{cause}{,}{pattern}{,}{arguments}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{buildMessage}{(}{locale}{,}{pattern}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{parts}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{arguments}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{parts}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{b.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isSquare}{()}}}{)}{{{}{{throw}{{new}{{NonSquareMatrixException}}{(}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{de}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{iter}{.}{hasNext}{()}}{)}{{{}{{{iter}{.}{advance}{()}}{;}}{{if}{(}{{Double}{.}{isNaN}{(}{{iter}{.}{value}{()}}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{iter}{.}{hasNext}{()}}{)}{{{}{{{iter}{.}{advance}{()}}{;}}{{if}{(}{{Double}{.}{isInfinite}{(}{{iter}{.}{value}{()}}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{delta}{>}{max}}{)}{{{}{{{max}{=}{delta}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{values}{,}{DEFAULT_ZERO_TOLERANCE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{data.length}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{data.length}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{epsilon}{=}{{v}{.}{getEpsilon}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setConvergenceChecker}{(}{{{ScalarConvergenceChecker}}{checker}}{)}{{{}{{{optimizer}{.}{setConvergenceChecker}{(}{checker}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{ScalarOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{final}{{{Comparator}}{<}{{ScalarPointValuePair}}{>}}{comparator}}}
{AST_ROOT_SC2NF{{public}{void}{setConvergenceChecker}{(}{{{ScalarConvergenceChecker}}{checker}}{)}{{{}{{{{this}{.}{checker}}{=}{checker}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{VectorialObjectiveFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{VectorialObjectiveFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{VectorialObjectiveFunction}}{function}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{{buildArray}{(}{m}{,}{factor}{)}}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{{buildChebyquadArray}{(}{n}{,}{factor}{)}}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{{buildArray}{(}{n}{,}{x0}{)}}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{{if}{(}{{theoreticalStartCost}{>}{NUMBER_CONSTANT}}{)}{{{}{{{setCostAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setParamsAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{{if}{(}{{theoreticalStartCost}{>}{NUMBER_CONSTANT}}{)}{{{}{{{setCostAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setParamsAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{{buildArray}{(}{NUMBER_CONSTANT}{,}{x0}{)}}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{NUMBER_CONSTANT}{,}{{buildArray}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{NUMBER_CONSTANT}{,}{{buildArray}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{{buildArray}{(}{n}{,}{x0}{)}}{,}{theoreticalMinCost}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{residual}{=}{{residuals}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{maxCostEval}{)}}{;}}}
{AST_ROOT_SC2NF{{{++}{jacobianEvaluations}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setConvergenceChecker}{(}{{new}{{SimpleVectorialValueChecker}}{()}}{)}}{;}}{{{setMaxIterations}{(}{DEFAULT_MAX_ITERATIONS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{,}{pattern}{,}{arguments}{)}{;}}{{{{this}{.}{argument}}{=}{{new}{{double}{[]}}{{{}{argument}{}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{{this}{.}{argument}}{=}{{new}{{double}{[]}}{{{}{argument}{}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{pattern}{,}{arguments}{)}{;}}{{{{this}{.}{argument}}{=}{{new}{{double}{[]}}{{{}{argument}{}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{ex}{.}{getArgument}{()}}{[}{NUMBER_CONSTANT}{]}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Math.PI}{,}{{{ex}{.}{getArgument}{()}}{[}{NUMBER_CONSTANT}{]}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{MultivariateVectorialFunction}}{function}}}
{AST_ROOT_SC2NF{{public}{void}{setConvergenceChecker}{(}{{{RealConvergenceChecker}}{checker}}{)}{{{}{{{{this}{.}{checker}}{=}{checker}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FunctionEvaluationException}}{fe}}{)}{{{}{{{assertTrue}{(}{exceptionExpected}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{ZERO}{;}}{}}}}{{return}{{new}{{BigFraction}}{(}{numerator}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wholeFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{FractionFormat}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{subtract}{(}{{BigInteger}{.}{valueOf}{(}{l}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{subtract}{(}{{BigInteger}{.}{valueOf}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{multiply}{(}{{BigInteger}{.}{valueOf}{(}{l}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{multiply}{(}{{BigInteger}{.}{valueOf}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{{BigInteger}{.}{valueOf}{(}{l}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{{BigInteger}{.}{valueOf}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{BigFraction}}{>}}{coefficients}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ci}{,}{{l40}{[}{i}{]}}{,}{{{Math}{.}{abs}{(}{ci}{)}}{*}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{BigFraction}}{(}{{Double}{.}{longBitsToDouble}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{getNumeratorAsLong}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.US}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.FRENCH}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{String}}{getResourceName}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{String}}{getResourceName}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.US}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.FRENCH}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.FRENCH}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.US}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{LazyHolder.FACTORY}{.}{newDefaultSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setup}{(}{f}{)}}{;}}{{return}{{{LazyHolder.FACTORY}{.}{newDefaultSolver}{()}}{.}{solve}{(}{f}{,}{x0}{,}{x1}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{logSum}{+=}{{Math}{.}{log}{(}{i}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{n0}{=}{n}}{;}}}
{AST_ROOT_SC2NF{{double}{{n0}{=}{n}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{meanImpl}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geoMeanImpl}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLogImpl}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{maxImpl}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{minImpl}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSqImpl}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumImpl}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{degreesOfFreedom}{=}{{(}{{{n1}{+}{n2}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{sumY}{-}{{slope}{*}{sumX}}}{)}}{/}{{(}{n}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{*}{{(}{{{(}{{NUMBER_CONSTANT}{/}{n}}{)}}{+}{{{(}{{xbar}{*}{xbar}}{)}}{/}{sumXX}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}{{return}{{{getSumSquaredErrors}{()}}{/}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{n}{=}{length}}{;}}}
{AST_ROOT_SC2NF{{{}{{{dest.variance}{=}{{source.variance}{.}{copy}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dest.incMoment}{=}{source.incMoment}}{;}}{{{dest.moment}{=}{{source.moment}{.}{copy}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{sampleSize}{=}{length}}{;}}}
{AST_ROOT_SC2NF{{{}{{{dest.moment}{=}{{source.moment}{.}{copy}{()}}}{;}}{{{dest.incMoment}{=}{source.incMoment}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{map}{.}{get}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{sumDifference}{(}{sample1}{,}{sample2}{)}}{/}{sample1.length}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dest.sumOfLogs}{=}{{source.sumOfLogs}{.}{copy}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumOfLogs}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{length}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumOfLogs}{.}{getResult}{()}}{/}{{sumOfLogs}{.}{getN}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{{i}{-}{NUMBER_CONSTANT}}{]}}{=}{{i}{*}{{coefficients}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{n0}{=}{n}}{;}}}
{AST_ROOT_SC2NF{{{}{{{dest.moment}{=}{{new}{{ThirdMoment}}{(}{{source.moment}{.}{copy}{()}}{)}}}{;}}{{{dest.incMoment}{=}{source.incMoment}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{contents}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dest.moment}{=}{{source.moment}{.}{copy}{()}}}{;}}{{{dest.isBiasCorrected}{=}{source.isBiasCorrected}}{;}}{{{dest.incMoment}{=}{source.incMoment}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{len}{=}{length}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{y}{=}{{problem.y}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{{sum}{/}{v.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{e}{=}{problem.e}}{;}}{{{y}{=}{{problem.y}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{y}{=}{{problem.y}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{dY}{[}{i}{]}}{=}{{y}{[}{i}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{dX}{[}{i}{]}}{=}{{x}{[}{i}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{asBigDecimal}{(}{testVector}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{m}{.}{getTrace}{()}}{.}{doubleValue}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{a}{=}{problem.a}}{;}}{{{y}{=}{{problem.y}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{sum}{/}{v.length}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextExponential}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextSecureInt}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextSecureLong}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextLong}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextInt}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{getTrace}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{createSparseMatrix}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{f}{,}{constraints}{,}{GoalType.MAXIMIZE}{,}{false}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{f}{,}{constraints}{,}{GoalType.MAXIMIZE}{,}{false}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{f}{,}{constraints}{,}{goalType}{,}{restrictToNonNegative}{,}{epsilon}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{sumY}{-}{{slope}{*}{sumX}}}{)}}{/}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{*}{{(}{{{(}{{NUMBER_CONSTANT}{/}{{(}{double}{)}{n}}}{)}}{+}{{{(}{{xbar}{*}{xbar}}{)}}{/}{sumXX}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{{(}{{accum}{-}{{(}{{{Math}{.}{pow}{(}{accum2}{,}{NUMBER_CONSTANT}{)}}{/}{length}}{)}}}{)}}{/}{{(}{{length}{-}{NUMBER_CONSTANT}}{)}}}{)}}}
{AST_ROOT_SC2NF{{double}{{degreesOfFreedom}{=}{{{n1}{+}{n2}}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkSufficientData}{(}{matrix}{)}}{;}}{{{nObs}{=}{{matrix}{.}{getRowDimension}{()}}}{;}}{{{correlationMatrix}{=}{{computeCorrelationMatrix}{(}{matrix}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSufficientData}{(}{matrix}{)}}{;}}{{{n}{=}{{matrix}{.}{getRowDimension}{()}}}{;}}{{{covarianceMatrix}{=}{{computeCovarianceMatrix}{(}{matrix}{,}{biasCorrected}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{getTrace}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{testGenerator}{.}{nextInt}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{regression}{.}{getSlopeConfidenceInterval}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{vs}{.}{getNext}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalStateException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{getTrace}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{{it}{=}{{f}{.}{valuesIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{data}{=}{{buildArray}{(}{field}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{getField}{()}}{,}{subMatrix.length}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{FieldVectorImpl}}{<}{{T}}{>}}{)}{{subtract}{(}{v.data}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{FieldVectorImpl}}{<}{{T}}{>}}{)}{{add}{(}{v.data}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{{extractField}{(}{v}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{extractField}{(}{d}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{extractField}{(}{d}{)}}{)}{;}}{{{copyIn}{(}{d}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{nextAction}{=}{{handler}{.}{eventOccurred}{(}{t}{,}{y}{,}{{!}{{(}{{increasing}{^}{forward}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{res}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{doubleToLongBits}{(}{test}{)}}{!=}{{Double}{.}{doubleToLongBits}{(}{{getEntry}{(}{{iter}{.}{key}{()}}{)}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{hatResiduals}{=}{{{{I}{.}{subtract}{(}{hat}{)}}{.}{operate}{(}{model.Y}{)}}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{row}{,}{endRow}{,}{column}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkMultiplicationCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkMultiplicationCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubtractionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubtractionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkAdditionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkAdditionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{RealVectorImpl}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{incrementAll}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{denominatorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{numeratorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{<}{NUMBER_CONSTANT}}{||}{{n}{!=}{sample2.length}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{,}{sample2.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{windowSize}{<}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{windowSize}{!=}{INFINITE_WINDOW}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{windowSize}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{mean}{)}}{;}}{}}}}{{{{this}{.}{mean}}{=}{mean}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkMultiplicationCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubtractionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkAdditionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{beta}{)}}{;}}{}}}}{{{{this}{.}{beta}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{)}}{;}}{}}}}{{{{this}{.}{alpha}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{size}{)}}{;}}{}}}}{{{sampleSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{size}{)}}{;}}{}}}}{{{populationSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{num}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{num}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{num}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{beta}{)}}{;}}{}}}}{{{{this}{.}{beta}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{)}}{;}}{}}}}{{{{this}{.}{alpha}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkMultiplicationCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkMultiplicationCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkAdditionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkAdditionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{col}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{col}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{r}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{r}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkColumnIndex}{(}{this}{,}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkRowIndex}{(}{this}{,}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{selectedRows}{,}{selectedColumns}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{selectedRows}{,}{selectedColumns}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubMatrixIndex}{(}{this}{,}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkMultiplicationCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkSubtractionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixUtils}{.}{checkAdditionCompatible}{(}{this}{,}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{successes}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{successes}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{successes}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{degreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean.length}{!=}{standardDeviation.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{mean.length}{,}{standardDeviation.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{trials}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{trials}{)}}{;}}{}}}}{{{numberOfTrials}{=}{trials}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{realFormat}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{realFormat}}{=}{realFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{imaginaryFormat}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{imaginaryFormat}}{=}{imaginaryFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{imaginaryCharacter}{==}{null}}{||}{{{imaginaryCharacter}{.}{length}{()}}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sd}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{sd}{)}}{;}}{}}}}{{{standardDeviation}{=}{sd}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{s}{)}}{;}}{}}}}{{{scale}{=}{s}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sigma}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{sigma}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{len}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{len}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<=}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{p}{>}{NUMBER_CONSTANT}}{)}}{||}{{(}{{p}{<=}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{?}{>}}{{obj1}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{OpenMapRealVector}}{{v1}{=}{{new}{{OpenMapRealVector}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{OpenMapRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{{expected}{[}{i}{]}}{,}{{observed}{[}{i}{]}}{,}{tolerance}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{dimension}{=}{{{(}{{currentState}{==}{null}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{currentState.length}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dimension}{=}{{{(}{{currentState}{==}{null}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{currentState.length}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StepInterpolator}}{prototype}}}
{AST_ROOT_SC2NF{{{integrator}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{integrator}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{yDotK}{=}{null}}{;}}{{{integrator}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{interpolator}{.}{reinitialize}{(}{{new}{{DummyIntegrator}}{(}{interpolator}{)}}{,}{y}{,}{yDot}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{interpolator}{.}{reinitialize}{(}{{new}{{DummyIntegrator}}{(}{interpolator}{)}}{,}{y}{,}{yDot}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{interpolator}{.}{reinitialize}{(}{{new}{{DummyIntegrator}}{(}{interpolator}{)}}{,}{y}{,}{yDot}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeDerivatives}{(}{{t0}{+}{h}}{,}{y1}{,}{yDot1}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{factors}}{=}{{new}{{BlockRealMatrix}}{(}{factors}{)}}}{;}}{{{{this}{.}{target}}{=}{target}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{factors}}{=}{{new}{{BlockRealMatrix}}{(}{factors}{)}}}{;}}{{{{this}{.}{target}}{=}{target}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{MatrixUtils}{.}{createColumnRealMatrix}{(}{col}{)}}{,}{{new}{{BlockRealMatrix}}{(}{colMatrix}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{MatrixUtils}{.}{createRowRealMatrix}{(}{row}{)}}{,}{{new}{{BlockRealMatrix}}{(}{rowMatrix}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{BlockRealMatrix}}{(}{testData}{)}}{,}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{mA}{=}{{new}{{BlockRealMatrix}}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{result}{=}{{new}{{BlockRealMatrix}}{(}{dimension}{,}{dimension}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{BlockRealMatrix}}{(}{matrixData}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{BlockRealMatrix}}{(}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{BlockRealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{testData}{)}}}{;}}{{{assertEquals}{(}{m}{,}{{TestUtils}{.}{serializeAndRecover}{(}{m}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{BlockRealMatrix}}{(}{reference}{)}}{,}{{new}{{BlockRealMatrix}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{BlockRealMatrix}}{(}{reference}{)}}{,}{{new}{{BlockRealMatrix}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{BlockRealMatrix}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{BlockRealMatrix}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{BlockRealMatrix}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{factors}}{=}{{new}{{BlockRealMatrix}}{(}{factors}{)}}}{;}}{{{{this}{.}{target}}{=}{target}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeCorrelationMatrix}{(}{{new}{{BlockRealMatrix}}{(}{data}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{outMatrix}{=}{{new}{{BlockRealMatrix}}{(}{nVars}{,}{nVars}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeCorrelationMatrix}{(}{{new}{{BlockRealMatrix}}{(}{data}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{outMatrix}{=}{{new}{{BlockRealMatrix}}{(}{nVars}{,}{nVars}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{BlockRealMatrix}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{BlockRealMatrix}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{BlockRealMatrix}}{(}{data}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeCovarianceMatrix}{(}{{new}{{BlockRealMatrix}}{(}{data}{)}}{,}{biasCorrected}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{outMatrix}{=}{{new}{{BlockRealMatrix}}{(}{dimension}{,}{dimension}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{BlockRealMatrix}}{(}{data}{)}}{,}{biasCorrected}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setColumn}{(}{column}{,}{{{(}{{(}{{ArrayRealVector}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setRow}{(}{row}{,}{{{(}{{(}{{ArrayRealVector}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ArrayRealVector}}{(}{{getColumn}{(}{column}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ArrayRealVector}}{(}{{getRow}{(}{row}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{eigenvectors}{=}{{new}{{{ArrayRealVector}}{[}}{m}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ArrayRealVector}}{{v}{=}{{eigenvectors}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ArrayRealVector}}{{v}{=}{{eigenvectors}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayRealVector}}{[]}}{eigenvectors}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{Array2DRowRealMatrix}}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{ArrayRealVector}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{m}{.}{setColumnVector}{(}{NUMBER_CONSTANT}{,}{{new}{{ArrayRealVector}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{ArrayRealVector}}{(}{argument}{)}}{)}{;}}{{{{this}{.}{argument}}{=}{{argument}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{ArrayRealVector}}{(}{coefficients}{)}}{,}{constantTerm}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{coefficients}}{=}{{new}{{ArrayRealVector}}{(}{sub}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{ArrayRealVector}}{(}{coefficients}{)}}{,}{relationship}{,}{value}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Array2DRowRealMatrix}}{(}{matrixData}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{repeatedColumns}{=}{{new}{{Array2DRowRealMatrix}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{ArrayRealVectorTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{tableau}}{=}{{new}{{Array2DRowRealMatrix}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{tableau}}{=}{{new}{{Array2DRowRealMatrix}}{(}{{createTableau}{(}{{goalType}{==}{GoalType.MAXIMIZE}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{nordsieck}{=}{{new}{{Array2DRowRealMatrix}}{(}{nData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setColumn}{(}{column}{,}{{{(}{{(}{{{ArrayFieldVector}}{<}{{T}}{>}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setRow}{(}{row}{,}{{{(}{{(}{{{ArrayFieldVector}}{<}{{T}}{>}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{Array2DRowRealMatrix}}{(}{x}{)}}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Array2DRowRealMatrix}}{{augI}{=}{{new}{{Array2DRowRealMatrix}}{(}{n}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{bigMSupdate}{=}{{bigMStoN}{.}{multiply}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{shiftedP}{,}{false}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{coefficients.msToN}{.}{multiply}{(}{{new}{{Array2DRowRealMatrix}}{(}{multistep}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{ArrayRealVectorTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{ArrayRealVectorTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Array2DRowRealMatrix}}{(}{x}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Omega}}{=}{{new}{{Array2DRowRealMatrix}}{(}{omega}{)}}}{;}}{{{{this}{.}{OmegaInverse}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{{getColumn}{(}{column}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{{getRow}{(}{row}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{lhs}{=}{{new}{{ArrayRealVector}}{(}{numCoefficients}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{matrix}{=}{{new}{{Array2DRowRealMatrix}}{(}{data}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{vector}{=}{{new}{{ArrayRealVector}}{(}{data}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{getConvertedMatrix}{()}{{{}{{return}{{new}{{Array2DRowRealMatrix}}{(}{data}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{getConvertedMatrix}{()}{{{}{{return}{{new}{{Array2DRowRealMatrix}}{(}{data}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{data}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ArrayRealVector}}{(}{data}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{d}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{data}{)}}}
{AST_ROOT_SC2NF{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{rows}{,}{columns}{)}}}
{AST_ROOT_SC2NF{{{}{{{es}{.}{solve}{(}{{new}{{ArrayRealVectorTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{decompMatrix}{=}{{new}{{Array2DRowRealMatrix}}{(}{decomp}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{triangularMatrix}{=}{{new}{{Array2DRowRealMatrix}}{(}{lowerTriangularMatrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{triangularMatrix}{=}{{new}{{Array2DRowRealMatrix}}{(}{lowerTriangularMatrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{{new}{{Array2DRowRealMatrix}}{(}{m3}{)}}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{decompose}{(}{{new}{{Array2DRowRealMatrix}}{(}{m7}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Array2DRowRealMatrix}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{ArrayRealVectorTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{ArrayRealVectorTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{bigMSupdate}{=}{{bigMStoN}{.}{multiply}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{shiftedP}{,}{false}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{coefficients.msToN}{.}{multiply}{(}{{new}{{Array2DRowRealMatrix}}{(}{multistep}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{T}}{>}}{{identity}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{cachedP}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedU}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedL}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{!=}{startConfiguration.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{,}{startConfiguration.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Arrays}{.}{fill}{(}{after}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{.}{set}{(}{this}{,}{{NordsieckTransformer}{.}{getInstance}{(}{{nSteps}{+}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{nSteps}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{nSteps}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Array2DRowRealMatrix}}{nordsieck}}}
{AST_ROOT_SC2NF{{if}{(}{{interpolator.nordsieck}{!=}{null}}{)}{{{}{{{nordsieck}{=}{{new}{{Array2DRowRealMatrix}}{(}{{interpolator.nordsieck}{.}{getDataRef}{()}}{,}{true}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{nordsieck}{=}{{initializeHighOrderDerivatives}{(}{scaled}{,}{multistep}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblem1}}{{pb2}{=}{{pb1}{.}{copy}{()}}}{;}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{{SparseFieldVector}}{<}{?}{>}}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{{SparseFieldVector}}{<}{?}{>}}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{{SparseFieldVector}}{<}{?}{>}}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{{SparseFieldVector}}{<}{?}{>}}}}
{AST_ROOT_SC2NF{{!}{{(}{{original}{instanceof}{{{RandomKey}}{<}{?}{>}}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{another}{instanceof}{{{RandomKey}}{<}{?}{>}}}{)}}}{)}{{return}{false}{;}}}}
{AST_ROOT_SC2NF{{{}{{{addMeasurement}{(}{{new}{{LocalMeasurement}}{(}{this}{,}{x}{,}{y}{,}{w}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{measurements}{[}{i}{]}}{=}{{new}{{MinpackMeasurement}}{(}{this}{,}{i}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{?}{>}}{v}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{?}{>}}{v}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{?}{>}}{v}}}
{AST_ROOT_SC2NF{{final}{double}{{curN}{=}{{current}{.}{getN}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StatisticalSummary}}{observed}}}
{AST_ROOT_SC2NF{{{StatisticalSummary}}{{aggregatedStats}{=}{{AggregateSummaryStatistics}{.}{aggregate}{(}{aggregate}{)}}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setConvergenceChecker}{(}{{new}{{SimpleRealPointChecker}}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setConvergenceChecker}{(}{{new}{{SimpleVectorialPointChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{DescriptiveStatistics}}{{dstat}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{createMultivariateSummaryStatistics}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{createMultivariateSummaryStatistics}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{createMultivariateSummaryStatistics}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{createMultivariateSummaryStatistics}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{createMultivariateSummaryStatistics}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{createMultivariateSummaryStatistics}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{{{setCostAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{OpenMapRealVector}}{{res}{=}{{copy}{()}}}{;}}}
{AST_ROOT_SC2NF{{{OpenMapRealVector}}{{res}{=}{{copy}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{constraints}}{=}{{normalizeConstraints}{(}{constraints}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{FACTORIALS}{[}{n}{]}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STATIC_C}{,}{STATIC_A}{,}{STATIC_B}{,}{{new}{{ThreeEighthesStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STATIC_C}{,}{STATIC_A}{,}{STATIC_B}{,}{{new}{{EulerStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{DummyStepHandler}}{getInstance}{()}{{{}{{return}{INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STATIC_C}{,}{STATIC_A}{,}{STATIC_B}{,}{{new}{{MidpointStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{PERCENTILE}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{,}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{PERCENTILE}{.}{evaluate}{(}{values}{,}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MIN}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MIN}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MAX}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MAX}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VARIANCE}{.}{evaluate}{(}{values}{,}{mean}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VARIANCE}{.}{evaluate}{(}{values}{,}{mean}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VARIANCE}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VARIANCE}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{GEOMETRIC_MEAN}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{GEOMETRIC_MEAN}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MEAN}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MEAN}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SUM_OF_LOGS}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SUM_OF_LOGS}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{PRODUCT}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{PRODUCT}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SUM_OF_SQUARES}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SUM_OF_SQUARES}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SUM}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SUM}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STATIC_C}{,}{STATIC_A}{,}{STATIC_B}{,}{{new}{{ClassicalRungeKuttaStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{{Object}}{[]}{[]}}{getContents}{()}{{{}{{return}{{CONTENTS}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STATIC_C}{,}{STATIC_A}{,}{STATIC_B}{,}{{new}{{GillStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{alg}{=}{{MessageDigest}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}{}}}{{catch}{(}{{{NoSuchAlgorithmException}}{ex}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createInternalError}{(}{ex}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{row}{*}{columns}}{+}{column}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getRowDimension}{()}{{{}{{return}{rows}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getColumnDimension}{()}{{{}{{return}{columns}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{row}{*}{columns}}{+}{column}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getRowDimension}{()}{{{}{{return}{rows}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getColumnDimension}{()}{{{}{{return}{columns}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{function}{,}{linearConstraints}{,}{goal}{,}{nonNegative}{,}{epsilon}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{beta}{)}}{;}}{}}}}{{{{this}{.}{scale}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{)}}{;}}{}}}}{{{{this}{.}{shape}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{residual}{=}{{residuals}{[}{i}{]}}}{;}}{{{chiSquare}{+=}{{{residual}{*}{residual}}{/}{{residualsWeights}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{residual}{=}{{residuals}{[}{i}{]}}}{;}}{{{criterion}{+=}{{{residualsWeights}{[}{i}{]}}{*}{residual}{*}{residual}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{factor}{=}{{-}{{Math}{.}{sqrt}{(}{{residualsWeights}{[}{i}{]}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{e}}{)}{{{}{{throw}{{new}{{MathException}}{(}{e}{,}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateMatrixFunction}}{derivative}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{derivative}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getMean}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getExponent}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getNumberOfElements}{(}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{isNaN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{UnivariateVectorialFunction}}{derivative}{(}{)}{;}}}
{AST_ROOT_SC2NF{{long}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{fitness}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getSampleSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getPopulationSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getNumberOfSuccesses}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getSum}{(}{)}{;}}}
{AST_ROOT_SC2NF{{long}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getMin}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getMax}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getCurrentTime}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getPreviousTime}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{resetRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{resetAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getMaximalIterationCount}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{reset}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{DummyStepHandler}}{getInstance}{()}{{{}{{return}{LazyHolder.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{randomData}}{=}{randomData}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{generator}}}
{AST_ROOT_SC2NF{{return}{{{anovaPValue}{(}{categoryData}{)}}{<}{alpha}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{internalArray}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{internalArray}{;}}{}}}}
{AST_ROOT_SC2NF{{synchronized}{int}{getInternalLength}{()}{{{}{{return}{internalArray.length}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{dx}{=}{{x2}{-}{x1}}}{;}}}
{AST_ROOT_SC2NF{{return}{{isForward}{?}{{omegaImaginaryForward}{[}{k}{]}}{:}{{omegaImaginaryInverse}{[}{k}{]}}}{;}}}
{AST_ROOT_SC2NF{{{isForward}{=}{{n}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{return}{stdDev}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{{tTest}{(}{sampleStats1}{,}{sampleStats2}{)}}{<}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{{homoscedasticTTest}{(}{sample1}{,}{sample2}{)}}{<}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{{tTest}{(}{sample1}{,}{sample2}{)}}{<}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{{tTest}{(}{mu}{,}{sampleStats}{)}}{<}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{{tTest}{(}{mu}{,}{sample}{)}}{<}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{{pairedTTest}{(}{sample1}{,}{sample2}{)}}{<}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSquare}{()}{{{}{{return}{{{getColumnDimension}{()}}{==}{{getRowDimension}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{g0Positive}{=}{{g0}{>=}{NUMBER_CONSTANT}}}{;}}{{{nextAction}{=}{EventHandler.CONTINUE}}{;}}{}}}}
{AST_ROOT_SC2NF{{{increasing}{=}{{gb}{>=}{ga}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{t0}{=}{tStart}}{;}}{{{g0}{=}{{handler}{.}{g}{(}{tStart}{,}{yStart}{)}}}{;}}{{{g0Positive}{=}{{g0}{>=}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{t}{>}{t0}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{t}{>}{t0}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sum}{+=}{{{values}{[}{i}{]}}{*}{{weights}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{t}{>}{t0}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{o1}{.}{compareTo}{(}{{(}{{T}}{)}{o2}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{chiSquareTestDataSetsComparison}{(}{observed1}{,}{observed2}{)}}{<}{alpha}}{;}}}
{AST_ROOT_SC2NF{{{unequalCounts}{=}{{countSum1}{!=}{countSum2}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{chiSquareTest}{(}{counts}{)}}{<}{alpha}}{;}}}
{AST_ROOT_SC2NF{{return}{{{chiSquareTest}{(}{expected}{,}{observed}{)}}{<}{alpha}}{;}}}
{AST_ROOT_SC2NF{{return}{stdDev}{;}}}
{AST_ROOT_SC2NF{{i}{<}{{getRowDimension}{()}}}}
{AST_ROOT_SC2NF{{{}{{{correction}{+=}{{{values}{[}{i}{]}}{-}{xbar}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSquare}{()}{{{}{{return}{{{getColumnDimension}{()}}{==}{{getRowDimension}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{super}{.}{equals}{(}{stat}{)}}{&&}{{aggregateStatistics}{.}{equals}{(}{stat.aggregateStatistics}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{t}{>}{t0}}}{;}}}
{AST_ROOT_SC2NF{{{forward}{=}{{{interpolator}{.}{getCurrentTime}{()}}{>=}{lastTime}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{t}{>}{t0}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{N1}{=}{{new}{{Complex}}{(}{{n}{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{solution}{.}{getValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{solution}{.}{getValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{solution}{.}{getValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{while}{(}{{!}{{tableau}{.}{isOptimal}{()}}}{)}{{{}{{{doIteration}{(}{tableau}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{!}{{tableau}{.}{isOptimal}{()}}}{)}{{{}{{{doIteration}{(}{tableau}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Integer}}{{pivotRow}{=}{{getPivotRow}{(}{tableau}{,}{pivotCol}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tableau}{.}{dropPhase1Objective}{()}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{fitResidualSum}{<}{noisyResidualSum}}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{bounds}{=}{{{(}{{(}{{EmpiricalDistributionImpl}}{)}{empiricalDistribution2}}{)}}{.}{getGeneratorUpperBounds}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{{xval}{[}{NUMBER_CONSTANT}{]}}{==}{null}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{microsphereElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{microsphereElements}{)}}{;}}{}}}}{{{{this}{.}{microsphereElements}}{=}{microsphereElements}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{brightnessExponent}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{brightnessExponent}{)}}{;}}{}}}}{{{{this}{.}{brightnessExponent}}{=}{brightnessExponent}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{rootCause}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{rootCause}{)}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{MathUtils.TWO_PI}{*}{x}}{)}}}
{AST_ROOT_SC2NF{{double}{{f}{=}{{{(}{{MathUtils.TWO_PI}{*}{x}{*}{{(}{{n}{-}{x}}{)}}}{)}}{/}{n}}}{;}}}
{AST_ROOT_SC2NF{{double}{{d}{=}{{x}{-}{mu}}}{;}}}
{AST_ROOT_SC2NF{{flipAllIfWarranted}{(}{deflatedEnd}{)}}}
{AST_ROOT_SC2NF{{{flipEveryOtherIfWarranted}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{OVERFLOW_MESSAGE}{,}{numerator}{,}{denominator}{)}}{;}}{}}}}{{return}{{new}{{Fraction}}{(}{{-}{numerator}}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{fraction.numerator}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{FORBIDDEN_ZERO_DENOMINATOR}{)}}{;}}{}}}}{{return}{{multiply}{(}{{fraction}{.}{reciprocal}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{bg}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{FORBIDDEN_ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{den}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{FORBIDDEN_ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{negativeVarColumn}{=}{{columnLabels}{.}{indexOf}{(}{NEGATIVE_VAR_COLUMN_LABEL}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{restrictToNonNegative}}{)}{{{}{{{columnLabels}{.}{add}{(}{NEGATIVE_VAR_COLUMN_LABEL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{denominatorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{numeratorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{FAILED_EVALUATION_MESSAGE}{,}{{new}{{ArrayRealVector}}{(}{argument}{)}}{)}{;}}{{{{this}{.}{argument}}{=}{{argument}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{FAILED_EVALUATION_MESSAGE}{,}{argument}{)}{;}}{{{{this}{.}{argument}}{=}{{new}{{double}{[]}}{{{}{argument}{}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{!=}{startConfiguration.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{DIMENSION_MISMATCH_MESSAGE}{,}{n}{,}{startConfiguration.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{steps}{[}{j}{]}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EQUAL_VERTICES_MESSAGE}{,}{j}{,}{{j}{+}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EMPTY_ARRAY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EMPTY_ARRAY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EMPTY_ARRAY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREE_MESSAGE}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREE_MESSAGE}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{f}{instanceof}{{PolynomialFunction}}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POLYNOMIAL_FUNCTION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{instanceof}{{PolynomialFunction}}}{)}{{{}{{{p}{=}{{(}{{PolynomialFunction}}{)}{f}}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POLYNOMIAL_FUNCTION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTH_MISMATCH_MESSAGE}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTH_MISMATCH_MESSAGE}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{OUT_OF_RANGE_POINT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{WRONG_ORDER_ENDPOINTS_MESSAGE}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{WRONG_ORDER_ENDPOINTS_MESSAGE}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NULL_FUNCTION_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{function}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NULL_FUNCTION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_FITTING_POSITION_AND_SIZE_MESSAGE}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_FITTING_POSITION_AND_SIZE_MESSAGE}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{MISSING_ROOTS_OF_UNITY_MESSAGE}{)}}{;}}{}}}}{{return}{isForward}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{o.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NOT_POWER_OF_TWO_MESSAGE}{,}{o.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{d.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NOT_POWER_OF_TWO_MESSAGE}{,}{d.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{int}{{value}{=}{{decoded}{.}{get}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{mapDivide}{(}{norm}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{ArrayRealVector}{(}{{{ArrayRealVector}}{v}}{)}{{{}{{this}{(}{v}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isDefaultValue}{(}{norm}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{isDefaultValue}{(}{value}{)}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{values}{,}{DEFAULT_ZERO_TOLERANCE}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{OpenMapRealVector}{(}{{int}{dimension}}{)}{{{}{{this}{(}{dimension}{,}{DEFAULT_ZERO_TOLERANCE}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{NUMBER_CONSTANT}{,}{DEFAULT_ZERO_TOLERANCE}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setEntry}{(}{{int}{index}}{,}{{double}{value}}{)}{throws}{{MatrixIndexException}}{{{}{{{{data}{[}{index}{]}}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ULP}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.TANH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.TAN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SQRT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SINH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SIGNUM}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.RINT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ASIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG10}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.FLOOR}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.EXPM1}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.EXP}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.COSH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.COS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.CEIL}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.CBRT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ATAN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ASIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ACOS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ABS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG1P}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{epsilon}{=}{DEFAULT_ZERO_TOLERANCE}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{values}{,}{DEFAULT_ZERO_TOLERANCE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{epsilon}}{=}{epsilon}}{;}}}
{AST_ROOT_SC2NF{{public}{OpenMapRealVector}{(}{{int}{dimension}}{)}{{{}{{this}{(}{dimension}{,}{DEFAULT_ZERO_TOLERANCE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{NUMBER_CONSTANT}{,}{DEFAULT_ZERO_TOLERANCE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{BigReal}}{(}{{d}{.}{divide}{(}{a.d}{,}{scale}{,}{roundingMode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{lcm}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{a}{,}{b}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Solver}}{(}{singularValues}{,}{{getUT}{()}}{,}{{getV}{()}}{,}{{{getRank}{()}}{==}{{Math}{.}{max}{(}{m}{,}{n}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getL1Norm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getLInfNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getL1Norm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getLInfNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{dest.n}{=}{source.n}}{;}}{{{dest.m1}{=}{source.m1}}{;}}{{{dest.dev}{=}{source.dev}}{;}}{{{dest.nDev}{=}{source.nDev}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{LoessInterpolator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{LoessInterpolator}}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_BRACKETING_MESSAGE}{,}{min}{,}{max}{,}{yMin}{,}{yMax}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{solution}{.}{subtract}{(}{xRef}{)}}{.}{getNorm}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{yTmp}{,}{{yDotK}{[}{{stages}{-}{NUMBER_CONSTANT}}{]}}{,}{forward}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{interpolator}{)}{;}}{{{currentDerivative}{=}{{interpolator.currentDerivative}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{currentDerivative}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{BadStepInterpolator}{(}{{{double}{[]}}{y}}{,}{{boolean}{forward}}{)}{{{}{{super}{(}{y}{,}{{new}{{double}{[}}{y.length}{]}}{,}{forward}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DummyStepInterpolator}}{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{y}{,}{{new}{{double}{[}}{y.length}{]}}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{yTmp}{,}{{yDotK}{[}{{stages}{-}{NUMBER_CONSTANT}}{]}}{,}{forward}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{y}{,}{yDot1}{,}{forward}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{handler}{.}{handleStep}{(}{{new}{{StepInterpolatorWrapper}}{(}{interpolator}{,}{n}{,}{k}{)}}{,}{isLast}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{ODEWithJacobians}}{ode}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{mean}{,}{sd}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setTolerance}{(}{defaultTolerance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{f}{,}{DEFAULT_MAXIMUM_ITERATIONS}{,}{DEFAULT_ABSOLUTE_ACCURACY}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{mean}{;}}{}}}{else}{{{}{{return}{Double.MAX_VALUE}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{{-}{mean}}{*}{{Math}{.}{log}{(}{{NUMBER_CONSTANT}{-}{p}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{Math}{.}{exp}{(}{{{-}{x}}{/}{mean}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ExponentialDistributionImpl}{(}{{double}{mean}}{)}{{{}{``;}}{super}{{{setMeanInternal}{(}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getUpperDomain}{(}{sampleSize}{,}{numberOfSuccesses}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getLowerDomain}{(}{populationSize}{,}{numberOfSuccesses}{,}{sampleSize}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{Beta}{.}{regularizedBeta}{(}{probabilityOfSuccess}{,}{numberOfSuccesses}{,}{{x}{+}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setNumberOfSuccessesInternal}{(}{r}{)}}{;}}{{{setProbabilityOfSuccessInternal}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{alpha}{*}{beta}}}{;}}{}}}{else}{{{}{{{ret}{=}{Double.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{Gamma}{.}{regularizedGammaP}{(}{alpha}{,}{{x}{/}{beta}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setAlphaInternal}{(}{alpha}{)}}{;}}{{{setBetaInternal}{(}{beta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{Math}{.}{exp}{(}{{-}{{Math}{.}{pow}{(}{{x}{/}{scale}}{,}{shape}{)}}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setShapeInternal}{(}{alpha}{)}}{;}}{{{setScaleInternal}{(}{beta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TDistributionImpl}{(}{{double}{degreesOfFreedom}}{)}{{{}{``;}}{super}{{{setDegreesOfFreedomInternal}{(}{degreesOfFreedom}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Double.MIN_VALUE}{*}{{gamma}{.}{getBeta}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{gamma}{.}{cumulativeProbability}{(}{x}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<=}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{if}{(}{{x}{>=}{numberOfElements}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{<=}{NUMBER_CONSTANT}}{||}{{x}{>}{numberOfElements}}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setNumberOfElementsInternal}{(}{numberOfElements}{)}}{;}}{{{setExponentInternal}{(}{exponent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{d}{=}{denominatorDegreesOfFreedom}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setNumeratorDegreesOfFreedomInternal}{(}{numeratorDegreesOfFreedom}{)}}{;}}{{{setDenominatorDegreesOfFreedomInternal}{(}{denominatorDegreesOfFreedom}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{x}{<}{NUMBER_CONSTANT}}{||}{{x}{>}{numberOfTrials}}}}
{AST_ROOT_SC2NF{{{}{{return}{numberOfTrials}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setNumberOfTrialsInternal}{(}{trials}{)}}{;}}{{{setProbabilityOfSuccessInternal}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{mean}}{;}}{}}}{else}{{{}{{{ret}{=}{Double.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{-}{Double.MAX_VALUE}}}{;}}{}}}{else}{{{}{{{ret}{=}{mean}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{median}}{;}}{}}}{else}{{{}{{{ret}{=}{Double.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{-}{Double.MAX_VALUE}}}{;}}{}}}{else}{{{}{{{ret}{=}{median}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setMedianInternal}{(}{median}{)}}{;}}{{{setScaleInternal}{(}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{LaguerreSolver}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}{;}}{{{p}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setDistribution}{(}{{{AbstractContinuousDistribution}}{distribution}}{)}{{{}{{{{this}{.}{distribution}}{=}{distribution}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TDistributionImpl}{(}{{double}{degreesOfFreedom}}{)}{{{}{{this}{(}{degreesOfFreedom}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{numeratorDegreesOfFreedom}{,}{denominatorDegreesOfFreedom}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{alpha}{,}{beta}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{alpha}{,}{beta}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ExponentialDistributionImpl}{(}{{double}{mean}}{)}{{{}{{this}{(}{mean}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{median}{,}{s}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{row}{=}{{AINV}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{p}{=}{{interpolator}{.}{interpolate}{(}{xval}{,}{wyval}{,}{wzval}{)}}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{TestUtils}{.}{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{TestUtils}{.}{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{TestUtils}{.}{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{TestUtils}{.}{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ak2}{<}{NUMBER_CONSTANT}}{)}{{{}{{{rank}{=}{k}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ak2}{==}{NUMBER_CONSTANT}}{)}{{{}{{{rank}{=}{k}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ak2}{<=}{qrRankingThreshold}}{)}{{{}{{{rank}{=}{k}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{MathUtils}{.}{equals}{(}{Double.NaN}{,}{Double.NaN}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{residuals.length}{!=}{observations.length}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{point}{,}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{residuals.length}{,}{observations.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations.length}{!=}{{scale}{.}{getColumnDimension}{()}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{observations.length}{,}{{scale}{.}{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations.length}{!=}{weights.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{observations.length}{,}{weights.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{dimension}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE}{,}{minSingularValue}{,}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DuplicateSampleAbscissaException}}{e}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{e}{,}{z}{,}{{e}{.}{getLocalizablePattern}{()}}{,}{{e}{.}{getArguments}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{fval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.FRACTION_CONVERSION_OVERFLOW}{,}{value}{,}{p}{,}{q}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.FAILED_FRACTION_CONVERSION}{,}{value}{,}{maxIterations}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_WHOLE_FORMAT}{)}}{;}}{}}}}{{{{this}{.}{wholeFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Localizable}}{specifier}}}
{AST_ROOT_SC2NF{{if}{(}{{{sampleStats}{.}{getN}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createEOFException}{(}{LocalizedFormats.URL_CONTAINS_NO_DATA}{,}{url}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{r}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NEGATIVE_COMPLEX_MODULE}{,}{r}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{b.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{{getColumnDimension}{()}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{zval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{optima}{[}{NUMBER_CONSTANT}{]}}{==}{null}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIFFERENT_ROWS_LENGTHS}{,}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{fval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Localizable}}{specifier}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newDegreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM}{,}{newDegreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{degreesOfFreedom}}{=}{newDegreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sampleSize}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE}{,}{sampleSize}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MathRuntimeException}}{(}{{new}{{UnsupportedOperationException}}{()}}{,}{LocalizedFormats.NO_DENSITY_FOR_THIS_DISTRIBUTION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{successes}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES}{,}{successes}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{successes}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_SCALE}{,}{beta}{)}}{;}}{}}}}{{{{this}{.}{scale}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_SHAPE}{,}{alpha}{)}}{;}}{}}}}{{{{this}{.}{shape}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getZ}{()}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{LocalizedFormats.SIMPLE_MESSAGE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_UPPER_BOUND}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE}{,}{observations.length}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{e}{.}{compareTo}{(}{BigInteger.ZERO}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POWER_NEGATIVE_PARAMETERS}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POWER_NEGATIVE_PARAMETERS}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POWER_NEGATIVE_PARAMETERS}{,}{k}{,}{e}{)}}{;}}{}}}}{{return}{{k}{.}{pow}{(}{e}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POWER_NEGATIVE_PARAMETERS}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POWER_NEGATIVE_PARAMETERS}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POWER_NEGATIVE_PARAMETERS}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POWER_NEGATIVE_PARAMETERS}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lcm}{==}{Long.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.LCM_OVERFLOW_64_BITS}{,}{a}{,}{b}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lcm}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.LCM_OVERFLOW_32_BITS}{,}{a}{,}{b}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{f}{instanceof}{{PolynomialFunction}}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.FUNCTION_NOT_POLYNOMIAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{instanceof}{{PolynomialFunction}}}{)}{{{}{{{p}{=}{{(}{{PolynomialFunction}}{)}{f}}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.FUNCTION_NOT_POLYNOMIAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{nRows}{<}{NUMBER_CONSTANT}}{||}{{nCols}{<}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS}{,}{nRows}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{covarianceMatrix}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_COVARIANCE_MATRIX}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{offset}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{EventException}}{(}{LocalizedFormats.EVALUATION_FAILED}{,}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{DerivativeException}}{(}{LocalizedFormats.SIMPLE_MESSAGE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{{c1}{/}{c2}}{<}{NUMBER_CONSTANT}}{)}}{||}{{(}{{{c2}{/}{c3}}{<}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.EVALUATION_FAILED}{,}{{new}{{ArrayRealVector}}{(}{argument}{)}}{)}{;}}{{{{this}{.}{argument}}{=}{{argument}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.EVALUATION_FAILED}{,}{argument}{)}{;}}{{{{this}{.}{argument}}{=}{{new}{{double}{[]}}{{{}{argument}{}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cause}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{target.length}{!=}{weights.length}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{target.length}{,}{weights.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rows}{<=}{cols}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.NO_DEGREES_OF_FREEDOM}{,}{rows}{,}{cols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{objective.length}{!=}{rows}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{point}{,}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{objective.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{jacobian.length}{!=}{rows}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{point}{,}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{jacobian.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{data.length}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{data.length}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.DUPLICATED_ABSCISSA}{,}{abscissa}{,}{i1}{,}{i2}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{optima}{[}{NUMBER_CONSTANT}{]}}{==}{null}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{nRows}{<}{NUMBER_CONSTANT}}{||}{{nCols}{<}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS}{,}{nRows}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{d}{=}{{getDimension}{()}}}{;}}{{if}{(}{{d}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{d}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_RESULT_AVAILABLE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{(}{{minimalIterationCount}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{maximalIterationCount}{<=}{minimalIterationCount}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INVALID_ITERATIONS_LIMITS}{,}{minimalIterationCount}{,}{maximalIterationCount}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_RESULT_AVAILABLE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IntegratorException}}{(}{LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION}{,}{minStep}{,}{{Math}{.}{abs}{(}{h}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POWER_OF_TWO}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POWER_OF_TWO}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{data.length}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{data.length}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{verifyIterationCount}{()}}{;}}{{if}{(}{{maximalIterationCount}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INVALID_ITERATIONS_LIMITS}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.SAME_SIGN_AT_ENDPOINTS}{,}{min}{,}{max}{,}{yMin}{,}{yMax}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newMean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_MEAN}{,}{newMean}{)}}{;}}{}}}}{{{{this}{.}{mean}}{=}{newMean}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isDefaultValue}{(}{norm}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{p}{<=}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}{,}{p}{)}}{;}}{}}}}{{{quantile}{=}{p}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{p}{>}{NUMBER_CONSTANT}}{)}}{||}{{(}{{p}{<=}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getDimension}{()}}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{getDimension}{()}}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET}{)}}{;}}{}}}}{{return}{isForward}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{o.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}{,}{o.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{d.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}{,}{d.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{verifyIterationCount}{()}}{;}}{{if}{(}{{maximalIterationCount}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INVALID_ITERATIONS_LIMITS}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_EXPONENT}{,}{s}{)}}{;}}{}}}}{{{{this}{.}{exponent}}{=}{s}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INSUFFICIENT_DIMENSION}{,}{n}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{numberOfElements}}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INDEX_NOT_POSITIVE}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE}{,}{initialCapacity}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{expansionMode}{!=}{MULTIPLICATIVE_MODE}}{&&}{{expansionMode}{!=}{ADDITIVE_MODE}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.UNSUPPORTED_EXPANSION_MODE}{,}{expansionMode}{,}{MULTIPLICATIVE_MODE}{,}{STRING_CONSTANT}{,}{ADDITIVE_MODE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArrayIndexOutOfBoundsException}{(}{LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX}{,}{index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expansion}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE}{,}{expansion}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{numElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArrayIndexOutOfBoundsException}{(}{LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_NUMERATOR_FORMAT}{)}}{;}}{}}}}{{{{this}{.}{numeratorFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_DENOMINATOR_FORMAT}{)}}{;}}{}}}}{{{{this}{.}{denominatorFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{nSteps}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_ONE_PREVIOUS_POINT}{,}{name}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{isInfinite}{(}{norm2}{)}}{||}{{Double}{.}{isNaN}{(}{norm2}{)}}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN}{,}{rows}{,}{cols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CardanEulerSingularityException}{(}{{boolean}{isCardan}}{)}{{{}{{super}{(}{{isCardan}{?}{LocalizedFormats.CARDAN_ANGLES_SINGULARITY}{:}{LocalizedFormats.EULER_ANGLES_SINGULARITY}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{arrayDimension}{!=}{expected}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{arrayDimension}{,}{expected}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{!=}{startConfiguration.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{n}{,}{startConfiguration.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{steps}{[}{j}{]}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.EQUAL_VERTICES_IN_SIMPLEX}{,}{j}{,}{{j}{+}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{microsphereElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NON_POSITIVE_MICROSPHERE_ELEMENTS}{,}{microsphereElements}{)}}{;}}{}}}}{{{{this}{.}{microsphereElements}}{=}{elements}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{brightnessExponent}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT}{,}{brightnessExponent}{)}}{;}}{}}}}{{{{this}{.}{brightnessExponent}}{=}{brightnessExponent}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{nRows}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.AT_LEAST_ONE_ROW}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{nCols}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.AT_LEAST_ONE_COLUMN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_MEAN}{,}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sigma}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION}{,}{sigma}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_POISSON_MEAN}{,}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_LENGTH}{,}{len}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_LENGTH}{,}{len}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{isInfinite}{(}{norm2}{)}}{||}{{Double}{.}{isNaN}{(}{norm2}{)}}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN}{,}{rows}{,}{cols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sd}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION}{,}{sd}{)}}{;}}{}}}}{{{standardDeviation}{=}{sd}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{str}{=}{{filePointer}{.}{readLine}{()}}}{)}}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createEOFException}{(}{LocalizedFormats.URL_CONTAINS_NO_DATA}{,}{valuesFileURL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{empiricalDistribution}{==}{null}}{)}}{||}{{(}{{{{empiricalDistribution}{.}{getBinStats}{()}}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.DIGEST_NOT_INITIALIZED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newBeta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_BETA}{,}{newBeta}{)}}{;}}{}}}}{{{{this}{.}{beta}}{=}{newBeta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newAlpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_ALPHA}{,}{newAlpha}{)}}{;}}{}}}}{{{{this}{.}{alpha}}{=}{newAlpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{denominatorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{numeratorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC}{,}{{getN}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{NUMBER_CONSTANT}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{verifyIterationCount}{()}}{;}}{{if}{(}{{maximalIterationCount}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INVALID_ITERATIONS_LIMITS}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE}{,}{f.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE}{,}{size}{)}}{;}}{}}}}{{{sampleSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_POPULATION_SIZE}{,}{size}{)}}{;}}{}}}}{{{populationSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{num}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES}{,}{num}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{num}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Localizable}}{pattern}}}
{AST_ROOT_SC2NF{{if}{(}{{xval.length}{!=}{yval.length}}{)}{{{}{{throw}{{new}{{MathException}}{(}{LocalizedFormats.MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS}{,}{xval.length}{,}{yval.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_SCALE}{,}{s}{)}}{;}}{}}}}{{{scale}{=}{s}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{optima}{[}{NUMBER_CONSTANT}{]}}{==}{null}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Localizable}}{pattern}}}
{AST_ROOT_SC2NF{{{Localizable}}{pattern}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{cce}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.FUNCTION_NOT_DIFFERENTIABLE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{NUMBER_CONSTANT}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{d.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.AT_LEAST_ONE_ROW}{)}}{;}}{}}}}{{return}{{{d}{[}{NUMBER_CONSTANT}{]}}{.}{getField}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.ASSYMETRIC_EIGEN_NOT_SUPPORTED}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_POISSON_MEAN}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{NotARotationMatrixException}}{(}{LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX}{,}{{i}{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{fraction.numerator}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_DENOMINATOR}{)}}{;}}{}}}}{{return}{{multiply}{(}{{fraction}{.}{reciprocal}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{bg}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{y0}{*}{y1}}{>=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.SAME_SIGN_AT_ENDPOINTS}{,}{min}{,}{max}{,}{y0}{,}{y1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{{incrementAll}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_WHOLE_FORMAT}{)}}{;}}{}}}}{{{{this}{.}{wholeFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{dimension1}{,}{dimension2}{)}{;}}{{{{this}{.}{dimension1}}{=}{dimension1}}{;}}{{{{this}{.}{dimension2}}{=}{dimension2}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FUNCTION}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{trials}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NEGATIVE_NUMBER_OF_TRIALS}{,}{trials}{)}}{;}}{}}}}{{{numberOfTrials}{=}{trials}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isSequence}{(}{lower}{,}{initial}{,}{upper}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS}{,}{lower}{,}{initial}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_RESULT_AVAILABLE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{f}{[}{NUMBER_CONSTANT}{]}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.FIRST_ELEMENT_NOT_ZERO}{,}{{f}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{realFormat}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_REAL_FORMAT}{)}}{;}}{}}}}{{{{this}{.}{realFormat}}{=}{realFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{imaginaryFormat}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_IMAGINARY_FORMAT}{)}}{;}}{}}}}{{{{this}{.}{imaginaryFormat}}{=}{imaginaryFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{imaginaryCharacter}{==}{null}}{||}{{{imaginaryCharacter}{.}{length}{()}}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.EMPTY_STRING_FOR_IMAGINARY_CHARACTER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.OVERFLOW_IN_FRACTION}{,}{numerator}{,}{denominator}{)}}{;}}{}}}}{{return}{{new}{{Fraction}}{(}{{-}{numerator}}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.NON_SQUARE_MATRIX}{,}{rows}{,}{columns}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Localizable}}{specifier}}}
{AST_ROOT_SC2NF{{if}{(}{{m}{<=}{p}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{LocalizedFormats.NO_DEGREES_OF_FREEDOM}{,}{m}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{++}{costEvaluations}}{>}{maxCostEval}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{LocalizedFormats.MAX_EVALUATIONS_EXCEEDED}{,}{maxCostEval}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{in}{[}{i}{]}}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX}{,}{i}{,}{{in}{[}{i}{]}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{in}{[}{i}{]}}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX}{,}{i}{,}{{in}{[}{i}{]}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{{optima}{[}{NUMBER_CONSTANT}{]}}{)}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optimaValues}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}{)}}{;}}{}}}}{{return}{{optimaValues}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.NO_OPTIMUM_COMPUTED_YET}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.NO_SUCH_MATRIX_ENTRY}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_2x2}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIFFERENT_ROWS_LENGTHS}{,}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{{xval}{[}{NUMBER_CONSTANT}{]}}{==}{null}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sampleSize}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE}{,}{sampleSize}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalAccessException}}{e2}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD}{,}{SET_QUANTILE_METHOD_NAME}{,}{{{percentileImpl}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{windowSize}{<}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{windowSize}{!=}{INFINITE_WINDOW}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE}{,}{windowSize}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_UPPER_BOUND}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean.length}{!=}{standardDeviation.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{mean.length}{,}{standardDeviation.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO}{,}{i}{,}{k}{,}{{x}{[}{i}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS}{,}{{{original}{.}{getClass}{()}}{.}{getSimpleName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED}{,}{n}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{sum}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ARRAY_SUMS_TO_ZERO}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL}{,}{lower}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX}{,}{k}{,}{NUMBER_CONSTANT}{,}{{omegaCount}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX}{,}{k}{,}{NUMBER_CONSTANT}{,}{{omegaCount}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL}{,}{lower}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL}{,}{lower}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{LocalizedFormats.UNPARSEABLE_REAL_VECTOR}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{e1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD}{,}{{{percentileImpl}{.}{getClass}{()}}{.}{getName}{()}}{,}{SET_QUANTILE_METHOD_NAME}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{LocalizedFormats.UNPARSEABLE_3D_VECTOR}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NotStrictlyPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{value}{,}{NUMBER_CONSTANT}{,}{false}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NotPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{value}{,}{NUMBER_CONSTANT}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{fval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{NoDataException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.NUMBER_OF_POINTS}{,}{x.length}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.NUMBER_OF_POINTS}{,}{x.length}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean.length}{!=}{standardDeviation.length}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{mean.length}{,}{standardDeviation.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NotStrictlyPositiveException}}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{==}{null}}{?}{null}{:}{{value}{.}{clone}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{point}{==}{null}}{?}{null}{:}{{point}{.}{clone}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{point}{==}{null}}{?}{null}{:}{{point}{.}{clone}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{scale}{=}{{new}{{double}{[}}{mainSetDimension}{]}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoDataException}}{ise}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{LocalizedFormats.NO_DATA}{,}{{(}{{{Object}}{[]}}{)}{null}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{a}{[}{i}{]}}{[}{j}{]}}{[}{k}{]}}{=}{{aV}{[}{{i}{+}{{N}{*}{{(}{{j}{+}{{N}{*}{k}}}{)}}}}{]}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{value}{==}{null}}{)}}{?}{null}{:}{{value}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{point}{==}{null}}{)}}{?}{null}{:}{{point}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{{boundIsAllowed}{?}{LocalizedFormats.NUMBER_TOO_SMALL}{:}{LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED}}{,}{wrong}{,}{min}{)}{;}}}
{AST_ROOT_SC2NF{{{(}{{startConfiguration}{==}{null}}{)}}{||}{{(}{{startConfiguration.length}{!=}{startPoint.length}}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{point}{==}{null}}{)}}{?}{null}{:}{{point}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{GoalType}}{getGoalType}{()}{{{}{{return}{optimizationGoal}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE}{,}{column}{,}{NUMBER_CONSTANT}{,}{{{getColumnDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.ROW_INDEX_OUT_OF_RANGE}{,}{row}{,}{NUMBER_CONSTANT}{,}{{{getRowDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.INDEX_OUT_OF_RANGE}{,}{index}{,}{NUMBER_CONSTANT}{,}{{{getDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.INDEX_OUT_OF_RANGE}{,}{index}{,}{NUMBER_CONSTANT}{,}{{{getDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{LocalizedFormats.INDEX_OUT_OF_RANGE}{,}{index}{,}{NUMBER_CONSTANT}{,}{{{getDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{remove}{()}{{{}{{throw}{{MathRuntimeException}{.}{createUnsupportedOperationException}{(}{LocalizedFormats.UNSUPPORTED_OPERATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{METHOD_NAME}{,}{nSteps}{,}{{nSteps}{+}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{METHOD_NAME}{,}{nSteps}{,}{{nSteps}{+}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{METHOD_NAME}{,}{nSteps}{,}{nSteps}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{METHOD_NAME}{,}{nSteps}{,}{nSteps}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{populationLimit}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NotPositiveException}}{(}{LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE}{,}{populationLimit}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{addAndCheck}{(}{a}{,}{{-}{b}}{,}{LocalizedFormats.OVERFLOW_IN_ADDITION}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{s}{<}{Integer.MIN_VALUE}}{||}{{s}{>}{Integer.MAX_VALUE}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.OVERFLOW_IN_SUBTRACTION}{,}{x}{,}{y}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{addAndCheck}{(}{a}{,}{b}{,}{LocalizedFormats.OVERFLOW_IN_ADDITION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{s}{<}{Integer.MIN_VALUE}}{||}{{s}{>}{Integer.MAX_VALUE}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.OVERFLOW_IN_ADDITION}{,}{x}{,}{y}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArithmeticException}}{ex}}{)}{{{}{{{assertTrue}{(}{{{{ex}{.}{getMessage}{()}}{.}{length}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkOrder}{(}{val}{,}{OrderDirection.INCREASING}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{wrong}{,}{previous}{,}{index}{,}{MathUtils.OrderDirection.INCREASING}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{==}{NUMBER_CONSTANT}}{&&}{{i}{>=}{j}}}{)}{continue;}}}
{AST_ROOT_SC2NF{{{arguments}{=}{{ArgUtils}{.}{flatten}{(}{args}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{remove}{()}{{{}{{throw}{{new}{{MathUnsupportedOperationException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idxStep}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idxStep}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.INPUT_ARRAY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{d}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ZeroException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{xArray.length}{,}{yArray.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{covarianceMatrix}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.COVARIANCE_MATRIX}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.FUNCTION}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{function}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.INPUT_ARRAY}{)}}{;}}{}}}}{{{incrementAll}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{LocalizedFormats.INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{grad}{=}{{weightedResidualJacobian}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cause}{,}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cause}{,}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{step}{*=}{{FastMath}{.}{max}{(}{NUMBER_CONSTANT}{,}{{yA}{/}{yB}}{)}}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{{sum}{/}{v.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{sqrt}{(}{{{getChiSquare}{()}}{/}{rows}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{wi}{=}{{FastMath}{.}{sqrt}{(}{{residualsWeights}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{h}}{=}{{FastMath}{.}{abs}{(}{h}{)}}}{;}}{{{{this}{.}{handler}}{=}{handler}}{;}}{{{reset}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{invR3}{=}{{NUMBER_CONSTANT}{/}{{(}{{r2}{*}{{FastMath}{.}{sqrt}{(}{r2}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{sum2}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{FastMath}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{FastMath}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{{FastMath}{.}{abs}{(}{{rValues}{.}{getEntry}{(}{i}{,}{j}{)}}{)}}{/}{{stdErrors}{.}{getEntry}{(}{i}{,}{j}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{n}{+}{STRING_CONSTANT}{+}{degree}{+}{STRING_CONSTANT}{+}{i}}{,}{reference}{,}{result}{,}{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{+}{{FastMath}{.}{abs}{(}{reference}{)}}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{+}{{Erf}{.}{erf}{(}{{{(}{{x}{-}{mean}}{)}}{/}{{(}{{standardDeviation}{*}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{{{dx}{*}{dx}}{+}{{dy}{*}{dy}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{{FastMath}{.}{sqrt}{(}{m.length}{)}}{*}{{estimator}{.}{getRMS}{(}{problem}{)}}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{{result}{[}{i}{]}}{-}{{y}{[}{i}{]}}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{{result}{[}{i}{]}}{-}{{y}{[}{i}{]}}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{{FastMath}{.}{sqrt}{(}{problem.target.length}{)}}{*}{{optimizer}{.}{getRMS}{()}}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sumLog}{+=}{{FastMath}{.}{log}{(}{{values}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{value}{+=}{{FastMath}{.}{log}{(}{d}{)}}}{;}}{{{n}{++}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{{-}{mean}}{*}{{FastMath}{.}{log}{(}{{NUMBER_CONSTANT}{-}{p}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{FastMath}{.}{exp}{(}{{{-}{x}}{/}{mean}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{x}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{{return}{{{FastMath}{.}{exp}{(}{{{-}{x}}{/}{mean}}{)}}{/}{mean}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{sum}{+=}{{FastMath}{.}{abs}{(}{{{p1}{[}{i}{]}}{-}{{p2}{[}{i}{]}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{FastMath}{.}{exp}{(}{x}{)}}{-}{{FastMath}{.}{exp}{(}{{-}{x}}{)}}}{)}}{/}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{float}{{factor}{=}{{{(}{float}{)}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{scale}{)}}}{*}{sign}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{log}{(}{x}{)}}{/}{{FastMath}{.}{log}{(}{base}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{FastMath}{.}{abs}{(}{u}{)}}{+}{{FastMath}{.}{abs}{(}{v}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{FastMath}{.}{abs}{(}{u}{)}}{+}{{FastMath}{.}{abs}{(}{v}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{isEqual}{=}{{{FastMath}{.}{abs}{(}{{xInt}{-}{yInt}}{)}}{<=}{maxUlps}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{equalsIncludingNaN}{(}{x}{,}{y}{)}}{||}{{(}{{{FastMath}{.}{abs}{(}{{y}{-}{x}}{)}}{<=}{eps}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{equals}{(}{x}{,}{y}{,}{NUMBER_CONSTANT}{)}}{||}{{{FastMath}{.}{abs}{(}{{y}{-}{x}}{)}}{<=}{eps}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{FastMath}{.}{exp}{(}{x}{)}}{+}{{FastMath}{.}{exp}{(}{{-}{x}}{)}}}{)}}{/}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{floor}{(}{{result}{+}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{sigma}{=}{{NUMBER_CONSTANT}{+}{{FastMath}{.}{random}{()}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{mu}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{f.length}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{f.length}{)}}}}{;}}{{return}{{scaleArray}{(}{{fft}{(}{f}{,}{true}{)}}{,}{scaling_coefficient}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{f.length}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{f.length}{)}}}}{;}}{{return}{{scaleArray}{(}{{fft}{(}{f}{,}{false}{)}}{,}{scaling_coefficient}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{atan2}{(}{{getImaginary}{()}}{,}{{getReal}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{abs}{(}{c}{)}}{<}{{FastMath}{.}{abs}{(}{d}{)}}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{abs}{(}{dt}{)}}{<=}{{FastMath}{.}{ulp}{(}{stepStart}{)}}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{FastMath.PI}{,}{x}{,}{accuracy}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{x}{=}{{UnivariateRealSolverUtils}{.}{solve}{(}{sin}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{FastMath.PI}{,}{x}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{expected}{,}{result}{,}{{FastMath}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{expected}{,}{result}{,}{{FastMath}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{singularValues}{[}{i}{]}}{=}{{FastMath}{.}{sqrt}{(}{{FastMath}{.}{abs}{(}{{singularValues}{[}{i}{]}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{FastMath}{.}{sqrt}{(}{{sigma}{*}{{{betaVariance}{[}{i}{]}}{[}{i}{]}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{fpos}{=}{{FastMath}{.}{floor}{(}{pos}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{dist}{=}{{FastMath}{.}{abs}{(}{{z}{-}{{x}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setMaxGrowth}{(}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{{-}{exp}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setMaxGrowth}{(}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{{-}{exp}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x}{,}{{FastMath}{.}{sqrt}{(}{{x.length}{/}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{tolerance}{=}{{FastMath}{.}{max}{(}{{relativeAccuracy}{*}{{z}{.}{abs}{()}}}{,}{absoluteAccuracy}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{sqrt}{=}{{FastMath}{.}{sqrt}{(}{{{c}{[}{ir}{]}}{[}{ir}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{k}{=}{{FastMath}{.}{max}{(}{N}{,}{seed.length}{)}}}}}
{AST_ROOT_SC2NF{{{}{{{{values}{[}{i}{]}}{=}{{FastMath}{.}{pow}{(}{{values}{[}{i}{]}}{,}{d}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{FastMath}{.}{abs}{(}{{t}{(}{m}{,}{mu}{,}{v}{,}{n}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{m}{-}{mu}}{)}}{/}{{FastMath}{.}{sqrt}{(}{{v}{/}{n}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stepStart}{=}{Double.NaN}}{;}}{{{stepSize}{=}{{FastMath}{.}{sqrt}{(}{{minStep}{*}{maxStep}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{msg}{,}{expected}{,}{actual}{,}{{FastMath}{.}{abs}{(}{{tolerance}{*}{actual}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{Gamma}{.}{digamma}{(}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{{-}{n}}{)}}{)}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{absAi}{=}{{FastMath}{.}{abs}{(}{{coefficients}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{median}{+}{{scale}{*}{{FastMath}{.}{tan}{(}{{FastMath.PI}{*}{{(}{{p}{-}{NUMBER_CONSTANT}}{)}}}{)}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{NUMBER_CONSTANT}{/}{FastMath.PI}}{)}}{*}{{(}{{scale}{/}{{(}{{{dev}{*}{dev}}{+}{{scale}{*}{scale}}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{pi}{=}{{Double}{.}{valueOf}{(}{FastMath.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{FastMath}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{FastMath}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stdDev}{[}{i}{]}}{=}{{FastMath}{.}{sqrt}{(}{{matrix}{.}{getEntry}{(}{i}{,}{i}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{(}{int}{)}{{(}{{FastMath}{.}{abs}{(}{{{NUMBER_CONSTANT}{*}{x}}{+}{{NUMBER_CONSTANT}{*}{y}}}{)}}{)}}}{%}{NUMBER_CONSTANT}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{{(}{int}{)}{{(}{{FastMath}{.}{abs}{(}{{{NUMBER_CONSTANT}{*}{x}}{+}{{NUMBER_CONSTANT}{*}{y}}}{)}}{)}}}{%}{NUMBER_CONSTANT}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{/}{{(}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}{,}{{sample}{.}{getStandardDeviation}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{/}{{(}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}{,}{{sample}{.}{getStandardDeviation}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{!=}{i}}{)}{{{}{{{res}{+=}{{FastMath}{.}{abs}{(}{{value}{-}{i}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{value}{+=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{pow}{(}{k}{,}{m}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{pow}{(}{x}{,}{exponent}{)}}}{)}}{/}{{generalizedHarmonic}{(}{numberOfElements}{,}{exponent}{)}}}{;}}}
{AST_ROOT_SC2NF{{{widthSufficient}{=}{{{{FastMath}{.}{min}{(}{lowerBinMass}{,}{upperBinMass}{)}}{*}{sampleSize}}{>=}{minExpectedCount}}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{{criterion}{/}{wm.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{factor}{=}{{-}{{FastMath}{.}{sqrt}{(}{{wm}{.}{getWeight}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{value}{-}{expected}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{end}{()}{{{}{{return}{{FastMath}{.}{sqrt}{(}{sum}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{atan2}{(}{x}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{pow}{(}{x}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{accum3}{/=}{{variance}{*}{{FastMath}{.}{sqrt}{(}{variance}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{n0}{*}{moment.m3}}{)}}{/}{{(}{{{(}{{n0}{-}{NUMBER_CONSTANT}}{)}}{*}{{(}{{n0}{-}{NUMBER_CONSTANT}}{)}}{*}{{FastMath}{.}{sqrt}{(}{variance}{)}}{*}{variance}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{FastMath}{.}{exp}{(}{NUMBER_CONSTANT}{)}}{,}{{u}{.}{getGeometricMean}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{asin}{(}{{z}{/}{{getNorm}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{atan2}{(}{y}{,}{x}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{{generated}{[}{NUMBER_CONSTANT}{]}}{-}{NUMBER_CONSTANT}}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{HarmonicFunction}}{(}{{a}{*}{omega}}{,}{omega}{,}{{phi}{+}{{FastMath.PI}{/}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{a}{*}{{FastMath}{.}{cos}{(}{{{omega}{*}{x}}{+}{phi}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Complex}}{{sqrtz}{=}{{ComplexUtils}{.}{polar2Complex}{(}{{FastMath}{.}{sqrt}{(}{r}{)}}{,}{{theta}{/}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{new}{{Complex}}{(}{{FastMath}{.}{acos}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{,}{{Complex.ZERO}{.}{acos}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{value}{-}{reference}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{index}{=}{{FastMath}{.}{round}{(}{{{(}{{FastMath}{.}{random}{()}}{)}}{*}{testArray.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{length}{=}{{{list}{.}{size}{()}}{-}{{FastMath}{.}{max}{(}{NUMBER_CONSTANT}{,}{{{list}{.}{size}{()}}{-}{windowSize}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{c}{=}{{t2}{+}{{NUMBER_CONSTANT}{*}{{(}{{{FastMath}{.}{exp}{(}{{{-}{NUMBER_CONSTANT}}{*}{t2}}{)}}{-}{NUMBER_CONSTANT}}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{NUMBER_CONSTANT}{*}{FastMath.PI}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{NUMBER_CONSTANT}{*}{FastMath.PI}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}{,}{{e1}{.}{distanceFrom}{(}{e2}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{error}{=}{{{FastMath}{.}{sqrt}{(}{{error}{/}{scale.length}}{)}}{*}{{errfac}{[}{{currentDegree}{-}{NUMBER_CONSTANT}}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{log}{(}{x}{)}}{-}{{NUMBER_CONSTANT}{/}{x}}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{power}{=}{{FastMath}{.}{pow}{(}{normalizedAbscissa}{,}{order}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}{,}{{Vector3D}{.}{distance}{(}{v1}{,}{v2}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}{,}{{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getNorm}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{exp}{(}{{{sumOfLogs}{.}{getResult}{()}}{/}{{sumOfLogs}{.}{getN}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{x}{)}}{,}{{f}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{convergence}}{=}{{FastMath}{.}{abs}{(}{convergence}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{capacity}{=}{{(}{int}{)}{{FastMath}{.}{ceil}{(}{{expectedSize}{/}{LOAD_FACTOR}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{fl}{=}{{FastMath}{.}{floor}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{cumulativeProbability}{(}{{(}{int}{)}{{FastMath}{.}{floor}{(}{x}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{value}{-}{reference}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{absError}{=}{{{FastMath}{.}{abs}{(}{expected}{)}}{*}{relativeError}}}{;}}{{{Assert}{.}{assertEquals}{(}{msg}{,}{expected}{,}{actual}{,}{absError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{-}{mean}}{*}{{FastMath}{.}{log}{(}{unif}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{sigma}{=}{{FastMath}{.}{sqrt}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{{x1}{-}{x0}}{)}}{<=}{absoluteAccuracy}}{)}{{{}{{{setResult}{(}{x1}{,}{i}{)}}{;}}{{return}{x1}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{delta}{=}{{FastMath}{.}{abs}{(}{{{getEntry}{(}{i}{)}}{-}{{v}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{delta}{=}{{FastMath}{.}{abs}{(}{{{getEntry}{(}{i}{)}}{-}{{v}{[}{i}{]}}}{)}}}{;}}{{{max}{+=}{delta}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{res}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{res}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{abs}{(}{value}{)}}{<}{epsilon}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{value}{-}{expected}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{Fraction}}{(}{FastMath.PI}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Fraction}}{(}{{{(}{{NUMBER_CONSTANT}{+}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}{/}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{max}{=}{{FastMath}{.}{max}{(}{max}{,}{{FastMath}{.}{abs}{(}{delta}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{max}{=}{{FastMath}{.}{max}{(}{max}{,}{{FastMath}{.}{abs}{(}{delta}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{delta}{=}{{{data}{[}{i}{]}}{-}{{v}{[}{i}{]}}}}{;}}{{{sum}{+=}{{FastMath}{.}{abs}{(}{delta}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sum}{+=}{{FastMath}{.}{abs}{(}{delta}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{a}}{:}{data}{)}{{{}{{{max}{=}{{FastMath}{.}{max}{(}{max}{,}{{FastMath}{.}{abs}{(}{a}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{a}}{:}{data}{)}{{{}{{{sum}{+=}{{FastMath}{.}{abs}{(}{a}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{ulp}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{signum}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{rint}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{floor}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{ceil}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{cbrt}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{sqrt}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{abs}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{atan}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{asin}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{acos}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{tan}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{sin}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{cos}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{tanh}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{sinh}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{cosh}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{log1p}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{log10}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{log}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{expm1}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{exp}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{FastMath}{.}{pow}{(}{{data}{[}{i}{]}}{,}{d}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{i}{<}{{FastMath}{.}{min}{(}{rows}{,}{columns}{)}}}}
{AST_ROOT_SC2NF{{final}{double}{{inv}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{norm2}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{FastMath}{.}{abs}{(}{{value}{-}{{searchArray}{[}{i}{]}}}{)}}{<}{tolerance}}{)}{{{}{{{found}{=}{true}}{;}}{}}}}{{{i}{++}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{abs}{(}{dt}{)}}{<=}{{FastMath}{.}{ulp}{(}{stepStart}{)}}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{{FastMath}{.}{abs}{(}{step}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{p}{=}{{FastMath}{.}{min}{(}{m}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{int}{)}{{FastMath}{.}{min}{(}{{randomData}{.}{nextPoisson}{(}{mean}{)}}{,}{Integer.MAX_VALUE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{normal}{.}{setStandardDeviation}{(}{{FastMath}{.}{sqrt}{(}{p}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{unequalCounts}{)}{{{}{{{weight}{=}{{FastMath}{.}{sqrt}{(}{{{(}{double}{)}{countSum1}}{/}{{(}{double}{)}{countSum2}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{{sumExpected}{-}{sumObserved}}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{ratio}{=}{{sumObserved}{/}{sumExpected}}}{;}}{{{rescale}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{s17}{=}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{norm}{=}{{FastMath}{.}{max}{(}{norm}{,}{{FastMath}{.}{abs}{(}{{e}{.}{getValue}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{norm}{+=}{{FastMath}{.}{abs}{(}{{e}{.}{getValue}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{d}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastMath}{.}{sqrt}{(}{{{dx}{*}{dx}}{+}{{dy}{*}{dy}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{FastMath}{.}{sqrt}{(}{{circle}{.}{getM}{()}}{)}}{*}{rms}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{a}{*}{{FastMath}{.}{cos}{(}{{{omega}{*}{x}}{+}{phi}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{f}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{normSq}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{stdDev}{=}{{FastMath}{.}{sqrt}{(}{{getVariance}{()}}{)}}}{;}}{}}}{else}{{{}{{{stdDev}{=}{NUMBER_CONSTANT}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{h}{)}}{<}{minStep}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{maxStep}{=}{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{stdDev}{=}{{FastMath}{.}{sqrt}{(}{{getVariance}{()}}{)}}}{;}}{}}}{else}{{{}{{{stdDev}{=}{NUMBER_CONSTANT}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{y0}{=}{{{}{{FastMath}{.}{sin}{(}{a}{)}}{,}{{FastMath}{.}{cos}{(}{a}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{new}{{double}{[]}}{{{}{{-}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{}{{new}{{BigReal}}{(}{NUMBER_CONSTANT}{)}}{,}{BigReal.ONE}{,}{BigReal.ZERO}{,}{{new}{{BigReal}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{BigReal}}{(}{FastMath.PI}{)}}{,}{{new}{{BigReal}}{(}{{-}{NUMBER_CONSTANT}}{)}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{deltaNorm}{>}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{max}{(}{NUMBER_CONSTANT}{,}{initialNorm}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{FastMath.PI}{,}{{MathUtils}{.}{scalb}{(}{FastMath.PI}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{MathUtils}{.}{hash}{(}{{new}{{double}{[]}}{{{}{{FastMath}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{}}}}{)}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{i}{+}{STRING_CONSTANT}}{,}{{FastMath}{.}{log}{(}{{factorial}{(}{i}{)}}{)}}{,}{{MathUtils}{.}{factorialLog}{(}{i}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{double}{[]}}{{{}{{FastMath}{.}{nextAfter}{(}{{FastMath}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{MathUtils}{.}{equals}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{,}{{new}{{double}{[]}}{{{}{{FastMath}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{}}}}{)}}}
{AST_ROOT_SC2NF{{{ret}{=}{{FastMath}{.}{exp}{(}{{{p1}{+}{p2}}{-}{p3}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{min}{(}{k}{,}{m}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{max}{(}{NUMBER_CONSTANT}{,}{{m}{-}{{(}{{n}{-}{k}}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{-}{{distribution}{.}{cumulativeProbability}{(}{{{FastMath}{.}{abs}{(}{{getSlope}{()}}{)}}{/}{{getSlopeStdErr}{()}}}{)}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{/}{sumXX}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{FastMath}{.}{sqrt}{(}{{getRSquare}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{sumXX}{)}}{<}{{NUMBER_CONSTANT}{*}{Double.MIN_VALUE}}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{ulp}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{signum}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{rint}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{cosh}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{acos}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{cos}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{log10}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{log}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{floor}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{ceil}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{cbrt}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{tanh}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{tan}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{atan}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{asin}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{expm1}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{exp}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{sinh}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{sqrt}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{sin}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{FastMath}{.}{abs}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{BigFraction}}{(}{FastMath.PI}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{new}{{BigFraction}}{(}{{{(}{{NUMBER_CONSTANT}{+}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}{/}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{FastMath}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x}{,}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{*}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{c}{=}{{FastMath}{.}{exp}{(}{{t0}{-}{t}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{FastMath}{.}{sqrt}{(}{{circle}{.}{getN}{()}}{)}}{*}{{optimizer}{.}{getRMS}{()}}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{product}{*=}{{FastMath}{.}{pow}{(}{{values}{[}{i}{]}}{,}{{weights}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x2}{,}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{x2.length}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{v}{,}{{new}{{ArrayRealVector}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{NUMBER_CONSTANT}{+}{{FastMath}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}}{}}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{{(}{{f.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{{fn1}{-}{fn}}{)}}{<=}{threshold}}{)}{{return}{o}{;}}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{v}{,}{{new}{{OpenMapRealVector}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{NUMBER_CONSTANT}{+}{{FastMath}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}}{}}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{sin}{(}{{{i}{*}{FastMath.PI}}{/}{n}}{)}}{*}{{(}{{{f}{[}{i}{]}}{+}{{f}{[}{{n}{-}{i}}{]}}}{)}}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{n}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{scaling_coefficient}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{f.length}}{)}}}{;}}{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fst}{(}{f}{)}}{,}{scaling_coefficient}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{FastMath}{.}{exp}{(}{tmp1}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{FastMath}{.}{sqrt}{(}{tmpSquare}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{absTolerance}{=}{{FastMath}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{abs}{(}{{max}{-}{min}}{)}}{<=}{absoluteAccuracy}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ci}{,}{{l40}{[}{i}{]}}{,}{{{FastMath}{.}{abs}{(}{ci}{)}}{*}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{abs}{(}{{Tk}{.}{value}{(}{x}{)}}{)}}{<}{{(}{{NUMBER_CONSTANT}{+}{NUMBER_CONSTANT}}{)}}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{FastMath}{.}{exp}{(}{tmp1}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{FastMath}{.}{sqrt}{(}{tmpSquare}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{mi}{,}{vi}{,}{{paramsAccuracy}{*}{{(}{{NUMBER_CONSTANT}{+}{{FastMath}{.}{abs}{(}{mi}{)}}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{theoreticalMinCost}{,}{{{FastMath}{.}{sqrt}{(}{m}{)}}{*}{rms}}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{{{result}{[}{i}{]}}{-}{{y}{[}{i}{]}}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{capacity}{=}{{(}{int}{)}{{FastMath}{.}{ceil}{(}{{expectedSize}{/}{LOAD_FACTOR}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{,}{mean}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{,}{mean}{,}{begin}{,}{length}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastMath}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getResult}{()}{{{}{{return}{{FastMath}{.}{sqrt}{(}{{variance}{.}{getResult}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{minor}{<}{{FastMath}{.}{min}{(}{m}{,}{n}{)}}}}
{AST_ROOT_SC2NF{{j}{<}{{FastMath}{.}{min}{(}{{i}{+}{NUMBER_CONSTANT}}{,}{n}{)}}}}
{AST_ROOT_SC2NF{{int}{{row}{=}{{{FastMath}{.}{min}{(}{m}{,}{n}{)}}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ConvergenceException}}{e}}{)}{{{}{{{assertTrue}{(}{{{(}{{!}{solvable}}{)}}{&&}{{(}{{degree}{>}{NUMBER_CONSTANT}}{)}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{convergenceChecker}}}
{AST_ROOT_SC2NF{{public}{{GoalType}}{getGoalType}{()}{{{}{{return}{goal}{;}}{}}}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ConvergenceException}}{ee}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{sum}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{clear}{()}{{{}{{{value}{=}{NUMBER_CONSTANT}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{SumOfSquares}{()}{{{}{{{n}{=}{NUMBER_CONSTANT}}{;}}{{{value}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{sumSq}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{clear}{()}{{{}{{{value}{=}{NUMBER_CONSTANT}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Sum}{()}{{{}{{{n}{=}{NUMBER_CONSTANT}}{;}}{{{value}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkClearValue}{(}{statistic}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkClearValue}{(}{statistic}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{clear}{()}{{{}{{{value}{=}{NUMBER_CONSTANT}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Product}{()}{{{}{{{n}{=}{NUMBER_CONSTANT}}{;}}{{{value}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{product}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{+}{{(}{{sign}{<}{<}{NUMBER_CONSTANT}}{)}}{+}{{(}{{nans}{<}{<}{NUMBER_CONSTANT}}{)}}{+}{exp}{+}{{Arrays}{.}{hashCode}{(}{mant}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumberOfRegressors}{()}{{{}{{return}{{{{x}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{+}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumberOfRegressors}{()}{{{}{{return}{{{{x}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{+}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{isMinim}{=}{{{getGoalType}{()}}{==}{GoalType.MINIMIZE}}}{;}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{()}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{()}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{LocalizedFormats.DIMENSIONS_MISMATCH}{,}{wrong}{,}{expected}{)}{;}}{{{dimension}{=}{expected}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{p}{,}{DEFAULT_EPSILON}{,}{DEFAULT_MAX_ITERATIONS}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{distribution}{=}{{new}{{ChiSquaredDistributionImpl}}{(}{df}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{distribution}{=}{{new}{{ChiSquaredDistributionImpl}}{(}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}{{return}{{NUMBER_CONSTANT}{-}{{distribution}{.}{cumulativeProbability}{(}{{chiSquare}{(}{expected}{,}{observed}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{density}{(}{{double}{x}}{)}{;}}}
{AST_ROOT_SC2NF{{(}{{{FastMath}{.}{max}{(}{{FastMath}{.}{abs}{(}{mij}{)}}{,}{{FastMath}{.}{abs}{(}{mji}{)}}{)}}{*}{eps}}{)}}}
{AST_ROOT_SC2NF{{protected}{AbstractContinuousDistribution}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{FDistributionImpl}}{{fd}{=}{{new}{{FDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{OutOfRangeException}}{(}{LocalizedFormats.SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{>}{NUMBER_CONSTANT}}{)}{{{}{{{distribution}{=}{{new}{{TDistributionImpl}}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{>}{NUMBER_CONSTANT}}{)}{{{}{{{distribution}{=}{{new}{{TDistributionImpl}}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{private}{RandomAdaptor}{()}{{{}{{{randomGenerator}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{a}{.}{dotrap}{(}{DfpField.FLAG_INVALID}{,}{STRING_CONSTANT}{,}{a}{,}{{a}{.}{newInstance}{(}{{(}{byte}{)}{NUMBER_CONSTANT}}{,}{Dfp.QNAN}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ia}{>}{NUMBER_CONSTANT}}{)}{{{}{{return}{{a}{.}{newInstance}{(}{{(}{byte}{)}{NUMBER_CONSTANT}}{,}{Dfp.INFINITE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{AbstractIntegerDistribution}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getSizes}{()}{{{}{{return}{{copyOf}{(}{size}{,}{dimension}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{size}}{=}{{copyOf}{(}{size}{,}{dimension}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getCounts}{()}{{{}{{return}{{copyOf}{(}{counter}{,}{dimension}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{d}{=}{{copyOf}{(}{{direc}{[}{i}{]}}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{AbstractMultipleLinearRegression}}{{regression}{=}{{createRegression}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{ExponentialDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NotStrictlyPositiveException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{realVectorFormat}{.}{parseObject}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{UnivariateRealSolverUtils}{.}{solve}{(}{sin}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{zb}{+=}{{za}{-}{temp2}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{DimensionMismatchException}}{(}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setQuantile}{(}{p}{)}}{;}}{{{cachedPivots}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isDefaultValue}{(}{norm}{)}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{n}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MultiDirectionalSimplex}{(}{{final}{int}{n}}{)}{{{}{{this}{(}{n}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DimensionMismatchException}}{ee}}{)}{{{}{{{assertTrue}{(}{shouldFail}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{es}{.}{getInverse}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{SingularMatrixException}}{ime}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DimensionMismatchException}}{oe}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{wrong}{,}{expected}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SingularMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonPositiveDefiniteMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonPositiveDefiniteMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonSymmetricMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonSquareMatrixException}}{ime}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonSquareMatrixException}}{ime}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonPositiveDefiniteMatrixException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{LaguerreSolver}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MessageFactory}{.}{buildMessage}{(}{locale}{,}{specific}{,}{general}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getGeneralPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getGeneralPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getGeneralPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getGeneralPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getGeneralPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getGeneralPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{fe}}{)}{{{}{{{assertTrue}{(}{exceptionExpected}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ULP}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.TANH}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.TAN}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SQRT}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SINH}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SIN}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SIGNUM}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.RINT}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.POW}{.}{fix2ndArgument}{(}{d}{)}}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.MULTIPLY}{.}{fix1stArgument}{(}{d}{)}}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG1P}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG10}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.INVERT}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.FLOOR}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.EXPM1}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.EXP}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.DIVIDE}{.}{fix2ndArgument}{(}{d}{)}}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.COSH}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.COS}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.CEIL}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.CBRT}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ATAN}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ASIN}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ACOS}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ABS}{)}}{;}}{}}}{{catch}{(}{{{MathUserException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathUserException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{f}{.}{value}{(}{x}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CircleVectorial}}{{circle}{=}{{new}{{CircleVectorial}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{CircleVectorial}}{{circle}{=}{{new}{{CircleVectorial}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{CircleVectorial}}{{circle}{=}{{new}{{CircleVectorial}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{NumberIsTooLargeException}}{ex}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{handler}{.}{getMaximalValueError}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{mapPowToSelf}{(}{{double}{d}}{)}{{{}{{return}{{mapToSelf}{(}{{new}{{Power}}{(}{d}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{d}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{mapToSelf}{(}{{FunctionUtils}{.}{fix2ndArgument}{(}{{new}{{Add}}{()}}{,}{d}{)}}{)}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{++}{iterations}}{>}{maxIterations}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{{new}{{MaxCountExceededException}}{(}{maxIterations}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MaxCountExceededException}}{(}{maximalIterationCount}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MaxCountExceededException}}{(}{maxIterations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{>=}{maxIterations}}{)}{{{}{{throw}{{new}{{MaxCountExceededException}}{(}{LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION}{,}{maxIterations}{,}{x}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{dimension}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooLargeException}}{(}{LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE}{,}{minSingularValue}{,}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{DEFAULT_MAX_EVALUATIONS}{,}{f}{,}{startValue}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{outBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{msgBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{out}{=}{{new}{{StringBuilder}}{(}{msg}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{messageBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{s}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buff}{=}{{new}{{StringBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{msgBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{outBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{outBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{outBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{outBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{outBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{FastMath.PI}{,}{{solver}{.}{solve}{(}{NUMBER_CONSTANT}{,}{f}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{solver}{.}{getAbsoluteAccuracy}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{solver}{.}{solve}{(}{NUMBER_CONSTANT}{,}{f}{,}{min}{,}{max}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{SimpleVectorialValueChecker}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{SimpleScalarValueChecker}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<=}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{OutOfRangeException}}{(}{LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{p}{>}{NUMBER_CONSTANT}}{)}}{||}{{(}{{p}{<=}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{OutOfRangeException}}{(}{LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x1}{<}{x0}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}{,}{x1}{,}{x0}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x1}{<}{x0}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}{,}{x1}{,}{x0}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{new}{{BlockRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{new}{{BlockRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{new}{{BlockRealMatrix}}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{a}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{a}{-}{b}}}{;}}{}}}{else}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{msg}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{optimizer}{.}{getOptima}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalStateException}}{ise}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.OVERFLOW_IN_FRACTION}{,}{numerator}{,}{denominator}{)}}{;}}{}}}}{{return}{{new}{{Fraction}}{(}{{-}{numerator}}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{createSparseMatrix}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{UnivariateRealSolverUtils}{.}{solve}{(}{sin}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{UnivariateRealSolverUtils}{.}{solve}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{()}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{createSparseMatrix}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{begin}{+}{length}}{>}{values.length}}{)}{{{}{{throw}{{new}{{NumberIsTooLargeException}}{(}{LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END}{,}{{begin}{+}{length}}{,}{values.length}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{new}{{Array2DRowRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{new}{{Array2DRowRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{new}{{Array2DRowRealMatrix}}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{min}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{max}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{variance}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{mean}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{NumberFormat}}{{f}{=}{{CompositeFormat}{.}{getDefaultNumberFormat}{(}{locale}{)}}}{;}}{{return}{{new}{{ComplexFormat}}{(}{f}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ComplexFormat}{(}{{{String}}{imaginaryCharacter}}{)}{{{}{{this}{(}{imaginaryCharacter}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Vector3DFormat}}{(}{{CompositeFormat}{.}{getDefaultNumberFormat}{(}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{prefix}{,}{suffix}{,}{separator}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{found}}{)}{{{}{{{Assert}{.}{fail}{(}{{msg}{+}{STRING_CONSTANT}{+}{{{(}{{new}{{ComplexFormat}}{()}}{)}}{.}{format}{(}{z}{)}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{CompositeFormat}{.}{formatDouble}{(}{{vector}{.}{getEntry}{(}{i}{)}}{,}{format}{,}{toAppendTo}{,}{pos}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{RealVectorFormat}}{(}{{CompositeFormat}{.}{getDefaultNumberFormat}{(}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{prefix}{,}{suffix}{,}{separator}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{imaginaryCharacter}{,}{format}{,}{format}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{alg}{=}{{MessageDigest}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}{}}}{{catch}{(}{{{NoSuchAlgorithmException}}{ex}}{)}{{{}{{throw}{{new}{{MathInternalError}}{(}{ex}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsStates}{.}{isEmpty}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{addStepHandler}{(}{handler}{)}}{;}}{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsStates}{.}{isEmpty}{()}}}{)}}}}{;}}{{{initializeArrays}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsStates}{.}{isEmpty}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsStates}{.}{isEmpty}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{stepStart}{=}{{acceptStep}{(}{interpolator}{,}{y}{,}{yDot}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{{stepStart}{=}{{acceptStep}{(}{interpolator}{,}{y}{,}{yDot}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{temp}{=}{{sinEpsA}{*}{HEX_40000000}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{tmp}{=}{{{hiPrec}{[}{NUMBER_CONSTANT}{]}}{*}{HEX_40000000}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{>=}{TWO_POWER_52}}{||}{{x}{<=}{{-}{TWO_POWER_52}}}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{y}{>=}{TWO_POWER_52}}{||}{{y}{<=}{{-}{TWO_POWER_52}}}}{)}{{{}{{return}{{pow}{(}{{-}{x}}{,}{y}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{epsilon}{=}{{xa}{-}{{EIGHTHS}{[}{idx}{]}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{epsilon}{=}{{xa}{-}{{EIGHTHS}{[}{idx}{]}}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{fatal}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{fatal}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{invx}{==}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{x}{>}{NUMBER_CONSTANT}}{)}{{{}{{return}{y}{;}}{}}}{else}{{{}{{return}{{copySign}{(}{Math.PI}{,}{y}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{xa}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{{leftPlane}{?}{{copySign}{(}{Math.PI}{,}{xa}{)}}{:}{xa}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Ignore}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{int}{)}{{floor}{(}{{x}{+}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{d}{=}{{MathUtils}{.}{copyOf}{(}{{direc}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getSizes}{()}{{{}{{return}{{MathUtils}{.}{copyOf}{(}{size}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{size}}{=}{{MathUtils}{.}{copyOf}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getCounts}{()}{{{}{{return}{{MathUtils}{.}{copyOf}{(}{counter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ONE_WAY_ANANOVA}{.}{anovaTest}{(}{categoryData}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ONE_WAY_ANANOVA}{.}{anovaPValue}{(}{categoryData}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ONE_WAY_ANANOVA}{.}{anovaFValue}{(}{categoryData}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST}{.}{chiSquareTestDataSetsComparison}{(}{observed1}{,}{observed2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST}{.}{chiSquareTestDataSetsComparison}{(}{observed1}{,}{observed2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST}{.}{chiSquareDataSetsComparison}{(}{observed1}{,}{observed2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{CHI_SQUARE_TEST}{.}{chiSquareTest}{(}{counts}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{CHI_SQUARE_TEST}{.}{chiSquareTest}{(}{counts}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{CHI_SQUARE_TEST}{.}{chiSquareTest}{(}{expected}{,}{observed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{CHI_SQUARE_TEST}{.}{chiSquareTest}{(}{expected}{,}{observed}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{CHI_SQUARE_TEST}{.}{chiSquare}{(}{counts}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{CHI_SQUARE_TEST}{.}{chiSquare}{(}{expected}{,}{observed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{sampleStats1}{,}{sampleStats2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{sample1}{,}{sample2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{mu}{,}{sampleStats}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{mu}{,}{sampleStats}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{mu}{,}{sample}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{tTest}{(}{mu}{,}{sample}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{t}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{t}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{t}{(}{mu}{,}{sampleStats}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{t}{(}{mu}{,}{observed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{pairedTTest}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{pairedTTest}{(}{sample1}{,}{sample2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{pairedT}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{homoscedasticTTest}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{homoscedasticTTest}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{homoscedasticTTest}{(}{sample1}{,}{sample2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{homoscedasticT}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{T_TEST}{.}{homoscedasticT}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{TestUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{return}{y}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{arzneg}{=}{{selectColumns}{(}{arz}{,}{{MathUtils}{.}{copyOf}{(}{arReverseIndex}{,}{mu}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{numer}{=}{{bits}{&}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{setStateInitialized}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{setStateInitialized}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{setStateInitialized}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{setStateInitialized}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{setStateInitialized}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParametricUnivariateRealFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ParametricUnivariateRealFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{double}{{g}{=}{{Gaussian}{.}{value}{(}{diff}{,}{norm}{,}{i2s2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{optimizer}{)}{;}}{;}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{fatal}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{specific}{,}{LocalizedFormats.ILLEGAL_STATE}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{specific}{,}{general}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{null}{,}{LocalizedFormats.CANNOT_PARSE}{,}{wrong}{,}{{Integer}{.}{valueOf}{(}{position}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{reference}{,}{{p}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{reference}{,}{{p}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{reference}{,}{{{p}{.}{multiply}{(}{q}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{oneOverN}{=}{{NUMBER_CONSTANT}{/}{n}}}{;}}}
{AST_ROOT_SC2NF{{return}{{_isMinimize}{?}{penalty}{:}{{-}{penalty}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{_boundaries}{==}{null}}{)}{{return}{true}{;}}}}
{AST_ROOT_SC2NF{{return}{{isMinimize}{?}{penalty}{:}{{-}{penalty}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{boundaries}{==}{null}}{)}{{return}{true}{;}}}}
{AST_ROOT_SC2NF{{final}{{FitnessFunction}}{{fitfun}{=}{{new}{{FitnessFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{lo}{,}{hi}{,}{fLo}{,}{fHi}{,}{args}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{LocalizedFormats.SAME_SIGN_AT_ENDPOINTS}{,}{lo}{,}{hi}{,}{fLo}{,}{fHi}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{wrong}{,}{max}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{boundIsAllowed}{?}{LocalizedFormats.NUMBER_TOO_LARGE}{:}{LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED}}{,}{wrong}{,}{max}{,}{boundIsAllowed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{wrong}{,}{lo}{,}{hi}{)}{;}}{{{{this}{.}{lo}}{=}{lo}}{;}}{{{{this}{.}{hi}}{=}{hi}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{wrong}{,}{lo}{,}{hi}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{wrong}{,}{expected}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{LocalizedFormats.DIMENSIONS_MISMATCH}{,}{wrong}{,}{expected}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{addMessage}{(}{LocalizedFormats.USER_EXCEPTION}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{wrong}{,}{expected}{)}{;}}{{{dimension}{=}{expected}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ZeroException}{(}{{{Localizable}}{specific}}{)}{{{}{{super}{(}{specific}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{wrong}{,}{min}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{boundIsAllowed}{?}{LocalizedFormats.NUMBER_TOO_SMALL}{:}{LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED}}{,}{wrong}{,}{min}{,}{boundIsAllowed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{wrong}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{LocalizedFormats.NOT_FINITE_NUMBER}{,}{wrong}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{max}{,}{args}{)}{;}}{{{{this}{.}{max}}{=}{max}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MaxCountExceededException}{(}{{{Number}}{max}}{)}{{{}{{this}{(}{LocalizedFormats.MAX_COUNT_EXCEEDED}{,}{max}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathInternalError}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{,}{LocalizedFormats.INTERNAL_ERROR}{,}{REPORT_URL}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{LocalizedFormats.CANNOT_PARSE}{,}{wrong}{,}{{Integer}{.}{valueOf}{(}{position}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{++}{count}}{;}}{{{Assert}{.}{assertEquals}{(}{{i}{+}{{j}{/}{NUMBER_CONSTANT}}}{,}{value}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{++}{count}}{;}}{{{Assert}{.}{assertEquals}{(}{{i}{+}{{j}{/}{NUMBER_CONSTANT}}}{,}{value}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{l}{.}{getEntry}{(}{i}{,}{j}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{m}{.}{getEntry}{(}{i}{,}{j}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{doFinalize}{(}{)}{throws}{{MathUserException}}{{{}{{throw}{{new}{{MathUserException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{doFinalize}{(}{)}{throws}{{MathUserException}}{{{}{{throw}{{new}{{MathUserException}}{(}{LocalizedFormats.SIMPLE_MESSAGE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{ioe}{.}{getMessage}{()}}{.}{length}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{addMessage}{(}{LocalizedFormats.USER_EXCEPTION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{Erf}{()}{{{}}}}}
{AST_ROOT_SC2NF{{private}{Beta}{()}{{{}}}}}
{AST_ROOT_SC2NF{{private}{Gamma}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{s}{.}{getN}{()}}{,}{{u}{.}{getN}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{@}{Before}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{a1}{,}{{MathUtils}{.}{normalizeAngle}{(}{a2}{,}{a1}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{tearDown}{()}{{{}{{{refValues}{=}{null}}{;}}{{{matrix}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Before}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertTrue}{(}{{isIncludedColumn}{(}{eigenVector}{,}{{ed}{.}{getV}{()}}{,}{tolerance}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Before}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{f}{=}{{new}{{Frequency}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{tearDown}{()}{{{}{{{pb}{=}{null}}{;}}{{{integ}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Before}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{bestFinal}{.}{compareTo}{(}{bestInitial}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{Double}{.}{isNaN}{(}{{statistic}{.}{getResult}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{variance}{=}{{regression}{.}{estimateRegressandVariance}{()}}}{;}}{{{Assert}{.}{assertTrue}{(}{{variance}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{double}{[]}{[]}}{{variance}{=}{{regression}{.}{estimateRegressionParametersVariance}{()}}}{;}}{{{Assert}{.}{assertEquals}{(}{{getNumberOfRegressors}{()}}{,}{variance.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{double}{[]}}{{e}{=}{{regression}{.}{estimateResiduals}{()}}}{;}}{{{Assert}{.}{assertEquals}{(}{{getSampleSize}{()}}{,}{e.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{double}{[]}}{{beta}{=}{{regression}{.}{estimateRegressionParameters}{()}}}{;}}{{{Assert}{.}{assertEquals}{(}{{getNumberOfRegressors}{()}}{,}{beta.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FractionField}}{{field}{=}{{FractionField}{.}{getInstance}{()}}}{;}}{{{Assert}{.}{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{Assert}{.}{assertEquals}{(}{Fraction.ONE}{,}{{{FractionField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{Assert}{.}{assertEquals}{(}{Fraction.ZERO}{,}{{{FractionField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{fitnessCalls}{<=}{neededCalls}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{numDifferent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{DummyBinaryChromosome}}{(}{repr}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{c3}{,}{{population}{.}{getFittestChromosome}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{null}{,}{expected}{,}{actual}{,}{delta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{BigRealField}}{{field}{=}{{BigRealField}{.}{getInstance}{()}}}{;}}{{{Assert}{.}{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{Assert}{.}{assertEquals}{(}{BigReal.ONE}{,}{{{BigRealField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{Assert}{.}{assertEquals}{(}{BigReal.ZERO}{,}{{{BigRealField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{uniquePointIsCenter}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{TestUtils}{.}{serializeAndRecover}{(}{p}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{s}{.}{getN}{()}}{,}{{u}{.}{getN}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{expected}{.}{getN}{()}}{,}{{observed}{.}{getN}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{new}{{Fraction}}{(}{a}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{ConvergenceException}}{ce}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{y}{[}{i}{]}}{,}{{iResult}{[}{i}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{FastMath}{.}{abs}{(}{h}{)}}{<}{minStep}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FractionConversionException}}{fce}}{)}{{{}{{{Assert}{.}{fail}{(}{{fce}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FractionConversionException}}{fce}}{)}{{{}{{{Assert}{.}{fail}{(}{{fce}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{DummyRandomKey}}{{drk}{=}{{new}{{DummyRandomKey}}{(}{{RandomKey}{.}{randomPermutation}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}{{{Assert}{.}{assertNotNull}{(}{drk}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{nextGeneration}{.}{getPopulationSize}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{tearDown}{()}{{{}{{{pb}{=}{null}}{;}}{{{integ}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Before}}}
{AST_ROOT_SC2NF{{{}{{{BigFractionField}}{{field}{=}{{BigFractionField}{.}{getInstance}{()}}}{;}}{{{Assert}{.}{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{Assert}{.}{assertEquals}{(}{BigFraction.ONE}{,}{{{BigFractionField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{Assert}{.}{assertEquals}{(}{BigFraction.ZERO}{,}{{{BigFractionField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{approYDot}{,}{{yDot}{[}{i}{]}}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ComplexField}}{{field}{=}{{ComplexField}{.}{getInstance}{()}}}{;}}{{{Assert}{.}{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{Assert}{.}{assertEquals}{(}{Complex.ONE}{,}{{{ComplexField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{Assert}{.}{assertEquals}{(}{Complex.ZERO}{,}{{{ComplexField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isLast}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{maxError}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{tooShortStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}{{{tooShortStats}{.}{addValue}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{maxError}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{isLast}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{maxError}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isLast}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{maxError}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{changes}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{column}{>}{row}}{)}{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{value}{,}{entryTolerance}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{column}{<}{row}}{)}{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{value}{,}{entryTolerance}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NoDataException}{(}{{{Localizable}}{specific}}{)}{{{}{{super}{(}{specific}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{final}{double}{.}{.}{.}{parameters}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{parameters}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{doubles}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{parameters}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{param}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegratorImpl}}{{integrator}{=}{{new}{{LegendreGaussIntegrator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setMinimalIterationCount}{(}{{final}{int}{count}}{)}{{{}{{{minimalIterationCount}{=}{count}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{{String}}{>}}{getContextKeys}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getContext}{(}{{{String}}{key}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{z}{=}{{concatenateSamples}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{getRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getMaximalIterationCount}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{{String}}{>}}{getContextKeys}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getContext}{(}{{{String}}{key}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{DEPRECATION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{PearsonsCorrelation}{.}{correlation}{(}{x}{,}{y}{)}}{,}{{{corrInstance}{.}{getCorrelationMatrix}{()}}{.}{getEntry}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{Double.MIN_VALUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PearsonsCorrelation}{.}{correlation}{(}{one}{,}{two}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Double}{.}{isNaN}{(}{{PearsonsCorrelation}{.}{correlation}{(}{noVariance}{,}{values}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{{new}{{PearsonsCorrelation}}{()}}{.}{correlation}{(}{x}{,}{y}{)}}{,}{{{corrInstance}{.}{getCorrelationMatrix}{()}}{.}{getEntry}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{Double.MIN_VALUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{PearsonsCorrelation}}{()}}{.}{correlation}{(}{one}{,}{two}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Double}{.}{isNaN}{(}{{{new}{{PearsonsCorrelation}}{()}}{.}{correlation}{(}{noVariance}{,}{values}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{normps}{=}{{ps}{.}{getFrobeniusNorm}{()}}}{;}}}
{AST_ROOT_SC2NF{{{normps}{=}{{ps}{.}{getFrobeniusNorm}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.MAX_COUNT_EXCEEDED}{,}{max}{)}{;}}{{{{this}{.}{max}}{=}{max}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{function}{,}{linearConstraints}{,}{goal}{,}{nonNegative}{,}{epsilon}{,}{maxUlps}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{MathUtils}{.}{compareTo}{(}{entry}{,}{minValue}{,}{maxUlps}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{MathUtils}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{maxUlps}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{columnsToDrop}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{context}{.}{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{getContext}{()}}{.}{addMessage}{(}{LocalizedFormats.CANNOT_PARSE}{,}{wrong}{,}{{Integer}{.}{valueOf}{(}{position}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{LocalizedFormats.MAX_COUNT_EXCEEDED}{,}{max}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{context}{.}{addMessage}{(}{pattern}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{context}{.}{addMessage}{(}{pattern}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{context}{.}{addMessage}{(}{LocalizedFormats.USER_EXCEPTION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{context}{.}{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{context}{.}{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{context}{.}{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{getContext}{()}}{.}{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{context}{.}{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{max}{)}{;}}{{{{getContext}{()}}{.}{addMessage}{(}{LocalizedFormats.EVALUATIONS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{field}}{=}{field}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{extractField}{(}{d}{)}}{,}{d}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{{BigFractionField}{.}{getInstance}{()}}{,}{Hdata}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{projection}{(}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{v}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{d}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{fractionColMatrix}{)}}{,}{{MatrixUtils}{.}{createFieldMatrix}{(}{fractionColMatrix}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{source}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{prefix}{,}{suffix}{,}{separator}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Vector3DFormat}{(}{{final}{{NumberFormat}}{format}}{)}{{{}{{super}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_SEPARATOR}{,}{format}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Vector3DFormat}{()}{{{}{{super}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_SEPARATOR}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{BSPTreeVisitor}}{<}{{S}}{>}}{visitor}}}
{AST_ROOT_SC2NF{{void}{visitLeafNode}{(}{{{{BSPTree}}{<}{{S}}{>}}{node}}{)}{;}}}
{AST_ROOT_SC2NF{{{{BSPTree}}{<}{{S}}{>}}{node}}}
{AST_ROOT_SC2NF{{{{BSPTree}}{<}{{S}}{>}}{node}}}
{AST_ROOT_SC2NF{{{{Hyperplane}}{<}{{S}}{>}}{other}}}
{AST_ROOT_SC2NF{{{{Vector}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Hyperplane}}{<}{{Euclidean1D}}{>}}{other}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{{Hyperplane}}{<}{{Euclidean2D}}{>}}{other}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{{tmp}{=}{{loop}{[}{min}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Vector2D}}{[]}}{bLoop}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{point}{=}{{p}{.}{intersection}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Order}}{visitOrder}{(}{{final}{{{BSPTree}}{<}{{Euclidean3D}}{>}}{node}}{)}{{{}{{return}{Order.MINUS_SUB_PLUS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{BoundaryProjector}{()}{{{}{{{projected}{=}{{new}{{PolygonsSet}}{(}{{new}{{{BSPTree}}{<}{{Euclidean2D}}{>}}{(}{Boolean.FALSE}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{BSPTree}}{<}{{Euclidean1D}}{>}}{tree}}}
{AST_ROOT_SC2NF{{{{Vector3D}}{[]}}{points}}}
{AST_ROOT_SC2NF{{final}{{{BSPTree}}{<}{{Euclidean2D}}{>}}{tree}}}
{AST_ROOT_SC2NF{{public}{{Order}}{visitOrder}{(}{{final}{{{BSPTree}}{<}{{Euclidean2D}}{>}}{node}}{)}{{{}{{return}{Order.MINUS_SUB_PLUS}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Hyperplane}}{<}{{Euclidean3D}}{>}}{other}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean3D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{p}}}
{AST_ROOT_SC2NF{{{origin}{=}{{new}{{Vector3D}}{(}{{-}{originOffset}}{,}{w}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Order}}{visitOrder}{(}{{final}{{{BSPTree}}{<}{{Euclidean3D}}{>}}{node}}{)}{{{}{{return}{Order.MINUS_SUB_PLUS}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{BSPTree}}{<}{{Euclidean3D}}{>}}{tree}}}
{AST_ROOT_SC2NF{{public}{abstract}{{{SplitSubHyperplane}}{<}{{S}}{>}}{split}{(}{{{{Hyperplane}}{<}{{S}}{>}}{hyper}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Side}}{side}{(}{{{{Hyperplane}}{<}{{S}}{>}}{hyper}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{in}{[}{i}{]}}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX}{,}{i}{,}{{in}{[}{i}{]}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{val}{<}{NUMBER_CONSTANT}}{||}{{val}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{InvalidRepresentationException}}{(}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{val}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{i}}{:}{chromosomeRepresentation}{)}{{{}{{if}{(}{{{i}{<}{NUMBER_CONSTANT}}{||}{{i}{>}{NUMBER_CONSTANT}}}{)}{{throw}{{new}{{InvalidRepresentationException}}{(}{LocalizedFormats.INVALID_BINARY_DIGIT}{,}{i}{)}}{;}}}{}}}}}
{AST_ROOT_SC2NF{{clusters}{=}{{transformer}{.}{cluster}{(}{{Arrays}{.}{asList}{(}{points}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{getInitialStateEstimate}{()}{{{}{{return}{initialStateEstimateVector}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{==}{NUMBER_CONSTANT}}{&&}{{i}{>=}{j}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{maxGenerations}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{maxGenerations}}{=}{maxGenerations}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{forward}}{)}{{{}{{{h}{=}{{-}{h}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{remA}{>}{NUMBER_CONSTANT}}{)}{{{}{break;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{remA}{>}{NUMBER_CONSTANT}}{)}{{{}{break;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{remA}{>}{NUMBER_CONSTANT}}{)}{{{}{break;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{*}{x}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Chromosome}}{anotherChr}}{:}{population}{)}{{{}{{if}{(}{{this}{.}{isSame}{(}{anotherChr}{)}}{)}{{{}{{return}{anotherChr}{;}}{}}}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{y}{.}{equals}{(}{py}{)}}{)}{{{}{break;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{boundaries}{==}{null}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{boundaries}{==}{null}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{negccov}{>}{negcovMax}}{)}{{{}{{{negccov}{=}{negcovMax}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{numElements}{-=}{i}}{;}}{{if}{(}{front}{)}{{{}{{{startIndex}{+=}{i}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{SecantSolver}{(}{{final}{double}{absoluteAccuracy}}{)}{{{}{{super}{(}{absoluteAccuracy}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{allowed}}{=}{allowedSolutions}}{;}}{{return}{{super}{.}{solve}{(}{maxEval}{,}{f}{,}{min}{,}{max}{,}{startValue}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{se}{[}{i}{]}}{=}{{FastMath}{.}{sqrt}{(}{var}{)}}}{;}}{continue;}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{Double}{.}{isNaN}{(}{var}{)}}}{&&}{{var}{>}{Double.MIN_VALUE}}}{)}{{{}{{return}{{FastMath}{.}{sqrt}{(}{var}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{createComplex}{(}{{FastMath}{.}{log}{(}{{abs}{()}}{)}}{,}{{FastMath}{.}{atan2}{(}{imaginary}{,}{real}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{||}{rhs.isNaN}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{createComplex}{(}{{-}{real}}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{||}{{Double}{.}{isNaN}{(}{rhs}{)}}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{||}{rhs.isNaN}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{||}{rhs.isNaN}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{isNaN}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{createComplex}{(}{real}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{isNaN}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rng}{.}{nextBoolean}{()}}{)}{{{}{{throw}{{new}{{MathIllegalStateException}}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Double}{.}{isNaN}{(}{{w}{.}{getReal}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{include}{(}{{MathUtils}{.}{copyOf}{(}{x}{,}{x.length}{)}}{,}{NUMBER_CONSTANT}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{{this}{.}{parameters}}{.}{length}}}}{)}{{{}{{throw}{{new}{{IndexOutOfBoundsException}}{(}{indexOutOfBound}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{{this}{.}{parameters}}{.}{length}}}}{)}{{{}{{throw}{{new}{{IndexOutOfBoundsException}}{(}{indexOutOfBound}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{outerProduct}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getLInfDistance}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getL1Distance}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDistance}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{dotProduct}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ebeDivide}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ebeMultiply}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{subtract}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{{{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{.}{data}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{Method.REGULA_FALSI}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertSame}{(}{Complex.NaN}{,}{z}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{node}{.}{getElement}{()}}{.}{intValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{numberOfVariables}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ModelSpecificationException}}{(}{LocalizedFormats.NO_REGRESSORS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{addEventHandler}{(}{handler}{,}{maxCheckInterval}{,}{convergence}{,}{maxIterationCount}{,}{{new}{{BracketingNthOrderBrentSolver}}{(}{convergence}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolution.ABOVE_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolution.BELOW_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolution.RIGHT_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolution.LEFT_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{allowed}}{=}{AllowedSolution.ANY_SIDE}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{allowed}}{=}{AllowedSolution.ANY_SIDE}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{allowed}}{=}{AllowedSolution.ANY_SIDE}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{maxEval}{,}{f}{,}{min}{,}{max}{,}{startValue}{,}{AllowedSolution.ANY_SIDE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolution.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolution.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolution.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{randomData}{.}{nextUniform}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{dot}{=}{{v1}{.}{dotProduct}{(}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Solver}}{(}{singularValues}{,}{{getUT}{()}}{,}{{getV}{()}}{,}{{{getRank}{()}}{==}{m}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{tol}{=}{{FastMath}{.}{max}{(}{{m}{*}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{*}{EPS}}{,}{{FastMath}{.}{sqrt}{(}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setEntry}{(}{{row}{-}{INDEX_OFFSET}}{,}{{col}{-}{INDEX_OFFSET}}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setEntry}{(}{{index}{-}{INDEX_OFFSET}}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fsave}{=}{{fval}{.}{getEntry}{(}{INDEX_OFFSET}{)}}}{;}}}
{AST_ROOT_SC2NF{{{crossP}{.}{dotProduct}{(}{{otherPlane}{.}{getNormal}{()}}{)}}{<}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{crossP}{.}{dotProduct}{(}{{otherPlane}{.}{getNormal}{()}}{)}}{<}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{double}{{scaled}{=}{{area}{*}{{facetB}{.}{dotProduct}{(}{{plane}{.}{getNormal}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{{n}{=}{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{d}{,}{{-}{{d}{.}{dotProduct}{(}{direction}{)}}}{,}{direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{point}{.}{dotProduct}{(}{w}{)}}{+}{originOffset}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setNormal}{(}{normal}{)}}{;}}{{{originOffset}{=}{{-}{{p}{.}{dotProduct}{(}{w}{)}}}}{;}}{{{setFrame}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Line}}{revert}{()}{{{}{{return}{{new}{{Line}}{(}{zero}{,}{{zero}{.}{subtract}{(}{direction}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{nRows}{<}{NUMBER_CONSTANT}}{||}{{nCols}{<}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS}{,}{nRows}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{t}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{delta}{<=}{rLimit}}{)}}{||}{{(}{{delta}{<=}{absoluteAccuracy}}{)}}}{)}{{{}{{return}{s}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{delta}{<=}{rLimit}}{)}}{||}{{(}{{delta}{<=}{absoluteAccuracy}}{)}}}{)}{{{}{{return}{t}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{RealVector}{.}{unmodifiableRealVector}{(}{{u}{.}{copy}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{RealVector}{.}{unmodifiableRealVector}{(}{{u}{.}{copy}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{RealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{RealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{RealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{RealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ArrayRealVector}}{{x}{=}{{new}{{ArrayRealVector}}{(}{dim}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ArrayRealVector}}{{x}{=}{{new}{{ArrayRealVector}}{(}{dim}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{x}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{z}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{d2}{=}{{w}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{coefficients}{.}{dotProduct}{(}{{new}{{ArrayRealVector}}{(}{point}{,}{false}{)}}{)}}{+}{constantTerm}}{;}}{}}}}
{AST_ROOT_SC2NF{{{dist}{=}{{new}{{EmpiricalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{{(}{{RandomGenerator}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistributionImpl}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{new}{{RandomDataImpl}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistributionImpl}}{(}{binCount}{,}{randomData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{+}{{Erf}{.}{erf}{(}{{dev}{/}{{(}{{standardDeviation}{*}{SQRT2}}{)}}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{SimpleScalarValueChecker}}{(}{rel}{,}{abs}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ConvergenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{b}{.}{getColumnVector}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{b}{.}{getColumnVector}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{es}{.}{solve}{(}{{b}{.}{getColumnVector}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{b}{.}{getColumnVector}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{z}{,}{Complex.INF}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{z}{,}{Complex.NaN}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{cOut}{=}{{new}{{ExceptionContext}}{(}{{new}{{Exception}}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{cOut}{=}{{new}{{ExceptionContext}}{(}{{new}{{Exception}}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{c}{=}{{new}{{ExceptionContext}}{(}{{new}{{Exception}}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{c}{=}{{new}{{ExceptionContext}}{(}{{new}{{Exception}}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{c}{=}{{new}{{ExceptionContext}}{(}{{new}{{Exception}}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MaxCountExceededException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MaxCountExceededException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{Exception}}{e}}}
{AST_ROOT_SC2NF{{{Exception}}{e}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{FACT_LEN}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{x}{=}{{b}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{toArray}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{hatResiduals}{=}{{{{I}{.}{subtract}{(}{hat}{)}}{.}{operate}{(}{model.Y}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{objectiveValue}{=}{{computeObjectiveValue}{(}{{currentBest}{.}{toArray}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{f}{=}{{computeObjectiveValue}{(}{{currentBest}{.}{toArray}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{x}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{x}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{{x}{.}{combine}{(}{a}{,}{b}{,}{y}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{{x}{.}{combine}{(}{a}{,}{b}{,}{y}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotSame}{(}{STRING_CONSTANT}{,}{v1.data}{,}{{v_copy}{.}{toArray}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{sum}{=}{NUMBER_CONSTANT}}{;}}{{for}{(}{{double}{coefficient}}{:}{{coefficients}{.}{toArray}{()}}{)}{{{}{{{sum}{-=}{coefficient}}{;}}{}}}}{{return}{sum}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{toArray}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{toArray}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getStateEstimation}{()}{{{}{{return}{{stateEstimation}{.}{toArray}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{y}{=}{{{u}{.}{add}{(}{{x}{.}{operate}{(}{b}{)}}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{new}{{double}{[]}}{{{}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{b}{.}{toArray}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{}}}}{,}{{b}{.}{toArray}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{e}{.}{toArray}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{RealVector}}{{b}{=}{{calculateBeta}{()}}}{;}}{{return}{{b}{.}{toArray}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{instanceof}{{ArrayRealVector}}}{)}{{{}{{return}{{{(}{{(}{{ArrayRealVector}}{)}{x}}{)}}{.}{getDataRef}{()}}{;}}{}}}{else}{{{}{{return}{{x}{.}{toArray}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{ltI}{[}{i}{]}}{<}{absolutePositivityThreshold}}{)}{{{}{{throw}{{new}{{NonPositiveDefiniteMatrixException}}{(}{{ltI}{[}{i}{]}}{,}{i}{,}{absolutePositivityThreshold}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{hasIntercept}{?}{{getIntercept}{(}{{getSlope}{()}}{)}}{:}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{FACT.length}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{FACT.length}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{FACT.length}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{{CholeskyDecompositionImpl}}{{llt}{=}{{new}{{CholeskyDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CholeskyDecompositionImpl}}{{llt}{=}{{new}{{CholeskyDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{CholeskyDecomposition}}{(}{s}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{CholeskyDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{CholeskyDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{matrix}{=}{{EigenDecompositionTest}{.}{createTestMatrix}{(}{{new}{{Random}}{(}{NUMBER_CONSTANT}{)}}{,}{refValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecompositionImpl}}{{eig}{=}{{new}{{EigenDecompositionImpl}}{(}{C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{eig}{=}{{new}{{EigenDecomposition}}{(}{C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{ed}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{ed}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{max}{=}{val.length}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{max}{=}{val.length}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{max}{=}{val.length}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{slope}}}
{AST_ROOT_SC2NF{{final}{double}{slope}}}
{AST_ROOT_SC2NF{{final}{double}{alpha}}}
{AST_ROOT_SC2NF{{{{FieldDecompositionSolver}}{<}{{BigFraction}}{>}}{{pSolver}{=}{{{new}{{{FieldLUDecomposition}}{<}{{BigFraction}}{>}}{(}{bigP}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{{FieldLUDecomposition}}{<}{{Fraction}}{>}}{(}{m}{)}}{.}{getDeterminant}{()}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecomposition}}{<}{{Fraction}}{>}}{(}{{createFractionMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{FieldLUDecomposition}}{(}{{createFractionMatrix}{(}{singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecomposition}}{<}{{Fraction}}{>}}{(}{{createFractionMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonicSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonicSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonMonotonicSequenceException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonicSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonicSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonMonotonicSequenceException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{jTj}{)}}{,}{threshold}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{useLU}{?}{{{new}{{LUDecomposition}}{(}{mA}{)}}{.}{getSolver}{()}}{:}{{{new}{{QRDecompositionImpl}}{(}{mA}{)}}{.}{getSolver}{()}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{LUDecomposition}}{(}{XTOIX}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{inverse}{=}{{{{new}{{LUDecomposition}}{(}{XTOIX}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{Rinv}{=}{{{{new}{{LUDecomposition}}{(}{Raug}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{useLU}{?}{{{new}{{LUDecomposition}}{(}{mA}{)}}{.}{getSolver}{()}}{:}{{{new}{{QRDecomposition}}{(}{mA}{)}}{.}{getSolver}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newXSampleData}{(}{x}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newSampleData}{(}{data}{,}{nobs}{,}{nvars}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{x}{=}{{{{new}{{QRDecomposition}}{(}{a}{)}}{.}{getSolver}{()}}{.}{solve}{(}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{x}{=}{{{{new}{{QRDecomposition}}{(}{a}{)}}{.}{getSolver}{()}}{.}{solve}{(}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{QRDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData3x3Singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{QRDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData3x3NonSingular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RectangularCholeskyDecomposition}}{{decomposition}{=}{{new}{{RectangularCholeskyDecomposition}}{(}{covariance}{,}{small}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RectangularCholeskyDecomposition}}{{decomposition}{=}{{new}{{RectangularCholeskyDecomposition}}{(}{covariance}{,}{small}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SingularValueDecomposition}}{{svd}{=}{{new}{{SingularValueDecomposition}}{(}{rm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{SingularValueDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testSquare}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{SingularValueDecomposition}}{(}{m}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{SingularValueDecomposition}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testSquare}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{g0Positive}{=}{{g0}{>=}{NUMBER_CONSTANT}}}{;}}{{{nextAction}{=}{EventHandler.Action.CONTINUE}}{;}}{}}}}
{AST_ROOT_SC2NF{{{nextAction}{=}{EventHandler.Action.CONTINUE}}{;}}}
{AST_ROOT_SC2NF{{{ExpandableFirstOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{final}{{ExpandableFirstOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{final}{{ExpandableFirstOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{writeDouble}{(}{{{polynomials}{[}{k}{]}}{[}{l}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{e}{=}{{{{polynomials}{[}{currentDegree}{]}}{[}{i}{]}}{/}{{scale}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{{new}{{int}{[]}}{{{}{m}{,}{nColB}{}}}}{)}}}
{AST_ROOT_SC2NF{{bp}{=}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{m}{)}}}}}
{AST_ROOT_SC2NF{{bp}{=}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{m}{)}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{array}{=}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{length}{)}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{(}{{{T}}{[]}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{{new}{{int}{[]}}{{{}{dimension}{,}{dimension}{}}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{field}{.}{getRuntimeClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{b}{,}{x0}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solveInPlace}{(}{a}{,}{b}{,}{x0}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{nSteps}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS}{,}{name}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED}{,}{n}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f1}{.}{divide}{(}{f2}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{ZeroException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MathIllegalStateException}}{(}{LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC}{,}{{getN}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.INDEX_NOT_POSITIVE}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE}{,}{initialCapacity}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{expansionMode}{!=}{MULTIPLICATIVE_MODE}}{&&}{{expansionMode}{!=}{ADDITIVE_MODE}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.UNSUPPORTED_EXPANSION_MODE}{,}{expansionMode}{,}{MULTIPLICATIVE_MODE}{,}{STRING_CONSTANT}{,}{ADDITIVE_MODE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArrayIndexOutOfBoundsException}}{(}{index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MathIllegalStateException}}{{cause}{=}{{new}{{MathIllegalStateException}}{(}{LocalizedFormats.SIMPLE_MESSAGE}{,}{inMsg}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{evaluations}{.}{incrementCount}{()}}{;}}{{{expandable}{.}{computeDerivatives}{(}{t}{,}{y}{,}{yDot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{expandable}}{=}{equations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allocateInterpolatedArrays}{(}{y.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{allocateInterpolatedArrays}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{STRING_CONSTANT}{+}{mean}{+}{STRING_CONSTANT}{+}{p}{+}{STRING_CONSTANT}{+}{{ex}{.}{getMessage}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{STRING_CONSTANT}{+}{mean}{+}{STRING_CONSTANT}{+}{x}{+}{STRING_CONSTANT}{+}{{ex}{.}{getMessage}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonPositiveDefiniteOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonSquareOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonPositiveDefiniteOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonSquareOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{str}{=}{{filePointer}{.}{readLine}{()}}}{)}}{==}{null}}{)}{{{}{{throw}{{new}{{MathIllegalStateException}}{(}{LocalizedFormats.URL_CONTAINS_NO_DATA}{,}{valuesFileURL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{empiricalDistribution}{==}{null}}{)}}{||}{{(}{{{{empiricalDistribution}{.}{getBinStats}{()}}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalStateException}}{(}{LocalizedFormats.DIGEST_NOT_INITIALIZED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{sampleStats}{.}{getN}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroException}}{(}{LocalizedFormats.URL_CONTAINS_NO_DATA}{,}{url}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{throw}{{new}{{MathIllegalStateException}}{(}{e}{,}{LocalizedFormats.SIMPLE_MESSAGE}{,}{{e}{.}{getLocalizedMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ZeroException}}{ze}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalStateException}}{mise}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{BigFraction}}{>}}{coefficients}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{BigFraction}}{>}}{coefficients}}}
{AST_ROOT_SC2NF{{double}{{y}{=}{{{x}{*}{F_1_3}}{-}{F_1_2}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{FastMath}{.}{abs}{(}{m}{)}}{<=}{tol}}{||}{{Precision}{.}{equals}{(}{fb}{,}{NUMBER_CONSTANT}{)}}}{)}{{{}{{return}{b}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Precision}{.}{equals}{(}{binomial}{,}{{jacobi}{.}{value}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{mode}{==}{StepNormalizerMode.MULTIPLES}}{&&}{{Precision}{.}{equals}{(}{nextTime}{,}{lastTime}{,}{NUMBER_CONSTANT}{)}}}{)}{{{}{{{nextTime}{+=}{h}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertTrue}{(}{{Precision}{.}{equals}{(}{{out}{[}{i}{]}}{,}{{expectedSample}{[}{i}{]}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Precision}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distanceInf}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Precision}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distance}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Precision}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distance}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Precision}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distance1}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{entry}{,}{minValue}{,}{maxUlps}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{isLastStep}{=}{{isLastStep}{||}{{Precision}{.}{equals}{(}{currentT}{,}{tEnd}{,}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{!}{{Precision}{.}{equalsIncludingNaN}{(}{{expected}{[}{i}{]}}{,}{{observed}{[}{i}{]}}{,}{tolerance}{)}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{value}}{:}{values}{)}{{{}{{if}{(}{{Precision}{.}{equals}{(}{value}{,}{x}{,}{epsilon}{)}}{)}{{{}{return;}{}}}}{}}}}}
{AST_ROOT_SC2NF{{Precision}{.}{equalsIncludingNaN}{(}{{stat}{.}{getN}{()}}{,}{{getN}{()}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{epsilon}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{maxUlps}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{columnsToDrop}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{parameters}}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{MathArrays}{.}{copyOf}{(}{parameters}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{checkOrder}{(}{knots}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getOrderOfRegressors}{()}{{{}{{return}{{MathArrays}{.}{copyOf}{(}{vorder}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{include}{(}{{MathArrays}{.}{copyOf}{(}{x}{,}{x.length}{)}}{,}{NUMBER_CONSTANT}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{checkOrder}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{wrong}{,}{previous}{,}{index}{,}{MathArrays.OrderDirection.INCREASING}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{checkOrder}{(}{xval}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{d}{=}{{MathArrays}{.}{copyOf}{(}{{direc}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{checkOrder}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{distance}{(}{point}{,}{{p}{.}{getPoint}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{arzneg}{=}{{selectColumns}{(}{arz}{,}{{MathArrays}{.}{copyOf}{(}{arReverseIndex}{,}{mu}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{MathArrays}{.}{checkOrder}{(}{x}{,}{MathArrays.OrderDirection.INCREASING}{,}{true}{,}{abort}{)}}{;}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{sortInPlace}{(}{xNew}{,}{yNew}{)}}{;}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{sortInPlace}{(}{{this}{.}{x}}{,}{{this}{.}{y}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getSizes}{()}{{{}{{return}{{MathArrays}{.}{copyOf}{(}{size}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{size}}{=}{{MathArrays}{.}{copyOf}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getCounts}{()}{{{}{{return}{{MathArrays}{.}{copyOf}{(}{counter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{expectedValue}{()}}{,}{{variance}{.}{evaluate}{(}{testArray}{,}{{MathArrays}{.}{normalizeArray}{(}{identicalWeightsArray}{,}{testArray.length}{)}}{,}{NUMBER_CONSTANT}{,}{testArray.length}{)}}{,}{{getTolerance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{ArithmeticsUtils}{.}{gcd}{(}{numerator}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{d}{=}{{ArithmeticsUtils}{.}{gcd}{(}{num}{,}{den}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{lcm}{=}{{FastMath}{.}{abs}{(}{{mulAndCheck}{(}{{a}{/}{{ArithmeticsUtils}{.}{gcd}{(}{a}{,}{b}{)}}}{,}{b}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{lcm}{=}{{FastMath}{.}{abs}{(}{{mulAndCheck}{(}{{a}{/}{{ArithmeticsUtils}{.}{gcd}{(}{a}{,}{b}{)}}}{,}{b}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{ArithmeticsUtils}{.}{binomialCoefficient}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{ArithmeticsUtils}{.}{binomialCoefficient}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{ArithmeticUtils}{.}{binomialCoefficient}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{ArithmeticUtils}{.}{gcd}{(}{numerator}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{d}{=}{{ArithmeticUtils}{.}{gcd}{(}{num}{,}{den}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{ArithmeticUtils}{.}{binomialCoefficient}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FastMath}{.}{signum}{(}{y0}{)}}{+}{{FastMath}{.}{signum}{(}{ym}{)}}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{FastMath}{.}{abs}{(}{x}{)}}{<}{SHORTCUT}}{?}{NUMBER_CONSTANT}{:}{{{FastMath}{.}{sin}{(}{x}{)}}{/}{x}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{Precision.EPSILON}}{)}{{{}{{return}{zero}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{Precision.SAFE_MIN}}{)}{{{}{{return}{{distance}{(}{line.zero}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{tol}{=}{{FastMath}{.}{max}{(}{{m}{*}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{*}{EPS}}{,}{{FastMath}{.}{sqrt}{(}{Precision.SAFE_MIN}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{d}{>}{{-}{Precision.SAFE_MIN}}}{&&}{{d}{<}{Precision.SAFE_MIN}}}{)}{{{}{{return}{d}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{eps}{=}{{NUMBER_CONSTANT}{*}{rows}{*}{columns}{*}{Precision.EPSILON}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{diag}{)}}{<}{Precision.SAFE_MIN}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{diag}{)}}{<}{Precision.SAFE_MIN}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LevenbergMarquardtOptimizer}}{{optimizer}{=}{{new}{{LevenbergMarquardtOptimizer}}{(}{initialStepBoundFactor}{,}{costRelativeTolerance}{,}{parRelativeTolerance}{,}{orthoTolerance}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{indefinite}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{distinct}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{repeated}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{createTestMatrix}{(}{r}{,}{bigValues}{)}}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{t}{.}{getMainDiagonalRef}{()}}{,}{{t}{.}{getSecondaryDiagonalRef}{()}}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{tmp}{)}}{>}{Precision.EPSILON}}{)}{{{}{{{w}{=}{{{(}{{di}{*}{w}}{)}}{/}{dpi}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{numberOfVariables}{,}{includeConstant}{,}{Precision.EPSILON}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{abs}{(}{sumXX}{)}}{>}{Precision.SAFE_MIN}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberIsTooLargeException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{numberOfInterpolationPoints}{,}{DEFAULT_INITIAL_RADIUS}{,}{DEFAULT_STOPPING_RADIUS}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopfitness}}{=}{stopFitness}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopFitness}}{=}{stopFitness}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isInfinite}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isNaN}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isInfinite}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isNaN}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isInfinite}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isNaN}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{unitize}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getLInfNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getL1Norm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{bounds}{=}{{empiricalDistribution2}{.}{getGeneratorUpperBounds}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldDecompositionSolver}}{<}{{Fraction}}{>}}{{solver}}{;}}}
{AST_ROOT_SC2NF{{double}{{floatn}{=}{v.length}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{eventY}{=}{{{interpolator}{.}{getInterpolatedState}{()}}{.}{clone}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{yTmp}{=}{{y0}{.}{clone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{BetaDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BetaDistribution}}{{betaDistribution}{=}{{new}{{BetaDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BetaDistribution}}{{d}{=}{{new}{{BetaDistribution}}{(}{alpha}{,}{beta}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BetaDistribution}}{{d}{=}{{new}{{BetaDistribution}}{(}{alpha}{,}{beta}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{BinomialDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{BinomialDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{CauchyDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquaredDistribution}}{{d}{=}{{new}{{ChiSquaredDistribution}}{(}{df}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{ChiSquaredDistribution}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ChiSquaredDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{ChiSquaredDistribution}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{ChiSquaredDistribution}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FDistribution}}{{fd}{=}{{new}{{FDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{FDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GammaDistribution}}{{distribution}{=}{{new}{{GammaDistribution}}{(}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GammaDistribution}}{{distribution}{=}{{new}{{GammaDistribution}}{(}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ExponentialDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{ExponentialDistribution}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FDistribution}}{{fdist}{=}{{new}{{FDistribution}}{(}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{gamma}{=}{{new}{{GammaDistribution}}{(}{{degreesOfFreedom}{/}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{solverAbsoluteAccuracy}{=}{inverseCumAccuracy}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HypergeometricDistribution}}{{dist}{=}{{new}{{HypergeometricDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistribution}}{{normal}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistribution}}{{distribution}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistribution}}{{d}{=}{{new}{{NormalDistribution}}{(}{mean}{,}{sd}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{PascalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{PascalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{normal}{=}{{new}{{NormalDistribution}}{(}{p}{,}{{FastMath}{.}{sqrt}{(}{p}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{tDistribution}{=}{{new}{{TDistribution}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{FastMath}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{*}{{(}{{{(}{{NUMBER_CONSTANT}{/}{n}}{)}}{+}{{{(}{{xbar}{*}{xbar}}{)}}{/}{sumXX}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{td}{=}{{new}{{TDistribution}}{(}{df}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{TDistribution}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TDistribution}}{{td}{=}{{new}{{TDistribution}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{td}{.}{cumulativeProbability}{(}{NUMBER_CONSTANT}{)}}{;}}{{{td}{.}{cumulativeProbability}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{TDistribution}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{WeibullDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{TDistribution}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{poissonDistribution}{=}{{new}{{PoissonDistribution}}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistribution}}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistribution}}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistribution}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{dist}{.}{getMean}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{NotStrictlyPositiveException}}{.}{class}}}{)}}{public}{void}{testNegativeMean}{()}{{{}{{{new}{{PoissonDistribution}}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistribution}}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{IntegerDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{PoissonDistribution}}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{dist}{=}{{new}{{ZipfDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{windowSize}{<}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{windowSize}{!=}{INFINITE_WINDOW}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE}{,}{windowSize}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{sign}{>=}{NUMBER_CONSTANT}}{&&}{{magnitude}{==}{Long.MIN_VALUE}}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.OVERFLOW}{)}}{;}}{}}}{else}{{{}{{return}{{-}{magnitude}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{sign}{>=}{NUMBER_CONSTANT}}{&&}{{magnitude}{==}{Integer.MIN_VALUE}}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.OVERFLOW}{)}}{;}}{}}}{else}{{{}{{return}{{-}{magnitude}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c}{.}{isAssignableFrom}{(}{{{UnivariateFunction}}{.}{class}}{)}}{)}{{{}{{return}{{new}{{Sin}}{()}}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{c}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{XMinus5Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{ParametricUnivariateFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ParametricUnivariateFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{func}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{f}{=}{{new}{{Gaussian}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{f}{=}{{new}{{Gaussian}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{mapToSelf}{(}{{{UnivariateFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{map}{(}{{{UnivariateFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{p}{=}{{interpolator}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{f}{=}{{new}{{Sigmoid}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{p}{=}{{interpolator}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{lsf}{=}{{new}{{LineSearchFunction}}{(}{searchDirection}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{mapToSelf}{(}{{{UnivariateFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{map}{(}{{{UnivariateFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MonitoredFunction}{(}{{{UnivariateFunction}}{f}}{)}{{{}{{{callsCount}{=}{NUMBER_CONSTANT}}{;}}{{{{this}{.}{f}}{=}{f}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{dSpline}{=}{{spline}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MultivariateFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{{MultivariateFunction}}{func}}}
{AST_ROOT_SC2NF{{{MultivariateFunction}}{{coll}{=}{{FunctionUtils}{.}{collector}{(}{bi}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MultivariateFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{final}{{MultivariateFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateFunction}}{func}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateFunction}}{func}}}
{AST_ROOT_SC2NF{{{MultivariateFunction}}{func}}}
{AST_ROOT_SC2NF{{final}{{MultivariateFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{final}{{MultivariateFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{{MultivariateFunction}}{func}}}
{AST_ROOT_SC2NF{{public}{KeplerHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{KeplerHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{{{maxError}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{KeplerStepHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{evaluations}{.}{resetCount}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{KeplerStepHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{KeplerHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateVectorFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{MultivariateVectorFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{MultivariateVectorFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{MultivariateVectorFunction}}{function}}}
{AST_ROOT_SC2NF{{#}{optimize}{(}{{int}}{,}{{{MultivariateVectorFunction}}}{,}{{{double}{[]}}}{,}{{{double}{[]}}}{,}{{{double}{[]}}}{)}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorFunction}}{problem}}}
{AST_ROOT_SC2NF{{{result}{=}{{transformer}{.}{inverseTransform}{(}{f}{,}{min}{,}{max}{,}{N}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{forward}{)}{{{}{{{temp}{=}{{transform2}{(}{temp}{)}}}{;}}{}}}{else}{{{}{{{temp}{=}{{inverseTransform2}{(}{temp}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{dResult}{[]}{=}{{transformer}{.}{inverseTransform}{(}{dY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{o}}}
{AST_ROOT_SC2NF{{{double}{[]}}{d}}}
{AST_ROOT_SC2NF{{{{Complex}}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{{Complex}}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{int}{[]}}{x}}}
{AST_ROOT_SC2NF{{{double}{[]}}{x}}}
{AST_ROOT_SC2NF{{{int}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{new}{{Fraction}}{(}{{{(}{{{(}{{{Math}{.}{abs}{(}{w}{)}}{*}{d}}{)}}{+}{n}}{)}}{*}{{MathUtils}{.}{copySign}{(}{NUMBER_CONSTANT}{,}{w}{)}}}{,}{d}{)}}}
{AST_ROOT_SC2NF{{int}{bits}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{x}}}
{AST_ROOT_SC2NF{{{p}{=}{{dist}{.}{cumulativeProbability}{(}{{(}{int}{)}{x}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{RealDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{FastFourierTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{FastFourierTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{FastFourierTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{FastFourierTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastCosineTransformer}}{{transformer}{=}{{FastCosineTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastCosineTransformer}}{{transformer}{=}{{FastCosineTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{{}{{{DifferentiableMultivariateVectorOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{true}{)}}}{;}}{{{checkUnsolvableProblem}{(}{optimizer}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateVectorOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{public}{HarmonicFitter}{(}{{final}{{DifferentiableMultivariateVectorOptimizer}}{optimizer}}{)}{{{}{{super}{(}{optimizer}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateVectorOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{public}{GaussianFitter}{(}{{{DifferentiableMultivariateVectorOptimizer}}{optimizer}}{)}{{{}{{super}{(}{optimizer}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{BaseMultivariateOptimizer}}{<}{{FUNC}}{>}}{optimizer}}}
{AST_ROOT_SC2NF{{{MultivariateOptimizer}}{optim}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{final}{{MultivariateOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setSeed}{(}{{int}{seed}}{)}{{{}{{{ran}{.}{setSeed}{(}{seed}{)}}{;}}{{{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rand}{==}{null}}{)}{{{}{{{initRan}{()}}{;}}{}}}}{{{rand}{.}{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{FastSineTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{FastSineTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{dist}{.}{inverseCumulativeProbability}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInverseCumulativeTestValues}{(}{{new}{{int}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInverseCumulativeTestValues}{(}{{new}{{int}{[]}}{{{}{Integer.MAX_VALUE}{,}{Integer.MAX_VALUE}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{numberOfTrials}{*}{probabilityOfSuccess}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ArithmeticUtils}{.}{isPowerOfTwo}{(}{n}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE}{,}{{Integer}{.}{valueOf}{(}{f.length}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{ArithmeticUtils}{.}{isPowerOfTwo}{(}{o.length}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}{,}{{Integer}{.}{valueOf}{(}{o.length}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{ArithmeticUtils}{.}{isPowerOfTwo}{(}{d.length}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}{,}{{Integer}{.}{valueOf}{(}{d.length}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ArithmeticUtils}{.}{isPowerOfTwo}{(}{n}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO}{,}{{Integer}{.}{valueOf}{(}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ArithmeticUtils}{.}{isPowerOfTwo}{(}{n}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO}{,}{{Integer}{.}{valueOf}{(}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{double}{[]}}{{data}{=}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}{{return}{{inverseTransform}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{double}{[]}}{{data}{=}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}{{return}{{transform}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{unscaled}{=}{{fht}{(}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{fht}{(}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{FunctionUtils}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fst}{(}{data}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fst}{(}{f}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{s}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{n}}{)}}}{;}}{{return}{{TransformUtils}{.}{scaleArray}{(}{{fst}{(}{data}{)}}{,}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{s}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{f.length}}{)}}}{;}}{{return}{{TransformUtils}{.}{scaleArray}{(}{{fst}{(}{f}{)}}{,}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TransformUtils}{.}{scaleArray}{(}{x2}{,}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{x2.length}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{transformed}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fft}{(}{f}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fft}{(}{data}{,}{true}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fft}{(}{f}{,}{true}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{s}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{f.length}{)}}}}{;}}{{return}{{TransformUtils}{.}{scaleArray}{(}{{fft}{(}{f}{)}}{,}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fft}{(}{data}{,}{false}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fft}{(}{f}{,}{false}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{TransformUtils}{.}{scaleArray}{(}{x}{,}{{FastMath}{.}{sqrt}{(}{{x.length}{/}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fct}{(}{f}{)}}{,}{s1}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{{fct}{(}{f}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{TransformUtils}{.}{scaleArray}{(}{unscaled}{,}{{NUMBER_CONSTANT}{/}{n}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{TransformUtils}{.}{scaleArray}{(}{{fht}{(}{f}{)}}{,}{{NUMBER_CONSTANT}{/}{f.length}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{double}{diag}}{:}{rDiag}{)}{{{}{{if}{(}{{{FastMath}{.}{abs}{(}{diag}{)}}{<=}{threshold}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{DecompositionSolver}}{getSolver}{()}{{{}{{return}{{new}{{Solver}}{(}{qrt}{,}{rDiag}{,}{threshold}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberIsTooLargeException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{final}{{UnivariateSolver}}{solver}}}
{AST_ROOT_SC2NF{{final}{{UnivariateSolver}}{solver}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolverUtils}{.}{verifyInterval}{(}{lower}{,}{upper}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{super}{.}{solve}{(}{maxEval}{,}{f}{,}{{UnivariateSolverUtils}{.}{midpoint}{(}{min}{,}{max}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{UnivariateSolver}}{lineSearchSolver}}}
{AST_ROOT_SC2NF{{final}{{UnivariateSolver}}{lineSearchSolver}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{BrentSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{BrentSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{UnivariateSolverUtils}{.}{solve}{(}{toSolve}{,}{lowerBound}{,}{upperBound}{,}{{getSolverAbsoluteAccuracy}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{solver}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateSolver}}{{solver}{=}{{new}{{RegulaFalsiSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateSolver}}{solver}}}
{AST_ROOT_SC2NF{{final}{int}{populationLimit}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{chromosome}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Chromosome}}{>}}{chromosomes}}}
{AST_ROOT_SC2NF{{final}{int}{arity}}}
{AST_ROOT_SC2NF{{final}{{Population}}{population}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{original}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{another}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{another}}}
{AST_ROOT_SC2NF{{final}{int}{l}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Double}}{>}}{chromosomeRepresentation}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{another}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{T}}{>}}{sequence}}}
{AST_ROOT_SC2NF{{final}{{{Double}}{[]}}{representation}}}
{AST_ROOT_SC2NF{{final}{{Population}}{current}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{random}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{maxGenerations}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{maxGenerations}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}{{{{this}{.}{maxGenerations}}{=}{maxGenerations}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{elitismRate}{<}{NUMBER_CONSTANT}}{||}{{elitismRate}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{OutOfRangeException}}{(}{LocalizedFormats.ELITISM_RATE}{,}{elitismRate}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{partialDerivatives}{=}{{new}{{{BivariateFunction}}{[}{[}{[}}{NUMBER_CONSTANT}{]}{[}{lastI}{]}{[}{lastJ}{]}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateFunction}}{{div}{=}{{new}{{Divide}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateFunction}}{{bi}{=}{{new}{{Add}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateFunction}}{{bi}{=}{{new}{{Add}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{BivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{BivariateFunction}}{combiner}}}
{AST_ROOT_SC2NF{{final}{{BivariateFunction}}{combiner}}}
{AST_ROOT_SC2NF{{final}{{BivariateFunction}}{combiner}}}
{AST_ROOT_SC2NF{{final}{{IterativeLinearSolverEvent}}{{event}{=}{{new}{{SymmLQEvent}}{(}{this}{,}{state}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{x}{.}{ebeDivide}{(}{diag}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{f.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{BivariateGridInterpolator}}{{interpolator}{=}{{new}{{SmoothingPolynomialBicubicSplineInterpolator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateGridInterpolator}}{{interpolator}{=}{{new}{{SmoothingPolynomialBicubicSplineInterpolator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateGridInterpolator}}{{interpolator}{=}{{new}{{SmoothingPolynomialBicubicSplineInterpolator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateInterpolator}}{{interpolator}{=}{{new}{{MicrosphereInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateInterpolator}}{{interpolator}{=}{{new}{{MicrosphereInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{interpolator}{=}{{new}{{NevilleInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{interpolator}{=}{{new}{{NevilleInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{interpolator}{=}{{new}{{NevilleInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateGridInterpolator}}{{interpolator}{=}{{new}{{BicubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateGridInterpolator}}{{interpolator}{=}{{new}{{BicubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateGridInterpolator}}{{interpolator}{=}{{new}{{BicubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{interpolator}{=}{{new}{{DividedDifferenceInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{interpolator}{=}{{new}{{DividedDifferenceInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{interpolator}{=}{{new}{{DividedDifferenceInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TrivariateGridInterpolator}}{{interpolator}{=}{{new}{{TricubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TrivariateGridInterpolator}}{{interpolator}{=}{{new}{{TricubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TrivariateGridInterpolator}}{{interpolator}{=}{{new}{{TricubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeRoots}{(}{f.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeRoots}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateIntegrator}}{{integrator}{=}{{new}{{TrapezoidIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateIntegrator}}{{integrator}{=}{{new}{{TrapezoidIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LegendreGaussIntegrator}}{{integrator}{=}{{new}{{LegendreGaussIntegrator}}{(}{n}{,}{BaseAbstractUnivariateIntegrator.DEFAULT_RELATIVE_ACCURACY}{,}{BaseAbstractUnivariateIntegrator.DEFAULT_ABSOLUTE_ACCURACY}{,}{BaseAbstractUnivariateIntegrator.DEFAULT_MIN_ITERATIONS_COUNT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateIntegrator}}{{integrator}{=}{{new}{{SimpsonIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateIntegrator}}{{integrator}{=}{{new}{{SimpsonIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateIntegrator}}{{integrator}{=}{{new}{{RombergIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateIntegrator}}{{integrator}{=}{{new}{{RombergIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BaseAbstractUnivariateIntegrator}}{baseIntegrator}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ISAACRandom}{(}{{long}{seed}}{)}{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{new}{{MathIllegalStateException}}{(}{LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{fact2}{=}{{n}{/}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{fact2}{=}{{n}{/}{{(}{{NUMBER_CONSTANT}{+}{n}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{init}{(}{{double}{t0}}{,}{{{double}{[]}}{y0}}{,}{{double}{time}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{t}{.}{transform}{(}{input}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{(}{{nvars}{+}{NUMBER_CONSTANT}}{)}}{*}{nobs}}{!=}{data.length}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.INVALID_REGRESSION_ARRAY}{,}{data.length}{,}{nobs}{,}{nvars}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistribution}}{(}{binCount}{,}{randomData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{computeDistribution}{(}{EmpiricalDistribution.DEFAULT_BIN_COUNT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EmpiricalDistribution}}{{dist}{=}{{new}{{EmpiricalDistribution}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{EmpiricalDistribution}}{()}}{.}{load}{(}{{(}{{File}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{EmpiricalDistribution}}{()}}{.}{load}{(}{{(}{{URL}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{EmpiricalDistribution}}{()}}{.}{load}{(}{{(}{{double}{[]}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EmpiricalDistribution}}{{dist}{=}{{new}{{EmpiricalDistribution}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{EmpiricalDistribution}}{()}}{.}{load}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{dataRI}{=}{{new}{{double}{[]}{[]}}{{{}{{MathArrays}{.}{copyOf}{(}{f}{,}{f.length}{)}}{,}{{new}{{double}{[}}{f.length}{]}}{}}}}}}
{AST_ROOT_SC2NF{{dataRI}{=}{{new}{{double}{[]}{[]}}{{{}{{MathArrays}{.}{copyOf}{(}{f}{,}{f.length}{)}}{,}{{new}{{double}{[}}{f.length}{]}}{}}}}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{final}{boolean}{exactPValue}}}
{AST_ROOT_SC2NF{{double}{{dResult}{[]}{=}{{transformer}{.}{transform}{(}{dY}{,}{TransformType.INVERSE}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{dResult}{[]}{=}{{transformer}{.}{transform}{(}{dX}{,}{TransformType.FORWARD}{)}}}{;}}}
{AST_ROOT_SC2NF{{protected}{BaseAbstractMultivariateSimpleBoundsOptimizer}{(}{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{UnivariatePointValuePair}}{[]}}{{optima}{=}{{optimizer}{.}{getOptima}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{SimplexOptimizer}{(}{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PointValuePair}}{expected}}}
{AST_ROOT_SC2NF{{protected}{AbstractScalarDifferentiableOptimizer}{(}{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{UnivariatePointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{UnivariatePointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{PointValuePair}}{[]}}{points}}}
{AST_ROOT_SC2NF{{{PointValuePair}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Comparator}}{<}{{PointValuePair}}{>}}{comparator}}}
{AST_ROOT_SC2NF{{{ChiSquareTest}}{{chiSquareTest}{=}{{new}{{ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math.stat.inference.ChiSquareTest}}{{csti}{=}{{new}{{org.apache.commons.math.stat.inference.ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math.stat.inference.ChiSquareTest}}{{csti}{=}{{new}{{org.apache.commons.math.stat.inference.ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquareTest}}{{chiSquareTest}{=}{{new}{{ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PointVectorValuePair}}{optimum}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{protected}{AbstractLeastSquaresOptimizer}{(}{{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{optimizer}{=}{{new}{{SimplexOptimizer}}{(}{{new}{{{SimplePointChecker}}{<}{{PointValuePair}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{underlying}{=}{{new}{{SimplexOptimizer}}{(}{{new}{{SimpleValueChecker}}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{BrentSolver}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{BrentSolver}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{BrentSolver}}{()}}{,}{preconditioner}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{optimizer}{=}{{new}{{SimplexOptimizer}}{(}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{underlying}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{lambda}{,}{inputSigma}{,}{boundaries}{,}{maxIterations}{,}{stopFitness}{,}{isActiveCMA}{,}{diagonalOnly}{,}{checkFeasableCount}{,}{random}{,}{generateStatistics}{,}{{new}{{SimpleValueChecker}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{SimpleValueChecker}}{(}{rel}{,}{abs}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorOptimizer}}{{underlyingOptimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{true}{,}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorOptimizer}}{{underlyingOptimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{true}{,}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LevenbergMarquardtOptimizer}}{{optimizer}{=}{{new}{{LevenbergMarquardtOptimizer}}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MathUnsupportedOperationException}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{new}{{FastSineTransformer}}{(}{DstNormalization.STANDARD_DST_I}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{new}{{FastSineTransformer}}{(}{DstNormalization.STANDARD_DST_I}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION}{,}{{FastMath}{.}{abs}{(}{h}{)}}{,}{minStep}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{variablesToInclude}{==}{null}}{||}{{variablesToInclude.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{underlying}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{underlying}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateOptimizer}}{{underlying}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}{[]}}{loadLnMant}{()}{{{}{{return}{LN_MANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpFracB}{()}{{{}{{return}{EXP_FRAC_B}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpFracA}{()}{{{}{{return}{EXP_FRAC_A}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpIntB}{()}{{{}{{return}{EXP_INT_B}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpIntA}{()}{{{}{{return}{EXP_INT_A}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{DimensionMismatchException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{DimensionMismatchException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{imAppendTo}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{fitness}}{==}{NO_FITNESS}}{)}{{{}{{{{this}{.}{fitness}}{=}{{fitness}{()}}}{;}}{}}}}{{return}{{this}{.}{fitness}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setControlFactors}{(}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setControlFactors}{(}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{{n}{*}{{(}{{n}{+}{NUMBER_CONSTANT}}{)}}{*}{{moment}{.}{getResult}{()}}}{-}{{NUMBER_CONSTANT}{*}{moment.m2}{*}{moment.m2}{*}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}{)}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{hatResiduals}{=}{{{{I}{.}{subtract}{(}{hat}{)}}{.}{operate}{(}{{model}{.}{getY}{()}}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{RealVector}}{{b}{=}{{calculateBeta}{()}}}{;}}{{return}{{yVector}{.}{subtract}{(}{{xMatrix}{.}{operate}{(}{b}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{residuals}{.}{dotProduct}{(}{residuals}{)}}{/}{{(}{{{xMatrix}{.}{getRowDimension}{()}}{-}{{xMatrix}{.}{getColumnDimension}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{e}{=}{{yVector}{.}{subtract}{(}{{xMatrix}{.}{operate}{(}{b}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{yVector}}{=}{{new}{{ArrayRealVector}}{(}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{t}{/}{{(}{{{{getX}{()}}{.}{getRowDimension}{()}}{-}{{{getX}{()}}{.}{getColumnDimension}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{p}{=}{{{getX}{()}}{.}{getColumnDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{qr}{.}{getSolver}{()}}{.}{solve}{(}{{getY}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newXSampleData}{(}{x}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{{getX}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newSampleData}{(}{data}{,}{nobs}{,}{nvars}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{{getX}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{x}{=}{{{ols}{.}{getX}{()}}{.}{copy}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{length}{=}{{b}{.}{getDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{epsa}{=}{{{(}{{s}{+}{MACH_PREC}}{)}}{*}{CBRT_MACH_PREC}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{getRightHandSideVector}{()}{{{}{{return}{{RealVector}{.}{unmodifiableRealVector}{(}{{state}{.}{getRightHandSideVector}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{xL}}{.}{set}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{xL}}{=}{x}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{new}{{SymmLQ}}{(}{maxIterations}{,}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{new}{{SymmLQ}}{(}{maxIterations}{,}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{householderMatrix}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{k}{,}{v}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{entry}{.}{getKey}{()}}{,}{{entry}{.}{getValue}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{key}{=}{k}}{;}}{{{value}{=}{v}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathInternalError}}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{NUMBER_CONSTANT}}{;}}{}}}{else}{{{}{{{ret}{=}{{Gamma}{.}{regularizedGammaP}{(}{shape}{,}{{x}{/}{scale}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{shape}{*}{scale}}{;}}{}}}}
{AST_ROOT_SC2NF{{{v}{.}{walkInOptimizedOrder}{(}{visitor}{,}{expectedStart}{,}{expectedEnd}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{innerCumulativeProbability}{(}{{domain}{[}{NUMBER_CONSTANT}{]}}{,}{x}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{tree}{.}{visit}{(}{{new}{{{BoundaryBuilder}}{<}{{S}}{>}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{optimizer}{=}{{new}{{SimplexOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{create}{(}{{final}{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{TestVectorImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{TestVectorImpl}{(}{{{double}{[]}}{values}}{)}{{{}{{{{this}{.}{values}}{=}{{MathArrays}{.}{copyOf}{(}{values}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathArithmeticException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{T}}{f}}}
{AST_ROOT_SC2NF{{{T}}{f}}}
{AST_ROOT_SC2NF{{final}{long}{{n1n2prod}{=}{{{(}{long}{)}{n1}}{*}{n2}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{create}{(}{{new}{{double}{[}}{NUMBER_CONSTANT}{]}}{)}}{.}{addToEntry}{(}{{-}{NUMBER_CONSTANT}}{,}{{getPreferredEntryValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{create}{(}{{new}{{double}{[}}{NUMBER_CONSTANT}{]}}{)}}{.}{setEntry}{(}{{-}{NUMBER_CONSTANT}}{,}{{getPreferredEntryValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{createAlien}{(}{{final}{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{RealVectorTestImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{new}{{RealVectorTestImpl}}{(}{{v}{.}{clone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{createAlien}{(}{{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{RealVectorTestImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{create}{(}{{final}{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{RealVectorTestImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RealVectorTestImpl}}{{v7_i}{=}{{new}{{RealVectorTestImpl}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{createAlien}{(}{{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{RealVectorTestImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{{dataU}{[}{i}{]}}{+}{STRING_CONSTANT}{+}{{dataV}{[}{j}{]}}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{ComplexUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{Object}}{other}}}
{AST_ROOT_SC2NF{{final}{int}{{n}{=}{{coefficients.length}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{indefinite}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{distinct}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{repeated}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{symmetric}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{createTestMatrix}{(}{r}{,}{bigValues}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{t}{.}{getMainDiagonalRef}{()}}{,}{{t}{.}{getSecondaryDiagonalRef}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{int}{)}{{FastMath}{.}{min}{(}{{nextPoisson}{(}{mean}{)}}{,}{Integer.MAX_VALUE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{n}{=}{{random}{.}{nextGaussian}{()}}}{;}}{{return}{{FastMath}{.}{exp}{(}{{scale}{+}{{shape}{*}{n}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{eig}{=}{{new}{{EigenDecomposition}}{(}{C}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{BaseRuleFactory}}{<}{{?}{extends}{{Number}}}{>}}{factory}}}
{AST_ROOT_SC2NF{{final}{{GaussIntegrator}}{{g}{=}{{FACTORY}{.}{legendreHighPrecision}{(}{numberOfPoints}{,}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ROW_PREFIX}{,}{DEFAULT_ROW_SUFFIX}{,}{DEFAULT_ROW_SEPARATOR}{,}{DEFAULT_COLUMN_SEPARATOR}{,}{format}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{RealMatrixFormat}{()}{{{}{{this}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ROW_PREFIX}{,}{DEFAULT_ROW_SUFFIX}{,}{DEFAULT_ROW_SEPARATOR}{,}{DEFAULT_COLUMN_SEPARATOR}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{multiplier}{=}{{tableau}{.}{getEntry}{(}{i}{,}{pivotCol}{)}}}{;}}{{{tableau}{.}{subtractRow}{(}{i}{,}{pivotRow}{,}{multiplier}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{entry}{<}{minValue}}{)}{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{s}{=}{{-}{s}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MathIllegalStateException}}{(}{LocalizedFormats.SIMPLE_MESSAGE}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{Precision}{.}{equals}{(}{{imagEigenvalues}{[}{i}{]}}{,}{NUMBER_CONSTANT}{,}{EPSILON}{)}}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNull}{(}{{STRING_CONSTANT}{+}{source}{+}{STRING_CONSTANT}}{,}{{realMatrixFormat}{.}{parse}{(}{source}{,}{pos}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNull}{(}{{STRING_CONSTANT}{+}{source}{+}{STRING_CONSTANT}}{,}{{realMatrixFormat}{.}{parse}{(}{source}{,}{pos}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNull}{(}{{STRING_CONSTANT}{+}{source}{+}{STRING_CONSTANT}}{,}{{realMatrixFormat}{.}{parse}{(}{source}{,}{pos}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{delegate}{.}{setSecureAlgorithm}{(}{algorithm}{,}{provider}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextZipf}{(}{numberOfElements}{,}{exponent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextWeibull}{(}{shape}{,}{scale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextT}{(}{df}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextPascal}{(}{r}{,}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextHypergeometric}{(}{populationSize}{,}{numberOfSuccesses}{,}{sampleSize}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextF}{(}{numeratorDf}{,}{denominatorDf}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextChiSquare}{(}{df}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextCauchy}{(}{median}{,}{scale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextBinomial}{(}{numberOfTrials}{,}{probabilityOfSuccess}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextBeta}{(}{alpha}{,}{beta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{delegate}{.}{nextUniform}{(}{lower}{,}{upper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{delegate}{=}{{new}{{RandomDataGenerator}}{(}{rand}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{dotProduct}{=}{{{new}{{IterativeLegendreGaussIntegrator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{integrate}{(}{NUMBER_CONSTANT}{,}{f}{,}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{FastMath}{.}{exp}{(}{{logGamma}{(}{shape}{)}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{throw}{{new}{{MathUnsupportedOperationException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MathUnsupportedOperationException}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{x}{=}{{randomData}{.}{nextUniform}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fillBinStats}{(}{{new}{{StreamDataAdapter}}{(}{in}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiableFunction}}{{sPrime}{=}{{new}{{Sqrt}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiableFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateDifferentiableFunction}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiableFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiableFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateDifferentiableFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiableFunction}}{{q}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.INDEX}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.INDEX}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.INDEX}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.INDEX}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{MultivariateDifferentiableVectorFunction}}{{problem}}{;}}}
{AST_ROOT_SC2NF{{public}{CircleScalar}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{gradient}{=}{{f}{.}{gradient}{()}}}{;}}{{return}{{optimizeInternal}{(}{maxEval}{,}{f}{,}{goalType}{,}{startPoint}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MultivariateDifferentiableVectorFunction}}{problem}}}
{AST_ROOT_SC2NF{{public}{CircleVectorial}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Quaternion}}{{product}{=}{{Quaternion}{.}{multiply}{(}{inverseQ}{,}{q}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{normSquareRef}{=}{{{Quaternion}{.}{multiply}{(}{q}{,}{{q}{.}{getConjugate}{()}}{)}}{.}{getScalarPart}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{multiply}{(}{this}{,}{q}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{optimum}{=}{{new}{{PointValuePair}}{(}{{fitfun}{.}{repairAndDecode}{(}{{bestArx}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{,}{{isMinimize}{?}{bestFitness}{:}{{-}{bestFitness}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{tmp}{=}{{{wxi}{*}{xi}}{/}{di}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{v}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{v}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getStartPoint}{()}{{{}{{return}{{{start}{==}{null}}{?}{null}{:}{{start}{.}{clone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{super}{.}{optimizeInternal}{(}{maxEval}{,}{f}{,}{goalType}{,}{{new}{{InitialGuess}}{(}{startPoint}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getUpperBound}{()}{{{}{{return}{{super}{.}{getUpperBound}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getLowerBound}{()}{{{}{{return}{{super}{.}{getLowerBound}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Math}{.}{max}{(}{NUMBER_CONSTANT}{,}{{NUMBER_CONSTANT}{-}{{dimension}{/}{{(}{{NUMBER_CONSTANT}{+}{maxIterations}}{)}}}}{)}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{getDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{getDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{getDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{{out}{=}{{new}{{double}{[}{[}}{sampleSize}{]}{[}{dimension}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{random}{=}{rng}}{;}}{{{dimension}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{d}{.}{getDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{d}{.}{getDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{{point}{(}{{DIM}{+}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{{point}{(}{DIM}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{{point}{(}{DIM}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{{point}{(}{DIM}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{.}{.}{.}{f}}}
{AST_ROOT_SC2NF{{{jF}{=}{f}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{distribution}{.}{get}{(}{i}{)}}{.}{reseedRandomGenerator}{(}{{i}{+}{NUMBER_CONSTANT}{+}{seed}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FUNC}}{f}}}
{AST_ROOT_SC2NF{{{FUNC}}{f}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{d}{=}{{MatrixUtils}{.}{createRealDiagonalMatrix}{(}{eigenValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{MatrixUtils}{.}{createRealDiagonalMatrix}{(}{diagonal}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{x}{=}{{{list}{.}{remove}{(}{{{list}{.}{size}{()}}{-}{NUMBER_CONSTANT}}{)}}{.}{getInf}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{sigma}{=}{{optim}{.}{computeSigma}{(}{regress}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{currentPoint}{=}{{getStartPoint}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{{covMatrix}{=}{{optimizer}{.}{computeCovariances}{(}{paramFound}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{{covarMatrix}{=}{{optimizer}{.}{computeCovariances}{(}{solution}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{qrDecomposition}{(}{{computeWeightedJacobian}{(}{currentPoint}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{j}{=}{{computeWeightedJacobian}{(}{params}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{weightedJacobian}{=}{{computeWeightedJacobian}{(}{currentPoint}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{testStatistic}{.}{gTest}{(}{expected}{,}{observed}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{OutOfRangeException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{testStatistic}{.}{gTest}{(}{expected}{,}{observed}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NotStrictlyPositiveException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{double}{{residual}{=}{{currentResiduals}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{testAdd1000}{()}}{;}}{{{Assert}{.}{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{{{(}{{(}{{ResizableDoubleArray}}{)}{da}}{)}}{.}{getCapacity}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{ResizableDoubleArray}}{{other}{=}{{(}{{ResizableDoubleArray}}{)}{object}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{ResizableDoubleArray}}{{result}{=}{{new}{{ResizableDoubleArray}}{()}}}{;}}{{{copy}{(}{this}{,}{result}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{{hashData}{[}{NUMBER_CONSTANT}{]}}{=}{{expansionMode}{.}{hashCode}{()}}}{;}}}
{AST_ROOT_SC2NF{{expansionMode}{==}{ExpansionMode.MULTIPLICATIVE}}}
{AST_ROOT_SC2NF{{expansionMode}{==}{ExpansionMode.MULTIPLICATIVE}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{initialDoubleArray}{!=}{null}}{)}{{{}{{{eDA}{=}{{new}{{StatArray}}{(}{initialDoubleArray}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{initialDoubleArray}{!=}{null}}{)}{{{}{{{eDA}{=}{{new}{{ResizableDoubleArray}}{(}{initialDoubleArray}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{DEFAULT_INITIAL_CAPACITY}{,}{DEFAULT_EXPANSION_FACTOR}{,}{{DEFAULT_CONTRACTION_DELTA}{+}{DEFAULT_EXPANSION_FACTOR}}{,}{ExpansionMode.MULTIPLICATIVE}{,}{initialArray}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{hashData}{[}{NUMBER_CONSTANT}{]}}{=}{{{new}{{Float}}{(}{contractionCriterion}{)}}{.}{hashCode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{result}{&&}{{(}{{other.contractionCriterion}{==}{contractionCriterion}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{dest.contractionCriterion}{=}{source.contractionCriterion}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkContractExpand}{(}{{getContractionCriterion}{()}}{,}{expansionFactor}{)}}{;}}{{synchronized}{(}{this}{)}{{{}{{{{this}{.}{expansionFactor}}{=}{expansionFactor}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkContractExpand}{(}{contractionCriteria}{,}{{getExpansionFactor}{()}}{)}}{;}}{{synchronized}{(}{this}{)}{{{}{{{{this}{.}{contractionCriterion}}{=}{contractionCriteria}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{getContractionCriterion}{()}{{{}{{return}{contractionCriterion}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimpleVectorValueChecker}{()}{{{}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimpleValueChecker}{()}{{{}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimplePointChecker}{()}{{{}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NaturalRanking}}{{ranking}{=}{{new}{{NaturalRanking}}{(}{NaNStrategy.MAXIMAL}{,}{TiesStrategy.MINIMUM}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimpleUnivariateValueChecker}{()}{{{}{{{maxIterationCount}{=}{ITERATION_CHECK_DISABLED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{logBeta}{(}{a}{,}{b}{)}}}
{AST_ROOT_SC2NF{{{RandomDataGenerator}}{randomData}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{new}{{RandomDataGenerator}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RandomDataGenerator}}{randomData}}}
{AST_ROOT_SC2NF{{{{this}{.}{q0}}{=}{scalar}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{diagonalOnly}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{updateCovariance}{(}{hsig}{,}{bestArx}{,}{arz}{,}{arindex}{,}{xold}{)}}{;}}{}}}{else}{{{}{{{updateCovarianceDiagonalOnly}{(}{hsig}{,}{bestArz}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{diagonalOnly}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{updateCovariance}{(}{hsig}{,}{bestArx}{,}{arz}{,}{arindex}{,}{xold}{)}}{;}}{}}}{else}{{{}{{{updateCovarianceDiagonalOnly}{(}{hsig}{,}{bestArz}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{CodyWaite}}{{cw}{=}{{new}{{CodyWaite}}{(}{xa}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CodyWaite}}{{cw}{=}{{new}{{CodyWaite}}{(}{xa}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CodyWaite}}{{cw}{=}{{new}{{CodyWaite}}{(}{xa}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{reseedRandomGenerator}{(}{{long}{seed}}{)}{{{}{{{reSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{(}{{RandomGenerator}}{)}{null}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{reseedRandomGenerator}{(}{{long}{seed}}{)}{{{}{{{randomData}{.}{reSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{new}{{RandomDataImpl}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{new}{{RandomDataGenerator}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{filePointer}{=}{{new}{{BufferedReader}}{(}{{new}{{InputStreamReader}}{(}{{valuesFileURL}{.}{openStream}{()}}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{problem}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{circle}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{function}{.}{getWeight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{function}{.}{getWeight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{circle}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{problem}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{d}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{SimplexSolver}{(}{{final}{double}{epsilon}}{)}{{{}{{this}{(}{epsilon}{,}{DEFAULT_ULPS}{,}{DEFAULT_CUT_OFF}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{result}{)}}{<}{cutOff}}{)}{{{}{{{result}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{f}{,}{constraints}{,}{goalType}{,}{restrictToNonNegative}{,}{epsilon}{,}{SimplexSolver.DEFAULT_ULPS}{,}{SimplexSolver.DEFAULT_CUT_OFF}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{outData}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{outData}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{data}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{blocks}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{{blockRows}{*}{blockColumns}}{,}{{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{{data.length}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{{v1.length}{+}{v2.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{{v1.length}{+}{v2.data.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{{v1.data.length}{+}{v2.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{{v1.data.length}{+}{v2.data.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{{v}{.}{getDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{subMatrix.length}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{field}{,}{rowDimension}{,}{columnDimension}{)}{;}}{{{data}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{rowDimension}{,}{columnDimension}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{res}{=}{{MathArrays}{.}{buildArray}{(}{field}{,}{virtualSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{exponent}{=}{{(}{int}{)}{{(}{{{y}{.}{intLog10}{()}}{*}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{FastMath}{.}{IEEEremainder}{(}{value}{,}{a.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{FastMath}{.}{IEEEremainder}{(}{value}{,}{a}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{ePlus}{.}{subtract}{(}{eMinus}{)}}{.}{divide}{(}{{ePlus}{.}{add}{(}{eMinus}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DerivativeStructure}}{{ref}{=}{{dsX}{.}{subtract}{(}{{x}{-}{{FastMath}{.}{IEEEremainder}{(}{x}{,}{y}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DerivativeStructure}}{{sAccurate}{=}{{FieldVector3D}{.}{dotProduct}{(}{u1}{,}{u2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{{FieldVector3D}{.}{dotProduct}{(}{{r}{.}{getAxis}{()}}{,}{{reverted}{.}{getAxis}{()}}{)}}{.}{getReal}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{{FieldVector3D}{.}{dotProduct}{(}{{r}{.}{getAxis}{()}}{,}{{reverted}{.}{getAxis}{()}}{)}}{.}{getReal}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{randomData}{=}{{new}{{RandomDataGenerator}}{(}{randomGenerator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{tiesStrategy}}{=}{TiesStrategy.RANDOM}}{;}}{{{nanStrategy}{=}{DEFAULT_NAN_STRATEGY}}{;}}{{{randomData}{=}{{new}{{RandomDataGenerator}}{(}{randomGenerator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{nanStrategy}}{=}{nanStrategy}}{;}}{{{{this}{.}{tiesStrategy}}{=}{tiesStrategy}}{;}}{{{randomData}{=}{{new}{{RandomDataGenerator}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{tiesStrategy}}{=}{tiesStrategy}}{;}}{{{nanStrategy}{=}{DEFAULT_NAN_STRATEGY}}{;}}{{{randomData}{=}{{new}{{RandomDataGenerator}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{RealFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberIsTooLargeException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{{{getRandomGenerator}{()}}{.}{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{getRandomGenerator}{()}}{.}{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{generator}{=}{{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{FDistribution}}{(}{{getRandomGenerator}{()}}{,}{numeratorDf}{,}{denominatorDf}{,}{FDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{ChiSquaredDistribution}}{(}{{getRandomGenerator}{()}}{,}{df}{,}{ChiSquaredDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{CauchyDistribution}}{(}{{getRandomGenerator}{()}}{,}{median}{,}{scale}{,}{CauchyDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{BinomialDistribution}}{(}{{getRandomGenerator}{()}}{,}{numberOfTrials}{,}{probabilityOfSuccess}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{BetaDistribution}}{(}{{getRandomGenerator}{()}}{,}{alpha}{,}{beta}{,}{BetaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{ZipfDistribution}}{(}{{getRandomGenerator}{()}}{,}{numberOfElements}{,}{exponent}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{WeibullDistribution}}{(}{{getRandomGenerator}{()}}{,}{shape}{,}{scale}{,}{WeibullDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{TDistribution}}{(}{{getRandomGenerator}{()}}{,}{df}{,}{TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{PascalDistribution}}{(}{{getRandomGenerator}{()}}{,}{r}{,}{p}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{HypergeometricDistribution}}{(}{{getRandomGenerator}{()}}{,}{populationSize}{,}{numberOfSuccesses}{,}{sampleSize}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{GammaDistribution}}{(}{{getRandomGenerator}{()}}{,}{shape}{,}{scale}{,}{GammaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{ExponentialDistribution}}{(}{{getRandomGenerator}{()}}{,}{mean}{,}{ExponentialDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{sigma}{*}{{{getRandomGenerator}{()}}{.}{nextGaussian}{()}}}{+}{mu}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{PoissonDistribution}}{(}{{getRandomGenerator}{()}}{,}{mean}{,}{PoissonDistribution.DEFAULT_EPSILON}{,}{PoissonDistribution.DEFAULT_MAX_ITERATIONS}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{ran}{=}{{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getKernel}{(}{stats}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testReciprocalZero}{()}{{{}{{{Assert}{.}{assertEquals}{(}{{Complex.ZERO}{.}{reciprocal}{()}}{,}{Complex.INF}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{(}{{{Float}{.}{floatToRawIntBits}{(}{f}{)}}{>}{>}{>}{NUMBER_CONSTANT}}{)}}{&}{NUMBER_CONSTANT}}{)}}{-}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{bits}{=}{{Double}{.}{doubleToRawLongBits}{(}{d}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{bits}{=}{{Double}{.}{doubleToRawLongBits}{(}{d}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{abs}{(}{{x}{-}{{Double}{.}{longBitsToDouble}{(}{{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}{^}{NUMBER_CONSTANT}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{bits}{=}{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}}{;}}{{if}{(}{{bits}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{bits}{=}{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}}{;}}{{if}{(}{{bits}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{inbits}{=}{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{bits}{=}{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{bits}{=}{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{xl}{=}{{Double}{.}{doubleToRawLongBits}{(}{d}{)}}}{;}}}
{AST_ROOT_SC2NF{{{File}}{{file}{=}{{new}{{File}}{(}{{url}{.}{toURI}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Double}{.}{longBitsToDouble}{(}{{MASK_NON_SIGN_LONG}{&}{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Float}{.}{intBitsToFloat}{(}{{MASK_NON_SIGN_INT}{&}{{Float}{.}{floatToRawIntBits}{(}{x}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{matrix}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{Well19937c}}{()}}{,}{lower}{,}{upper}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{fit}{(}{initialMixture}{,}{DEFAULT_MAX_ITERATIONS}{,}{DEFAULT_THRESHOLD}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sum}{+=}{{FastMath}{.}{pow}{(}{{distA}{/}{distB}}{,}{{NUMBER_CONSTANT}{/}{{(}{{fuzziness}{-}{NUMBER_CONSTANT}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{u}{=}{{FastMath}{.}{pow}{(}{{{membershipMatrix}{[}{i}{]}}{[}{j}{]}}{,}{fuzziness}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{grayCode}{=}{{i}{^}{{(}{{i}{>}{>}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{count}{=}{{samples}{/}{centers}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{{this}{.}{a}}{[}{i}{]}}{[}{j}{]}}{=}{{a}{[}{{{i}{*}{N}}{+}{j}}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertArrayEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{tEnd}{=}{{test}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{tEnd}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{tEnd}{=}{{test}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{tEnd}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{midPoint}{=}{{min}{+}{{NUMBER_CONSTANT}{*}{diff}}}}{;}}{{return}{{diff}{*}{{computeObjectiveValue}{(}{midPoint}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{WeibullDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{WeibullDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{incrementValue}{(}{{entry}{.}{getKey}{()}}{,}{{{entry}{.}{getValue}{()}}{.}{longValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertFalse}{(}{{random}{.}{nextBoolean}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{{r}{.}{call}{()}}{.}{doubleValue}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{uniDimIndex}{=}{{{iter}{.}{next}{()}}{.}{intValue}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{value}{,}{INTEGER_ZERO}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{value}{,}{INTEGER_ZERO}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{INTEGER_ZERO}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{expected}{[}{index}{]}}{.}{intValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{wrong}{[}{index}{]}}{.}{intValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{value}{,}{INTEGER_ZERO}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotStrictlyPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{value}{,}{INTEGER_ZERO}{,}{false}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{{Integer}{.}{valueOf}{(}{wrong}{)}}{,}{{Integer}{.}{valueOf}{(}{expected}{)}}{)}{;}}{{{dimension}{=}{expected}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{secRand}{=}{{RandomGeneratorFactory}{.}{createRandomGenerator}{(}{{SecureRandom}{.}{getInstance}{(}{algorithm}{,}{provider}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{secRan}{=}{{getSecRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{withConvergenceChecker}{(}{{{{ConvergenceChecker}}{<}{{PAIR}}{>}}{checker}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{term}{*=}{{{FastMath}{.}{pow}{(}{{delta}{[}{k}{]}}{,}{{orders}{[}{k}{]}}{)}}{/}{{CombinatoricsUtils}{.}{factorial}{(}{{orders}{[}{k}{]}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomDataGenerator}}{{randomData}{=}{{new}{{RandomDataGenerator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{expected}{=}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{{i}{+}{j}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{refDer}{=}{{{-}{{CombinatoricsUtils}{.}{factorial}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{/}{{FastMath}{.}{pow}{(}{{-}{x}}{,}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{ArithmeticUtils}{.}{pow}{(}{{-}{NUMBER_CONSTANT}}{,}{i}{)}}{*}{{CombinatoricsUtils}{.}{factorial}{(}{i}{)}}}{/}{{FastMath}{.}{pow}{(}{x}{,}{{i}{+}{NUMBER_CONSTANT}}{)}}}}
{AST_ROOT_SC2NF{{double}{{inv}{=}{{NUMBER_CONSTANT}{/}{{CombinatoricsUtils}{.}{factorial}{(}{i}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{AbstractOptimizer}}{<}{{PAIR}}{,}{{OPTIM}}{>}}{other}}}
{AST_ROOT_SC2NF{{{}{{return}{{Double}{.}{parseDouble}{(}{{o}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Double}{.}{parseDouble}{(}{str}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{val}{=}{{Double}{.}{parseDouble}{(}{str}{)}}}{;}}{{{sampleStats}{.}{addValue}{(}{val}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{normalized}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{(}{{originalConstraints}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Edge}}{>}}{{edges}{=}{{new}{{{ArrayList}}{<}{{Edge}}{>}}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<}{{Segment}}{>}}{(}{{list}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{EventHandler}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{EventHandler}}{>}}{(}{{eventsStates}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{normalized}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{(}{{originalConstraints}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{int}{[]}}{>}}{{row}{=}{{new}{{{ArrayList}}{<}{{int}{[]}}{>}}{(}{{dRow.length}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<}{{Segment}}{>}}{(}{{list}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{vectorData}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{value}{,}{DEFAULT_EPSILON}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{f}{.}{getCount}{(}{THREE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{f}{.}{addValue}{(}{THREE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{Combinations}}{(}{n}{,}{k}{)}}{.}{iterator}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{index}{=}{{MathArrays}{.}{natural}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{int}{[]}}{{natural}{=}{{MathArrays}{.}{natural}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{natural.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{AbstractLeastSquaresOptimizer}}{<}{{OPTIM}}{>}}{other}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{a0}{)}}{>}{overflow}}{)}{{{}{{throw}{{new}{{FractionConversionException}}{(}{value}{,}{a0}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NUMBER_CONSTANT}{+}{{NUMBER_CONSTANT}{*}{{MathUtils}{.}{hash}{(}{value}{)}}}}{+}{{NUMBER_CONSTANT}{*}{{derivatives}{.}{hashCode}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mult}{.}{multiplyInPlace}{(}{var1}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{verifyValues}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{allowEmpty}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{verifyValues}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{,}{allowEmpty}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{w}{-=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{num}{%=}{den}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{>}{NUMBER_CONSTANT}}{)}{{{}{{{randInt}{>}{>}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{T}}{a}}{:}{data}{)}{{{}{{{h}{^=}{{a}{.}{hashCode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{rhs}{[}{m}{]}}{/=}{X}}{;}}}
{AST_ROOT_SC2NF{{{coeff1}{/=}{pc2}}{;}}}
{AST_ROOT_SC2NF{{{bits}{&=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{den}{+=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{trial}{*=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{den}{+=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{bytes}{[}{{i}{++}}{]}}{=}{{(}{byte}{)}{{(}{{random}{&}{NUMBER_CONSTANT}}{)}}}}{;}}{{{random}{>}{>}{=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{NUMBER_CONSTANT}}{)}{{{}{{{result}{*=}{x}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{za}{*=}{ya}}{;}}}
{AST_ROOT_SC2NF{{{e}{>}{>}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{z}{*=}{lnb}}{;}}}
{AST_ROOT_SC2NF{{{xl}{&=}{MASK_30BITS}}{;}}}
{AST_ROOT_SC2NF{{{r}{*=}{rnd}}{;}}}
{AST_ROOT_SC2NF{{{extra}{-=}{{rh}{*}{RADIX}}}{;}}}
{AST_ROOT_SC2NF{{{}{{while}{(}{{NUMBER_CONSTANT}{==}{{n}{%}{p}}}{)}{{{}{{{n}{/=}{p}}{;}}{{{factors}{.}{add}{(}{p}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{n}{|=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{xx}{+=}{{NUMBER_CONSTANT}{/}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{iter}{++}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{/=}{d}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{*=}{d}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{-=}{d}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{+=}{d}}{;}}{}}}}
{AST_ROOT_SC2NF{{{k}{+=}{m}}{;}}}
{AST_ROOT_SC2NF{{{coeff1}{/=}{pc2}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{c}{[}{NUMBER_CONSTANT}{]}}{++}}{;}}{{return}{ret}{;}}{}}}}
{AST_ROOT_SC2NF{{{coeff1}{/=}{pc2}}{;}}}
{AST_ROOT_SC2NF{{{}{{{m}{>}{>}{=}{NUMBER_CONSTANT}}{;}}{{{++}{k}}{;}}{}}}}
{AST_ROOT_SC2NF{{{e}{>}{>}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{e}{>}{>}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{e}{>}{>}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{v}{*=}{v}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{scale}{*}{{FastMath}{.}{pow}{(}{{-}{{FastMath}{.}{log1p}{(}{{-}{p}}{)}}}{,}{{NUMBER_CONSTANT}{/}{shape}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{(}{{a}{*}{{FastMath}{.}{log}{(}{x}{)}}}{)}}{+}{{(}{{b}{*}{{FastMath}{.}{log1p}{(}{{-}{x}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{FastMath}{.}{expm1}{(}{ss}{)}}{)}}{*}{{FastMath}{.}{exp}{(}{{{NUMBER_CONSTANT}{*}{scale}}{+}{ss}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{correct}{(}{{new}{{ArrayRealVector}}{(}{z}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{predict}{(}{{new}{{ArrayRealVector}}{(}{u}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{minadj}{/=}{{{divisor.mant}{[}{{mant.length}{-}{NUMBER_CONSTANT}}{]}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{FastMath}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{FastMath}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{FastMath}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{FastMath}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{max}{=}{FastMath.PI}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FunctionUtils}{.}{sample}{(}{{new}{{Sin}}{()}}{,}{NUMBER_CONSTANT}{,}{FastMath.PI}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FunctionUtils}{.}{sample}{(}{{new}{{Sin}}{()}}{,}{NUMBER_CONSTANT}{,}{FastMath.PI}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FunctionUtils}{.}{sample}{(}{{new}{{Sin}}{()}}{,}{FastMath.PI}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{{FastMath}{.}{random}{()}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{{-}{NUMBER_CONSTANT}}{/}{{(}{{a}{*}{a}}{)}}}{-}{NUMBER_CONSTANT}}{+}{{FastMath}{.}{cos}{(}{a}{)}}}}
{AST_ROOT_SC2NF{{{minDiff}{=}{{FastMath}{.}{min}{(}{minDiff}{,}{{boundDifference}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{minDiff}{=}{{FastMath}{.}{min}{(}{minDiff}{,}{{boundDifference}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{FastMath}{.}{sqrt}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{FastMath}{.}{log}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{diff}{=}{{FastMath}{.}{abs}{(}{{{x}{[}{i}{]}}{-}{{repaired}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{(}{{NUMBER_CONSTANT}{-}{ccovmu}}{)}}{*}{NUMBER_CONSTANT}{*}{mueff}}{/}{{(}{{{FastMath}{.}{pow}{(}{{dimension}{+}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{+}{{NUMBER_CONSTANT}{*}{mueff}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{FastMath}{.}{sqrt}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{FastMath}{.}{log}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{diff}{=}{{FastMath}{.}{abs}{(}{{{x}{[}{i}{]}}{-}{{repaired}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{(}{{NUMBER_CONSTANT}{-}{ccovmu}}{)}}{*}{NUMBER_CONSTANT}{*}{mueff}}{/}{{(}{{{FastMath}{.}{pow}{(}{{dimension}{+}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{+}{{NUMBER_CONSTANT}{*}{mueff}}}{)}}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{FastMath}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{FastMath}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{diff}{=}{{FastMath}{.}{abs}{(}{{constantValue}{-}{{{filter}{.}{getStateEstimation}{()}}{[}{NUMBER_CONSTANT}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{source}{=}{{{}{Double.NEGATIVE_INFINITY}{,}{{-}{Double.MAX_VALUE}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{Double.MIN_VALUE}{,}{{FastMath}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{,}{Double.POSITIVE_INFINITY}{}}}}}
{AST_ROOT_SC2NF{{source}{=}{{{}{Double.NEGATIVE_INFINITY}{,}{{-}{Double.MAX_VALUE}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{Double.MIN_VALUE}{,}{{FastMath}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{,}{Double.POSITIVE_INFINITY}{}}}}}
{AST_ROOT_SC2NF{{source}{=}{{{}{Double.NEGATIVE_INFINITY}{,}{{-}{Double.MAX_VALUE}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{Double.MIN_VALUE}{,}{{FastMath}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{,}{Double.POSITIVE_INFINITY}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{FastMath}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{FastMath}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{FastMath}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{a1}{=}{{{FastMath}{.}{sqrt}{(}{{FastMath.PI}{*}{twolpd}}{)}}{*}{{FastMath}{.}{exp}{(}{{NUMBER_CONSTANT}{/}{{(}{{NUMBER_CONSTANT}{*}{lambda}}{)}}}{)}}}}}
{AST_ROOT_SC2NF{{{ret}{+=}{{{c}{[}{i}{]}}{*}{{ArithmeticUtils}{.}{pow}{(}{n}{,}{i}{)}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{length}}{;}{{i}{++}}{)}{{{}{{{{sample}{[}{i}{]}}{=}{{FastMath}{.}{random}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{seed}{,}{NUMBER_CONSTANT}{,}{v}{,}{NUMBER_CONSTANT}{,}{{FastMath}{.}{min}{(}{seed.length}{,}{v.length}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{expected}{=}{{{FastMath}{.}{abs}{(}{period}{)}}{-}{delta}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{shift}{=}{{FastMath}{.}{min}{(}{aTwos}{,}{bTwos}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{xabs}{=}{{FastMath}{.}{abs}{(}{{v}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{shift}{=}{{{FastMath}{.}{max}{(}{{numerator}{.}{bitLength}{()}}{,}{{denominator}{.}{bitLength}{()}}{)}}{-}{{FastMath}{.}{getExponent}{(}{Float.MAX_VALUE}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{shift}{=}{{{FastMath}{.}{max}{(}{{numerator}{.}{bitLength}{()}}{,}{{denominator}{.}{bitLength}{()}}{)}}{-}{{FastMath}{.}{getExponent}{(}{Double.MAX_VALUE}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{denom}{=}{{{{FastMath}{.}{abs}{(}{val}{)}}{<}{EPS_MIN}}{?}{{NUMBER_CONSTANT}{*}{EPS_MIN}}{:}{{NUMBER_CONSTANT}{*}{val}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{k}{=}{{(}{int}{)}{{FastMath}{.}{ceil}{(}{{n}{*}{d}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{k}{=}{{(}{int}{)}{{FastMath}{.}{ceil}{(}{{n}{*}{d}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{k}{=}{{(}{int}{)}{{FastMath}{.}{ceil}{(}{{n}{*}{d}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{-}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{pow}{(}{{NUMBER_CONSTANT}{-}{d}}{,}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{err}{=}{{{FastMath}{.}{abs}{(}{{actual}{-}{expected}}{)}}{/}{{Math}{.}{ulp}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{denom}{=}{{{{FastMath}{.}{abs}{(}{val}{)}}{<}{EPS_MIN}}{?}{{NUMBER_CONSTANT}{*}{EPS_MIN}}{:}{{NUMBER_CONSTANT}{*}{val}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{exp}{(}{x}{)}}{-}{{FastMath}{.}{pow}{(}{Math.PI}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{Fraction}}{(}{{{(}{{{(}{{{FastMath}{.}{abs}{(}{w}{)}}{*}{d}}{)}}{+}{n}}{)}}{*}{{MathUtils}{.}{copySign}{(}{NUMBER_CONSTANT}{,}{w}{)}}}{,}{d}{)}}}
{AST_ROOT_SC2NF{{{num}{=}{{FastMath}{.}{abs}{(}{num}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{h}{+=}{{p_i}{*}{{FastMath}{.}{log}{(}{p_i}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{h}{+=}{{p_ij}{*}{{FastMath}{.}{log}{(}{p_ij}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{{sumExpected}{-}{sumObserved}}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{ratio}{=}{{sumObserved}{/}{sumExpected}}}{;}}{{{rescale}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{double}{estimateRegressionStandardError}{()}{{{}{{return}{{FastMath}{.}{sqrt}{(}{{estimateErrorVariance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{STRING_CONSTANT}{,}{{{FastMath}{.}{abs}{(}{{v}{-}{{randomData}{.}{nextUniform}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{seed}{,}{NUMBER_CONSTANT}{,}{rsl}{,}{NUMBER_CONSTANT}{,}{{FastMath}{.}{min}{(}{seedLen}{,}{rslLen}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{sqrt}{(}{{d}{[}{col}{]}}{)}}{<}{{tol}{[}{col}{]}}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{sqrt}{(}{{d}{[}{i}{]}}{)}}{<}{{tol}{[}{i}{]}}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{NUMBER_CONSTANT}{*}{{Erf}{.}{erfc}{(}{{{{ref}{[}{i}{]}}{[}{NUMBER_CONSTANT}{]}}{/}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{originalDelta}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{gn}{=}{{factor1}{*}{{FastMath}{.}{log}{(}{qExp1}{)}}{*}{oneOverN}}}{;}}}
{AST_ROOT_SC2NF{{{}{{public}{double}{value}{(}{{double}{x}}{)}{{{}{{return}{{NUMBER_CONSTANT}{/}{{(}{{NUMBER_CONSTANT}{*}{{FastMath}{.}{sqrt}{(}{x}{)}}}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{f}{=}{{new}{{UnivariateFunction}}{()}{{{}{{public}{double}{value}{(}{{double}{x}}{)}{{{}{{return}{{FastMath}{.}{sqrt}{(}{x}{)}}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{{if}{(}{{{pivotSelection}{==}{PivotSelectionRule.BLAND}}{&&}{{isValidPivotColumn}{(}{tableau}{,}{i}{)}}}{)}{{{}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{pivotSelection}}{=}{PivotSelectionRule.DANTZIG}}{;}}}
{AST_ROOT_SC2NF{{solution}{=}{{{new}{{SimplexSolver}}{()}}{.}{optimize}{(}{DEFAULT_MAX_ITER}{,}{f}{,}{{new}{{LinearConstraintSet}}{(}{constraints}{)}}{,}{GoalType.MINIMIZE}{,}{{new}{{NonNegativeConstraint}}{(}{true}{)}}{,}{PivotSelectionRule.BLAND}{)}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{f}{,}{constraints}{,}{goalType}{,}{restrictToNonNegative}{,}{epsilon}{,}{SimplexSolver.DEFAULT_ULPS}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{cutOff}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean1D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{{{Point}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean3D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean3D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean1D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean3D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{{}{{final}{{Vector2D}}{{v2}{=}{{(}{{Vector2D}}{)}{v}}}{;}}{{return}{{MathArrays}{.}{linearCombination}{(}{x}{,}{v2.x}{,}{y}{,}{v2.y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{S}}{>}}{barycenter}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Point}}{<}{{Euclidean1D}}{>}}{point}}}
{AST_ROOT_SC2NF{{public}{{ArcsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{ArcsSet}}{(}{tolerance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Vector3D}{.}{angle}{(}{pole}{,}{direction}{)}}{-}{{NUMBER_CONSTANT}{*}{FastMath.PI}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{SphericalPolygonsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{SphericalPolygonsSet}}{(}{tolerance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{SubCircle}}{wholeHyperplane}{()}{{{}{{return}{{new}{{SubCircle}}{(}{this}{,}{{new}{{ArcsSet}}{(}{tolerance}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{circle.pole}{,}{circle.x}{,}{circle.y}{,}{circle.tolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ArcsSet}}{(}{tree}{,}{tolerance}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector1D}}{{x}{=}{{thisLine}{.}{toSubSpace}{(}{{(}{{{Point}}{<}{{Euclidean2D}}{>}}{)}{crossing}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector1D}}{{x}{=}{{thisLine}{.}{toSubSpace}{(}{{(}{{{Point}}{<}{{Euclidean2D}}{>}}{)}{crossing}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{offset}{=}{{plane}{.}{getOffset}{(}{{(}{{{Point}}{<}{{Euclidean3D}}{>}}{)}{point}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Point}}{<}{{Euclidean2D}}{>}}{p}}}
{AST_ROOT_SC2NF{{{{Point}}{<}{{Euclidean1D}}{>}}{p}}}
{AST_ROOT_SC2NF{{{{Point}}{<}{{Euclidean3D}}{>}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{{point}{=}{{line}{.}{toSpace}{(}{{(}{{{Point}}{<}{{Euclidean1D}}{>}}{)}{Vector1D.ZERO}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{SubChord}}{copySelf}{()}{{{}{{return}{{new}{{SubChord}}{(}{{chord}{.}{copySelf}{()}}{,}{limits}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{upper}}{=}{{MathUtils.TWO_PI}{+}{lower}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Arc}}{{arc}{=}{{new}{{Arc}}{(}{NUMBER_CONSTANT}{,}{{FastMath}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{Double.POSITIVE_INFINITY}{)}}{,}{Precision.EPSILON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{buildNew}{(}{{hyperplane}{.}{copySelf}{()}}{,}{remainingRegion}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Segment}}{{segment}{=}{{new}{{Segment}}{(}{p1}{,}{p2}{,}{{new}{{Line}}{(}{p1}{,}{p2}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{EdgesBuilder}}{{visitor}{=}{{new}{{EdgesBuilder}}{(}{root}{,}{{getTolerance}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{SphericalPolygonsSet}}{(}{tree}{,}{{getTolerance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{boundary}{,}{tolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{tree}{,}{tolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{SphericalPolygonsSet}{(}{{final}{double}{tolerance}}{)}{{{}{{super}{(}{tolerance}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{getRemainingRegion}{()}}{.}{side}{(}{{new}{{OrientedPoint}}{(}{x}{,}{direct}{,}{{thisLine}{.}{getTolerance}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{SubLine}}{wholeLine}{()}{{{}{{return}{{new}{{SubLine}}{(}{this}{,}{{new}{{IntervalsSet}}{(}{tolerance}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{distance}{(}{p}{)}}{<}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{BSPTree}}{<}{{S}}{>}}{{cell}{=}{{node}{.}{getCell}{(}{point}{,}{tolerance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PolyhedronsSet}}{(}{tree}{,}{{getTolerance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{IntervalsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{IntervalsSet}}{(}{tolerance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{add}{(}{{new}{{NestedLoops}}{(}{bLoop}{,}{tolerance}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{new}{{OrientedPoint}}{(}{newLoc}{,}{{op}{.}{isDirect}{()}}{,}{originalLine.tolerance}{)}}{.}{wholeHyperplane}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{abs}{(}{{getOffset}{(}{p}{)}}{)}}{<}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{PolygonsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{PolygonsSet}}{(}{tolerance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{SubLine}}{wholeHyperplane}{()}{{{}{{return}{{new}{{SubLine}}{(}{this}{,}{{new}{{IntervalsSet}}{(}{tolerance}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{d}{)}}{<}{tolerance}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PolygonsSet}}{(}{tree}{,}{{getTolerance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{line}{==}{null}}{)}{{{}{{{line}{=}{{new}{{Line}}{(}{{start}{.}{getLocation}{()}}{,}{{end}{.}{getLocation}{()}}{,}{hyperplaneThickness}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ArcsSet}}{(}{tree}{,}{{getTolerance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{LimitAngle}}{(}{{new}{{S1Point}}{(}{alpha}{)}}{,}{true}{,}{{getTolerance}{()}}{)}}{.}{wholeHyperplane}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{LimitAngle}}{(}{{new}{{S1Point}}{(}{alpha}{)}}{,}{false}{,}{{getTolerance}{()}}{)}}{.}{wholeHyperplane}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{boundary}{,}{tolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{tree}{,}{tolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ArcsSet}{(}{{final}{double}{tolerance}}{)}{{{}{{super}{(}{tolerance}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Segment}}{{segment}{=}{{new}{{Segment}}{(}{start}{,}{end}{,}{{new}{{Line}}{(}{start}{,}{end}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{Line}}{(}{start}{,}{end}{,}{NUMBER_CONSTANT}{)}}{.}{wholeHyperplane}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{PolygonsSet}}{(}{edges}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{BoundaryProjector}}{{projector}{=}{{new}{{BoundaryProjector}}{(}{{polyhedronsSet}{.}{getTolerance}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{PolyhedronsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{PolyhedronsSet}}{(}{tolerance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{SubPlane}}{wholeHyperplane}{()}{{{}{{return}{{new}{{SubPlane}}{(}{this}{,}{{new}{{PolygonsSet}}{(}{tolerance}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Plane}}{{plane}{=}{{new}{{Plane}}{(}{{origin}{.}{add}{(}{translation}{)}}{,}{w}{,}{tolerance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolyhedronsSet}}{{tree}{=}{{new}{{PolyhedronsSet}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{IntervalsSet}}{(}{tree}{,}{{getTolerance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{boundary}{.}{add}{(}{{{new}{{LimitAngle}}{(}{{new}{{S1Point}}{(}{{MathUtils.TWO_PI}{-}{NUMBER_CONSTANT}}{)}}{,}{true}{,}{NUMBER_CONSTANT}{)}}{.}{wholeHyperplane}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{Boolean}}{)}{{{getFirstLeaf}{(}{{getTree}{(}{false}{)}}{)}}{.}{getAttribute}{()}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{projection}{.}{getOriginal}{()}}{==}{v}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{P}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{{P}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{{reducePoints}{(}{points}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GrahamScan}}{{generator}{=}{{new}{{GrahamScan}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{random}{=}{{new}{{MersenneTwister}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{generator}{=}{{createConvexHullGenerator}{(}{false}{)}}}{;}}{{{random}{=}{{new}{{MersenneTwister}}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{{hull}{.}{getVertices}{()}}{.}{length}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ConvexHullGenerator2D}}{{generator}{=}{{new}{{MonotoneChain}}{(}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{Segment}}{[]}}{getLineSegments}{()}{{{}{{return}{{{retrieveLineSegments}{()}}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{Vector3D.PLUS_I}{)}}{.}{ballOnSupport}{(}{support}{)}}}{;}}}
{AST_ROOT_SC2NF{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{{new}{{Vector3D}}{(}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{.}{ballOnSupport}{(}{support}{)}}}}
{AST_ROOT_SC2NF{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{.}{ballOnSupport}{(}{support}{)}}}}
{AST_ROOT_SC2NF{{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{Vector3D.PLUS_K}{)}}{.}{ballOnSupport}{(}{support}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{Vector3D.PLUS_K}{)}}{.}{ballOnSupport}{(}{support}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{(}{{new}{{S2Point}}{(}{inside}{)}}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{ConvexHullGenerator2D}}{createConvexHullGenerator}{(}{{boolean}{includeCollinearPoints}}{)}{{{}{{return}{{new}{{MonotoneChain}}{(}{includeCollinearPoints}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{getOptimizer}{()}}{.}{optimize}{(}{{getProblem}{(}{points}{)}}{)}}{.}{getPoint}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{useLU}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LevenbergMarquardtOptimizer}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{optimizer}{=}{{{{{{{new}{{LevenbergMarquardtOptimizer}}{()}}{.}{withInitialStepBoundFactor}{(}{initialStepBoundFactor}{)}}{.}{withCostRelativeTolerance}{(}{costRelativeTolerance}{)}}{.}{withParameterRelativeTolerance}{(}{parRelativeTolerance}{)}}{.}{withOrthoTolerance}{(}{orthoTolerance}{)}}{.}{withRankingThreshold}{(}{Precision.SAFE_MIN}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LeastSquaresProblemImpl}}{(}{model}{,}{jacobian}{,}{observed}{,}{start}{,}{checker}{,}{maxEvaluations}{,}{maxIterations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{RealMatrix}}{computeJacobian}{()}{{{}{{return}{{this}{.}{jacobian}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{computeValue}{()}{{{}{{return}{{{this}{.}{values}}{.}{toArray}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testGaussNewtonQR}{(}{)}{throws}{{Exception}}{{{}{{{check}{(}{{new}{{GaussNewtonOptimizer}}{(}{Decomposition.QR}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testGaussNewtonLU}{(}{)}{throws}{{Exception}}{{{}{{{check}{(}{{new}{{GaussNewtonOptimizer}}{(}{Decomposition.LU}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{Evaluation}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{Evaluation}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{Evaluation}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{Evaluation}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{Evaluation}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{new}{{LeastSquaresBuilder}}{()}}{.}{checkerPair}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{.}{maxEvaluations}{(}{NUMBER_CONSTANT}{)}}{.}{maxIterations}{(}{{getMaxIterations}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{builder}{(}{circle}{)}}{.}{checkerPair}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{.}{maxIterations}{(}{Integer.MAX_VALUE}{)}}}
{AST_ROOT_SC2NF{{{function}{.}{checkTheoreticalMinParams}{(}{{{optimum}{.}{getPoint}{()}}{.}{toArray}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{point}}}
{AST_ROOT_SC2NF{{{RealVector}}{computeValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{point}}}
{AST_ROOT_SC2NF{{{RealVector}}{getStart}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{point}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{point}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{start}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{target}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{computeValue}{()}{{{}{{return}{{{this}{.}{weightSqrt}}{.}{operate}{(}{{unweighted}{.}{computeValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonPositiveDefiniteMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SingularMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SingularMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{optimum}{.}{getRMS}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{getRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{getValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{cost}{=}{{{lsp}{.}{evaluate}{(}{params}{)}}{.}{getCost}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{sigma}{=}{{{lsp}{.}{evaluate}{(}{regress}{)}}{.}{getSigma}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{sigma}{=}{{{lsp}{.}{evaluate}{(}{init}{)}}{.}{getSigma}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{function}{.}{checkTheoreticalMinCost}{(}{{optimum}{.}{getRMS}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{asymptoticStandardErrorFound}{=}{{{optimum}{.}{getSigma}{(}{NUMBER_CONSTANT}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{covarMatrix}{=}{{optimum}{.}{getCovariances}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{actual}{=}{{{lsp}{.}{evaluate}{(}{{lsp}{.}{getStart}{()}}{)}}{.}{getRMS}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{cost}{=}{{{lsp}{.}{evaluate}{(}{{lsp}{.}{getStart}{()}}{)}}{.}{getCost}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertArrayEquals}{(}{{{evaluation}{.}{getResiduals}{()}}{.}{toArray}{()}}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{}}}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotSame}{(}{STRING_CONSTANT}{,}{{v1}{.}{getDataRef}{()}}{,}{{v_copy}{.}{toArray}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LocalLeastSquaresProblem}}{(}{model}{,}{observed}{,}{start}{,}{checker}{,}{maxEvaluations}{,}{maxIterations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{TOl}{,}{{optimum}{.}{getResiduals}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{line}{=}{{new}{{LineSearch}}{(}{this}{,}{lineRel}{,}{lineAbs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{line}{=}{{new}{{LineSearch}}{(}{this}{,}{lineRel}{,}{lineAbs}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{updateFormula}{,}{checker}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{new}{{IdentityPreconditioner}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{penalty}{+=}{diff}}{;}}}
{AST_ROOT_SC2NF{{public}{FitnessFunction}{()}{{{}{{{isRepairMode}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newSampleData}{(}{data}{,}{nobs}{,}{nvars}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{{getX}{()}}{,}{threshold}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{getResiduals}{()}{{{}{{return}{residuals}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{getPoint}{()}{{{}{{return}{point}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{RealMatrix}}{getJacobian}{()}{{{}{{return}{jacobian}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{{randomData}{.}{getRandomGenerator}{()}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{RealDistribution}}{getKernel}{(}{{{SummaryStatistics}}{bStats}}{)}{{{}{{return}{{new}{{ConstantRealDistribution}}{(}{{bStats}{.}{getMean}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{Median}}{()}}{.}{withEstimationType}{(}{type}{)}}{.}{withNaNStrategy}{(}{strategy}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{{{{new}{{Percentile}}{(}{p}{)}}{.}{withEstimationType}{(}{e}{)}}{.}{withNaNStrategy}{(}{nanStrategy}{)}}{.}{evaluate}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}{.}{withEstimationType}{(}{Percentile.EstimationType.LEGACY}{)}}{.}{withNaNStrategy}{(}{null}{)}}{;}}{{{Assert}{.}{fail}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}{.}{withEstimationType}{(}{Percentile.EstimationType.R_9}{)}}{.}{withNaNStrategy}{(}{NaNStrategy.FAILED}{)}}{.}{evaluate}{(}{specialValues}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{new}{{Percentile}}{(}{quantile}{)}}{.}{withEstimationType}{(}{type}{)}}{.}{withNaNStrategy}{(}{nanStrategy}{)}}{.}{withPivotingStrategy}{(}{pivotingStrategy}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{BicubicSplineInterpolator}}{{bsi}{=}{{new}{{BicubicSplineInterpolator}}{(}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{BicubicSplineInterpolatingFunction}}{(}{xval}{,}{yval}{,}{fval}{,}{dFdX}{,}{dFdY}{,}{d2FdXdY}{,}{initializeDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{H}{=}{{this}{.}{createExactH}{(}{d}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Percentile}}{{p}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Percentile}}{{p}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Percentile}}{{p}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Percentile.EstimationType}}{e}}{:}{{Percentile.EstimationType}{.}{values}{()}}{)}{{{}{{{reset}{(}{quantile}{,}{e}{)}}{;}}{{{testWeightedConsistency}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Percentile.EstimationType}}{e}}{:}{{Percentile.EstimationType}{.}{values}{()}}{)}{{{}{{{reset}{(}{quantile}{,}{e}{)}}{;}}{{{testEvaluateArraySegment}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Percentile.EstimationType}}{e}}{:}{{Percentile.EstimationType}{.}{values}{()}}{)}{{{}{{{reset}{(}{quantile}{,}{e}{)}}{;}}{{{testEvaluateArraySegmentWeighted}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{UnivariateStatistic}}{{percentile}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateStatistic}}{{percentile}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Percentile}}{{percentile}{=}{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Median}}{(}{{getEstimationType}{()}}{,}{newNaNStrategy}{,}{{getKthSelector}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Median}}{(}{newEstimationType}{,}{{getNaNStrategy}{()}}{,}{{getKthSelector}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{work.length}{==}{NUMBER_CONSTANT}}{?}{Double.NaN}{:}{{estimationType}{.}{evaluate}{(}{work}{,}{pivotsHeap}{,}{p}{,}{kthSelector}{)}}}{;}}}
{AST_ROOT_SC2NF{{{kthSelector}{=}{{original}{.}{getKthSelector}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{Umin}{=}{{{{(}{long}{)}{x.length}}{*}{y.length}}{-}{Umax}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LazyUnweightedEvaluation}}{(}{{(}{{ValueAndJacobianFunction}}{)}{model}}{,}{target}{,}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{ResizableDoubleArray}}{)}{da}}{)}}{.}{getContractionCriterion}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ResizableDoubleArray}}{{testDa}{=}{{new}{{ResizableDoubleArray}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{ResizableDoubleArray.ExpansionMode.ADDITIVE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testDa}{=}{{new}{{ResizableDoubleArray}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{ResizableDoubleArray.ExpansionMode.ADDITIVE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ResizableDoubleArray}}{{testDa}{=}{{new}{{ResizableDoubleArray}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{ResizableDoubleArray.ExpansionMode.ADDITIVE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomDataGenerator}}{{random}{=}{{new}{{RandomDataGenerator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistribution}}{(}{binCount}{,}{{randomData}{.}{getRandomGenerator}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{randomData}}{=}{{new}{{RandomDataGenerator}}{(}{generator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{randomData}}{=}{{randomData}{.}{getDelegate}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{MathUtils.PI_SQUARED}{/}{NUMBER_CONSTANT}}{)}}{*}{{(}{{NUMBER_CONSTANT}{/}{{(}{{s}{*}{s}}{)}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{FDistribution}}{{fdist}{=}{{new}{{FDistribution}}{(}{null}{,}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{{(}{double}{)}{observed1.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BinomialDistribution}}{{distribution}{=}{{new}{{BinomialDistribution}}{(}{null}{,}{numberOfTrials}{,}{probability}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newXSampleData}{(}{x}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{{getX}{()}}{,}{threshold}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{t}{.}{insertInTree}{(}{parentTree}{,}{isPlusChild}{,}{{new}{{VanishingToLeaf}}{(}{true}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{MathArrays}{.}{linearCombination}{(}{sin}{,}{otherL.sin}{,}{cos}{,}{otherL.cos}{)}}{>=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{tree}{=}{{{region1}{.}{getTree}{(}{false}{)}}{.}{merge}{(}{{region2}{.}{getTree}{(}{false}{)}}{,}{{new}{{DifferenceMerger}}{(}{region1}{,}{region2}{)}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{unlinkReverse}{()}}{;}}{{{originOffset}{=}{offset}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.NEGATIVE_INFINITY}{;}}{}}}{else}{{if}{(}{{p}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.POSITIVE_INFINITY}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{vals}{=}{{MathArrays}{.}{copyOf}{(}{b}{,}{b.length}{)}}}{;}}{{{nVals}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math4.stat.inference.ChiSquareTest}}{{csti}{=}{{new}{{org.apache.commons.math4.stat.inference.ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math4.stat.inference.ChiSquareTest}}{{csti}{=}{{new}{{org.apache.commons.math4.stat.inference.ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{cachedTransform}{=}{{org.apache.commons.math4.geometry.euclidean.twod.Line}{.}{getTransform}{(}{at}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedTransform}{=}{{org.apache.commons.math4.geometry.euclidean.twod.Line}{.}{getTransform}{(}{at}{)}}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{org.apache.commons.math4.linear.SingularMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{(}{{numIterations}{<}{maximumIterations}}{)}}{&&}{{(}{{{a}{>}{lowerBound}}{||}{{b}{<}{upperBound}}}{)}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well512a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well512a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well1024a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well1024a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well44497a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well44497a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well19937a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well19937a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{)}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{lo}{,}{hi}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{lo}{,}{hi}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{lo}{,}{hi}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{distribution}{.}{probability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{{getDistribution}{()}}{.}{probability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{distribution}{.}{probability}{(}{{lower}{[}{i}{]}}{,}{{upper}{[}{i}{]}}{)}}}
{AST_ROOT_SC2NF{{final}{double}{{withinBinKernelMass}{=}{{kernel}{.}{probability}{(}{lower}{,}{upper}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{distribution}{.}{probability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{distribution}{.}{logDensity}{(}{{cumulativeTestPoints}{[}{i}{]}}{)}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}{public}{void}{testNullFunction}{()}{{{}{{{UnivariateSolverUtils}{.}{bracket}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{min}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{max}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{variance}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{variance}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{mean}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{tournamentPopulation}{=}{{new}{{ListPopulation}}{(}{{this}{.}{arity}}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{delta}{=}{{{(}{{max}{-}{min}}{)}}{/}{{(}{binCount}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{T}}{reciprocal}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{delta}{=}{{{(}{{max}{-}{min}}{)}}{/}{binCount}}}{;}}}
{AST_ROOT_SC2NF{{protected}{double}{getSolverAbsoluteAccuracy}{()}{{{}{{return}{SOLVER_DEFAULT_ABSOLUTE_ACCURACY}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SparseGradient}}{{sgY2}{=}{{sgX}{.}{compose}{(}{{poly}{.}{value}{(}{x}{)}}{,}{{{poly}{.}{polynomialDerivative}{()}}{.}{value}{(}{x}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{{{f}{.}{polynomialDerivative}{()}}{.}{polynomialDerivative}{()}}{.}{value}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{tolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{dSpline}{=}{{spline}{.}{polynomialSplineDerivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{abs}{(}{{getOffset}{(}{p}{)}}{)}}{<}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{direction}{.}{getNorm}{()}}{<}{tolerance}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{{m}{.}{incrementAll}{(}{values}{)}}{;}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{)}}{&&}{{length}{>}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{verifyValues}{(}{values}{,}{start}{,}{length}{)}}{;}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{)}}{;}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{{}{{{MathArrays}{.}{verifyValues}{(}{values}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ptile}{.}{incrementAll}{(}{d}{)}}{;}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{weights}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{weights}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{MathArrays}{.}{verifyValues}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{{m}{.}{incrementAll}{(}{values}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{iae}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{stats}{.}{setWindowSize}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{iae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{DummyBinaryChromosome}}{(}{repr}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathIllegalArgumentException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{Hs}{=}{nthHarmonic}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{Hs}{=}{nthHarmonic}}{;}}}
{AST_ROOT_SC2NF{{return}{{{generalizedHarmonic}{(}{x}{,}{exponent}{)}}{/}{nthHarmonic}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{-}{{FastMath}{.}{log}{(}{x}{)}}}{*}{exponent}}{-}{{FastMath}{.}{log}{(}{nthHarmonic}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{x}{)}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{x}{)}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{x}{)}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{x}{)}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{isNaN}{(}{x}{)}}{||}{{Double}{.}{isNaN}{(}{y}{)}}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{isNaN}{(}{x}{)}}{||}{{x}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{x}{)}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{x}{)}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{x}{)}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.UNKNOWN_PARAMETER}{,}{name}{)}{;}}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{exponent}}}
{AST_ROOT_SC2NF{{{MultivariateInterpolator}}{{interpolator}{=}{{new}{{MicrosphereInterpolator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{brightnessExponent}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{numerator}{.}{signum}{()}}{==}{NUMBER_CONSTANT}}{)}}{?}{this}{:}{{negate}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{numCalls}{=}{{{numberOfCalls}{.}{incrementAndGet}{()}}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Gaussian}}{{neighbourhoodDecay}{=}{{new}{{Gaussian}}{(}{currentLearning}{,}{NUMBER_CONSTANT}{,}{currentNeighbourhood}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{divide}{(}{{new}{{Fraction}}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{multiply}{(}{{new}{{Fraction}}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertRelativelyEquals}{(}{expected}{,}{{{ZipfRejectionInversionSampler}{.}{helper2}{(}{testValue}{)}}{*}{testValue}}{,}{tol}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{maxEvaluations}}{=}{maxEvaluations}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{rowOffset}}{;}}}
{AST_ROOT_SC2NF{{long}{{swaps}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{x}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{{}{{return}{{{FastMath}{.}{exp}{(}{{log1mProbabilityOfSuccess}{*}{x}}{)}}{*}{probabilityOfSuccess}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{SQRT_TWO_PI}{/}{absX}}{*}{{FastMath}{.}{pow}{(}{y}{,}{{absX}{+}{NUMBER_CONSTANT}}{)}}}{*}{{FastMath}{.}{exp}{(}{{-}{y}}{)}}}}
{AST_ROOT_SC2NF{{return}{{new}{{CorrelatedRandomVectorGenerator}}{(}{{new}{{double}{[}}{cov.length}{]}}{,}{matrix}{,}{small}{,}{{new}{{GaussianRandomGenerator}}{(}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{BigFractionMatrixConverter}{()}{{{}{{super}{(}{BigFraction.ZERO}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{FractionMatrixConverter}{()}{{{}{{super}{(}{Fraction.ZERO}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{RealFieldUnivariateFunction}}{<}{{T}}{>}}{f}}}
{AST_ROOT_SC2NF{{final}{{{RealFieldUnivariateFunction}}{<}{{T}}{>}}{f}}}
{AST_ROOT_SC2NF{{{{RealFieldUnivariateFunction}}{<}{{Dfp}}{>}}{f}}}
{AST_ROOT_SC2NF{{final}{{EnumeratedRealDistribution}}{{dist}{=}{{new}{{EnumeratedRealDistribution}}{(}{rng}{,}{combined}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{JDKRandomGenerator}{(}{{long}{seed}}{)}{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{starter}{.}{addStepHandler}{(}{{new}{{NordsieckInitializer}}{(}{{{(}{{nSteps}{+}{NUMBER_CONSTANT}}{)}}{/}{NUMBER_CONSTANT}}{,}{y0.length}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{evaluations}{.}{increment}{()}}{;}}{{{expandable}{.}{computeDerivatives}{(}{t}{,}{y}{,}{yDot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{evaluations}{=}{{evaluations}{.}{withStart}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InitializationCompletedMarkerException}}{icme}}{)}{{{}{{{{getCounter}{()}}{.}{increment}{(}{{starter}{.}{getEvaluations}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{FieldVector3D}}{<}{{DerivativeStructure}}{>}}{{axis}{=}{{r}{.}{getAxis}{(}{RotationConvention.VECTOR_OPERATOR}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldVector3D}}{<}{{Dfp}}{>}}{{axis}{=}{{r}{.}{getAxis}{(}{RotationConvention.VECTOR_OPERATOR}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{axis}{=}{{r}{.}{getAxis}{(}{RotationConvention.VECTOR_OPERATOR}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{r1}{.}{composeInverseInternal}{(}{r2}{)}}{.}{getAngle}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{r1}{.}{composeInverseInternal}{(}{r2}{)}}{.}{getAngle}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Rotation}}{{composite}{=}{{r1}{.}{compose}{(}{{r2}{.}{compose}{(}{r3}{,}{RotationConvention.FRAME_TRANSFORM}{)}}{,}{RotationConvention.FRAME_TRANSFORM}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{delegate}{.}{nextInt}{(}{n}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{throw}{{new}{{NotStrictlyPositiveException}}{(}{n}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{delegate}{.}{setSeed}{(}{{RandomGeneratorFactory}{.}{convertToLong}{(}{seed}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{delegate}{.}{setSeed}{(}{{(}{long}{)}{seed}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setSeedInternal}{(}{seed}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ISAACRandom}{(}{{long}{seed}}{)}{{{}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{bits}{=}{{{nextInt}{()}}{>}{>}{>}{NUMBER_CONSTANT}}}{;}}{{{val}{=}{{bits}{%}{n}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeedInternal}{(}{{new}{{int}{[]}}{{{}{seed}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{computeInterpolatedStateAndDerivatives}{(}{mapper}{,}{time}{,}{theta}{,}{oneMinusThetaH}{)}}{;}}}
{AST_ROOT_SC2NF{{{mapper}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{yDotK}{[}{NUMBER_CONSTANT}{]}}{=}{{{equations}{.}{getMapper}{()}}{.}{mapDerivative}{(}{stepStart}{)}}}{;}}}
{AST_ROOT_SC2NF{{{mainSetDimension}{=}{{eqn}{.}{getStateDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BracketedRealFieldUnivariateSolver}}{<}{{T}}{>}}{solver}}}
{AST_ROOT_SC2NF{{final}{{{BracketedRealFieldUnivariateSolver}}{<}{{T}}{>}}{solver}}}
{AST_ROOT_SC2NF{{{{BracketedRealFieldUnivariateSolver}}{<}{{T}}{>}}{solver}}}
{AST_ROOT_SC2NF{{public}{TestProblem5}{()}{{{}{{{setFinalConditions}{(}{{{NUMBER_CONSTANT}{*}{t0}}{-}{t1}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{{getDimension}{()}}}}
{AST_ROOT_SC2NF{{i}{<}{{getDimension}{()}}}}
{AST_ROOT_SC2NF{{i}{<}{{getDimension}{()}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{{getDimension}{()}}}{;}{{++}{i}}{)}{{{}{{{{y}{[}{i}{]}}{=}{c}}{;}}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{{getDimension}{()}}}}
{AST_ROOT_SC2NF{{{currentState}{=}{y}}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{NUMBER_CONSTANT}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{NUMBER_CONSTANT}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{{-}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{{-}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{{{{start}{.}{subtract}{(}{{{problem}{.}{getInitialState}{()}}{.}{getTime}{()}}{)}}{.}{divide}{(}{{integrator}{.}{getCurrentSignedStepsize}{()}}{)}}{.}{abs}{()}}{.}{getReal}{()}}{>}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{field}{)}{;}}{{{setFinalConditions}{(}{{{{{getInitialState}{()}}{.}{getTime}{()}}{.}{multiply}{(}{NUMBER_CONSTANT}{)}}{.}{subtract}{(}{{getFinalTime}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{NUMBER_CONSTANT}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{NUMBER_CONSTANT}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{DormandPrince54FieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{GillFieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{T}}{{one}{=}{{{getField}{()}}{.}{getOne}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MidpointFieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{LutherFieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ThreeEighthesFieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{DormandPrince853FieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{doCopy}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{T}}{{coeffDot1}{=}{{{{getField}{()}}{.}{getOne}{()}}{.}{subtract}{(}{coeffDot2}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{T}}{{one}{=}{{{getField}{()}}{.}{getOne}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{HighamHall54FieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{getField}{()}}{.}{getOne}{()}}{.}{multiply}{(}{p}{)}}{.}{divide}{(}{q}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{d}{=}{{MathArrays}{.}{buildArray}{(}{{getField}{()}}{,}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ClassicalRungeKuttaFieldStepInterpolator}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{T}}{{two}{=}{{{{getField}{()}}{.}{getZero}{()}}{.}{add}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{getField}{()}}{.}{getZero}{()}}{.}{add}{(}{p}{)}}{.}{divide}{(}{q}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldStepInterpolator}}{<}{{T}}{>}}{(}{field}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mapper}{=}{{new}{{{FieldEquationsMapper}}{<}{{T}}{>}}{(}{mapper}{,}{{secondary}{.}{getDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldFirstOrderDifferentialEquations}}{<}{{T}}{>}}{{eqn}{=}{{new}{{{SinCos}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<}{{T}}{>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<}{{T}}{>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{integrator}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{problem}{)}}{,}{{problem}{.}{getInitialState}{()}}{,}{{problem}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{equations}{)}}{,}{{new}{{{FieldODEState}}{<}{{T}}{>}}{(}{t0}{,}{y0}{)}}{,}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{steps}{.}{add}{(}{interpolator}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{{FieldStepInterpolator}}{<}{{T}}{>}}{interpolator}}{:}{model.steps}{)}{{{}{{{steps}{.}{add}{(}{interpolator}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{{++}{index}}{<}{{getNumberOfEquations}{()}}}{)}{{{}{{{insertEquationData}{(}{index}{,}{{state}{.}{getSecondaryDerivative}{(}{index}{)}}{,}{yDot}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{{++}{index}}{<}{{getNumberOfEquations}{()}}}{)}{{{}{{{insertEquationData}{(}{index}{,}{{state}{.}{getSecondaryState}{(}{index}{)}}{,}{y}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{System}{.}{arraycopy}{(}{mapper.start}{,}{NUMBER_CONSTANT}{,}{start}{,}{NUMBER_CONSTANT}{,}{{index}{+}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{FirstOrderFieldIntegrator}}{<}{{T}}{>}}{integrator}}}
{AST_ROOT_SC2NF{{final}{{{FirstOrderFieldDifferentialEquations}}{<}{{T}}{>}}{eqn}}}
{AST_ROOT_SC2NF{{final}{{{FirstOrderFieldDifferentialEquations}}{<}{{T}}{>}}{eqn}}}
{AST_ROOT_SC2NF{{final}{{{FirstOrderFieldIntegrator}}{<}{{T}}{>}}{integrator}}}
{AST_ROOT_SC2NF{{final}{{{FirstOrderFieldDifferentialEquations}}{<}{{T}}{>}}{equations}}}
{AST_ROOT_SC2NF{{final}{{{FirstOrderFieldDifferentialEquations}}{<}{{T}}{>}}{primary}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MaxCountExceededException}}{.}{class}}}{)}}{public}{void}{exceedMaxEvaluations}{()}{{{}{{{doExceedMaxEvaluations}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{taylor}{(}{reference}{,}{time}{,}{scalingH}{,}{scaled}{,}{nordsieck}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{{new}{{int}{[]}}{{{}{seed}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{bits}{=}{{(}{{{nextInt}{()}}{>}{>}{>}{NUMBER_CONSTANT}}{)}}}{;}}{{{val}{=}{{bits}{%}{n}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ISAACRandom}{(}{{long}{seed}}{)}{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setSeed}{(}{seed}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{timeAndReport}{(}{title}{,}{DEFAULT_MAX_NAME_WIDTH}{,}{DEFAULT_REPEAT_CHUNK}{,}{DEFAULT_REPEAT_STAT}{,}{false}{,}{methods}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{double}{sample}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{seed}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cityList}{,}{numNeuronsPerCity}{,}{{RandomSource}{.}{createLong}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{{(}{double}{)}{observed1.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{{(}{double}{)}{observed1.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{u}{=}{{rng}{.}{nextDouble}{()}}}{;}}{{return}{{{u}{*}{upper}}{+}{{{(}{{NUMBER_CONSTANT}{-}{u}}{)}}{*}{lower}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{empiricalDistribution}{.}{createSampler}{(}{{randomData}{.}{getRandomProvider}{()}}{)}}{.}{sample}{()}}{;}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistribution}}{(}{binCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{FDistribution}}{{fdist}{=}{{new}{{FDistribution}}{(}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{FDistribution}}{{fdist}{=}{{new}{{FDistribution}}{(}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BinomialDistribution}}{{distribution}{=}{{new}{{BinomialDistribution}}{(}{numberOfTrials}{,}{probability}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{rand}{=}{{new}{{Well19937c}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{complexSolver}{.}{solve}{(}{{ComplexUtils}{.}{real2Complex}{(}{coefficients}{)}}{,}{{new}{{Complex}}{(}{initial}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{complexSolver}{.}{solveAll}{(}{{ComplexUtils}{.}{real2Complex}{(}{coefficients}{)}}{,}{{new}{{Complex}}{(}{initial}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Complex}}{{c}{[]}{=}{{ComplexUtils}{.}{real2Complex}{(}{{getCoefficients}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{rng}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_19937_C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealDistribution.Sampler}}{distribution}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{,}{{new}{{JDKRandomAdaptor}}{(}{rng}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{,}{{new}{{JDKRandomAdaptor}}{(}{rng}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{,}{{new}{{JDKRandomAdaptor}}{(}{rng}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{dim}}{;}{{i}{++}}{)}{{{}{{{{normalVals}{[}{i}{]}}{=}{{gauss}{.}{sample}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{cachedD}{=}{{MatrixUtils}{.}{createRealMatrixWithDiagonal}{(}{realEigenvalues}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ComplexFormat}}{{cf}{=}{{ComplexFormat}{.}{getInstance}{(}{{getLocale}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ComplexFormat}}{{cf}{=}{{ComplexFormat}{.}{getInstance}{(}{{getLocale}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{randomGenerator}}}
{AST_ROOT_SC2NF{{public}{NaturalRanking}{(}{{{UniformRandomProvider}}{randomGenerator}}{)}{{{}{{this}{(}{DEFAULT_NAN_STRATEGY}{,}{TiesStrategy.RANDOM}{,}{randomGenerator}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{nanStrategy}{,}{tiesStrategy}{,}{{RandomSource}{.}{create}{(}{RandomSource.WELL_19937_C}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{DEFAULT_NAN_STRATEGY}{,}{tiesStrategy}{,}{{RandomSource}{.}{create}{(}{RandomSource.WELL_19937_C}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{random}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{random}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{k}{,}{maxIterations}{,}{measure}{,}{{RandomSource}{.}{create}{(}{RandomSource.MT_64}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{random}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{k}{,}{fuzziness}{,}{maxIterations}{,}{measure}{,}{DEFAULT_EPSILON}{,}{{RandomSource}{.}{create}{(}{RandomSource.MT_64}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.MT_64}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{random}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{randGen}{=}{{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{random}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{random}{.}{sample}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{size}}{;}{{i}{++}}{)}{{{}{{{{randn}{[}{i}{]}}{=}{{random}{.}{sample}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{generator}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{random}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{random}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{comp}{=}{{rand}{.}{sample}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{dimension}{,}{{RandomSource}{.}{create}{(}{RandomSource.MT_64}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{generator}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{generator}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{field}{=}{{new}{{DfpField}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{generator}{=}{{RandomSource}{.}{create}{(}{RandomSource.MT}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.XOR_SHIFT_1024_S}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{rng}{=}{{RandomSource}{.}{create}{(}{RandomSource.TWO_CMRES}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{r}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{r}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UniformRandomProvider}}{{rng}{=}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{{PivotingStrategyInterface}}{[]}}{{{}{{new}{{MedianOf3PivotingStrategy}}{()}}{,}{{new}{{CentralPivotingStrategy}}{()}}{,}{{new}{{RandomPivotingStrategy}}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{{kthSelector}{=}{{new}{{KthSelector}}{(}{{new}{{RandomPivotingStrategy}}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{rng}{=}{{new}{{RngAdaptor}}{(}{RandomSource.MT}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{InferenceTestUtils}{.}{gTest}{(}{expected}{,}{observed}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{RandomSource}{.}{saveState}{(}{random}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{RandomSource}{.}{saveState}{(}{delegate}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{rng}}{=}{{new}{{GaussianRandomGenerator}}{(}{{RandomSource}{.}{create}{(}{RandomSource.WELL_19937_C}{,}{seed}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{rng}{=}{{new}{{GaussianRandomGenerator}}{(}{{RandomSource}{.}{create}{(}{RandomSource.WELL_19937_C}{,}{seed}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{{random}{=}{{RandomSource}{.}{create}{(}{RandomSource.MT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UniformRandomProvider}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Neuron}}{>}}{{exclude}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayFieldVector}}{<}{{T}}{>}}{{out}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{this}{,}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{FieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{m}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{m}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{this}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{components}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{firstIndex}{=}{{primary}{.}{getDimension}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{components}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{{externalList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{valuesList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popList}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{SummaryStatistics}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{SummaryStatistics}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{StatisticalSummary}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{SummaryStatistics}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{y}{,}{yDot}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{interpolator}}{=}{{new}{{{PerfectInterpolator}}{<>}}{(}{problem}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{circles}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ContinuousOutputFieldModel}}{<}{{T}}{>}}{{otherCm}{=}{{new}{{{ContinuousOutputFieldModel}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ContinuousOutputFieldModel}}{<}{{T}}{>}}{{cm}{=}{{new}{{{ContinuousOutputFieldModel}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{{SparseFieldMatrix}}{<>}}{(}{field}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<>}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{{ArrayFieldVector}}{<>}}{(}{testVector}{)}}{)}}{.}{toArray}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{SubHyperplane}}{<}{{Sphere1D}}{>}}{>}}{{boundary}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{{parameters}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{singletons}{=}{{new}{{{ArrayList}}{<>}}{(}{{pmf}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{GillFieldIntegrator}}{<>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{{parameters}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{clusterer}{=}{{new}{{{DBSCANClusterer}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{DBSCANClusterer}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{DBSCANClusterer}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{clusterer}{=}{{new}{{{DBSCANClusterer}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{DBSCANClusterer}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{HashSet}}{<}{{Object}}{>}}{{sampSet}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{double}{[]}}{>}}{{coordinatesList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Neuron}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{City}}{>}}{{cityList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{CircleVectorial}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MidpointFieldIntegrator}}{<>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{convexCellsInsidePoints}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{root}{=}{{new}{{{BSPTree}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<>}}{(}{{list}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parametersNames}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{parametersNames}{.}{addAll}{(}{names}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parametersNames}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{d}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}{{{defaultTransformer}{=}{{new}{{DefaultTransformer}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{T}}{>}}{{oneSet}{=}{{new}{{{HashSet}}{<>}}{(}{one}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{T}}{>}}{{neighbors}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{T}}{>}}{{seeds}{=}{{new}{{{ArrayList}}{<>}}{(}{neighbors}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<>}}{(}{{list}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Pair}}{<>}}{(}{normal}{,}{jTr}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{sigma}{=}{error}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Long}}{>}}{{linkEnd}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{(}{{population}{.}{getChromosomes}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{Comparable}}{<}{?}{>}}{>}}{{modeList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{features}}{=}{{new}{{{AtomicReference}}{<>}}{(}{{features}{.}{clone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector3D}}{>}}{{reducedSupport}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector3D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean3D}}{,}{{Vector3D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean3D}}{,}{{Vector3D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{TreeSet}}{<}{{Double}}{>}}{{values}{=}{{new}{{{TreeSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{PairDoubleInteger}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{len}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{KMeansPlusPlusClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{KMeansPlusPlusClusterer}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{double}{[]}}{>}}{{paramsAndChi2}{=}{{new}{{{ArrayList}}{<>}}{(}{{gridSize}{*}{gridSize}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ThreeEighthesFieldIntegrator}}{<>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{p2}{=}{{new}{{{Pair}}{<>}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popList}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Neuron}}{>}}{{neuronList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Neuron}}{>}}{{neurons}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{copy.linkMap}{.}{put}{(}{{e}{.}{getKey}{()}}{,}{{new}{{{HashSet}}{<>}}{(}{{e}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{WeightedObservedPoint}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{reducedSupport}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{{coordinates.length}{/}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean2D}}{,}{{Vector2D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean2D}}{,}{{Vector2D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{mapper}{=}{{new}{{{FieldEquationsMapper}}{<>}}{(}{mapper}{,}{{secondary}{.}{getDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{String}}{>}}{{referenceRules}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{String}}{>}}{{referenceRules}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FirstOrderFieldDifferentialEquations}}{<}{{T}}{>}}{{eqn}{=}{{new}{{{SinCos}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{innerDistribution}{=}{{new}{{{EnumeratedDistribution}}{<>}}{(}{{createDistribution}{(}{singletons}{,}{probabilities}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ClassicalRungeKuttaFieldIntegrator}}{<>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{{FieldLUDecomposition}}{<>}}{(}{m}{)}}{.}{getDeterminant}{()}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecomposition}}{<>}}{(}{{createFractionMatrix}{(}{singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecomposition}}{<>}}{(}{{createFractionMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{NPointCrossover}}{<}{{Integer}}{>}}{{npc}{=}{{new}{{{NPointCrossover}}{<>}}{(}{order}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rowDimension}{,}{columnDimension}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{nCols}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{NUMBER_CONSTANT}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{m.columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{BlockFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rowDimension}{,}{columnDimension}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{loops}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{factors}{=}{{new}{{{ArrayList}}{<>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v1}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v1}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{FieldODEState}}{<>}}{(}{t0}{,}{y0}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{SubHyperplane}}{<}{{Sphere2D}}{>}}{>}}{{boundary}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{SubHyperplane}}{<}{{Sphere2D}}{>}}{>}}{{boundary}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Integer}}{>}}{{nonZeroPositions}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{{{{this}{.}{segments}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{loop}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{loops}{=}{{new}{{{ArrayList}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{{{this}{.}{lines}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{representation}}{=}{{Collections}{.}{unmodifiableList}{(}{{copyList}{?}{{new}{{{ArrayList}}{<>}}{(}{representation}{)}}{:}{representation}}{)}}}{;}}}
{AST_ROOT_SC2NF{{newClusters}{=}{{new}{{{ArrayList}}{<>}}{(}{k}{)}}}}
{AST_ROOT_SC2NF{{{microsphereData}{=}{{new}{{{ArrayList}}{<>}}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Neuron}}{>}}{{list}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{listeners}}{=}{{new}{{{CopyOnWriteArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{listeners}}{=}{{new}{{{CopyOnWriteArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{minRatioPositions}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{innerDistribution}{=}{{new}{{{EnumeratedDistribution}}{<>}}{(}{{createDistribution}{(}{singletons}{,}{probabilities}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Interval}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{LutherFieldIntegrator}}{<>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{FuzzyKMeansClusterer}}{<}{{DoublePoint}}{>}}{{clusterer}{=}{{new}{{{FuzzyKMeansClusterer}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{SparseFieldMatrix}}{<>}}{(}{{getField}{()}}{,}{rowDimension}{,}{columnDimension}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{SparseFieldMatrix}}{<>}}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{{getField}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{other.entries}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{steps}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{output}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{evaluator}{=}{{new}{{{SumOfClusterVariances}}{<>}}{(}{{new}{{EuclideanDistance}}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Fraction}}{>}}{{generated}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Integer}}{>}}{{keysInMap}{=}{{new}{{{HashSet}}{<>}}{(}{{javaMap}{.}{keySet}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Fraction}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{fields}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<>}}{(}{observations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Neuron}}{,}{{Integer}}{>}}{{hit}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{PairNeuronDouble}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{CentroidCluster}}{<}{{T}}{>}}{>}}{{newClusters}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{Object}}{[]}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{GillFieldIntegrator}}{<>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldRotation}}{<>}}{(}{mds}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldRotation}}{<}{{DerivativeStructure}}{>}}{{quat}{=}{{new}{{{FieldRotation}}{<>}}{(}{u1}{,}{u2}{,}{v1}{,}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v1}{=}{{new}{{{ArrayFieldVector}}{<>}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldVectorTestImpl}}{<>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{orig}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{hParam}}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{regions}{=}{{new}{{{ArrayList}}{<>}}{(}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{BoundaryProjection}}{<>}}{(}{original}{,}{projected}{,}{offset}{)}}{;}}}
{AST_ROOT_SC2NF{{{binStats}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MidpointFieldIntegrator}}{<>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{surrounded}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{estimatedState}{,}{estimatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{nordsieck}}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{{nordsieck}{.}{getData}{()}}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{boundary}{=}{{new}{{{ArrayList}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{BSPTree}}{<>}}{(}{Boolean.FALSE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldMatrix}}{<>}}{(}{field}{,}{virtualSize}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldMatrix}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldMatrix}}{<>}}{(}{field}{,}{virtualSize}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{field}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{SparseFieldVector}}{<>}}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{this}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<>}}{(}{this}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{{v}{.}{getEntries}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{,}{expectedSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{v.entries}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ClassicalRungeKuttaFieldIntegrator}}{<>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ListUnivariateImpl}{()}{{{}{{this}{(}{{new}{{{ArrayList}}{<>}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{TestFieldProblem3}}{<}{{T}}{>}}{{pb}{=}{{new}{{{TestFieldProblem3}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{jacobianProviders}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{LutherFieldIntegrator}}{<>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Frequency}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ThreeEighthesFieldIntegrator}}{<>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{newRepr}{=}{{new}{{{ArrayList}}{<>}}{(}{{origChrom}{.}{getRepresentation}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SimplePointChecker}}{<}{{PointValuePair}}{>}}{{checker}{=}{{new}{{{SimplePointChecker}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SimplePointChecker}}{<}{{PointValuePair}}{>}}{{checker}{=}{{new}{{{SimplePointChecker}}{<>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{max}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{SummaryStatistics}}{>}}{{categoryDataSummaryStatistics}{=}{{new}{{{ArrayList}}{<>}}{(}{{categoryData}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{String}}{>}}{{lines}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Number}}{>}}{{components}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldIntegrator}}{<>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Double}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector3D}}{>}}{{support}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{CircleScalar}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{EventHandler}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{{eventsStates}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{WeightedObservedPoint}}{>}}{{observations}{=}{{new}{{{ArrayList}}{<>}}{(}{unsorted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{chromosomes}}{=}{{new}{{{ArrayList}}{<>}}{(}{populationLimit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{BlockFieldMatrix}}{<>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{BlockFieldMatrix}}{<>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayList}}{<>}}{(}{{edgeToNode}{.}{keySet}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{{stateTmp}{=}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{stepEnd}{,}{yTmp}{,}{yDotTmp}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{{externalList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{{state0}{=}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{t0}{,}{y0}{,}{y0Dot}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean3D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{integrator}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{problem}{)}}{,}{{problem}{.}{getInitialState}{()}}{,}{{problem}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{FieldVector3D}}{<>}}{(}{NUMBER_CONSTANT}{,}{this}{,}{factor}{,}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Complex}}{>}}{{result}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldRotation}}{<>}}{(}{mds}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldRotation}}{<}{{Dfp}}{>}}{{quat}{=}{{new}{{{FieldRotation}}{<>}}{(}{u1}{,}{u2}{,}{v1}{,}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OnePointCrossover}}{<}{{Integer}}{>}}{{opc}{=}{{new}{{{OnePointCrossover}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{BSPTree}}{<}{{Sphere1D}}{>}}{{tree}{=}{{new}{{{BSPTree}}{<>}}{(}{Boolean.FALSE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Arc}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{newRepr}{=}{{new}{{{ArrayList}}{<>}}{(}{repr}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Double}}{>}}{{generated}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Integer}}{>}}{{keysInMap}{=}{{new}{{{HashSet}}{<>}}{(}{{javaMap}{.}{keySet}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Double}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Integer}}{>}}{{usedBasicRows}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Integer}}{>}}{{columnsToDrop}{=}{{new}{{{TreeSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{normalized}{=}{{new}{{{ArrayList}}{<>}}{(}{{originalConstraints}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{{parameters}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Pair}}{<>}}{(}{k}{,}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Cluster}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{close}{=}{{new}{{{ArrayList}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Double}}{>}}{{values}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{{BigFractionField}{.}{getInstance}{()}}{,}{Hdata}{)}}{;}}}
{AST_ROOT_SC2NF{{{{TestFieldProblem3}}{<}{{T}}{>}}{{pb}{=}{{new}{{{TestFieldProblem3}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BoundarySizeVisitor}}{<}{{S}}{>}}{{visitor}{=}{{new}{{{BoundarySizeVisitor}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BoundaryProjector}}{<}{{S}}{,}{{T}}{>}}{{projector}{=}{{new}{{{BoundaryProjector}}{<>}}{(}{point}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{tree}{=}{{new}{{{BSPTree}}{<>}}{(}{Boolean.FALSE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tree}}{=}{{new}{{{BSPTree}}{<>}}{(}{Boolean.TRUE}{)}}}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{baseSequence}{=}{{new}{{{ArrayList}}{<>}}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{S}}{>}}{{origDataCopy}{=}{{new}{{{ArrayList}}{<>}}{(}{originalData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{S}}{>}}{{sortedData}{=}{{new}{{{ArrayList}}{<>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{repr}{=}{{new}{{{ArrayList}}{<>}}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{repr}{=}{{new}{{{ArrayList}}{<>}}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{sortedRepr}{=}{{new}{{{ArrayList}}{<>}}{(}{{getRepresentation}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{distribution}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{quadrilateral}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Vector2D}}{>}}{{reducedPoints}{=}{{new}{{{ArrayList}}{<>}}{(}{quadrilateral}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{rList}{=}{{new}{{{ArrayList}}{<>}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{context}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{support}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Double}}{>}}{{integrationTestPoints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{edges}{=}{{new}{{{ArrayList}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEState}}{<>}}{(}{{state}{.}{getTime}{()}}{,}{y}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Integer}}{>}}{{out}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{fData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{bfData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<>}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldBracketingNthOrderBrentSolver}}{<}{{Dfp}}{>}}{{solver}{=}{{new}{{{FieldBracketingNthOrderBrentSolver}}{<>}}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldBracketingNthOrderBrentSolver}}{<}{{Dfp}}{>}}{{solver}{=}{{new}{{{FieldBracketingNthOrderBrentSolver}}{<>}}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{{FieldBracketingNthOrderBrentSolver}}{<>}}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Euclidean2D}}{>}}{>}}{{edges}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{WeightedObservedPoint}}{>}}{{observations}{=}{{new}{{{ArrayList}}{<>}}{(}{unsorted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{steps}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{City}}{>}}{{unique}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Future}}{<}{?}{>}}{>}}{{execOutput}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{certifiedValues}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldIntegrator}}{<>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{T}}{>}}{{identity}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<>}}{(}{field}{,}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Solver}}{<>}}{(}{field}{,}{lu}{,}{pivot}{,}{singular}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{cachedP}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedU}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedL}{=}{{new}{{{Array2DRowFieldMatrix}}{<>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popChr}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Neuron}}{>}}{{exclude}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Neuron}}{>}}{{exclude}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{BigFraction}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{derivatives}}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{derivatives}}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{tasks}{=}{{new}{{{ArrayList}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{final}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{{stateTmp}{=}{{new}{{{FieldODEStateAndDerivative}}{<>}}{(}{stepEnd}{,}{yTmp}{,}{yDotTmp}{)}}}{;}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{chromosomes}{,}{NUMBER_CONSTANT}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{new}{{ListPopulation}}{(}{chromosomes}{,}{NUMBER_CONSTANT}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{new}{{ListPopulation}}{(}{chromosomes}{,}{{-}{NUMBER_CONSTANT}}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{ListPopulation}}{(}{{-}{NUMBER_CONSTANT}}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{{@}{Override}}{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{StepInterpolator}}{copy}{()}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{StepInterpolator}}{copy}{()}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{{@}{Override}}{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{val}}{:}{{this}{.}{getRepresentation}{()}}{)}{{{}{{if}{(}{{val}{!=}{NUMBER_CONSTANT}}{)}{{{}{{{num}{++}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{count}{++}}{>}{NUMBER_CONSTANT}}{)}{{{}{break;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{count}{++}}{>}{NUMBER_CONSTANT}}{)}{{{}{break;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{counts}{[}{i}{]}}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{random}{.}{restoreState}{(}{state}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{(}{{(}{{RandomSource.State}}{)}{{random}{.}{saveState}{()}}}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{delegate}{.}{restoreState}{(}{state}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{(}{{(}{{RandomSource.State}}{)}{{delegate}{.}{saveState}{()}}}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{n}{=}{{upperMinusLower}{+}{NUMBER_CONSTANT}}}{;}}{{return}{{{(}{{{n}{*}{n}}{-}{NUMBER_CONSTANT}}{)}}{/}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{*}{upperPlusLower}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{x}{-}{lower}}{+}{NUMBER_CONSTANT}}{)}}{/}{{(}{{upperMinusLower}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{/}{{(}{{upperMinusLower}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{(}{{(}{{RandomProviderDefaultState}}{)}{{delegate}{.}{saveState}{()}}}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{(}{{(}{{RandomProviderDefaultState}}{)}{{random}{.}{saveState}{()}}}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{ListSampler}{.}{shuffle}{(}{rng}{,}{points}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{ListSampler}{.}{shuffle}{(}{rng}{,}{points}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{ListSampler}{.}{shuffle}{(}{rng}{,}{points}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{{{(}{{(}{{Coordinates1D}}{)}{point}}{)}}{.}{getX}{()}}{-}{{location}{.}{getX}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates1D}}{location}}}
{AST_ROOT_SC2NF{{{}{{final}{{Circle}}{{otherC}{=}{{(}{{Circle}}{)}{other}}}{;}}{{return}{{{Coordinates3D}{.}{dotProduct}{(}{pole}{,}{otherC.pole}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{direction}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{pole}}}
{AST_ROOT_SC2NF{{{{Coordinates3D}}{[]}}{points}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Coordinates3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{Arrays}{.}{asList}{(}{Coordinates3D.ZERO}{,}{Coordinates3D.PLUS_I}{,}{Coordinates3D.PLUS_J}{,}{Coordinates3D.PLUS_K}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{ps}{.}{checkPoint}{(}{Coordinates3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{{tmp}{=}{{loop}{[}{min}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Coordinates2D}}{[]}}{bLoop}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{axis}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{axis}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{oneTwo}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Coordinates2D}}{(}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Coordinates1D}}{{p1}{=}{{(}{{Coordinates1D}}{)}{vector}}}{;}}{{return}{{format}{(}{toAppendTo}{,}{pos}{,}{{p1}{.}{getX}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{expected}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{Coordinates2D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{Coordinates2D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{Coordinates2D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Line}}{(}{{new}{{Coordinates2D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OrientedPoint}}{(}{{new}{{Coordinates1D}}{(}{{getNumber}{()}}{)}}{,}{{getBoolean}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Circle}}{(}{{new}{{Coordinates3D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{u}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{v}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{v}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{v}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Space}}{{space}{=}{{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{space}{.}{getDimension}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{{p}{=}{{h}{.}{toSpace}{(}{Coordinates2D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{{p}{=}{{h}{.}{toSpace}{(}{Coordinates1D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{{p2}{=}{{(}{{Coordinates2D}}{)}{vector}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{{c}{=}{Coordinates3D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{{c}{=}{Coordinates3D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{{c}{=}{Coordinates3D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{expected}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{Coordinates1D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{Coordinates1D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{Coordinates1D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Coordinates3D}{.}{angle}{(}{{thisCircle}{.}{getPole}{()}}{,}{{otherCircle}{.}{getPole}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Coordinates3D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{vector}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{(}{{(}{{Coordinates3D}}{)}{point}}{)}}{.}{dotProduct}{(}{w}{)}}{+}{originOffset}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Coordinates3D}{.}{angle}{(}{w}{,}{plane.w}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{{tmp}{=}{u}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{normal}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Coordinates3D}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Space}}{{space}{=}{{{new}{{Coordinates3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{Coordinates1D}}{)}{{set}{.}{getBarycenter}{()}}}{)}}{.}{getX}{()}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{p2}{=}{{(}{{Coordinates2D}}{)}{point}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{TranslationTransform}{(}{{final}{{Coordinates3D}}{translation}}{)}{{{}{{{{this}{.}{translation}}{=}{translation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{point}}}
{AST_ROOT_SC2NF{{{}{{{setSize}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setBarycenter}{(}{{(}{{{Point}}{<}{{Euclidean3D}}{>}}{)}{{new}{{Coordinates3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Coordinates3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Coordinates3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{{Circle}}{{circle}{=}{{new}{{Circle}}{(}{Coordinates3D.PLUS_K}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{{Coordinates2D}}{[]}}{vertices}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{{this}{.}{summedBarycenter}}{=}{Coordinates3D.ZERO}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Coordinates2D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{vector}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldVector3D}{.}{angle}{(}{v1}{,}{Coordinates3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathArithmeticException}}{mae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Coordinates2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Coordinates2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{SphericalCoordinates}}{(}{{new}{{Coordinates3D}}{(}{x}{,}{y}{,}{z}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{point}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{pole}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{p}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Coordinates3D}{.}{angle}{(}{direction}{,}{line.direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{{Collections}{.}{<}{{Coordinates2D}}{>}{emptyList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{x}{=}{{{(}{{(}{{Coordinates1D}}{)}{point}}{)}}{.}{getX}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{{tmp}{=}{{loop}{[}{min}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Cartesian2D}}{[]}}{bLoop}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{{p2}{=}{{(}{{Cartesian2D}}{)}{vector}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{Cartesian1D}}{)}{{set}{.}{getBarycenter}{()}}}{)}}{.}{getX}{()}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Cartesian3D}}{[]}}{points}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Cartesian3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{Arrays}{.}{asList}{(}{Cartesian3D.ZERO}{,}{Cartesian3D.PLUS_I}{,}{Cartesian3D.PLUS_J}{,}{Cartesian3D.PLUS_K}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{ps}{.}{checkPoint}{(}{Cartesian3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{{p}{=}{{h}{.}{toSpace}{(}{Cartesian2D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{{p}{=}{{h}{.}{toSpace}{(}{Cartesian1D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{expected}{=}{{new}{{Cartesian2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{Cartesian2D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{Cartesian2D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{Cartesian2D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{{new}{{Cartesian2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{{new}{{Cartesian2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{{new}{{Cartesian2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{{new}{{Cartesian2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{c}{=}{{new}{{Cartesian2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{x}{=}{{{(}{{(}{{Cartesian1D}}{)}{point}}{)}}{.}{getX}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Cartesian3D}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Space}}{{space}{=}{{{new}{{Cartesian3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Line}}{(}{{new}{{Cartesian2D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OrientedPoint}}{(}{{new}{{Cartesian1D}}{(}{{getNumber}{()}}{)}}{,}{{getBoolean}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Circle}}{(}{{new}{{Cartesian3D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Circle}}{{circle}{=}{{new}{{Circle}}{(}{Cartesian3D.PLUS_K}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{SphericalCoordinates}}{(}{{new}{{Cartesian3D}}{(}{x}{,}{y}{,}{z}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{{{this}{.}{summedBarycenter}}{=}{Cartesian3D.ZERO}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Cartesian1D}}{{p1}{=}{{(}{{Cartesian1D}}{)}{vector}}}{;}}{{return}{{format}{(}{toAppendTo}{,}{pos}{,}{{p1}{.}{getX}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Cartesian2D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{vector}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{p}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Cartesian3D}{.}{angle}{(}{direction}{,}{line.direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{point}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{{c}{=}{Cartesian3D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{{c}{=}{Cartesian3D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{{c}{=}{Cartesian3D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{expected}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{Cartesian1D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{Cartesian1D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{Cartesian1D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{{new}{{Cartesian1D}}{(}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{c}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{axis}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{axis}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{u}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Cartesian3D}{.}{angle}{(}{{thisCircle}{.}{getPole}{()}}{,}{{otherCircle}{.}{getPole}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Cartesian2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Cartesian2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{(}{{(}{{Cartesian3D}}{)}{point}}{)}}{.}{dotProduct}{(}{w}{)}}{+}{originOffset}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Cartesian3D}{.}{angle}{(}{w}{,}{plane.w}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{{tmp}{=}{u}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{normal}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldVector3D}{.}{angle}{(}{v1}{,}{Cartesian3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathArithmeticException}}{mae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Circle}}{{otherC}{=}{{(}{{Circle}}{)}{other}}}{;}}{{return}{{{Cartesian3D}{.}{dotProduct}{(}{pole}{,}{otherC.pole}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{direction}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{pole}}}
{AST_ROOT_SC2NF{{{}{{return}{{Cartesian3D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{vector}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Cartesian2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Cartesian2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Cartesian2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Cartesian2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{{Collections}{.}{<}{{Cartesian2D}}{>}{emptyList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{{{(}{{(}{{Cartesian1D}}{)}{point}}{)}}{.}{getX}{()}}{-}{{location}{.}{getX}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian1D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{pole}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{point}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{oneTwo}{=}{{new}{{Cartesian2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Cartesian2D}}{(}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Cartesian2D}}{[]}}{vertices}}}
{AST_ROOT_SC2NF{{TranslationTransform}{(}{{final}{{Cartesian3D}}{translation}}{)}{{{}{{{{this}{.}{translation}}{=}{translation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{point}}}
{AST_ROOT_SC2NF{{{}{{{setSize}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setBarycenter}{(}{{(}{{{Point}}{<}{{Euclidean3D}}{>}}{)}{{new}{{Cartesian3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Cartesian3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Cartesian3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{v}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{v}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{v}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Space}}{{space}{=}{{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{space}{.}{getDimension}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{p}}}
{AST_ROOT_SC2NF{{{}{{{{centered}{[}{i}{]}}{=}{{{values}{[}{i}{]}}{-}{{means}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{final}{{ContinuousSampler}}{{sampler}{=}{{new}{{MarsagliaLogNormalSampler}}{(}{rng}{,}{scale}{,}{shape}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{final}{{ContinuousSampler}}{{sampler}{=}{{new}{{GaussianSampler}}{(}{{new}{{MarsagliaNormalizedGaussianSampler}}{(}{rng}{)}}{,}{mean}{,}{standardDeviation}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{Plot}{(}{{final}{{{List}}{<}{{Cartesian2D}}{>}}{points}}{)}{{{}{{{{this}{.}{points}}{=}{points}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Cartesian2D}}{>}}{{points}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{p}}}
{AST_ROOT_SC2NF{{rings}{=}{{new}{{ChineseRings}}{(}{{new}{{Cartesian3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{actual}{=}{{vector1DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{actual}{=}{{vector1DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{actual}{=}{{vector1DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{expected}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Vector1D}}{{p1}{=}{{(}{{Vector1D}}{)}{vector}}}{;}}{{return}{{format}{(}{toAppendTo}{,}{pos}{,}{{p1}{.}{getX}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{{p2}{=}{{(}{{Vector2D}}{)}{vector}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{actual}{=}{{vector2DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{actual}{=}{{vector2DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{actual}{=}{{vector2DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{actual}{=}{{vector3DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{actual}{=}{{vector3DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{actual}{=}{{vector3DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{j}{=}{minor}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertFalse}{(}{{STRING_CONSTANT}{+}{level}}{,}{{{{new}{{KolmogorovSmirnovTest}}{()}}{.}{kolmogorovSmirnovTest}{(}{betaDistribution}{,}{observed}{)}}{<}{level}}{)}}{;}}}
{AST_ROOT_SC2NF{{Assert}{.}{assertEquals}{(}{{test}{.}{exactP}{(}{d}{,}{sampleSize1}{,}{sampleSize2}{,}{strict}{)}}{,}{{test}{.}{monteCarloP}{(}{d}{,}{sampleSize1}{,}{sampleSize2}{,}{strict}{,}{MONTE_CARLO_ITERATIONS}{,}{rng}{)}}{,}{tol}{)}}}
{AST_ROOT_SC2NF{{final}{double}{{tol}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{tol}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{p}}}
{AST_ROOT_SC2NF{{rings}{=}{{new}{{ChineseRings}}{(}{{new}{{Cartesian3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldVector3D}{.}{angle}{(}{v1}{,}{Cartesian3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathArithmeticException}}{mae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{point}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{p}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Cartesian3D}{.}{angle}{(}{direction}{,}{line.direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{point}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Cartesian3D}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Space}}{{space}{=}{{{new}{{Cartesian3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Cartesian2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Cartesian2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Cartesian2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{{Collections}{.}{<}{{Cartesian2D}}{>}{emptyList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{Cartesian1D}}{)}{{set}{.}{getBarycenter}{()}}}{)}}{.}{getX}{()}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{x}{=}{{{(}{{(}{{Cartesian1D}}{)}{point}}{)}}{.}{getX}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Cartesian2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Cartesian2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Cartesian3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{{Cartesian2D}}{[]}}{vertices}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{NUMBER_CONSTANT}}{;}}{}}}{else}{{{}{{{ret}{=}{{RegularizedGamma.P}{.}{value}{(}{shape}{,}{{x}{/}{scale}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{LogGamma}{.}{value}{(}{{z}{+}{NUMBER_CONSTANT}}{)}}{-}{{{(}{{z}{+}{NUMBER_CONSTANT}}{)}}{*}{{FastMath}{.}{log}{(}{z}{)}}}}{+}{z}}{-}{HALF_LOG_2_PI}}}
{AST_ROOT_SC2NF{{final}{double}{{expected}{=}{{LogGamma}{.}{value}{(}{{i}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{RegularizedGamma.P}{.}{value}{(}{mu}{,}{{{mu}{*}{x}{*}{x}}{/}{omega}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NUMBER_CONSTANT}{*}{{FastMath}{.}{pow}{(}{mu}{,}{mu}{)}}}{/}{{(}{{{Gamma}{.}{value}{(}{mu}{)}}{*}{{FastMath}{.}{pow}{(}{omega}{,}{mu}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{Gamma}{.}{value}{(}{t}{)}}{/}{s}}{,}{tol}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{sc}{*}{sc}}{)}}{*}{{FastMath}{.}{exp}{(}{{LogGamma}{.}{value}{(}{{NUMBER_CONSTANT}{+}{{(}{{NUMBER_CONSTANT}{/}{sh}}{)}}}{)}}{)}}}}
{AST_ROOT_SC2NF{{return}{{sc}{*}{{FastMath}{.}{exp}{(}{{LogGamma}{.}{value}{(}{{NUMBER_CONSTANT}{+}{{(}{{NUMBER_CONSTANT}{/}{sh}}{)}}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{LogGamma}{.}{value}{(}{{n}{+}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{RegularizedBeta}{.}{value}{(}{probabilityOfSuccess}{,}{numberOfSuccesses}{,}{{x}{+}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{LogBeta}{.}{value}{(}{nhalf}{,}{mhalf}{)}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{RegularizedBeta}{.}{value}{(}{probabilityOfSuccess}{,}{{x}{+}{NUMBER_CONSTANT}}{,}{{numberOfTrials}{-}{x}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{>=}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{{}{{return}{{RegularizedBeta}{.}{value}{(}{x}{,}{alpha}{,}{beta}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{ErfDifference}{.}{value}{(}{v0}{,}{v1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{+}{{NUMBER_CONSTANT}{*}{{Erf}{.}{value}{(}{{dev}{/}{{(}{{shape}{*}{SQRT2}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{t}{=}{{InverseErfc}{.}{value}{(}{p}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{ErfDifference}{.}{value}{(}{v0}{,}{v1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{mean}{+}{{standardDeviation}{*}{SQRT2}{*}{{InverseErf}{.}{value}{(}{{{NUMBER_CONSTANT}{*}{p}}{-}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{Erfc}{.}{value}{(}{{{-}{dev}}{/}{{(}{{standardDeviation}{*}{SQRT2}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{term}{*=}{{{FastMath}{.}{pow}{(}{{delta}{[}{k}{]}}{,}{{orders}{[}{k}{]}}{)}}{/}{{FACTORIAL}{.}{value}{(}{{orders}{[}{k}{]}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{refDer}{=}{{{-}{{Factorial}{.}{value}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{/}{{FastMath}{.}{pow}{(}{{-}{x}}{,}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{ArithmeticUtils}{.}{pow}{(}{{-}{NUMBER_CONSTANT}}{,}{i}{)}}{*}{{Factorial}{.}{value}{(}{i}{)}}}{/}{{FastMath}{.}{pow}{(}{x}{,}{{i}{+}{NUMBER_CONSTANT}}{)}}}}
{AST_ROOT_SC2NF{{BinomialCoefficientDouble}{.}{value}{(}{{n}{+}{m}}{,}{m}{)}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{BinomialCoefficient}{.}{value}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{numCombinations}{=}{{(}{int}{)}{{BinomialCoefficient}{.}{value}{(}{arraySize}{,}{numberOfTrueValues}{)}}}}{;}}}
{AST_ROOT_SC2NF{{long}{{expected}{=}{{BinomialCoefficient}{.}{value}{(}{{i}{+}{j}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{BinomialCoefficient}{.}{value}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{BinomialCoefficient}{.}{value}{(}{n}{,}{NUMBER_CONSTANT}{)}}{,}{{CombinatoricsUtils}{.}{stirlingS2}{(}{n}{,}{{n}{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{LinearCombination}{.}{value}{(}{x1}{,}{y1}{,}{{-}{x2}}{,}{y2}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Cartesian2D}}{{v2}{=}{{(}{{Cartesian2D}}{)}{v}}}{;}}{{return}{{LinearCombination}{.}{value}{(}{x}{,}{v2.x}{,}{y}{,}{v2.y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{n}{=}{{FastMath}{.}{abs}{(}{{LinearCombination}{.}{value}{(}{v1.x}{,}{v2.y}{,}{{-}{v1.y}}{,}{v2.x}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{LinearCombination}{.}{value}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{,}{a3}{,}{b3.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{LinearCombination}{.}{value}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{,}{a3.value}{,}{b3.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{LinearCombination}{.}{value}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{LinearCombination}{.}{value}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{LinearCombination}{.}{value}{(}{a}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{LinearCombination}{.}{value}{(}{aDouble}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{abs}{(}{{LinearCombination}{.}{value}{(}{sin}{,}{line.cos}{,}{{-}{cos}}{,}{line.sin}{)}}{)}}{<}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{LinearCombination}{.}{value}{(}{sin}{,}{otherL.sin}{,}{cos}{,}{otherL.cos}{)}}{>=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{originOffset}{+}{{(}{{{{LinearCombination}{.}{value}{(}{cos}{,}{line.cos}{,}{sin}{,}{line.sin}{)}}{>}{NUMBER_CONSTANT}}{?}{{-}{line.originOffset}}{:}{line.originOffset}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{accurateValue}{=}{{LinearCombination}{.}{value}{(}{a}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{accurateValue}{=}{{LinearCombination}{.}{value}{(}{aDouble}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{LinearCombination}{.}{value}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{,}{a3}{,}{b3.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{LinearCombination}{.}{value}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{,}{a3.value}{,}{b3.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{LinearCombination}{.}{value}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{LinearCombination}{.}{value}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Decimal64}}{(}{{LinearCombination}{.}{value}{(}{a}{,}{bDouble}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Decimal64}}{(}{{LinearCombination}{.}{value}{(}{aDouble}{,}{bDouble}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{r}{=}{{LinearCombination}{.}{value}{(}{{coeff}{[}{i}{]}}{,}{pY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{packed}{[}{{i}{+}{NUMBER_CONSTANT}}{]}}{=}{{LinearCombination}{.}{value}{(}{dv}{,}{partials}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{cos}{=}{{CosAngle}{.}{value}{(}{n}{,}{sampleDirection}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{diffNorm}{=}{{SafeNorm}{.}{value}{(}{diff}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkRelative}{(}{{LinearCombination}{.}{value}{(}{aD}{,}{bD}{)}}{,}{{{bF}{[}{NUMBER_CONSTANT}{]}}{.}{linearCombination}{(}{aD}{,}{bF}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRelative}{(}{{LinearCombination}{.}{value}{(}{aD}{,}{bD}{)}}{,}{{{aF}{[}{NUMBER_CONSTANT}{]}}{.}{linearCombination}{(}{aF}{,}{bF}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{PlaneAngleRadians}{.}{normalizeBetweenZeroAndTwoPi}{(}{alpha}{)}}{,}{{new}{{Cartesian2D}}{(}{{FastMath}{.}{cos}{(}{alpha}{)}}{,}{{FastMath}{.}{sin}{(}{alpha}{)}}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{a1}{.}{getReal}{()}}{,}{{PlaneAngleRadians}{.}{normalize}{(}{a2}{,}{{a1}{.}{getReal}{()}}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{arcRelativeStart}{=}{{{PlaneAngleRadians}{.}{normalize}{(}{{arc}{.}{getInf}{()}}{,}{{edgeStart}{+}{FastMath.PI}}{)}}{-}{edgeStart}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{PlaneAngleRadians}{.}{normalize}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{PlaneAngleRadians}{.}{normalize}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{PlaneAngleRadians}{.}{normalize}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{PlaneAngleRadians}{.}{normalize}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{lB}{=}{{PlaneAngleRadians}{.}{normalize}{(}{{limits}{.}{get}{(}{j}{)}}{,}{lA}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{syncedStart}{=}{{{PlaneAngleRadians}{.}{normalize}{(}{{a}{[}{NUMBER_CONSTANT}{]}}{,}{reference}{)}}{-}{{arc}{.}{getInf}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{normalizedLower}{=}{{PlaneAngleRadians}{.}{normalizeBetweenZeroAndTwoPi}{(}{lower}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{a1}{.}{getReal}{()}}{,}{{PlaneAngleRadians}{.}{normalize}{(}{a2}{,}{{a1}{.}{getReal}{()}}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{angle}}{=}{{PlaneAngleRadians}{.}{normalizeBetweenZeroAndTwoPi}{(}{angle}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{angle}}{=}{{PlaneAngleRadians}{.}{normalizeBetweenZeroAndTwoPi}{(}{alpha}{)}}}{;}}}
{AST_ROOT_SC2NF{{{angle}{=}{{PlaneAngleRadians}{.}{normalizeBetweenZeroAndTwoPi}{(}{line.angle}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{normalizedPoint}{=}{{PlaneAngleRadians}{.}{normalize}{(}{point}{,}{middle}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{lower}}{=}{{PlaneAngleRadians}{.}{normalizeBetweenZeroAndTwoPi}{(}{lower}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{knots.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION}{,}{knots.length}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{knots.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION}{,}{knots.length}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnitSphereSampler}}{{g}{=}{{new}{{UnitSphereSampler}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereSampler}}{{g}{=}{{new}{{UnitSphereSampler}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereSampler}}{{g}{=}{{new}{{UnitSphereSampler}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereSampler}}{{g}{=}{{new}{{UnitSphereSampler}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereSampler}}{rand}}}
{AST_ROOT_SC2NF{{this}{(}{{new}{{InterpolatingMicrosphere}}{(}{dimension}{,}{elements}{,}{maxDarkFraction}{,}{darkThreshold}{,}{background}{,}{{new}{{UnitSphereSampler}}{(}{dimension}{,}{{RandomSource}{.}{create}{(}{RandomSource.MT_64}{)}}{)}}{)}}{,}{exponent}{,}{sharedSphere}{,}{noInterpolationTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereSampler}}{{sphRandom}{=}{{new}{{UnitSphereSampler}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sampler}{=}{{new}{{MarsagliaNormalizedGaussianSampler}}{(}{generator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{final}{{ContinuousSampler}}{{sampler}{=}{{new}{{LogNormalSampler}}{(}{{new}{{ZigguratNormalizedGaussianSampler}}{(}{rng}{)}}{,}{scale}{,}{shape}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ContinuousDistribution.Sampler}}{random}}}
{AST_ROOT_SC2NF{{{}{{return}{{randomize}{(}{{{new}{{UniformContinuousDistribution}}{(}{min}{,}{max}{)}}{.}{createSampler}{(}{rng}{)}}{,}{{function}{(}{{new}{{Constant}}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DiscreteDistribution.Sampler}}{sampler}}}
{AST_ROOT_SC2NF{{final}{{ContinuousDistribution}}{expectedDistribution}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{normalDistribution}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{normalDistribution}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{normalDistribution}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ContinuousDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{ContinuousDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{ContinuousDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{ContinuousDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{ContinuousDistribution.Sampler}}{sampler}}}
{AST_ROOT_SC2NF{{{{this}{.}{random}}{=}{{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{createSampler}{(}{rng}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ContinuousDistribution}}{{kernel}{=}{{findKernel}{(}{lower}{,}{upper}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ContinuousDistribution}}{{kernel}{=}{{findKernel}{(}{lower}{,}{upper}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{{new}{{UniformContinuousDistribution}}{(}{lo}{,}{hi}{)}}{.}{createSampler}{(}{rng}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{{new}{{UniformContinuousDistribution}}{(}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{)}}{.}{createSampler}{(}{rng}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getMean}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{offset}{=}{{plane}{.}{getOffset}{(}{point}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{x}{,}{{v}{.}{getX}{()}}{,}{TEST_TOLERANCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertFalse}{(}{{pt}{.}{isDirect}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{copy}{.}{isDirect}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{pt}{.}{isDirect}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{result}{,}{expected}{,}{tolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertContains}{(}{result}{,}{expected}{,}{tolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{{y}{[}{i}{]}}{=}{{Complex}{.}{ofCartesian}{(}{yr}{,}{yi}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{data}{[}{i}{]}}{=}{{Complex}{.}{ofCartesian}{(}{re}{,}{im}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Complex}}{cc}}{:}{c}{)}{{{}{{{TestUtils}{.}{assertEquals}{(}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{cc}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{{expected}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{Complex}{.}{ofCartesian}{(}{Double.NEGATIVE_INFINITY}{,}{Double.NEGATIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{Complex}{.}{ofCartesian}{(}{Double.POSITIVE_INFINITY}{,}{Double.POSITIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{Complex}{.}{ofCartesian}{(}{Double.NaN}{,}{Double.NaN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{Double.NEGATIVE_INFINITY}{,}{Double.NEGATIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{Double.POSITIVE_INFINITY}{,}{Double.POSITIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{Double.NaN}{,}{Double.NaN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{float}{d}}{:}{imaginary}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{d}}{:}{imaginary}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{float}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofCartesian}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofCartesian}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{{imaginary}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofCartesian}{(}{NUMBER_CONSTANT}{,}{{imaginary}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofCartesian}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofCartesian}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{float}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofReal}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofReal}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofReal}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofReal}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{x}{[}{i}{]}}{=}{{Complex}{.}{ofReal}{(}{{f}{.}{value}{(}{t}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{value}{=}{count}}{;}}{{{count}{+=}{increment}}{;}}{{return}{value}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{SimpsonIntegrator}}{(}{NUMBER_CONSTANT}{,}{{SimpsonIntegrator.SIMPSON_MAX_ITERATIONS_COUNT}{+}{NUMBER_CONSTANT}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{expr}{.}{setLineno}{(}{{{expr}{.}{getLineno}{()}}{+}{templateLineno}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{definitionNodes}{.}{contains}{(}{useSite}{)}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{features}{=}{{ast}{.}{getFeatures}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tags}{==}{FALSY_MASK}}{)}{{{}{{return}{{builder}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{{builder}{.}{append}{(}{STRING_CONSTANT}{)}}{.}{append}{(}{tags}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{output.compiledCode}{=}{{writeOutput}{(}{compiler}{,}{flags.outputWrapper}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ES5_STRICT}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{,}{specializedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.MISSING_PROVIDE}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{,}{specializedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6ONoEs6}{()}{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ES5_STRICT}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{final}{{Node}}{getNext}{()}{{{}{{return}{next}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{{Token}}{getToken}{()}{{{}{{return}{token}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{type}{==}{null}}{&&}{isConstant}}{)}{{{}{{{type}{=}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{scope}{.}{getCommonTypes}{()}}{.}{UNKNOWN}}{;}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{AssertionFunctionSpec}{(}{{{String}}{functionName}}{)}{{{}{{this}{(}{functionName}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{this}{.}{commonTypes}}{.}{STRING}}{.}{isSubtypeOf}{(}{this}{)}}{&&}{{{{this}{.}{commonTypes}}{.}{getNumberInstance}{()}}{.}{mayHaveProp}{(}{pname}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{type}{==}{null}}{&&}{isConstant}}{)}{{{}{{{type}{=}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnknown}{()}}{)}{{{}{{return}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isBottom}{()}}{||}{{isUnknown}{()}}{||}{{hasTruthyMask}{()}}}{)}{{{}{{return}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{isUnknown}{()}}{)}{{{}{{return}{{{this}{.}{commonTypes}}{.}{TRUTHY}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{globalThisType}{=}{{{{this}{.}{commonTypes}}{.}{TOP_OBJECT}}{.}{withLoose}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}{{{expandedDefinitions}{.}{add}{(}{{functionSideEffectMap}{.}{get}{(}{function}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{hasOneChild}{()}}{&&}{{t}{.}{inGlobalScope}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{varNode}{.}{hasMoreThanOneChild}{()}}{&&}{{varType}{!=}{null}}}{)}{{{}{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{varNode}{,}{ONE_TYPE_FOR_MANY_VARS}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{hasOneChild}{()}}{&&}{{parent}{==}{googScopeBlock}}}}
{AST_ROOT_SC2NF{{{initializer}{.}{isVar}{()}}{&&}{{initializer}{.}{hasOneChild}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{hasOneChild}{()}}{&&}{{NodeUtil}{.}{isStatement}{(}{n}{)}}}{)}{{{}{{{processName}{(}{{n}{.}{getFirstChild}{()}}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentStatement}{.}{hasChildren}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{typeNode}{!=}{null}}{&&}{{typeNode}{.}{isString}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{inputId}{==}{null}}{)}{{{}{{{setInputId}{(}{{NodeUtil}{.}{getInputId}{(}{node}{)}}{,}{{getSourceName}{(}{node}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{inputId}{==}{null}}{)}{{{}{{{setInputId}{(}{{NodeUtil}{.}{getInputId}{(}{node}{)}}{,}{{getSourceName}{(}{node}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{getQualifiedName}{(}{node}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options.rewritePolyfills}{=}{{flags.rewritePolyfills}{&&}{{{options}{.}{getLanguageIn}{()}}{.}{isEs6OrHigher}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{getTypeFromComment}{(}{jsdoc}{,}{registry}{,}{typeParameters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{builder}{.}{append}{(}{{paramType}{.}{toNonNullString}{(}{forAnnotations}{)}}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{builder}{.}{append}{(}{STRING_CONSTANT}{)}}{.}{append}{(}{{paramType}{.}{toNonNullString}{(}{forAnnotations}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{b}{.}{append}{(}{{{p}{.}{getJSType}{()}}{.}{toNonNullString}{(}{forAnnotations}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{b}{.}{append}{(}{{call.returnType}{.}{toNonNullString}{(}{forAnnotations}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{append}{(}{{{getPropertyType}{(}{property}{)}}{.}{toNonNullString}{(}{forAnnotations}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isFromExterns}{()}}{)}{{{}{{{{this}{.}{recordPropertyName}}{.}{apply}{(}{propName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{recordPropertyName}{(}{{{getProp}{.}{getLastChild}{()}}{.}{getString}{()}}{,}{getProp}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{NodeUtil}{.}{isPropertyTest}{(}{compiler}{,}{n}{)}}{||}{{isPropertyAbsentTest}{(}{n}{)}}}{)}{{{}{{{recordPropertyName}{(}{{{n}{.}{getLastChild}{()}}{.}{getString}{()}}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{recordPropertyName}{(}{pname}{,}{qnameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setUseTypesForLocalOptimization}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{allDefinitionsEquivalent}{(}{singleSiteDefinitions}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseChangedFunctions}{(}{compiler}{,}{{new}{{FunctionVisitor}}{(}{blacklistedPropNames}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{void}{endCaseBody}{()}{{{}{{{super}{.}{endCaseBody}{()}}{;}}{{{indent}{--}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{compiler}{.}{getErrors}{()}}{)}}{.}{isEmpty}{()}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguage}{(}{LanguageMode.ECMASCRIPT8}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{objectWithBadKey}{=}{{findObjectWithNonStringifiableKey}{(}{realType}{,}{{new}{{{HashSet}}{<}{{JSType}}{>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{findMatching}{(}{name}{,}{{n}{.}{getSourceFileName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{currentScript.defaultExportLocalName}{!=}{null}}{)}{{{}{{{{assignNode}{.}{getParent}{()}}{.}{detach}{()}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{nameIsExported}{=}{{name}{.}{equals}{(}{currentScript.defaultExportLocalName}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{J2clCheckPassTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{jsType}}}
{AST_ROOT_SC2NF{{{TypeI}}{jsType}}}
{AST_ROOT_SC2NF{{void}{setMask}{(}{{int}{mask}}{)}{{{}{{{bitmask}{|=}{mask}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{info}{.}{isNoSideEffects}{()}}{)}{{{}}}{else}{{{}{{{sideEffectInfo}{.}{setTaintsGlobalState}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{config.parseTypeSyntax}{&&}{{peek}{(}{TokenType.OPEN_PAREN}{)}}}{)}}{||}{{peek}{(}{TokenType.OPEN_ANGLE}{)}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSDocInfo}}{{info}{=}{{NodeUtil}{.}{getBestJSDocInfo}{(}{node}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionInformation}}{{sideEffectInfo}{=}{{new}{{FunctionInformation}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionInformation}}{{representativeNode}{=}{{new}{{FunctionInformation}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{modulePath}{==}{null}}{)}{{{}{{{t}{.}{makeError}{(}{typeNode}{,}{COMMON_JS_MODULE_LOAD_ERROR}{,}{moduleName}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{modulePath}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{t}{.}{makeError}{(}{require}{,}{COMMON_JS_MODULE_LOAD_ERROR}{,}{requireName}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{assertPasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{treeDiff}{=}{{node}{.}{checkTreeEquals}{(}{{actual}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{ImmutableMap}}{<}{{String}}{,}{{Stats}}{>}}{getStats}{()}{{{}{{{calcTotalStats}{()}}{;}}{{return}{{this}{.}{summary}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeWarnForInvalidDestructuring}{(}{t}{,}{{lhs}{.}{getParent}{()}}{,}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.MISSING_OVERRIDE}{,}{{value}{?}{CheckLevel.WARNING}{:}{CheckLevel.OFF}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{output}}{.}{print}{(}{{{Joiner}{.}{on}{(}{STRING_CONSTANT}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{{new}{{Es6RenameReferences}}{(}{renameTable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{Es6RenameReferences}}{(}{renameTable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{FunctionInformation}}{>}}{{possibleSideEffects}{=}{{getSideEffectsForCall}{(}{callNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{ArrayListMultimap}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{IR}{.}{exprResult}{(}{assign}{)}}{.}{useSourceInfoIfMissingFromForTree}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{Matchers}{.}{googRequire}{()}}{.}{matches}{(}{{child}{.}{getFirstChild}{()}}{,}{metadata}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Matchers}{.}{googRequire}{()}}{.}{matches}{(}{{child}{.}{getFirstChild}{()}}{,}{metadata}{)}}}
{AST_ROOT_SC2NF{{{}{{{eatPredefinedString}{(}{PredefinedName.FROM}{)}}{;}}{{{moduleSpecifier}{=}{{(}{{LiteralToken}}{)}{{eat}{(}{TokenType.STRING}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testRequireUseStrict1}{()}{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{madeChange}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{node}{)}}{;}}{{{madeChange}{=}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Pattern}}{{argPattern}{=}{{Pattern}{.}{compile}{(}{STRING_CONSTANT}{,}{Pattern.DOTALL}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{(}{UTF_8}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{(}{UTF_8}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{(}{UTF_8}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{(}{UTF_8}{)}}{)}}}
{AST_ROOT_SC2NF{{{inputSourceMaps}{.}{put}{(}{{jsonFile}{.}{getPath}{()}}{,}{{new}{{SourceMapInput}}{(}{sourceMap}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{child}{!=}{{n}{.}{getFirstChild}{()}}}{)}{{{}{{{cc}{.}{listSeparator}{()}}{;}}{}}}}{{{add}{(}{child}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{member}{.}{isMemberFunctionDef}{()}}{&&}{{{member}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{{hasConstructor}{=}{true}}{;}}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{Node}}{{extendsClause}{=}{{n}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createCompilerOptions}{()}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{member}{.}{isMemberFunctionDef}{()}}{&&}{{{member}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{{hasConstructor}{=}{true}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.INCOMPATIBLE_STRICT_COMPARISON}{)}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTagAsStrict}{(}{{firstOutput}{&&}{{options}{.}{isEmitUseStrict}{()}}{&&}{{{options}{.}{getLanguageOut}{()}}{.}{isStrict}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{member}{.}{isMemberFunctionDef}{()}}{&&}{{{member}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{{hasConstructor}{=}{true}}{;}}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{{com.google.javascript.jscomp.parsing.parser.Parser.Config}}{{es6config}{=}{{newParserConfig}{(}{config}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CodingConvention}}{getCodingConvention}{()}{{{}{{return}{codingConvention}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{codingConvention}{=}{{new}{{GoogleCodingConvention}}{()}}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT8}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{config.languageMode}{!=}{LanguageMode.TYPESCRIPT}}{)}{{{}{{{errorReporter}{.}{warning}{(}{{STRING_CONSTANT}{+}{feature}}{,}{sourceName}{,}{{lineno}{(}{node}{)}}{,}{{charno}{(}{node}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{ParserRunner}{.}{createConfig}{(}{mode}{,}{Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}{,}{Config.RunMode.KEEP_GOING}{,}{null}{,}{true}{,}{StrictMode.SLOPPY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTagAsStrict}{(}{{firstOutput}{&&}{{shouldEmitUseStrict}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{expectStrictModeInput}{()}}{)}{{{}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ES5_STRICT}{,}{CheckLevel.ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setEmitUseStrict}{(}{flags.emitUseStrict}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDoWhileLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareDoWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareDoWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{googRequireNode}{=}{{IR}{.}{constNode}{(}{{IR}{.}{name}{(}{shortName}{)}}{,}{googRequireNode}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{getConstJSDoc}{(}{oldJSDoc}{,}{expr}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{hasConstructor}}{)}{{{}{{{addSyntheticConstructor}{(}{t}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{!}{{NodeUtil}{.}{isCallTo}{(}{value}{,}{STRING_CONSTANT}{)}}}{&&}{{!}{{(}{{{info}{!=}{null}}{&&}{{info}{.}{isConstructorOrInterface}{()}}}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isCallTo}{(}{{destructuringLhsNode}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{{var}{!=}{null}}{&&}{{{var}{.}{getInitialValue}{()}}{!=}{null}}}{&&}{{!}{{NodeUtil}{.}{isCallTo}{(}{{var}{.}{getInitialValue}{()}}{,}{STRING_CONSTANT}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{aliasVarNodeRhs}{==}{null}}{||}{{!}{{NodeUtil}{.}{isCallTo}{(}{aliasVarNodeRhs}{,}{STRING_CONSTANT}{)}}}}{)}{{{}{{{t}{.}{report}{(}{call}{,}{INVALID_GET_ALIAS}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{currentScript}{.}{getExportedNamespace}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{rewriteState}{.}{getExportedNamespaceOrScript}{(}{legacyNamespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{rewriteState}{.}{getExportedNamespaceOrScript}{(}{legacyNamespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isExportPropertyAssignment}{(}{n}{)}}{)}{{{}{{{recordExportsPropertyAssignment}{(}{t}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}{{{typeCheck}{(}{STRING_CONSTANT}{,}{JSTypeCreatorFromJSDoc.INHERITANCE_CYCLE}{,}{NewTypeInference.UNDEFINED_SUPER_CLASS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{IR}{.}{call}{(}{{IR}{.}{getprop}{(}{{IR}{.}{superNode}{()}}{,}{{IR}{.}{string}{(}{STRING_CONSTANT}{)}}{)}}{,}{{IR}{.}{thisNode}{()}}{,}{{IR}{.}{name}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{LanguageMode}{.}{fromString}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sourceMap}{.}{appendTo}{(}{out}{,}{{outputFile}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isSuper}{()}}{)}{{{}{{{visitSuper}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{add}{(}{last}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertValidOrderForChecks}{(}{checks}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertValidOrderForChecks}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{{CompilerPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeFoldConstants}}{(}{late}{,}{useTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{{rval}{>=}{NUMBER_CONSTANT}}{&&}{{rval}{<}{NUMBER_CONSTANT}}}{)}}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{EARLY_REFERENCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{declaresFunctionOrClass}{(}{n}{)}}}
{AST_ROOT_SC2NF{{public}{{DeclaredTypeRegistry}}{getScope}{()}{{{}{{return}{{this}{.}{scope}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{VariableReferenceCheck.EARLY_REFERENCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{isCallInLoop}{)}{{{}{{{fixUnitializedVarDeclarations}{(}{newBlock}{,}{newBlock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{codingConvention}{=}{{new}{{GoogleCodingConvention}}{()}}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{targetType}{.}{getGreatestSubtype}{(}{type}{)}}{.}{isBottom}{()}}}{)}{{{}{{{unusedMethodPolyfills}{.}{remove}{(}{method}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{PeepholeReplaceKnownMethods}}{(}{late}{,}{useTypesForOptimization}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeReplaceKnownMethods}}{(}{late}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeReplaceKnownMethods}}{(}{late}{,}{useTypesForOptimization}{)}}}
{AST_ROOT_SC2NF{{public}{boolean}{isBuiltinObject}{()}{{{}{{return}{{{this}{.}{rawType}}{.}{isBuiltinObject}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isClassy}{()}{{{}{{return}{{{!}{{isFunction}{()}}}{&&}{{!}{{isBuiltinObject}{()}}}{&&}{{!}{{isLiteralObject}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{equals}{(}{proto}{)}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isUnknownObject}{()}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{isUnknown}{()}}{||}{{(}{{{isUnknownObject}{()}}{&&}{{isLoose}{()}}}{)}}{||}{{(}{{{ft}{!=}{null}}{&&}{{ft}{.}{isTopFunction}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{nt}{.}{isBuiltinObject}{()}}{||}{{nt}{.}{isPropDefinedOnSubtype}{(}{pname}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{name}{.}{equals}{(}{JSTypes.OBJLIT_CLASS_NAME}{)}}{||}{{name}{.}{equals}{(}{STRING_CONSTANT}{)}}{||}{{name}{.}{equals}{(}{STRING_CONSTANT}{)}}}{,}{STRING_CONSTANT}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{commonTypes}}{.}{getEmptyObjectLiteral}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{==}{other}}{||}{{other}{.}{isBuiltinObject}{()}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isBuiltinObject}{()}}}{)}{{{}{{{{this}{.}{subtypes}}{.}{add}{(}{subtype}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RemoveUnusedPolyfillsTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{Ascii}{.}{toUpperCase}{(}{{Long}{.}{toString}{(}{nonnegativeHash}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions.J2clPassMode}}{{j2clPassMode}{=}{{CompilerOptions.J2clPassMode}{.}{valueOf}{(}{{Ascii}{.}{toUpperCase}{(}{flags.j2clPassMode}{)}}{)}}}{;}}{{{options}{.}{setJ2clPass}{(}{j2clPassMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{lowerParam}{=}{{Ascii}{.}{toLowerCase}{(}{param}{)}}}{;}}}
{AST_ROOT_SC2NF{{{compilationLevelParsed}{=}{{COMPILATION_LEVEL_MAP}{.}{get}{(}{{Ascii}{.}{toUpperCase}{(}{compilationLevel}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{addParserWarning}{(}{STRING_CONSTANT}{,}{{Ascii}{.}{toLowerCase}{(}{{visibility}{.}{toString}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{Ascii}{.}{toUpperCase}{(}{{result}{.}{toString}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{canonicalizedName}{=}{{{Ascii}{.}{toUpperCase}{(}{{value}{.}{trim}{()}}{)}}{.}{replaceFirst}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{n}{.}{getParent}{()}}}{;}}{{return}{{{NodeUtil}{.}{wasCasted}{(}{n}{)}}{||}{{isAssertionCall}{(}{parent}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{getTopObject}{()}}{;}}}
{AST_ROOT_SC2NF{{{!}{{t}{.}{isSubtypeOf}{(}{{{this}{.}{commonTypes}}{.}{getTopObject}{()}}{)}}}{&&}{{(}{{{!}{{t}{.}{hasTypeVariable}{()}}}{||}{{t}{.}{hasScalar}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{JSType}}{{objLitType}{=}{{commonTypes}{.}{getEmptyObjectLiteral}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{globalThisType}{=}{{{{this}{.}{commonTypes}}{.}{getTopObject}{()}}{.}{withLoose}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{==}{other}}{||}{{other.ns}{!=}{null}}}{||}{{!}{{other.nominalType}{.}{equals}{(}{{{this}{.}{commonTypes}}{.}{getObjectType}{()}}{)}}}}}
{AST_ROOT_SC2NF{{boolean}{isInhabitable}{()}{{{}{{return}{{this}{!=}{{{this}{.}{commonTypes}}{.}{getBottomObject}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{objType}{!=}{null}}{&&}{{!}{{objType.nominalType}{.}{isClassy}{()}}}}{&&}{{!}{{objType}{.}{isLoose}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{nameNode}{==}{null}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{name}{!=}{null}}{)}{{{}{{{{this}{.}{definitionNodeByDefinitionSite}}{.}{remove}{(}{node}{)}}{;}}{{{{this}{.}{nameDefinitionMultimap}}{.}{remove}{(}{name}{,}{def}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{pattern}{.}{replaceWith}{(}{{IR}{.}{name}{(}{tempVarName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{patternParam}{.}{replaceWith}{(}{newParam}{)}}{;}}}
{AST_ROOT_SC2NF{{{callNode}{.}{replaceWith}{(}{{replacement}{.}{useSourceInfoIfMissingFrom}{(}{callNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{candidateDefinition}{.}{replaceWith}{(}{varNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{first}{.}{replaceWith}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{placeholder}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{n}{.}{getParent}{()}}}{;}}{{{parent}{.}{replaceWith}{(}{fncBlock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{call}{)}}{;}}}
{AST_ROOT_SC2NF{{{msgNode}{.}{replaceWith}{(}{newValue}{)}}{;}}}
{AST_ROOT_SC2NF{{{statement}{.}{replaceWith}{(}{newStatement}{)}}{;}}}
{AST_ROOT_SC2NF{{{assignNode}{.}{replaceWith}{(}{rhs}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{enclosing}{!=}{null}}{&&}{{enclosing}{.}{isGeneratorFunction}{()}}}{)}{{{}{{{n}{.}{replaceWith}{(}{{IR}{.}{name}{(}{GENERATOR_THIS}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{elem}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{elem}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{lengthNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{newNumber}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}{;}}{{{n}{.}{replaceWith}{(}{result}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{newStringNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replacementNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{replacementNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{replacementNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{originalTypeofNode}{.}{replaceWith}{(}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{callNode}{.}{replaceWith}{(}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{subtree}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{subtree}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{replaceWith}{(}{{IR}{.}{empty}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{grandparent}{.}{replaceWith}{(}{functionNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{target}{.}{replaceWith}{(}{{value}{.}{cloneTree}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{node}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{stringNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{callNode}{.}{replaceWith}{(}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{callNode}{.}{replaceWith}{(}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{original}{.}{replaceWith}{(}{replacement}{)}}{;}}{{return}{replacement}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{replaceParent}{)}{{{}{{{parent}{.}{replaceWith}{(}{replacement}{)}}{;}}{}}}{else}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{superCall}{.}{replaceWith}{(}{superErrorExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{obj}{.}{replaceWith}{(}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{attachTypeExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{loadModuleStatement}{.}{replaceWith}{(}{moduleBlockNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{legacyQname}{)}}{;}}}
{AST_ROOT_SC2NF{{{exprResultNode}{.}{replaceWith}{(}{exportsObjectCreationNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{call}{.}{replaceWith}{(}{exportedNamespaceName}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{aliasReference}{.}{replaceWith}{(}{replacement}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{expressionWithScopeCall}{.}{replaceWith}{(}{scopeClosureBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newValue}{.}{useSourceInfoIfMissingFromForTree}{(}{msgNode}{)}}{;}}{{{msgNode}{.}{replaceWith}{(}{newValue}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{callNode}{.}{replaceWith}{(}{{replacementNode}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{member}{.}{replaceWith}{(}{memberVariable}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{forCondition}{.}{replaceWith}{(}{{IR}{.}{empty}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{whileNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{condition}{.}{replaceWith}{(}{replacementConditionNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{{caseBlock}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{result}{.}{getParent}{()}}{!=}{null}}{)}{{{}{{{result}{.}{detach}{()}}{;}}{}}}}{{{n}{.}{replaceWith}{(}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{replaceWith}{(}{{right}{.}{detach}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{oldRoot}{.}{replaceWith}{(}{newRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{call}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{not}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{newLiteralNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{enclosingCall}{.}{replaceWith}{(}{baseCall}{)}}{;}}}
{AST_ROOT_SC2NF{{{callNode}{.}{replaceWith}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNgInjectSetVisibility}{(}{)}{throws}{{Exception}}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{scopeMethodCall}{=}{{findScopeMethodCall}{(}{{t}{.}{getScopeRoot}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{n}{=}{{t}{.}{getScopeRoot}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{list}{.}{isEmpty}{()}}{?}{null}{:}{list}}{;}}}
{AST_ROOT_SC2NF{{return}{list}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Node}}{getRoot}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getContent}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Strings}{.}{nullToEmpty}{(}{{sourceMapCache}{.}{get}{(}{path}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{CachingTranspiler}}{(}{delegate}{,}{{CacheBuilder}{.}{newBuilder}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{CachingTranspiler}}{(}{delegate}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{output}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{n}{.}{hasXChildren}{(}{NUMBER_CONSTANT}{)}}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{castType}{.}{restrictByNotNullOrUndefined}{()}}{.}{isSubtype}{(}{exprType}{)}}{||}{{expr}{.}{isObjectLit}{()}}}{)}{{{}{{{expr}{.}{setJSType}{(}{castType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{CachingTranspiler}}{(}{delegate}{,}{{CacheBuilder}{.}{newBuilder}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Strings}{.}{nullToEmpty}{(}{{sourceMapCache}{.}{get}{(}{path}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RawNominalType}}{(}{commonTypes}{,}{defSite}{,}{name}{,}{typeParameters}{,}{Kind.RECORD}{,}{objKind}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RawNominalType}}{(}{commonTypes}{,}{defSite}{,}{name}{,}{typeParameters}{,}{Kind.INTERFACE}{,}{objKind}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableCollection}}{<}{{ExportInfo}}{>}}{exports}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnknownType}{()}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{list}{.}{isEmpty}{()}}{?}{null}{:}{list}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{hasConstructor}}{)}{{{}{{{addSyntheticConstructor}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{IR}{.}{comma}{(}{{IR}{.}{comma}{(}{{IR}{.}{comma}{(}{getTmpError}{,}{copyMessage}{)}}{,}{setStack}{)}}{,}{{IR}{.}{thisNode}{()}}{)}}{.}{useSourceInfoIfMissingFromForTree}{(}{superCall}{)}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{constructor}{,}{CANNOT_CONVERT}{,}{{STRING_CONSTANT}{+}{superClassQName}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{ancestorInterfaces}}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{script}{.}{addChildToFront}{(}{{googProvide}{.}{useSourceInfoIfMissingFromForTree}{(}{script}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{require}{.}{useSourceInfoIfMissingFromForTree}{(}{importDecl}{)}}{;}}}
{AST_ROOT_SC2NF{{{newChild}{.}{useSourceInfoWithoutLengthIfMissingFrom}{(}{child}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{node}{.}{useSourceInfoWithoutLengthIfMissingFromForTree}{(}{basisNode}{)}}{;}}{{{node}{.}{setOriginalName}{(}{originalName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{newNode}{.}{useSourceInfoWithoutLengthIfMissingFromForTree}{(}{sourceInfoNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{expr}{.}{useSourceInfoWithoutLengthIfMissingFromForTree}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{newChild}{.}{useSourceInfoIfMissingFrom}{(}{child}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{name}}}
{AST_ROOT_SC2NF{{if}{(}{strictMismatch}{)}{{{}{{{mismatches}{.}{add}{(}{{new}{{TypeMismatch}}{(}{found}{,}{required}{,}{error}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argType}{.}{isSubtypeWithoutStructuralTyping}{(}{paramType}{)}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{argType}{,}{paramType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{strictMismatch}{)}{{{}{{{implicitStructuralInterfaceUses}{.}{add}{(}{{new}{{TypeMismatch}}{(}{found}{,}{required}{,}{error}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argType}{.}{isSubtypeWithoutStructuralTyping}{(}{paramType}{)}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{argType}{,}{paramType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{recordStructuralInterfaceUses}{(}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{{Iterable}}{<}{{TypeMismatch}}{>}}{getImplicitInterfaceUses}{()}{{{}{{return}{{{getTypeValidator}{()}}{.}{getImplicitInterfaceUses}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{strictMismatch}{)}{{{}{{{implicitInterfaceUses}{.}{add}{(}{{new}{{TypeMismatch}}{(}{found}{,}{required}{,}{error}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argType}{.}{isSubtypeWithoutStructuralTyping}{(}{paramType}{)}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getTracerMode}{()}}{.}{isOn}{()}}{&&}{{tracker}{!=}{null}}}{)}{{{}{{{tracker}{.}{recordPassStop}{(}{passName}{,}{result}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getTracerMode}{()}}{.}{isOn}{()}}{&&}{{tracker}{!=}{null}}}{)}{{{}{{{tracker}{.}{recordPassStart}{(}{passName}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{compilerExecutor}{.}{runInCompilerThread}{(}{callable}{,}{{{options}{!=}{null}}{&&}{{{options}{.}{getTracerMode}{()}}{.}{isOn}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setTracerMode}{(}{config.tracerMode}{)}}{;}}}
{AST_ROOT_SC2NF{{{testEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testExport5}{()}{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Reference}}{ref}}{:}{refCollection}{)}{{{}{{{processReference}{(}{collector}{,}{ref}{,}{info}{,}{v}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{DependencyInfo}}{>}}{{parsedFiles}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{DependencyInfo}}{>}}{{depsFiles}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{DependencyInfo}}{>}}{{providesMap}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{(}{{{!}{{allowLoosePropertyAccessOnNode}{(}{n}{)}}}{||}{{objectType}{.}{isStruct}{()}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{canCreate}{)}{{{}{{return}{{createName}{(}{name}{)}}{;}}{}}}}{{return}{{allNames}{.}{get}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{Double}{.}{isNaN}{(}{d}{)}}}{)}{{{}{{{cc}{.}{addNumber}{(}{d}{,}{n}{)}}{;}}{}}}{else}{{{}{{{addJsString}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result.sourceMap}{)}}{.}{isEmpty}{()}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{REPORT_PATH_IO_ERROR}{,}{reportPath}{,}{{e}{.}{getMessage}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{REPORT_PATH_IO_ERROR}{,}{reportPath}{,}{{e}{.}{getMessage}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{current}{.}{isGetProp}{()}}{,}{STRING_CONSTANT}{,}{current}{)}}{;}}}
{AST_ROOT_SC2NF{{static}{boolean}{isEnhancedFor}{(}{{{Node}}{n}}{)}{{{}{{return}{{{n}{.}{isForOf}{()}}{||}{{n}{.}{isForIn}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{newNode}{(}{Token.FOR_IN}{,}{initializer}{,}{{transform}{(}{loopNode.collection}{)}}{,}{{transformBlock}{(}{loopNode.body}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Node}}{(}{Token.FOR_IN}{,}{target}{,}{cond}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateNodeType}{(}{Token.ROOT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateNodeType}{(}{Token.ROOT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{TranspileResult}}{transpile}{(}{{{Path}}{path}}{,}{{{String}}{code}}{)}{;}}}
{AST_ROOT_SC2NF{{{TranspileResult}}{{result}{=}{{transpiler}{.}{transpile}{(}{{Paths}{.}{get}{(}{path}{)}}{,}{s}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{BaseTranspiler.CompileResult}}{{result}{=}{{compiler}{.}{compile}{(}{SOURCE_JS}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BaseTranspiler.CompileResult}}{{result}{=}{{compiler}{.}{compile}{(}{SOURCE_JS}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isForIn}{()}}{)}{{{}{{return}{{n}{!=}{{parent}{.}{getFirstChild}{()}}}{;}}{}}}{else}{{{}{{return}{{{NodeUtil}{.}{getConditionExpression}{(}{parent}{)}}{!=}{n}}{;}}{}}}}}
{AST_ROOT_SC2NF{{source}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{(}{{parent}{.}{isForIn}{()}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isForOf}{()}}{||}{{n}{.}{isForIn}{()}}}{)}{{{}{{return}{{n}{.}{getSecondChild}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isForIn}{()}}{)}{{{}{{return}{parent}{;}}{}}}{else}{{{}{{return}{{{parent}{.}{getSecondChild}{()}}{.}{getNext}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{cur}{.}{isVanillaFor}{()}}{)}{{{}{{{iter}{=}{{cur}{.}{getChildAtIndex}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{forNode}{.}{isForIn}{()}}{||}{{forNode}{.}{isForOf}{()}}}}
{AST_ROOT_SC2NF{{c}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{!}{{n}{.}{isForIn}{()}}}}
{AST_ROOT_SC2NF{{{parent}{.}{isFor}{()}}{&&}{{!}{{parent}{.}{isForIn}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{parent}{.}{isForIn}{()}}}{&&}{{child}{==}{{parent}{.}{getFirstChild}{()}}}}{)}{{{}{{return}{parent}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{lhsOfForInLoop}{=}{{{gp}{.}{isForIn}{()}}{&&}{{{gp}{.}{getFirstFirstChild}{()}}{==}{declNode}}}}{;}}}
{AST_ROOT_SC2NF{{loopNode}{.}{isVanillaFor}{()}}}
{AST_ROOT_SC2NF{{{srcDeclaration}{.}{isConst}{()}}{&&}{{!}{{(}{{{srcParent}{.}{isForIn}{()}}{&&}{{srcDeclaration}{==}{{srcParent}{.}{getFirstChild}{()}}}}{)}}}}}
{AST_ROOT_SC2NF{{!}{{n}{.}{isForIn}{()}}}}
{AST_ROOT_SC2NF{{nextSibling}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{!}{{n}{.}{isForIn}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{enclosingFunc}{==}{null}}{||}{{!}{{enclosingFunc}{.}{isGeneratorFunction}{()}}}}{||}{{n}{.}{isForIn}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{isForIn}{()}}{)}{{{}{{{visitForIn}{()}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parent}{.}{isForIn}{()}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{expr}{.}{isForIn}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{expr}{.}{getParent}{()}}{.}{isForIn}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{lvalue}{.}{getParent}{()}}{.}{isForIn}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{{Node}}{{expr}{=}{{{n}{.}{isForIn}{()}}{?}{{n}{.}{getFirstChild}{()}}{:}{{NodeUtil}{.}{getConditionExpression}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isForIn}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isForIn}{()}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{node}{.}{isForIn}{()}}}{)}{{{}{{{tryJoinForCondition}{(}{node}{)}}{;}}{{{tryMinimizeCondition}{(}{{NodeUtil}{.}{getConditionExpression}{(}{node}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{parent}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{parent}{.}{isForIn}{()}}}{)}{{{}{{return}{{(}{{{parent}{.}{getSecondChild}{()}}{==}{expr}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{(}{{{parent}{.}{isForIn}{()}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{)}}}
{AST_ROOT_SC2NF{{return}{{{n}{.}{isForIn}{()}}{?}{null}{:}{{n}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{(}{{{parent}{.}{isForIn}{()}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{)}}}
{AST_ROOT_SC2NF{{!}{{n}{.}{isForIn}{()}}}}
{AST_ROOT_SC2NF{{control}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{{parent}{.}{isFor}{()}}{&&}{{!}{{parent}{.}{isForIn}{()}}}{&&}{{{NodeUtil}{.}{getConditionExpression}{(}{parent}{)}}{!=}{n}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{n}{.}{isForIn}{()}}}{)}{{{}{{{tryRemoveAssignment}{(}{t}{,}{{NodeUtil}{.}{getConditionExpression}{(}{n}{)}}{,}{state}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{var}{.}{getParentNode}{()}}{.}{isVar}{()}}{&&}{{!}{{{{var}{.}{getParentNode}{()}}{.}{getParent}{()}}{.}{isForIn}{()}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{NodeUtil}{.}{isLoopStructure}{(}{parent}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{currentStatement}{.}{isVanillaFor}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{isAssign}{()}}{&&}{{!}{{(}{{{parent}{.}{isVanillaFor}{()}}{||}{{parent}{.}{isForIn}{()}}}{)}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isAssign}{()}}{&&}{{(}{{{parent}{.}{isExprResult}{()}}{||}{{parent}{.}{isVanillaFor}{()}}{||}{{parent}{.}{isReturn}{()}}}{)}}}}
{AST_ROOT_SC2NF{{(}{{{{declaration}{.}{getParent}{()}}{.}{isVar}{()}}{&&}{{!}{{NodeUtil}{.}{isLoopStructure}{(}{{declaration}{.}{getGrandparent}{()}}{)}}}}{)}}}
{AST_ROOT_SC2NF{{{nextSibling}{.}{isVanillaFor}{()}}{&&}{{{nextSibling}{.}{getFirstChild}{()}}{.}{isEmpty}{()}}}}
{AST_ROOT_SC2NF{{{Node}}{{initializer}{=}{{{NodeUtil}{.}{isAnyFor}{(}{n}{)}}{?}{{n}{.}{getFirstChild}{()}}{:}{{IR}{.}{empty}{()}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{parent}{.}{isVanillaFor}{()}}}{)}{{{}{{{assign}{=}{{NodeUtil}{.}{newExpr}{(}{assign}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{grandparent}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{{}{{{appendFieldStart}{(}{out}{,}{name}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{scope}{,}{STRING_CONSTANT}{,}{{t}{.}{getScopeRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{preserveBlock}{=}{{{n}{.}{isNormalBlock}{()}}{&&}{{!}{{n}{.}{isSyntheticBlock}{()}}}}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{isNormalBlock}{()}}{||}{{NodeUtil}{.}{isAnyFor}{(}{parent}{)}}{||}{{parent}{.}{isScript}{()}}{||}{{parent}{.}{isModuleBody}{()}}{||}{{parent}{.}{isLabel}{()}}}}
{AST_ROOT_SC2NF{{boolean}{{scanInnerBlocks}{=}{{{n}{.}{isRoot}{()}}{||}{{NodeUtil}{.}{isFunctionBlock}{(}{n}{)}}{||}{{n}{.}{isModuleBody}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{TypedScope}}{{s}{=}{{{new}{{TypedScopeCreator}}{(}{compiler}{,}{{CodingConventions}{.}{getDefault}{()}}{)}}{.}{createInitialScope}{(}{{new}{{Node}}{(}{Token.ROOT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testMissingRequireStrict}{(}{js}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testMissingRequireStrict}{(}{js}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testMissingRequireStrict}{(}{js}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckRequiresForConstructors}}{(}{compiler}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{optimizePropertyIndex}}{&&}{{isObjectLiteralThatCanBeSkipped}{(}{type}{)}}}{)}{{{}{{{type}{=}{{getSentinelObjectLiteral}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypesForOptimization}{,}{options.assumeAccurateNullUndefinedTypes}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{true}{,}{false}{,}{false}{)}}{,}{{new}{{PeepholeFoldConstants}}{(}{true}{,}{false}{)}}{)}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypes}{,}{assumeAccurateNullUndefinedTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{,}{false}{)}}}
{AST_ROOT_SC2NF{{{getInvalidationsErrors}{()}}{.}{get}{(}{t}{)}}}
{AST_ROOT_SC2NF{{throw}{{new}{{RuntimeException}}{(}{cause}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{exception}{[}{NUMBER_CONSTANT}{]}}{!=}{null}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{{exception}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{TextFormat}{.}{merge}{(}{textProto}{,}{builder}{)}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{initialize}{(}{{metadata}{.}{getCompiler}{()}}{)}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableUnusedLocalAssignmentCheck}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getOptions}{()}}}{;}}{{if}{(}{enableUnusedLocalAssignmentCheck}{)}{{{}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.UNUSED_LOCAL_VARIABLE}{,}{CheckLevel.WARNING}{)}}{;}}{}}}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{invalidationMap}{.}{get}{(}{t}{)}}}
{AST_ROOT_SC2NF{{private}{{String}}{getNewName}{()}{{{}{{return}{{paramPrefix}{+}{{uniqueId}{++}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}}{;}}{{{{this}{.}{paramPrefix}}{=}{{Preconditions}{.}{checkNotNull}{(}{paramPrefix}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{true}{,}{false}{)}}{,}{{new}{{PeepholeFoldConstants}}{(}{true}{,}{false}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypesForOptimization}{)}}}
{AST_ROOT_SC2NF{{{{(}{{new}{{NodeTraversal}}{(}{compiler}{,}{this}{,}{scopeCreator}{)}}{)}}{.}{traverseAtScope}{(}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{addLibrary}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{setLanguage}{(}{ES6}{,}{ES5}{)}}{;}}{{{testDoesNotInject}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addLibrary}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{setLanguage}{(}{ES6}{,}{ES5}{)}}{;}}{{{testDoesNotInject}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateBlock}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateNodeType}{(}{Token.DEFAULT_CASE}{,}{n}{)}}{;}}{{{validateChildCount}{(}{n}{)}}{;}}{{{validateBlock}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{block}{.}{setIsAddedBlock}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{block}{.}{setIsAddedBlock}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEmpty}{()}{{{}{{{{this}{.}{instrumentationPb}}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSwitchCase}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemoveDo}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{src}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testForIn}{()}{{{}{{{inFunction}{(}{STRING_CONSTANT}{)}}{;}}{{{inFunction}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testDivision}{()}{{{}{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testNgInjectToArrowFunctions}{()}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testReturnType}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRestParameter}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testLocal}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{testSameLocal}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSameLocal}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSameWithInversion}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{fullJsCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isClinitMethod}{(}{node}{)}}}{)}{{{}{return;}{}}}}{{{trySubstituteEmptyFunction}{(}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{tryRemovingClinit}{(}{node}{,}{parent}{)}}{;}}{{if}{(}{{isNewControlBranch}{(}{parent}{)}}{)}{{{}{{{clinitsCalledAtBranch}{=}{clinitsCalledAtBranch.parent}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{FunctionInformation}}{>}}{{possibleSideEffects}{=}{{getSideEffectsForCall}{(}{callNode}{,}{definitionProvider}{,}{representativeNodesByName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PropertyType}}{{pt}{=}{{getPropTypeHelper}{(}{jsdoc}{,}{getProp}{,}{rawType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{lint}{(}{{Paths}{.}{get}{(}{filename}{)}}{,}{{new}{{Compiler}}{(}{System.out}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{EARLY_REFERENCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setProtectHiddenSideEffects}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{{outOfBandTraversal}{=}{{new}{{NodeTraversal}}{(}{compiler}{,}{this}{,}{scopeCreator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{,}{expr}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.EXPR_RESULT}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{root}{=}{{compiler}{.}{parseTestCode}{(}{js}{)}}}{;}}{{{{assertThat}{(}{{compiler}{.}{getErrors}{()}}{)}}{.}{isEmpty}{()}}{;}}{{return}{root}{;}}{}}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{,}{{new}{{DuplicateDeclarationHandler}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isConstructor}{(}{n}{)}}{)}{{{}{{{markConstructorToProcess}{(}{n}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{RemoveCode}}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{handleStubDefinition}{(}{t}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{memberType}{=}{{parseTypeExpressionList}{(}{typeName}{,}{{next}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{memberType}{=}{{parseTypeExpressionList}{(}{{next}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lastIndex}{=}{{replacement}{.}{getEndPosition}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{compilerExecutor}{.}{runInCompilerThread}{(}{callable}{,}{{{options}{!=}{null}}{&&}{{{options}{.}{getTracerMode}{()}}{==}{TracerMode.ALL}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{FunctionInformation}}{>}}{{possibleSideEffects}{=}{{getSideEffectsForCall}{(}{callNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{ArrayListMultimap}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Object}}{object}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{token}{==}{Token.BLOCK}}{)}}{;}}{{{putBooleanProp}{(}{SYNTHETIC_BLOCK_PROP}{,}{val}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setTypeI}{(}{{{@}{Nullable}}{{TypeI}}{type}}{)}{{{}{{{{this}{.}{typei}}{=}{type}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{public}{{TypeI}}{getTypeI}{()}{{{}{{return}{typei}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setJSType}{(}{{{@}{Nullable}}{{JSType}}{jsType}}{)}{{{}{{{{this}{.}{typei}}{=}{jsType}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{target}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{parent}{)}}{;}}{{{parent}{.}{removeChild}{(}{this}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{AncestorIterable}}{getAncestors}{()}{{{}{{return}{{new}{{AncestorIterable}}{(}{{checkNotNull}{(}{{this}{.}{getParent}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{public}{{Node}}{getParent}{()}{{{}{{return}{parent}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{setPropListHead}{(}{{{@}{Nullable}}{{PropListItem}}{propListHead}}{)}{{{}{{{{this}{.}{propListHead}}{=}{propListHead}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{getPropListHeadForTesting}{()}{{{}{{return}{propListHead}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setStaticSourceFile}{(}{{{@}{Nullable}}{{StaticSourceFile}}{file}}{)}{{{}{{{this}{.}{putProp}{(}{STATIC_SOURCE_FILE}{,}{file}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Object}}{value}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{this}{.}{propListHead}}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{propListHead}}{=}{other.propListHead}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{target}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{prevChild.next}{,}{STRING_CONSTANT}{)}}{;}}{{{replaceChild}{(}{prevChild.next}{,}{newChild}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{child.parent}{==}{null}}{)}}{;}}{{{child.parent}{=}{this}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{public}{{Node}}{getSecondChild}{()}{{{}{{return}{first.next}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{public}{{Node}}{getFirstChild}{()}{{{}{{return}{first}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{abstract}{{PropListItem}}{chain}{(}{{{@}{Nullable}}{{PropListItem}}{next}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{PropListItem}}{chain}{(}{{{@}{Nullable}}{{PropListItem}}{next}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{getNext}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{memberType}{=}{{parseTypeExpressionList}{(}{typeName}{,}{{next}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{condition}{.}{isCall}{()}}{&&}{{condition}{.}{hasTwoChildren}{()}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{node}{.}{hasTwoChildren}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{callName}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{n}{.}{hasTwoChildren}{()}}}}
{AST_ROOT_SC2NF{{boolean}{{isDeprecatedCall}{=}{{{callNode}{.}{hasTwoChildren}{()}}{&&}{{callName}{.}{isGetProp}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{hasTwoChildren}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{left}{.}{hasTwoChildren}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{hasTwoChildren}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{node}{.}{hasTwoChildren}{()}}{,}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{createSourceMap}{)}{{{}{{{mcp}{.}{generateSourceMap}{(}{code}{,}{sourceMap}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setReferencedType}{(}{{new}{{NoResolvedType}}{(}{registry}{,}{{getReferenceName}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fieldType}{=}{{createFromTypeNodesInternal}{(}{{fieldTypeNode}{.}{getLastChild}{()}}{,}{sourceName}{,}{scope}{,}{true}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{templateTypes}{)}}{.}{isEmpty}{()}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{getShortNameForRequire}{(}{namespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{getShortNameForRequire}{(}{namespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{getShortNameForRequire}{(}{namespaceToRequire}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fieldType}{=}{{createFromTypeNodesInternal}{(}{{fieldTypeNode}{.}{getLastChild}{()}}{,}{sourceName}{,}{scope}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setReferencedType}{(}{{registry}{.}{getNativeObjectType}{(}{JSTypeNative.NO_RESOLVED_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{Ascii}{.}{toUpperCase}{(}{rightmostName}{)}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isAnalyzableObjectDefinePropertiesDefinition}{(}{n}{)}}{)}}{;}}{{return}{{ImmutableList}{.}{of}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{parent}{.}{isVanillaFor}{()}}{,}{STRING_CONSTANT}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{reportPath}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{NameInformation}}{referring}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{NameInformation}}{referring}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{ns}{,}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{name}{)}}{;}}{{{scopes}{.}{put}{(}{node}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{node}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{name}{,}{node}{)}{;}}{{{checkState}{(}{{node}{.}{isCall}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{name}{,}{{parent}{.}{getFirstChild}{()}}{)}{;}}{{{checkState}{(}{{parent}{.}{isAssign}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkLocalityOfMarkedCalls}{(}{source}{,}{expected}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{checkLocalityOfMarkedCalls}{(}{source}{,}{expected}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{{templateSrc}{.}{replace}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{recvType}{=}{{simpleInferExprTypeRecur}{(}{recv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{simpleInferExprTypeRecur}{(}{argNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{name}{=}{{NodeUtil}{.}{getName}{(}{n}{)}}}{;}}{{{noSideEffectExterns}{.}{add}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{qname}{!=}{null}}{&&}{{noSideEffectExterns}{.}{contains}{(}{qname}{)}}}{&&}{{!}{isDefinedInSrc}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{ParamGroup}}{,}{{{CompilationParam}}{[]}}{>}}{{compilationParamsByGroup}{=}{{new}{{{EnumMap}}{<>}}{(}{{{ParamGroup}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{functionA}{.}{getBodyNode}{()}}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{mainFunction}{.}{getAstNode}{()}}{.}{isRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{mainFunction}{.}{getBodyNode}{()}}{.}{isRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isNormalBlock}{()}}{&&}{{n}{.}{hasChildren}{()}}{&&}{{isReturnTypeNullable}{(}{{n}{.}{getParent}{()}}{)}}{&&}{{!}{{hasSingleThrow}{(}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{statement}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getFirstChild}{()}}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{currentFile}{.}{markNameProcessed}{(}{{nameNode}{.}{getQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{root}{.}{isRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{originalBody}{.}{isNormalBlock}{()}}}{)}{{{}{{{originalBody}{=}{{{IR}{.}{block}{(}{{IR}{.}{returnNode}{(}{originalBody}{)}}{)}}{.}{useSourceInfoFromForTree}{(}{originalBody}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{body}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{{body}{.}{getNext}{()}}{==}{null}}{&&}{{body}{.}{isNormalBlock}{()}}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isExprResult}{()}}{||}{{n}{.}{isNormalBlock}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{block}{.}{isNormalBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{node}{.}{isFunction}{()}}{&&}{{!}{{{NodeUtil}{.}{getFunctionBody}{(}{node}{)}}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{body}{.}{isNormalBlock}{()}}{)}{{{}{{{validateBlock}{(}{body}{)}}{;}}{}}}{else}{{{}{{{validateExpression}{(}{body}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isNormalBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{newChild}{.}{isNormalBlock}{()}}{)}{{{}{{{NodeUtil}{.}{tryMergeBlock}{(}{newChild}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isScript}{()}}}{&&}{{!}{{n}{.}{isNormalBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{parent}{.}{isScript}{()}}{||}{{(}{{{parent}{.}{isNormalBlock}{()}}{&&}{{{parent}{.}{getParent}{()}}{.}{isFunction}{()}}}{)}}}}
{AST_ROOT_SC2NF{{c}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{c}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{caseBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{labeledStatement}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{last}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{currentStatement}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{favorsCommaOverSemiColon}}{&&}{{!}{{block}{.}{isNormalBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parent}{!=}{null}}{&&}{{(}{{{parent}{.}{isNormalBlock}{()}}{||}{{parent}{.}{isScript}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{s}{.}{isFunctionScope}{()}}{&&}{{{{s}{.}{getRootNode}{()}}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{{node}{.}{children}{()}}{)}{{{}{{if}{(}{{child}{.}{isNormalBlock}{()}}{)}{{{}{{{blocks}{.}{add}{(}{child}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{!}{{{target}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{target}{.}{getParent}{()}}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{{!}{{{n}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{n}{.}{getParent}{()}}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{boolean}{{isVar}{=}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{&&}{{{parent}{.}{getParent}{()}}{.}{isNormalBlock}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{isGoogScopeFunctionBody}{(}{enclosingFunctionBody}{)}}{&&}{{scopeRoot}{.}{isNormalBlock}{()}}{&&}{{!}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isControlStructureCodeBlock}{(}{n}{,}{c}{)}}{&&}{{!}{{c}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{{!}{{setFunction}{.}{hasChildren}{()}}}{||}{{!}{{{setFunction}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}{||}{{!}{{{setFunction}{.}{getSecondChild}{()}}{.}{isParamList}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{getFunction}{.}{hasChildren}{()}}}{||}{{!}{{{getFunction}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isFunction}{()}}}{||}{{!}{{{n}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{umdPattern.activeBranch}{.}{isNormalBlock}{()}}{&&}{{{umdPattern.activeBranch}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isEmpty}{()}}{||}{{(}{{{n}{.}{isNormalBlock}{()}}{&&}{{!}{{n}{.}{hasChildren}{()}}}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{next}{!=}{null}}{&&}{{next}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{body}{.}{isNormalBlock}{()}}}{||}{{!}{{body}{.}{hasOneChild}{()}}}{||}{{!}{{{body}{.}{getFirstChild}{()}}{.}{isReturn}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{blockNode}{.}{isNormalBlock}{()}}{)}}{;}}{{if}{(}{{blockNode}{.}{hasChildren}{()}}{)}{{{}{{{markAllPropsRead}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isNormalBlock}{()}}{)}{{{}{{{visitBlock}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isNormalBlock}{()}}{)}}{;}}{{return}{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{addingRoot}{.}{isNormalBlock}{()}}{||}{{addingRoot}{.}{isModuleBody}{()}}{||}{{addingRoot}{.}{isScript}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{n}{.}{isNormalBlock}{()}}{&&}{{{n}{.}{getParent}{()}}{!=}{null}}}{&&}{{{n}{.}{getParent}{()}}{.}{isFunction}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{for}{(}{;}{{{!}{{currentParent}{.}{isScript}{()}}}{&&}{{!}{{currentParent}{.}{isNormalBlock}{()}}}}{;}{{current}{=}{currentParent}}{,}{{currentParent}{=}{{currentParent}{.}{getParent}{()}}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{{parent}{.}{isScript}{()}}{||}{{{{grandparent}{!=}{null}}{&&}{{grandparent}{.}{isFunction}{()}}}{&&}{{parent}{.}{isNormalBlock}{()}}}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{body}{.}{isNormalBlock}{()}}{&&}{{!}{{body}{.}{hasChildren}{()}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{n}{.}{isNormalBlock}{()}}{&&}{{n}{.}{isSyntheticBlock}{()}}}{)}}{||}{{n}{.}{isScript}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{expectedBlock}{.}{isNormalBlock}{()}}{?}{expectedBlock}{:}{null}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{subtree}{.}{isScript}{()}}}{&&}{{!}{{subtree}{.}{isNormalBlock}{()}}}}{)}{{{}{{return}{subtree}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{maybeAssign}{.}{isNormalBlock}{()}}{||}{{maybeAssign}{.}{isScript}{()}}{||}{{NodeUtil}{.}{isStatement}{(}{maybeAssign}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isNormalBlock}{()}}{&&}{{!}{{loneBlocks}{.}{isEmpty}{()}}}{&&}{{{loneBlocks}{.}{peek}{()}}{==}{n}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{finallyBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{tryBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{then}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{!}{isArrow}}{&&}{{!}{isSignature}}{&&}{{!}{{bodyNode}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{!}{{irNode}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{collectionRoot}{.}{isScript}{()}}{||}{{collectionRoot}{.}{isRoot}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{externs}{.}{isRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{mainRoot}{.}{isRoot}{()}}{&&}{{!}{{mainRoot}{.}{hasChildren}{()}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertNode}{(}{{functionA}{.}{getBodyNode}{()}}{)}}{.}{hasType}{(}{Token.BLOCK}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertNode}{(}{{mainFunction}{.}{getAstNode}{()}}{)}}{.}{hasType}{(}{Token.ROOT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertNode}{(}{{mainFunction}{.}{getBodyNode}{()}}{)}}{.}{hasType}{(}{Token.ROOT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{ImmutableList}{.}{of}{(}{qmark}{,}{bang}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{scopeRoot}{.}{isNormalBlock}{()}}{&&}{{{scopeRoot}{.}{getParent}{()}}{!=}{null}}}{&&}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{(}{{{parent}{.}{isScript}{()}}{||}{{(}{{{parent}{.}{isNormalBlock}{()}}{&&}{{!}{{parent}{.}{isSyntheticBlock}{()}}}{&&}{{!}{{parent}{.}{isAddedBlock}{()}}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{block}{.}{isNormalBlock}{()}}{&&}{{{block}{.}{getParent}{()}}{.}{isTry}{()}}{&&}{{{{block}{.}{getParent}{()}}{.}{getFirstChild}{()}}{==}{block}}}}
{AST_ROOT_SC2NF{{{{{node}{.}{isNormalBlock}{()}}{&&}{{parent}{!=}{null}}}{&&}{{parent}{.}{isTry}{()}}}{&&}{{{NodeUtil}{.}{getCatchBlock}{(}{parent}{)}}{==}{node}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isNormalBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}{||}{{!}{{isGoogModuleCall}{(}{{n}{.}{getFirstChild}{()}}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{block}{.}{isNormalBlock}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{node}{.}{isNormalBlock}{()}}{)}{{{}{{{node}{.}{setToken}{(}{Token.SCRIPT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{needsSemicolon}{=}{{{parent}{!=}{null}}{&&}{{(}{{{parent}{.}{isExprResult}{()}}{||}{{parent}{.}{isNormalBlock}{()}}{||}{{parent}{.}{isScript}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{deleteWhitespaceBefore}{&&}{{parent}{!=}{null}}}{&&}{{(}{{{parent}{.}{isScript}{()}}{||}{{parent}{.}{isNormalBlock}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parentNode}{.}{isNormalBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{!}{{currentScope}{.}{hasThis}{()}}}{&&}{{NodeUtil}{.}{containsType}{(}{{fn}{.}{getLastChild}{()}}{,}{Token.SUPER}{,}{NodeUtil.MATCH_NOT_FUNCTION}{)}}}}
{AST_ROOT_SC2NF{{{Renamer}}{createForChildScope}{(}{{boolean}{hoisted}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{renamer}{=}{{{nameStack}{.}{peek}{()}}{.}{createForChildScope}{(}{{!}{{NodeUtil}{.}{createsBlockScope}{(}{declarationRoot}{)}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isInferrableConst}{(}{jsdoc}{,}{name}{,}{false}{)}}{)}{{{}{{{jsdoc}{=}{{pullJsdocTypeFromAst}{(}{compiler}{,}{jsdoc}{,}{name}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isInferrableConst}{(}{jsdoc}{,}{nameNode}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{STRING_CONSTANT}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{propAccessNode}{,}{ABSTRACT_SUPER_METHOD_NOT_CALLABLE}{,}{funName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{language}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{language}}{;}}{{{{this}{.}{languageOut}}{=}{language}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{argList}{=}{{NodeUtil}{.}{getFunctionParameters}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{argList}{=}{{NodeUtil}{.}{getFunctionParameters}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MalformedException}}{(}{{STRING_CONSTANT}{+}{node}}{,}{fnChild}{)}}{;}}}
{AST_ROOT_SC2NF{{{findDeclaredNames}{(}{functionBody}{,}{renamer}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{declarationRoot}{.}{isFunction}{()}}}{)}{{{}{{{findDeclaredNames}{(}{declarationRoot}{,}{renamer}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isCallInLoop}{)}{{{}{{{fixUninitializedVarDeclarations}{(}{newBlock}{,}{newBlock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{declaration}{.}{isName}{()}}{||}{{declaration}{.}{isStringKey}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{clear}{()}{{{}{{{providedNamespaces}{.}{clear}{()}}{;}}{{{seenNames}{.}{clear}{()}}{;}}{{{constructorsToProcess}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{prefix}}{:}{{Iterables}{.}{concat}{(}{seenNames}{,}{providedNamespaces}{)}}{)}{{{}{{if}{(}{{fullyQualifiedName}{.}{startsWith}{(}{prefix}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{instrumentationData}{.}{get}{(}{fileName}{)}}{!=}{null}}{)}{{{}{{{node}{.}{addChildrenToFront}{(}{{{newHeaderNode}{(}{traversal}{,}{node}{)}}{.}{removeChildren}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{node}{.}{addChildrenToFront}{(}{{{newHeaderNode}{(}{traversal}{,}{node}{)}}{.}{removeChildren}{()}}{)}}{;}}{{{instrumentBranchCoverage}{(}{traversal}{,}{{instrumentationData}{.}{get}{(}{fileName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isUnionType}{()}}{?}{{{this}{.}{toMaybeUnionType}{()}}{.}{getAlternatesWithoutStructuralTyping}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{getType}{(}{typeObj}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{getType}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{BOTTOM_OBJECT}}{=}{{{{this}{.}{registry}}{.}{getNativeType}{(}{JSTypeNative.NO_OBJECT_TYPE}{)}}{.}{toMaybeObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{}{{{objectType}{=}{{objectType}{.}{getTopDefiningInterface}{(}{propName}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isInterface}{()}}{)}{{{}{{return}{{{getInstanceType}{()}}{.}{getTopDefiningInterface}{(}{propertyName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lvalueType}{.}{isEnumElement}{()}}{)}{{{}{{{lvalueType}{=}{{lvalueType}{.}{getEnumeratedTypeOfEnumElement}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{enumeratedType}{=}{{{requiredType}{.}{getProp}{(}{{new}{{QualifiedName}}{(}{pname}{)}}{)}}{.}{getEnumeratedTypeOfEnumElement}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{enumeratedType}{=}{{{requiredType}{.}{getProp}{(}{{new}{{QualifiedName}}{(}{pname}{)}}{)}}{.}{getEnumeratedTypeOfEnumElement}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{tmp}{=}{{NominalType}{.}{join}{(}{n1}{,}{n2}{)}}}{;}}{{if}{(}{{tmp}{!=}{null}}{)}{{{}{{return}{{tmp}{.}{getInstanceAsJSType}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NominalType}}{{nominal}{=}{{NominalType}{.}{join}{(}{nt1}{,}{nt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{ClosureOptimizePrimitives}}{(}{compiler}{,}{propertyRenamingEnabled}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}{{{n}{.}{removeFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parent}{.}{removeFirstChild}{()}}{;}}}
{AST_ROOT_SC2NF{{{{!}{currentScript.declareLegacyNamespace}}{&&}{{currentScript.defaultExportRhs}{==}{null}}}{&&}{{namedExport}{.}{hasInlinableName}{(}{{currentScript.exportsToInline}{.}{keySet}{()}}{)}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{o}{instanceof}{{JSType}}}{,}{STRING_CONSTANT}{,}{o}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeIRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{DEFAULT_EXTERNS}{+}{externs}}{,}{js}{,}{expected}{,}{null}{,}{warning}{,}{description}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{testSets}{(}{js}{,}{output}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{super}{.}{enableNormalize}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{DisambiguatePropertiesTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{{{parseTypeInfo}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{{t}{.}{inGlobalHoistScope}{()}}{||}{{t}{.}{inModuleScope}{()}}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{assertError}{(}{e}{)}}{.}{hasType}{(}{type}{)}}{;}}{{{assertEquals}{(}{e.lineNumber}{,}{lineNumber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertError}{(}{{result.errors}{[}{NUMBER_CONSTANT}{]}}{)}}{.}{hasType}{(}{errorType}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result.success}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{{compiler}{.}{getResult}{()}}{.}{success}}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{{currentModule.importsByLongRequiredName}{.}{put}{(}{{extractFirstArgumentName}{(}{callNode}{)}}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setPolymerVersion}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{polymerVersion}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.deadAssignmentElimination}{)}{{{}{{{passes}{.}{add}{(}{deadAssignmentsElimination}{)}}{;}}{{if}{(}{{options.polymerVersion}{==}{null}}{)}{{{}{{{passes}{.}{add}{(}{deadPropertyAssignmentElimination}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.polymerVersion}{!=}{null}}{)}{{{}{{{checks}{.}{add}{(}{polymerPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setPolymerVersion}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{other}{.}{isGeneric}{()}}{)}{{{}{{{other}{=}{{other}{.}{instantiateGenericsWithUnknown}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{this}{.}{equals}{(}{other}{)}}{)}{{{}{{return}{true}{;}}{}}}}{{return}{{{instantiateGenericsWithUnknown}{()}}{.}{isSubtypeOfHelper}{(}{other}{,}{checkThisType}{,}{subSuperMap}{,}{boxedInfo}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isGeneric}{()}}{)}{{{}{{return}{{{instantiateGenericsWithUnknown}{()}}{.}{transformByApplyProperty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{rootNode}{!=}{parent.rootNode}}{,}{STRING_CONSTANT}{,}{rootNode}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDontCrashCtorAliasWithEnum}{()}{{{}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testGlobalObjectDeclaredToPreserveItsPreviousValue2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjLitAssignmentDepth2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isConstDeclaration}{()}{{{}{{return}{{{getParent}{()}}{.}{isConst}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVarDeclaration}{()}{{{}{{return}{{{getParent}{()}}{.}{isVar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{traverseClass}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setPrettyPrint}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{prettyPrint}}{=}{{options}{.}{isPrettyPrint}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{zipEntryPath}{=}{{JAR_URL_PREFIX}{+}{absoluteZipPath}{+}{BANG_SLASH}{+}{entryPath}}}{;}}}
{AST_ROOT_SC2NF{{{options.prettyPrint}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{prettyPrint}}{=}{options.prettyPrint}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testJqueryExpandedEachExpansionEs6ComputedProp}{()}{{{}{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{ExpandJqueryAliases.JQUERY_UNABLE_TO_EXPAND_INVALID_NAME}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setPrettyPrint}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{prettyPrint}}{=}{{options}{.}{isPrettyPrint}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setPolymerVersion}{(}{{value}{?}{NUMBER_CONSTANT}{:}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fix}{.}{getReplacements}{()}}{.}{keySet}{()}}}
{AST_ROOT_SC2NF{{nameDefinitionMultimap}{.}{keySet}{()}}}
{AST_ROOT_SC2NF{{nameDefinitionMultimap}{.}{keys}{()}}}
{AST_ROOT_SC2NF{{nameDefinitionMultimap}{.}{keySet}{()}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{scope}{.}{isGlobal}{()}}{,}{scope}{)}}{;}}{{{scanVars}{(}{n}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{createCompilerOptions}{()}}}{;}}{{{options}{.}{setCheckTypes}{(}{true}{)}}{;}}{{{test}{(}{options}{,}{STRING_CONSTANT}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testTypeParsingOnWithVerbose}{()}{{{}{{{args}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.TYPE_PARSE_ERROR}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{markConstAndCopyJsDoc}{(}{assignNode}{,}{jsdocNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{markConstAndCopyJsDoc}{(}{target}{,}{target}{)}}{;}}}
{AST_ROOT_SC2NF{{{markConstAndCopyJsDoc}{(}{jsdocNode}{,}{jsdocNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Iterables}{.}{getLast}{(}{list}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{super}{.}{setCode}{(}{cachedCode}{,}{{Objects}{.}{equals}{(}{{this}{.}{getCharset}{()}}{,}{StandardCharsets.UTF_8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{super}{.}{setCode}{(}{cachedCode}{,}{{Objects}{.}{equals}{(}{{this}{.}{getCharset}{()}}{,}{StandardCharsets.UTF_8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{ns}}{!=}{null}}{)}{{{}{{{builder}{.}{append}{(}{{this}{.}{ns}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{inheritedPropDef.methodType}{!=}{null}}{)}{{{}{{{propMethodTypesToProcess}{.}{put}{(}{pname}{,}{inheritedPropDef.methodType}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFinalized}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{getCtorPropDeclaredType}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionContextStack}}{.}{addLast}{(}{{initialGeneratorContext}{?}{FunctionFlavor.GENERATOR}{:}{FunctionFlavor.NORMAL}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{namespaceArg}{=}{{crDefineCallNode}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{pathArg}{=}{{crExportPathNode}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{target}{=}{{{call}{.}{getSecondChild}{()}}{.}{getQualifiedName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{{BASE64_DECODE_MAP}{[}{c}{]}}}{;}}{{assert}{{(}{{result}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{:}{STRING_CONSTANT}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParseTree}}{{arrowFunctionBody}{=}{{parseArrowFunctionBody}{(}{expressionIn}{,}{FunctionFlavor.ASYNCHRONOUS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ParseTree}}{{arrowFunctionBody}{=}{{parseArrowFunctionBody}{(}{expressionIn}{,}{FunctionFlavor.NORMAL}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{FunctionFlavor.GENERATOR}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{FunctionFlavor.NORMAL}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{FunctionFlavor.ASYNCHRONOUS}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{FunctionFlavor.ASYNCHRONOUS}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{{isGenerator}{?}{FunctionFlavor.GENERATOR}{:}{FunctionFlavor.NORMAL}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{{isGenerator}{?}{FunctionFlavor.GENERATOR}{:}{FunctionFlavor.NORMAL}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{{isGenerator}{?}{FunctionFlavor.GENERATOR}{:}{FunctionFlavor.NORMAL}}{)}}{;}}}
{AST_ROOT_SC2NF{{{recvType}{=}{{recvType}{.}{removeType}{(}{commonTypes.NULL_OR_UNDEFINED}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isCallTo}{(}{{destructuringLhsNode}{.}{getLastChild}{()}}{,}{GOOG_REQUIRE}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{aliasVarNodeRhs}{==}{null}}{||}{{!}{{isCallTo}{(}{aliasVarNodeRhs}{,}{GOOG_FORWARDDECLARE}{)}}}}{)}{{{}{{{t}{.}{report}{(}{call}{,}{INVALID_GET_ALIAS}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{call}{!=}{null}}{&&}{{isCallTo}{(}{call}{,}{GOOG_LOADMODULE}{)}}}{&&}{{{call}{.}{getLastChild}{()}}{.}{isFunction}{()}}}{;}}}
{AST_ROOT_SC2NF{{{nameGenerator}{.}{reset}{(}{reservedNames}{,}{STRING_CONSTANT}{,}{reservedFirstCharacters}{,}{reservedNonFirstCharacters}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{generatePseudoNames}{,}{prevUsedPropertyMap}{,}{null}{,}{null}{,}{nameGenerator}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{generatePseudoNames}{,}{null}{,}{null}{,}{null}{,}{nameGenerator}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{NameGenerator}}{{nameGen}{=}{{new}{{DefaultNameGenerator}}{(}{{reservedNames}{.}{build}{()}}{,}{STRING_CONSTANT}{,}{reservedFirstCharacters}{,}{reservedNonFirstCharacters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{reset}{(}{reservedNames}{,}{prefix}{,}{reservedCharacters}{,}{reservedCharacters}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{AmbiguateProperties}}{(}{compiler}{,}{{options}{.}{getPropertyReservedNamingFirstChars}{()}}{,}{{options}{.}{getPropertyReservedNamingNonFirstChars}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isBottom}{()}}{||}{{isUnknown}{()}}{||}{{isTheTruthyType}{()}}}{)}{{{}{{return}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{isTheFalsyType}{()}{{{}{{return}{{FALSY_MASK}{==}{{getMask}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{isTheTruthyType}{()}{{{}{{return}{{TRUTHY_MASK}{==}{{getMask}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFinalized}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isLiteralObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isLiteralObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{argType}{,}{paramType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isInstanceofObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isInstanceofObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{argType}{,}{paramType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isLiteralObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isLiteralObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{getOptions}{(}{options}{)}}{;}}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ANALYZER_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Var}}{v}}{:}{{globalExternsScope}{.}{getVarIterable}{()}}{)}{{{}{{{considerVar}{(}{v}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{scope}{.}{getVarIterable}{()}}}
{AST_ROOT_SC2NF{{for}{(}{{{TypedScope}}{s}}{:}{{scopes}{.}{values}{()}}{)}{{{}{{{Iterables}{.}{addAll}{(}{vars}{,}{{s}{.}{getVarIterable}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{parse}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Var}}{v}}{:}{{globalExternsScope}{.}{getAllSymbols}{()}}{)}{{{}{{{considerVar}{(}{v}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{scope}{.}{getAllSymbols}{()}}}
{AST_ROOT_SC2NF{{for}{(}{{{TypedScope}}{s}}{:}{{scopes}{.}{values}{()}}{)}{{{}{{{Iterables}{.}{addAll}{(}{vars}{,}{{s}{.}{getAllSymbols}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NodeUtil}{.}{isLoopStructure}{(}{target}{)}}{&&}{{matchLabel}{(}{{target}{.}{getParent}{()}}{,}{label}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{leftOfArrow.type}{==}{ParseTreeType.CALL_EXPRESSION}}{)}{{{}{{return}{{completeAssignmentExpressionParseAtArrow}{(}{{leftOfArrow}{.}{asCallExpression}{()}}{)}}{;}}{}}}{else}{{{}{{return}{{completeArrowFunctionParseAtArrow}{(}{leftOfArrow}{,}{expressionIn}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{sourceType}{.}{isSubtypeWithoutStructuralTyping}{(}{targetType}{)}}}{)}{{{}{{{TypeMismatch}{.}{recordImplicitInterfaceUses}{(}{{this}{.}{implicitInterfaceUses}}{,}{n}{,}{sourceType}{,}{targetType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeMismatch}{.}{recordImplicitInterfaceUses}{(}{{this}{.}{implicitInterfaceUses}}{,}{n}{,}{argType}{,}{paramType}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeMismatch}{.}{recordImplicitInterfaceUses}{(}{{this}{.}{implicitInterfaceUses}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeMismatch}{.}{recordImplicitInterfaceUses}{(}{{this}{.}{implicitInterfaceUses}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeMismatch}{.}{recordImplicitInterfaceUses}{(}{{this}{.}{implicitInterfaceUses}}{,}{n}{,}{caseType}{,}{switchType}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{topInterface}{!=}{null}}{&&}{{{topInterface}{.}{getConstructor}{()}}{!=}{null}}}{)}{{{}{{{foundType}{=}{{topInterface}{.}{getPrototypeObject}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isPrototypeObject}{()}}{)}{{{}{{return}{{{builder}{.}{append}{(}{{{getOwnerFunction}{()}}{.}{getThisType}{()}}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ObjectType}}{{obj}{=}{{getObjTypeIfSingletonObj}{()}}}{;}}{{return}{{{obj}{!=}{null}}{&&}{{obj}{.}{hasOwnProperty}{(}{{new}{{QualifiedName}}{(}{propertyName}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{equals}{(}{proto}{)}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{isBuiltinObjectPrototype}{()}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{DEFAULT_EXTERNS}{+}{externs}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSets}{(}{js}{,}{output}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{&&}{{{n}{.}{getFirstFirstChild}{()}}{!=}{null}}}{&&}{{{n}{.}{getFirstFirstChild}{()}}{.}{isFunction}{()}}}}
{AST_ROOT_SC2NF{{return}{{{{{builder}{()}}{.}{withCharset}{(}{inputCharset}{)}}{.}{withOriginalPath}{(}{{originalZipPath}{+}{BANG_SLASH}{+}{entryPath}}{)}}{.}{buildFromUrl}{(}{zipEntryUrl}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{isNameDeclaration}{(}{parent}{)}}{||}{{parent}{.}{isExprResult}{()}}}}
{AST_ROOT_SC2NF{{{println}{(}{STRING_CONSTANT}{,}{funType}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{FindExportableNodes.EXPORT_ANNOTATION_NOT_ALLOWED}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendStringPart}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{style}{=}{RELAX}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{options}{==}{null}}{)}{{{}{{{initOptions}{(}{{new}{{CompilerOptions}}{()}}{)}}{;}}{}}}}{{return}{errorManager}{;}}{}}}}
{AST_ROOT_SC2NF{{{inputsById}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{{new}{{ThreadSafeDelegatingErrorManager}}{(}{errorManager}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{options}{==}{null}}{)}{{{}{{{initOptions}{(}{{newCompilerOptions}{()}}{)}}{;}}{}}}}{{return}{errorManager}{;}}{}}}}
{AST_ROOT_SC2NF{{{inputsById}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{errorManager}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{areSubtypes}}{,}{STRING_CONSTANT}{,}{obj1}{,}{obj2}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{ch}{)}{{}{{case}{CHAR_CONS}{:}}{{case}{CHAR_CONS}{:}}{{return}{true}{;}}{default:}{{return}{{{ch}{==}{NUMBER_CONSTANT}}{||}{{Character}{.}{isLetter}{(}{ch}{)}}}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{options}{==}{null}}{)}{{{}{{{initOptions}{(}{{new}{{CompilerOptions}}{()}}{)}}{;}}{}}}}{{return}{errorManager}{;}}{}}}}
{AST_ROOT_SC2NF{{{inputsById}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{{new}{{ThreadSafeDelegatingErrorManager}}{(}{errorManager}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{callNode}{.}{isCall}{()}}{,}{STRING_CONSTANT}{,}{callNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{getOptions}{(}{options}{)}}{;}}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ANALYZER_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{compiler}{.}{getJsRoot}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{assertThat}{(}{aggregateWarnings}{)}}{.}{named}{(}{STRING_CONSTANT}{)}}{.}{isEmpty}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCodeMotionDoesntBreakFunctionHoisting}{(}{)}{throws}{{Exception}}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{testSameEs6Strict}{(}{{{String}}{js}}{)}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{test}{(}{js}{,}{js}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConst}{()}{{{}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLet}{()}{{{}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testRewriteWarning}{(}{code}{,}{expected}{,}{warning}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testRewriteWarning}{(}{code}{,}{expected}{,}{warning}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testRewriteError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testRewriteError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testRewrite}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testRewrite}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{allowExternsChanges}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_NEXT}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_NEXT}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testAsyncArrowFunction}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_NEXT}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_NEXT}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testMemberGeneratorYield1}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNewTarget}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParametersWithRestParameters}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRestParameters}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParameters}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOctalNumericKey}{()}{{{}{{{allowWarnings}{=}{true}}{;}}{{{languageMode}{=}{LanguageMode.ECMASCRIPT5}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testComputedPropertiesClassMethods}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrinter_defaultValue}{(}{)}{throws}{{Exception}}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrinter_arrow}{(}{)}{throws}{{Exception}}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDestructuringForOfLoops2}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintDestructuringInRestParam}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintMixedDestructuring}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrintObjectPattern}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintNestedObjectPattern}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrintArrayPattern}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintBlockScopedFunctions}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2015}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExponentiationAssignmentOperator}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2016}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT_2016}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{compiler}{=}{{createCompiler}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testWhileLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDoWhileLoopMultiLineBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareDoWhileLoopMultiLineBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareDoWhileLoopMultiLineBranch}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDoWhileLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareDoWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareDoWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareForLoopBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareForLoopBranch}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIfElseBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareIfElseBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareIfElseBranch}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIfBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareIfBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareIfBranch}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunction}{(}{)}{throws}{{Exception}}{{{}{{{compareFunctionOneMode}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareFunctionOneMode}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{languageOutIsAtLeast}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{js}{,}{expected}{,}{warning}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{super}{.}{testWarning}{(}{js}{,}{warning}{,}{warningMessage}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{super}{.}{testWarning}{(}{js}{,}{warning}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{testWarning}{(}{js}{,}{warning}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{es6Error}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{es5Error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{error}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{externs}{,}{js}{,}{diag}{,}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{super}{.}{testSame}{(}{externs}{,}{js}{,}{warning}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{js}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{js}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{js}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{js}{,}{expected}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{js}{,}{expected}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{expected}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{expected}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{anchorUnusedVars}{=}{false}}{;}}{{{canRemoveExterns}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{allowExternsChanges}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getOptions}{()}}}{;}}{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_TYPED}{)}}{;}}{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{compilerOptions}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{VarCheck.VIOLATED_MODULE_DEP_ERROR}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{VarCheck.VIOLATED_MODULE_DEP_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{VarCheck.MISSING_MODULE_DEP_ERROR}{)}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{VarCheck.MISSING_MODULE_DEP_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testLegalConstReferenceBetweenModules}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLegalLetReferenceBetweenModules}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testObjLit}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testForLoopsEs6}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{CheckUnusedPrivatePropertiesTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionNonMovement1}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{{createModuleStar}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{disableTypeCheck}{()}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidVariableInScope}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_INVALID_VARIABLE}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_INVALID_VARIABLE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNonAliasLocal}{()}{{{}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testJSDocCopiedForClasses}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralMethods}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralShorthand}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParameter}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition3}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition2}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition1}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNonTopLevelDestructuring}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError2}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError1}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDestructuringError}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testYieldExpression}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testScopedNoChanges}{(}{aliases}{,}{code}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testScopedNoChanges}{(}{aliases}{,}{code}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testScoped}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testScoped}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testAsyncFunction}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{CANNOT_CONVERT_YET}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{CANNOT_CONVERT_YET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExponentiationAssignmentOperator}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_2016}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExponentiationOperator}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_2016}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testValidRestParameter}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{valid}{(}{STRING_CONSTANT}{)}}{;}}{{{valid}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{languageIn}}{=}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{,}{LanguageMode.ECMASCRIPT5_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{{createFunction}{(}{body}{)}}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testError}{(}{{createShorthandFunctionInObjLit}{(}{body}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testOk}{(}{{createFunction}{(}{body}{)}}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testOk}{(}{{createShorthandFunctionInObjLit}{(}{body}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6EnhancedObjLiteralsPropertyShorthand}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6EnhancedObjLiteralsComputedValuesNotRemoved}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testES6ClassComputedProperty}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6GettersWithoutTranspilation}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{languageOut}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{disableTypeCheck}{()}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{disableTypeCheck}{()}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{{createShorthandFunctionInObjLit}{(}{returnType}{,}{body}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{String}}{{js}{=}{{createShorthandFunctionInObjLit}{(}{returnType}{,}{body}{)}}}{;}}{{{testWarning}{(}{js}{,}{CheckMissingReturn.MISSING_RETURN_STATEMENT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{{{compareJsDoc}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNoMoveDeepFunctionDeclarations}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineEmptyFunction6}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction4}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testFailure}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction3}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testFailure}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction2}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testFailure}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction1}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testFailure}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{{{propertyRenaming}{=}{PropertyRenamingPolicy.ALL_UNQUOTED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTaggedTemplateError}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineIntoNestedNonHoistedNamedFunctions}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteIfNotInGlobalScope1}{(}{)}{throws}{{Exception}}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{NoRewriteIfNotInGlobalScopeTestInput.INPUT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{{{compareJsDoc}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{replaceSymbol}{(}{t}{,}{n}{,}{name}{,}{{t}{.}{getInput}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{com.google.javascript.jscomp.newtypes.FunctionType}}{{ctorType}{=}{{{functionType}{==}{null}}{?}{null}{:}{{functionType}{.}{getFunTypeIfSingletonObj}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{denormalizePass}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}{{{newInitializer}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{n}{.}{removeChild}{(}{newInitializer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{,}{STRING_CONSTANT}{,}{child}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{replaceSymbol}{(}{n}{,}{name}{,}{{t}{.}{getInput}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{findDeclaredNames}{(}{t}{,}{functionBody}{,}{renamer}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{declarationRoot}{.}{isFunction}{()}}}{)}{{{}{{{findDeclaredNames}{(}{t}{,}{declarationRoot}{,}{renamer}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{denormalizePass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}{{{newInitializer}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{n}{.}{removeChild}{(}{newInitializer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{,}{STRING_CONSTANT}{,}{child}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}{{{newInitializer}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{n}{.}{removeChild}{(}{newInitializer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFrozen}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}{{{super}{.}{addUndeclaredProperty}{(}{pname}{,}{defSite}{,}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}{{{super}{.}{addProperty}{(}{pname}{,}{defSite}{,}{type}{,}{isConstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFrozen}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{this}{.}{isFrozen}}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isStruct}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{{isFrozen}{()}}{||}{{isClass}{()}}}{)}}{;}}{{return}{{{this}{.}{objectKind}}{.}{isStruct}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isFrozen}{&&}{{externs}{.}{containsKey}{(}{name}{)}}}{)}{{{}{{{type}{=}{{externs}{.}{get}{(}{name}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{isFrozen}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{getCtorPropDeclaredType}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{RawNominalType}}{getRawNominalType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{{this}{.}{rawType}}{.}{isFrozen}{()}}}{)}}{;}}{{return}{{this}{.}{rawType}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nominalType}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nominalType}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{thisNode}{.}{isEquivalentWithSideEffectsToShallow}{(}{thatNode}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{ScopedChangeHandler}{()}{{{}{{{{this}{.}{lastCodeChangeQuery}}{=}{{compiler}{.}{getChangeStamp}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeSanityCheck}{(}{name}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{code}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{denormalizePass}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{nameGenerator}{=}{null}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InlineVariablesConstantsTest}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{useGoogleCodingConvention}{=}{true}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{globalScope}{=}{{TypedScope}{.}{createGlobalScope}{(}{rootNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fieldType}{=}{{createFromTypeNodesInternal}{(}{{fieldTypeNode}{.}{getLastChild}{()}}{,}{sourceName}{,}{scope}{,}{true}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setReferencedType}{(}{{new}{{NoResolvedType}}{(}{registry}{,}{{getReferenceName}{()}}{,}{{getTemplateTypes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{denormalizePass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{code}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{grandparent}{=}{{parent}{.}{getParent}{()}}}{;}}{{{replaceWithEmpty}{(}{parent}{,}{grandparent}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{grandparent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{isUnresolved}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{JSTypes}}{getCommonTypes}{()}{{{}{{return}{{this}{.}{commonTypes}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{assign}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newBody}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newBlockNode}{.}{useSourceInfoIfMissingFromForTree}{(}{oldBlockNode}{)}}{;}}{{{functionNode}{.}{replaceChild}{(}{oldBlockNode}{,}{newBlockNode}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newBlockNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{origValueNode}{.}{getString}{()}}{.}{equals}{(}{newString}{)}}}{)}{{{}{{{origValueNode}{.}{setString}{(}{newString}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{origValueNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{newValue}{!=}{msgNode}}{)}{{{}{{{newValue}{.}{useSourceInfoIfMissingFromForTree}{(}{msgNode}{)}}{;}}{{{msgNode}{.}{replaceWith}{(}{newValue}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newValue}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_boxedNumberVsZero}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_allType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_unknownType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{retValue}{=}{{returnedValue}{.}{cloneTree}{()}}}{;}}{{{parent}{.}{replaceChild}{(}{call}{,}{retValue}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{retValue}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{getProp}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{p.newName}{.}{equals}{(}{oldName}{)}}}{)}{{{}{{{n}{.}{setString}{(}{p.newName}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newQualifiedNameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{binaryNamespaceExportNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{jsdocNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{collapses}{.}{isEmpty}{()}}}{)}{{{}{{{applyCollapses}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{callTarget}{.}{getLastChild}{()}}{.}{setString}{(}{STRING_CONSTANT}{)}}{;}}{{{{firstArg}{.}{getNext}{()}}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{newNode}{.}{isEquivalentTo}{(}{n}{)}}}{)}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{newNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{newNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rhs}{.}{isChanged}{()}}{)}{{{}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{placeholder}{,}{{{mNode}{.}{getNode}{()}}{.}{removeFirstChild}{()}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{follow}{==}{null}}{||}{{areMatchingExits}{(}{n}{,}{follow}{)}}}{)}{{{}{{{n}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{newLiteralNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{canFoldStandardConstructors}{(}{n}{)}}{)}{{{}{{{n}{.}{setToken}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{n}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}{{{functions}{.}{put}{(}{{t}{.}{getModule}{()}}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{codeChanged}{)}{{{}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{stringNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{t}{.}{getCompiler}{()}}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{and}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}{;}}{{{n}{.}{replaceWith}{(}{result}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{detachChildren}{()}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{result}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replacementNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{replacementNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{replacementNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{child}{,}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{node}{.}{getParent}{()}}{.}{removeChild}{(}{node}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{childToRemove}}{:}{nodesToRemove}{)}{{{}{{{node}{.}{removeChild}{(}{childToRemove}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{rhs}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{apply}{()}{{{}{{{parent}{.}{replaceChild}{(}{oldChild}{,}{newChild}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newChild}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{addingRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{useGoogleCodingConvention}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{classDeclaration}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{outerBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setString}{(}{newName}{)}}{;}}{{{{t}{.}{getCompiler}{()}}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{public}{InlineVariablesConstantsTest}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setString}{(}{{prop}{+}{fileid}}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{{getKey}{.}{getParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{node}{!=}{null}}{)}{{{}{{{n}{.}{setDeclaredTypeExpression}{(}{node}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{attachTypeExpr}{=}{{IR}{.}{rest}{(}{{n}{.}{getString}{()}}{)}}}{;}}{{{n}{.}{replaceWith}{(}{attachTypeExpr}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{attachTypeExpr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{propstmt}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{NodeUtil}{.}{getPureBooleanValue}{(}{forCondition}{)}}{==}{TernaryValue.TRUE}}{)}{{{}{{{forCondition}{.}{replaceWith}{(}{{IR}{.}{empty}{()}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{removeChild}{(}{right}{)}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{right}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeUtil}{.}{redeclareVarsInsideBranch}{(}{caseNode}{)}}{;}}{{{switchNode}{.}{removeChild}{(}{caseNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maybeBreak}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{replaceWith}{(}{{right}{.}{detach}{()}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{callSite.parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.ADDING_PROPERTY_TO_NON_OBJECT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{ref}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{varNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{closureRequire}}{:}{requiresToBeRemoved}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{closureRequire}{)}}{;}}{{{closureRequire}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyOfRemoval}{(}{node}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{node}{)}}{;}}{{{notifyOfRemoval}{(}{node}{,}{parent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{functionBody}{.}{removeChild}{(}{current}{)}}{;}}{{{insertAfter}{=}{{addToFront}{(}{functionBody}{,}{current}{,}{insertAfter}{)}}}{;}}{{{reportCodeChange}{(}{functionBody}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{code}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{denormalizePass}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{scope}{.}{isFunctionScope}{()}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{global.root}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{varNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{genBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{maybeNormalizeFunctionDeclaration}{(}{n}{,}{compiler}{)}}{)}{{{}{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newFor}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{stringKey}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{init}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{assign}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{mathDotPowCall}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{initSymbol}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{DevirtualizePrototypeMethods}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{{Arrays}{.}{asList}{(}{modules}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{NodeUtil}{.}{isNameDeclaration}{(}{{n}{.}{getParent}{()}}{)}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{modules}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setChangeScope}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{initTraversal}{(}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{initTraversal}{(}{scopeRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{initTraversal}{(}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{exportCall}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{expression}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{objLit}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{expression}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{c}{.}{setQuotedString}{()}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{dollarChildProp}{=}{{n}{.}{getGrandparent}{()}}}{;}}{{{dollarChildProp}{.}{setToken}{(}{Token.GETELEM}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{dollarChildProp}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{stmt}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{assign}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{stmts}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{stmts}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{fnNameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{{{declaringNode}{.}{getFirstFirstChild}{()}}{.}{cloneTree}{()}}{)}}{;}}{{{t}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isUtilGetDefineCall}{(}{n}{)}}{)}{{{}{{{substituteUtilGetDefine}{(}{t}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isGoogLoadModuleStatement}{(}{n}{)}}{)}{{{}{{{updateGoogLoadModuleLate}{(}{t}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{putBooleanProp}{(}{Node.GOOG_MODULE}{,}{true}{)}}{;}}{{{inlineModuleIntoGlobal}{(}{n}{)}}{;}}{{{t}{.}{reportCodeChange}{()}}{;}}{{{checkAndSetStrictModeDirective}{(}{t}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{newJsdoc}{!=}{null}}{)}{{{}{{{jsdocNode}{.}{setJSDocInfo}{(}{newJsdoc}{)}}{;}}{{{t}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isDestructuringDeclaration}{(}{n}{)}}{)}{{{}{{{splitDeclaration}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{lastAncestor}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{node}{.}{getParent}{()}}{.}{removeChild}{(}{node}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{childToRemove}}{:}{nodesToRemove}{)}{{{}{{{node}{.}{removeChild}{(}{childToRemove}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{visitArrowFunction}{(}{t}{,}{n}{,}{{checkNotNull}{(}{thisContext}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{newNode}{.}{isEquivalentTo}{(}{n}{)}}}{)}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{newNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{newNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rhs}{.}{isChanged}{()}}{)}{{{}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{placeholder}{,}{{{mNode}{.}{getNode}{()}}{.}{removeFirstChild}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{follow}{==}{null}}{||}{{areMatchingExits}{(}{n}{,}{follow}{)}}}{)}{{{}{{{n}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tryReplaceArguments}{(}{{traversal}{.}{getScope}{()}}{)}}{)}{{{}{{{traversal}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{injectionPointParent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{expressionRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{newLiteralNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{canFoldStandardConstructors}{(}{n}{)}}{)}{{{}{{{n}{.}{setToken}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newValue}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitClass}{(}{t}{,}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitRestParam}{(}{t}{,}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{NodeUtil}{.}{getPureBooleanValue}{(}{forCondition}{)}}{==}{TernaryValue.TRUE}}{)}{{{}{{{forCondition}{.}{replaceWith}{(}{{IR}{.}{empty}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{removeChild}{(}{right}{)}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{right}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeUtil}{.}{redeclareVarsInsideBranch}{(}{caseNode}{)}}{;}}{{{switchNode}{.}{removeChild}{(}{caseNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maybeBreak}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{replaceWith}{(}{{right}{.}{detach}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{callTarget}{.}{getLastChild}{()}}{.}{setString}{(}{STRING_CONSTANT}{)}}{;}}{{{{firstArg}{.}{getNext}{()}}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeExpression}}{{typeExpr}{=}{{{getTypeFromGetterOrSetter}{(}{member}{)}}{.}{copy}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expr}{!=}{null}}{)}{{{}{{return}{{cloneTypeNodes}{?}{{expr}{.}{copy}{()}}{:}{expr}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{foundObj}{.}{isGenericObjectType}{()}}{)}{{{}{{{foundType}{=}{{foundObj}{.}{getRawType}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ImmutableMap}}{<}{{String}}{,}{{TypeI}}{>}}{typeVars}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{!=}{null}}{&&}{{obj}{.}{isGenericObjectType}{()}}}{)}{{{}{{return}{{obj}{.}{instantiateGenericsWithUnknown}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{foundType}{!=}{null}}{&&}{{foundType}{.}{isGenericObjectType}{()}}}{)}{{{}{{{foundType}{=}{{foundType}{.}{getRawType}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{PropagateConstJsdoc}}{()}}{)}}{;}}{{{{new}{{RemoveCode}}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{extractionInfo}{.}{shouldExtract}{()}}{)}{{{}{{{doExtraction}{(}{extractionInfo}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{objectLit}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{logger}{.}{isLoggable}{(}{Level.FINE}{)}}{)}{{{}{{{logger}{.}{fine}{(}{{STRING_CONSTANT}{+}{callName}}{)}}{;}}{}}}}{{{inlineEmptyMethod}{(}{t}{,}{parent}{,}{callNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{addingRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{inheritsExpressionResult}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Definition}}{def}}{:}{definitionsGatherer.definitions}{)}{{{}{{{def}{.}{remove}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{codeChanged}{)}{{{}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}{;}}{{{n}{.}{replaceWith}{(}{result}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{detachChildren}{()}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{result}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replacementNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{replacementNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{replacementNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{child}{,}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{getInstrumentForCoverageOnly}{()}}{)}{{{}{{{instrumentForCoverage}{(}{options.instrumentBranchCoverage}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Keywords}{.}{isKeyword}{(}{idToken.value}{)}}{&&}{{!}{{Keywords}{.}{isTypeScriptSpecificKeyword}{(}{idToken.value}{)}}}}{)}{{{}{{{reportError}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{phaseopt}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{tracker}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{phaseopt}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{phaseopt}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{typeWithBannedProp}{.}{isSubtypeWithoutStructuralTyping}{(}{foundType}{)}}{)}{{{}{{if}{(}{{matchesPrototype}{(}{typeWithBannedProp}{,}{foundType}{)}}{)}{{{}{{return}{ConformanceResult.VIOLATION}{;}}{}}}{else}{{if}{(}{reportLooseTypeViolations}{)}{{{}{{return}{ConformanceResult.POSSIBLE_VIOLATION_DUE_TO_LOOSE_TYPES}{;}}{}}}}}{}}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{{Arrays}{.}{asList}{(}{modules}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{clazz}{.}{replaceChild}{(}{{clazz}{.}{getFirstChild}{()}}{,}{{{IR}{.}{empty}{()}}{.}{useSourceInfoFrom}{(}{{clazz}{.}{getFirstChild}{()}}{)}}{)}}{;}}{{{t}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getLineno}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{{n}{.}{setCharno}{(}{{{n}{.}{getCharno}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{{{t}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AbstractCompiler}}{compiler}}}
{AST_ROOT_SC2NF{{{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isMethodOrCtorCallThatTriggersRemoval}{(}{t}{,}{n}{,}{parent}{)}}{)}{{{}{{{replaceHighestNestedCallWithNull}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{parent}{.}{getFirstChild}{()}}{==}{n}}{&&}{{isReferenceToRemovedVar}{(}{t}{,}{n}{)}}}{)}{{{}{{{replaceHighestNestedCallWithNull}{(}{t}{,}{parent}{,}{{parent}{.}{getParent}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setString}{(}{newName}{)}}{;}}{{{t}{.}{reportCodeChange}{()}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{{maybeRewriteClassDefinition}{(}{t}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{inlineFunctionsInFile}{(}{root}{,}{STRING_CONSTANT}{,}{{ImmutableSet}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{InliningMode.DIRECT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}}
{AST_ROOT_SC2NF{{public}{PeepholeFoldConstantsTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setLanguage}{(}{ECMASCRIPT_NEXT}{,}{ECMASCRIPT_NEXT}{)}}{;}}{{{behavior}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{modules}{;}}{}}}}}
{AST_ROOT_SC2NF{{tightenNameTypeAndDontWarn}{(}{varName}{,}{expr}{,}{declType}{,}{inferredType}{,}{requiredType}{)}}}
{AST_ROOT_SC2NF{{{inlineFunctionsInFile}{(}{root}{,}{STRING_CONSTANT}{,}{{ImmutableSet}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{InliningMode.DIRECT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{{Arrays}{.}{asList}{(}{modules}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{currentLocationAbstractionIdentifier}{=}{locationAbstractionIdentifier}}{;}}{{{testSame}{(}{SHARED_EXTERNS}{,}{js}{,}{null}{)}}{;}}{{{currentJsRoot}{=}{{{getLastCompiler}{()}}{.}{jsRoot}}}{;}}{{return}{currentAnalysis}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{TypeMismatch}}{>}}{{actual}{=}{{ImmutableList}{.}{copyOf}{(}{{{getLastCompiler}{()}}{.}{getTypeMismatches}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{{registry}{=}{{{getLastCompiler}{()}}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{{registry}{=}{{{getLastCompiler}{()}}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{{registry}{=}{{{getLastCompiler}{()}}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{findFunction}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{findParameter}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isCompoundAssignmentOp}{(}{n}{)}}{||}{{n}{.}{isInc}{()}}{||}{{n}{.}{isDec}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isCompoundAssignmentOp}{(}{n}{)}}{)}{{{}{{{normalizeAssignShorthand}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{bundler}{.}{appendTo}{(}{out}{,}{input}{,}{{{input}{.}{getSourceFile}{()}}{.}{getCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sourceMapOriginalSources}{.}{putIfAbsent}{(}{path}{,}{{originalSourcesLoader}{.}{loadSource}{(}{path}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExternalSourceLoader}}{originalSourcesLoader}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{inputCharset}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{c}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{{file}{.}{toPath}{()}}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{fromFile}{(}{fileName}{,}{UTF_8}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{{Charset}{.}{forName}{(}{inputCharset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{{c}{.}{name}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{file}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{{builder}{()}}{.}{buildFromFile}{(}{fileName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{readInputs}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ensureRequirementIsMutable}{()}}{;}}{{{com.google.protobuf.AbstractMessageLite.Builder}{.}{addAll}{(}{values}{,}{requirement_}{)}}{;}}{{{onChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{com.google.protobuf.InvalidProtocolBufferException}}{e}}{)}{{{}{{{parsedMessage}{=}{{(}{{com.google.javascript.jscomp.ConformanceConfig}}{)}{{e}{.}{getUnfinishedMessage}{()}}}}{;}}{{throw}{{e}{.}{unwrapIOException}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{maybeForceBuilderInitialization}{()}{{{}{{if}{(}{com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders}{)}{{{}{{{getRequirementFieldBuilder}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{private}{Builder}{(}{{{com.google.protobuf.GeneratedMessageV3.BuilderParent}}{parent}}{)}{{{}{{super}{(}{parent}{)}{;}}{{{maybeForceBuilderInitialization}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{com.google.protobuf.GeneratedMessageV3.BuilderParent}}{parent}}}
{AST_ROOT_SC2NF{{{}{{return}{{com.google.protobuf.GeneratedMessageV3}{.}{parseWithIOException}{(}{PARSER}{,}{input}{,}{extensionRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{com.google.protobuf.GeneratedMessageV3}{.}{parseDelimitedWithIOException}{(}{PARSER}{,}{input}{,}{extensionRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{com.google.protobuf.GeneratedMessageV3}{.}{parseWithIOException}{(}{PARSER}{,}{input}{,}{extensionRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineInFunction1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isAsyncFunction}{()}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{inlineFunctionsInFile}{(}{root}{,}{STRING_CONSTANT}{,}{{ImmutableSet}{.}{of}{(}{STRING_CONSTANT}{)}}{,}{InliningMode.DIRECT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isNameDeclaration}{(}{declaration}{)}}{&&}{{declaredVarOrProp}{.}{isName}{()}}}}
{AST_ROOT_SC2NF{{{assertGetNameResult}{(}{{parent}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getFirstFirstChild}{()}}}{;}}{{{assertGetNameResult}{(}{{parent}{.}{getFirstChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getFirstFirstChild}{()}}}{;}}{{{assertGetNameResult}{(}{{parent}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getFirstFirstChild}{()}}}{;}}{{{assertGetNameResult}{(}{{parent}{.}{getFirstChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{parse}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertGetNameResult}{(}{{parent}{.}{getFirstChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{sanityCheck}{!=}{null}}{)}{{{}{{{changeVerifier}{=}{{{new}{{ChangeVerifier}}{(}{compiler}{)}}{.}{snapshot}{(}{jsRoot}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{sanityCheck}{.}{create}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{{{changeVerifier}{.}{checkRecordedChanges}{(}{passName}{,}{jsRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getFirstChild}{()}}{.}{matchesQualifiedName}{(}{Es6RewriteClass.INHERITS}{)}}{)}{{{}{{{inheritsCalls}{.}{add}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{parent}{.}{replaceChild}{(}{node}{,}{{NodeUtil}{.}{newUndefinedNode}{(}{node}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{performOptimizations}{()}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{NodeUtil}{.}{isNameDeclaration}{(}{{searchIt}{.}{currentParent}{()}}{)}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{(}{{{NodeUtil}{.}{isNameDeclaration}{(}{{declaration}{.}{getParent}{()}}{)}}{&&}{{!}{{NodeUtil}{.}{isLoopStructure}{(}{{declaration}{.}{getGrandparent}{()}}{)}}}}{)}}}
{AST_ROOT_SC2NF{{public}{HierarchicalSet}{(}{{{{HierarchicalSet}}{<}{{T}}{>}}{parent}}{)}{{{}{{{{this}{.}{parent}}{=}{parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clinitsCalledAtBranch}{=}{{new}{{{HierarchicalSet}}{<>}}{(}{clinitsCalledAtBranch}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declType}{=}{{{this}{.}{currentScope}}{.}{getDeclaredTypeOf}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NTIScope}}{{innerScope}{=}{{{this}{.}{currentScope}}{.}{getScope}{(}{fnName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lhs}{.}{isName}{()}}{&&}{{{this}{.}{currentScope}}{.}{isConstVar}{(}{{lhs}{.}{getString}{()}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{this}{.}{currentScope}}{.}{hasThis}{()}}}{)}{{{}{{return}{{new}{{EnvTypePair}}{(}{inEnv}{,}{UNKNOWN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{expr}{.}{isNew}{()}}{||}{{(}{{{expr}{.}{isCall}{()}}{&&}{{{this}{.}{currentScope}}{.}{isConstructor}{()}}{&&}{{{expr}{.}{getFirstChild}{()}}{.}{isSuper}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declType}{=}{{{this}{.}{currentScope}}{.}{getDeclaredTypeOf}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declRetType}{=}{{{{this}{.}{currentScope}}{.}{getDeclaredFunctionType}{()}}{.}{getReturnType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{guardA}{.}{addGuard}{(}{visibilityOff}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{val}{.}{isObjectLit}{()}}{,}{val}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{object}{.}{isObjectLit}{()}}{,}{object}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parent}{.}{getFirstChild}{()}}{==}{name}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{val}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{object}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parent}{.}{getFirstChild}{()}}{==}{name}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{val}{.}{isObjectLit}{()}}{,}{val}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{object}{.}{isObjectLit}{()}}{,}{object}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parent}{.}{getFirstChild}{()}}{==}{name}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{t}{.}{getScope}{()}}{.}{isHoistScope}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{public}{InlineVariablesTest}{()}{{{}{{{enableNormalize}{()}}{;}}{{{setAcceptedLanguage}{(}{ECMASCRIPT_NEXT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{inputCharset}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{c}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{{file}{.}{toPath}{()}}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{fromFile}{(}{fileName}{,}{UTF_8}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{void}{reportChangeToEnclosingScope}{(}{{{Node}}{n}}{)}{{{}{{{recordChange}{(}{{getChangeScopeForNode}{(}{n}{)}}{)}}{;}}{{{notifyChangeHandlers}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{precedence}{(}{n}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NodeUtil}{.}{precedence}{(}{{n}{.}{getToken}{()}}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{invalidatingPropRef}{=}{{!}{{isValidCandidateDefinition}{(}{t}{,}{n}{,}{parent}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{{Charset}{.}{forName}{(}{inputCharset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{{c}{.}{name}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{file}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{{builder}{()}}{.}{buildFromFile}{(}{fileName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{child.parent}{==}{null}}{,}{STRING_CONSTANT}{,}{child}{,}{parent}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{maybeDecl}{.}{isInitializingDeclaration}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{references}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{isDeclaration}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{deepestModule}{=}{{graph}{.}{getSmallestCoveringDependency}{(}{{ImmutableList}{.}{of}{(}{m}{,}{deepestModule}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{precedence}{(}{n}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{collectionRoot}{.}{isScript}{()}}{||}{{collectionRoot}{.}{isRoot}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{options}{)}}{;}}{{return}{{warningsGuard}{.}{level}{(}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{changeScopeRoot}{.}{isScript}{()}}{||}{{changeScopeRoot}{.}{isFunction}{()}}}{)}}{;}}{{{recordChange}{(}{changeScopeRoot}{)}}{;}}{{{notifyChangeHandlers}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentChangeScope}{!=}{null}}{)}{{{}{{{checkState}{(}{{{currentChangeScope}{.}{isScript}{()}}{||}{{currentChangeScope}{.}{isFunction}{()}}}{)}}{;}}{{{recordChange}{(}{currentChangeScope}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{passes}{instanceof}{{DefaultPassConfig}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{input}{.}{isExtern}{()}}{,}{STRING_CONSTANT}{,}{{input}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentTracer}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentTracer}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{{new}{{ThreadSafeDelegatingErrorManager}}{(}{errorManager}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{stage1AndStage2Passes}{()}}{;}}{{{compiler}{.}{completeCompilation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{stage1AndStage2Passes}{()}}{;}}{{{compiler}{.}{completeCompilation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{blockStack}{.}{get}{(}{i}{)}}{.}{getRoot}{()}}{==}{{containingScope}{.}{getRootNode}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{clone}{==}{null}}{)}{{{}{{{verifyNewNode}{(}{passNameMsg}{,}{n}{)}}{;}}{}}}{else}{{{}{{{verifyNodeChange}{(}{passNameMsg}{,}{n}{,}{clone}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{grandparent}{==}{null}}{||}{{(}{{{!}{{isPrototypePropertyDeclaration}{(}{grandparent}{)}}}{&&}{{!}{{isPropertyDeclarationOnThis}{(}{{parent}{.}{getFirstChild}{()}}{,}{currentScope}{)}}}}{)}}}}
{AST_ROOT_SC2NF{{{Reference}}{{aliasRef}{=}{{aliasRefs.references}{.}{get}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Reference}}{ref}}}
{AST_ROOT_SC2NF{{{maybeTemporarilyLiveNodes}{.}{add}{(}{expr}{)}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{matchesQualifiedName}{(}{name}{)}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{String}}{newName}}}
{AST_ROOT_SC2NF{{public}{InlineObjectLiteralsTest}{()}{{{}{{{enableNormalize}{()}}{;}}{{{setAcceptedLanguage}{(}{ECMASCRIPT_NEXT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{inputCharset}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{c}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{{file}{.}{toPath}{()}}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{fromFile}{(}{fileName}{,}{UTF_8}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{fromFile}{(}{file}{,}{UTF_8}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{qNameRoot}{!=}{null}}{&&}{{qNameRoot}{.}{matchesQualifiedName}{(}{EXPORTS}{)}}}{&&}{{NodeUtil}{.}{isLValue}{(}{qNameRoot}{)}}}}
{AST_ROOT_SC2NF{{{callbackBlock}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{onlyExport}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isPropertyTestFunction}{(}{{{Node}}{call}}{)}{{{}{{return}{{{call}{.}{getFirstChild}{()}}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{isInClass}{=}{{{n}{.}{getParent}{()}}{.}{isClassMembers}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alreadyRemoved}{(}{n}{)}}{)}{{{}{continue;}{}}}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{{{n}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{defined}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{{vnode}{.}{getParent}{()}}{)}}{;}}{{{vnode}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assignmentParent}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{parent}{!=}{null}}{&&}{{parent}{.}{isAssign}{()}}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{n}{)}}{;}}{{if}{(}{{!}{{parent}{.}{hasChildren}{()}}}{)}{{{}{{{parent}{.}{detach}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{enclosingNode}{!=}{null}}{&&}{{!}{{enclosingNode}{.}{isFunction}{()}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{anc}{.}{getFirstChild}{()}}{.}{matchesQualifiedName}{(}{name}{)}}}{)}{{{}{{return}{Ref.Type.ALIASING_GET}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{block}{=}{{t}{.}{getScopeRoot}{()}}}{;}}}
{AST_ROOT_SC2NF{{{isASTNormalized}{()}}{&&}{{constructorNameNode}{.}{isName}{()}}}}
{AST_ROOT_SC2NF{{{parent}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNamespacePlaceholder}{(}{parent}{)}}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}{{{parent}{.}{detach}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{name}{.}{equals}{(}{ARGUMENTS}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{idPrefix}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}{{{n}{.}{setString}{(}{newName}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{currentScript.isModule}{)}{{{}{{{rewriteShortObjectKey}{(}{t}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{js}{,}{warning}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{shouldRemove}{(}{t}{,}{nameNode}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{isConstToBeInferred}{(}{jsdoc}{,}{name}{,}{false}{)}}{)}{{{}{{{jsdoc}{=}{{pullJsdocTypeFromAst}{(}{compiler}{,}{jsdoc}{,}{name}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{CrossModuleReferenceCollector}}{collector}}}
{AST_ROOT_SC2NF{{{CrossModuleReferenceCollector}}{collector}}}
{AST_ROOT_SC2NF{{{CrossModuleReferenceCollector}}{collector}}}
{AST_ROOT_SC2NF{{public}{void}{testNgInjectAddsInjectToClassConstructor}{(}{)}{throws}{{Exception}}{{{}{{{test}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{null}{==}{str}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{str}}{=}{{str}{.}{intern}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{quoteKeywordProperties}}{=}{{options}{.}{shouldQuoteKeywordProperties}{()}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{{options}{.}{getLanguageIn}{()}}{==}{ECMASCRIPT5_STRICT}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{shouldAmbiguateProperties}{()}}{&&}{{options.propertyRenaming}{==}{PropertyRenamingPolicy.ALL_UNQUOTED}}}{)}{{{}{{{passes}{.}{add}{(}{ambiguateProperties}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{CrossModuleReferenceCollector}}{{collector}{=}{{new}{{CrossModuleReferenceCollector}}{(}{compiler}{,}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setLanguage}{(}{ECMASCRIPT_NEXT}{,}{ECMASCRIPT_NEXT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{CompilerOptions}}{setEmitUseStrict}{(}{{boolean}{emitUseStrict}}{)}{{{}{{{{this}{.}{emitUseStrict}}{=}{{Optional}{.}{of}{(}{emitUseStrict}{)}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTagAsStrict}{(}{{firstOutput}{&&}{{options}{.}{shouldEmitUseStrict}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{{t}{=}{{new}{{NodeTraversal}}{(}{compiler}{,}{finder}{,}{{SyntacticScopeCreator}{.}{makeUntyped}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{{t}{=}{{new}{{NodeTraversal}}{(}{compiler}{,}{null}{,}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{reference}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{checkUnusedLocals}{&&}{{unusedAssignment}{!=}{null}}}{&&}{{!}{isRead}}}{&&}{{!}{hasErrors}}}{)}{{{}{{{checkForUnusedLocalVar}{(}{v}{,}{unusedAssignment}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{options}{.}{isStrictModeInput}{()}}}}
{AST_ROOT_SC2NF{{{ObjectsBuilder}}{{newObjs}{=}{{new}{{ObjectsBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{RemoveSuperMethodsPassTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{s.parent}{!=}{null}}{)}{{{}{{if}{(}{{s}{.}{isDefinedLocally}{(}{varName}{,}{false}{)}}{)}{{{}{{return}{false}{;}}{}}}}{{{s}{=}{s.parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MaxIterationsExceededException}}{e}}{)}{{{}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{MAX_STEP}{+}{STRING_CONSTANT}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{assertEquals}{(}{FixedPointGraphTraversal.NON_HALTING_ERROR_MSG}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{handleConstructorAnnotation}{(}{functionName}{,}{funNode}{,}{constructorType}{,}{parentClass}{,}{implementedIntfs}{,}{builder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{{options}{.}{getLanguageIn}{()}}{==}{ECMASCRIPT5_STRICT}}}}
{AST_ROOT_SC2NF{{{}{{{handleConstructorAnnotation}{(}{functionName}{,}{funNode}{,}{constructorType}{,}{parentClass}{,}{implementedIntfs}{,}{registry}{,}{builder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{COULD_NOT_DESERIALIZE_AST}{,}{filename}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{options}{.}{isStrictModeInput}{()}}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isValidQualifiedName}{(}{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{,}{name}{)}}}}
{AST_ROOT_SC2NF{{{key}{.}{isStringKey}{()}}{&&}{{!}{{key}{.}{isQuotedString}{()}}}{&&}{{NodeUtil}{.}{isValidPropertyName}{(}{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{,}{{key}{.}{getString}{()}}{)}}}}
{AST_ROOT_SC2NF{{public}{{CompilerOptions}}{setStrictModeInput}{(}{{boolean}{isStrictModeInput}}{)}{{{}{{{{this}{.}{isStrictModeInput}}{=}{{Optional}{.}{of}{(}{isStrictModeInput}{)}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Config.StrictMode}}{{strictMode}{=}{{{options}{.}{expectStrictModeInput}{()}}{?}{Config.StrictMode.STRICT}{:}{Config.StrictMode.SLOPPY}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{expectStrictModeInput}{()}}{)}{{{}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ES5_STRICT}{,}{CheckLevel.ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{InlineFunctions}}{(}{compiler}{,}{{compiler}{.}{getUniqueNameIdSupplier}{()}}{,}{options.inlineFunctions}{,}{options.inlineLocalFunctions}{,}{true}{,}{{{options}{.}{assumeStrictThis}{()}}{||}{{options}{.}{expectStrictModeInput}{()}}}{,}{options.assumeClosuresOnlyCaptureReferences}{,}{options.maxFunctionSizeAfterInlining}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isValidQualifiedName}{(}{{compiler}{.}{getLanguageMode}{()}}{,}{name}{)}}}}
{AST_ROOT_SC2NF{{Pattern}{.}{compile}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isValidQualifiedName}{(}{{{compiler}{.}{getOptions}{()}}{.}{getLanguageIn}{()}}{,}{name}{)}}}}
{AST_ROOT_SC2NF{{{key}{.}{isStringKey}{()}}{&&}{{!}{{key}{.}{isQuotedString}{()}}}{&&}{{NodeUtil}{.}{isValidPropertyName}{(}{{{compiler}{.}{getOptions}{()}}{.}{getLanguageIn}{()}}{,}{{key}{.}{getString}{()}}{)}}}}
{AST_ROOT_SC2NF{{{String}}{{finalMessage}{=}{{STRING_CONSTANT}{+}{message}}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{number}{+}{{(}{{{!}{supported}}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}}{+}{{(}{{es6Modules}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}}{+}{{(}{{typeScript}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{{(}{{(}{{FeatureSet}}{)}{other}}{)}}{.}{supported}}{==}{supported}}}
{AST_ROOT_SC2NF{{{{this}{.}{number}}{>=}{other.number}}{&&}{{(}{{{!}{{this}{.}{supported}}}{||}{other.supported}}{)}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{,}{ToStringContext.TO_STRING}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{,}{ToStringContext.TO_STRING}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{,}{ToStringContext.TO_STRING}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{mockToString}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{,}{ToStringContext.TO_STRING}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{,}{ToStringContext.TO_STRING}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{replaceChild}{(}{assignNode}{,}{{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{.}{srcref}{(}{assignNode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{getTypedScopeCreator}{()}{{{}{{return}{typedScopeCreator}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typedScopeCreator}{=}{{new}{{MemoizedTypedScopeCreator}}{(}{internalScopeCreator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{scopeCreator}{=}{{new}{{MemoizedTypedScopeCreator}}{(}{{new}{{TypedScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{{typedScopeCreator}{=}{{getTypedScopeCreator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{foundNodes}{.}{add}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{names}}{=}{names}}{;}}{{{foundNodes}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{inputs.length}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{externsInputs}{=}{{maybeCreateSources}{(}{STRING_CONSTANT}{,}{externs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{compiler}{,}{null}{,}{{createSources}{(}{STRING_CONSTANT}{,}{expected}{)}}{,}{error}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{RuntimeTypeCheckTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{enableTypeCheck}{()}}{;}}{{{disableMultistageCompilation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.NAMESPACE_DECLARATION}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateFeature}{(}{Feature.AMBIENT_DECLARATION}{,}{n}{)}}{;}}{{{validateNodeType}{(}{Token.DECLARE}{,}{n}{)}}{;}}{{{validateAmbientDeclarationHelper}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validateFeature}{(}{Feature.TYPE_ALIAS}{,}{n}{)}}{;}}{{{validateNodeType}{(}{Token.TYPE_ALIAS}{,}{n}{)}}{;}}{{{validateChildCount}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.ARROW_FUNCTIONS}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.CLASSES}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.INTERFACE}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.TEMPLATE_LITERALS}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.TEMPLATE_LITERALS}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.MODULES}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateFeature}{(}{Feature.ASYNC_FUNCTIONS}{,}{n}{)}}{;}}{{{validateNodeType}{(}{Token.AWAIT}{,}{n}{)}}{;}}{{{validateWithinAsyncFunction}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateFeature}{(}{Feature.GENERATORS}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{setFeatureSet}{(}{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{setFeatureSet}{(}{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Compiler}}{{compiler}{=}{{new}{{Compiler}}{()}}}{;}}{{{compiler}{.}{setFeatureSet}{(}{{acceptedLanguage}{.}{toFeatureSet}{()}}{)}}{;}}{{return}{compiler}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{options.skipNonTranspilationPasses}{)}{{{}{{{whitespaceOnlyPasses}{()}}{;}}{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{FeatureSet.ES6}{)}}{)}{{{}{{{transpileAndDontCheck}{()}}{;}}{}}}}{}}}{else}{{{}{{{check}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{getOptions}{()}}{.}{needsTranspilationFrom}{(}{FeatureSet.ES6}{)}}}
{AST_ROOT_SC2NF{{{compiler}{.}{getOptions}{()}}{.}{needsTranspilationFrom}{(}{FeatureSet.ES6}{)}}}
{AST_ROOT_SC2NF{{{Node}}{{root2}{=}{{compiler}{.}{parseSyntheticCode}{(}{STRING_CONSTANT}{,}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options.dartPass}{&&}{{!}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES6}{)}}}}{)}{{{}{{{checks}{.}{add}{(}{dartSuperAccessorsPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options.rewritePolyfills}{=}{{flags.rewritePolyfills}{&&}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES6}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{replaceNode}{(}{n}{,}{{minCond}{.}{getMinimized}{(}{MinimizationStyle.PREFER_UNNEGATED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{precedence}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.DESTRUCTURING}{,}{Feature.ARRAY_PATTERN_REST}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}{{if}{(}{{TranspilationPasses}{.}{isScriptEs6OrHigher}{(}{script}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{isScriptEs6OrHigher}{(}{scriptRoot}{)}}}
{AST_ROOT_SC2NF{{isScriptEs6OrHigher}{(}{singleRoot}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isScriptEs6OrHigher}{(}{scriptRoot}{)}}{)}{{{}{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{callback}{)}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isScriptEs6OrHigher}{(}{singleRoot}{)}}{)}{{{}{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{singleRoot}{,}{callback}{)}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{!}{forTranspileOnly}}{||}{{(}{{{{{{compiler}{.}{getOptions}{()}}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES6}{)}}{&&}{{TranspilationPasses}{.}{isScriptEs6OrHigher}{(}{scriptRoot}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Node}}{singleRoot}}{:}{{root}{.}{children}{()}}{)}{{{}{{if}{(}{{TranspilationPasses}{.}{isScriptEs6OrHigher}{(}{singleRoot}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{isConst}{&&}{{!}{{JsdocUtil}{.}{hasAnnotatedType}{(}{jsdoc}{)}}}{&&}{{!}{{NodeUtil}{.}{isNamespaceDecl}{(}{nameNode}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{rhs}{.}{replaceWith}{(}{{{IR}{.}{cast}{(}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{,}{{JsdocUtil}{.}{getQmarkTypeJSDoc}{()}}{)}}{.}{srcrefTree}{(}{rhs}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{Es6RewriteModules}}{(}{this}{)}}{.}{processFile}{(}{root}{,}{forceRewrite}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{stage1Passes}{()}}{;}}{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{stage2Passes}{()}}{;}}{}}}}{{{compiler}{.}{performPostCompilationTasks}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{restoreState}{(}{serializedInputStream}{)}}{;}}{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{stage2Passes}{()}}{;}}{}}}}{{{compiler}{.}{performPostCompilationTasks}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{performPostCompilationTasks}{()}}{;}}}
{AST_ROOT_SC2NF{{{performPostCompilationTasks}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{{compiler}{.}{getFeatureSet}{()}}{.}{has}{(}{feature}{)}}}{)}{{{}{{{violation}{(}{{STRING_CONSTANT}{+}{feature}}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{union}{(}{{factory}{.}{getFeatures}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{LanguageMode}}{mode}}{:}{{LanguageMode}{.}{values}{()}}{)}{{{}{{if}{(}{{mode.featureSet}{.}{has}{(}{feature}{)}}{)}{{{}{{return}{mode}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{union}{(}{FeatureSet.TYPESCRIPT}{)}}}{;}}{{return}{{{nextToken}{()}}{.}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.DESTRUCTURING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.DESTRUCTURING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.ARRAY_PATTERN_REST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.DESTRUCTURING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.NEW_TARGET}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.EXPONENT_OP}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.ARROW_FUNCTIONS}{,}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.ARROW_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{TokenType.STAR_STAR_EQUAL}{.}{equals}{(}{operator.type}{)}}{)}{{{}{{{features}{=}{{features}{.}{with}{(}{Feature.EXPONENT_OP}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{with}{(}{Feature.TRAILING_COMMA}{)}}}{;}}{{if}{(}{config.warnTrailingCommas}{)}{{{}{{{errorReporter}{.}{reportWarning}{(}{commaToken.location.start}{,}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.REST_PARAMETERS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.DEFAULT_PARAMETERS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Keywords}{.}{isKeyword}{(}{name.value}{)}}{)}{{{}{{{features}{=}{{features}{.}{with}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expectedFeatures}{!=}{null}}{)}{{{}{{{{assertFS}{(}{result.features}{)}}{.}{contains}{(}{expectedFeatures}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expectedFeatures}{!=}{null}}{)}{{{}{{{{assertFS}{(}{result.features}{)}}{.}{contains}{(}{expectedFeatures}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.DESTRUCTURING}{)}}{;}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.CLASSES}{,}{Feature.MEMBER_DECLARATIONS}{,}{Feature.CONST_DECLARATIONS}{,}{Feature.LET_DECLARATIONS}{)}}{;}}}
{AST_ROOT_SC2NF{{m.featureSet}{.}{has}{(}{Feature.ASYNC_FUNCTIONS}{)}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.DESTRUCTURING}{,}{Feature.DEFAULT_PARAMETERS}{)}}{;}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.MEMBER_DECLARATIONS}{)}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{featureSet}{.}{version}{()}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.STRING_CONTINUATION}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{feature}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{feature}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.SETTER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.GETTER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{with}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isValidSimpleName}{(}{name}{)}}{)}{{{}{{return}{true}{;}}{}}}{else}{{{}{{return}{{{mode}{.}{has}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}{&&}{{TokenStream}{.}{isKeyword}{(}{name}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{features}{.}{has}{(}{Feature.MODULES}{)}}}
{AST_ROOT_SC2NF{{{setFeatureSet}{(}{{featureSet}{.}{without}{(}{Feature.MODULES}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{BitSet}}{modules}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{hasConditionalAncestor}{(}{{parent}{.}{getParent}{()}}{)}}{)}{{{}{{{info}{.}{disallowMovement}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{parse}{(}{{{String}}{js}}{)}{{{}{{return}{{parse}{(}{js}{,}{TypeInferenceMode.NEITHER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{root}{.}{isRoot}{()}}{,}{STRING_CONSTANT}{,}{{root}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPrettyPrintSame}{(}{{STRING_CONSTANT}{+}{{String}{.}{format}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{parts}{=}{{path}{.}{split}{(}{MODULE_SLASH}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testConstTarget}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{POLYMER_INVALID_DECLARATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{wrapInFunction}{(}{original}{)}}{,}{{wrapInFunction}{(}{expected}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testGoogScopeClassOutput}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExportEs6ArrowFunction}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExportConst}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExportLet}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testExtractableExport4}{()}{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExtractableExport3}{()}{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6Class_testMethod}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertNoWarningEs6}{(}{{{String}}{js}}{)}{{{}{{{testSame}{(}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertAmbiguousEs6}{(}{{{String}}{js}}{)}{{{}{{{testSame}{(}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAliasInModule}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{injectNamespace}{=}{false}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDuplicate_destructuring}{()}{{{}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{DUPLICATE_REQUIRE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDuplicate_shorthand}{()}{{{}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{DUPLICATE_REQUIRE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{STRING_CONSTANT}{,}{UNUSED_LABEL}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{ReplaceIdGenerators.CONDITIONAL_ID_GENERATOR_CALL}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testClass}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{ReplaceIdGenerators.INVALID_GENERATOR_PARAMETER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPassModule}{()}{{{}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{mode}{=}{CheckRequiresForConstructors.Mode.FULL_COMPILE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGoogModuleWithEmptyDestructuringRequire}{()}{{{}{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{EXTRA_REQUIRE_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemovalMultipleAssignment3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemovalMultipleAssignment2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemoveRepeatedProperties}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemoveUnnecessaryBodies}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstPropagationPrivateProperties2}{()}{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorAlias4}{()}{{{}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorAlias3}{()}{{{}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPathologicalCaseThatsOkAnyway}{()}{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAME_DEFINED_LATE_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNullUndefined}{()}{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}{{{assertMismatches}{(}{{Collections}{.}{<}{{TypeMismatch}}{>}{emptyList}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}{{{assertMismatches}{(}{{ImmutableList}{.}{of}{(}{{fromNatives}{(}{STRING_TYPE}{,}{NUMBER_TYPE}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{params}{+}{STRING_CONSTANT}{+}{arguments}{+}{STRING_CONSTANT}}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{fooDfn}{+}{STRING_CONSTANT}}{,}{WRONG_ARGUMENT_COUNT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{declarations}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{findNameType}{(}{STRING_CONSTANT}{,}{globalScope}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{findNameType}{(}{STRING_CONSTANT}{,}{globalScope}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testBadObjectLiteralCast1}{()}{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ClosureCodingConvention.OBJECTLIT_EXPECTED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{!}{found}}{&&}{{!}{{n}{.}{isFunction}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{typedefExterns}{,}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{{value}{(}{STRING_CONSTANT}{)}}{)}}}{;}}{{{testNoWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCustomBanUnknownThisProp2}{()}{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testNoWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCustomRestrictThrow2}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{allowSourcelessWarnings}{()}}{;}}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{EXTERNS}{+}{STRING_CONSTANT}}{,}{{code}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{code}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{input}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testViolationWhitelisted2}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testViolationWhitelisted1}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNotViolation2}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{unusedT}}}
{AST_ROOT_SC2NF{{{Node}}{{export}{=}{{n}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testObjLit}{()}{{{}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{needsTranspilationFrom}{(}{ES6}{)}}{&&}{{!}{options.skipTranspilationAndCrash}}}{)}{{{}{{{checks}{.}{add}{(}{convertStaticInheritance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{report}{(}{{JSError}{.}{make}{(}{AbstractCompiler.READ_ERROR}{,}{{input}{.}{getName}{()}}{,}{{e}{.}{getMessage}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{defUse}{=}{{new}{{MustBeReachingVariableDef}}{(}{cfg}{,}{scope}{,}{compiler}{,}{scopeCreator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{useDef}{=}{{new}{{MaybeReachingVariableUse}}{(}{cfg}{,}{scope}{,}{compiler}{,}{scopeCreator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{liveness}{=}{{new}{{LiveVariablesAnalysis}}{(}{cfg}{,}{functionScope}{,}{compiler}{,}{{SyntacticScopeCreator}{.}{makeUntyped}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LiveVariablesAnalysis}}{{liveness}{=}{{new}{{LiveVariablesAnalysis}}{(}{cfg}{,}{scope}{,}{compiler}{,}{{t}{.}{getScopeCreator}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringDefaultVals}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringAssignNewVarNames}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringAssignWithoutDeclaration}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringBasicAssign}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayDestructuringVarAssign}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayDestructuringSwap}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{{GraphReachability}}{<>}}{(}{controlFlowGraph}{,}{REACHABLE}{)}}{.}{compute}{(}{{{controlFlowGraph}{.}{getEntry}{()}}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{inheritsCall}{.}{useSourceInfoIfMissingFromForTree}{(}{metadata.superClassNameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{lp}{=}{{{{scope}{.}{getParentScope}{()}}{.}{getRootNode}{()}}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{cssNames}{)}}{.}{isEqualTo}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{cssNames}{)}}{.}{isEqualTo}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{cssNames}{)}}{.}{isEqualTo}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{{IOException}}{|}{{ClassNotFoundException}}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{COULD_NOT_DESERIALIZE_AST}{,}{filename}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RuntimeTypeCheckTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testVarArguments}{()}{{{}{{{testConsts}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{peepholePass}{.}{setRetraverseOnChange}{(}{retraverseOnChange}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue}{()}{{{}{{{allowExternsChanges}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RemoveUnusedClassPropertiesTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testProvideInExterns}{()}{{{}{{{allowExternsChanges}{()}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableRunTypeCheckAfterProcessing}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableRunTypeCheckAfterProcessing}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableRunTypeCheckAfterProcessing}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableRunTypeCheckAfterProcessing}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableRunTypeCheckAfterProcessing}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableRunTypeCheckAfterProcessing}{()}}{;}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{()}}{;}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{()}}{;}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{transpileEnabled}{&&}{{!}{{compiler}{.}{hasErrors}{()}}}}{)}{{{}{{{transpileToEs5}{(}{compiler}{,}{externsRoot}{,}{mainRoot}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{{String}}{getFilename}{()}{{{}{{return}{filename}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{J2clCheckPassTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableCheckAccessControls}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableCheckAccessControls}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{GatherRawExportsTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{disableCompareJsDoc}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{useGoogleCodingConvention}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RemoveUnusedVarsTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6ONoEs6}{()}{{{}{{{allowExternsChanges}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Es6ExternsCheckTest}{()}{{{}{{super}{(}{EXTERNS_BASE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{allowExternsChanges}{()}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{POSSIBLE_INEXISTENT_PROPERTY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{declarationCheck}{=}{{!}{sanityCheck}}}{;}}{{{disableCompareAsTree}{()}}{;}}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{ProcessDefinesTest}{()}{{{}{{super}{(}{{DEFAULT_EXTERNS}{+}{STRING_CONSTANT}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{runSmartNameRemoval}}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{()}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{()}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{()}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{()}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{()}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{()}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableCompareAsTree}{()}}{;}}{{{super}{.}{testExternChanges}{(}{input}{,}{expectedExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableValidateAstChangeMarking}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{RuntimeTypeCheckTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{value}{=}{{key}{.}{removeFirstChild}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{assign}{=}{{IR}{.}{assign}{(}{windowPropAccess}{,}{{nameNode}{.}{removeFirstChild}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2016}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{FeatureSet.ES5}{;}}{}}}}}
{AST_ROOT_SC2NF{{{binaryNamespaceName}{.}{setOriginalName}{(}{currentScript.legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{binaryNamespaceName}{.}{setOriginalName}{(}{currentScript.legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNamespaceName}{.}{setOriginalName}{(}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{binaryNamespaceName}{.}{setOriginalName}{(}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{initializer}{=}{{n}{.}{removeFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{extern}{=}{{externs}{.}{removeFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{{FeatureSet}{.}{latest}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ModulesTestUtils}{.}{testModules}{(}{this}{,}{input}{,}{{STRING_CONSTANT}{+}{expected}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{caught}{.}{isArrayPattern}{()}}{)}{{{}{{{validateArrayPattern}{(}{Token.CATCH}{,}{caught}{)}}{;}}{}}}{else}{{{}{{{validateObjectPattern}{(}{Token.CATCH}{,}{caught}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{source}{,}{ConstParamCheck.CONST_NOT_STRING_LITERAL_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNotStringLiteralConstantArgument3}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNotStringLiteralConstantArgument2}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNotStringLiteralConstantArgument1}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNotConstantArgument}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{shadowedVar}{!=}{null}}{&&}{{!}{{{shadowedVar}{.}{getScope}{()}}{.}{isModuleScope}{()}}}}}
{AST_ROOT_SC2NF{{{shadowedVar}{!=}{null}}{&&}{{shadowedVar}{.}{isLocal}{()}}}}
{AST_ROOT_SC2NF{{{{this}{.}{redeclarationHandler}}{=}{DEFAULT_REDECLARATION_HANDLER}}{;}}}
{AST_ROOT_SC2NF{{ScopeScanner}{(}{{{AbstractCompiler}}{compiler}}{,}{{{Scope}}{scope}}{)}{{{}{{this}{(}{compiler}{,}{DEFAULT_REDECLARATION_HANDLER}{,}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Es6SyntacticScopeCreator}{(}{{{AbstractCompiler}}{compiler}}{,}{{{ScopeFactory}}{scopeFactory}}{)}{{{}{{this}{(}{compiler}{,}{DEFAULT_REDECLARATION_HANDLER}{,}{scopeFactory}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{count}{=}{{{RandomNameGenerator.FIRST_CHAR}{.}{size}{()}}{*}{{(}{{{RandomNameGenerator.NONFIRST_CHAR}{.}{size}{()}}{+}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{count}{=}{{{RandomNameGenerator.FIRST_CHAR}{.}{size}{()}}{*}{{(}{{{RandomNameGenerator.NONFIRST_CHAR}{.}{size}{()}}{+}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{random}}{=}{random}}{;}}{{{reset}{(}{{ImmutableSet}{.}{<}{{String}}{>}{of}{()}}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isNameDeclaration}{(}{{var}{.}{getParentNode}{()}}{)}}{&&}{{!}{{{{var}{.}{getParentNode}{()}}{.}{getParent}{()}}{.}{isForIn}{()}}}}}
{AST_ROOT_SC2NF{{{Scope}}{{scope}{=}{{scopeCreator}{.}{createScope}{(}{root}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{RemoveNonDeclarations}}{(}{compiler}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Assign}}{assign}}{:}{{assignsByVar}{.}{get}{(}{var}{)}}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{assign.assignNode}{)}}{;}}{{{assign}{.}{remove}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{changeProxy}}{=}{{new}{{AstChangeProxy}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{clonesByCurrent}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{hasExternsRoot}{()}}{&&}{{n}{==}{externsRoot}}}{)}{{{}{{{externsScope}{=}{{t}{.}{getScope}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{FeatureSet.ES5}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2016}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setChromePass}{(}{flags.chromePass}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{isChromePassEnabled}{()}}{)}{{{}{{{checks}{.}{add}{(}{chromePass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{{FeatureSet}{.}{latest}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isFunction}{()}}{)}{{{}{{{NormalizeStatements}{.}{visitFunction}{(}{n}{,}{compiler}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{visitFunction}{(}{n}{,}{compiler}{)}}{)}{{{}{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{Es6TypedToEs6Converter.CANNOT_CONVERT_BOUNDED_GENERICS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{modules}{,}{{expected}{(}{expected}{)}}{,}{{warning}{(}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{js}{)}}{,}{{expected}{(}{js}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{modules}{,}{{expected}{(}{expected}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{warning}{,}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{js}{)}}{,}{{expected}{(}{expected}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{externs}{,}{js}{,}{ConstCheck.CONST_REASSIGNED_VALUE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{kExterns}{+}{extraExterns}}{,}{source}{)}}{;}}{{{assertEquals}{(}{expected}{,}{noSideEffectCalls}{)}}{;}}{{{noSideEffectCalls}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue2508576_1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExternFunction}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLitExtern}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testJSDocDescInExterns}{()}{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_MSG_ANNOTATION}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEnum}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testErrorExterns}{(}{{jsdoc}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testProvideInExterns}{()}{{{}{{{allowExternsChanges}{()}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createModuleStar}{(}{moduleInputs}{)}}{,}{{expected}{(}{expected}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testNoWarning}{(}{js}{)}}{;}}{{{assertEquals}{(}{fieldTypes}{,}{{mapToString}{(}{{lastPass}{.}{getRenamedTypesForTesting}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{DEFAULT_EXTERNS}{+}{externs}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSkipNativeFunctionMethod}{()}{{{}{{{String}}{{js}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{code}{,}{{addLibraries}{(}{code}{,}{libraries}{)}}{,}{{warning}{(}{warning}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testGlobalAliasWithProperties5}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{.}{testError}{(}{inputs}{,}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{currentLocationAbstractionIdentifier}{=}{locationAbstractionIdentifier}}{;}}{{{testSame}{(}{SHARED_EXTERNS}{,}{js}{)}}{;}}{{{currentJsRoot}{=}{{{getLastCompiler}{()}}{.}{jsRoot}}}{;}}{{return}{currentAnalysis}{;}}{}}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{error}{(}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{,}{message}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{error}{(}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{,}{message}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{code}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{code}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}{{{assertEquals}{(}{{ImmutableSet}{.}{copyOf}{(}{properties}{)}}{,}{{{getLastCompiler}{()}}{.}{getExternProperties}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{tester}{.}{testSame}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{ALL_NATIVE_EXTERN_TYPES}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{METHOD_DEFS}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{OBJECT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{OBJECT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{externs}{,}{source}{)}}{;}}{{{assertEquals}{(}{expected}{,}{found}{)}}{;}}{{{found}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{lang}{)}}{;}}{{{test}{(}{code}{,}{expected}{,}{{warning}{(}{warning}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testError}{(}{googModule}{,}{MISSING_MODULE_OR_PROVIDE}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testRenameWithExterns1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{input}{,}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testRenameWithExterns2}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRenameWithExterns1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{overrides}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{Node}}{(}{Token.TRUE}{)}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{ProcessDefines.UNKNOWN_DEFINE_WARNING}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{overrides}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{Node}}{(}{Token.TRUE}{)}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{ProcessDefines.UNKNOWN_DEFINE_WARNING}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testNamespaceResetInLocalScope2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{NAMESPACE_REDEFINED_WARNING}{)}}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNamespaceResetInLocalScope1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{NAMESPACE_REDEFINED_WARNING}{)}}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNamespaceResetInGlobalScope1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{NAMESPACE_REDEFINED_WARNING}{)}}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{CompilerTestCase.ACTIVE_X_OBJECT_DEF}{,}{STRING_CONSTANT}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{findNameType}{(}{STRING_CONSTANT}{,}{globalScope}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{CompilerTypeTestCase.DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Es6RewriteModules}{.}{isEs6ModuleRoot}{(}{root}{)}}{)}{{{}{{{moduleRewriter}{.}{processFile}{(}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{exportsNameNode}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{,}{exportsNameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{importNode}{.}{getFirstChild}{()}}{.}{isDestructuringLhs}{()}}{,}{importNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentScript.defaultExportRhs}{==}{null}}{,}{currentScript.defaultExportRhs}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isStringKey}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{scriptRoot}{.}{isScript}{()}}{,}{scriptRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{c}{.}{isScript}{()}}{,}{c}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testES6VarAliasClassDeclarationWithoutNew}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6VarAliasClassDeclarationWithNew}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{FeatureSet.ES5}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2016}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isEnhancedFor}{(}{parent}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSimpleConstAliasInCode}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{error.node}{.}{getParent}{()}}{.}{isStringKey}{()}}{,}{{error.node}{.}{getParent}{()}}{)}}{;}}{{{fix}{.}{delete}{(}{{error.node}{.}{getParent}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{regexMatcher}{.}{matches}{()}}{,}{STRING_CONSTANT}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{regexMatcher}{.}{matches}{()}}{,}{STRING_CONSTANT}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{fullNameMatcher}{.}{matches}{()}}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{name}{.}{isName}{()}}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{mayWarnAboutGlobalThis}{(}{expr}{)}}{;}}}
{AST_ROOT_SC2NF{{{mayWarnAboutGlobalThis}{(}{expr}{)}}{;}}}
{AST_ROOT_SC2NF{{{T}}{o}}}
{AST_ROOT_SC2NF{{public}{HierarchicalSet}{(}{{{@}{Nullable}}{{{HierarchicalSet}}{<}{{T}}{>}}{parent}}{)}{{{}{{{{this}{.}{parent}}{=}{parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isObjectLitOrCastOfObjectLit}{(}{n}{)}}{&&}{{{n}{.}{getParent}{()}}{.}{isArrowFunction}{()}}}{)}{{{}{{return}{true}{;}}{}}}{else}{{{}{{return}{{{precedence}{(}{n}{)}}{<}{minPrecedence}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Var}}{var}}{:}{{{computeLiveness}{(}{src}{)}}{.}{getEscapedLocals}{()}}{)}{{{}{{{{assertThat}{(}{var.name}{)}}{.}{isNotEqualTo}{(}{name}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{visitCallSite}{(}{{{NodeTraversal}}{t}}{,}{{{Node}}{callNode}}{,}{{{FunctionState}}{functionState}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{Node}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{(}{stringLiteralMatches}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{MemoizedScopeCreator}}{(}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{MemoizedScopeCreator}}{(}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createModuleStar}{(}{moduleInputs}{)}}{,}{expected}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{expected}{==}{null}}{)}}{;}}{{{expected}{=}{{fromSources}{(}{{(}{{Sources}}{)}{part}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{{Sources}}{srcs}{(}{{{{List}}{<}{{SourceFile}}{>}}{files}}{)}{{{}{{return}{{new}{{FlatSources}}{(}{files}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Sources}}{srcs}{(}{{{{String}}{[]}}{srcTexts}}{)}{{{}{{return}{{new}{{FlatSources}}{(}{{createSources}{(}{STRING_CONSTANT}{,}{srcTexts}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Sources}}{srcs}{(}{{{String}}{srcText}}{)}{{{}{{return}{{new}{{FlatSources}}{(}{{maybeCreateSources}{(}{filename}{,}{srcText}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{modules}{)}}{,}{{expected}{(}{modules}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{modules}{)}}{,}{{expected}{(}{expected}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTypeRegistry}{(}{{getTypeIRegistry}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCount}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{Es6RewriteModules}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ModulesTestUtils}{.}{testModulesError}{(}{this}{,}{STRING_CONSTANT}{,}{Es6RewriteModules.NAMESPACE_IMPORT_CANNOT_USE_STAR}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES7_MODULES}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES6_MODULES}{;}}{}}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{if}{(}{forAnnotations}{)}{{{}{{return}{{sb}{.}{append}{(}{{getReferenceName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{{{type}{.}{toMaybeObjectType}{()}}{.}{getEnumeratedTypeOfEnumObject}{()}}{.}{toNonNullAnnotationString}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{getEnumeratedTypeOfEnumObject}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypeI}}{getEnumeratedTypeOfEnumObject}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{sum}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{s}{instanceof}{{TypedScope}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{curNode}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{s}{.}{isGlobal}{()}}{||}{{s}{.}{isModuleScope}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{type}{=}{Name.Type.OTHER}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_TYPED}{)}}{;}}{{{{this}{.}{mode}}{=}{InputLanguageMode.TRANSPILATION}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{functionScope}{.}{isDeclaredSloppy}{(}{name}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{current}{.}{isDeclaredSloppy}{(}{oldName}{,}{false}{)}}{)}{{{}{return;}{}}}{else}{{{}{{{current}{=}{{current}{.}{getParent}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isName}{()}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{ARGUMENT_ARRAY_ALIAS}{)}}{&&}{{!}{{jsScope}{.}{isDeclaredSloppy}{(}{ARGUMENT_ARRAY_ALIAS}{,}{false}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{jsScope}{.}{isDeclaredSloppy}{(}{name}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{warningsGuard}}{=}{{new}{{ComposeWarningsGuard}}{(}{{new}{{SuppressDocWarningsGuard}}{(}{this}{,}{{{getDiagnosticGroups}{()}}{.}{getRegisteredGroups}{()}}{)}}{,}{warningsGuard}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{createInternalScopeCreator}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{,}{factory}{,}{factory}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{ScopeScanner}{(}{{{AbstractCompiler}}{compiler}}{,}{{{Scope}}{scope}}{)}{{{}{{this}{(}{compiler}{,}{DEFAULT_REDECLARATION_HANDLER}{,}{scope}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{ScopeScanner}}{(}{compiler}{,}{redeclarationHandler}{,}{scope}{,}{null}{)}}{.}{populate}{()}}{;}}}
{AST_ROOT_SC2NF{{{undeclareInteral}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isAnyFor}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{}{{{logger}{.}{fine}{(}{{STRING_CONSTANT}{+}{scopeRoot}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{,}{{compiler}{.}{getChangedScopeNodesForPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{root}{,}{changedScopeNodes}{,}{this}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{static}{{CompilerPass}}{getContextualRenameInverter}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{ContextualRenameInverter}}{(}{compiler}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MakeDeclaredNamesUnique}{()}{{{}{{this}{(}{{new}{{ContextualRenamer}}{()}}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{(}{markChanges}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{RenameLabels}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{this}{(}{compiler}{,}{{new}{{DefaultNameSupplier}}{()}}{,}{true}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{,}{{compiler}{.}{getChangedScopeNodesForPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{nameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{functionNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{nameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isStatement}{(}{statement}{)}}{,}{statement}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{functionBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{paramList}{.}{isParamList}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{processRequire}{(}{expr}{)}}{;}}{}}}{else}{{{}{{{checkState}{(}{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{markConstructorToProcess}{(}{{{Node}}{ctorNode}}{)}{{{}{{{checkArgument}{(}{{ctorNode}{.}{isFunction}{()}}{,}{ctorNode}{)}}{;}}{{{constructorsToProcess}{.}{add}{(}{ctorNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{getMaxArity}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getMinArity}{(}{)}{;}}}
{AST_ROOT_SC2NF{{index}{<}{{funType}{.}{getMaxArity}{()}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{currentType}{.}{getMaxArity}{()}}{<=}{{expectedType}{.}{getMaxArity}{()}}}{)}{{{}{{return}{expectedType}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{res}{,}{{new}{{NumberValue}}{(}{op1}{)}}{,}{o}{,}{op2}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{res}{,}{op1}{,}{o}{,}{{new}{{NumberValue}}{(}{op2}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{members}{.}{isEmpty}{()}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{nt}{.}{isGeneric}{()}}{,}{nt}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{nameNode}{.}{getParent}{()}}{.}{isVar}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{funNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isOr}{()}}{||}{{n}{.}{isAnd}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isGetElem}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{checkNotNull}{(}{funType}{)}}{.}{toFunctionType}{()}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{declNode}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{lendsName}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{qnameNode}{.}{isName}{()}}{||}{{qnameNode}{.}{isGetProp}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{qnameNode}{.}{isName}{()}}{||}{{qnameNode}{.}{isGetProp}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{fnName}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{qnameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{qnameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{maybeAssign}{.}{isAssign}{()}}{)}{{{}{{{maybeAssign}{.}{putBooleanProp}{(}{Node.ANALYZED_DURING_GTI}{,}{true}{)}}{;}}{}}}{else}{{{}{{{checkState}{(}{{maybeAssign}{.}{isExprResult}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{currentScope}{.}{isNamespace}{(}{qname}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PropertyDef}}{{propdef}{=}{{checkNotNull}{(}{{getPropDefFromClass}{(}{superType}{,}{pname}{)}}{)}}}{;}}{{{inheritedPropDefs}{=}{{ImmutableSet}{.}{of}{(}{propdef}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{t}{=}{{castTypes}{.}{get}{(}{n}{)}}}{;}}{{{checkNotNull}{(}{t}{)}}{;}}{{return}{t}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{part}{,}{STRING_CONSTANT}{)}}{;}}{{{parts}{.}{add}{(}{part}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{name}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{passName}{.}{equals}{(}{logStats.pass}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{mode}{!=}{TracerMode.OFF}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{qualifiedName}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{lastLink.nextLink}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{token}{==}{JsDocToken.PIPE}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{token}{==}{JsDocToken.LEFT_CURLY}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{token}{==}{JsDocToken.LEFT_CURLY}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{annotation}{==}{Annotation.IMPLEMENTS}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{other}{instanceof}{{NominalType}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{getSubtypesWithProperty}{(}{{pname}{.}{getLeftmostName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{isPropDefinedOnSubtype}{(}{{pname}{.}{getLeftmostName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{nt1.rawType}{.}{equals}{(}{nt2.rawType}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{rawType}}{.}{equals}{(}{other.rawType}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{inheritsFromIObjectReflexive}{()}}{&&}{{other}{.}{inheritsFromIObjectReflexive}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{other}{.}{isStructuralInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{typeMap}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{getCtorPropDeclaredType}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isUninstantiatedGenericType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{types}{.}{size}{()}}{==}{{typeParams}{.}{size}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{RawNominalType}}{getRawNominalType}{()}{{{}{{{checkState}{(}{{!}{{{this}{.}{rawType}}{.}{isFrozen}{()}}}{)}}{;}}{{return}{{this}{.}{rawType}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{value}{.}{isInterface}{()}}{)}}{;}}{{return}{{new}{{SubtypeCache}}{(}{{{this}{.}{m}}{.}{with}{(}{key}{,}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{node}{.}{isSuper}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{(}{{scope}{instanceof}{{TypedScope}}}{)}}}{)}}{;}}{{return}{{new}{{Arguments}}{(}{scope}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{registry}{,}{null}{,}{null}{,}{isNativeType}{,}{{constructor}{.}{getTemplateTypeMap}{()}}{)}{;}}{{{checkNotNull}{(}{constructor}{)}}{;}}{{{{this}{.}{constructor}}{=}{constructor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{m}{==}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{line}{<}{nextLine}}{||}{{col}{<=}{nextCol}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{variableNode}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{n}{.}{getChildCount}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{isDisposalStack}{)}}{;}}{{if}{(}{{!}{{isDisposalStack}{.}{isEmpty}{()}}}{)}{{{}{{return}{{isDisposalStack}{.}{peek}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{isConstructorStack}{)}}{;}}{{if}{(}{{!}{{isDisposalStack}{.}{isEmpty}{()}}}{)}{{{}{{return}{{isConstructorStack}{.}{peek}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{checkingPolicy}{!=}{DisposalCheckingPolicy.OFF}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isStatementBlock}{(}{parent}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{ret}{.}{isReturn}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{node}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{classByAlias}{.}{containsKey}{(}{original}{)}}{)}}{;}}{{{classByAlias}{.}{put}{(}{alias}{,}{{classByAlias}{.}{get}{(}{original}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{subclassMember}{.}{isAssign}{()}}{,}{subclassMember}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{staticGetProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}{{{n}{.}{removeFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{root}{.}{isRoot}{()}}{)}}{;}}{{if}{(}{{{root}{.}{getChangeTime}{()}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isCast}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{first}{.}{getParent}{()}}{==}{{last}{.}{getParent}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{n}{.}{getParent}{()}}{.}{isGetProp}{()}}{,}{n}{)}}{;}}{{{nodeToRename}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parentNode}{.}{isNormalBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{node}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isLive}{(}{{{Var}}{v}}{)}{{{}{{{checkNotNull}{(}{v}{)}}{;}}{{return}{{liveSet}{.}{get}{(}{v.index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{other}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{other}{)}}{;}}{{{{this}{.}{liveSet}}{=}{{(}{{BitSet}}{)}{{other.liveSet}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{mode}{!=}{TypeInferenceMode.BOTH}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{subns.namespaceType}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{prop}{.}{isOptional}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{defSite}}{=}{{checkNotNull}{(}{defSite}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{clinitName}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{hasProcessBeenRun}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{symbolName}{,}{value}{)}{;}}{{{{this}{.}{exportPath}}{=}{{checkNotNull}{(}{exportPath}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{pathDefinition}{.}{isVar}{()}}{)}}{;}}{{{pathDefinition}{.}{setJSDocInfo}{(}{jsdoc}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{valueToExport}{.}{isObjectLit}{()}}{)}}{;}}{{{initializer}{=}{{createExternObjectLit}{(}{valueToExport}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{before}{.}{isExprResult}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{keyValPairs.length}{%}{NUMBER_CONSTANT}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isNamespacePlaceholder}{(}{decl}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isNamespacePlaceholder}{(}{decl}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{newModule}{==}{minimumModule}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{explicitNode}{!=}{node}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{providedModule}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parent}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isRegistered}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isCorrectRegisterFunction}{(}{{{TweakFunction}}{registerFunction}}{)}{{{}{{{checkNotNull}{(}{registerFunction}{)}}{;}}{{return}{{{this}{.}{registerFunction}}{==}{registerFunction}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{scriptNodeCount}{==}{NUMBER_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{moduleNode}{.}{isModuleBody}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{parent}{.}{isModuleBody}{()}}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{parent}{.}{isModuleBody}{()}}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{isEs6ModuleRoot}{(}{root}{)}}{,}{root}{)}}{;}}{{{clearState}{()}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{subtree}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{subtree}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}{{{visit}{(}{script}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{member}{.}{isStaticMember}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{constructor}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{object}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{frozen}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{fnNode}{.}{isFunction}{()}}{||}{{type}{.}{isFunctionType}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{registry}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{envs}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{n}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{typeMap}{.}{get}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{typeMap}{.}{size}{()}}{>=}{SIZE_THRESHOLD}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{meaning}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{n}{.}{isCall}{()}}{||}{{n}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isCall}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{NodeUtil}{.}{isAssociative}{(}{{n}{.}{getToken}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{node}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{{groupIndex}{>=}{NUMBER_CONSTANT}}{&&}{{groupIndex}{<=}{NUMBER_CONSTANT}}}{)}}{;}}{{{{this}{.}{groupIndex}}{=}{groupIndex}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isGetProp}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{typei}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{callSite}{.}{isCall}{()}}{||}{{callSite}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{callType}{==}{Token.CALL}}{||}{{callType}{==}{Token.NEW}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{{node}{.}{getParent}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{sideEffectInfo}{)}}{;}}{{{updateSideEffectsForNode}{(}{sideEffectInfo}{,}{traversal}{,}{node}{,}{enclosingFunction}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{functionInfo}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{cacheCall}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{=}{{checkNotNull}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{initialization}{.}{getGrandparent}{()}}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{value}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{varNode}{)}}{,}{varNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{scriptRoot}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{Time}{(}{{{String}}{name}}{)}{{{}{{{checkNotNull}{(}{name}{)}}{;}}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Event}{(}{{{T}}{value}}{)}{{{}{{{checkNotNull}{(}{value}{)}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{exportDefinition}{.}{hasInlinableName}{(}{{currentScript.exportsToInline}{.}{keySet}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isScript}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentScript.willCreateExportsObject}{||}{currentScript.hasCreatedExportObject}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{importNode}{.}{getFirstChild}{()}}{.}{isDestructuringLhs}{()}}{,}{importNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentScript.defaultExportRhs}{==}{null}}{,}{currentScript.defaultExportRhs}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isStringKey}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{scriptRoot}{.}{isScript}{()}}{,}{scriptRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{c}{.}{isScript}{()}}{,}{c}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{returnNode}{.}{isReturn}{()}}{,}{returnNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{containsModule}{(}{legacyNamespace}{)}}{)}}{;}}{{return}{{{scriptDescriptionsByGoogModuleNamespace}{.}{get}{(}{legacyNamespace}{)}}{.}{declareLegacyNamespace}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isInterface}{()}}{)}}{;}}{{{isStructuralInterface}{=}{flag}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{isConstructor}{()}}{||}{{isInterface}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{that}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{interfaceType}{.}{isInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{msgBuilder}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{STRING_CONSTANT}{.}{equals}{(}{projectId}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{classNode}{.}{isClass}{()}}{)}}{;}}{{return}{{{{classNode}{.}{getFirstChild}{()}}{.}{isName}{()}}{&&}{{parent}{.}{isName}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{rootNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{typeMap}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getRestFormalsType}{()}{{{}{{{checkState}{(}{{restFormals}{!=}{null}}{)}}{;}}{{return}{restFormals}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{propertyName}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{superSet}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{objectLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parent}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parent}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSTypeExpression}}{getTypeExprForErrorReporting}{()}{{{}{{{checkState}{(}{{state}{==}{State.DURING_RESOLUTION}}{)}}{;}}{{return}{typeExpr}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{state}{!=}{State.RESOLVED}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getType}{()}{{{}{{{checkState}{(}{{state}{==}{State.RESOLVED}}{)}}{;}}{{return}{type}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{typeExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{renameStrategy}{==}{RenameStrategy.MAPPED}}{)}}{;}}{{return}{{new}{{MappedNameSupplier}}{(}{mappings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{grandparent}{.}{isLabel}{()}}{)}}{;}}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{functionBody}{.}{getParent}{()}}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isLabel}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isFunction}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{Iterables}{.}{isEmpty}{(}{options}{)}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{oldName}{.}{equals}{(}{p.oldName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{String}}{>}}{getRenamingMap}{()}{{{}{{{checkNotNull}{(}{renamingMap}{)}}{;}}{{return}{renamingMap}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{refNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{invalidatingPropRef}{)}{{{}{{{checkNotNull}{(}{propName}{)}}{;}}{{{invalidateProperty}{(}{propName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{token}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.SPREAD}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{mayBeExpression}{(}{value}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{expr}{.}{isString}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.REGEXP}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{expr}}{:}{exprs}{)}{{{}{{{checkState}{(}{{mayBeExpressionOrEmpty}{(}{expr}{)}}{)}}{;}}{{{arraylit}{.}{addChildToBack}{(}{expr}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{mayBeExpression}{(}{target}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{arg}}{:}{args}{)}{{{}{{{checkState}{(}{{mayBeExpression}{(}{arg}{)}}{)}}{;}}{{{newcall}{.}{addChildToBack}{(}{arg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{arg}}{:}{args}{)}{{{}{{{checkState}{(}{{mayBeExpression}{(}{arg}{)}}{,}{arg}{)}}{;}}{{{call}{.}{addChildToBack}{(}{arg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{name}{.}{isLabelName}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.CONTINUE}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{name}{.}{isLabelName}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.BREAK}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{finallyBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{name}{.}{isEmpty}{()}}}{)}}{;}}{{return}{{Node}{.}{newString}{(}{Token.LABEL_NAME}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{,}{expr}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.EXPR_RESULT}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.RETURN}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{checkState}{(}{{mayBeStatementNoReturn}{(}{stmt}{)}}{)}}{;}}{{{paramList}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{checkState}{(}{{mayBeStatementNoReturn}{(}{stmt}{)}}{)}}{;}}{{{block}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{)}}{;}}{{{paramList}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{)}}{;}}{{{block}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{)}}{;}}{{{Node}}{{block}{=}{{new}{{Node}}{(}{Token.BLOCK}{,}{stmt}{)}}}{;}}{{return}{block}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{param}{.}{isName}{()}}{||}{{param}{.}{isRest}{()}}}{)}}{;}}{{{paramList}{.}{addChildToBack}{(}{param}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{param}{.}{isName}{()}}{||}{{param}{.}{isRest}{()}}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.PARAM_LIST}{,}{param}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{node}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{NodeUtil}{.}{isVarDeclaration}{(}{node}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{IR}{.}{getprop}{(}{{IR}{.}{objectlit}{()}}{,}{{name}{.}{cloneNode}{()}}{)}}{,}{true}{)}{;}}{{{checkArgument}{(}{{name}{.}{isString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{)}{;}}{{{checkArgument}{(}{{node}{.}{isAssign}{()}}{)}}{;}}{{{assignment}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{node}{,}{inExterns}{)}{;}}{{{checkArgument}{(}{{NodeUtil}{.}{isFunctionExpression}{(}{node}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{)}{;}}{{{checkArgument}{(}{{node}{.}{isFunction}{()}}{)}}{;}}{{{function}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{lValue}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{fileName}{.}{equals}{(}{{file}{.}{getName}{()}}{)}}{)}}{;}}{{{sourceFile}{=}{file}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{parent}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{NodeUtil}{.}{isObjectLitKey}{(}{n}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{expressionRoot}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{notAlreadyOutstanding}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{Thread}{.}{currentThread}{()}}{==}{startThread}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{noCycles}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{parentClass}{.}{isInterface}{()}}{)}}{;}}{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{funNode}{,}{CONFLICTING_EXTENDED_TYPE}{,}{STRING_CONSTANT}{,}{functionName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{thisRoot}{.}{getToken}{()}}{==}{Token.BANG}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{params}{!=}{null}}{||}{{jsdoc}{!=}{null}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{getFirstChild}{()}}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{getFirstChild}{()}}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{e}{!=}{null}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{td}{!=}{null}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{commonTypes}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{options.sourceMapDetailLevel}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{line}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{sourceMapDetailLevel}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{getCfg}{()}}{.}{hasNode}{(}{useNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{ownerFunction}{==}{null}}{||}{{type}{==}{null}}}{)}}{;}}{{{ownerFunction}{=}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{templateType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{index}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{values}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{scope}{.}{isFunctionScope}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{o}{instanceof}{{ObjectType}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{qname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{qname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{qname}{.}{isIdentifier}{()}}{)}}{;}}{{{Property}}{{p}{=}{{getLeftmostProp}{(}{qname}{)}}}{;}}{{return}{{p}{!=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{p}{!=}{null}}{)}}{;}}{{return}{{{p}{.}{getType}{()}}{.}{getProp}{(}{{qname}{.}{getAllButLeftmost}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{{this}{.}{ns}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isLoose}{||}{other.isLoose}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{pname}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{boxedInfo.length}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{resultNominalType}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{nominalType}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ObjectType}}{(}{commonTypes}{,}{{commonTypes}{.}{getObjectType}{()}}{,}{{checkNotNull}{(}{commonTypes.BOTTOM_PROPERTY_MAP}{)}}{,}{null}{,}{null}{,}{false}{,}{ObjectKind.UNRESTRICTED}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{reference}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{node}{.}{isName}{()}}{,}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isLive}{(}{{{Var}}{v}}{)}{{{}{{{checkNotNull}{(}{v}{)}}{;}}{{return}{{liveSet}{.}{get}{(}{v.index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{other}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{other}{)}}{;}}{{{{this}{.}{liveSet}}{=}{{(}{{BitSet}}{)}{{other.liveSet}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{first}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{ctorType}{.}{isConstructor}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{parent}{.}{isFunction}{()}}{)}}{;}}{{{parent}{.}{setJSType}{(}{varType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isGetElem}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{preservedNamespaces}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{isDefined}{(}{qnameNode}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{s}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{fnName}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{{getScopeHelper}{(}{{new}{{QualifiedName}}{(}{fnName}{)}}{)}}{!=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{qnameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isTopLevel}{()}}{)}}{;}}{{{{this}{.}{unknownTypeNames}}{=}{{ImmutableSet}{.}{copyOf}{(}{names}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{isPrototypeMethod}{()}{{{}{{{checkArgument}{(}{{root}{!=}{null}}{)}}{;}}{{return}{{NodeUtil}{.}{isPrototypeMethod}{(}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{declaredType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{getBody}{()}{{{}{{{checkArgument}{(}{{root}{.}{isFunction}{()}}{)}}{;}}{{return}{{NodeUtil}{.}{getFunctionBody}{(}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{commonTypes}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{NodeUtil}{.}{isGet}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{left}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isGetElem}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isNew}{()}}{)}}{;}}{{if}{(}{{inForcedStringContext}{(}{n}{)}}{)}{{{}{{return}{{tryFoldInForcedStringContext}{(}{n}{)}}{;}}{}}}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{node}{.}{isAdd}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isInstanceOf}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{originalTypeofNode}{.}{isTypeOf}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ConstParamCheck}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{{{this}{.}{compiler}}{=}{{checkNotNull}{(}{compiler}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{options.propertyRenaming}{==}{PropertyRenamingPolicy.ALL_UNQUOTED}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{callbacks}{.}{isEmpty}{()}}}{)}}{;}}{{return}{{new}{{CombinedCompilerPass}}{(}{compiler}{,}{callbacks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{checks}{.}{contains}{(}{closureGoogScopeAliases}{)}}{)}{{{}{{{checkState}{(}{{checks}{.}{contains}{(}{checkVariableReferences}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{pass1Index}{!=}{{-}{NUMBER_CONSTANT}}}{&&}{{pass2Index}{!=}{{-}{NUMBER_CONSTANT}}}}{)}{{{}{{{checkState}{(}{{pass1Index}{<}{pass2Index}}{,}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{PassFactory}}{pass}}{:}{passes}{)}{{{}{{{checkState}{(}{{!}{{pass}{.}{isOneTimePass}{()}}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{PassFactory}}{pass}}{:}{passes}{)}{{{}{{{checkState}{(}{{pass}{.}{isOneTimePass}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parametersList}{.}{isParamList}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{usingNameNode}{.}{isName}{()}}{)}}{;}}{{return}{{referencesByNameNode}{.}{get}{(}{usingNameNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{otherLocation}{instanceof}{{VisibilityBasedEffectLocation}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{otherLocation}{instanceof}{{VisibilityBasedEffectLocation}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{isStorageNode}{(}{node}{)}}{)}}{;}}{{return}{{NodeUtil}{.}{isLValue}{(}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{isStorageNode}{(}{node}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{variableReference}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isGetProp}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{caseBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{first}{.}{getString}{()}}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{token.type}{==}{TokenType.STRING}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{config.keepGoing}{==}{Config.RunMode.KEEP_GOING}}{)}}{;}}{{{bodyNode}{=}{{IR}{.}{block}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{ret}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{work}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{isZipEntry}{(}{zipURL}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{arrowFunction}{.}{isArrowFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{templateJs}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{templateJs}}{=}{refasterJsTemplate}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{templateJs}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSModule}}{{module}{=}{{input}{.}{getModule}{()}}}{;}}{{{checkNotNull}{(}{module}{)}}{;}}{{{entryPointInputsPerModule}{.}{put}{(}{module}{,}{input}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isCall}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{child}{.}{getParent}{()}}{==}{n}}{)}}{;}}{{{normalizeNodeTypes}{(}{child}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{thisType}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{moduleSpecifier}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{{ref}{.}{getTwin}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isObjKey}{||}{isQName}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{ref.node}{.}{getParent}{()}}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child}{.}{hasOneChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{cycleCount}{!=}{maxIterations}}{,}{NON_HALTING_ERROR_MSG}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getArgIndex}{()}{{{}{{{checkState}{(}{{{this}{.}{argIndex}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{{return}{{this}{.}{argIndex}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getExpectedType}{()}{{{}{{return}{{checkNotNull}{(}{{this}{.}{expected}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getFoundType}{()}{{{}{{return}{{checkNotNull}{(}{{this}{.}{found}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getPropName}{()}{{{}{{return}{{checkNotNull}{(}{{this}{.}{propName}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{firstScript}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{namespace}{.}{hasExternsRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{namespace}{.}{hasExternsRoot}{()}}{)}}{;}}{{{{this}{.}{namespace}}{=}{namespace}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{{prevUsedRenameMap}{.}{getNewNameToOriginalNameMap}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{this}{.}{newName}}{==}{null}}{)}}{;}}{{{{this}{.}{newName}}{=}{newName}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{nameNode}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{n}{.}{isAnd}{()}}{||}{{n}{.}{isOr}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{replacementFnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{resultType}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{objectType}{.}{isUnknownType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{errorRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{this}{.}{knownConstants}}{.}{isEmpty}{()}}{)}}{;}}{{{{this}{.}{knownConstants}}{=}{knownConstants}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{NodeUtil}{.}{isFunctionObjectApply}{(}{callNode}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{callSiteType}{!=}{CallSiteType.UNSUPPORTED}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{==}{DecompositionType.DECOMPOSABLE}}{)}{{{}{{return}{CallSiteType.DECOMPOSABLE_EXPRESSION}{;}}{}}}{else}{{{}{{{checkState}{(}{{type}{==}{DecompositionType.UNDECOMPOSABLE}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{!=}{callSiteType}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{!=}{callSiteType}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{fnRecursionName}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isDo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isVanillaFor}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isWhile}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isExprConditional}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isSimpleAssignment}{(}{n}{)}}{)}}{;}}{{return}{{{n}{.}{getFirstChild}{()}}{.}{getLastChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isSimpleAssignment}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isSwitch}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{subtree}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isTry}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{builtinObj}{=}{{checkNotNull}{(}{{{this}{.}{commonTypes}}{.}{getObjectType}{()}}{,}{STRING_CONSTANT}{)}}}{;}}{{{protoNT}{=}{builtinObj}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}{{{super}{.}{addProperty}{(}{pname}{,}{defSite}{,}{type}{,}{isConstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isClass}{()}}{)}{{{}{{{checkState}{(}{{{this}{.}{name}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{{getAllPropsOfClass}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isClass}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{ancestor}{.}{isInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{ancestor}{.}{isClass}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}{{{{this}{.}{ctorFn}}{=}{ctorFn}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isStruct}{()}{{{}{{{checkState}{(}{{{isFrozen}{()}}{||}{{isClass}{()}}}{)}}{;}}{{return}{{{this}{.}{objectKind}}{.}{isStruct}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{getPrototypeObject}{()}{{{}{{{checkState}{(}{{this}{.}{isFrozen}}{)}}{;}}{{return}{{this}{.}{protoObject}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{objectKind}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{commonTypes}{)}{;}}{{{{this}{.}{objs}}{=}{{checkNotNull}{(}{objs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{commonTypes}{)}{;}}{{{{this}{.}{objs}}{=}{{checkNotNull}{(}{objs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{{ImmutableSet}}{<}{{EnumType}}{>}}{getEnums}{()}{{{}{{return}{{checkNotNull}{(}{enums}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{{ImmutableSet}}{<}{{ObjectType}}{>}}{getObjs}{()}{{{}{{return}{{checkNotNull}{(}{objs}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{{{Iterable}}{<}{{TypeI}}{>}}{getParameterTypes}{()}{{{}{{return}{{{checkNotNull}{(}{{getFunType}{()}}{)}}{.}{getParameterTypes}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getNominalTypeIfSingletonObj}{()}}{.}{isClassy}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getObjTypeIfSingletonObj}{()}}{.}{getPropertyDefSite}{(}{propertyName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getObjTypeIfSingletonObj}{()}}{.}{getOwnPropertyDefSite}{(}{propertyName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{getFunTypeIfSingletonObj}{()}}{.}{getReturnType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{this}{.}{getFunTypeIfSingletonObj}{()}}{.}{getMinArity}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{getFunTypeIfSingletonObj}{()}}{.}{getThisType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{{getFunTypeIfSingletonObj}{()}}{.}{getInstanceTypeOfCtor}{()}}{!=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{{getObjs}{()}}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{type}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{arrayType}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{getObjs}{()}}{.}{isEmpty}{()}}{)}{{{}{{{checkState}{(}{{!}{{{getEnums}{()}}{.}{isEmpty}{()}}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{areSubtypes}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{{getObjs}{()}}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{JSType}{(}{{{JSTypes}}{commonTypes}}{)}{{{}{{{checkNotNull}{(}{commonTypes}{)}}{;}}{{{{this}{.}{commonTypes}}{=}{commonTypes}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{newExpr}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{newExpr}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{NodeUtil}{.}{isCallOrNew}{(}{call}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{function}{.}{isFunction}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{value}{.}{getParent}{()}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{DefinitionUseSiteFinder}{.}{isCallOrNewSite}{(}{site}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{==}{LifeCycleStage.NORMALIZED}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{isIdentifier}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{isIdentifier}{()}}}{)}}{;}}{{return}{{new}{{QualifiedName}}{(}{{parts}{.}{subList}{(}{NUMBER_CONSTANT}{,}{{parts}{.}{size}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{fnNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{unsafe}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{NodeUtil}{.}{isFunctionObjectApply}{(}{callNode}{)}}}{)}}{;}}{{{argMap}{.}{put}{(}{THIS_MARKER}{,}{{NodeUtil}{.}{newUndefinedNode}{(}{callNode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{lValue}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{setIn}{(}{{{L}}{in}}{)}{{{}{{{checkNotNull}{(}{in}{)}}{;}}{{{{this}{.}{in}}{=}{in}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{outBefore}{.}{size}{()}}{==}{{state.out}{.}{size}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{setOut}{(}{{{L}}{out}}{)}{{{}{{{checkNotNull}{(}{out}{)}}{;}}{{{{this}{.}{out}}{=}{out}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{setIn}{(}{{{L}}{in}}{)}{{{}{{{checkNotNull}{(}{in}{)}}{;}}{{{{this}{.}{in}}{=}{in}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{dep}{)}}{;}}{{{Preconditions}{.}{checkState}{(}{{dep}{!=}{this}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}{{{deps}{.}{add}{(}{dep}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{inputs}{.}{contains}{(}{other}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isSwitch}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{allCatchNodes}{.}{hasOneChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{type}{instanceof}{{TypeDeclarationNode}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{reader}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{whitelist}{)}}{;}}{{{{this}{.}{whitelist}}{=}{{normalizeWhitelist}{(}{whitelist}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{JSTypeExpression}}{getTypeExprForErrorReporting}{()}{{{}{{{checkState}{(}{{{this}{.}{state}}{==}{State.DURING_RESOLUTION}}{)}}{;}}{{return}{typeExpr}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{state}}{!=}{State.RESOLVED}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getPropType}{()}{{{}{{{checkState}{(}{{{this}{.}{state}}{==}{State.RESOLVED}}{)}}{;}}{{return}{enumPropType}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getEnumeratedType}{()}{{{}{{{checkState}{(}{{{this}{.}{state}}{==}{State.RESOLVED}}{)}}{;}}{{return}{declaredType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{typeExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isVarBlock}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isReturnExpressBlock}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isFoldableExpressBlock}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{n}{.}{isNot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{declaration}{.}{isName}{()}}{||}{{declaration}{.}{isStringKey}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isCallOrNew}{(}{call}{)}}{)}}{;}}{{return}{{getNthSibling}{(}{{call}{.}{getSecondChild}{()}}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}{{return}{{getNthSibling}{(}{{{function}{.}{getSecondChild}{()}}{.}{getFirstChild}{()}}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{fnNode}{.}{isFunction}{()}}{)}}{;}}{{return}{{fnNode}{.}{getSecondChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isNormalBlock}{()}}{)}}{;}}{{return}{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isTry}{()}}{)}}{;}}{{return}{{n}{.}{getSecondChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isTry}{()}}{)}}{;}}{{return}{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{NodeUtil}{.}{isObjectDefinePropertiesDefinition}{(}{definePropertiesCall}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isLValue}{(}{n}{)}}{)}}{;}}{{{lhsNodes}{.}{add}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{function}{.}{isFunction}{()}}{)}}{;}}{{return}{{isNameReferenced}{(}{{function}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{,}{MATCH_NOT_THIS_BINDING}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{fn}{.}{isFunction}{()}}{,}{fn}{)}}{;}}{{return}{{fn}{.}{getLastChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{tryNode}{.}{isTry}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{objlit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isObjectLit}{()}}{||}{{n}{.}{isClassMembers}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{isNew}{()}}{,}{n}{)}}{;}}{{return}{{n}{.}{isOnlyModifiesThisCall}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{isCall}{()}}{,}{n}{)}}{;}}{{return}{{{(}{{{n}{.}{getSideEffectFlags}{()}}{&}{Node.FLAG_LOCAL_RESULTS}}{)}}{>}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{node}{.}{hasTwoChildren}{()}}{,}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isClass}{()}}{)}}{;}}{{return}{{n}{.}{getLastChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isFunction}{()}}{||}{{n}{.}{isClass}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isFunction}{()}}{||}{{n}{.}{isClass}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{descriptor}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isAssignmentOp}{(}{assignNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isAssignmentOp}{(}{assignNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{modifyCallSites}{)}{{{}{{{checkNotNull}{(}{defFinder}{)}}{;}}{{{callSiteOptimizer}{=}{{new}{{CallSiteOptimizer}}{(}{compiler}{,}{defFinder}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{this}{.}{fn}}{==}{null}}{)}}{;}}{{{{this}{.}{fn}}{=}{fn}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{changed}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{functionState}{.}{hasExistingFunctionDefinition}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{name}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isGet}{(}{child}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{hasProcessBeenRun}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{definitionNodeByDefinitionSite}{.}{values}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{site}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{hasProcessBeenRun}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{colorToNodeMap}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{exitCodeValue}{=}{{checkNotNull}{(}{exitCode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{entryPoints}{)}}{;}}{{{{this}{.}{entryPoints}}{=}{entryPoints}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{NUMBER_CONSTANT}{==}{{Iterables}{.}{size}{(}{inputs}{)}}}{)}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{{compiler}{.}{getOptions}{()}}{.}{outputJs}}{==}{OutputJs.NORMAL}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{specs}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{zipEntryName}{.}{contains}{(}{filename}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{input}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{exitCodeReceiver}}{=}{{checkNotNull}{(}{newExitCodeReceiver}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{inputsSupplier}{==}{null}}{^}{{modulesSupplier}{==}{null}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentInfo}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compilerOptions}}{=}{{checkNotNull}{(}{compilerOptions}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{c}{.}{isScript}{()}}{)}}{;}}{{{hotSwapScript}{(}{c}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{sourceString}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{js.length}{==}{NUMBER_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{nameNode}{.}{isQualifiedName}{()}}{)}}{;}}{{return}{{{{nameNode}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{TokenStream}{.}{isJSIdentifier}{(}{tempVarName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{newSourceInd}{<}{{sources}{.}{size}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{result}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isNew}{()}}{||}{{n}{.}{isCall}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{==}{LifeCycleStage.NORMALIZED}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{null}{==}{{m}{.}{put}{(}{type}{,}{top}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Integer}}{{priority}{=}{{priorities}{.}{get}{(}{n}{)}}}{;}}{{{checkNotNull}{(}{priority}{)}}{;}}{{return}{priority}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{handler}{.}{isTry}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{cur}{.}{getParent}{()}}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{next}{.}{isCase}{()}}{)}}{;}}{{{createEdge}{(}{node}{,}{Branch.ON_FALSE}{,}{next}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{exceptionHandler}{.}{peek}{()}}{==}{parent}}{)}}{;}}{{{exceptionHandler}{.}{pop}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{aliasExpanded}{=}{{checkNotNull}{(}{{aliasDefinition}{.}{getQualifiedName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{aliasReference}{.}{hasChildren}{()}}}{)}}{;}}{{{aliasReference}{.}{addChildToFront}{(}{replacement}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{matches}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{,}{matches}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentStatement}{.}{isDo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{parent}{==}{{scope}{.}{getParent}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{nameNode}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{ancestors.length}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{int}{getMaskForBitIndex}{(}{{int}{bitIndex}}{)}{{{}{{{checkArgument}{(}{{bitIndex}{>=}{NUMBER_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{NUMBER_CONSTANT}{<}{<}{bitIndex}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{t}{.}{getScope}{()}}{.}{isFunctionBlockScope}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{edgeAnnotationStack}{,}{STRING_CONSTANT}{)}}{;}}{{{popAnnotations}{(}{edgeAnnotationStack}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{nodeAnnotationStack}{,}{STRING_CONSTANT}{)}}{;}}{{{popAnnotations}{(}{nodeAnnotationStack}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{call}{.}{isCall}{()}}{)}}{;}}{{{call}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{return}{call}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{parent}{.}{isCall}{()}}{)}}{;}}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{parent}{,}{GOOG_CLASS_DESCRIPTOR_NOT_VALID}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{call}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{parent}{.}{isVar}{()}}{)}}{;}}{{{parent}{.}{removeChild}{(}{nameNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{NodeUtil}{.}{createsBlockScope}{(}{root}{)}}{,}{scope}{)}}{;}}{{{symbolStack}{.}{push}{(}{{new}{{NameContext}}{(}{anonymousNode}{,}{scope}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isGeneric}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{isGeneric}{()}}{)}}{;}}{{return}{{substituteParametricGenerics}{(}{typeMap}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{String}}{typeParam}}{:}{{this}{.}{typeParameters}}{)}{{{}{{{checkState}{(}{{!}{{typeMap}{.}{containsKey}{(}{typeParam}{)}}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{isLoose}{()}}{||}{{f2}{.}{isLoose}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{boxedInfo.length}{==}{NUMBER_CONSTANT}}{)}}{;}}{{{f1}{.}{isSubtypeOfHelper}{(}{f2}{,}{true}{,}{subSuperMap}{,}{boxedInfo}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{f1}{.}{isLoose}{()}}{||}{{f2}{.}{isLoose}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}{{return}{{requiredFormals}{.}{size}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}{{return}{{outerVarPreconditions}{.}{get}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getRestFormalsType}{()}{{{}{{{checkNotNull}{(}{restFormals}{)}}{;}}{{return}{restFormals}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isUniqueConstructor}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{commonTypes}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{o}{instanceof}{{DeferredCheck}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{insideQualifiedName}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{pname}{==}{null}}{||}{{pname}{.}{isIdentifier}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{varName}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{env}{.}{putType}{(}{varName}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{pname}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{env}{.}{getType}{(}{pname}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{expr}{.}{isNew}{()}}{||}{{expr}{.}{isCall}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{callNode}{.}{isCall}{()}}{||}{{callNode}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{thisExpr}{.}{isThis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{propAccessNode}{.}{isGetProp}{()}}{||}{{propAccessNode}{.}{isGetElem}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{propAccessNode}{.}{isGetProp}{()}}{||}{{propAccessNode}{.}{isGetElem}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{funType}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{receiver}{==}{null}}{||}{isFwd}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{formalType}{.}{isBottom}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{call}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{logicalOp}{==}{Token.AND}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeEnv}}{{outEnv}{=}{{checkNotNull}{(}{{getOutEnv}{(}{dn}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{fnType}{.}{getFunType}{()}}{==}{null}}{)}{{{}{{{checkState}{(}{{fnType}{.}{isUnknown}{()}}{)}}{;}}{{return}{{{this}{.}{commonTypes}}{.}{qmarkFunction}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{qnameRoot}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{original}{)}}{;}}{{return}{{{original}{!=}{{this}{.}{node}}}{||}{{this}{.}{isChanged}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isNot}{()}}{)}}{;}}{{return}{{{(}{{{normalizeChildren}{(}{node}{,}{children}{)}}{[}{NUMBER_CONSTANT}{]}}{)}}{.}{change}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{{n}{.}{getParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{getParent}{()}}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{dNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{dNode}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{doSanityChecks}{&&}{{sourceFile}{!=}{null}}}{)}{{{}{{{checkState}{(}{{sourceFile}{.}{equals}{(}{{n}{.}{getSourceFileName}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{this}{.}{declaration}}{==}{null}}{)}}{;}}{{{{this}{.}{declaration}}{=}{ref}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{otherScopeParent}{==}{null}}{)}{{{}{{{checkState}{(}{{globalScope}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{declNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{fn}{.}{isConstructor}{()}}{||}{{fn}{.}{isInterface}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{fn}{.}{isConstructor}{()}}{||}{{fn}{.}{isInterface}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{destructuringLhs}{.}{isDestructuringLhs}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{lhs}{.}{isName}{()}}{)}}{;}}{{{checkShortName}{(}{t}{,}{lhs}{,}{{{callNode}{.}{getLastChild}{()}}{.}{getString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{callNode}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentModule}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{!}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}}{)}}{;}}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{languageIn}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{languageIn}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{language}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{language}}{;}}{{{{this}{.}{languageOut}}{=}{language}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{entryPoints}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{funAstSize}{>}{NUMBER_CONSTANT}}{)}}{;}}{{{{this}{.}{maxFunctionSizeAfterInlining}}{=}{funAstSize}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{value}{instanceof}{{String}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{hasReferenceName}{()}}{)}}{;}}{{return}{{{getReferenceName}{()}}{.}{hashCode}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{{n}{.}{getParent}{()}}{.}{getFirstChild}{()}}{==}{n}}{)}}{;}}{{return}{{{{n}{.}{getParent}{()}}{.}{cloneTree}{()}}{.}{getFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isScript}{()}}{)}{{{}{{{checkState}{(}{{{this}{.}{script}}{==}{null}}{)}}{;}}{{{{this}{.}{script}}{=}{n}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{newReachable}{.}{getAnnotation}{()}}{!=}{REACHABLE}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{source}{)}{;}}{{{checkNotNull}{(}{source}{)}}{;}}{{{{this}{.}{excerpt}}{=}{excerpt}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{paramType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{boolean}{isASTNormalized}{()}{{{}{{{checkNotNull}{(}{compiler}{)}}{;}}{{return}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{compiler}{)}}{;}}{{return}{{compiler}{.}{areNodesEqualForInlining}{(}{n1}{,}{n2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{typeParameters}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{this}{.}{nominalType}}{==}{null}}{)}}{;}}{{{{this}{.}{nominalType}}{=}{t}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{returnType}{==}{null}}{)}}{;}}{{{returnType}{=}{t}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{restFormals}{==}{null}}{)}}{;}}{{{restFormals}{=}{t}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{t}{.}{isBottom}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{FunctionTypeBuilder}{(}{{{JSTypes}}{commonTypes}}{)}{{{}{{{{this}{.}{commonTypes}}{=}{{checkNotNull}{(}{commonTypes}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{qName}{!=}{null}}{&&}{{ownerName}{!=}{null}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{variableName}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{inputId}{)}}{;}}{{{sourceName}{=}{{NodeUtil}{.}{getSourceName}{(}{n}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{o}{instanceof}{{Property}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{inferredType}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{registry}{,}{templateTypeMap}{)}{;}}{{{setReferencedType}{(}{{checkNotNull}{(}{referencedType}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{DEFAULT_EXTERNS}{.}{length}{()}}{!=}{{externs}{.}{length}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{behaviorObjLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{behaviorObjLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{keys}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{namedType}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{name}{)}}{;}}{{{nonNullableTypeNames}{.}{add}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{source}{==}{null}}{||}{{source}{.}{isFunction}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{source}{.}{isFunction}{()}}{,}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{namesToTypes}{.}{containsKey}{(}{name}{)}}{)}}{;}}{{{register}{(}{t}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{,}{STRING_CONSTANT}{)}}{;}}{{{namesToTypes}{.}{put}{(}{name}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{TemplateType}}{getObjectIndexKey}{()}{{{}{{{checkNotNull}{(}{iObjectIndexTemplateKey}{)}}{;}}{{return}{{this}{.}{iObjectIndexTemplateKey}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{realSource}{)}}{;}}{{{{this}{.}{realSource}}{=}{realSource}}{;}}{{{{this}{.}{reportParseErrors}}{=}{reportParseErrors}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{declaration}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parent}{.}{isClassMembers}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parent}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{obj}{instanceof}{{AstChange}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{functionName}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{parameterName}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{labeledVariable}{.}{isVar}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{nameProp}{=}{{checkNotNull}{(}{{getOrCreateProperty}{(}{n}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{blockNode}{.}{isNormalBlock}{()}}{)}}{;}}{{if}{(}{{blockNode}{.}{hasChildren}{()}}{)}{{{}{{{markAllPropsRead}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{assignedAt}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{lhs}{.}{isQualifiedName}{()}}{)}}{;}}{{{writes}{.}{addLast}{(}{{new}{{PropertyWrite}}{(}{lhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{obj}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{internalScopeCreator}{)}}{;}}{{{internalScopeCreator}{.}{patchGlobalScope}{(}{topScope}{,}{scriptRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{defParent}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{use}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{t}{.}{getScopeRoot}{()}}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{callOrNew}{.}{isCall}{()}}{||}{{callOrNew}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{userOrderedInputs}{.}{containsAll}{(}{rootInputs}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{nameNode}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{name}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{current.renameMap}{.}{containsKey}{(}{name}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{fnNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{callNode}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{ORDER_CODE_REPLACEMENTS}{.}{isOrdered}{(}{replacements}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{ORDER_CODE_REPLACEMENTS}{.}{isOrdered}{(}{replacements}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{isFunction}{()}}{,}{n}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{interfaceType}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{RenameLabels}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{this}{(}{compiler}{,}{{new}{{DefaultNameSupplier}}{()}}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{static}{{CompilerPass}}{getContextualRenameInverter}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{ContextualRenameInverter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MakeDeclaredNamesUnique}{()}{{{}{{this}{(}{{new}{{ContextualRenamer}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprFwd}{(}{prop}{,}{recvLvalue.env}{,}{{firstNonBottom}{(}{indexType}{,}{UNKNOWN}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{put}{(}{typeParam}{,}{{firstNonBottom}{(}{t}{,}{UNKNOWN}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{pair}{=}{{analyzeExprFwd}{(}{index}{,}{pair.env}{,}{{firstNonBottom}{(}{indexType}{,}{UNKNOWN}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{builder}{.}{addRetType}{(}{{firstNonBottom}{(}{actualRetType}{,}{TOP}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{moduleResolutionMode}{=}{ModuleLoader.ResolutionMode.BROWSER}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6ThisWithImportModule}{()}{{{}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{Es6CheckModule.ES6_MODULE_REFERENCES_THIS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{result}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{result}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{forAnnotations}{)}{{{}{{return}{{sb}{.}{append}{(}{{this}{.}{primitiveType}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{root}{,}{changedScopeNodes}{,}{this}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{static}{{CompilerPass}}{getContextualRenameInverter}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{ContextualRenameInverter}}{(}{compiler}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MakeDeclaredNamesUnique}{()}{{{}{{this}{(}{{new}{{ContextualRenamer}}{()}}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{,}{{compiler}{.}{getChangedScopeNodesForPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{,}{{compiler}{.}{getChangedScopeNodesForPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{(}{markChanges}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{RenameLabels}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{this}{(}{compiler}{,}{{new}{{DefaultNameSupplier}}{()}}{,}{true}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{config}{,}{errorReporter}{,}{source}{,}{offset}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ParseResult}}{(}{root}{,}{comments}{,}{features}{,}{{p}{.}{getSourceMapURL}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{objectLit}{=}{{{n}{.}{getFirstChild}{()}}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{MustDef}}{createEntryLattice}{()}{{{}{{return}{{new}{{MustDef}}{(}{{returnAllVars}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{JSType}{.}{fromObjectType}{(}{{ObjectType}{.}{fromNominalType}{(}{{tmp}{.}{substituteGenerics}{(}{typeMap}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{nominal}{==}{null}}{?}{null}{:}{{{nominal}{.}{substituteGenerics}{(}{{{this}{.}{commonTypes}}{.}{MAP_TO_UNKNOWN}}{)}}{.}{getInstanceAsJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interf}{.}{inheritsFromIObjectReflexive}{()}}{)}{{{}{{{result}{.}{add}{(}{{interf}{.}{substituteGenerics}{(}{typeMap}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{NominalType}}{interf}}{:}{{{this}{.}{rawType}}{.}{getInterfaces}{()}}{)}{{{}{{{result}{.}{add}{(}{{interf}{.}{substituteGenerics}{(}{typeMap}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{this}{.}{rawType}}{.}{getSuperClass}{()}}{.}{substituteGenerics}{(}{typeMap}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{handleConstructorAnnotation}{(}{functionName}{,}{funNode}{,}{constructorType}{,}{parentClass}{,}{implementedIntfs}{,}{builder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{!}{{invalidatingTypes}{.}{isInvalidating}{(}{dest}{)}}}}
{AST_ROOT_SC2NF{{{!}{{props}{.}{containsKey}{(}{propName}{)}}}{&&}{{!}{{invalidatingTypes}{.}{isInvalidating}{(}{type}{)}}}{&&}{{NodeUtil}{.}{isImmutableValue}{(}{value}{)}}{&&}{{NodeUtil}{.}{isExecutedExactlyOnce}{(}{value}{)}}}}
{AST_ROOT_SC2NF{{{}{{{fn}{=}{{{fn}{==}{null}}{?}{null}{:}{{fn}{.}{withLoose}{()}}}}{;}}{{{props}{=}{{joinPropsLoosely}{(}{obj1.props}{,}{obj2.props}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{props}{=}{{joinPropsLoosely}{(}{obj1.props}{,}{obj2.props}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{doSlicing}{)}{{{}{{{pair.env}{=}{{envPutType}{(}{pair.env}{,}{name}{,}{{firstNonNull}{(}{declType}{,}{UNKNOWN}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preciseType}{=}{{firstNonNull}{(}{declType}{,}{requiredType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{result}{=}{{ft}{.}{getSuperPrototype}{()}}}{;}}{{{pair.type}{=}{{firstNonNull}{(}{result}{,}{UNDEFINED}{)}}}{;}}{{return}{pair}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{tmp}{=}{{t}{.}{getIndexedType}{()}}}{;}}{{return}{{firstNonNull}{(}{tmp}{,}{UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{declRetType}{=}{{firstNonNull}{(}{declRetType}{,}{UNKNOWN}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{name}{.}{getToken}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{InstrumentFunctions}}{(}{compiler}{,}{{compiler}{.}{getFunctionNames}{()}}{,}{options.instrumentationTemplate}{,}{options.appNameStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{setVariableMap}{(}{{runVariableRenaming}{(}{compiler}{,}{prevVariableMap}{,}{externs}{,}{root}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setPropertyMap}{(}{{rprop}{.}{getPropertyMap}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setAnonymousFunctionNameMap}{(}{{naf}{.}{getFunctionMap}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleMethodMotion}}{(}{compiler}{,}{{compiler}{.}{getCrossModuleIdGenerator}{()}}{,}{options.removeUnusedPrototypePropertiesInExterns}{,}{options.crossModuleCodeMotionNoStubMethods}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setStringMap}{(}{{pass}{.}{getStringMap}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setIdGeneratorMap}{(}{{pass}{.}{getSerializedIdMappings}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setFunctionNames}{(}{{pass}{.}{getFunctionNames}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setCssNames}{(}{newCssNames}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleMethodMotion}}{(}{compiler}{,}{{new}{{IdGenerator}}{()}}{,}{canMoveExterns}{,}{noStubs}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{{this}{.}{preserveClosurePrimitives}}{||}{{this}{.}{shouldGenerateTypedExterns}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preserveClosurePrimitives}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{Matcher}}{googModuleOrProvide}{()}{{{}{{return}{{anyOf}{(}{{googModule}{()}}{,}{{functionCall}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{skipStringLiteralEscapeSequence}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{boolean}{skipStringLiteralChar}{()}{{{}{{if}{(}{{peek}{(}{CHAR_CONS}{)}}{)}{{{}{{return}{{skipStringLiteralEscapeSequence}{(}{false}{)}}{;}}{}}}}{{{nextChar}{()}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{isUnknown}{()}}{||}{{(}{{{isAmbiguousObject}{()}}{&&}{{isLoose}{()}}}{)}}{||}{{(}{{{ft}{!=}{null}}{&&}{{ft}{.}{isTopFunction}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{{objType}{==}{null}}{||}{{types}{.}{contains}{(}{objType}{)}}}{||}{{objType}{.}{isAmbiguousObject}{()}}}{||}{{objType}{.}{isUnknownType}{()}}}{||}{{objType}{.}{isBottom}{()}}}}
{AST_ROOT_SC2NF{{return}{{{objType}{.}{isAmbiguousObject}{()}}{||}{{(}{{{{ft}{!=}{null}}{&&}{{ft}{.}{isConstructor}{()}}}{&&}{{isInvalidatingType}{(}{{ft}{.}{getInstanceType}{()}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{boolean}{mustReplaceThisAndArguments}{()}{{{}{{return}{{{isAsyncContext}{()}}{||}{{thisAndArgumentsContext}{.}{isAsyncContext}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{parent}{.}{getParent}{()}}{.}{isCall}{()}}{&&}{{NodeUtil}{.}{isInvocationTarget}{(}{parent}{)}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{expr}{.}{isCall}{()}}{||}{{expr}{.}{isTaggedTemplateLit}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{n}{.}{isFunction}{()}}{||}{{(}{{{n}{.}{isName}{()}}{&&}{{NodeUtil}{.}{isInvocationTarget}{(}{n}{)}}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{analyzeInvocationArgsFwdWhenError}{(}{call}{,}{inEnv}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{pname}{.}{contains}{(}{STRING_CONSTANT}{)}}}{,}{pname}{)}}{;}}{{return}{{env}{.}{getType}{(}{pname}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{FunctionTypeI}}{impl}}{:}{{constructor}{.}{getDirectSubTypes}{()}}{)}{{{}{{{list}{.}{add}{(}{{impl}{.}{getInstanceType}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{constructor}{!=}{null}}{)}{{{}{{for}{(}{{{FunctionTypeI}}{subType}}{:}{{constructor}{.}{getDirectSubTypes}{()}}{)}{{{}{{{addRelatedInstance}{(}{subType}{,}{related}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{{this}{.}{preserveGoogProvidesAndRequires}}{||}{{this}{.}{shouldGenerateTypedExterns}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preserveGoogProvidesAndRequires}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.UNNECESSARY_ESCAPE}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.TEMPLATE_ARGUMENT_MISSING}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{TEST_EXTERNS}{+}{externs}}{,}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.REDECLARED_PROPERTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{TEST_EXTERNS}{+}{externs}}{,}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.REDECLARED_PROPERTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{js}{,}{GlobalTypeInfoCollector.CTOR_IN_DIFFERENT_SCOPE}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{js}{,}{GlobalTypeInfoCollector.ANONYMOUS_NOMINAL_TYPE}{,}{GlobalTypeInfoCollector.ANONYMOUS_NOMINAL_TYPE}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.INEXISTENT_PARAM}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{GlobalTypeInfoCollector.WRONG_PARAMETER_COUNT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testUnknownTypeReferenceDoesntCrash}{()}{{{}{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{GlobalTypeInfoCollector.UNRECOGNIZED_TYPE_NAME}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.INEXISTENT_PARAM}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testVarDecls}{()}{{{}{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.ONE_TYPE_FOR_MANY_VARS}{)}}{;}}{{{typeCheck}{(}{STRING_CONSTANT}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}{{{typeCheck}{(}{STRING_CONSTANT}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{symbolTable}}{=}{{(}{{GlobalTypeInfo}}{)}{{compiler}{.}{getGlobalTypeInfo}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{{makePassFactory}{(}{STRING_CONSTANT}{,}{{new}{{GlobalTypeInfoCollector}}{(}{compiler}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{STRING_CONSTANT}{,}{GlobalTypeInfoCollector.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{GlobalTypeInfoCollector}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{globalTypeInfo}{=}{compilerState.globalTypeInfo}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{globalTypeInfo}}{=}{compiler.globalTypeInfo}}{;}}}
{AST_ROOT_SC2NF{{return}{{{getGlobalTypeInfo}{()}}{.}{getImplicitInterfaceUses}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{getGlobalTypeInfo}{()}}{.}{getMismatches}{()}}{;}}}
{AST_ROOT_SC2NF{{{globalTypeInfo}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{GlobalTypeInfoCollector.INVALID_PROP_OVERRIDE}{)}}{;}}}
{AST_ROOT_SC2NF{{{ignoreWarnings}{(}{GlobalTypeInfoCollector.INTERFACE_METHOD_NOT_IMPLEMENTED}{,}{TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{,}{{getRequiresEs6Message}{(}{Feature.ARRAY_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{,}{{getRequiresEs6Message}{(}{Feature.ARRAY_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{requiresLanguageModeMessage}{(}{LanguageMode.ECMASCRIPT5}{,}{Feature.TRAILING_COMMA}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{requiresLanguageModeMessage}{(}{LanguageMode.ECMASCRIPT5}{,}{Feature.TRAILING_COMMA}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{js}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Node}}{ast}}}
{AST_ROOT_SC2NF{{{features}{=}{{factory}{.}{getFeatures}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ImmutableMap}{.}{<}{{Pattern}}{,}{{DiagnosticType}}{>}{builder}{()}}{.}{put}{(}{{Pattern}{.}{compile}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{,}{TRAILING_COMMA}{)}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{with}{(}{Feature.ACCESSIBILITY_MODIFIER}{)}}}{;}}{{return}{{{nextToken}{()}}{.}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{TRAILING_COMMA_MESSAGE}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{TRAILING_COMMA_MESSAGE}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{js}{,}{warning}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{ast}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{union}{(}{{factory}{.}{getFeatures}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ImmutableMap}{.}{<}{{Pattern}}{,}{{DiagnosticType}}{>}{builder}{()}}{.}{put}{(}{{Pattern}{.}{compile}{(}{STRING_CONSTANT}{)}}{,}{TRAILING_COMMA}{)}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{union}{(}{FeatureSet.TYPESCRIPT}{)}}}{;}}{{return}{{{nextToken}{()}}{.}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{CheckMissingAndExtraRequires}}{(}{compiler}{,}{CheckMissingAndExtraRequires.Mode.SINGLE_FILE}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckMissingAndExtraRequires}}{(}{compiler}{,}{CheckMissingAndExtraRequires.Mode.FULL_COMPILE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckMissingAndExtraRequires}}{(}{compiler}{,}{CheckMissingAndExtraRequires.Mode.SINGLE_FILE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckMissingAndExtraRequires}}{(}{compiler}{,}{CheckMissingAndExtraRequires.Mode.FULL_COMPILE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFailGoogArray}{()}{{{}{{{mode}{=}{CheckMissingAndExtraRequires.Mode.SINGLE_FILE}}{;}}{{{testMissingRequireStrict}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFailConstant}{()}{{{}{{{mode}{=}{CheckMissingAndExtraRequires.Mode.SINGLE_FILE}}{;}}{{{testMissingRequireStrict}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testMissingRequireStrict}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckMissingAndExtraRequires}}{(}{compiler}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{mode}{=}{CheckMissingAndExtraRequires.Mode.FULL_COMPILE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{ARGUMENT_ARRAY_ALIAS}{)}}{&&}{{(}{{{!}{{jsScope}{.}{isDeclared}{(}{ARGUMENT_ARRAY_ALIAS}{,}{false}{)}}}{||}{{!}{childDeclared}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isName}{()}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{ARGUMENT_ARRAY_ALIAS}{)}}{&&}{{!}{{jsScope}{.}{isDeclared}{(}{ARGUMENT_ARRAY_ALIAS}{,}{false}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{jsScope}{.}{isDeclared}{(}{name}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fBlockScope}{.}{isDeclaredInFunctionBlockOrParameter}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fBlockScope}{.}{isDeclaredInFunctionBlockOrParameter}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fBlockScope}{.}{isDeclaredInFunctionBlockOrParameter}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{functionBlockScope}{.}{isDeclaredInFunctionBlockOrParameter}{(}{name}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{current}{.}{isDeclared}{(}{oldName}{,}{false}{)}}{)}{{{}{return;}{}}}{else}{{{}{{{current}{=}{{current}{.}{getParent}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{{this}{.}{preserveClosurePrimitives}}{||}{{this}{.}{shouldGenerateTypedExterns}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preserveClosurePrimitives}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{Matcher}}{googModuleOrProvide}{()}{{{}{{return}{{anyOf}{(}{{googModule}{()}}{,}{{functionCall}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeProcessAccessibilityModifier}{(}{tree}{,}{member}{,}{tree.access}{)}}{;}}}
{AST_ROOT_SC2NF{{{maybeProcessAccessibilityModifier}{(}{tree}{,}{n}{,}{tree.access}{)}}{;}}}
{AST_ROOT_SC2NF{{{maybeProcessAccessibilityModifier}{(}{functionTree}{,}{member}{,}{functionTree.access}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{enableTranspile}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{enableTranspile}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{env}{=}{{{analyzeExprBwd}{(}{prop}{,}{env}{,}{enumeratedType}{)}}{.}{env}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprBwd}{(}{prop}{,}{env}{,}{reqPtype}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprFwd}{(}{prop}{,}{env}{,}{enumeratedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprFwd}{(}{prop}{,}{env}{,}{reqPtype}{,}{specPtype}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PropertyDef}}{{propdef}{=}{{checkNotNull}{(}{{getPropDefFromClass}{(}{superType}{,}{pname}{)}}{,}{STRING_CONSTANT}{,}{superType}{,}{pname}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{state}{.}{getIn}{()}}{.}{reachingDef}}{.}{get}{(}{{allVarsInFn}{.}{get}{(}{name}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Var}}{{dep}{=}{{allVarsInFn}{.}{get}{(}{{n}{.}{getString}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{MustDef}}{createEntryLattice}{()}{{{}{{return}{{new}{{MustDef}}{(}{{allVarsInFn}{.}{values}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Var}}{>}}{vars}}}
{AST_ROOT_SC2NF{{return}{{{{state}{.}{getOut}{()}}{.}{mayUseMap}}{.}{get}{(}{{allVarsInFn}{.}{get}{(}{name}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Pattern}}{{pattern}{=}{{new}{{Pattern}}{()}}}{;}}{{{pattern.regExp}{=}{{new}{{RegExp}}{(}{string}{)}}}{;}}{{return}{pattern}{;}}{}}}}
{AST_ROOT_SC2NF{{{node}{=}{{new}{{{Node}}{<}{{E}}{>}}{(}{e}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{{Node}}{<}{{E}}{>}}{,}{{{ImmutableSet.Builder}}{<}{{E}}{>}}{>}}{{groupsTmp}{=}{{Maps}{.}{newLinkedHashMap}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{E}}{e}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{add}{(}{{{@}{Nullable}}{{E}}{e}}{)}{{{}{{{union}{(}{e}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{E}}{elem}}{:}{{other}{.}{elements}{()}}{)}{{{}{{{union}{(}{{other}{.}{find}{(}{elem}{)}}{,}{elem}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedLocalConst_withES6Modules}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnused}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedLocalConst}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnused}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedLocalLet_withES6Modules}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnused}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnused}{(}{STRING_CONSTANT}{)}}{;}}{{{assertUnused}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertUnused}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParam_withES6Modules}{()}{{{}{{{assertEarlyReferenceError}{(}{STRING_CONSTANT}{)}}{;}}{{{assertNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6Module_destructuring}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedCompoundAssign_withES6Modules}{()}{{{}{{{assertNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUsedInShorthandObjLit_withES6Modules}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUndeclared}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertUndeclared}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf}{()}{{{}{{{assertEarlyReferenceError}{(}{STRING_CONSTANT}{)}}{;}}{{{assertNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRedeclare_withES6Modules}{()}{{{}{{{assertRedeclare}{(}{STRING_CONSTANT}{)}}{;}}{{{assertNoWarning}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNoWarning}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Pattern}}{includeFilePattern}}}
{AST_ROOT_SC2NF{{{{{new}{{ProcessDefines}}{(}{compiler}{,}{{ImmutableMap}{.}{copyOf}{(}{replacements}{)}}{,}{options.checksOnly}{)}}{.}{injectNamespace}{(}{namespaceForChecks}{)}}{.}{process}{(}{externs}{,}{jsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{String}}{>}}{{defines}{=}{{{{new}{{ProcessDefines}}{(}{compiler}{,}{null}{,}{false}{)}}{.}{collectDefines}{(}{externs}{,}{root}{)}}{.}{keySet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{overrideDefines}{(}{{collectDefines}{(}{externs}{,}{root}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.BARE_MINIMUM}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ImmutableSet}{.}{of}{(}{TokenType.IDENTIFIER}{,}{TokenType.TYPE}{,}{TokenType.DECLARE}{,}{TokenType.MODULE}{,}{TokenType.NAMESPACE}{)}}{.}{contains}{(}{type}{)}}}
{AST_ROOT_SC2NF{{{!}{{peekId}{()}}}{&&}{{!}{{{ImmutableSet}{.}{of}{(}{TokenType.VOID}{,}{TokenType.OPEN_PAREN}{,}{TokenType.OPEN_CURLY}{,}{TokenType.TYPEOF}{)}}{.}{contains}{(}{{peekType}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.ES3}}{;}}{}}}}
{AST_ROOT_SC2NF{{{recordPropertyName}{(}{{getProp}{.}{getLastChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{recordPropertyName}{(}{prop}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Function}}{<}{{Node}}{,}{{Void}}{>}}{recordPropertyName}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.BARE_MINIMUM}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{new}{{ProcessDefines}}{(}{compiler}{,}{overrides}{,}{doReplacements}{)}}{.}{injectNamespace}{(}{namespace}{)}}{.}{process}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{{{new}{{ProcessDefines}}{(}{compiler}{,}{{ImmutableMap}{.}{copyOf}{(}{replacements}{)}}{,}{{!}{options.checksOnly}}{)}}{.}{injectNamespace}{(}{namespaceForChecks}{)}}{.}{process}{(}{externs}{,}{jsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{String}}{>}}{{defines}{=}{{{{new}{{ProcessDefines}}{(}{compiler}{,}{null}{,}{true}{)}}{.}{collectDefines}{(}{externs}{,}{root}{)}}{.}{keySet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{isDeclaration}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isAsyncFunction}{()}{{{}{{return}{{{isFunction}{()}}{&&}{{getBooleanProp}{(}{ASYNC_FN}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isArrowFunction}{()}{{{}{{return}{{{isFunction}{()}}{&&}{{getBooleanProp}{(}{ARROW_FN}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{key}{.}{isEmpty}{()}}{||}{{key}{.}{isComputedProp}{()}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{invalidatingTypes}{.}{isInvalidating}{(}{recvType}{)}}{||}{{isStructuralInterfacePrototype}{(}{recv}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{invalidatingTypes}{.}{isInvalidating}{(}{type}{)}}{)}{{{}{{{invalidate}{()}}{;}}{{return}{false}{;}}{}}}}{{{rootTypesByNode}{.}{put}{(}{node}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{invalidatingTypes}{.}{isInvalidating}{(}{top}{)}}{)}{{{}{{{invalidate}{()}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{PolymerPassStaticUtils}{.}{extractProperties}{(}{behaviorValue}{,}{PolymerClassDefinition.DefinitionType.ObjectLiteral}{,}{compiler}{)}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MemberDefinition}}{>}}{{properties}{=}{{PolymerPassStaticUtils}{.}{extractProperties}{(}{behaviorValue}{,}{PolymerClassDefinition.DefinitionType.ObjectLiteral}{,}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{PolymerPass}}{(}{compiler}{,}{NUMBER_CONSTANT}{,}{true}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{PolymerPass}}{(}{compiler}{,}{NUMBER_CONSTANT}{,}{false}{)}}{.}{process}{(}{externsRoot}{,}{mainRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getPropFromClass}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{rhs}{.}{matchesQualifiedName}{(}{ABSTRACT_METHOD_NAME}{)}}{||}{{(}{{{GlobalTypeInfoCollector}{.}{isCtorDefinedByCall}{(}{lhs}{)}}{&&}{{!}{{isFunctionBind}{(}{{rhs}{.}{getFirstChild}{()}}{,}{inEnv}{,}{true}{)}}}}{)}}}}
{AST_ROOT_SC2NF{{(}{{{GlobalTypeInfoCollector}{.}{isCtorDefinedByCall}{(}{nameNode}{)}}{&&}{{!}{{isFunctionBind}{(}{{rhs}{.}{getFirstChild}{()}}{,}{inEnv}{,}{true}{)}}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{maybeWin}{!=}{null}}{)}{{{}{{return}{{maybeWin}{.}{getProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{nominalType}}{.}{getProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{nom}{!=}{null}}{)}{{{}{{return}{{nom}{.}{getProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{{this}{.}{rawType}}{.}{getProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{{this}{.}{rawType}}{.}{getOwnProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}}{;}}}
{AST_ROOT_SC2NF{{(}{{{{ns}{.}{hasStaticProp}{(}{pname}{)}}{&&}{{previousPropType}{!=}{null}}}{&&}{{!}{{suppressDupPropWarning}{(}{jsdoc}{,}{propDeclType}{,}{previousPropType}{)}}}}{)}}}
{AST_ROOT_SC2NF{{isCtorDefinedByCall}{(}{getProp}{)}}}
{AST_ROOT_SC2NF{{{{classType}{.}{hasStaticProp}{(}{pname}{)}}{&&}{{previousPropType}{!=}{null}}}{&&}{{!}{{suppressDupPropWarning}{(}{jsdoc}{,}{propDeclType}{,}{previousPropType}{)}}}}}
{AST_ROOT_SC2NF{{isCtorDefinedByCall}{(}{nameNode}{)}}}
{AST_ROOT_SC2NF{{final}{{CompilerPass}}{{simplifier}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeSimplifyRegExp}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{ExploitAssigns}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{ReorderConstantExpression}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeCollectPropertyAssignments}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeSubstituteAlternateSyntax}}{(}{late}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{StatementFusion}}{(}{favorsCommas}{)}}{)}}}{;}}{{return}{peepholePass}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{ExploitAssigns}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{createPeepholeOptimizationsPass}{(}{compiler}{,}{{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{createPeepholeOptimizationsPass}{(}{compiler}{,}{{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{computeEscapedEs6}{(}{{jsScope}{.}{getParent}{()}}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscapedEs6}{(}{{jsScope}{.}{getParent}{()}}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscapedEs6}{(}{jsScope}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{isObjLit}{)}{{{}{{{declareVariablesForObjLitValues}{(}{n}{,}{alias}{,}{rvalue}{,}{varNode}{,}{{varNode}{.}{getPrevious}{()}}{,}{varParent}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{inExterns}{,}{{NameBasedDefinitionProvider}{.}{getSimplifiedName}{(}{node}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{isExtern}{,}{{NameBasedDefinitionProvider}{.}{getSimplifiedName}{(}{{getLValue}{(}{name}{)}}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{,}{{NameBasedDefinitionProvider}{.}{getSimplifiedName}{(}{{node}{.}{getFirstChild}{()}}{)}}{)}{;}}{{{checkArgument}{(}{{node}{.}{isAssign}{()}}{)}}{;}}{{{assignment}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{,}{{NameBasedDefinitionProvider}{.}{getSimplifiedName}{(}{{node}{.}{getFirstChild}{()}}{)}}{)}{;}}{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isClass}{()}}{)}}{;}}{{{c}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{,}{{NameBasedDefinitionProvider}{.}{getSimplifiedName}{(}{{node}{.}{getFirstChild}{()}}{)}}{)}{;}}{{{checkArgument}{(}{{node}{.}{isFunction}{()}}{)}}{;}}{{{function}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{inExterns}{,}{{NameBasedDefinitionProvider}{.}{getSimplifiedName}{(}{lValue}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{{this}{.}{rawType}}{.}{getProp}{(}{pname}{,}{PropAccess.EXCLUDE_STRAY_PROPS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{superType}{.}{isInterface}{()}}{&&}{{current}{.}{isClass}{()}}{&&}{{!}{{isCtorDefinedByCall}{(}{current}{)}}}{&&}{{!}{{current}{.}{mayHaveNonStrayProp}{(}{pname}{)}}}}}
{AST_ROOT_SC2NF{{{superClass}{.}{isAbstractClass}{()}}{&&}{{superClass}{.}{hasAbstractMethod}{(}{pname}{)}}{&&}{{!}{{rawType}{.}{isAbstractClass}{()}}}{&&}{{!}{{rawType}{.}{mayHaveOwnNonStrayProp}{(}{pname}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{maybeWin}{!=}{null}}{)}{{{}{{return}{{maybeWin}{.}{getProp}{(}{pname}{,}{PropAccess.EXCLUDE_STRAY_PROPS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{{isFunctionDeclaration}{(}{n}{)}}{||}{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{{n}{.}{getParent}{()}}{)}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{callNode}{,}{parent}{)}}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{name}{,}{{name}{.}{getParent}{()}}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{parent}{,}{grandparent}{)}}{)}{{{}{{{validProperties}{.}{add}{(}{propName}{)}}{;}}{}}}{else}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}{)}{{{}{{if}{(}{{referring}{!=}{null}}{)}{{{}{{{recordReference}{(}{referringName}{,}{name}{,}{RefType.REGULAR}{)}}{;}}{}}}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{nextParent}{==}{null}}{||}{{!}{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{nextNode}{,}{nextParent}{)}}}}{)}{{{}{{{readsState}{=}{true}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{n}{,}{{n}{.}{getParent}{()}}{)}}}
{AST_ROOT_SC2NF{{{dest}{.}{isString}{()}}{&&}{{NodeUtil}{.}{isExprAssign}{(}{grandParent}{)}}{&&}{{NodeUtil}{.}{isNameDeclOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6EnhancedObjLiteralsPropertyShorthand}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6ClassComputedProperty}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{byte}{prop}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{public}{void}{putBooleanProp}{(}{{byte}{propType}}{,}{{boolean}{value}}{)}{{{}{{{putIntProp}{(}{propType}{,}{{value}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{public}{boolean}{getBooleanProp}{(}{{byte}{propType}}{)}{{{}{{return}{{{getIntProp}{(}{propType}{)}}{!=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{byte}{getType}{()}{{{}{{return}{propType}{;}}{}}}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{byte}{propType}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{?}{extends}{{Var}}}{>}}{escaped}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{N}}{>}}{{entrySet}{=}{{new}{{{LinkedHashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{N}}{>}}{{nodes}{=}{{new}{{{LinkedHashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{lValueName}{=}{{NodeUtil}{.}{getBestLValueName}{(}{lValue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{isStatementBlock}{(}{parent}{)}}{||}{{isSwitchCase}{(}{node}{)}}{||}{{node}{.}{isMemberFunctionDef}{()}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{computeEscapedLocals}{(}{STRING_CONSTANT}{)}}{)}}{.}{hasSize}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{void}{validateUnaryOp}{(}{{{Node}}{n}}{)}{{{}{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{PeepholeReorderConstantExpression}}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{parent}{.}{isParamList}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{)}{{{}{{return}{{n}{.}{hasChildren}{()}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Scope}}{>}}{{allScopes}{=}{{liveness}{.}{getAllScopesInFunction}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{{statements}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{isMovableDeclaration}{()}}{)}}{.}{isFalse}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{parent}{.}{isParamList}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{return}{{n}{.}{hasChildren}{()}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{thisProps}{=}{{{{!}{{thisNt}{.}{isBuiltinObject}{()}}}{&&}{{thisNt}{.}{isStructuralInterface}{()}}}{?}{{thisNt}{.}{getPropertyNames}{()}}{:}{{{this}{.}{props}}{.}{keySet}{()}}}}}
{AST_ROOT_SC2NF{{{}{{{otherPropNames}{=}{{otherNt}{.}{getPropertyNames}{()}}}{;}}{{if}{(}{{otherPropNames}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{QualifiedName}}{{setterPname}{=}{{new}{{QualifiedName}}{(}{{commonTypes}{.}{createSetterPropName}{(}{{pname}{.}{getLeftmostName}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{QualifiedName}}{{getterPname}{=}{{new}{{QualifiedName}}{(}{{commonTypes}{.}{createGetterPropName}{(}{pname}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{scopeRoots}{.}{add}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateChildCount}{(}{n}{)}}{;}}{{{validateLHS}{(}{{n}{.}{getToken}{()}}{,}{{n}{.}{getFirstChild}{()}}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validateLHS}{(}{{{n}{.}{getParent}{()}}{.}{getToken}{()}}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation5}{(}{)}{throws}{{Exception}}{{{}{{{testError}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation4}{(}{)}{throws}{{Exception}}{{{}{{{testError}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{t}{.}{isHoistScope}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{t}{.}{isHoistScope}{()}}{)}{{{}{{{pop}{(}{blockStack}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{t}{.}{isHoistScope}{()}}{)}{{{}{{{blockStack}{.}{add}{(}{{new}{{BasicBlock}}{(}{parent}{,}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{t}{.}{isHoistScope}{()}}{)}{{{}{{{pop}{(}{blockStack}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{t}{.}{isHoistScope}{()}}{)}{{{}{{{blockStack}{.}{add}{(}{{new}{{BasicBlock}}{(}{parent}{,}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{hoistRoot}{=}{{t}{.}{getClosestHoistScopeRoot}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{isVar}{()}}{&&}{{{t}{.}{getScopeRoot}{()}}{!=}{{t}{.}{getClosestHoistScopeRoot}{()}}}}{)}{{{}{{{hoistVarIfNeeded}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{scopeType}{==}{ScopeType.EXEC_CONTEXT}}{)}{{{}{{return}{{{t}{.}{getClosestHoistScopeRoot}{()}}{==}{currentScript.rootNode}}{;}}{}}}{else}{{{}{{return}{{{n}{.}{getParent}{()}}{==}{currentScript.rootNode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{scopeRoot}{=}{{t}{.}{getClosestHoistScopeRoot}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{n}{.}{hasChildren}{()}}}{)}{{{}{{{rewriteEs6ObjectLiteralShorthandPropertySyntax}{(}{n}{)}}{;}}{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{yield}{.}{setYieldAll}{(}{tree.isYieldAll}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isYieldAll}{()}}{)}{{{}{{{checkNotNull}{(}{first}{)}}{;}}{{{add}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isGlobal}{()}}{||}{{isModuleScope}{()}}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{ClosureOptimizePrimitives}}{(}{compiler}{,}{propertyRenamingEnabled}{,}{canUseEs6Syntax}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Diagnostic}}{warning}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{warningOtiNti}{(}{TOO_MANY_TEMPLATE_PARAMS}{,}{INVALID_GENERICS_INSTANTIATION}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{warningOtiNti}{(}{TOO_MANY_TEMPLATE_PARAMS}{,}{INVALID_GENERICS_INSTANTIATION}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{parent}{.}{isParamList}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{)}{{{}{{return}{{n}{.}{hasChildren}{()}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{hasParamWithInvalidPropertyNameIdentifier}{(}{fnNode}{)}}{)}{{{}{{{functionState}{.}{setInline}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{moduleBody}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newChild}{.}{isNormalBlock}{()}}{)}{{{}{{{NodeUtil}{.}{tryMergeBlock}{(}{newChild}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{scopeClosureBlock}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{callbackBlock}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{tryMergeBlock}{(}{n}{,}{false}{)}}{)}{{{}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{moduleBody}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{catch}{(}{{{{Error}}{|}{{Exception}}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{{Error}}{|}{{Exception}}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{{Error}}{|}{{Exception}}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{{Error}}{|}{{Exception}}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Throwable}}{unexpectedException}}}
{AST_ROOT_SC2NF{{abstract}{void}{throwInternalError}{(}{{{String}}{msg}}{,}{{{Throwable}}{cause}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{nt}{=}{{getNominalTypeIfSingletonObj}{()}}}{;}}{{return}{{{nt}{.}{isGeneric}{()}}{?}{{{nt}{.}{getRawNominalType}{()}}{.}{getInstanceAsJSType}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{init}{.}{isEmpty}{()}}}{&&}{{!}{{NodeUtil}{.}{isNameDeclaration}{(}{init}{)}}}}{)}{{{}{{{init}{=}{{trySimplifyUnusedResult}{(}{init}{,}{false}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{&&}{{n}{.}{hasOneChild}{()}}{&&}{{{n}{.}{getFirstFirstChild}{()}}{!=}{null}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{globalScope}}{.}{getInstanceType}{(}{typeName}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declRetType}{=}{{{{this}{.}{currentScope}}{.}{getDeclaredTypeForOwnBody}{()}}{.}{getReturnType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declRetType}{=}{{{{this}{.}{currentScope}}{.}{getDeclaredTypeForOwnBody}{()}}{.}{getReturnType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DeclaredFunctionType}}{{dft}{=}{{{this}{.}{currentScope}}{.}{getDeclaredTypeForOwnBody}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{registry}}{.}{evaluateTypeExpression}{(}{expr}{,}{{this}{.}{typeEnv}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{typeEnv}{.}{getNamespaceType}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{mapFunctionBody}{=}{{NodeUtil}{.}{getFunctionBody}{(}{mapFunction}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeIRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{names}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{nt}{=}{{getNominalTypeIfSingletonObj}{()}}}{;}}{{return}{{{nt}{.}{isGeneric}{()}}{?}{{{nt}{.}{getRawNominalType}{()}}{.}{getInstanceAsJSType}{()}}{:}{this}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TemplatizedType}}{{t}{=}{{toMaybeTemplatizedType}{()}}}{;}}{{return}{{{t}{==}{null}}{?}{this}{:}{{t}{.}{getReferencedType}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{STRING_CONSTANT}{.}{equals}{(}{name}{)}}{)}{{{}{{if}{(}{{!}{{hasThis}{()}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{getDeclaredTypeForOwnBody}{()}}{.}{getThisType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{EnumSet}{.}{of}{(}{TokenType.IDENTIFIER}{,}{TokenType.TYPE}{,}{TokenType.DECLARE}{,}{TokenType.MODULE}{,}{TokenType.NAMESPACE}{)}}{.}{contains}{(}{type}{)}}}
{AST_ROOT_SC2NF{{{!}{{peekId}{()}}}{&&}{{!}{{{EnumSet}{.}{of}{(}{TokenType.VOID}{,}{TokenType.OPEN_PAREN}{,}{TokenType.OPEN_CURLY}{,}{TokenType.TYPEOF}{)}}{.}{contains}{(}{{peekType}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{compiler}{=}{{CompilerTestCaseUtils}{.}{multistageSerializeAndDeserialize}{(}{this}{,}{compiler}{,}{inputs}{,}{recentChange}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{functionBody}{.}{removeChild}{(}{current}{)}}{;}}{{{insertAfter}{=}{{addToFront}{(}{functionBody}{,}{current}{,}{insertAfter}{)}}}{;}}{{{reportCodeChange}{(}{STRING_CONSTANT}{,}{functionBody}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isFull}{()}{{{}{{return}{{{numUnfilledTemplateKeys}{()}}{==}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setStrictModeInput}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Object}}{getObjectValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{addToDebugLog}{(}{STRING_CONSTANT}{,}{defineName}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{addToDebugLog}{(}{STRING_CONSTANT}{,}{var.name}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{addToDebugLog}{(}{STRING_CONSTANT}{,}{name}{,}{STRING_CONSTANT}{,}{newName}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{t}{.}{getCompiler}{()}}{.}{addToDebugLog}{(}{STRING_CONSTANT}{,}{{fn}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{IntPropListItem}}{(}{propType}{,}{intValue}{,}{next}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ObjectPropListItem}}{(}{propType}{,}{objectValue}{,}{next}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testRestParamWithoutContext}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{var}{.}{setStaticSourceFileFrom}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{EarlyEs6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertPassOrder}{(}{checks}{,}{chromePass}{,}{checkJsDocAndEs6Modules}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{TypeParameters}}{typeParameters}}}
{AST_ROOT_SC2NF{{public}{{{List}}{<}{{String}}{>}}{getTypeParameters}{()}{{{}{{return}{{{this}{.}{typeParameters}}{.}{asList}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{builder}{.}{addTypeParameters}{(}{{TypeParameters}{.}{make}{(}{{nt}{.}{getTypeParameters}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeParameters}}{=}{TypeParameters.EMPTY}}{;}}}
{AST_ROOT_SC2NF{{{TypeParameters}}{typeParameters}}}
{AST_ROOT_SC2NF{{{TypeParameters}}{typeParameters}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isDeleted}{()}{{{}{{return}{{getBooleanProp}{(}{DELETED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{final}{{PropListItem}}{getPropListHeadForTesting}{()}{{{}{{return}{propListHead}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{int}{getSourcePosition}{()}{{{}{{return}{sourcePosition}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{int}{getCharno}{()}{{{}{{return}{{extractCharno}{(}{sourcePosition}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{int}{getLineno}{()}{{{}{{return}{{extractLineno}{(}{sourcePosition}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{int}{getLength}{()}{{{}{{return}{{this}{.}{length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{hasProps}{()}{{{}{{return}{{propListHead}{!=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{hasChildren}{()}{{{}{{return}{{first}{!=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{validateLHS}{(}{{{n}{.}{getLastChild}{()}}{.}{getToken}{()}}{,}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{public}{void}{toStringIsEqualTo}{(}{{{String}}{typeString}}{)}{{{}{{{assertEquals}{(}{typeString}{,}{{{actual}{()}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isParamList}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{PassNames.AFTER_STANDARD_CHECKS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{passName}{.}{equals}{(}{PassNames.PARSE_INPUTS}{)}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{passName}{.}{equals}{(}{Compiler.PARSING_PASS_NAME}{)}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{parent}{.}{isVar}{()}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{e}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Typedef}}{{td}{=}{{Typedef}{.}{make}{(}{qnameNode}{,}{{jsdoc}{.}{getTypedefType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{typeEnv}{.}{getNamespaceOrTypedefType}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setPackageJsonEntryNames}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{packageJsonEntryNames}{=}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{PassNames.AFTER_STANDARD_CHECKS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{passName}{.}{equals}{(}{PassNames.PARSE_INPUTS}{)}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{nameNode}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{renamer}{.}{addDeclaredName}{(}{{nameNode}{.}{getString}{()}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{this}{.}{instanceProps}}{.}{containsKey}{(}{pname}{)}}{||}{{{this}{.}{protoProps}}{.}{containsKey}{(}{pname}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{allProps}}{=}{{{{builder}{.}{addAll}{(}{{instanceProps}{.}{keySet}{()}}{)}}{.}{addAll}{(}{{protoProps}{.}{keySet}{()}}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getNonInheritedProp}{(}{pname}{,}{propAccess}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getNonInheritedProp}{(}{pname}{,}{propAccess}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ObjectType}}{{obj}{=}{{getObjTypeIfSingletonObj}{()}}}{;}}{{return}{{{obj}{!=}{null}}{&&}{{obj}{.}{hasNonInheritedProperty}{(}{{new}{{QualifiedName}}{(}{propertyName}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getObjTypeIfSingletonObj}{()}}{.}{getNonInheritedPropertyDefSite}{(}{propertyName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{classType}{.}{mayHaveNonInheritedProp}{(}{pname}{)}}{&&}{{previousPropType}{!=}{null}}}{&&}{{!}{{suppressDupPropWarning}{(}{jsdoc}{,}{typeInJsdoc}{,}{previousPropType}{)}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{externs}}{=}{{makeExternInputs}{(}{externs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{EarlyEs6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Var}}{var}}{:}{{scriptToVarMap}{.}{removeAll}{(}{script}{)}}{)}{{{}{{{super}{.}{undeclareInteral}{(}{var}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{visitForOf}{(}{t}{,}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{preloadEs6RuntimeFunction}{(}{compiler}{,}{function}{)}}{;}}}
{AST_ROOT_SC2NF{{{CompilerInput}}{{newInput}{=}{{(}{{CompilerInput}}{)}{{deserialize}{(}{compiler}{,}{{serialize}{(}{input}{)}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES8_MODULES}{;}}{}}}}}
{AST_ROOT_SC2NF{{{newEmptyClinitMethod}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{ensureLibraryInjected}{(}{{STRING_CONSTANT}{+}{{function}{.}{toLowerCase}{(}{Locale.US}{)}}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitForOf}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES8}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{globalScope}}{.}{getType}{(}{typeName}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{getType}{(}{typeName}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testTypeTransformationNoneType}{()}{{{}{{{inFunction}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{verify}{(}{STRING_CONSTANT}{,}{JSTypeNative.UNKNOWN_TYPE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{tmpEnv}{=}{{collectTypesForEscapedVarsFwd}{(}{callee}{,}{tmpEnv}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeEnv}}{{outEnv}{=}{{collectTypesForEscapedVarsFwd}{(}{expr}{,}{inEnv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeEnv}}{{exitEnv}{=}{{getExitTypeEnv}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{EarlyEs6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{handleGet}{(}{module}{,}{scope}{,}{n}{,}{parent}{,}{prefix}{,}{Ref.Type.PROTOTYPE_GET}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{handleGet}{(}{module}{,}{scope}{,}{n}{,}{parent}{,}{name}{,}{type}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{isEmpty}{()}}{&&}{{parent}{.}{isClassMembers}{()}}}{)}{{{}{{{reportCodeChange}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{{{n}{.}{detach}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{RemoveEmptyClassMembers}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{preloadEs6RuntimeFunction}{(}{compiler}{,}{function}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitForOf}{(}{t}{,}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{builder}{.}{addRetType}{(}{{firstNonBottom}{(}{actualRetType}{,}{UNKNOWN}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{ObjectTypeI}}{interfaceType}}{:}{{funType}{.}{getAncestorInterfaces}{()}}{)}{{{}{{{interfaces}{.}{add}{(}{{interfaceType}{.}{toAnnotationString}{(}{Nullability.IMPLICIT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{record}{.}{toAnnotationString}{(}{Nullability.EXPLICIT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{record}{.}{toAnnotationString}{(}{Nullability.EXPLICIT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{runOptimizeCalls}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedVars}{(}{PassNames.REMOVE_UNUSED_VARS}{,}{false}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{PassNames.BEFORE_TYPE_CHECKING}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{markFunctionsDeleted}{(}{nameNode}{,}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{n}{.}{hasOneChild}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{statementNode}{=}{{rhsNode}{.}{getGrandparent}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{call}{.}{hasTwoChildren}{()}}}{||}{{!}{{legacyNamespaceNode}{.}{isString}{()}}}}{)}{{{}{{{t}{.}{report}{(}{legacyNamespaceNode}{,}{INVALID_GET_NAMESPACE}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{call}{.}{hasTwoChildren}{()}}}{||}{{!}{{namespaceNode}{.}{isString}{()}}}}{)}{{{}{{{t}{.}{report}{(}{namespaceNode}{,}{INVALID_FORWARD_DECLARE_NAMESPACE}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{grandparent}{.}{isStringKey}{()}}{&&}{{NodeUtil}{.}{isObjectDefinePropertiesDefinition}{(}{{grandparent}{.}{getGrandparent}{()}}{)}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{fnName}{.}{getGrandparent}{()}}{,}{uniquifier}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{entry}{.}{isObjectLit}{()}}{)}{{{}{{{checkState}{(}{{entryName}{.}{equals}{(}{STRING_CONSTANT}{)}}{,}{entryName}{)}}{;}}{{{processBrowserFieldAdvancedUsage}{(}{dirName}{,}{entry}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{setUpRan}}{,}{STRING_CONSTANT}{)}}{;}}{{{Collections}{.}{addAll}{(}{ignoredWarnings}{,}{warnings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{n}{.}{matchesQualifiedName}{(}{name}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{expected}}{)}{{{}{{{{{assertThat}{(}{expected}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{classNode}{=}{{{root}{.}{getFirstChild}{()}}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{fNode}{=}{{{root}{.}{getFirstChild}{()}}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{js}{=}{{RENAME_FUNCTION_DEFINITION}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{js}{=}{{RENAME_FUNCTION_DEFINITION}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{js}{=}{{RENAME_FUNCTION_DEFINITION}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{isEqualTo}{(}{FixedPointGraphTraversal.NON_HALTING_ERROR_MSG}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{EXTERNS}{+}{extraExterns}}{,}{source}{)}}{;}}{{{assertEquals}{(}{expected}{,}{noSideEffectCalls}{)}}{;}}{{{noSideEffectCalls}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{fNode}{=}{{root}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{noInline}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{{parent}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{node}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{line}{.}{indexOf}{(}{CHAR_CONS}{)}}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{line}{.}{indexOf}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testImportedNameCollision}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isName}{()}}{||}{{n}{.}{isStringKey}{()}}{||}{{n}{.}{isImportStar}{()}}}{,}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES5}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isTry}{()}}{)}}{;}}{{return}{{n}{.}{hasXChildren}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{iterableType}{=}{{{{iterable}{.}{getTypeI}{()}}{.}{autobox}{()}}{.}{toMaybeObjectType}{()}}}{;}}{{{typeParam}{=}{{{iterableType}{.}{getTemplateTypes}{()}}{.}{get}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{allowExternsChanges}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{tryRemovingClinit}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{tryRemovingClinit}{(}{node}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{tryRemovingClinit}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{emptiedClinitMethods}{.}{add}{(}{fnQualifiedName}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{getNewTypeInference}{()}}{&&}{{options}{.}{getRunOTIafterNTI}{()}}{&&}{{!}{options.checksOnly}}}{)}{{{}{{{addOldTypeCheckerPasses}{(}{checks}{,}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Renamer}}{{renamer}{=}{{renamerStack}{.}{peek}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isFunctionBlock}{(}{{t}{.}{getScopeRoot}{()}}{)}}{)}{{{}{return;}{}}}}{{if}{(}{{!}{{t}{.}{inGlobalScope}{()}}}{)}{{{}{{{renamerStack}{.}{pop}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{new}{{PureFunctionIdentifier.DriverInJ2cl}}{(}{compiler}{,}{null}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{PureFunctionIdentifier.Driver}}{(}{compiler}{,}{null}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{returnType}{!=}{null}}{)}{{{}{{{builder}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{{{returnType}{.}{appendTo}{(}{builder}{,}{ctx}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{getNewTypeInference}{()}}{&&}{{options}{.}{getRunOTIafterNTI}{()}}}{)}{{{}{{{addOldTypeCheckerPasses}{(}{checks}{,}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{lit}{.}{setTypeI}{(}{{exportedObjectLit}{.}{getTypeI}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{allowExternsChanges}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{{{enableParseTypeInfo}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{assertExternProperties}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{tagAsStrict}{()}{{{}{{{add}{(}{STRING_CONSTANT}{)}}{;}}{{{cc}{.}{endLine}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties6}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties5}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties4}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty2}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{v}{!=}{null}}{||}{{!}{{isShadowingAllowed}{(}{name}{,}{s}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.j2clPassMode}{.}{shouldAddJ2clPasses}{()}}{)}{{{}{{{passes}{.}{add}{(}{j2clConstantHoisterPass}{)}}{;}}{{{passes}{.}{add}{(}{j2clClinitPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{shouldPrintExterns}{()}{{{}{{return}{{{this}{.}{printExterns}}{||}{{incrementalCheckMode}{==}{IncrementalCheckMode.GENERATE_IJS}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{check}{()}}{.}{about}{(}{{types}{()}}{)}}{.}{that}{(}{actualPropType}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{inGlobalScope}{()}}{&&}{{NodeUtil}{.}{isDeclaration}{(}{n}{)}}{&&}{{!}{{n}{.}{getBooleanProp}{(}{Node.IS_NAMESPACE}{)}}}{&&}{{!}{{isWhitelisted}{(}{n}{)}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{NodeUtil}{.}{isFunctionDeclaration}{(}{{getFunctionNode}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{warningOtiNti}{(}{TYPE_MISMATCH_WARNING}{,}{MISTYPED_ASSIGN_RHS}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{curNode}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{isFunctionExpression}{=}{{{parent}{!=}{null}}{&&}{{NodeUtil}{.}{isFunctionExpression}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{s}{.}{isGlobal}{()}}{||}{{s}{.}{isModuleScope}{()}}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{child.parent}{==}{null}}{,}{STRING_CONSTANT}{,}{child}{,}{child.parent}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{{createEmptyPass}{(}{PassNames.BEFORE_MAIN_OPTIMIZATIONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testJSDocCopiedForClasses}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralMethods}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralShorthand}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParameter}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition3}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition2}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition1}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNonTopLevelDestructuring}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError2}{()}{{{}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError1}{()}{{{}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDestructuringError}{()}{{{}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testYieldExpression}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineEmptyFunction6}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{null}{,}{{ImmutableList}{.}{of}{(}{fooFunction}{,}{barFunction}{,}{bazFunction}{)}}{,}{callback}{,}{callback}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testMakeLocalNamesUniqueWithContext10}{()}{{{}{{{{this}{.}{useDefaultRenamer}}{=}{true}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMakeLocalNamesUniqueWithContext9}{()}{{{}{{{{this}{.}{useDefaultRenamer}}{=}{true}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isBleedingFunctionName}{(}{n}{)}}{)}{{{}{{{renameBleedingFunctionName}{(}{t}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{newNode}{=}{{IR}{.}{assign}{(}{getprop}{,}{{rhs}{.}{cloneTree}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FunctionType}}{{getterType}{=}{{typeRegistry}{.}{createFunctionType}{(}{objectType}{)}}}{;}}{{{codingConvention}{.}{applySingletonGetter}{(}{PROPERTY_DECLARER}{,}{functionType}{,}{getterType}{,}{objectType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{superCtor}{!=}{null}}{&&}{{subCtor}{!=}{null}}}{)}{{{}{{{codingConvention}{.}{applySubclassRelationship}{(}{PROPERTY_DECLARER}{,}{superCtor}{,}{subCtor}{,}{relationship.type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mockCompiler}{.}{compile}{(}{FOO_JS}{,}{STRING_CONSTANT}{)}}{)}}{.}{thenReturn}{(}{{new}{{BaseTranspiler.CompileResult}}{(}{STRING_CONSTANT}{,}{false}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mockCompiler}{.}{compile}{(}{FOO_JS}{,}{STRING_CONSTANT}{)}}{)}}{.}{thenReturn}{(}{{new}{{BaseTranspiler.CompileResult}}{(}{STRING_CONSTANT}{,}{true}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{inFunction}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{firstArg}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{replacement}{=}{{replacement}{.}{useSourceInfoIfMissingFrom}{(}{node}{)}}}{;}}{{{node}{.}{replaceWith}{(}{replacement}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{replacement}{=}{{measuredNodeReplacement}{.}{applyTo}{(}{original}{)}}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}{{return}{replacement}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{whileNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacementConditionNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{removeChild}{(}{right}{)}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{right}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeUtil}{.}{redeclareVarsInsideBranch}{(}{caseNode}{)}}{;}}{{{switchNode}{.}{removeChild}{(}{caseNode}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{switchNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{caseBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{maybeBreak}{)}}{;}}{{{maybeBreak}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{replaceWith}{(}{{right}{.}{detach}{()}}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{right}{)}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{elem}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{elem}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newStringNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{child}{,}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{subtree}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{codeChanged}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{subtree}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{stringNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{call}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{newLiteralNode}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{newLiteralNode}{)}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setToken}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parentNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{compileFiles}{(}{STRING_CONSTANT}{,}{zipFile1}{,}{zipFile2}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options.j2clPassMode}{.}{shouldAddJ2clPasses}{()}}{)}{{{}{{{checks}{.}{add}{(}{j2clSourceFileChecker}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{j2clPassMode}{=}{J2clPassMode.AUTO}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{,}{STRING_CONSTANT}{,}{this}{,}{child}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{,}{STRING_CONSTANT}{,}{this}{,}{child}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result.transformed}{)}}{.}{isFalse}{()}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result.transformed}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{Transpiler}}{(}{mockCompiler}{,}{STRING_CONSTANT}{)}}}{;}}{{{compiler}{=}{{Transpiler}{.}{compilerSupplier}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{def}}{=}{{checkNotNull}{(}{def}{)}}}{;}}{{{{this}{.}{use}}{=}{use}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rewriteState}{.}{containsModule}{(}{legacyNamespace}{)}}}{)}{{{}{{{unrecognizedRequires}{.}{add}{(}{{new}{{UnrecognizedRequire}}{(}{call}{,}{legacyNamespace}{,}{false}{,}{false}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{inFunction}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{AnalyzePrototypeProperties}}{{analyzer}{=}{{new}{{AnalyzePrototypeProperties}}{(}{compiler}{,}{null}{,}{canModifyExterns}{,}{anchorUnusedVars}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{analyzer}}{=}{{new}{{AnalyzePrototypeProperties}}{(}{compiler}{,}{moduleGraph}{,}{canModifyExterns}{,}{false}{,}{noStubFunctions}{)}}}{;}}}
{AST_ROOT_SC2NF{{{compilationLevelParsed}{=}{{CompilationLevel}{.}{fromString}{(}{{Ascii}{.}{toUpperCase}{(}{compilationLevel}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{cacheEntry.input}{==}{null}}{)}{{{}{{{cacheEntry.input}{=}{{CompilerInput}{.}{makePersistentInput}{(}{source}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{transformed}{=}{{transformed}{(}{result}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{{FeatureSet}{.}{latest}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineIntoNestedNonHoistedNamedFunctions}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{jsDoc}{!=}{null}}{&&}{{jsDoc}{.}{hasConstAnnotation}{()}}}{&&}{{{jsDoc}{.}{getType}{()}}{==}{null}}}}
{AST_ROOT_SC2NF{{{newNode}{.}{useSourceInfoIfMissingFromForTree}{(}{sourceInfoNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{expr}{.}{useSourceInfoIfMissingFromForTree}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isFunction}{()}}{||}{{n}{.}{isClass}{()}}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldAmbiguateProperties}{()}{{{}{{return}{{this}{.}{ambiguateProperties}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldDisambiguateProperties}{()}{{{}{{return}{{this}{.}{disambiguateProperties}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldInlineProperties}{()}{{{}{{return}{inlineProperties}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Es6RewriteClass}}{(}{compiler}{,}{{!}{{{compiler}{.}{getOptions}{()}}{.}{inIncrementalCheckMode}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{decl}{.}{simplify}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testForIn}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isEnhancedFor}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{CLOSURE_BASE}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.NULLABLE_DEREFERENCE}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{CLOSURE_DEFS}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{CLOSURE_BASE}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{Node}}{>}}{replacements}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{,}{ToStringContext.TO_STRING}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{hasReferenceName}{()}}{)}{{{}{{return}{{sb}{.}{append}{(}{{forAnnotations}{?}{{getNormalizedReferenceName}{()}}{:}{{getReferenceName}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{isPrettyPrint}{()}}}{||}{{this}{==}{{registry}{.}{getNativeType}{(}{JSTypeNative.FUNCTION_INSTANCE_TYPE}{)}}}}{)}{{{}{{return}{{sb}{.}{append}{(}{{forAnnotations}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{qnameNode}{.}{isQualifiedName}{()}}{,}{qnameNode}{)}}{;}}{{{declarations}{.}{add}{(}{{PotentialDeclaration}{.}{from}{(}{qnameNode}{,}{scope}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{isImport}{=}{{isImportRhs}{(}{rhs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ignoreWarnings}{(}{NewTypeInference.INEXISTENT_PROPERTY}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits4}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits3}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits2}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLoggerOnObject3b}{()}{{{}{{{ignoreWarnings}{(}{NewTypeInference.GLOBAL_THIS}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{!}{{callClassType}{.}{isBottom}{()}}}{&&}{{!}{{callClassType}{.}{isSomeUnknownType}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{checkAnnotated}{&&}{{sourceFile}{!=}{null}}}{)}{{{}{{{checkState}{(}{{sourceFile}{.}{equals}{(}{{n}{.}{getSourceFileName}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{devMode}{)}{{{}{{{runValidityCheck}{()}}{;}}{{if}{(}{{hasErrors}{()}}{)}{{{}{{return}{null}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{maybeRunValidityCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{ValidityCheck}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.devMode}{==}{DevMode.EVERY_PASS}}{)}{{{}{{{phaseOptimizer}{.}{setValidityCheck}{(}{validityCheck}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.devMode}{==}{DevMode.START_AND_END}}{)}{{{}{{{runValidityCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{validityCheck}}}
{AST_ROOT_SC2NF{{{}{{{declarationCheck}{=}{{!}{validityCheck}}}{;}}{{{disableCompareAsTree}{()}}{;}}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validityCheck}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testViolatedModuleDependencyNonStrictNotPromoted}{()}{{{}{{{validityCheck}{=}{true}}{;}}{{{strictModuleDepErrorLevel}{=}{CheckLevel.ERROR}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingModuleDependencySkipNonStrictNotPromoted}{()}{{{}{{{validityCheck}{=}{true}}{;}}{{{strictModuleDepErrorLevel}{=}{CheckLevel.ERROR}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testViolatedModuleDependencySkipNonStrict}{()}{{{}{{{validityCheck}{=}{true}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingModuleDependencySkipNonStrict}{()}{{{}{{{validityCheck}{=}{true}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{validityCheck}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ObjectType}}{prototypeOrInstance}{()}{{{}{{return}{prototype}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ObjectType}}{instance}{()}{{{}{{return}{instance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FunctionType}}{constructor}{()}{{{}{{return}{constructor}{;}}{}}}}}
{AST_ROOT_SC2NF{{{convention}{.}{applySingletonGetter}{(}{{new}{{NominalTypeBuilderNti}}{(}{{rawType}{.}{getAsNominalType}{()}}{)}}{,}{getInstanceType}{)}}{;}}}
{AST_ROOT_SC2NF{{{new}{{FunctionTypeBuilder}}{(}{{getCommonTypes}{()}}{)}}{.}{addReqFormal}{(}{{{getCommonTypes}{()}}{.}{qmarkFunction}{()}}{)}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportBadBaseMethodUse}{(}{t}{,}{n}{,}{{{clazz}{.}{getFirstChild}{()}}{.}{getString}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{initializer}{!=}{null}}{)}{{{}{{{inferredType}{=}{{simpleInferExpr}{(}{initializer}{,}{{this}{.}{currentScope}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{bindComponents.thisValue}{==}{null}}{?}{null}{:}{{simpleInferExpr}{(}{bindComponents.thisValue}{,}{{this}{.}{currentScope}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{currentScope}}{.}{isConstructor}{()}}}
{AST_ROOT_SC2NF{{{JSType}}{{rhsType}{=}{{simpleInferExpr}{(}{rhs}{,}{{this}{.}{currentScope}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{newPropType}{=}{{{rhs}{==}{null}}{?}{null}{:}{{simpleInferExpr}{(}{rhs}{,}{{this}{.}{currentScope}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{recvType}{=}{{simpleInferExpr}{(}{recv}{,}{{this}{.}{currentScope}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{{initializer}{==}{null}}{?}{null}{:}{{simpleInferExpr}{(}{initializer}{,}{{this}{.}{currentScope}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{initializer}{!=}{null}}{)}{{{}{{{inferredType}{=}{{simpleInferExpr}{(}{initializer}{,}{{this}{.}{currentScope}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{simpleInferExpr}{(}{{prop}{.}{getFirstChild}{()}}{,}{{this}{.}{currentScope}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isName}{()}}{||}{{n}{.}{isImportStar}{()}}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{requireName}{=}{{ProcessCommonJSModules}{.}{getCommonJsImportPath}{(}{require}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{options.processCommonJSModules}{)}{{{}{{{ProcessCommonJSModules}}{{cjs}{=}{{new}{{ProcessCommonJSModules}}{(}{this}{)}}}{;}}{{{cjs}{.}{process}{(}{null}{,}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationOf}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationOf}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{options.processCommonJSModules}{)}{{{}{{{ProcessCommonJSModules}}{{cjs}{=}{{new}{{ProcessCommonJSModules}}{(}{this}{,}{true}{)}}}{;}}{{{cjs}{.}{process}{(}{null}{,}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{String}}{{requireName}{=}{{{require}{.}{getSecondChild}{()}}{.}{getString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{.}{isEquivalentTo}{(}{domHelperType}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{case}{SIMPLIFY_RHS}{:}}}
{AST_ROOT_SC2NF{{void}{markProvided}{(}{{{String}}{providedName}}{)}{{{}{{{checkNotNull}{(}{providedName}{)}}{;}}{{{providedNamespaces}{.}{add}{(}{providedName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{markNameProcessed}{(}{{{String}}{fullyQualifiedName}}{)}{{{}{{{checkNotNull}{(}{fullyQualifiedName}{)}}{;}}{{{seenNames}{.}{add}{(}{fullyQualifiedName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ObjectLiteralPropertyDefinition}}{(}{n}{,}{{n}{.}{getFirstChild}{()}}{,}{isExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.processCommonJSModules}{)}{{{}{{{ProcessCommonJSModules}}{{cjs}{=}{{new}{{ProcessCommonJSModules}}{(}{this}{)}}}{;}}{{{cjs}{.}{process}{(}{null}{,}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{String}}{{requireName}{=}{{ProcessCommonJSModules}{.}{getCommonJsImportPath}{(}{require}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testDontPreserveUnknownTypeDeclarations}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{CLOSURE_BASE}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{isUnknown}{()}}{||}{{isUnresolved}{()}}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{nameNode}{.}{isQualifiedName}{()}}{||}{{nameNode}{.}{isStringKey}{()}}}{,}{nameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{||}{options.transformAMDToCJSModules}{||}{options.processCommonJSModules}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_expression}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_booleanResult0}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{late}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TernaryValue}}{{result}{=}{{evaluateComparison}{(}{{n}{.}{getToken}{()}}{,}{left}{,}{right}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{rightValObj}{=}{{NodeUtil}{.}{getNumberValue}{(}{right}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{result}{=}{{NodeUtil}{.}{getNumberValue}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{)}}}
{AST_ROOT_SC2NF{{{caseMatches}{=}{{PeepholeFoldConstants}{.}{evaluateComparison}{(}{Token.SHEQ}{,}{cond}{,}{caseLabel}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{true}{)}}{,}{{new}{{PeepholeFoldConstants}}{(}{true}{,}{false}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{)}}}
{AST_ROOT_SC2NF{{{optimizations}{.}{add}{(}{{new}{{PeepholeMinimizeConditions}}{(}{late}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{n}{=}{{parseWarning}{(}{STRING_CONSTANT}{,}{{requiresLanguageModeMessage}{(}{LanguageMode.ECMASCRIPT5}{,}{Feature.STRING_CONTINUATION}{)}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setTypeI}{(}{{call}{.}{getTypeI}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{boxedInfo.length}{==}{NUMBER_CONSTANT}}{)}}{;}}{{{f1}{.}{isSubtypeOfHelper}{(}{f2}{,}{false}{,}{subSuperMap}{,}{boxedInfo}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isSubtypeOfHelper}{(}{other}{,}{false}{,}{subSuperMap}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isSubtypeOfHelper}{(}{other}{,}{true}{,}{{SubtypeCache}{.}{create}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionArgRemoval_defaultValue3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCallOrApply}{(}{)}{throws}{{Exception}}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteArrLit}{(}{)}{throws}{{Exception}}{{{}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{process}{(}{{{Node}}{externs}}{,}{{{Node}}{root}}{,}{{{ReferenceMap}}{references}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{process}{(}{{{Node}}{externs}}{,}{{{Node}}{root}}{,}{{{DefinitionUseSiteFinder}}{definitions}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionArgRemoval_defaultValue3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCallOrApply}{(}{)}{throws}{{Exception}}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteArrLit}{(}{)}{throws}{{Exception}}{{{}{{{String}}{{source}{=}{{newlineJoin}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setEmitUseStrict}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{addInlineVariables}{()}}{;}}{{{addPeephole}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{addDeadCodeElimination}{()}}{;}}{{{addInlineVariables}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{passes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{addInlineVariables}{()}}{;}}{{{addPeephole}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{messages}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{mode}{=}{JsMessage.Style.LEGACY}}{;}}{{{compilerOptions}{=}{null}}{;}}{{{renameMessages}{=}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{getTopObject}{()}}{.}{getNominalTypeIfSingletonObj}{()}}{.}{getPrototypeObject}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{superClass}{==}{null}}{?}{null}{:}{{superClass}{.}{getPrototypeObject}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{proto}{=}{{{getNominalTypeIfSingletonObj}{()}}{.}{getPrototypeObject}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isCall}{()}}{||}{{n}{.}{isTaggedTemplateLit}{()}}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ref.scope}{.}{getClosestHoistScope}{()}}{.}{isGlobal}{()}}}
{AST_ROOT_SC2NF{{ref.scope}{.}{isGlobal}{()}}}
{AST_ROOT_SC2NF{{try}{{{}{{{compiler}{.}{compile}{(}{EXTVAR_EXTERNS}{,}{inputs}{,}{options}{)}}{;}}{}}}{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{compiler}{.}{compile}{(}{EXTVAR_EXTERNS}{,}{inputs}{,}{options}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{compiler}{.}{compile}{(}{EXTVAR_EXTERNS}{,}{inputs}{,}{options}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{compiler}{.}{compile}{(}{testExterns}{,}{inputs}{,}{options}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{type}{=}{{type}{.}{substring}{(}{NUMBER_CONSTANT}{,}{{type}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}{)}}}{;}}{}}}{else}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{{parent}{.}{getQualifiedName}{()}}{.}{substring}{(}{{{{parent}{.}{getQualifiedName}{()}}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{suffixes}{.}{add}{(}{{polyfillName}{.}{substring}{(}{{{polyfillName}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}{+}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{{cls.target}{.}{getQualifiedName}{()}}{.}{replace}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{{Node}}{<}{{E}}{>}}{,}{{{ImmutableSet.Builder}}{<}{{E}}{>}}{>}}{{groupsTmp}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{findLhsNodesInNode}{(}{n}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{findLhsNodesInNode}{(}{n}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{findLhsNodesInNode}{(}{decl}{)}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{Node}}{>}}{{allVars}{=}{{NodeUtil}{.}{findLhsNodesInNode}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{names}{=}{{NodeUtil}{.}{findLhsNodesInNode}{(}{c}{)}}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{findLhsNodesInNode}{(}{paramList}{)}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{sideEffectInfo}{,}{STRING_CONSTANT}{,}{function}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{findLhsNodesInNode}{(}{varNode}{)}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Node}}{lhs}}{:}{{NodeUtil}{.}{findLhsNodesInNode}{(}{n}{)}}{)}{{{}{{{declareVar}{(}{s}{,}{lhs}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{findLhsNodesInNode}{(}{declaration}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{{NodeUtil}{.}{findLhsNodesInNode}{(}{nameDecl}{)}}{.}{size}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{ref.scope}{.}{getClosestHoistScope}{()}}{.}{isGlobal}{()}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalAliasWithLet3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalAliasWithLet2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT_2017}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{arrayFoldedChildren}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Deque}}{<}{{ScriptDescription}}{>}}{{scriptDescriptions}{=}{{new}{{{ArrayDeque}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{newVars}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{orderedVars}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{orderedVars}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{orderedVars}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT3}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCallOrApply}{(}{)}{throws}{{Exception}}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteArrLit}{(}{)}{throws}{{Exception}}{{{}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionArgRemoval_defaultValue3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{process}{(}{{{Node}}{externs}}{,}{{{Node}}{root}}{,}{{{ReferenceMap}}{references}}{)}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT_2017}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testConst1}{()}{{{}{{{inFunction}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT3}}{;}}}
{AST_ROOT_SC2NF{{{rewriteDeclsToVars}{()}}{;}}}
{AST_ROOT_SC2NF{{{rewriteDeclsToVars}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Node}}{varName}}}
{AST_ROOT_SC2NF{{{checkLocalityOfMarkedCalls}{(}{source}{,}{{ImmutableList}{.}{<}{{String}}{>}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkLocalityOfMarkedCalls}{(}{source}{,}{{ImmutableList}{.}{<}{{String}}{>}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{NodeUtil}{.}{evaluatesToLocalValue}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT_2017}}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT3}}{;}}}
{AST_ROOT_SC2NF{{return}{{STRING_CONSTANT}{+}{fnName}{+}{STRING_CONSTANT}{+}{sourceName}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{fullExportedName}{=}{{{{currentScript}{.}{getBinaryNamespace}{()}}{.}{get}{()}}{+}{{exportDefinition}{.}{getExportPostfix}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{binaryNamespaceName}{=}{{IR}{.}{name}{(}{{{currentScript}{.}{getBinaryNamespace}{()}}{.}{get}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScript}{.}{isModule}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScript}{.}{isModule}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScript}{.}{isModule}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{{rewriteState}{.}{getExportedNamespaceOrScript}{(}{legacyNamespace}{)}}{.}{get}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentScript}{.}{isModule}{()}}{,}{currentScript}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{currentScript}{.}{isModule}{()}}}{||}{{!}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{||}{{!}{{isAssignTarget}{(}{n}{)}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT_2017}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{et}{!=}{null}}{&&}{{et}{.}{enumLiteralHasKey}{(}{pname}{)}}}{)}{{{}{{return}{{et}{.}{getPropType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{{locals}{.}{get}{(}{name}{)}}{.}{getDeclaredType}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{locals}{.}{put}{(}{name}{,}{{TaggedType}{.}{makeDeclared}{(}{newDeclType}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{fullExportedName}{=}{{{currentScript}{.}{getBinaryNamespace}{()}}{+}{{exportDefinition}{.}{getExportPostfix}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{binaryNamespaceName}{=}{{IR}{.}{name}{(}{{currentScript}{.}{getBinaryNamespace}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.isModule}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.isModule}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.isModule}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{rewriteState}{.}{getExportedNamespaceOrScript}{(}{legacyNamespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{currentScript.isModule}{,}{currentScript}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{currentScript.isModule}}{||}{{!}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{||}{{!}{{isAssignTarget}{(}{n}{)}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isName}{()}}{||}{{n}{.}{isGetProp}{()}}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{finder}{.}{visitTree}{(}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{{cls.target}{.}{getQualifiedName}{()}}{.}{replace}{(}{CHAR_CONS}{,}{CHAR_CONS}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{statementNode}{)}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{declNode}{.}{isGetProp}{()}}{,}{declNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{getGlobalScope}{()}}{.}{addNamespaceLit}{(}{{new}{{QualifiedName}}{(}{WINDOW_INSTANCE}{)}}{,}{qnameNode}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setPreserveClosurePrimitives}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setPreserveClosurePrimitives}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{keyNode}{.}{isStringKey}{()}}{||}{{keyNode}{.}{isGetProp}{()}}}}
{AST_ROOT_SC2NF{{{Node}}{{externsRoot}{=}{{parse}{(}{compiler}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{externsRoot}{=}{{parse}{(}{compiler}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{helperExposeExpression}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{helperExposeExpression}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{jsdocType}{=}{{(}{{JSType}}{)}{{prop}{.}{getTypeI}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{pair.type}{=}{{(}{{JSType}}{)}{{expr}{.}{getTypeI}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{jsdocType}{=}{{(}{{JSType}}{)}{{prop}{.}{getTypeI}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{toType}{=}{{(}{{JSType}}{)}{{expr}{.}{getTypeI}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{visitNamespacePropertyDeclaration}{(}{getProp}{,}{{QualifiedName}{.}{fromNode}{(}{recv}{)}}{,}{pname}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{propDeclType}{=}{{(}{{JSType}}{)}{{prop}{.}{getTypeI}{()}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{JSType}}{)}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{getOptions}{(}{options}{)}}{;}}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.TOO_MANY_TYPE_PARAMS}{,}{CheckLevel.WARNING}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{js}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{fileoverview}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testFunctionNamesAndIds}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testFunctionNamesAndIds}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testFunctionNamesAndIds}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSets}{(}{STRING_CONSTANT}{,}{js}{,}{output}{,}{STRING_CONSTANT}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEarlyReferenceError}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEarlyReferenceError}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{{assertThat}{(}{{{getLastCompiler}{()}}{.}{injected}}{)}}{.}{isEmpty}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{script}{=}{{compiler}{.}{parseSyntheticCode}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{modules}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{test}{(}{{createModuleChain}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{{test}{(}{{createModuleStar}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{modules}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{VarCheck.UNDEFINED_VAR_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{lines}{(}{DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISSING_RETURN_JSDOC}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISSING_RETURN_JSDOC}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISSING_RETURN_JSDOC}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{localVar}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{body}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{body}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testReference}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{googModule}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{googModule}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{googModule}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{inGlobalHoistScope}{()}}{&&}{{NodeUtil}{.}{isFunctionDeclaration}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{isFunctionDeclaration}{(}{n}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{checkForNewObjects}{||}{{isFunctionDeclaration}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Es6RewriteModules}{.}{isEs6ModuleRoot}{(}{root}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Es6RewriteModules}{.}{isEs6ModuleRoot}{(}{root}{)}}{)}{{{}{{{moduleType}{=}{ModuleType.ES6}}{;}}{}}}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{ProcessCommonJSModules}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isFunctionExpression}{(}{parent}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{FindStaticMembers}}{{findStaticMembers}{=}{{new}{{FindStaticMembers}}{()}}}{;}}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{scriptRoot}{,}{findStaticMembers}{)}}{;}}{{{processInherits}{(}{findStaticMembers}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{processInherits}{(}{findStaticMembers}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertChangesRecorded}{(}{code}{,}{{new}{{NameChangingCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertChangesRecorded}{(}{code}{,}{{new}{{NameChangingCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{{CompilerTestCase}{.}{lines}{(}{lines}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{{CompilerTestCase}{.}{lines}{(}{lines}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{fn}{.}{isFromExterns}{()}}}{)}{{{}{{{{{GlobalTypeInfoCollector}{.}{this}}{.}{scopes}}{.}{add}{(}{fnScope}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{useSourceInfoForNewQName}{(}{node}{,}{basisNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{assertAbout}{(}{{{JSErrorSubject}}{:}{:}{new}}{)}}{.}{that}{(}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{assertAbout}{(}{{{NodeSubject}}{:}{:}{new}}{)}}{.}{that}{(}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{findStaticMembers}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{externs}{,}{transpiledFeatures}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{checkedFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{features}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{features}{,}{this}{,}{{new}{{SelfReferenceRewriter}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{features}{,}{this}{,}{{new}{{SelfReferenceRewriter}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapCheck}{(}{compiler}{,}{scriptRoot}{,}{checkedFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{checkedFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{allowMethodCallDecomposing}{)}{{{}{{return}{DecompositionType.DECOMPOSABLE}{;}}{}}}{else}{{{}{{return}{DecompositionType.UNDECOMPOSABLE}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{allowMethodCallDecomposing}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{name}{=}{{NodeUtil}{.}{newQName}{(}{compiler}{,}{{PROTOTYPE_ALIAS}{+}{STRING_CONSTANT}{+}{declar.memberName}}{,}{declar.node}{,}{declar.memberName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{{NodeUtil}{.}{newVarNode}{(}{PROTOTYPE_ALIAS}{,}{null}{)}}{.}{useSourceInfoIfMissingFromForTree}{(}{injectionPoint}{)}}}{;}}}
{AST_ROOT_SC2NF{{isAssignmentOp}{(}{declNode}{)}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{nt}{=}{{getNominalTypeIfSingletonObj}{()}}}{;}}{{return}{{{nt}{.}{isLiteralObject}{()}}{||}{{nt}{.}{isBuiltinObject}{()}}{||}{{nt}{.}{isIObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{isPropertyRemovable}{(}{{{String}}{propertyName}}{)}{{{}{{return}{{isEntirelyRemovable}{||}{{(}{{unreferencedPropertiesMayBeRemoved}{&&}{{!}{{referencedPropertyNames}{.}{contains}{(}{propertyName}{)}}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Name}}{{superclassNameObj}{=}{{getOrCreateName}{(}{superclassName}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{Compiler}}{compiler}}{)}{;}}}
{AST_ROOT_SC2NF{{{currentArgumentsAccess}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MemberDefinition}}{>}}{{allProperties}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{files}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{files}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{files}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{entryPoints}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{cur}{=}{{{instance.declarations}{.}{get}{(}{{{instance.declarations}{.}{size}{()}}{-}{NUMBER_CONSTANT}}{)}}{.}{node}}}{;}}}
{AST_ROOT_SC2NF{{{PrototypeMemberDeclaration}}{{first}{=}{{instance.declarations}{.}{get}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{lValue}{.}{isRest}{()}}{)}{{{}{{{lValue}{=}{{lValue}{.}{getOnlyChild}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{{classScope}{.}{getVar}{(}{{classNameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{var}{)}}}{;}}{{{varInfo}{.}{addRemovable}{(}{{{new}{{RemovableBuilder}}{()}}{.}{buildDestructuringAssign}{(}{c}{,}{c}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{var}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{var}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{{checkNotNull}{(}{{scope}{.}{getVar}{(}{{nameNode}{.}{getString}{()}}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{{scope}{.}{getVar}{(}{{nameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{exceptionVarInfo}{=}{{traverseVar}{(}{{scope}{.}{getVar}{(}{{exceptionNameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{var}{)}}}{;}}{{{varInfo}{.}{addRemovable}{(}{{{new}{{RemovableBuilder}}{()}}{.}{buildDestructuringAssign}{(}{restNode}{,}{target}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{classVarInfo}{=}{{traverseVar}{(}{classVar}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isCallOrNew}{(}{invocation}{)}}{,}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Scope}}{scope}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{current}{.}{isGetProp}{()}}{,}{STRING_CONSTANT}{,}{current}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{current}{.}{isLabel}{()}}{,}{current}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{isControlStructure}{(}{parent}{)}}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isClassMembers}{()}}{||}{{n}{.}{isObjectLit}{()}}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isClassMembers}{()}}{||}{{n}{.}{isObjectLit}{()}}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{callNode}{.}{isNew}{()}}{,}{STRING_CONSTANT}{,}{{callNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{ref}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{expr}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{NodeUtil}{.}{isObjectLitKey}{(}{n}{)}}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{isMarkedConst}{=}{{{{n}{.}{getParent}{()}}{.}{isConst}{()}}{||}{{(}{{{jsdoc}{!=}{null}}{&&}{{jsdoc}{.}{isConstant}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{Queue}}{<}{{Property}}{>}}{{propertyQueue}{=}{{new}{{{ArrayDeque}}{<>}}{(}{propertiesSet}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isFunction}{()}}{)}{{{}{break;}{}}}}{{{{this}{.}{ancestors}}{.}{addFirst}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNoPureCalls}{(}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Var}}{v}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Node}}{definitionRValue}}}
{AST_ROOT_SC2NF{{isStaticCtorProp}{(}{getProp}{)}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{JSModule}}{module}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{JSModule}}{module}}}
{AST_ROOT_SC2NF{{{NameBasedDefinitionProvider}}{definitionProvider}}}
{AST_ROOT_SC2NF{{if}{(}{{defs}{.}{isEmpty}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{@}{VisibleForTesting}}{{{Multimap}}{<}{{String}}{,}{{UseSite}}{>}}{getUseSitesByName}{()}{{{}{{return}{{ImmutableMultimap}{.}{copyOf}{(}{useSitesByName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{inExterns}{)}{{{}{{{visitExterns}{(}{traversal}{,}{node}{)}}{;}}{}}}{else}{{{}{{{visitCode}{(}{traversal}{,}{node}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testAnnotationInExterns_new5}{(}{)}{throws}{{Exception}}{{{}{{{assertPureCallsMarked}{(}{STRING_CONSTANT}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{true}{,}{false}{,}{false}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{removeGlobal}{,}{preserveFunctionExpressionNames}{,}{false}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{{!}{removeOnlyLocals}}{,}{preserveAnonymousFunctionNames}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{visitScript}{(}{t}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{packageJsonMainEntries}{)}}{.}{containsEntry}{(}{STRING_CONSTANT}{,}{ModuleLoader.JSC_BROWSER_BLACKLISTED_MARKER}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{fnNode}{.}{isFunction}{()}}{,}{fnNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{LinkedHashMap}}{<}{{String}}{,}{{Node}}{>}}{{actualMap}{=}{{getFunctionCallParameterMap}{(}{fn}{,}{call}{,}{{getNameSupplier}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters12}{()}{{{}{{{{assertThat}{(}{{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters2}{()}{{{}{{{{assertThat}{(}{{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters1}{()}{{{}{{{{assertThat}{(}{{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters0}{()}{{{}{{{{assertThat}{(}{{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{replaceParent}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{tracer}{=}{{new}{{Tracer}}{(}{STRING_CONSTANT}{,}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{edgeAnnotationStack}{==}{null}}{)}{{{}{{{edgeAnnotationStack}{=}{{new}{{{ArrayDeque}}{<>}}{()}}}{;}}{}}}}{{{pushAnnotations}{(}{edgeAnnotationStack}{,}{{getEdges}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{nodeAnnotationStack}{==}{null}}{)}{{{}{{{nodeAnnotationStack}{=}{{new}{{{ArrayDeque}}{<>}}{()}}}{;}}{}}}}{{{pushAnnotations}{(}{nodeAnnotationStack}{,}{{getNodes}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}{<}{{{blockScope}{.}{getVarCount}{()}}{+}{{functionScope}{.}{getVarCount}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}{<}{{{t}{.}{getScope}{()}}{.}{getVarCount}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{{LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}{+}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{if}{(}{{{var}{.}{getParentNode}{()}}{.}{isParamList}{()}}{)}{{{}{{{varInfo.propertyAssignmentsWillPreventRemoval}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{exceptionVarInfo}{.}{setIsExplicitlyNotRemovable}{()}}{;}}}
{AST_ROOT_SC2NF{{{canonicalTotallyUnremovableVarInfo}{.}{setIsExplicitlyNotRemovable}{()}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableSet}}{<}{{String}}{>}}{namesToAlias}}}
{AST_ROOT_SC2NF{{{{ImmutableSet}}{<}{{String}}{>}}{needAliases}}}
{AST_ROOT_SC2NF{{{{ImmutableMap}}{<}{{String}}{,}{{Node}}{>}}{argMap}}}
{AST_ROOT_SC2NF{{return}{{LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}{>}{{orderedVars}{.}{size}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}{<}{{{t}{.}{getScope}{()}}{.}{getVarCount}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{{LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}{+}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{&&}{{nameNode}{.}{hasOneChild}{()}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{removeUnusedProperties}{&&}{{r}{.}{isPrototypeObjectNamedPropertyAssignment}{()}}{&&}{{!}{{referencedPropertyNames}{.}{contains}{(}{{r}{.}{getPropertyName}{()}}{)}}}}}
{AST_ROOT_SC2NF{{removeUnusedProperties}{&&}{{removable}{.}{isPrototypeObjectNamedPropertyAssignment}{()}}{&&}{{!}{{referencedPropertyNames}{.}{contains}{(}{{removable}{.}{getPropertyName}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{!}{{n}{.}{isString}{()}}}{&&}{{!}{{isConstantNameNode}{(}{n}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{rValue}{==}{null}}{||}{{!}{{rValue}{.}{isFunction}{()}}}}{||}{{NodeUtil}{.}{doesFunctionReferenceOwnArgumentsObject}{(}{rValue}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{doesFunctionReferenceOwnArgumentsObject}{(}{fnc}{)}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{computeEscaped}{(}{{jsScope}{.}{getParent}{()}}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscaped}{(}{jsScope}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscaped}{(}{{jsScope}{.}{getParent}{()}}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{funType}{.}{isSomeConstructorOrInterface}{()}}}
{AST_ROOT_SC2NF{{private}{{Scope}}{newScope}{()}{{{}{{return}{{Scope}{.}{createGlobalScope}{(}{{new}{{Node}}{(}{Token.ROOT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{allowMethodCallDecomposing}{=}{false}}{;}}{{{knownConstants}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createCompilerOptions}{()}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{public}{void}{testES6Modules}{()}{{{}{{{testNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testB3473189}{()}{{{}{{{testNoWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setErrorHandler}{(}{{new}{{BlackHoleErrorManager}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{classAndItsMethodAliasedAsExtern}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{getPropertyName}{()}{{{}{{return}{{checkNotNull}{(}{propertyName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{toRemove}{.}{isParamList}{()}}{)}{{{}}}{else}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{toRemove}{.}{toStringTree}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{options}{.}{shouldCollapseProperties}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{options}{.}{shouldCollapseProperties}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{options}{.}{shouldCollapseProperties}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{options}{.}{shouldCollapseProperties}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isApplied}{(}{{{CompilerOptions}}{options}}{)}{{{}{{return}{{options}{.}{shouldCollapseProperties}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES8_MODULES}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{!}{{NodeUtil}{.}{isNameDeclaration}{(}{{n}{.}{getFirstChild}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNoGlobalScopeChanges}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{{!}{removeOnlyLocals}}{,}{preserveAnonymousFunctionNames}{,}{options.removeUnusedPrototypeProperties}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{{getTypeDeprecationInfo}{(}{{getTypeOfThis}{(}{scopeRoot}{)}}{)}}{!=}{null}}{)}}}
{AST_ROOT_SC2NF{{{Var}}{var}}}
{AST_ROOT_SC2NF{{{Var}}{var}}}
{AST_ROOT_SC2NF{{{@}{Override}}{boolean}{isClassOrPrototypeNamedProperty}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isIndependentlyRemovableNamedProperty}{()}{{{}{{return}{{{isPrototypeObjectNamedPropertyAssignment}{()}}{||}{{isClassOrPrototypeNamedProperty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isClassOrPrototypeNamedProperty}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{isGlobal}{&&}{{!}{removeGlobals}}{&&}{{!}{removeUnusedPrototypeProperties}}}}
{AST_ROOT_SC2NF{{removeUnusedPrototypeProperties}{&&}{{removable}{.}{isNamedProperty}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{removeUnusedPrototypeProperties}{)}{{{}{{{removeUnreferencedProperties}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedCode}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{passes}{.}{add}{(}{flowSensitiveInlineVariables}{)}}{;}}{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedCodeOnce}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{{{new}{{RemoveUnusedCode.Builder}}{(}{compiler}{)}}{.}{removeGlobals}{(}{true}{)}}{.}{build}{()}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedCode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{RewriteGlobalClassFunctionDeclarationsToVarAssignmentsCallback}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{{{{SimpleDependencyInfo}{.}{builder}{(}{closureRelativePath}{,}{filePath}{)}}{.}{setProvides}{(}{provides}{)}}{.}{setRequires}{(}{requires}{)}}{.}{setWeakRequires}{(}{weakRequires}{)}}{.}{setLoadFlags}{(}{loadFlags}{)}}{.}{build}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedCode}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{atLeast8}{=}{{{mode}{==}{Mode.ES8_OR_GREATER}}{||}{{mode}{==}{Mode.ES_NEXT}}}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{getWeakRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{getProvides}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParam_argIsUnknown}{()}{{{}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParam_argIsUndefined}{()}{{{}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayPatternParam}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{visitParamList}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{Annotation}}{{annotation}{=}{{annotations}{.}{get}{(}{annotationName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{config}{.}{languageMode}{()}}{!=}{LanguageMode.TYPESCRIPT}}}
{AST_ROOT_SC2NF{{if}{(}{{{config}{.}{languageMode}{()}}{==}{LanguageMode.ECMASCRIPT3}}{)}{{{}{{{errorReporter}{.}{error}{(}{SETTER_ERROR_MESSAGE}{,}{sourceName}{,}{{lineno}{(}{node}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{config}{.}{languageMode}{()}}{==}{LanguageMode.ECMASCRIPT3}}{)}{{{}{{{errorReporter}{.}{error}{(}{GETTER_ERROR_MESSAGE}{,}{sourceName}{,}{{lineno}{(}{node}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{config}{.}{languageMode}{()}}{==}{LanguageMode.ECMASCRIPT3}}{)}{{{}{{{errorReporter}{.}{warning}{(}{INVALID_ES3_PROP_NAME}{,}{sourceName}{,}{{node}{.}{getLineno}{()}}{,}{{node}{.}{getCharno}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{config}{.}{runMode}{()}}{==}{Config.RunMode.KEEP_GOING}}{)}}{;}}{{{bodyNode}{=}{{IR}{.}{block}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{RemoveUnusedCode.Builder}}{(}{compiler}{)}}{.}{removeLocalVars}{(}{true}{)}}{.}{build}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{shouldRunRemoveUnusedCode}{()}}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedCode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{CollapseProperties}}{{collapseProperties}{=}{{new}{{CollapseProperties}}{(}{compiler}{,}{PropertyCollapseLevel.ALL}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{CollapseProperties}}{(}{compiler}{,}{{options}{.}{getPropertyCollapseLevel}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CollapseProperties}}{(}{compiler}{,}{PropertyCollapseLevel.ALL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{apply}{(}{{{CompilerOptions}}{options}}{,}{{boolean}{value}}{)}{{{}{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{!=}{null}}{&&}{{!}{{canCollapse}{(}{p}{)}}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{canCollapseChildNames}}{||}{{!}{{canCollapse}{(}{n}{)}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{canCollapseChildNames}}{||}{{!}{{canCollapse}{(}{n}{)}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{isObjLit}{&&}{{canEliminate}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{isObjLit}{&&}{{canEliminate}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{canCollapse}{(}{n}{)}}{)}{{{}{{{updateGlobalNameDeclaration}{(}{n}{,}{alias}{,}{canCollapseChildNames}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{CollapseProperties}}{(}{compiler}{,}{PropertyCollapseLevel.ALL}{)}}{.}{process}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CollapseProperties}}{(}{compiler}{,}{propertyCollapseLevel}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{collapsePropertiesLevel}{=}{PropertyCollapseLevel.NONE}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.removeUnusedPrototypeProperties}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedPrototypeProperties}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{RemoveUnusedCode.Builder}}{(}{compiler}{)}}{.}{build}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{||}{{parent}{.}{isFunction}{()}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{RemoveUnusedCode.Builder}}{(}{compiler}{)}}{.}{removeLocalVars}{(}{true}{)}}{.}{build}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{shouldRunRemoveUnusedCode}{()}}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedCode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setCollapsePropertiesLevel}{(}{{value}{?}{PropertyCollapseLevel.ALL}{:}{PropertyCollapseLevel.NONE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{filename}}{:}{files}{)}{{{}{{if}{(}{fix}{)}{{{}{{{fixRepeatedly}{(}{filename}{)}}{;}}{}}}{else}{{{}{{{lint}{(}{filename}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{removeUnusedCodeOnce}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{qualifiedName}{=}{{getAliasedNamespace}{(}{{aliasVar}{.}{getInitialValue}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{aliasExpanded}{=}{{checkNotNull}{(}{{getAliasedNamespace}{(}{aliasDefinition}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{inliningReach}}{=}{Reach.LOCAL_ONLY}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalFunctionInliningOnly4}{()}{{{}{{{{this}{.}{inliningReach}}{=}{Reach.LOCAL_ONLY}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalFunctionInliningOnly3}{()}{{{}{{{{this}{.}{inliningReach}}{=}{Reach.LOCAL_ONLY}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalFunctionInliningOnly2}{()}{{{}{{{{this}{.}{inliningReach}}{=}{Reach.LOCAL_ONLY}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{inliningReach}{=}{Reach.ALL}}{;}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{options}{.}{setLanguageOut}{(}{{value}{?}{CompilerOptions.LanguageMode.ECMASCRIPT5}{:}{CompilerOptions.LanguageMode.NO_TRANSPILE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{includesGlobals}{()}{{{}{{return}{{this}{==}{ALL}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{logger}{.}{finest}{(}{{STRING_CONSTANT}{+}{{file}{.}{getName}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{NodeUtil}{.}{isAssignmentOp}{(}{assignNode}{)}}{,}{assignNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{superClassNameNode}{=}{{metadata.superClassNameNode}{.}{cloneTree}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseNameNode}{(}{classNameNode}{,}{classScope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseNameNode}{(}{classNameNode}{,}{scope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseNameNode}{(}{nameNode}{,}{scope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseNameNode}{(}{nameNode}{,}{scope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{exceptionVarInfo}{=}{{traverseNameNode}{(}{exceptionNameNode}{,}{scope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue618_2}{()}{{{}{{{{this}{.}{removeGlobal}}{=}{false}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{rhs}{==}{null}}{||}{{PotentialDeclaration}{.}{isTypedRhs}{(}{rhs}{)}}}{||}{{NodeUtil}{.}{isCallTo}{(}{rhs}{,}{STRING_CONSTANT}{)}}}{||}{{isImportRhs}{(}{rhs}{)}}}}
{AST_ROOT_SC2NF{{getAllSymbols}{()}}}
{AST_ROOT_SC2NF{{public}{{{Iterable}}{<}{{Symbol}}{>}}{getAllSymbols}{()}{{{}{{return}{{ImmutableList}{.}{copyOf}{(}{{symbols}{.}{values}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{getAllSymbols}{()}}}
{AST_ROOT_SC2NF{{getAllSymbols}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{key}{.}{isShorthandProperty}{()}}{)}{{{}{{{maybeWarn}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{isStringKey}{()}}{&&}{{node}{.}{isShorthandProperty}{()}}}{)}{{{}{{{t}{.}{report}{(}{node}{,}{SHORTHAND_ASSIGNMENT_IN_ENUM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isObjectPattern}{()}}{)}{{{}{{return}{{!}{{n}{.}{isStringKey}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{validateEnumStringKey}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{extraSmartNamePass}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{Reach.NONE}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{Reach.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{Reach.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{Reach.ALL}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{this}{.}{setInlineFunctions}{(}{{inlineFunctions}{?}{Reach.ALL}{:}{Reach.NONE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allSymbols}{.}{addAll}{(}{{table}{.}{getAllSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isPrototypeProperty}{()}{{{}{{return}{{{isPrototypeObjectNamedPropertyAssignment}{()}}{||}{{isClassOrPrototypeNamedProperty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isClassMethod}{(}{functionNode}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{.}{equals}{(}{{{functionNode}{.}{getParent}{()}}{.}{getString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{isClassMethod}{(}{functionNode}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{isImport}{)}{{{}{{{currentFile}{.}{recordImport}{(}{{name}{.}{getString}{()}}{)}}{;}}{}}}{else}{{{}{{{currentFile}{.}{recordNameDeclaration}{(}{name}{,}{{t}{.}{getScope}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{ClassUtil}{.}{getPrototypeNameOfMethod}{(}{functionNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{ClassUtil}{.}{isConstructor}{(}{n}{)}}{&&}{{{n}{.}{getLastChild}{()}}{.}{hasChildren}{()}}}{)}{{{}{{{currentFile}{.}{markConstructorToProcess}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{newJsdoc}{==}{null}}{&&}{{ClassUtil}{.}{isThisProp}{(}{nameNode}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{ClassUtil}{.}{isClassMethod}{(}{n}{)}}{)}{{{}{{{currentFile}{.}{recordMethod}{(}{n}{,}{{t}{.}{getScope}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{ClassUtil}{.}{isConstructor}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isTypeCompatible}{(}{receiverType}{,}{{method}{.}{type}{()}}{)}}{)}{{{}{{{unusedMethodPolyfills}{.}{remove}{(}{method}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{ClassUtil}{.}{isClassMethod}{(}{functionNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{boolean}{isAssignmentToPrototype}{(}{{{Node}}{n}}{)}{{{}{{return}{{{n}{.}{isAssign}{()}}{&&}{{isDotPrototype}{(}{{n}{.}{getFirstChild}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{{nodeCount}{=}{{graph}{.}{getNodeCount}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isName}{()}}{||}{{n}{.}{isImportStar}{()}}}{,}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isLValue}{(}{n}{)}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isLValue}{(}{n}{)}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isLValue}{(}{n}{)}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isPrototypeProperty}{()}{{{}{{return}{{{isPrototypeDotPropertyReference}{()}}{||}{{isClassOrPrototypeNamedProperty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{removeUnusedThisProperties}{&&}{{removable}{.}{isThisDotPropertyReference}{()}}}}
{AST_ROOT_SC2NF{{{RemovableBuilder}}{{builder}{=}{{{new}{{RemovableBuilder}}{()}}{.}{setIsThisDotPropertyReference}{(}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fsCalled}{.}{setRemove}{(}{false}{)}}{;}}{{if}{(}{{!}{{minimizeCost}{(}{fsCalled}{)}}}{)}{{{}{{{fsCalled}{.}{disallowInlining}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{rootNode}{=}{{scopeRoots}{.}{get}{(}{{i}{-}{NUMBER_CONSTANT}}{)}}}{;}}{{if}{(}{{isHoistScopeRootNode}{(}{rootNode}{)}}{)}{{{}{{return}{rootNode}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isHoistScope}{()}{{{}{{return}{{isHoistScopeRootNode}{(}{{getScopeRoot}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{(}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{&&}{{var}{.}{isGlobal}{()}}}{)}}{||}{{NodeUtil}{.}{isFunctionDeclaration}{(}{parent}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{aliasVar}{!=}{null}}{)}{{{}{{return}{{aliasVar}{.}{isGlobal}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{name}{=}{{importSpec}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Builder}}{removeUnusedConstructorProperties}{(}{{boolean}{value}}{)}{{{}{{{{this}{.}{removeUnusedStaticProperties}}{=}{value}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{removeUnusedStaticProperties}}{=}{builder.removeUnusedStaticProperties}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{Scope}}{{s}{=}{{getAbstractScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{refinedScope}{!=}{null}}{&&}{{{getAbstractScope}{()}}{!=}{refinedScope}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{!}{{name}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{ClassUtil}{.}{getFullyQualifiedNameOfMethod}{(}{functionNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{deleteNode}{(}{{getRemovableNode}{()}}{,}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{oldStatement}{=}{{getRemovableNode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{getRemovableNode}{()}{{{}{{return}{{NodeUtil}{.}{getEnclosingStatement}{(}{lhs}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{hasReferenceName}{()}{{{}{{{checkNotNull}{(}{referencedObjType}{)}}{;}}{{return}{{referencedObjType}{.}{hasReferenceName}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{removeUnusedCodeOnce}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{mayHaveSideEffects}{(}{objExpression}{)}}{)}{{{}{{{replaceNodeWith}{(}{incOrDecNode}{,}{{objExpression}{.}{detach}{()}}{)}}{;}}{}}}{else}{{{}{{{removeExpressionCompletely}{(}{incOrDecNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{mayHaveSideEffects}{(}{objExpression}{)}}{)}{{{}{{{replaceNodeWith}{(}{referenceNode}{,}{{objExpression}{.}{detach}{()}}{)}}{;}}{}}}{else}{{{}{{{removeExpressionCompletely}{(}{referenceNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{Arguments}{(}{{{Scope}}{scope}}{)}{{{}{{super}{(}{ARGUMENTS}{,}{null}{,}{scope}{,}{{-}{NUMBER_CONSTANT}}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypedScope}}{getScope}{(}{{{TypedVar}}{var}}{)}{{{}{{return}{{(}{{TypedScope}}{)}{var.scope}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{Scope}}{)}{scope}}{)}}{.}{declare}{(}{name}{,}{n}{,}{input}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{AbstractScope}}{<}{?}{,}{?}{>}}{s}}}
{AST_ROOT_SC2NF{{private}{void}{pushScope}{(}{{{{AbstractScope}}{<}{?}{,}{?}{>}}{s}}{)}{{{}{{{pushScope}{(}{s}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{AbstractScope}}{<}{?}{,}{?}{>}}{refinedScope}}}
{AST_ROOT_SC2NF{{{{AbstractScope}}{<}{?}{,}{?}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{AbstractScope}}{<}{?}{,}{?}{>}}{s}}}
{AST_ROOT_SC2NF{{{Scope}}{{hoistedScope}{=}{{{t}{.}{getClosestHoistScope}{()}}{.}{untyped}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Var}}{{var}{=}{{new}{{Var}}{(}{name}{,}{nameNode}{,}{this}{,}{{getVarCount}{()}}{,}{input}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{AbstractScope}}{<}{?}{,}{?}{>}}{parent}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{{scopeCreator}{=}{{createScopeCreator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{AbstractScope}}{<}{?}{,}{?}{>}}{parent}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{FeatureSet}}{(}{{union}{(}{features}{,}{other.features}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{FeatureSet}}{withoutTypes}{()}{{{}{{return}{{new}{{FeatureSet}}{(}{{difference}{(}{features}{,}{{LangVersion.TYPESCRIPT}{.}{features}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{FeatureSet}{(}{{{{EnumSet}}{<}{{Feature}}{>}}{features}}{)}{{{}{{{{this}{.}{features}}{=}{{ImmutableSet}{.}{copyOf}{(}{features}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{!}{{scope}{.}{isDeclared}{(}{name}{,}{false}{)}}}{&&}{{!}{{(}{{{scope}{.}{isLocal}{()}}{&&}{{name}{.}{equals}{(}{Var.ARGUMENTS}{)}}}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Var.ARGUMENTS}{.}{equals}{(}{name}{)}}{&&}{{NodeUtil}{.}{isVanillaFunction}{(}{{scope}{.}{getRootNode}{()}}{)}}}{)}{{{}{{return}{{scope}{.}{getArgumentsVar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{{S}}{getScope}{()}{{{}{{return}{scope}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{isFunctionScope}{()}}}{||}{{rootNode}{.}{isArrowFunction}{()}}}{)}{{{}{{return}{{{getParent}{()}}{.}{getArgumentsVar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypedScope}}{getScope}{(}{{{TypedVar}}{var}}{)}{{{}{{return}{var.scope}{;}}{}}}}}
{AST_ROOT_SC2NF{{{optimizations}{.}{add}{(}{{new}{{MinimizeExitPoints}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{{(}{{String}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{{(}{{String}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{STRING_CONSTANT}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{STRING_CONSTANT}{,}{originalCode}{,}{template}{,}{expectedCode}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clearTemplates}{()}{{{}{{{templates}{=}{null}}{;}}{{{matchedTemplates}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{funType}{,}{STRING_CONSTANT}{,}{recvType}{,}{setterPname}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isCommonJsImport}{(}{n}{)}}{)}{{{}{{{visitRequireCall}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{moduleLoader}}{=}{{new}{{ModuleLoader}}{(}{null}{,}{options.moduleRoots}{,}{inputs}{,}{ModuleLoader.PathResolver.RELATIVE}{,}{options.moduleResolutionMode}{,}{inputPathByWebpackId}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setModuleResolutionMode}{(}{resolutionMode}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{JsonFileSpec}{(}{{{String}}{src}}{,}{{{String}}{path}}{)}{{{}{{this}{(}{src}{,}{path}{,}{null}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{var}{.}{getParentNode}{()}}{.}{isParamList}{()}}{)}{{{}{{{varInfo.hasNonLocalOrNonLiteralValue}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{throw}{{new}{{AssertionError}}{(}{STRING_CONSTANT}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{preventsRemovalOfVariableWithNonLocalValueOrPrototype}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNewOperator3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNewOperator2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNewOperator1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{JSType}{.}{getLeastSupertype}{(}{this}{,}{that}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newDeclaration}{=}{{{NodeUtil}{.}{newDeclaration}{(}{{lhsToSplit}{.}{detach}{()}}{,}{rhs}{,}{{n}{.}{getToken}{()}}{)}}{.}{srcref}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{TypeI}}{>}}{{props}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{,}{STRING_CONSTANT}{,}{{stmt}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NameDeclarationStatement}}{{removable}{=}{{builder}{.}{buildNameDeclarationStatement}{(}{declarationStatement}{)}}}{;}}}
{AST_ROOT_SC2NF{{(}{{NodeUtil}{.}{isEnhancedFor}{(}{parent}{)}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{grandparent}{!=}{null}}{&&}{{NodeUtil}{.}{isNameDeclaration}{(}{grandparent}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLoggerMethodCallByVariableType_var}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ParseTree}}{{right}{=}{{parseExponentiationExpression}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{findModifiedParameters}{(}{{fnNode}{.}{getLastChild}{()}}{,}{names}{,}{unsafeNames}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDirectPrototypeAssignment2}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRICT_INEXISTENT_PROPERTY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPropertyInference6}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRICT_INEXISTENT_PROPERTY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getErrorManager}{()}}{.}{report}{(}{CheckLevel.ERROR}{,}{{JSError}{.}{make}{(}{AbstractCompiler.READ_ERROR}{,}{{getName}{()}}{,}{{e}{.}{getMessage}{()}}{)}}{)}}{;}}{{return}{SimpleDependencyInfo.EMPTY}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{AbstractCompiler.READ_ERROR}{,}{{sourceFile}{.}{getName}{()}}{,}{{e}{.}{getMessage}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{allowDupe}{=}{{VarCheck}{.}{hasDuplicateDeclarationSuppression}{(}{compiler}{,}{referenceNode}{,}{{v}{.}{getNameNode}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testClosureTypesMultipleWarnings}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{ImmutableList}{.}{of}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty30}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TemplateAstMatcher}}{{astMatcher}{=}{{new}{{TemplateAstMatcher}}{(}{{compiler}{.}{getTypeIRegistry}{()}}{,}{templateRoot}{,}{typeMatchingStrategy}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{fnThisType}{==}{null}}{?}{null}{:}{{fnThisType}{.}{toObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{IR}{.}{string}{(}{{{t}{.}{getInput}{()}}{.}{getName}{()}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckSuper}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{checkSuper}{)}}{;}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkSuper}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{visitInterfaceGetprop}{(}{t}{,}{assign}{,}{object}{,}{rvalue}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{visitGetProp}{(}{t}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{,}{scriptNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{enclosingNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{n}{,}{isLoopOrFunction}{)}}}{;}}{{return}{{{enclosingNode}{!=}{null}}{&&}{{!}{{enclosingNode}{.}{isFunction}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Es6RewriteClass}}{(}{compiler}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{BOOLEAN_TYPE}{)}}{,}{{typeRegistry}{.}{getType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{suppressors}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{DiagnosticGroupWarningsGuard}}{(}{{new}{{DiagnosticGroup}}{(}{DiagnosticGroups.CHECK_TYPES}{,}{DiagnosticGroups.STRICT_CHECK_TYPES}{)}}{,}{CheckLevel.OFF}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rewriteState}{.}{containsModule}{(}{legacyNamespace}{)}}}{)}{{{}{{{unrecognizedRequires}{.}{add}{(}{{new}{{UnrecognizedRequire}}{(}{call}{,}{legacyNamespace}{,}{false}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{boolean}{inIncrementalCheckMode}{()}{{{}{{return}{{incrementalCheckMode}{!=}{IncrementalCheckMode.OFF}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{originalFunction}{=}{{checkNotNull}{(}{functionContext.function}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{PotentialDeclaration}}{decl}}{:}{{{currentFile}{.}{getDeclarations}{()}}{.}{get}{(}{name}{)}}{)}{{{}{{{processDeclaration}{(}{name}{,}{decl}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{getRhs}{()}}{==}{null}}{||}{{shouldPreserve}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PotentialDeclaration}{.}{isConstToBeInferred}{(}{originalJsdoc}{,}{nameNode}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{isImport}{=}{{PotentialDeclaration}{.}{isImportRhs}{(}{rhs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lhsToSplit}{.}{isDestructuringLhs}{()}}{&&}{{!}{{PotentialDeclaration}{.}{isImportRhs}{(}{{lhsToSplit}{.}{getLastChild}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{PotentialDeclaration}{.}{isConstToBeInferred}{(}{jsdoc}{,}{nameNode}{)}}{&&}{{!}{{nameNode}{.}{isFromExterns}{()}}}{&&}{{!}{{JsdocUtil}{.}{isPrivate}{(}{jsdoc}{)}}}}}
{AST_ROOT_SC2NF{{{{jsdoc}{==}{null}}{||}{{!}{{jsdoc}{.}{containsDeclaration}{()}}}}{||}{{isConstToBeInferred}{(}{jsdoc}{,}{jsdocNode}{)}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{caseBody}{.}{isNormalBlock}{()}}{,}{caseBody}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{first}{.}{getString}{()}}{.}{isEmpty}{()}}{,}{first}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue2508576_1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassExtern}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLitExtern2}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLitExtern1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{CompilerTypeTestCase.DEFAULT_EXTERNS}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{SHARED_EXTERNS}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{METHOD_DEFS}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{code}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{code}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{source}{)}}{)}}{;}}{{{assertEquals}{(}{expected}{,}{found}{)}}{;}}{{{found}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{tester}{.}{testSame}{(}{{externs}{(}{STRING_CONSTANT}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{ALL_NATIVE_EXTERN_TYPES}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{code}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{externs}{(}{EXTERNS}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{testSameEs6Strict}{(}{{{String}}{js}}{)}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{DEFAULT_EXTERNS}{.}{replace}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{{StaticTypedSlot}}{<}{{JSType}}{>}}{>}}{{slots}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{declNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{coalescedName}{.}{getParentNode}{()}}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}{{{declNode}{.}{setToken}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{name}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{nameDecl}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{v}{.}{getNode}{()}}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{declNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{coalescedName}{.}{getParentNode}{()}}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}{{{declNode}{.}{setToken}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{name}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{nameDecl}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{v}{.}{getNode}{()}}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}}
{AST_ROOT_SC2NF{{{addExpr}{(}{{first}{.}{getNext}{()}}{,}{NUMBER_CONSTANT}{,}{Context.OTHER}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFindExpressionRoot5}{()}{{{}{{{{assertNode}{(}{{findExpressionRoot}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{.}{hasType}{(}{Token.FOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{parent}{.}{getParent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isReasonableObjectPropertyKey}{(}{{{templatizedType}{.}{getTemplateTypes}{()}}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{that}{.}{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN_SYMBOL}{)}}{)}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}{else}{{{}{{return}{FALSE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{registerMismatchAndReport}{(}{n}{,}{INVALID_OPERAND_TYPE}{,}{msg}{,}{type}{,}{{getNativeType}{(}{NUMBER_STRING}{)}}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{allBitwisableValueTypes}}{=}{{typeRegistry}{.}{createUnionType}{(}{STRING_TYPE}{,}{NUMBER_TYPE}{,}{BOOLEAN_TYPE}{,}{NULL_TYPE}{,}{VOID_TYPE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{allDeps}{.}{addAll}{(}{{input}{.}{getRequiredSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{input}{.}{getKnownRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{{writeJsArray}{(}{out}{,}{{Require}{.}{asSymbolList}{(}{{info}{.}{getRequires}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{Require}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{input}{.}{addOrderedRequire}{(}{{Require}{.}{compilerModule}{(}{require}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Builder}}{setRequires}{(}{{{{Collection}}{<}{{Require}}{>}}{requires}}{)}{;}}}
{AST_ROOT_SC2NF{{{{SimpleDependencyInfo}{.}{builder}{(}{CLOSURE_PATH}{,}{SRC_PATH}{)}}{.}{setProvides}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{.}{setRequires}{(}{{ImmutableList}{.}{of}{(}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{,}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{public}{void}{addRequire}{(}{{{Require}}{require}}{)}{{{}{{{extraRequires}{.}{add}{(}{require}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Require}}{require}}}
{AST_ROOT_SC2NF{{rootInput}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{userOrderedInput}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{{requires}{.}{addAll}{(}{{deps}{.}{getRequiredSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{require}}{:}{{dependency}{.}{getRequiredSymbols}{()}}{)}{{{}{{{addDependency}{(}{require}{,}{seen}{,}{list}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGithubIssue2818}{()}{{{}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{{error}{(}{BAD_PRIVATE_PROPERTY_ACCESS}{)}}{.}{withMessage}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{error}{(}{BAD_PRIVATE_PROPERTY_ACCESS}{)}}{.}{withMessage}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{error}{(}{BAD_PRIVATE_PROPERTY_ACCESS}{)}}{.}{withMessage}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{MISSING_REQUIRE_FOR_GOOG_SCOPE}{)}}{.}{withMessage}{(}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{MISSING_REQUIRE_WARNING}{)}}{.}{withMessage}{(}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{MISSING_REQUIRE_WARNING}{)}}{.}{withMessage}{(}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{MISSING_REQUIRE_STRICT_WARNING}{)}}{.}{withMessage}{(}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{{error}{(}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{)}}{.}{withMessage}{(}{message}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{{error}{(}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{)}}{.}{withMessage}{(}{message}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{{DEFAULT_EXTERNS}{+}{externs}}{)}}{,}{{srcs}{(}{js}{)}}{,}{{expected}{(}{expected}{)}}{,}{{{warning}{(}{warning}{)}}{.}{withMessage}{(}{description}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{expected}{(}{STRING_CONSTANT}{)}}{,}{{{warning}{(}{e}{)}}{.}{withMessage}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{warning}{)}}{.}{withMessage}{(}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{{srcs}{(}{inputs}{)}}{,}{{{warning}{(}{warning}{)}}{.}{withMessage}{(}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{warning}{)}}{.}{withMessage}{(}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{error}{)}}{;}}{{{test}{(}{{srcs}{(}{inputs}{)}}{,}{{{error}{(}{error}{)}}{.}{withMessage}{(}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{error}{)}}{;}}{{{test}{(}{{srcs}{(}{js}{)}}{,}{{{error}{(}{error}{)}}{.}{withMessage}{(}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{MISSING_PROVIDE_WARNING}{)}}{.}{withMessage}{(}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{MISSING_PROVIDE_WARNING}{)}}{.}{withMessage}{(}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{{warning}{(}{MISSING_PROVIDE_WARNING}{)}}{.}{withMessage}{(}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Builder}}{setRequires}{(}{{{{Collection}}{<}{{String}}{>}}{requires}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{addRequire}{(}{{{String}}{require}}{)}{{{}{{{extraRequires}{.}{add}{(}{require}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{require}}}
{AST_ROOT_SC2NF{{{allDeps}{.}{addAll}{(}{{input}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{input}{.}{getKnownRequires}{()}}}
{AST_ROOT_SC2NF{{rootInput}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{{requires}{.}{addAll}{(}{{deps}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{require}}{:}{{dependency}{.}{getRequires}{()}}{)}{{{}{{{addDependency}{(}{require}{,}{seen}{,}{list}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{SimpleDependencyInfo}{.}{builder}{(}{CLOSURE_PATH}{,}{SRC_PATH}{)}}{.}{setProvides}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{.}{setRequires}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{writeJsArray}{(}{out}{,}{{info}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{userOrderedInput}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{{}{{{input}{.}{addOrderedRequire}{(}{require}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{,}{preprocessorSymbolTableFactory}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{,}{preprocessorSymbolTableFactory}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{putBooleanProp}{(}{Node.MODULE_ALIAS}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{factories}{,}{{new}{{PreprocessorSymbolTable.CachedInstanceFactory}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{TemplateType}}{unused}}{:}{{{obj}{.}{getTemplateTypeMap}{()}}{.}{getTemplateKeys}{()}}{)}{{{}{{{unknowns}{.}{add}{(}{{getNativeType}{(}{UNKNOWN_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue70b}{()}{{{}{{{args}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.LANGUAGE_FEATURE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue70a}{()}{{{}{{{args}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.LANGUAGE_FEATURE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rewriteGeneratorBody}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{hasTwoChildren}{()}}{&&}{{{node}{.}{getLastChild}{()}}{.}{isString}{()}}}{)}{{{}{{{info.importedModules}{.}{add}{(}{{{node}{.}{getLastChild}{()}}{.}{getString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypedScopeCreator}}{{typedScopeCreator}{=}{{getTypedScopeCreator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{scopeCreator}{=}{{new}{{TypedScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{{TypedScopeCreator}}{getTypedScopeCreator}{()}{{{}{{return}{typedScopeCreator}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Builder}}{setRequires}{(}{{{{Collection}}{<}{{Require}}{>}}{requires}}{)}{;}}}
{AST_ROOT_SC2NF{{{{SimpleDependencyInfo}{.}{builder}{(}{CLOSURE_PATH}{,}{SRC_PATH}{)}}{.}{setProvides}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{.}{setRequires}{(}{{ImmutableList}{.}{of}{(}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{,}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{userOrderedInput}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{rootInput}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{{requires}{.}{addAll}{(}{{deps}{.}{getRequiredSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{require}}{:}{{dependency}{.}{getRequiredSymbols}{()}}{)}{{{}{{{addDependency}{(}{require}{,}{seen}{,}{list}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{writeJsArray}{(}{out}{,}{{Require}{.}{asSymbolList}{(}{{info}{.}{getRequires}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{Require}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{addRequire}{(}{{{Require}}{require}}{)}{{{}{{{extraRequires}{.}{add}{(}{require}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Require}}{require}}}
{AST_ROOT_SC2NF{{{}{{{input}{.}{addOrderedRequire}{(}{{Require}{.}{compilerModule}{(}{require}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allDeps}{.}{addAll}{(}{{input}{.}{getRequiredSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{input}{.}{getKnownRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{this}{.}{preserveClosurePrimitives}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNoInlineGetElem}{()}{{{}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoInlineGetProp1}{()}{{{}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{{StaticTypedScope}}{<}{{JSType}}{>}}{getParentScope}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Scope}}{usageScope}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{provides}{=}{{new}{{{ArrayList}}{<>}}{(}{{depInfo}{.}{getProvides}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{nullOrUndefined}}{=}{{typeRegistry}{.}{getNativeType}{(}{JSTypeNative.NULL_VOID}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{testForEquality}{(}{that}{)}}{.}{equals}{(}{TernaryValue.UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableStrictMissingPropertyChecks}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableStrictMissingPropertyChecks}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableStrictMissingPropertyChecks}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableStrictMissingPropertyChecks}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableStrictMissingPropertyChecks}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableStrictMissingPropertyChecks}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableStrictMissingPropertyChecks}{()}}{;}}}
{AST_ROOT_SC2NF{{{rewriteGeneratorBodyWithVars}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{context}{.}{writeGeneratedNode}{(}{{{IR}{.}{ifNode}{(}{condition}{,}{{context}{.}{createJumpToBlock}{(}{startCase}{,}{false}{,}{n}{)}}{)}}{.}{useSourceInfoFrom}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{IR}{.}{ifNode}{(}{{{IR}{.}{not}{(}{condition}{)}}{.}{useSourceInfoFrom}{(}{condition}{)}}{,}{{context}{.}{createJumpToBlock}{(}{endCase}{,}{true}{,}{n}{)}}{)}}{.}{useSourceInfoFrom}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{IR}{.}{ifNode}{(}{{{IR}{.}{not}{(}{condition}{)}}{.}{useSourceInfoFrom}{(}{condition}{)}}{,}{{context}{.}{createJumpToBlock}{(}{endCase}{,}{true}{,}{n}{)}}{)}}{.}{useSourceInfoFrom}{(}{n}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES2018}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs2018Passes}{(}{passes}{)}}{;}}{{{passes}{.}{add}{(}{{setFeatureSet}{(}{ES8}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs2018Message}{(}{Feature.OBJECT_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs2018Message}{(}{Feature.OBJECT_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES2018}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs2018Passes}{(}{checks}{)}}{;}}{{{checks}{.}{add}{(}{{setFeatureSet}{(}{ES8}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{isValidAliasRhs}{(}{rhs}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{isNoOp}{()}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{allJsDocParams}{=}{{{(}{{info}{==}{null}}{)}}{?}{{new}{{{HashSet}}{<>}}{()}}{:}{{new}{{{HashSet}}{<>}}{(}{{info}{.}{getParameterNames}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{typeRegistry}{.}{getGlobalType}{(}{dottedName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{metadata}{.}{getCompiler}{()}}{.}{getTypeRegistry}{()}}{.}{getGlobalType}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{mathType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{registry}{.}{getGlobalType}{(}{typeName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{domHelperType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{compiler}{,}{requirement}{)}{;}}{{{errorObjType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{methodClassType}{=}{{registry}{.}{getGlobalType}{(}{r.type}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{typeWithBannedProp}{=}{{registry}{.}{getGlobalType}{(}{prop.type}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TypeI}}{{type}{=}{{registry}{.}{getGlobalType}{(}{typeName}{)}}}{;}}{{if}{(}{{type}{!=}{null}}{)}{{{}{{{types}{.}{add}{(}{type}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{methodClassType}{=}{{registry}{.}{getGlobalType}{(}{className}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Scope}}{{scope}{=}{{t}{.}{getScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{Predicates}{.}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{{{ImmutableList.Builder}}{<}{{Callback}}{>}}{{callbacks}{=}{{ImmutableList}{.}{builder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{parent}{.}{isAssign}{()}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{getProp}}}{&&}{{{{getProp}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{{parent}{.}{isAssign}{()}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{getProp}}}{&&}{{{{{parent}{.}{getFirstChild}{()}}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{declNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{coalescedName}{.}{getParentNode}{()}}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}{{{declNode}{.}{setToken}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{name}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{nameDecl}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{v}{.}{getNode}{()}}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Streams}{.}{stream}{(}{fixChoices}{)}}{.}{map}{(}{{{choices}}{-}{>}{{{choices}{.}{getAlternatives}{()}}{.}{get}{(}{choiceIndex}{)}}}{)}}}
{AST_ROOT_SC2NF{{{Streams}{.}{stream}{(}{fixChoices}{)}}{.}{map}{(}{{{f}}{-}{>}{{{f}{.}{getAlternatives}{()}}{.}{size}{()}}}{)}}}
{AST_ROOT_SC2NF{{{newVar}{=}{{declare}{(}{scopeToDeclareIn}{,}{variableName}{,}{n}{,}{type}{,}{input}{,}{inferred}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isKeyword}{(}{importedName.value}{)}}{)}{{{}{{{reportError}{(}{importedName}{,}{STRING_CONSTANT}{,}{importedName.value}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isKeyword}{(}{importedName.value}{)}}{)}{{{}{{{reportExpectedError}{(}{null}{,}{PredefinedName.AS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{scanner}}{=}{{new}{{Scanner}}{(}{config.parseTypeSyntax}{,}{errorReporter}{,}{commentRecorder}{,}{source}{,}{offset}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testNotEs6TypedFullError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNotEs6TypedFullError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNotEs6TypedFullError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parse}{(}{STRING_CONSTANT}{)}}{;}}{{{expectErrors}{(}{STRING_CONSTANT}{)}}{;}}{{{parse}{(}{STRING_CONSTANT}{)}}{;}}{{{testNotEs6TypedFullError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{nameNode}{.}{isName}{()}}{,}{nameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Case}}{currentCase}}{:}{allCases}{)}{{{}{{{switchNode}{.}{addChildToBack}{(}{{currentCase}{.}{createCaseNode}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{currentCase.embedInto}{.}{replaceWith}{(}{currentCase.caseBlock}{)}}{;}}{{{it}{.}{remove}{()}}{;}}{continue;}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{context}}{=}{{new}{{TranspilationContext}}{()}}}{;}}}
{AST_ROOT_SC2NF{{ImmutableSortedSet}{.}{copyOf}{(}{{comparingByKey}{()}}{,}{{map}{.}{entrySet}{()}}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{modulePaths}}{=}{{resolvePaths}{(}{{Iterables}{.}{transform}{(}{{Iterables}{.}{transform}{(}{inputs}{,}{{DependencyInfo}{:}{:}{getName}}{)}}{,}{pathResolver}{)}}{,}{moduleRootPaths}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{cache}}{=}{{builder}{.}{build}{(}{{CacheLoader}{.}{from}{(}{{delegate}{:}{:}{transform}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{:}{:}{transform}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{function}{:}{:}{apply}}{;}}{}}}}
{AST_ROOT_SC2NF{{Predicates}{.}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{return}{{NodeUtil}{.}{has}{(}{node}{,}{pred}{,}{{Predicates}{.}{alwaysTrue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{behavior}{,}{creator}{,}{{Predicates}{.}{alwaysTrue}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{NodeUtil}{.}{has}{(}{callNode}{,}{hasSpreadCallArgumentPredicate}{,}{{Predicates}{.}{alwaysTrue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{!}{referencesArguments}}{&&}{{!}{{NodeUtil}{.}{has}{(}{block}{,}{p}{,}{{Predicates}{.}{alwaysTrue}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{result}{==}{null}}{?}{{ImmutableList}{.}{of}{()}}{:}{{ImmutableList}{.}{of}{(}{result}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{customPasses}{==}{null}}{)}{{{}{{{customPasses}{=}{{LinkedHashMultimap}{.}{create}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{typeNode}}{:}{{info}{.}{getTypeNodes}{()}}{)}{{{}{{{NodeUtil}{.}{visitPreOrder}{(}{typeNode}{,}{fixJsdocTypeNodes}{,}{{Predicates}{.}{alwaysTrue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{maybeAddUsage}{(}{t}{,}{n}{,}{typeNode}{,}{false}{,}{{Predicates}{.}{alwaysTrue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{Predicates}{.}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{{}{{return}{{eval}{(}{ttlAst}{,}{typeVars}{,}{{ImmutableMap}{.}{of}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Ref}}{>}}{getRefs}{()}{{{}{{return}{{{refs}{==}{null}}{?}{{ImmutableList}{.}{of}{()}}{:}{refs}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{chars}{==}{null}}{?}{{ImmutableSet}{.}{of}{()}}{:}{{ImmutableSet}{.}{copyOf}{(}{{Chars}{.}{asList}{(}{chars}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{reserved}{=}{{{previousMap}{!=}{null}}{?}{{{previousMap}{.}{getNewNameToOriginalNameMap}{()}}{.}{keySet}{()}}{:}{{Collections}{.}{emptySet}{()}}}}}
{AST_ROOT_SC2NF{{return}{{{invocation}{.}{hasOneChild}{()}}{?}{{ImmutableList}{.}{of}{()}}{:}{{{invocation}{.}{getSecondChild}{()}}{.}{siblings}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{node}{,}{{new}{{MatchNameNode}}{(}{name}{)}}{,}{{Predicates}{.}{alwaysTrue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{Predicates}{.}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{{Arrays}{.}{sort}{(}{arr}{,}{{Ordering}{.}{natural}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{typeNode}}{:}{{info}{.}{getTypeNodes}{()}}{)}{{{}{{{NodeUtil}{.}{visitPreOrder}{(}{typeNode}{,}{replaceJsDocRefs}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{ImmutableSet}{.}{of}{()}}}
{AST_ROOT_SC2NF{{invalidations}{=}{{{{FluentIterable}{.}{from}{(}{{invalidationMap}{.}{get}{(}{t}{)}}{)}}{.}{transform}{(}{{Suppliers}{.}{supplierFunction}{()}}{)}}{.}{limit}{(}{MAX_INVALIDATION_WARNINGS_PER_PROPERTY}{)}}}}
{AST_ROOT_SC2NF{{{{this}{.}{invalidationMap}}{=}{{{propertiesToErrorFor}{.}{isEmpty}{()}}{?}{null}{:}{{LinkedHashMultimap}{.}{create}{()}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{JSTypeExpression}}{(}{typeNode}{,}{VIRTUAL_FILE}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{registry}{.}{getGlobalType}{(}{{{target}{.}{getFirstFirstChild}{()}}{.}{getQualifiedName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{JSType}}{{voidType}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getNativeType}{(}{JSTypeNative.VOID_TYPE}{)}}}{;}}{{return}{{voidType}{.}{isSubtype}{(}{returnType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isTheObjectType}{()}}{||}{{isStringObjectType}{()}}{||}{{isDateType}{()}}{||}{{isRegexpType}{()}}{||}{{isArrayType}{()}}{||}{{isNumberObjectType}{()}}{||}{{isBooleanObjectType}{()}}{||}{{hasOverriddenNativeProperty}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{matchesNumberContext}{()}{{{}{{return}{{{isNumberObjectType}{()}}{||}{{isDateType}{()}}{||}{{isBooleanObjectType}{()}}{||}{{isStringObjectType}{()}}{||}{{hasOverriddenNativeProperty}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getGlobalType}{(}{typeName}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty33}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty22}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty21}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty18}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty15}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty12}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty11}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty10}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty9}{()}{{{}{{{disableStrictMissingPropertyChecks}{()}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSTypeExpression}}{{expr}{=}{{new}{{JSTypeExpression}}{(}{{getCallArgument}{(}{ttlAst}{,}{NUMBER_CONSTANT}{)}}{,}{VIRTUAL_FILE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{ES6}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{ES6}{)}}{)}{{{}{{{passes}{.}{add}{(}{optimizeToEs6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.dartPass}{&&}{{!}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{ES6}{)}}}}{)}{{{}{{{checks}{.}{add}{(}{dartSuperAccessorsPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getDefaultOptions}{()}}}{;}}{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{nameNode}{.}{hasChildren}{()}}{||}{{isLhsOfEnhancedForExpression}{(}{nameNode}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pos}{>=}{{js}{.}{length}{()}}}{)}{{{}{{return}{null}{;}}{}}}{else}{{{}{{return}{{js}{.}{substring}{(}{pos}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{isQuotedString}{()}}{||}{{!}{{node}{.}{hasChildren}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{declList}{.}{sort}{(}{DECLARATIONS_FIRST}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{newType}{=}{{{objType}{.}{getTemplateTypeMap}{()}}{.}{getResolvedTemplateType}{(}{{registry}{.}{getIterableTemplate}{()}}{)}}}{;}}{{{redeclareSimpleVar}{(}{informed}{,}{item}{,}{newType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{reporter}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{reporter}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{abstract}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{reporter}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{;}}}
{AST_ROOT_SC2NF{{{ErrorReporter}}{reporter}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{reporter}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModulesToCommonJsModules}}{(}{compiler}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{String}}{transpileEs6Module}{(}{{{String}}{s}}{)}{{{}{{return}{{transpile}{(}{s}{,}{es6ModuleTranspiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{that}{.}{isUnknownType}{()}}{||}{{that}{.}{isSubtypeOf}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}{)}}{)}}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{isUnknownType}{()}}{||}{{t}{.}{isNoResolvedType}{()}}{||}{{!}{{t}{.}{isSubtypeOf}{(}{type}{)}}}}{)}{{{}{{{restricted}{.}{addAlternate}{(}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{alternate}{.}{isUnknownType}{()}}}{&&}{{that}{.}{isSubtypeOf}{(}{alternate}{)}}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isStructural}{&&}{{!}{thisUnresolved}}{&&}{{!}{thatUnresolved}}}{)}{{{}{{return}{{rightType}{.}{isSubtypeOf}{(}{leftType}{)}}{;}}{}}}{else}{{{}{{return}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{.}{isSubtypeOf}{(}{{getNativeType}{(}{ARRAY_TYPE}{)}}{)}}{?}{null}{:}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{arrayType}{=}{{getNativeType}{(}{ARRAY_TYPE}{)}}}{;}}{{return}{{{arrayType}{.}{isSubtypeOf}{(}{type}{)}}{?}{arrayType}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{resultEqualsValue}{)}{{{}{{return}{{ctorType}{.}{getGreatestSubtype}{(}{type}{)}}{;}}{}}}{else}{{{}{{return}{{{type}{.}{isSubtypeOf}{(}{ctorType}{)}}{?}{null}{:}{type}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{x}{.}{isSubtypeOf}{(}{{windowCtor}{.}{getInstanceType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{x}{.}{isSubtypeOf}{(}{{windowCtor}{.}{getInstanceType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{y}{.}{isSubtypeOf}{(}{{getNativeType}{(}{STRING_TYPE}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{this}{.}{isSubtype}{(}{rawThat}{)}}{)}{{{}{{return}{this}{;}}{}}}{else}{{if}{(}{{rawThat}{.}{isSubtypeOf}{(}{this}{)}}{)}{{{}{{return}{{filterNoResolvedType}{(}{rawThat}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{unknown}{.}{isSubtypeOf}{(}{STRING_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{NULL_TYPE}{.}{isSubtypeOf}{(}{nullOrUnknown}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{argType}{.}{isSubtypeOf}{(}{paramType}{)}}}}
{AST_ROOT_SC2NF{{!}{{rightType}{.}{isSubtypeOf}{(}{leftType}{)}}}}
{AST_ROOT_SC2NF{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtypeOf}{(}{leftType}{)}}}}}
{AST_ROOT_SC2NF{{{!}{{switchType}{.}{canTestForShallowEqualityWith}{(}{caseType}{)}}}{&&}{{(}{{{{caseType}{.}{autoboxesTo}{()}}{==}{null}}{||}{{!}{{{caseType}{.}{autoboxesTo}{()}}{.}{isSubtypeOf}{(}{switchType}{)}}}}{)}}}}
{AST_ROOT_SC2NF{{{!}{{type}{.}{isNoType}{()}}}{&&}{{!}{{type}{.}{isUnknownType}{()}}}{&&}{{type}{.}{isSubtypeOf}{(}{nullOrUndefined}{)}}{&&}{{!}{{containsForwardDeclaredUnresolvedName}{(}{type}{)}}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtypeOf}{(}{{getNativeType}{(}{NUMBER_STRING_SYMBOL}{)}}{)}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtypeOf}{(}{{getNativeType}{(}{NUMBER_STRING}{)}}{)}}}}
{AST_ROOT_SC2NF{{{!}{{type}{.}{matchesNumberContext}{()}}}{&&}{{!}{{type}{.}{isSubtypeOf}{(}{allBitwisableValueTypes}{)}}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtypeOf}{(}{{getNativeType}{(}{NUMBER_TYPE}{)}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{anyObjectType}{.}{isSubtypeOf}{(}{type}{)}}}{&&}{{!}{{type}{.}{isEmptyType}{()}}}}{)}{{{}{{{mismatch}{(}{t}{,}{n}{,}{msg}{,}{type}{,}{anyObjectType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{funcTarget}{.}{hasInstanceType}{()}}{)}{{{}{{if}{(}{{type}{.}{isSubtypeOf}{(}{{funcTarget}{.}{getInstanceType}{()}}{)}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{type}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{objType}{.}{isNoType}{()}}}{&&}{{!}{{objType}{.}{isUnknownType}{()}}}{&&}{{objType}{.}{isSubtypeOf}{(}{{getNativeType}{(}{NULL_VOID}{)}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{castType}{.}{restrictByNotNullOrUndefined}{()}}{.}{isSubtypeOf}{(}{exprType}{)}}{||}{{expr}{.}{isObjectLit}{()}}}{)}{{{}{{{expr}{.}{setJSType}{(}{castType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmptyType}{()}}{||}{{that}{.}{isEmptyType}{()}}}{)}{{{}{{return}{{{isSubtypeOf}{(}{that}{)}}{||}{{that}{.}{isSubtypeOf}{(}{this}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{alternate}{=}{{alternatesList}{.}{get}{(}{i}{)}}}{;}}{{if}{(}{{alternate}{.}{isSubtypeOf}{(}{arrayType}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isSymbol}{()}{{{}{{return}{{isSubtypeOf}{(}{{getNativeType}{(}{JSTypeNative.SYMBOL_VALUE_OR_OBJECT_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isNumber}{()}{{{}{{return}{{isSubtypeOf}{(}{{getNativeType}{(}{JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isString}{()}{{{}{{return}{{isSubtypeOf}{(}{{getNativeType}{(}{JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{that}{.}{isSubtypeOf}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN_SYMBOL}{)}}{)}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtypeOf}{(}{{typeRegistry}{.}{getNativeType}{(}{OBJECT_TYPE}{)}}{)}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{STRING_CONSTANT}{+}{varType}{+}{STRING_CONSTANT}{+}{name}{+}{STRING_CONSTANT}{+}{type}{+}{STRING_CONSTANT}}{,}{{varType}{.}{isSubtypeOf}{(}{type}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{BooleanOutcomePair}}{(}{{jsType}{.}{getPossibleToBooleanOutcomes}{()}}{,}{{{{registry}{.}{getNativeType}{(}{BOOLEAN_TYPE}{)}}{.}{isSubtypeOf}{(}{jsType}{)}}{?}{BooleanLiteralSet.BOTH}{:}{BooleanLiteralSet.EMPTY}}{,}{flowScope}{,}{flowScope}{)}}{;}}}
{AST_ROOT_SC2NF{{{outcome.booleanValues}{==}{BooleanLiteralSet.EMPTY}}{&&}{{{getNativeType}{(}{BOOLEAN_TYPE}{)}}{.}{isSubtypeOf}{(}{type}{)}}}}
{AST_ROOT_SC2NF{{argObjectType}{.}{isSubtypeOf}{(}{referencedParamType}{)}}}
{AST_ROOT_SC2NF{{{!}{{jsType}{.}{isUnknownType}{()}}}{&&}{{!}{{jsType}{.}{isAllType}{()}}}{&&}{{jsType}{.}{isSubtypeOf}{(}{providedJsType}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{that}{.}{isUnknownType}{()}}{||}{{that}{.}{isSubtypeOf}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}{)}}{)}}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{JSType}}{{voidType}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getNativeType}{(}{JSTypeNative.VOID_TYPE}{)}}}{;}}{{return}{{voidType}{.}{isSubtypeOf}{(}{returnType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{that}{.}{isUnknownType}{()}}{||}{{that}{.}{isSubtypeOf}{(}{{getNativeType}{(}{JSTypeNative.NUMBER_STRING_BOOLEAN}{)}}{)}}{||}{{that}{.}{isObject}{()}}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{arrayOfString}{.}{isSubtypeOf}{(}{{createUnionType}{(}{arrayOfNumber}{,}{NULL_VOID}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isSubtype}{(}{{{JSType}}{that}}{)}{{{}{{return}{{this}{.}{isSubtype}{(}{that}{,}{{ImplCache}{.}{create}{()}}{,}{SubtypingMode.NORMAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{thisType}{.}{isSubtypeOf}{(}{thatType}{)}}{||}{{thatType}{.}{isSubtypeOf}{(}{thisType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{thisType}{.}{isFunctionType}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{{}{{return}{{{thisType}{.}{isSubtypeOf}{(}{functionType}{)}}{||}{{functionType}{.}{isSubtype}{(}{thisType}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isConstToBeInferred}{()}{{{}{{return}{{isConstToBeInferred}{(}{{getLhs}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeWarnForConstWithoutExplicitType}{(}{compiler}{,}{decl}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{astValidationEnabled}{)}{{{}{{{{{new}{{AstValidator}}{(}{compiler}{)}}{.}{setTypeValidationEnabled}{(}{typeInfoValidationEnabled}{)}}{.}{validateRoot}{(}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{PureFunctionIdentifier.Driver}}{(}{compiler}{,}{null}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNameToLocalQName}{.}{put}{(}{name}{,}{{new}{{LocalQName}}{(}{name}{,}{export}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNameToLocalQName}{.}{put}{(}{name}{,}{{new}{{LocalQName}}{(}{name}{,}{lhs}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNameToLocalQName}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{LocalQName}}{(}{name}{,}{export}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map.Entry}}{<}{{String}}{,}{{LocalQName}}{>}}{entry}}}
{AST_ROOT_SC2NF{{{functionNames}{=}{compilerState.functionNames}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionNames}}{=}{compiler.functionNames}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{moduleScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{moduleScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{blockScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{fooScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{forOfScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{functionBlockScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{functionScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{functionBlockScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FlagUsageException}}{e}}{)}{{{}{{{{{assertThat}{(}{e}{)}}{.}{hasMessageThat}{()}}{.}{isEqualTo}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{s}{!=}{null}}{?}{s}{:}{{createScope}{(}{n}{,}{{createScope}{(}{{NodeUtil}{.}{getEnclosingNode}{(}{{n}{.}{getParent}{()}}{,}{{NodeUtil}{:}{:}{isValidCfgRoot}}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeInference}}{{dfa}{=}{{new}{{TypeInference}}{(}{compiler}{,}{cfg}{,}{rai}{,}{assumedScope}{,}{scopeCreator}{,}{ASSERTION_FUNCTION_MAP}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{{v}{!=}{null}}{&&}{{v}{.}{isLocal}{()}}}{&&}{{v}{.}{isMarkedEscaped}{()}}}{&&}{{{{v}{.}{getScope}{()}}{.}{getClosestNonBlockScope}{()}}{==}{cfgRootScope}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnflowable}{(}{{currentScope}{.}{getVar}{(}{varName}{)}}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{isLocallyInferred}{=}{{(}{{var}{!=}{{currentScope}{.}{getSlot}{(}{qualifiedName}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ttlObj}{=}{{new}{{TypeTransformation}}{(}{compiler}{,}{currentScope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{currentScope}{.}{getVar}{(}{qKeyName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{currentScope}{.}{getVar}{(}{qName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{currentScope}{.}{getVar}{(}{varName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{{info}{.}{getType}{()}}{.}{evaluate}{(}{currentScope}{,}{registry}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{info}{!=}{null}}{&&}{{info}{.}{hasType}{()}}}{)}{{{}{{{n}{.}{setJSType}{(}{{{info}{.}{getType}{()}}{.}{evaluate}{(}{currentScope}{,}{registry}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{rename}{)}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{js}{,}{{new}{{Renamer}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{registry}{.}{createNullableType}{(}{{registry}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{registry}{,}{reference}{,}{sourceName}{,}{lineno}{,}{charno}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{unresolvedNamedTypes}{.}{removeAll}{(}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clearNamedTypes}{()}{{{}{{{unresolvedNamedTypes}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkTypeName}{(}{name}{)}}{;}}{{{namesToTypes}{.}{put}{(}{name}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{findNameType}{(}{STRING_CONSTANT}{,}{lastLocalScope}{)}}{.}{isEquivalentTo}{(}{{registry}{.}{getType}{(}{null}{,}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{{jsdoc}{.}{getImplementedInterfaces}{()}}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{types}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{interfaces}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{jsdoc}{.}{getBaseType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getBaseType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{interfaces}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{createNullableType}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{EMPTY_SCOPE}{,}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{newType}{.}{isEquivalentTo}{(}{varType}{,}{true}{)}}}}
{AST_ROOT_SC2NF{{{}{{{assertTypeEquals}{(}{expected}{,}{{resolve}{(}{actual}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{checkEquivalenceHelper}{(}{that}{,}{EquivalenceMethod.DATA_FLOW}{,}{{EqCache}{.}{create}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{constructorI}{.}{isEquivalentTo}{(}{constructorJ}{)}}{)}{{{}{{{shouldCheck}{=}{false}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{Functions}{.}{identity}{()}}{,}{errorManager}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{ast}{=}{{parseSyntheticCode}{(}{{SYNTHETIC_CODE_PREFIX}{+}{resourceName}{+}{STRING_CONSTANT}}{,}{originalCode}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{scope}{.}{hasSlot}{(}{NodeUtil.JSC_PROPERTY_NAME_FN}{)}}}{)}{{{}{{{scope}{.}{declare}{(}{NodeUtil.JSC_PROPERTY_NAME_FN}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{scope}{.}{hasOwnSlot}{(}{qName}{)}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{!}{{scope}{.}{hasOwnSlot}{(}{qName}{)}}}{&&}{{n}{.}{isUnscopedQualifiedName}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{name}{.}{isEmpty}{()}}}{&&}{{!}{{usageScope}{.}{hasSlot}{(}{name}{)}}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{getScope}{()}}{.}{hasSlot}{(}{alias}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{TYPE_ALIAS_ALREADY_DECLARED}{,}{alias}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{!}{{{t}{.}{getScope}{()}}{.}{hasSlot}{(}{{n}{.}{getString}{()}}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{current}{.}{hasOwnSlot}{(}{oldName}{)}}{)}{{{}{return;}{}}}{else}{{{}{{{current}{=}{{current}{.}{getParent}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{assertScope}{(}{fooScope}{)}}{.}{declares}{(}{STRING_CONSTANT}{)}}{.}{directly}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{getRootNode}{()}}{.}{isFunction}{()}}}{)}{{{}{{return}{{{getClosestContainerScope}{()}}{.}{getTypeOfThis}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{{v}{!=}{null}}{&&}{{v}{.}{isLocal}{()}}}{&&}{{v}{.}{isMarkedEscaped}{()}}}{&&}{{{{v}{.}{getScope}{()}}{.}{getClosestContainerScope}{()}}{==}{containerScope}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{containerScope}}{=}{syntacticScope}}{;}}}
{AST_ROOT_SC2NF{{while}{(}{{{t}{.}{getScope}{()}}{.}{hasSlot}{(}{pseudoName}{)}}{)}{{{}{{{pseudoName}{+=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{varsInFunctionBody}{.}{contains}{(}{refName}{)}}{&&}{{!}{{scope}{.}{hasSlot}{(}{refName}{)}}}}}
{AST_ROOT_SC2NF{{curScope}{.}{hasSlot}{(}{assignment.oldName}{)}}}
{AST_ROOT_SC2NF{{{{AbstractVar}}{<}{?}{,}{?}{>}}{{var}{=}{{getVar}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{AbstractVar}}{<}{?}{,}{?}{>}}{{var}{=}{{getVar}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnflowable}{(}{{getDeclaredVar}{(}{scope}{,}{varName}{)}}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{isLocallyInferred}{=}{{(}{{var}{!=}{{getDeclaredVar}{(}{scope}{,}{qualifiedName}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{backwardsInferenceFromCallSite}{(}{n}{,}{ct}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{backwardsInferenceFromCallSite}{(}{n}{,}{fnType}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{getDeclaredVar}{(}{scope}{,}{qKeyName}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{unflowable}{=}{{isInferred}{&&}{{isUnflowable}{(}{{getDeclaredVar}{(}{scope}{,}{varName}{)}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{{info}{.}{getType}{()}}{.}{evaluate}{(}{{scope}{.}{getDeclarationScope}{()}}{,}{registry}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{getBinaryModuleNamespace}{(}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{t}{.}{inModuleHoistScope}{()}}}{)}{{{}{{{t}{.}{report}{(}{n}{,}{MODULE_USES_GOOG_MODULE_GET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{,}{null}{,}{false}{,}{ResolutionMode.BROWSER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{t}{.}{inModuleHoistScope}{()}}}{)}{{{}{{{t}{.}{report}{(}{n}{,}{GOOG_MODULE_USES_GOOG_MODULE_GET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{MODULE_EXPORTS_PREFIX}{+}{{{this}{.}{legacyNamespace}}{.}{replace}{(}{CHAR_CONS}{,}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{{DEFAULT_EXTERNS}{+}{externs}}{)}}{,}{{srcs}{(}{js}{)}}{,}{{{error}{(}{INVALIDATION_ON_TYPE}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{{DEFAULT_EXTERNS}{+}{externs}}{)}}{,}{{srcs}{(}{js}{)}}{,}{{{error}{(}{INVALIDATION_ON_TYPE}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{{error}{(}{INVALIDATION}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{{error}{(}{INVALIDATION}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{fnVar}{=}{{currentScope}{.}{getVar}{(}{fnName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{rootNode}{=}{{{currentHoistScope}{.}{getClosestContainerScope}{()}}{.}{getRootNode}{()}}}{;}}}
{AST_ROOT_SC2NF{{GlobalScopeBuilder}{(}{{{TypedScope}}{scope}}{)}{{{}{{super}{(}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentScope}{.}{hasOwnSlot}{(}{qName}{)}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{ownerVar}{=}{{currentScope}{.}{getVar}{(}{slotName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{slot}{=}{{currentScope}{.}{getVar}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{rValueInfo}{.}{getType}{()}}{.}{evaluate}{(}{currentScope}{,}{typeRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{createEnumTypeFromNodes}{(}{rValue}{,}{{lValue}{.}{getQualifiedName}{()}}{,}{info}{,}{{isLValueRootedInGlobalScope}{(}{lValue}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{isLValueRootedInGlobalScope}{(}{lValue}{)}}{||}{{!}{{type}{.}{isReturnTypeInferred}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{{{parent}{==}{null}}{||}{{!}{{parent}{.}{isFunction}{()}}}}{||}{{n}{==}{{parent}{.}{getFirstChild}{()}}}}{||}{{parent}{==}{{currentScope}{.}{getRootNode}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{this}{.}{cache}}{.}{functionScope}}{!=}{that.cache.functionScope}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{slot}{!=}{null}}{?}{slot}{:}{{syntacticScope}{.}{getSlot}{(}{{var}{.}{getName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getSlot}{(}{{getVarFromSyntacticScope}{(}{name}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ScopedName}}{{var}{=}{{getVarFromSyntacticScope}{(}{symbol}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LinkedFlowScope}}{(}{{new}{{FlatFlowScopeCache}}{(}{scope}{)}}{,}{scope}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{!=}{null}}{)}{{{}{{{{this}{.}{type}}{=}{{type}{.}{resolve}{(}{errorReporter}{,}{scope}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{{TemplateType}}{getObjectIndexKey}{()}{{{}{{{checkNotNull}{(}{iObjectIndexTemplateKey}{)}}{;}}{{return}{iObjectIndexTemplateKey}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TemplateType}}{getObjectElementKey}{()}{{{}{{return}{iObjectElementTemplateKey}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{new}{{InvalidatingTypes.Builder}}{(}{registry}{)}}{.}{writeInvalidationsInto}{(}{{this}{.}{invalidationMap}}{)}}{.}{addTypesInvalidForPropertyRenaming}{()}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getTypeMismatches}{()}}{)}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{NodeUtil}{.}{getEnclosingScopeRoot}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{AbstractScope}{(}{{{Node}}{rootNode}}{)}{{{}{{{{this}{.}{rootNode}}{=}{{checkNotNull}{(}{rootNode}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{t}{.}{inModuleHoistScope}{()}}}{)}{{{}{{{t}{.}{report}{(}{n}{,}{MODULE_USES_GOOG_MODULE_GET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{,}{null}{,}{false}{,}{ResolutionMode.BROWSER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{getBinaryModuleNamespace}{(}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{moduleType}{==}{ModuleType.GOOG_MODULE}}{)}{{{}{{{moduleType}{=}{ModuleType.LEGACY_GOOG_MODULE}}{;}}{}}}{else}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{declaresLegacyNamespace}{,}{DECLARE_LEGACY_NAMESPACE_OUTSIDE_GOOG_MODULE}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{Keywords}{.}{isKeyword}{(}{name.value}{,}{false}{)}}{)}{{{}{{{features}{=}{{features}{.}{with}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{moduleType}{==}{ModuleType.GOOG_MODULE}}{)}{{{}{{{moduleType}{=}{ModuleType.LEGACY_GOOG_MODULE}}{;}}{}}}{else}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{declaresLegacyNamespace}{,}{DECLARE_LEGACY_NAMESPACE_IN_NON_MODULE}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{)}{{{}{{return}{{n}{.}{getFirstChild}{()}}{;}}{}}}{else}{{if}{(}{{NodeUtil}{.}{isExprAssign}{(}{n}{)}}{)}{{{}{{return}{{n}{.}{getFirstFirstChild}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{NodeUtil}{.}{isNameDeclaration}{(}{child}{)}}}{&&}{{!}{{NodeUtil}{.}{isExprAssign}{(}{child}{)}}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{parent}{!=}{null}}{&&}{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}}}
{AST_ROOT_SC2NF{{{Node}}{{node}{=}{{{withType}{(}{{IR}{.}{number}{(}{id}{)}}{,}{numberType}{)}}{.}{useSourceInfoFrom}{(}{sourceNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{sourceNode}{.}{replaceWith}{(}{{createBreakNodeFor}{(}{sourceNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{IR}{.}{block}{(}{{callContextMethodResult}{(}{sourceNode}{,}{STRING_CONSTANT}{,}{{section}{.}{getNumber}{(}{sourceNode}{)}}{)}}{,}{{createBreakNodeFor}{(}{sourceNode}{)}}{)}}{.}{useSourceInfoFrom}{(}{sourceNode}{)}}}
{AST_ROOT_SC2NF{{{}{{{writeGeneratedNode}{(}{n}{)}}{;}}{{{writeGeneratedNode}{(}{{createBreakNodeFor}{(}{n}{)}}{)}}{;}}{{{currentCase.mayFallThrough}{=}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{var}{!=}{null}}{&&}{{{var}{.}{getScope}{()}}{==}{{actual}{()}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{scope}{!=}{{actual}{()}}}{,}{STRING_CONSTANT}{)}}{;}}{{{expectScope}{(}{STRING_CONSTANT}{,}{scope}{,}{scope}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{DeclarationSubject}{(}{{{{AbstractVar}}{<}{?}{,}{?}{>}}{var}}{)}{{{}{{{{this}{.}{var}}{=}{{checkNotNull}{(}{var}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{{AbstractVar}}{<}{?}{,}{?}{>}}{>}}{{declared}{=}{{ImmutableList}{.}{copyOf}{(}{{{actual}{()}}{.}{getAllAccessibleVariables}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{replace}{)}}{)}{{{}{{{replace}{.}{replaceWith}{(}{{NodeUtil}{.}{newExpr}{(}{replacement}{)}}{)}}{;}}{}}}{else}{{{}{{{replace}{.}{replaceWith}{(}{replacement}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{{ref}{.}{getParent}{()}}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{parent}{.}{isFunction}{()}}{||}{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{||}{{parent}{.}{isNew}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{||}{{n}{.}{isFunction}{()}}}{)}}{&&}{{isWhitelistedName}{(}{{{n}{.}{getFirstChild}{()}}{.}{getString}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{returnNode}{.}{isReturn}{()}}{,}{returnNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{!}{{isValidIndex}{(}{{index}{+}{offset}}{)}}}{?}{CHAR_CONS}{:}{{contents}{.}{charAt}{(}{{index}{+}{offset}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{char}{nextChar}{()}{{{}{{if}{(}{{isAtEnd}{()}}{)}{{{}{{return}{CHAR_CONS}{;}}{}}}}{{return}{{contents}{.}{charAt}{(}{{index}{++}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{value}{=}{{{this}{.}{contents}}{.}{substring}{(}{startOffset}{,}{index}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{(}{markChanges}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{collector}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{extractionInfo}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{Callback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{externs}{,}{this}{)}}{;}}{{{addWindowProperties}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{body}{,}{updater}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{symbolMap}{=}{{getCssRenamingMap}{()}}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{Traversal}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{traverser}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRoots}{(}{compiler}{,}{renamer}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{{checkNotNull}{(}{root}{)}}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{scriptRoot}{.}{putBooleanProp}{(}{Node.TRANSPILED}{,}{true}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{callback}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{singleRoot}{.}{putBooleanProp}{(}{Node.TRANSPILED}{,}{true}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{singleRoot}{,}{callback}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{do}{{{}{{{codeChanged}{=}{false}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{EliminationPass}}{(}{cfg}{)}}{)}}{;}}{}}}{while}{(}{codeChanged}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{root}{)}}{;}}{{{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{Es6RewriteModules}{.}{isEs6ModuleRoot}{(}{script}{)}}{)}{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{script}{,}{{new}{{Rewriter}}{(}{compiler}{,}{script}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{block}{,}{{new}{{UnmarkedNodeTranspiler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{YieldFinder}}{{yieldFinder}{=}{{new}{{YieldFinder}}{()}}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{n}{,}{yieldFinder}{)}}{;}}{{return}{{yieldFinder}{.}{getYieldNode}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{wrapper}{,}{{context}{.}{new}{{UnmarkedNodeTranspiler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{originalGeneratorBody}{,}{{new}{{YieldNodeMarker}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{LabelFinder}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{namingCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRoots}{(}{compiler}{,}{pass}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRoots}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{originalRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{externs}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{externs}{,}{findExternsCallback}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{js}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{renameMessages}{)}{{{}{{{RenameMessagesVisitor}}{{renameMessagesVisitor}{=}{{new}{{RenameMessagesVisitor}}{()}}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{renameMessagesVisitor}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{namingCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{originalRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{{function}{.}{getLastChild}{()}}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{{NodeUtil}{.}{getLoopCodeBlock}{(}{loopNode}{)}}{,}{continueStatementUpdater}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{{superSet}{.}{getLastChild}{()}}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{denormalizePass}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{CheckProvidesCallback}}{{callback}{=}{{new}{{CheckProvidesCallback}}{(}{codingConvention}{)}}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{callback}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{cfgNode}{,}{gatherCb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{n}{,}{gatherCb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{cfgNode}{,}{gatherCb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{{t}{.}{getScopeRoot}{()}}{,}{{new}{{GatherCandidates}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{InferConsts}}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{constFinder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{this}{,}{n}{,}{sia}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{{NodeUtil}{.}{getFunctionBody}{(}{constructor}{)}}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{externs}{,}{this}{)}}{;}}{{{compiler}{.}{setExternProperties}{(}{{ImmutableSet}{.}{copyOf}{(}{externProperties}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{tree}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{tree}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{Callback}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{externs}{,}{externsCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{originalRoot}{,}{cb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{ProcessProperties}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{GatherCollapses}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseScopeRoots}{(}{compiler}{,}{root}{,}{changedScopes}{,}{{new}{{EmptyClinitPruner}}{()}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{script}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{isEs6ModuleRoot}{(}{root}{)}}{,}{root}{)}}{;}}{{{clearState}{()}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEs6ModuleRoot}{(}{scriptNode}{)}}{)}{{{}{{{processFile}{(}{scriptNode}{)}}{;}}{}}}{else}{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptNode}{,}{{new}{{RewriteRequiresForEs6Modules}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{callbacks}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{Strip}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{findFunction}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{findParameter}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{ExportTestFunctionsNodes}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{externs}{,}{findExternsCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{callback}{,}{{new}{{RenameCallback}}{(}{aliasName}{,}{renamed}{)}}{)}}{;}}{{{aliasName}{=}{renamed}}{;}}{break;}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{callbackBlock}{,}{{new}{{DefineCallbackReturnCallback}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{TransformAMDModulesCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{script}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{googRoot}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptNode}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{rules}{.}{isEmpty}{()}}}{)}{{{}{{{NodeTraversal}{.}{traverseRoots}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{tree}{,}{cb}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRoots}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{js}{,}{{new}{{Normalize.NormalizeStatements}}{(}{compiler}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{ProcessVars}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseScopeRoots}{(}{compiler}{,}{null}{,}{changedScopeRoots}{,}{{new}{{UseSiteGatheringCallback}}{()}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{process}{(}{externs}{,}{source}{)}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{source}{,}{{new}{{UseSiteGatheringCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{requiresLineNumbers}{=}{false}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{constructorBody}{,}{replaceThisWithSuperThis}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{functionBody}{,}{checkForDefinedReturnValue}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{enclosingFunction}{,}{checkAssigns}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{findExportableNodes}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{parsed.ast}{,}{{new}{{Traverser}}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FindPrimitives}}{{pass}{=}{{new}{{FindPrimitives}}{()}}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{pass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{pass}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{body}{,}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{getterSetterCollector}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{body}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseScopeRoots}{(}{compiler}{,}{null}{,}{changedScopeRoots}{,}{cb}{,}{cb}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{requiresTypes}{=}{false}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mode}{=}{Mode.SINGLE_FILE}}{;}}{{{reset}{()}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reset}{()}}{;}}{{{NodeTraversal}{.}{traverseRoots}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{definitionsGatherer}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseScopeRoots}{(}{compiler}{,}{root}{,}{changedScopeNodes}{,}{{new}{{PeepCallback}}{()}}{,}{false}{)}}{;}}{{if}{(}{{!}{retraverseOnChange}}{)}{{{}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{ReductionGatherer}}{(}{reducers}{,}{reductionMap}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{js}{,}{{new}{{DeadAssignmentsElimination}}{(}{compiler}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{ProcessProperties}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{SourceInformationAnnotator}}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{PolymerPassSuppressBehaviors}}{{suppressBehaviorsCallback}{=}{{new}{{PolymerPassSuppressBehaviors}}{(}{compiler}{)}}}{;}}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{suppressBehaviorsCallback}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{IdentifierToken}}{(}{{getTokenRange}{(}{beginToken}{)}}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{script}{,}{cb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{rootNode}{,}{callback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{{metadata}{.}{getCompiler}{()}}{,}{script}{,}{callback}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertType}{(}{{x}{.}{getType}{()}}{)}}{.}{toStringIsEqualTo}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertType}{(}{{bar}{.}{getType}{()}}{)}}{.}{toStringIsEqualTo}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertType}{(}{{f}{.}{getPropertyType}{(}{STRING_CONSTANT}{)}}{)}}{.}{toStringIsEqualTo}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{item}{)}}{)}{{{}{{{item}{=}{{item}{.}{getFirstChild}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{{parent}{.}{isFunction}{()}}{||}{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{||}{{parent}{.}{isParamList}{()}}{||}{{parent}{.}{isCatch}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{IdentifyGlobalEnumsAndTypedefsAsNonNullable}}{(}{typeRegistry}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{{new}{{IdentifyGlobalEnumsAndTypedefsAsNonNullable}}{(}{typeRegistry}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ReferenceCollectingCallback}}{{refCollector}{=}{{new}{{ReferenceCollectingCallback}}{(}{this}{,}{ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR}{,}{{new}{{Es6SyntacticScopeCreator}}{(}{this}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{{TypeCheckResult}}{parseAndTypeCheckWithScope}{(}{{{String}}{js}}{)}{{{}{{return}{{parseAndTypeCheckWithScope}{(}{STRING_CONSTANT}{,}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Node}}{parseAndTypeCheck}{(}{{{String}}{js}}{)}{{{}{{return}{{parseAndTypeCheck}{(}{STRING_CONSTANT}{,}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testTypesWithExterns}{(}{{DEFAULT_EXTERNS}{+}{STRING_CONSTANT}{+}{externs}}{,}{js}{,}{diag}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypesWithExterns}{(}{externs}{,}{js}{,}{{(}{{String}}{)}{null}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypesWithExterns}{(}{STRING_CONSTANT}{,}{js}{,}{description}{,}{isError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCovariantIThenable3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSymbol2}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSymbol1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch6}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch5}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch4}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch2}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeCovariant2}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeCovariant1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{js1Node}{=}{{parseAndTypeCheck}{(}{DEFAULT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{js1Node}{=}{{parseAndTypeCheck}{(}{DEFAULT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TypeCheckResult}}{{p}{=}{{parseAndTypeCheckWithScope}{(}{DEFAULT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}{{{testAddingMethodsUsingPrototypeIdiomComplexNamespace}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TypeCheckResult}}{{p}{=}{{parseAndTypeCheckWithScope}{(}{DEFAULT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}{{{testAddingMethodsUsingPrototypeIdiomComplexNamespace}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{js1Node}{=}{{parseAndTypeCheck}{(}{DEFAULT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind5}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind4}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind2}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall8}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall7}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall6}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall5}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall2}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall13}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall12}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall10}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall8}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall7}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall5}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue1201b}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testThis14}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess9}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess8}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess7}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess6}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess4}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess2}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess1}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGetelemStruct_noErrorForGettingWellKnownSymbol}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGetelemStruct_noErrorForSettingWellKnownSymbol}{()}{{{}{{{testTypesWithCommonExterns}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf8}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf6}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf5}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf4}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{number}{=}{{createUntypedNumber}{(}{n}{)}}}{;}}{{{number}{.}{setJSType}{(}{{getNativeNumberType}{()}}{)}}{;}}{{return}{number}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{new}{{Node}}{(}{Token.NULL}{)}}}{;}}{{{n}{.}{setJSType}{(}{{getNativeNullType}{()}}{)}}{;}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{child}{.}{inferSlotType}{(}{STRING_CONSTANT}{,}{{getNativeNumberType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithUnionInMaprecord}{()}{{{}{{{testTTL}{(}{{getNativeUnknownType}{()}}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithInvalidMaprecord}{()}{{{}{{{testTTL}{(}{{getNativeUnknownType}{()}}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithInvalidNestedMapunion}{()}{{{}{{{testTTL}{(}{{getNativeUnknownType}{()}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithNestedMapunionInMapFunctionBody}{()}{{{}{{{testTTL}{(}{{getNativeStringType}{()}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithNestedExpressionInBooleanSecondParam}{()}{{{}{{{testTTL}{(}{{getNativeStringType}{()}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithNestedExpressionInBooleanFirstParam}{()}{{{}{{{testTTL}{(}{{getNativeStringType}{()}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{type}{,}{{getNativeObjectType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{parseAndTypeCheck}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertTypeEquals}{(}{{getNativeErrorType}{()}}{,}{{{n}{.}{getFirstFirstChild}{()}}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{getNativeNumberType}{()}}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{getNativeNumberType}{()}}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{STRING_CONSTANT}{,}{{getNativeNumberType}{()}}{,}{{googFooGetprop2ObjectType}{.}{getPropertyType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testName5}{()}{{{}{{{assertTypeEquals}{(}{{getNativeRegexpConstructorType}{()}}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName4}{()}{{{}{{{assertTypeEquals}{(}{{getNativeDateConstructorType}{()}}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName3}{()}{{{}{{{assertTypeEquals}{(}{{getNativeArrayConstructorType}{()}}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName2}{()}{{{}{{{assertTypeEquals}{(}{{getNativeObjectConstructorType}{()}}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName1}{()}{{{}{{{assertTypeEquals}{(}{{getNativeVoidType}{()}}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{getNativeArrayType}{()}}{,}{{a}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{getNativeVoidType}{()}}{,}{{n}{.}{getJSType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{falseNode}{=}{{typeCheck}{(}{{new}{{Node}}{(}{Token.FALSE}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{{getNativeBooleanType}{()}}{,}{{falseNode}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{trueNode}{=}{{typeCheck}{(}{{new}{{Node}}{(}{Token.TRUE}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{{getNativeBooleanType}{()}}{,}{{trueNode}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{typeCheck}{(}{{Node}{.}{newString}{(}{STRING_CONSTANT}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{{getNativeStringType}{()}}{,}{{n}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{typeCheck}{(}{{Node}{.}{newNumber}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{{getNativeNumberType}{()}}{,}{{n}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TypeCheckResult}}{{p}{=}{{parseAndTypeCheckWithScope}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertTypeEquals}{(}{{getNativeNumberType}{()}}{,}{{{p.scope}{.}{getVar}{(}{STRING_CONSTANT}{)}}{.}{getType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSDocInfo}}{{jsDoc}{=}{{{NodeUtil}{.}{isNameDeclaration}{(}{{node}{.}{getParent}{()}}{)}}{?}{{{node}{.}{getParent}{()}}{.}{getJSDocInfo}{()}}{:}{{node}{.}{getJSDocInfo}{()}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES6}{)}}{)}{{{}{{{checks}{.}{add}{(}{es6ExternsCheck}{)}}{;}}{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{checks}{,}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{,}{options}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{factories}{,}{{compiler}{.}{getOptions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{,}{{compiler}{.}{getOptions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{shouldAddTypes}{?}{{contextType}{.}{getPropertyType}{(}{fieldName}{)}}{:}{null}}}
{AST_ROOT_SC2NF{{{String}}{{embedded}{=}{{transpiled}{+}{STRING_CONSTANT}{+}{{ESCAPER}{.}{escape}{(}{sourceMap}{)}}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{{{var}{.}{getParentNode}{()}}{!=}{null}}{&&}{{{var}{.}{getType}{()}}{==}{null}}}{&&}{{NodeUtil}{.}{isNameDeclaration}{(}{{var}{.}{getParentNode}{()}}{)}}}}
{AST_ROOT_SC2NF{{{options}{.}{setPreserveClosurePrimitives}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{ObjectType}}{{regType}{=}{{ObjectType}{.}{cast}{(}{{registry}{.}{getType}{(}{{scope}{.}{getDeclarationScope}{()}}{,}{qualifiedName}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{windowType}{=}{{getTypeInternal}{(}{null}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{registerGlobalType}{(}{{{JSType}}{type}}{)}{{{}{{{register}{(}{null}{,}{type}{,}{{type}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{typesIndexedByProperty}{.}{clear}{()}}{;}}{{{eachRefTypeIndexedByProperty}{.}{clear}{()}}{;}}{{{initializeBuiltInTypes}{()}}{;}}{{{scopedNameTable}{.}{clear}{()}}{;}}{{{initializeRegistry}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{GENERATOR_TYPE}{)}}{,}{{typeRegistry}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{ITERATOR_TYPE}{)}}{,}{{typeRegistry}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{ITERABLE_TYPE}{)}}{,}{{typeRegistry}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{warnImplicitlyNullable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{warnImplicitlyNullable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{registry}{.}{getType}{(}{resolutionScope}{,}{reference}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{factories}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES6}{)}}{)}{{{}{{{checks}{.}{add}{(}{es6ExternsCheck}{)}}{;}}{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isLoopStructure}{(}{scopeRoot}{)}}}
{AST_ROOT_SC2NF{{{actualYieldType}{=}{{{{actualYieldType}{.}{autobox}{()}}{.}{getTemplateTypeMap}{()}}{.}{getResolvedTemplateType}{(}{{typeRegistry}{.}{getIterableTemplate}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{var}{.}{getParentNode}{()}}{!=}{null}}{&&}{{{var}{.}{getType}{()}}{==}{null}}}{&&}{{{var}{.}{getParentNode}{()}}{.}{isVar}{()}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{false}}{;}}{{{useTypes}{=}{true}}{;}}{{{numRepetitions}{=}{NUMBER_CONSTANT}}{;}}{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{warning}{(}{TYPE_MISMATCH_WARNING}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{parse}{(}{{{String}}{js}}{)}{{{}{{return}{{parse}{(}{js}{,}{TypeInferenceMode.DISABLED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{CodePrinter.Builder}}{(}{{parse}{(}{js}{,}{TypeInferenceMode.CHECKED}{)}}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{STRING_CONSTANT}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{disable_testClassMethodUnused2}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassMethodUnused1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassPropUnused1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassWithEmptyMembers}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{StrictModeCheck.DUPLICATE_CLASS_METHODS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticSetterWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticGetterWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticMethodWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testComputedPropInClass}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testArguments6}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnknownVariable4}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{true}}{;}}{{{useTypes}{=}{true}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefinePropertiesQuotesPreventRemoval}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties6}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties5}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_boxedNumberVsZero}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_allType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_unknownType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_while}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_expression}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_booleanResult0}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{true}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{ignoreWarnings}{(}{DiagnosticGroups.NEW_CHECK_TYPES_EXTRA_CHECKS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{testSame}{(}{{externs}{(}{{lines}{(}{MINIMAL_EXTERNS}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{srcs}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{warning}{(}{TypeValidator.TYPE_MISMATCH_WARNING}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{warning}{(}{TOO_MANY_TEMPLATE_PARAMS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{warning}{(}{TOO_MANY_TEMPLATE_PARAMS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{NamedType}}{type}}{:}{{unresolvedNamedTypes}{.}{get}{(}{scope}{)}}{)}{{{}{{{type}{.}{resolve}{(}{reporter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{activeXObject}{.}{resolve}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{namedA}{.}{resolve}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{!=}{null}}{)}{{{}{{{{this}{.}{type}}{=}{{type}{.}{resolve}{(}{errorReporter}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{a}{.}{resolve}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{DeferredSetType}}{deferred}}{:}{deferredSetTypes}{)}{{{}{{{deferred}{.}{resolve}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{factories}{,}{{compiler}{.}{getOptions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{,}{{compiler}{.}{getOptions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES6}{)}}{)}{{{}{{{checks}{.}{add}{(}{es6ExternsCheck}{)}}{;}}{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{checks}{,}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{,}{options}{)}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractClass}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{INSTANTIATE_ABSTRACT_CLASS}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableTypeCheck}{()}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{disableTypeCheck}{()}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{parse}{(}{{{String}}{js}}{)}{{{}{{return}{{parse}{(}{js}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefinePropertiesQuotesPreventRemoval}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties6}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties5}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties1}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6StaticProperty2}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6StaticProperty}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty2}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty1}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{disableTypeCheck}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{{{enableTranspile}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{disableTypeCheck}{()}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassWithEmptyMembers}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{StrictModeCheck.DUPLICATE_CLASS_METHODS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticSetterWithSameName}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticGetterWithSameName}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticMethodWithSameName}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testComputedPropInClass}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testArguments6}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnknownVariable4}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{true}}{;}}{{{useTypes}{=}{true}}{;}}{{{disableTypeCheck}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{disable_testClassMethodUnused2}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassMethodUnused1}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassPropUnused1}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{disableTypeCheck}{()}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableTypeCheck}{()}}{;}}{{{String}}{{source}{=}{STRING_CONSTANT}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableTypeCheck}{()}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableTypeCheck}{()}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableTypeCheck}{()}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{disableTypeCheck}{()}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{CodePrinter.Builder}}{(}{{parse}{(}{js}{,}{true}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_boxedNumberVsZero}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_allType}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_unknownType}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_while}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_expression}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_booleanResult0}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTranspile}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isTypecheckingEnabled}{()}{{{}{{return}{{this}{.}{checkTypes}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{getTypeRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ignoreWarnings}{(}{TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testTypeMismatch}{()}{{{}{{{ignoreWarnings}{(}{TypeValidator.TYPE_MISMATCH_WARNING}{)}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DiagnosticGroup}}{{ignored}{=}{{new}{{DiagnosticGroup}}{(}{TypeCheck.INEXISTENT_PROPERTY}{,}{TypeValidator.TYPE_MISMATCH_WARNING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{validator}{.}{expectCanAssignTo}{(}{t}{,}{loopVarNode}{,}{actualType}{,}{declaredType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{setKey}{==}{null}}{||}{{setKey}{.}{isSetterDef}{()}}}{,}{setKey}{)}}{;}}}
{AST_ROOT_SC2NF{{{hoistNode}{(}{varStatement}{)}}{;}}}
{AST_ROOT_SC2NF{{{hoistNode}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isSomeCompileTimeConstStringValue}{(}{ast}{)}}{)}{{{}{{{paramNodeMatches}{.}{set}{(}{paramIndex}{,}{ast}{)}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{NodeUtil}{.}{isSomeCompileTimeConstStringValue}{(}{ast}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isSafeValue}{(}{{traversal}{.}{getScope}{()}}{,}{argument}{)}}}{)}{{{}{{{compiler}{.}{report}{(}{{traversal}{.}{makeError}{(}{argument}{,}{CONST_NOT_STRING_LITERAL_ERROR}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{prop}{!=}{null}}{)}{{{}{{if}{(}{{NodeUtil}{.}{isSomeCompileTimeConstStringValue}{(}{prop}{)}}{)}{{{}{continue;}{}}}}{{return}{violation}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isLhsOfAssign}{(}{propAccess}{)}}{&&}{{(}{{{NodeUtil}{.}{isLiteralValue}{(}{{propAccess}{.}{getNext}{()}}{,}{false}{)}}{||}{{NodeUtil}{.}{isSomeCompileTimeConstStringValue}{(}{{propAccess}{.}{getNext}{()}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{String}}{{lastPart}{=}{{typeString}{.}{substring}{(}{{{typeString}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{name}{.}{indexOf}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{setKey}{.}{isSetterDef}{()}}{,}{setKey}{)}}{;}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{public}{void}{setSourceMapLocationMappings}{(}{{{{List}}{<}{{?}{extends}{{SourceMap.LocationMapping}}}{>}}{sourceMapLocationMappings}}{)}{{{}{{{{this}{.}{sourceMapLocationMappings}}{=}{sourceMapLocationMappings}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{locationMappings}{.}{add}{(}{{new}{{SourceMap.PrefixLocationMapping}}{(}{{mapping}{.}{getKey}{()}}{,}{{mapping}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{extends}{{LocationMapping}}}{>}}{sourceMapLocationMappings}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{FOR_OF}{:}}{{{visitForOf}{(}{n}{,}{parent}{)}}{;}}{break;}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{actual}{=}{{{{{{new}{{CodePrinter.Builder}}{(}{script}{)}}{.}{setCompilerOptions}{(}{options}{)}}{.}{setTypeRegistry}{(}{{compiler}{.}{getTypeRegistry}{()}}{)}}{.}{build}{()}}{.}{trim}{()}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{fnNode}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isPrototypeObject}{()}{{{}{{return}{{isFunctionPrototypeType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{srcObj}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{attrsType}{=}{{attrs}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{srcObj}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ObjectType}}{{targetType}{=}{{{target}{.}{getJSType}{()}}{.}{toMaybeObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{typeName}{=}{{{{n}{.}{getFirstChild}{()}}{.}{getJSType}{()}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{{n}{.}{getJSType}{()}}{!=}{null}}{&&}{{isKnown}{(}{n}{)}}}{&&}{{invalidDeref}{(}{n}{)}}}{&&}{{!}{{isWhitelistedType}{(}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{thrown}{=}{{{n}{.}{getFirstChild}{()}}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{compiler}{,}{requirement}{)}{;}}{{{errorObjType}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TemplateAstMatcher}}{{astMatcher}{=}{{new}{{TemplateAstMatcher}}{(}{{compiler}{.}{getTypeRegistry}{()}}{,}{templateRoot}{,}{typeMatchingStrategy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionType}}{restrictedCallType}}}
{AST_ROOT_SC2NF{{{FunctionType}}{restrictedCallType}}}
{AST_ROOT_SC2NF{{{FunctionType}}{functionType}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isAssertionCall}{(}{{n}{.}{getParent}{()}}{)}}{||}{{{n}{.}{getJSTypeBeforeCast}{()}}{!=}{null}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}{{return}{{(}{{{type}{==}{null}}{||}{{type}{.}{isSomeUnknownType}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}{{return}{{(}{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}{{return}{{{type}{!=}{null}}{&&}{{type}{.}{isTop}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{nativeObjectType}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getNativeType}{(}{JSTypeNative.OBJECT_TYPE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{setJSType}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{FunctionType}}{getterType}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{typeRegistry}}}
{AST_ROOT_SC2NF{{public}{TypeSubject}{(}{{{FailureMetadata}}{failureMetadata}}{,}{{{JSType}}{type}}{)}{{{}{{super}{(}{failureMetadata}{,}{type}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{FunctionType}}{getterType}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTypeRegistry}{(}{{getTypeRegistry}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{?}{extends}{{JSType}}}{>}}{scope}}}
{AST_ROOT_SC2NF{{private}{{String}}{formatTypeVar}{(}{{{JSType}}{var}}{)}{{{}{{return}{{var}{.}{toAnnotationString}{(}{Nullability.IMPLICIT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{JSType}}{{typeI}{=}{{getPropLhs}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getJSType}{()}}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{n}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Builder}{(}{{{JSTypeRegistry}}{registry}}{)}{{{}{{{{this}{.}{registry}}{=}{registry}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{objectType}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{ObjectType}}{referenceType}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{name}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{typeRegistry}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getReturnType}{()}{{{}{{return}{call.returnType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{{{{new}{{InvalidatingTypes.Builder}}{(}{{compiler}{.}{getTypeRegistry}{()}}{)}}{.}{addTypesInvalidForPropertyRenaming}{()}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getTypeMismatches}{()}}{)}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getImplicitInterfaceUses}{()}}{)}}{.}{build}{()}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{registry}}}
{AST_ROOT_SC2NF{{public}{void}{applySingletonGetter}{(}{{{NominalTypeBuilder}}{classType}}{,}{{{FunctionType}}{getterType}}{)}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{assign}{=}{{{withType}{(}{{IR}{.}{assign}{(}{copiedVarName}{,}{{varName}{.}{removeFirstChild}{()}}{)}}{,}{{varName}{.}{getJSType}{()}}{)}}{.}{useSourceInfoFrom}{(}{varName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newThis}{=}{{withType}{(}{{context}{.}{getScopedName}{(}{GENERATOR_THIS}{)}}{,}{{n}{.}{getJSType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{IR}{.}{returnNode}{(}{{withType}{(}{{IR}{.}{call}{(}{createGenerator}{,}{{withType}{(}{{genFuncName}{.}{cloneNode}{()}}{,}{{generatorFunction}{.}{getJSType}{()}}{)}}{,}{program}{)}}{,}{originalGenReturnType}{)}}{)}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{typeRegistry}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{FunctionType}}{getterType}}}
{AST_ROOT_SC2NF{{{Node}}{{stringKey}{=}{{withType}{(}{{IR}{.}{stringKey}{(}{name}{,}{{{n}{.}{getFirstChild}{()}}{.}{detach}{()}}{)}}{,}{{n}{.}{getJSType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableMap}}{<}{{String}}{,}{{JSType}}{>}}{typeVars}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}{{return}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isFunctionType}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{jsType}}}
{AST_ROOT_SC2NF{{{JSType}}{jsType}}}
{AST_ROOT_SC2NF{{{CodePrinter.Builder}}{{builder}{=}{{{{{new}{{CodePrinter.Builder}}{(}{externsRoot}{)}}{.}{setPrettyPrint}{(}{true}{)}}{.}{setOutputTypes}{(}{true}{)}}{.}{setTypeRegistry}{(}{{compiler}{.}{getTypeRegistry}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lit}{.}{setJSType}{(}{{exportedObjectLit}{.}{getJSType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TemplateAstMatcher}}{{matcher}{=}{{new}{{TemplateAstMatcher}}{(}{{lastCompiler}{.}{getTypeRegistry}{()}}{,}{{templateRoot}{.}{getFirstChild}{()}}{,}{typeMatchingStrategy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setJSType}{(}{{call}{.}{getJSType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{expr}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{mathDotPowCall}{=}{{{withType}{(}{{IR}{.}{call}{(}{{{mathPow}{.}{get}{()}}{.}{cloneTree}{()}}{,}{left}{,}{right}{)}}{,}{{n}{.}{getJSType}{()}}{)}}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{lastCompiler}{.}{getTypeRegistry}{()}}}
{AST_ROOT_SC2NF{{lastCompiler}{.}{getTypeRegistry}{()}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{{{{new}{{InvalidatingTypes.Builder}}{(}{{compiler}{.}{getTypeRegistry}{()}}{)}}{.}{disallowGlobalThis}{()}}{.}{addTypesInvalidForPropertyRenaming}{()}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getTypeMismatches}{()}}{)}}{.}{build}{()}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{{receiverType}{=}{{determineReceiverType}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setJSType}{(}{{getNativeStringType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{newName}{.}{setJSType}{(}{{child}{.}{getJSType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{JSType}}{getType}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Builder}}{setTypeRegistry}{(}{{{JSTypeRegistry}}{registry}}{)}{{{}{{{{this}{.}{registry}}{=}{registry}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{prototypeOrInstance}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{declarePrototypeProperty}{(}{{{String}}{name}}{,}{{{JSType}}{type}}{,}{{{Node}}{defSite}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{declareInstanceProperty}{(}{{{String}}{name}}{,}{{{JSType}}{type}}{,}{{{Node}}{defSite}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{declareConstructorProperty}{(}{{{String}}{name}}{,}{{{JSType}}{type}}{,}{{{Node}}{defSite}}{)}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{getType}{(}{typeObj}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{getType}{(}{obj}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{objlitType}{=}{{getType}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{getType}{(}{{n}{.}{getFirstChild}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{n}{.}{isGetProp}{()}}{&&}{{{{n}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{&&}{{{{n}{.}{getFirstChild}{()}}{.}{getJSType}{()}}{.}{isStructuralInterface}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{recvType}{=}{{getType}{(}{recv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{ObjectType}}{objectType}}}
{AST_ROOT_SC2NF{{{ObjectType}}{objectType}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeRegistry}}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{n}}{:}{nodeList}{)}{{{}{{{n.jstype}{=}{{(}{{JSType}}{)}{{in}{.}{readObject}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{n}}{:}{nodeList}{)}{{{}{{{out}{.}{writeObject}{(}{n.jstype}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{dst}{.}{setJSType}{(}{{this}{.}{jstype}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{public}{final}{{JSType}}{getJSTypeBeforeCast}{()}{{{}{{return}{{(}{{JSType}}{)}{{getProp}{(}{TYPE_BEFORE_CAST}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{FunctionType}}{getOwnerFunction}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{firstArg}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{JSType}}{typeI}}}
{AST_ROOT_SC2NF{{{n}{.}{getJSType}{()}}{==}{null}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LocationMapping}}{>}}{sourceMapLocationMappings}}}
{AST_ROOT_SC2NF{{{}{{{locationMappings}{.}{add}{(}{{new}{{SourceMap.LocationMapping}}{(}{{mapping}{.}{getKey}{()}}{,}{{mapping}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{public}{void}{setSourceMapLocationMappings}{(}{{{{List}}{<}{{SourceMap.LocationMapping}}{>}}{sourceMapLocationMappings}}{)}{{{}{{{{this}{.}{sourceMapLocationMappings}}{=}{sourceMapLocationMappings}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{c}{.}{getString}{()}}{.}{equals}{(}{WINDOW_NAME}{)}}{)}{{{}{{{windowInExterns}{=}{true}}{;}}{continue;}{}}}}}
{AST_ROOT_SC2NF{{abstract}{boolean}{hasTypeCheckingRun}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{.}{setTypeCheckingHasRun}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{compiler}{.}{hasTypeCheckingRun}{()}}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setTypeCheckingHasRun}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{compiler}{.}{hasTypeCheckingRun}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{typeCheckingHasRun}{=}{compilerState.typeCheckingHasRun}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeCheckingHasRun}}{=}{compiler.typeCheckingHasRun}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setTypeCheckingHasRun}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{compiler}{.}{hasTypeCheckingRun}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{compiler}{.}{hasTypeCheckingRun}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{c}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{windowInExterns}{=}{true}}{;}}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.MISSING_OVERRIDE}{,}{CheckLevel.WARNING}{)}}{;}}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_CHECK_TYPES}{,}{CheckLevel.WARNING}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{prevUsedRenameMap}{!=}{null}}{)}{{{}{{{reusePreviouslyUsedVariableMap}{(}{varsByFrequency}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{validator}{.}{expectAutoboxesToIterable}{(}{t}{,}{n}{,}{actualYieldType}{,}{STRING_CONSTANT}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{c}{.}{getString}{()}}{.}{equals}{(}{WINDOW_NAME}{)}}{)}{{{}{{{windowInExterns}{=}{true}}{;}}{continue;}{}}}}}
{AST_ROOT_SC2NF{{public}{{ResolutionMode}}{getModuleResolutionMode}{()}{{{}{{return}{{this}{.}{moduleResolutionMode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{objectType}}}
{AST_ROOT_SC2NF{{{JSType}}{objectType}}}
{AST_ROOT_SC2NF{{if}{(}{{iterableType}{!=}{null}}{)}{{{}{{{typeParam}{=}{{iterableType}{.}{getInstantiatedTypeArgument}{(}{{registry}{.}{getNativeType}{(}{JSTypeNative.ITERABLE_TYPE}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{newType}{=}{{objType}{.}{getInstantiatedTypeArgument}{(}{{getNativeType}{(}{ITERABLE_TYPE}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{defineSlot}{(}{astParameter}{,}{paramType}{,}{inferred}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{defineSlot}{(}{fnNameNode}{,}{{fnNode}{.}{getJSType}{()}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{candidate}{.}{isGetProp}{()}}{)}{{{}{{{defineSlot}{(}{candidate}{,}{{getNativeType}{(}{NO_TYPE}{)}}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{defineSlot}{(}{n}{,}{valueType}{,}{inferred}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isFunctionDeclaration}{(}{n}{)}}{)}{{{}{{{defineSlot}{(}{{n}{.}{getFirstChild}{()}}{,}{functionType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{boolean}{{inferred}{=}{{keyType}{==}{null}}}{;}}{{{defineSlot}{(}{keyNode}{,}{qualifiedName}{,}{keyType}{,}{inferred}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{!}{{type}{.}{matchesNumberContext}{()}}}{&&}{{!}{{type}{.}{matchesStringContext}{()}}}{&&}{{!}{{type}{.}{matchesSymbolContext}{()}}}}}
{AST_ROOT_SC2NF{{{FunctionType}}{{makeIteratorType}{=}{{registry}{.}{createFunctionType}{(}{iteratorType}{,}{{paramBuilder}{.}{build}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{isSubtype}{(}{that}{,}{{ImplCache}{.}{createWithoutStructuralTyping}{()}}{,}{SubtypingMode.NORMAL}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{extends}{{LocationMapping}}}{>}}{sourceMapLocationMappings}}}
{AST_ROOT_SC2NF{{public}{void}{setSourceMapLocationMappings}{(}{{{{List}}{<}{{?}{extends}{{SourceMap.LocationMapping}}}{>}}{sourceMapLocationMappings}}{)}{{{}{{{{this}{.}{sourceMapLocationMappings}}{=}{sourceMapLocationMappings}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{}{{{locationMappings}{.}{add}{(}{{new}{{SourceMap.PrefixLocationMapping}}{(}{{mapping}{.}{getKey}{()}}{,}{{mapping}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{visitImport}{(}{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{EvalMode}}{{newMode}{=}{{useEval}{?}{EvalMode.EVAL}{:}{EvalMode.NORMAL}}}{;}}{{return}{{new}{{ClosureBundler}}{(}{transpiler}{,}{es6ModuleTranspiler}{,}{newMode}{,}{sourceUrl}{,}{path}{,}{sourceMapCache}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{tightenTypeAfterDereference}{(}{{n}{.}{getFirstChild}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{dereferencePointer}{(}{{n}{.}{getFirstChild}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{externs}{,}{js}{,}{description}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{js}{,}{diagnosticType}{,}{isError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{js}{,}{description}{,}{isError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_yieldAll_string}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_yieldAll1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_return2}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_noDeclaredReturnType3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_returnsIterator2}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_returnsIterable2}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator3}{()}{{{}{{{testTypesWithCommonExterns}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_StringObject2}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_StringObject1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_string1}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_array3}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_wrongLoopVarType6a}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_wrongLoopVarType5}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_wrongLoopVarType4a}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayLitSpread}{()}{{{}{{{testTypesWithCommonExterns}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{getTypeOfThis}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sym}{instanceof}{{StaticTypedSlot}}}{)}{{{}{{return}{{{(}{{(}{{StaticTypedSlot}}{)}{sym}}{)}}{.}{isTypeInferred}{()}}{;}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{instanceof}{{StaticTypedScope}}}{)}{{{}{{return}{{{(}{{(}{{StaticTypedScope}}{)}{s}}{)}}{.}{getTypeOfThis}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sym}{instanceof}{{StaticTypedSlot}}}{)}{{{}{{return}{{{(}{{(}{{StaticTypedSlot}}{)}{sym}}{)}}{.}{getType}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{typeEnv}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{getDeclarationScope}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{createChildFlowScope}{(}{{{StaticTypedScope}}{scope}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{JSType}}{getTypeOfThis}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{StaticTypedSlot}}{slot}}}
{AST_ROOT_SC2NF{{{StaticTypedScope}}{scope}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{StaticTypedScope}}{getScope}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isAssignAdd}{()}}{)}{{{}{{{updateScopeForAssignment}{(}{scope}{,}{left}{,}{leftType}{,}{type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{visitArgumentList}{(}{t}{,}{n}{,}{functionType}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitArgumentList}{(}{t}{,}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{while}{(}{{{current.parent}{!=}{null}}{&&}{{current.scopes}{==}{current.parent.scopes}}}{)}{{{}{{{current}{=}{current.parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isInvocation}{(}{n}{)}}{||}{{n}{.}{isYield}{()}}}}
{AST_ROOT_SC2NF{{return}{{tightenTypeAfterDereference}{(}{{n}{.}{getFirstChild}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{updateTypeOfArguments}{(}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{updateTypeOfParameters}{(}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6InjectRuntimeLibraries}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{updateTypeOfArguments}{(}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{options.checksOnly}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{decl}{.}{isAliasDefinition}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isAssignAdd}{()}}{)}{{{}{{{scope}{=}{{updateScopeForAssignment}{(}{scope}{,}{left}{,}{leftType}{,}{type}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{flowScope}{=}{{flowScope}{.}{inferSlotType}{(}{STRING_CONSTANT}{,}{type}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FlowScope}}{[]}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{child}{=}{{child}{.}{inferSlotType}{(}{STRING_CONSTANT}{,}{{getNativeNumberType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{==}{that}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{output}{=}{{input}{.}{withSyntacticScope}{(}{{scopeCreator}{.}{createScope}{(}{root}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{informed}{=}{blindScope}}{;}}}
{AST_ROOT_SC2NF{{{assign}{.}{useSourceInfoIfMissingFromForTree}{(}{method}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{scope}{=}{{traverseChildren}{(}{name}{,}{scope}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parentChunkCanSeeSymbolsDeclaredInChildren}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{moduleNameRegexList}{=}{options.chunksToPrintAfterEachPassRegexList}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleMethodMotion}}{(}{compiler}{,}{{compiler}{.}{getCrossModuleIdGenerator}{()}}{,}{options.removeUnusedPrototypePropertiesInExterns}{,}{options.crossChunkCodeMotionNoStubMethods}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleCodeMotion}}{(}{compiler}{,}{{compiler}{.}{getModuleGraph}{()}}{,}{options.parentChunkCanSeeSymbolsDeclaredInChildren}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RescopeGlobalSymbols}}{(}{compiler}{,}{options.renamePrefixNamespace}{,}{options.renamePrefixNamespaceAssumeCrossChunkNames}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{REGEXP_TYPE}{.}{canBeCalled}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{obj}{!=}{null}}{&&}{{obj}{.}{isFunctionPrototypeType}{()}}}}
{AST_ROOT_SC2NF{{return}{{subtype}{.}{isEmptyType}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{isVoidable}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{isNullable}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{isNoObjectType}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{type}{.}{isEnumElementType}{()}}}
{AST_ROOT_SC2NF{{type}{.}{isFunctionPrototypeType}{()}}}
{AST_ROOT_SC2NF{{{!}{{callClassType}{.}{isEmptyType}{()}}}{&&}{{!}{{callClassType}{.}{isSomeUnknownType}{()}}}}}
{AST_ROOT_SC2NF{{{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{||}{{type}{.}{isUnresolved}{()}}}{||}{{type}{.}{isAllType}{()}}}}
{AST_ROOT_SC2NF{{return}{{{!}{{type}{.}{isAllType}{()}}}{&&}{{(}{{{type}{.}{isNullable}{()}}{||}{{type}{.}{isVoidable}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{targetType}{.}{isUnknownType}{()}}{||}{{targetType}{.}{isUnresolved}{()}}{||}{{targetType}{.}{isAllType}{()}}{||}{{targetType}{.}{isEquivalentTo}{(}{{registry}{.}{getNativeType}{(}{JSTypeNative.OBJECT_TYPE}{)}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{{n}{.}{getJSType}{()}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}{{return}{{type}{.}{isEmptyType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}{{return}{{{type}{!=}{null}}{&&}{{type}{.}{isAllType}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{ft}{!=}{null}}{)}{{{}{{{functionNode}{.}{setJSType}{(}{{convertMethodToFunction}{(}{ft}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{body}{.}{isEmptyType}{()}}{||}{{body}{.}{isEquivalentTo}{(}{{getObjectType}{()}}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{result}{.}{isEmptyType}{()}}{?}{{getUnknownType}{()}}{:}{result}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{.}{isEnumElementType}{()}}{)}{{{}{{return}{{type}{.}{getEnumeratedTypeOfEnumElement}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{type}{!=}{null}}{&&}{{containsArray}{(}{type}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{objType}{.}{isFunctionPrototypeType}{()}}{)}{{{}{{{constructor}{=}{{objType}{.}{getOwnerFunction}{()}}}{;}}{}}}{else}{{{}{{{constructor}{=}{{objType}{.}{getConstructor}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{type}{.}{isEnumElementType}{()}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{.}{isEnumType}{()}}{||}{{type}{.}{isBoxableScalar}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{.}{isEnumElementType}{()}}{)}{{{}{{return}{{getTypesToSkipForType}{(}{{type}{.}{getEnumeratedTypeOfEnumElement}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{t}{.}{isObjectType}{()}}}{||}{{t}{.}{isAllType}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{type}{.}{isAllType}{()}}{||}{{type}{.}{isUnknownType}{()}}}}
{AST_ROOT_SC2NF{{{type}{.}{isAllType}{()}}{||}{{type}{.}{isUnknownType}{()}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isAbstract}{()}{{{}{{return}{isAbstract}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{shouldTreatThisTypesAsCovariant}{(}{other}{,}{implicitImplCache}{)}}{&&}{{{this}{.}{call}}{.}{isSubtype}{(}{other.call}{,}{implicitImplCache}{,}{subtypingMode}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{final}{{ObjectType}}{getPrototypeProperty}{()}{{{}{{return}{{getPrototype}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isReturnTypeInferred}{()}{{{}{{return}{call.returnTypeInferred}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{{JSType}}{getReturnType}{()}{{{}{{return}{call.returnType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{canBeCalled}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{void}{setDict}{()}{{{}{{{propAccess}{=}{PropAccess.DICT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{void}{setStruct}{()}{{{}{{{propAccess}{=}{PropAccess.STRUCT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{restricted}{.}{isEmptyType}{()}}{?}{type}{:}{restricted}}{;}}}
{AST_ROOT_SC2NF{{{{retType}{!=}{null}}{&&}{{!}{{retType}{.}{isEmptyType}{()}}}}{&&}{{!}{{funType}{.}{isInterface}{()}}}}}
{AST_ROOT_SC2NF{{final}{{ObjectType}}{getReferencedObjTypeInternal}{()}{{{}{{return}{referencedObjType}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{JSType}}{getReferencedTypeInternal}{()}{{{}{{return}{referencedType}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{receiverType}{.}{meetWith}{(}{type}{)}}{.}{isEmptyType}{()}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{matchesStringContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{matchesSymbolContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{matchesObjectContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{matchesNumberContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{boolean}{isConstructor}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{||}{{type}{.}{isAllType}{()}}}{)}{{{}{{return}{{allowLooseMatches}{?}{MatchResult.LOOSE_MATCH}{:}{MatchResult.NO_MATCH}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{==}{null}}{?}{null}{:}{{type}{.}{dereference}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{propdef}{.}{setJSType}{(}{stringType}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitImport}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isApplied}{(}{{{CompilerOptions}}{options}}{)}{{{}{{return}{{options}{.}{shouldRunCrossChunkMethodMotion}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isApplied}{(}{{{CompilerOptions}}{options}}{)}{{{}{{return}{{options}{.}{shouldRunCrossChunkCodeMotion}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ensureTyped}{(}{name}{,}{valueType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{n}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{iterableNode}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{options.checksOnly}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{recordUnresolvedTypes}{)}{{{}{{{unresolvedNamedTypes}{.}{add}{(}{namedType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{topScope}{==}{null}}{)}{{{}{{{regenerateGlobalTypedScope}{(}{compiler}{,}{{root}{.}{getParent}{()}}{)}}{;}}{}}}{else}{{{}{{{{compiler}{.}{getTypeRegistry}{()}}{.}{resolveTypes}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{whitespaceOnlyPasses}{()}}{;}}{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{)}}{)}{{{}{{{transpileAndDontCheck}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{features}{=}{{NodeUtil}{.}{getFeatureSetOfScript}{(}{script}{)}}}{;}}}
{AST_ROOT_SC2NF{{{body}{.}{isBlock}{()}}{&&}{{!}{{body}{.}{hasChildren}{()}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{n}{.}{isBlock}{()}}{&&}{{n}{.}{isSyntheticBlock}{()}}}{)}}{||}{{n}{.}{isScript}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{block}{.}{isBlock}{()}}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{stmt}{.}{isEmpty}{()}}{||}{{(}{{{stmt}{.}{isBlock}{()}}{&&}{{!}{{stmt}{.}{hasChildren}{()}}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{expr}{.}{isName}{()}}{)}}{;}}{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.CATCH}{,}{expr}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{finallyBody}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{tryBody}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}{{{checkState}{(}{{mayBeExpression}{(}{cond}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.WHILE}{,}{cond}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}{{{checkState}{(}{{mayBeExpression}{(}{cond}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DO}{,}{body}{,}{cond}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{mayBeExpression}{(}{cond}{)}}{)}}{;}}{{{checkState}{(}{{then}{.}{isBlock}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.IF}{,}{cond}{,}{then}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{body}{.}{isBlock}{()}}{||}{{mayBeExpression}{(}{body}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isExprResult}{()}}{||}{{n}{.}{isBlock}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{favorsCommaOverSemiColon}}{&&}{{!}{{block}{.}{isBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{n}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{blockNode}{.}{isBlock}{()}}{)}}{;}}{{if}{(}{{blockNode}{.}{hasChildren}{()}}{)}{{{}{{{markAllPropsRead}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isBlock}{()}}{)}{{{}{{{visitBlock}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{{!}{{{target}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{target}{.}{getParent}{()}}{.}{isBlock}{()}}}{&&}{{!}{{{target}{.}{getParent}{()}}{.}{isModuleBody}{()}}}}}
{AST_ROOT_SC2NF{{boolean}{{isVar}{=}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{&&}{{{parent}{.}{getParent}{()}}{.}{isBlock}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{isGoogScopeFunctionBody}{(}{enclosingFunctionBody}{)}}{&&}{{scopeRoot}{.}{isBlock}{()}}{&&}{{!}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}{||}{{!}{{isGoogModuleCall}{(}{{n}{.}{getFirstChild}{()}}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isBlock}{()}}{)}}{;}}{{return}{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{addingRoot}{.}{isBlock}{()}}{||}{{addingRoot}{.}{isModuleBody}{()}}{||}{{addingRoot}{.}{isScript}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{n}{.}{isBlock}{()}}{&&}{{{n}{.}{getParent}{()}}{!=}{null}}}{&&}{{{n}{.}{getParent}{()}}{.}{isFunction}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isRoot}{()}}{||}{{n}{.}{isScript}{()}}{||}{{n}{.}{isBlock}{()}}{||}{{n}{.}{isModuleBody}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{block}{.}{isBlock}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isControlStructureCodeBlock}{(}{n}{,}{c}{)}}{&&}{{!}{{c}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{{body}{.}{getNext}{()}}{==}{null}}{&&}{{body}{.}{isBlock}{()}}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isFunction}{()}}}{||}{{!}{{{n}{.}{getLastChild}{()}}{.}{isBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{subtree}{.}{isScript}{()}}}{&&}{{!}{{subtree}{.}{isBlock}{()}}}}{)}{{{}{{return}{subtree}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{statement}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{block}{.}{isBlock}{()}}{&&}{{{block}{.}{getParent}{()}}{.}{isTry}{()}}{&&}{{{{block}{.}{getParent}{()}}{.}{getFirstChild}{()}}{==}{block}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{{parent}{.}{getParent}{()}}{!=}{null}}{&&}{{{parent}{.}{getParent}{()}}{.}{isArrowFunction}{()}}}{&&}{{!}{{parent}{.}{isBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{getRootNode}{()}}{.}{isBlock}{()}}{&&}{{{getRootNode}{()}}{.}{hasOneChild}{()}}{&&}{{{{getRootNode}{()}}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{{node}{.}{children}{()}}{)}{{{}{{if}{(}{{child}{.}{isBlock}{()}}{)}{{{}{{{blocks}{.}{add}{(}{child}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isBlock}{()}}{&&}{{!}{{loneBlocks}{.}{isEmpty}{()}}}{&&}{{{loneBlocks}{.}{peek}{()}}{==}{n}}}}
{AST_ROOT_SC2NF{{(}{{{parent}{.}{isScript}{()}}{||}{{(}{{{parent}{.}{isBlock}{()}}{&&}{{!}{{parent}{.}{isSyntheticBlock}{()}}}{&&}{{!}{{parent}{.}{isAddedBlock}{()}}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{scopeRoot}{.}{isBlock}{()}}{&&}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}}
{AST_ROOT_SC2NF{{{!}{{setFunction}{.}{hasChildren}{()}}}{||}{{!}{{{setFunction}{.}{getLastChild}{()}}{.}{isBlock}{()}}}{||}{{!}{{{setFunction}{.}{getSecondChild}{()}}{.}{isParamList}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{getFunction}{.}{hasChildren}{()}}}{||}{{!}{{{getFunction}{.}{getLastChild}{()}}{.}{isBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{;}{{{!}{{currentParent}{.}{isScript}{()}}}{&&}{{!}{{currentParent}{.}{isBlock}{()}}}}{;}{{current}{=}{currentParent}}{,}{{currentParent}{=}{{currentParent}{.}{getParent}{()}}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{{{n}{.}{isFunction}{()}}{&&}{{parent}{!=}{null}}}{&&}{{parent}{.}{isBlock}{()}}}{&&}{{!}{{{parent}{.}{getParent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{{!}{{{n}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{n}{.}{getParent}{()}}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{body}{.}{isBlock}{()}}{)}{{{}{{{validateBlock}{(}{body}{)}}{;}}{}}}{else}{{{}{{{validateExpression}{(}{body}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isBlock}{()}}{&&}{{n}{.}{hasChildren}{()}}{&&}{{isReturnTypeNullable}{(}{{n}{.}{getParent}{()}}{)}}{&&}{{!}{{hasSingleThrow}{(}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isEmpty}{()}}{||}{{(}{{{n}{.}{isBlock}{()}}{&&}{{!}{{n}{.}{hasChildren}{()}}}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{next}{!=}{null}}{&&}{{next}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{node}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{node}{.}{isFunction}{()}}{&&}{{!}{{{NodeUtil}{.}{getFunctionBody}{(}{node}{)}}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{!}{{originalBody}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{block}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isBlock}{()}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{jumpBlock}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{catchBody}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{context}{.}{transpileUnmarkedBlock}{(}{{{{n}{.}{isBlock}{()}}{||}{{n}{.}{isAddedBlock}{()}}}{?}{n}{:}{{IR}{.}{block}{(}{n}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{newGeneratorHoistBlock}{.}{isBlock}{()}}{,}{newGeneratorHoistBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{node}{.}{getParent}{()}}{.}{isExprResult}{()}}{&&}{{{node}{.}{getGrandparent}{()}}{.}{isBlock}{()}}{&&}{{isClinitMethod}{(}{{{node}{.}{getGrandparent}{()}}{.}{getParent}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{!}{{(}{{{parent}{.}{isScript}{()}}{||}{{(}{{{{grandparent}{!=}{null}}{&&}{{grandparent}{.}{isFunction}{()}}}{&&}{{parent}{.}{isBlock}{()}}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{!}{{body}{.}{isBlock}{()}}}{||}{{body}{.}{hasChildren}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{body}{.}{isBlock}{()}}}{||}{{!}{{body}{.}{hasOneChild}{()}}}{||}{{!}{{{body}{.}{getFirstChild}{()}}{.}{isReturn}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{!}{isArrow}}{&&}{{!}{isSignature}}{&&}{{!}{{bodyNode}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{!}{{irNode}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{n}{.}{isFunction}{()}}{&&}{{{n}{.}{getParent}{()}}{.}{isBlock}{()}}{&&}{{!}{{{n}{.}{getGrandparent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{ifBlock}{.}{isBlock}{()}}{,}{ifBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{innerBlock}{.}{isBlock}{()}}{,}{innerBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{functionBody}{=}{{NodeUtil}{.}{getFunctionBody}{(}{n}{)}}}{;}}{{if}{(}{{!}{{functionBody}{.}{isBlock}{()}}}{)}{{{}{return;}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{node}{.}{isBlock}{()}}{)}{{{}{{{node}{.}{setToken}{(}{Token.SCRIPT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{deleteWhitespaceBefore}{&&}{{parent}{!=}{null}}}{&&}{{(}{{{parent}{.}{isScript}{()}}{||}{{parent}{.}{isBlock}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parentNode}{.}{isBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{parent}{!=}{null}}{&&}{{(}{{{parent}{.}{isBlock}{()}}{||}{{parent}{.}{isScript}{()}}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isScript}{()}}}{&&}{{!}{{n}{.}{isBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{!}{{body}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{!}{{body}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{s}{.}{isFunctionScope}{()}}{&&}{{{{s}{.}{getRootNode}{()}}{.}{getLastChild}{()}}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{n}{.}{isFunction}{()}}{&&}{{!}{{{NodeUtil}{.}{getFunctionBody}{(}{n}{)}}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{c}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{c}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{caseBody}{.}{isBlock}{()}}{,}{caseBody}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{labeledStatement}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{last}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{newChild}{.}{isBlock}{()}}{)}{{{}{{{NodeUtil}{.}{tryMergeBlock}{(}{newChild}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{calleeTypeI}{=}{{checkNotNull}{(}{{callee}{.}{getJSType}{()}}{,}{STRING_CONSTANT}{,}{{callNode}{.}{toStringTree}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{numbers}{.}{isSubtype}{(}{sub1}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{languageOutIsAtLeast}{(}{polyfill.polyfillVersion}{)}}}{)}{{{}{{{traversal}{.}{report}{(}{node}{,}{INSUFFICIENT_OUTPUT_VERSION_ERROR}{,}{name}{,}{{{{compiler}{.}{getOptions}{()}}{.}{getOutputFeatureSet}{()}}{.}{version}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{getOutputFeatureSet}{()}}{.}{contains}{(}{ES6}{)}}{)}{{{}{{{passes}{.}{add}{(}{optimizeToEs6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.dartPass}{&&}{{!}{{{options}{.}{getOutputFeatureSet}{()}}{.}{contains}{(}{ES6}{)}}}}{)}{{{}{{{checks}{.}{add}{(}{dartSuperAccessorsPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{options}{.}{getOutputFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES5}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{languageOutFeatures}{=}{{{compiler}{.}{getOptions}{()}}{.}{getOutputFeatureSet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{languageOutFeatures}{=}{{{compiler}{.}{getOptions}{()}}{.}{getOutputFeatureSet}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{options}{.}{getOutputFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES5}{)}}}{)}{{{}{{throw}{{new}{{InvalidOptionsException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{incrementalCheckMode}{==}{IncrementalCheckMode.GENERATE_IJS}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{this}{.}{quoteKeywordProperties}}{||}{{FeatureSet.ES3}{.}{contains}{(}{{getOutputFeatureSet}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{feature}{)}}{&&}{{!}{{{getOutputFeatureSet}{()}}{.}{has}{(}{feature}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{languageLevel}{)}}{&&}{{!}{{{getOutputFeatureSet}{()}}{.}{contains}{(}{languageLevel}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{language}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{language}}{;}}{{{this}{.}{setLanguageOut}{(}{language}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{outputTypes}{)}{{{}{{return}{Format.TYPED}{;}}{}}}}{{if}{(}{{prettyPrint}{||}{{{options}{.}{getOutputFeatureSet}{()}}{.}{contains}{(}{FeatureSet.TYPESCRIPT}{)}}}{)}{{{}{{return}{Format.PRETTY}{;}}{}}}}{{return}{Format.COMPACT}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testNestingArrow}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAssigningArrowToObjectLiteralField_ExpressionBody}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{contextStack}}{=}{{new}{{{ArrayDeque}}{<>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{LocalScopeBuilder}{(}{{{TypedScope}}{scope}}{)}{{{}{{super}{(}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{compiler}{.}{getErrors}{()}}{)}}{.}{isEmpty}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{inTypeSummary}{(}{error}{)}}{)}{{{}{{return}{CheckLevel.OFF}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{outputFeatureSet}}{=}{{Optional}{.}{of}{(}{featureSet}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{JsOverlay}}{public}{final}{{{List}}{<}{{T}}{>}}{asList}{()}{{{}{{return}{{new}{{JsArrayList}}{(}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{asPropertyMap}{()}}{.}{set}{(}{key}{,}{value}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es7RewriteExponentialOperator}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{FunctionScopeBuilder}{(}{{{TypedScope}}{scope}}{)}{{{}{{super}{(}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NormalScopeBuilder}}{{scopeBuilder}{=}{{new}{{NormalScopeBuilder}}{(}{globalScope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ModulePath}}{(}{{normalize}{(}{{pathEscaper}{.}{escape}{(}{{pathResolver}{.}{apply}{(}{path}{)}}{)}}{,}{moduleRootPaths}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{visitImport}{(}{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{path}{=}{{pathEscaper}{.}{escape}{(}{moduleAddress}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{path}{=}{{pathEscaper}{.}{escape}{(}{moduleAddress}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{skipOctalDigits}{()}{{{}{{while}{(}{{peekOctalDigit}{()}}{)}{{{}{{{nextChar}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentInfo}{.}{hasConstAnnotation}{()}}}{)}{{{}{{{currentInfo}{.}{setConstant}{(}{true}{)}}{;}}{{{populated}{=}{true}}{;}}{{return}{true}{;}}{}}}{else}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{jsdoc}{.}{isConstant}{()}}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{isConst}{=}{{{{nameNode}{.}{getParent}{()}}{.}{isConst}{()}}{||}{{isExportLhs}{(}{nameNode}{)}}{||}{{(}{{{jsdoc}{!=}{null}}{&&}{{jsdoc}{.}{isConstant}{()}}}{)}}}}}
{AST_ROOT_SC2NF{{{Token}}{type}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{return}{{shouldDescend}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{JSType}}{ownerType}}}
{AST_ROOT_SC2NF{{{}{{{currentModule}{.}{moduleType}{(}{ModuleType.COMMON_JS}{,}{t}{,}{n}{)}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{googNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{googNamespaces}{()}}{)}}{.}{isEmpty}{()}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{googNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{googNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{googNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{googNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{ownerType}}}
{AST_ROOT_SC2NF{{return}{{{parent}{==}{null}}{||}{{!}{{NodeUtil}{.}{createsScope}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Token}}{type}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{STRING_TYPE}{,}{{info}{.}{getParameterType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSDocInfo}}{{info}{=}{{parse}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertTypeEquals}{(}{NUMBER_TYPE}{,}{{info}{.}{getParameterType}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expandObjectLitAssignment}{(}{t}{,}{root}{,}{export.scope}{)}}{)}{{{}{return;}{}}}}{}}}}
{AST_ROOT_SC2NF{{@}{JsMethod}{(}{{namespace}{=}{STRING_CONSTANT}}{)}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{expectStringOrNumber}{(}{t}{,}{n}{,}{rightType}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{shouldDescend}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{type}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{JSType}}{ownerType}}}
{AST_ROOT_SC2NF{{@}{JsMethod}{(}{{name}{=}{STRING_CONSTANT}}{,}{{namespace}{=}{STRING_CONSTANT}}{)}}}
{AST_ROOT_SC2NF{{@}{JsMethod}{(}{{namespace}{=}{STRING_CONSTANT}}{)}}}
{AST_ROOT_SC2NF{{{}{{{EvalMode}}{{newMode}{=}{{useEval}{?}{EvalMode.EVAL}{:}{EvalMode.NORMAL}}}{;}}{{return}{{new}{{ClosureBundler}}{(}{transpiler}{,}{newMode}{,}{sourceUrl}{,}{path}{,}{sourceMapCache}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{EvalMode}}{{newMode}{=}{{useEval}{?}{EvalMode.EVAL}{:}{EvalMode.NORMAL}}}{;}}{{return}{{new}{{ClosureBundler}}{(}{transpiler}{,}{es6ModuleTranspiler}{,}{newMode}{,}{sourceUrl}{,}{path}{,}{sourceMapCache}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{restRhs}{=}{{newName}{(}{{this}{.}{restDeletionVarName}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{baseHash}{=}{{super}{.}{hashCode}{()}}}{;}}{{if}{(}{isSpecializedOnlyWithUnknown}{)}{{{}{{return}{baseHash}{;}}{}}}}{{return}{{Objects}{.}{hash}{(}{templateTypes}{,}{baseHash}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{rootNode}{,}{{new}{{CoverageInstrumentationCallback}}{(}{instrumentationData}{,}{reach}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{abstract}{{{ImmutableMultiset.Builder}}{<}{{String}}{>}}{es6ImportSpecifiersBuilder}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{{{ImmutableMultiset.Builder}}{<}{{String}}{>}}{requiredGoogNamespacesBuilder}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{{{ImmutableMultiset.Builder}}{<}{{String}}{>}}{requiredTypesBuilder}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSettersForbidden2}{()}{{{}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGettersForbidden4}{()}{{{}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGettersForbidden3}{()}{{{}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGettersForbidden2}{()}{{{}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ES_NEXT}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.BARE_MINIMUM}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateDefaultValue}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setEs6ModuleTranspilation}{(}{Es6ModuleTranspilation.TO_COMMON_JS_LIKE_MODULES}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isVarArgsParameter}{(}{{{Node}}{parameter}}{)}{{{}{{return}{{{parameter}{.}{isRest}{()}}{||}{{parameter}{.}{isVarArgs}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isParsed}{()}}}{)}{{{}{{{parse}{(}{compiler}{)}}{;}}{{{root}{.}{setInputId}{(}{inputId}{)}}{;}}{}}}}{{return}{{checkNotNull}{(}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{root}}{=}{{checkNotNull}{(}{root}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{originalRoot}{=}{{checkNotNull}{(}{{input}{.}{getAstRoot}{(}{this}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{checkNotNull}{(}{{input}{.}{getAstRoot}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{findDeps}{.}{process}{(}{{checkNotNull}{(}{{input}{.}{getAstRoot}{(}{this}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{checkNotNull}{(}{{input}{.}{getAstRoot}{(}{this}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{checkNotNull}{(}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{options.checksOnly}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{{matchedNodeInfo}{=}{{MatchedNodeInfo}{.}{create}{(}{node}{,}{{RefactoringUtils}{.}{isInClosurizedFile}{(}{node}{,}{{new}{{NodeMetadata}}{(}{compiler}{)}}{)}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateObjectPatternRest}{(}{type}{,}{c}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateArrayPatternRest}{(}{type}{,}{c}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateRestParameters}{(}{Token.PARAM_LIST}{,}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf4}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{AbstractCommandLineRunner}{()}{{{}{{this}{(}{System.in}{,}{System.out}{,}{System.err}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{shouldDeclareOnGlobalThis}{=}{{isGlobalVar}{&&}{{(}{{{parent}{.}{isVar}{()}}{||}{{parent}{.}{isFunction}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{maybeThisType}{=}{{{{info}{.}{getThisType}{()}}{.}{evaluate}{(}{templateScope}{,}{typeRegistry}{)}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnTypeExpr}{!=}{null}}{)}{{{}{{{returnType}{=}{{returnTypeExpr}{.}{evaluate}{(}{templateScope}{,}{typeRegistry}{)}}}{;}}{{{returnTypeInferred}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{maybeThisType}{=}{{{{info}{.}{getThisType}{()}}{.}{evaluate}{(}{scope}{,}{typeRegistry}{)}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnTypeExpr}{!=}{null}}{)}{{{}{{{returnType}{=}{{returnTypeExpr}{.}{evaluate}{(}{scope}{,}{typeRegistry}{)}}}{;}}{{{returnTypeInferred}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{{new}{{GeneratorFunctionsTranspiler}}{()}}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{transpiledFeatures}{,}{{new}{{GeneratorFunctionsTranspiler}}{()}}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{compiler}{.}{hasHaltingErrors}{()}}}{)}{{{}{{{TranspilationPasses}{.}{maybeMarkFeaturesAsTranspiledAway}{(}{compiler}{,}{features}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{source}{.}{isFunction}{()}}{||}{{source}{.}{isClass}{()}}}{,}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{returnType}{=}{{getExplicitReturnTypeIfExpected}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RelativizeImportPaths}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{case}{RELATIVIZE_IMPORT_PATHS}{:}}}
{AST_ROOT_SC2NF{{{SourceFile}}{{expectedEs6}{=}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteClass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSpreadLibInjection}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{{assertThat}{(}{{{getLastCompiler}{()}}{.}{injected}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{referencedType}{=}{{getReferencedType}{()}}}{;}}{{if}{(}{{areIdentical}{(}{referencedType}{,}{this}{)}}{)}{{{}{{{handleTypeCycle}{(}{reporter}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{areIdentical}{(}{this}{,}{that}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isGlobalThisType}{()}{{{}{{return}{{areIdentical}{(}{this}{,}{{registry}{.}{getNativeType}{(}{JSTypeNative.GLOBAL_THIS}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isUnresolvedOrResolvedUnknown}{()}{{{}{{return}{{{isNoResolvedType}{()}}{||}{{(}{{{isNamedType}{()}}{&&}{{isUnknownType}{()}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{objectType}{.}{getImplicitPrototype}{()}}{,}{OBJECT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{{defineVars}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{defineVar}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{context}{.}{isAsyncContext}{()}}{)}{{{}{{{convertAsyncFunction}{(}{t}{,}{context}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{maybeThisType}{=}{{{{info}{.}{getThisType}{()}}{.}{evaluate}{(}{templateScope}{,}{typeRegistry}{)}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnTypeExpr}{!=}{null}}{)}{{{}{{{returnType}{=}{{returnTypeExpr}{.}{evaluate}{(}{templateScope}{,}{typeRegistry}{)}}}{;}}{{{returnTypeInferred}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsVerifierTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{state}{.}{verifyingStarted}{(}{{OngoingVerifyingMode}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{return}{{verify}{(}{mock}{,}{{OngoingVerifyingMode}{.}{times}{(}{wantedNumberOfInvocations}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrow}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingModeTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{andThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{andThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrow}{(}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{reader}{.}{read}{()}}{)}}{.}{andThrow}{(}{ioException}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrow}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.mockitoState}{.}{pullStubable}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{<}{{T}}{>}{{T}}{verify}{(}{{{T}}{mock}}{,}{{{OngoingVerifyingMode}}{ongoingVerifyingMode}}{)}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.mockingProgress}{.}{pullStubable}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockingProgressImpl}}{{state}{=}{{new}{{MockingProgressImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MockingProgressImplTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{addReturnValue}{(}{{{Object}}{value}}{)}{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{addResult}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{state}{=}{{new}{{MockingProgressImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MockControl}}{<}{{T}}{>}}{{control}{=}{{MockUtil}{.}{getControl}{(}{mock}{)}}}{;}}{{{mockingProgress}{.}{stubbingStarted}{()}}{;}}{{return}{control}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{mockingProgress}{.}{verifyingStarted}{(}{mode}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MockControl}}{<}{{T}}{>}}{{mockControl}{=}{{new}{{{MockControl}}{<}{{T}}{>}}{(}{mockingProgress}{,}{{new}{{MatchersBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{.}{recordInvocation}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{=}{{new}{{{VerifyingRecorder}}{<}{{T}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{setCauseStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{remove}{()}}{;}}{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{InvocationsCalculator}}{calculator}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{OngoingVerifyingMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{oneArg}{(}{true}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooManyActualInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{=}{{createRecorder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator}{=}{{new}{{InvocationsCalculator}}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{differentMethod}{=}{{{{new}{{InvocationBuilder}}{()}}{.}{differentMethod}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{differentMethod}{=}{{{{new}{{InvocationBuilder}}{()}}{.}{differentMethod}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{simpleMethod}{=}{{{{new}{{InvocationBuilder}}{()}}{.}{simpleMethod}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeTest}}{.}{class}}}
{AST_ROOT_SC2NF{{<}{{T}}{>}{{T}}{verify}{(}{{{T}}{mock}}{,}{{{VerificationMode}}{verificationMode}}{)}{;}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator1}{=}{{new}{{InvocationsCalculator}}{(}{{getInvocationsForEvaluation}{(}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator1}{=}{{new}{{InvocationsCalculator}}{(}{{getInvocationsForEvaluation}{(}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationMode}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationMode}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{verificationMode}{=}{null}}{;}}{{{invocationSequenceNumber}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{InvocationsCalculator}}{calculator}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{VerificationMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{return}{{verify}{(}{mock}{,}{{VerificationMode}{.}{times}{(}{wantedNumberOfInvocations}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mode}{.}{isStrict}{()}}{)}{{{}{{return}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{{mode}{.}{getAllMocksToBeVerifiedInSequence}{()}}{)}}{;}}{}}}{else}{{{}{{return}{registeredInvocations}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isStrict}{()}{{{}{{return}{{!}{{mocksToBeVerifiedInSequence}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{.}{isVerifiedStrictly}{()}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Object}}{mock}}{:}{mocks}{)}{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{strictOrderVerifier}{.}{addMockToBeVerifiedStrictly}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Verifier}}{>}}{{verifiers}{=}{{Arrays}{.}{asList}{(}{{new}{{MissingInvocationVerifier}}{()}}{,}{{new}{{NumberOfInvocationsVerifier}}{(}{{new}{{Reporter}}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{reporter}{.}{zeroInteractionsWanted}{(}{{unverified}{.}{toString}{()}}{,}{{unverified}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{reporter}{.}{noMoreInteractionsWanted}{(}{{unverified}{.}{toString}{()}}{,}{{unverified}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mocksToBeVerifiedSrictly}{.}{contains}{(}{mock}{)}}}{)}{{{}{{{reporter}{.}{strictlyRequiresFamiliarMock}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mocks.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{{reporter}{.}{mocksHaveToBePassedWhenCreatingStrictly}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubable}{==}{null}}{)}{{{}{{{reporter}{.}{missingMethodInvocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{StubbedInvocationMatcher}}{s}}{:}{stubbed}{)}{{{}{{if}{(}{{s}{.}{matches}{(}{wanted}{)}}{)}{{{}{{return}{{s}{.}{answer}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator1}{=}{{new}{{InvocationsCalculator}}{(}{{getInvocationsForEvaluation}{(}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IAnswer}}{result}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{chunk}{,}{{collectionHasExactlyInOrder}{(}{invocationOneChunkOne}{,}{invocationTwoChunkOne}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{strict}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{two}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{two}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockOne}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{varargsObject}{(}{NUMBER_CONSTANT}{,}{textOne}{,}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockOne}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mockOne}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{varargsObject}{(}{NUMBER_CONSTANT}{,}{textOne}{,}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mockOne}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{Mockito}{.}{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{list}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{map}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{put}{(}{{anyObject}{()}}{,}{{anyObject}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{oneArg}{(}{two}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{VerificationMode}}{(}{wantedNumberOfInvocations}{,}{mocksToBeVerifiedStrictly}{,}{Verification.EXPLICIT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{STRING_CONSTANT}{,}{verifierStub.calculator}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{STRING_CONSTANT}{,}{verifierStub.invocations}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{verifierStub.invocations}{,}{{collectionHasExactlyInOrder}{(}{{differentMethod}{.}{getInvocation}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{verifierStub.invocations}{,}{{collectionHasExactlyInOrder}{(}{simpleMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{{asList}{(}{{wanted}{.}{getInvocation}{()}}{)}}{,}{wanted}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{{asList}{(}{{wanted}{.}{getInvocation}{()}}{)}}{,}{wanted}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{{List}}{<}{{Invocation}}{>}}{invocations}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{VerificationMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{verifiers}{=}{{Arrays}{.}{asList}{(}{{new}{{MissingInvocationVerifier}}{()}}{,}{{new}{{NumberOfInvocationsVerifier}}{()}}{,}{{new}{{NoMoreInvocationsVerifier}}{()}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{invocations}}{=}{invocations}}{;}}{{return}{invocationToReturn}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{calculator.invocationToReturn}{=}{null}}{;}}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationMode}{.}{noMoreInteractions}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{times}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mode}{.}{exactNumberOfInvocationsMode}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{strictMode}{()}}{)}{{{}{{{markVerifiedStrictly}{(}{invocations}{)}}{;}}{}}}{else}{{{}{{{markVerified}{(}{wanted}{,}{invocations}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mode}{.}{strictMode}{()}}{)}{{{}{{return}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{{mode}{.}{getAllMocksToBeVerifiedInSequence}{()}}{)}}{;}}{}}}{else}{{{}{{return}{registeredInvocations}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{explicitMode}{()}}{)}{{{}{{{marker}{.}{markInvocationsAsVerified}{(}{invocations}{,}{wanted}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{explicitMode}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{exactNumberOfInvocationsMode}{()}{{{}{{return}{{{!}{{atLeastOnceMode}{()}}}{&&}{{explicitMode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{missingMethodMode}{()}{{{}{{return}{{{explicitMode}{()}}{&&}{{(}{{{atLeastOnceMode}{()}}{||}{{wantedInvocationCount}{==}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{explicitMode}{()}{{{}{{return}{{verification}{==}{Verification.EXPLICIT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{strictMode}{()}{{{}{{return}{{!}{{mocksToBeVerifiedInSequence}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{atLeastOnceMode}{()}{{{}{{return}{{{wantedInvocationCount}{==}{null}}{&&}{{verification}{==}{Verification.EXPLICIT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.MOCKING_PROGRESS}{.}{pullStubable}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mocks.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{{REPORTER}{.}{mocksHaveToBePassedWhenCreatingStrictly}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{MockControl}}{<}{{T}}{>}}{{control}{=}{{MockUtil}{.}{getControl}{(}{mock}{)}}}{;}}{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}{{return}{control}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{MOCKING_PROGRESS}{.}{verificationStarted}{(}{mode}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MockControl}}{<}{{T}}{>}}{{mockControl}{=}{{new}{{{MockControl}}{<}{{T}}{>}}{(}{MOCKING_PROGRESS}{,}{{new}{{MatchersBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{void}{say}{(}{{{String}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{say}{(}{{{Object}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{withBooleanVarargs}{(}{{int}{value}}{,}{{boolean}{.}{.}{.}{b}}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{throwsError}{(}{{int}{count}}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{throwsIOException}{(}{{int}{count}}{)}{throws}{{IOException}}{;}}}
{AST_ROOT_SC2NF{{{String}}{throwsNothing}{(}{{boolean}{value}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockHandlerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{shouldScreamWhenNullPassed}{()}{{{}{{{getMockHandler}{(}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{NotAMockException}}{.}{class}}}{)}}{public}{void}{shouldScreamWhenNotAMockPassed}{()}{{{}{{{getMockHandler}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{getMockHandler}{(}{o}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{{List}}{<}{{Invocation}}{>}}{{invocationsOfSingleMock}{=}{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{getRegisteredInvocations}{()}}}{;}}{{{allInvocations}{.}{addAll}{(}{invocationsOfSingleMock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Object}}{mock}}{:}{mocks}{)}{{{}{{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{verifyNoMoreInteractions}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{NoInteractionsWantedError}}{e}}}
{AST_ROOT_SC2NF{{{NoInteractionsWantedError}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{UndesiredInvocation}}{{cause}{=}{{buildUndesiredInvocationCause}{(}{actualInvocationStackTrace}{,}{STRING_CONSTANT}{,}{undesired}{)}}}{;}}{{throw}{{new}{{NoInteractionsWantedError}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actual}{=}{{analyzer}{.}{findActualInvocation}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{actualCount}{=}{{analyzer}{.}{countActual}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{analyzer}{.}{getFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{NoMoreInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{assertSame}{(}{wanted}{,}{analyzerStub.wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldPassBecauseActualInvocationFound}{()}{{{}{{{analyzerStub.actualCountToReturn}{=}{NUMBER_CONSTANT}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{atLeastOnce}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{analyzer.invocationToReturn}{=}{null}}{;}}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationMode}{.}{noMoreInteractions}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{InvocationsAnalyzer}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{actualbyName}{!=}{null}}{?}{actualbyName}{:}{{findFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{analyzer}{.}{findFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{sub}{)}}{.}{say}{(}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportStubbable}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{OngoingStubbing}}{pullStubbable}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{reportStubbable}{(}{{{OngoingStubbing}}{ongoingStubbing}}{)}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImplTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{state}{.}{verificationStarted}{(}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{verificationMode}{=}{{mockingProgress}{.}{pullVerificationMode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{strict}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{strict}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{public}{void}{verify}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{{verify}{(}{null}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{{List}}{<}{{Invocation}}{>}}{invocations}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{VerificationModeImpl}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{null}{,}{{VerificationModeImpl}{.}{noMoreInteractions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeImpl}{.}{times}{(}{wantedNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{}{{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{}{{{VerificationModeImpl}}{{mode}{=}{{VerificationModeImpl}{.}{noMoreInteractions}{()}}}{;}}{{{recorder}{.}{verify}{(}{mode}{)}}{;}}{{{assertNull}{(}{markerStub.mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{strict}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{VerificationModeImpl}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{VerificationModeImpl}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{setCauseStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{remove}{()}}{;}}{{{assertTrue}{(}{{methodsOnTraceAfterRemoving}{.}{isEmpty}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{three}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{VerificationModeImpl}}{strict}{()}{{{}{{return}{{VerificationModeImpl}{.}{strict}{(}{times}{,}{{Arrays}{.}{asList}{(}{{new}{{Object}}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{verifierStub.mode}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{ActualInvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{atLeastOnce}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{StackTraceFilteringTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setup}{()}{{{}{{{mock}{=}{{mock}{(}{{{LinkedList}}{.}{class}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{InvocationDiffersFromActual}}{e}}}
{AST_ROOT_SC2NF{{{TooManyActualInvocations}}{e}}}
{AST_ROOT_SC2NF{{{TooLittleActualInvocations}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{oneArg}{(}{{same}{(}{three}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocations}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{WantedButNotInvoked}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockTwo}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockTwo}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocations}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooManyActualInvocations}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationDiffersFromActual}}{error}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{NoInteractionsWanted}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{String}}{wanted}}{)}{{{}{{throw}{{new}{{WantedButNotInvoked}}{(}{{join}{(}{STRING_CONSTANT}{,}{wanted}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{InvocationDiffersFromActual}}{(}{{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{wanted}{)}}{,}{cause}{)}}{;}}}
{AST_ROOT_SC2NF{{wantedInvocation}{.}{differsWithArgumentTypes}{(}{actualInvocation}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{WantedButNotInvoked}}{.}{class}}}{)}}{public}{void}{shouldFailVerification}{(}{)}{throws}{{Exception}}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{WantedButNotInvoked}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{TooLittleActualInvocations}}{e}}}
{AST_ROOT_SC2NF{{{TooManyActualInvocations}}{e}}}
{AST_ROOT_SC2NF{{{TooManyActualInvocations}}{e}}}
{AST_ROOT_SC2NF{{{WantedButNotInvoked}}{e}}}
{AST_ROOT_SC2NF{{{InvocationDiffersFromActual}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NoInteractionsWanted}}{e}}}
{AST_ROOT_SC2NF{{{NoInteractionsWanted}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationDiffersFromActual}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{Collections}{.}{<}{{Integer}}{>}{emptyList}{()}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{ObjectsChunk}}{<}{{Integer}}{>}}{>}}{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualityBasedDistributor}}{()}}{)}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{StrictVerificationFailure}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{StrictVerificationFailure}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{StrictVerificationFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{StrictVerificationFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{ActualInvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{strictMode}{()}{{{}{{return}{{{!}{{mocksToBeVerifiedStrictly}{.}{isEmpty}{()}}}{&&}{{explicitMode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{finder}{.}{findFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{NoMoreInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Invocation}}{{similar}{=}{{finder}{.}{findSimilarInvocation}{(}{invocations}{,}{wanted}{,}{mode}{)}}}{;}}{{{reportMissingInvocationError}{(}{wanted}{,}{similar}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findFirstUnverifiedChunk}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findFirstUnverifiedChunk}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finder.firstUnverifiedToReturn}{=}{null}}{;}}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationModeImpl}{.}{noMoreInteractions}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{finderStub.similarToReturn}{=}{actualInvocation}}{;}}}
{AST_ROOT_SC2NF{{{finderStub.similarToReturn}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}{{{assertSame}{(}{invocations}{,}{finderStub.invocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{finderStub}{=}{{new}{{InvocationsFinderStub}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{StrictlyNumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{StrictlyMissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{strictMode}{()}}{)}{{{}{{{invocations}{=}{{globalInvocationsFinder}{.}{getAllInvocations}{(}{{mode}{.}{getMocksToBeVerifiedStrictly}{()}}{)}}}{;}}{}}}{else}{{{}{{{invocations}{=}{registeredInvocations}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{NoMoreInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{InvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{finderStub}{=}{{new}{{InvocationsFinderStub}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{finder}{=}{{new}{{InvocationsFinderStub}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{extends}{{Object}}}{>}}{mocksToBeVerifiedStrictly}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{extends}{{Object}}}{>}}{mocksToBeVerifiedStrictly}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{lastInvocation}{=}{{finder}{.}{getLastStackTrace}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{lastInvocation}{=}{{finder}{.}{getLastStackTrace}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{anyString}{()}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportOngoingStubbing}{(}{{new}{{OngoingStubbingImpl}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{toThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{toThrow}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{booleanReturningMethod}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{toReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{OngoingStubbing}}{pullOngoingStubbing}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{reportOngoingStubbing}{(}{{{OngoingStubbing}}{ongoingStubbing}}{)}{;}}}
{AST_ROOT_SC2NF{{return}{{handler}{.}{voidMethodStubbable}{()}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toReturn}{(}{Boolean.FALSE}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toThrow}{(}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{reader}{.}{read}{()}}{)}}{.}{toThrow}{(}{ioException}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toThrow}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Strictly}}{{strictly}{=}{{strictly}{(}{mock}{)}}}{;}}{{{strictly}{.}{verify}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{strictly}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Strictly}}{{strictly}{=}{{strictly}{(}{mock}{)}}}{;}}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{shouldNotCreateStrictlyWithoutMocks}{()}{{{}{{{strictly}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockDatabase}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{one}{,}{two}{,}{three}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mockOne}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockOne}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{strictly}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{argument}}}
{AST_ROOT_SC2NF{{{T}}{actual}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{ArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{ArgumentMatcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{ArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{public}{void}{reportMatcher}{(}{{{ArgumentMatcher}}{matcher}}{)}{{{}{{{matcherStack}{.}{push}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{return}{null}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{<}{{T}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{.}{<}{{String}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{anyString}{()}{{{}{{return}{{isA}{(}{{{String}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{double}{doubleThat}{(}{{{{CustomMatcher}}{<}{{Double}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{float}{floatThat}{(}{{{{CustomMatcher}}{<}{{Float}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{long}{longThat}{(}{{{{CustomMatcher}}{<}{{Long}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{int}{intThat}{(}{{{{CustomMatcher}}{<}{{Integer}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{short}{shortThat}{(}{{{{CustomMatcher}}{<}{{Short}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{byte}{byteThat}{(}{{{{CustomMatcher}}{<}{{Byte}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{booleanThat}{(}{{{{CustomMatcher}}{<}{{Boolean}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnFalse}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{char}{charThat}{(}{{{{CustomMatcher}}{<}{{Character}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnChar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{notNull}{()}{{{}{{return}{{{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{.}{returnNull}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{isNull}{()}{{{}{{return}{{{reportMatcher}{(}{Null.NULL}{)}}{.}{returnNull}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Same}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{anyObject}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnNull}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{short}{anyShort}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{double}{anyDouble}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{float}{anyFloat}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{long}{anyLong}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{int}{anyInt}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{char}{anyChar}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnChar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{byte}{anyByte}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnZero}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{anyBoolean}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnFalse}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{returnFalse}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{<}{{T}}{>}{{T}}{returnNull}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{char}{returnChar}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{byte}{returnZero}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Same}}{(}{value}{)}}{)}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnVerifyInOrder}}{()}}{,}{{{UnfinishedVerificationException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnVerifyInOrder}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnVerifyInOrder}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{{inOrder}{(}{NUMBER_CONSTANT}{,}{{asList}{(}{{new}{{Object}}{()}}{)}}{)}}{.}{exactNumberOfInvocationsMode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{inOrder}{=}{{inOrder}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{unverified}{=}{{ListUtil}{.}{filter}{(}{invocations}{,}{{new}{{RemoveVerifiedInOrder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{inOrder}{=}{{inOrder}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockOne}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{simpleMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{Object}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{finderStub.allMatchingUnverifiedChunksToReturn}{.}{add}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{finderStub.allMatchingUnverifiedChunksToReturn}{.}{addAll}{(}{{asList}{(}{first}{,}{second}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{finderStub.allMatchingUnverifiedChunksToReturn}{.}{addAll}{(}{{asList}{(}{first}{,}{second}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{finderStub.allMatchingUnverifiedChunksToReturn}{.}{add}{(}{differentMethod}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{finderStub.allMatchingUnverifiedChunksToReturn}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{WantedButNotInvoked}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodWanted}{()}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{WantedButNotInvoked}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{WantedButNotInvoked}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{Printable}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{wanted}{,}{reporterStub.wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{reporter}{.}{wantedButNotInvoked}{(}{wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{Printable}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{wanted}{,}{mode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{Printable}}{wanted}}{)}{{{}{{throw}{{new}{{WantedButNotInvoked}}{(}{{join}{(}{STRING_CONSTANT}{,}{{wanted}{.}{toString}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Printable}}{previous}}}
{AST_ROOT_SC2NF{{{Printable}}{undesired}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{firstUnverified}{,}{reporterStub.undesired}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{reporter}{.}{noMoreInteractionsWanted}{(}{unverified}{,}{{unverified}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{wanted}{,}{reporterStub.wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{wanted}{,}{reporterStub.wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{Printable}}{previous}}}
{AST_ROOT_SC2NF{{{Invocation}}{{previousInOrder}{=}{{finder}{.}{findPreviousVerifiedInOrder}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{actual}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mockCalculator}{.}{countArticlesInPolish}{(}{{anyString}{()}}{)}}{)}}{.}{toReturn}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{mocks}{==}{null}}{||}{{mocks.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{{REPORTER}{.}{mocksHaveToBePassedToVerifyNoMoreInteractions}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{T}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Matcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{Matcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Matcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Matcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{Matcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{actual}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Matcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Matcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{Matcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{ReturnValues}}{reportMatcher}{(}{{{{Matcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Double}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Float}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Long}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Integer}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Short}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Byte}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Boolean}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Character}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{public}{{ReturnValues}}{reportMatcher}{(}{{{Matcher}}{matcher}}{)}{{{}{{{matcherStack}{.}{push}{(}{matcher}{)}}{;}}{{return}{{new}{{ReturnValues}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{mode}{.}{neverWanted}{()}}{&&}{noMatchFound}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferentException}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{ArgumentsAreDifferentException}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{OverloadingPuzzleTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{undesired}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{PrintableInvocation}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{PrintableInvocation}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{undesired}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{PrintableInvocation}}{wanted}}{)}{{{}{{throw}{{new}{{WantedButNotInvoked}}{(}{{join}{(}{STRING_CONSTANT}{,}{{wanted}{.}{toString}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{matchers}{==}{null}}{)}{{{}{{{{this}{.}{matchers}}{=}{{invocation}{.}{argumentsToMatchers}{()}}}{;}}{}}}{else}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mock}{.}{simpleMethod}{(}{null}{,}{{(}{{Integer}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{argumentsMatch}{(}{actual}{)}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferent}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{ArgumentsAreDifferent}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferent}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferent}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferent}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferent}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferent}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferent}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferent}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferent}}{e}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{invocation}{.}{hasSimilarMethod}{(}{overloadedInvocation}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{invocation}{.}{hasSimilarMethod}{(}{overloadedInvocation}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{simpleMethod}{.}{hasSimilarMethod}{(}{onDifferentMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{simpleMethod}{.}{hasSimilarMethod}{(}{verified}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{STRING_CONSTANT}{+}{{cause}{.}{getMessage}{()}}{+}{STRING_CONSTANT}{+}{text}}{,}{{{cause}{.}{getMessage}{()}}{.}{contains}{(}{text}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{invocation}{.}{getMock}{()}}{.}{equals}{(}{{actual}{.}{getMock}{()}}{)}}{&&}{{hasSameMethod}{(}{actual}{)}}{&&}{{argumentsMatch}{(}{actual}{)}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{STRING_CONSTANT}{+}{text}{+}{STRING_CONSTANT}{+}{{value}{.}{getMessage}{()}}}{,}{{{{(}{{(}{{Throwable}}{)}{value}}{)}}{.}{getMessage}{()}}{.}{contains}{(}{text}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{verificationMode}{!=}{null}}{)}{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{{MockitoConfiguration}{.}{emptyValues}{()}}{.}{valueFor}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{inOrderMode}{()}}{)}{{{}{{{invocations}{=}{{globalInvocationsFinder}{.}{getAllInvocations}{(}{{mode}{.}{getMocksToBeVerifiedInOrder}{()}}{)}}}{;}}{}}}{else}{{{}{{{invocations}{=}{{getRegisteredInvocations}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DefaultReturnValuesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{if}{(}{{verificationMode}{!=}{null}}{)}{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{{MockitoConfiguration}{.}{defaultReturnValues}{()}}{.}{valueFor}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{MockitoConfiguration}{.}{defaultReturnValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExampleTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{resetDefaultReturnValues}{()}{{{}{{{MockitoConfiguration}{.}{resetCustomReturnValues}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{getReturnValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{configureDefaultReturnValues}{()}{{{}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{setReturnValues}{(}{{new}{{MyDefaultReturnValues}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{getReturnValues}{()}}{.}{valueFor}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{configureDefaultReturnValues}{()}{{{}{{{myDefaultReturnValues}{=}{{new}{{MyDefaultReturnValues}}{()}}}{;}}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{setReturnValues}{(}{myDefaultReturnValues}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Invocation}{.}{isToString}{(}{invocation}{)}}}
{AST_ROOT_SC2NF{{{InvocationOnMock}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationOnMock}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationOnMock}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationOnMock}}{invocation}}}
{AST_ROOT_SC2NF{{return}{{returnValueFor}{(}{returnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{(}{char}{)}{NUMBER_CONSTANT}}{,}{{mock}{.}{charReturningMethod}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FakeReturnValues}}{{fakeReturnValues}{=}{{getFakeReturnValues}{()}}}{;}}{{{fakeReturnValues}{.}{addMocks}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{mockDescription}{=}{{STRING_CONSTANT}{+}{{ClassNameFinder}{.}{classNameForMock}{(}{mock}{)}}{+}{STRING_CONSTANT}{+}{{mock}{.}{hashCode}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockUtil}{.}{createMock}{(}{classToMock}{,}{null}{,}{MOCKING_PROGRESS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{m}{.}{getMatchers}{()}}{,}{{hasExactlyInOrder}{(}{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{verifierStub.invocations}{,}{{hasExactlyInOrder}{(}{simpleMethod}{,}{{differentMethod}{.}{getInvocation}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{verifierStub.invocations}{,}{{hasExactlyInOrder}{(}{simpleMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{handler}{=}{{new}{{MockHandler}}{(}{null}{,}{state}{,}{{new}{{ExceptionThrowingBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{f}{.}{set}{(}{testClass}{,}{{Mockito}{.}{mock}{(}{{f}{.}{getType}{()}}{,}{{f}{.}{getName}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{hasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{not}{(}{{Matchers}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{and}{(}{{Matchers}{.}{contains}{(}{STRING_CONSTANT}{)}}{,}{{Matchers}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MockUtil}{.}{getMockHandler}{(}{o}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{List}}{{mock}{=}{{Mockito}{.}{mock}{(}{{{List}}{.}{class}}{)}}}{;}}{{{assertNotNull}{(}{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{hasExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{hasExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{hasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{hasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{inOrderMode}{()}}{)}{{{}{{{invocations}{=}{{invocationsFinder}{.}{getAllInvocations}{(}{{mode}{.}{getMocksToBeVerifiedInOrder}{()}}{)}}}{;}}{}}}{else}{{{}{{{invocations}{=}{{getRegisteredInvocations}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{Modifier}{.}{isFinal}{(}{{clazz}{.}{getModifiers}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mocksReturningFakes}{.}{contains}{(}{{invocation}{.}{getMock}{()}}{)}}{)}{{{}{{return}{{returnFake}{(}{invocation}{)}}{;}}{}}}{else}{{{}{{return}{{ConfigurationSupport}{.}{defaultValueFor}{(}{invocation}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{run}{(}{notifier}{)}}{;}}{{{{ConfigurationSupport}{.}{getConfiguration}{()}}{.}{resetReturnValues}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Object}}{{test}{=}{{super}{.}{createTest}{()}}}{;}}{{{{ConfigurationSupport}{.}{getConfiguration}{()}}{.}{setReturnValues}{(}{{new}{{FriendlyReturnValues}}{()}}{)}}{;}}{{return}{test}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{{{Configuration}{.}{instance}{()}}{.}{getReturnValues}{()}}{.}{valueFor}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{Configuration}{.}{instance}{()}}{.}{getReturnValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoConfiguration}}{{config}{=}{{ConfigurationSupport}{.}{getConfiguration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{invocation}{.}{getInvocation}{()}}{,}{{invocation}{.}{getMatchers}{()}}{)}{;}}{{{{this}{.}{answers}}{.}{add}{(}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{Result}{(}{{{Answer}}{value}}{)}{{{}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addConsecutiveReturnValue}{(}{{{Object}}{value}}{)}{{{}{{{{stubbed}{.}{getFirst}{()}}{.}{addAnswer}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AnswerFactoryTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{{stubbed}{.}{getFirst}{()}}{.}{addAnswer}{(}{{AnswerFactory}{.}{createThrowResult}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Answer}}{result}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{AnswerFactory}{.}{createThrowResult}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Answer}}{{result}{=}{{AnswerFactory}{.}{createThrowingAnswer}{(}{{new}{{RuntimeException}}{()}}{,}{filterStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{AnswerFactory}{.}{createThrowingAnswer}{(}{{new}{{RuntimeException}}{()}}{,}{{new}{{StackTraceFilter}}{()}}{)}}{.}{answer}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Answer}}{{result}{=}{{AnswerFactory}{.}{createReturningAnswer}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{result}{.}{answer}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{{stubbed}{.}{getFirst}{()}}{.}{addAnswer}{(}{{AnswerFactory}{.}{createThrowingAnswer}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{AnswerFactory}{.}{createThrowingAnswer}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{mock}{.}{oneArg}{(}{{(}{{Object}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{mock}{.}{oneArg}{(}{{(}{{Object}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{toString}{(}{{argumentsToMatchers}{()}}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Answer}}{{result}{=}{{factory}{.}{createReturningAnswer}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{result}{.}{answer}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{String}}{)}{{anyObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Answer}}{{answer}{=}{{answerFactory}{.}{createReturningAnswer}{(}{value}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{StubbedInvocationMatcher}}{s}}{:}{stubbed}{)}{{{}{{if}{(}{{s}{.}{matches}{(}{invocation}{)}}{)}{{{}{{return}{{s}{.}{answer}{(}{invocation}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{answer}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{factory}{.}{createThrowingAnswer}{(}{{new}{{RuntimeException}}{()}}{,}{null}{)}}{.}{answer}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Answer}}{{result}{=}{{factory}{.}{createReturningAnswer}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{result}{.}{answer}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{not}{(}{{isNotNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addConsecutiveAnswer}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addConsecutiveAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addAnswerForVoidMethod}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{stubber}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{null}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{stubber}{.}{addAnswer}{(}{{new}{{Returns}}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{state}{.}{stubbingStarted}{()}}{;}}{{{stubber}{.}{addAnswer}{(}{{new}{{Returns}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{state}{.}{validateState}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{{new}{{Exception}}{()}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setInstance}{(}{{{Object}}{mock}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{ClassWithDodgyConstructor}}{{mock}{=}{{factory}{.}{createMock}{(}{{{ClassWithDodgyConstructor}}{.}{class}}{,}{{new}{{MockAwareStub}}{()}}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ClassWithoutConstructor}}{{proxy}{=}{{factory}{.}{createMock}{(}{{{ClassWithoutConstructor}}{.}{class}}{,}{{new}{{MockAwareStub}}{()}}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SomeInterface}}{{proxy}{=}{{factory}{.}{createMock}{(}{{{SomeInterface}}{.}{class}}{,}{{new}{{MockAwareStub}}{()}}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{delegate}{.}{intercept}{(}{proxy}{,}{method}{,}{args}{,}{methodProxy}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{stubber}{.}{getResultFor}{(}{simpleMethod}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MyException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stubber}}{=}{{new}{{Stubber}}{(}{mockingProgress}{)}}}{;}}}
{AST_ROOT_SC2NF{{void}{setInstance}{(}{{{T}}{mock}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{StateMaster}{.}{reset}{()}}{;}}{{{mock}{=}{{Mockito}{.}{mock}{(}{{{IMethods}}{.}{class}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{StateMaster}{.}{reset}{()}}{;}}{{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}{{return}{{new}{{MethodSelectorImpl}}{(}{{new}{{ThrowsException}}{(}{toBeThrown}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}{{return}{{new}{{MethodSelectorImpl}}{(}{{new}{{Returns}}{(}{toBeReturned}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{doReturn}{(}{STRING_CONSTANT}{)}}{.}{when}{(}{{(}{{Object}}{)}{null}}{)}}{.}{toString}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addConsecutiveAnswer}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addConsecutiveAnswer}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addConsecutiveAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addAnswerForVoidMethod}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{VoidMethodStubbable}}{<}{{T}}{>}}{toReturn}{()}{{{}{{{mockitoStubber}{.}{addAnswerForVoidMethod}{(}{{new}{{Returns}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addAnswerForVoidMethod}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mockitoStubber}}{=}{{new}{{MockitoStubber}}{(}{mockingProgress}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{handler}{.}{voidMethodStubbable}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{Answer}}{>}}{answers}}{)}{{{}{{{mockitoStubber}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mockitoStubber}{.}{setMethodForStubbing}{(}{{new}{{InvocationMatcher}}{(}{simpleMethod}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{mockitoStubber}{.}{setMethodForStubbing}{(}{{new}{{InvocationMatcher}}{(}{simpleMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockUtil}{.}{createMock}{(}{classToMock}{,}{MOCKING_PROGRESS}{,}{name}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{validate}{(}{{new}{{DoesNothing}}{()}}{,}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{validate}{(}{{new}{{DoesNothing}}{()}}{,}{{{{new}{{InvocationBuilder}}{()}}{.}{simpleMethod}{()}}{.}{toInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DoesNothing}}{answer}}}
{AST_ROOT_SC2NF{{{{{{{doNothing}{()}}{.}{doNothing}{()}}{.}{doThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{.}{when}{(}{mock}{)}}{.}{voidMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{{Stubber}}{doNothing}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{answer}{instanceof}{{DoesNothing}}}{)}{{{}{{{validateDoNothing}{(}{{(}{{DoesNothing}}{)}{answer}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnDoAnswer}}{()}}{,}{{{UnfinishedVerificationException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnDoAnswer}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnDoAnswer}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{enhancer}{.}{setClassLoader}{(}{{SearchingClassLoader}{.}{combineLoadersOf}{(}{toMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{AtLeastXVerificationTest}}{.}{class}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mockitoStubber}{.}{answerTo}{(}{simpleMethod}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MyException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{InvocationOnMock}}{invocation}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportOngoingStubbing}{(}{{new}{{DeprecatedOngoingStubbingImpl}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mode}{.}{atLeastMode}{()}}{||}{{!}{{mode}{.}{matchesActualCount}{(}{{firstChunk}{.}{size}{()}}{)}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{neverWanted}{()}{{{}{{return}{{{!}{{atLeastMode}{()}}}{&&}{{wantedInvocationCount}{==}{NUMBER_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooManyActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{!}{{atLeastMode}{()}}}{&&}{{wantedInvocationCount}{<}{actualCount}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooLittleActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{!}{{atLeastMode}{()}}}{&&}{{wantedInvocationCount}{>}{actualCount}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{missingMethodMode}{()}{{{}{{return}{{{explicitMode}{()}}{&&}{{(}{{{atLeastMode}{()}}{||}{{wantedInvocationCount}{>}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{!}{{mocksToBeVerifiedInOrder}{.}{isEmpty}{()}}}{;}}{{return}{{new}{{VerificationModeImpl}}{(}{wantedNumberOfInvocations}{,}{null}{,}{mocksToBeVerifiedInOrder}{,}{Verification.EXPLICIT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{size}{()}}{)}}{.}{thenThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{size}{()}}{)}}{.}{thenThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{when}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{thenThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{thenThrow}{(}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{reader}{.}{read}{()}}{)}}{.}{thenThrow}{(}{ioException}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{thenThrow}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mockTwo}{.}{toString}{()}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{booleanReturningMethod}{()}}{)}}{.}{thenReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{thenReturn}{(}{Boolean.FALSE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{when}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{thenThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{when}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{thenThrow}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{when}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{thenReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{thenThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportOngoingStubbing}{(}{{new}{{OngoingStubbingImpl}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{oneArg}{(}{{anyString}{()}}{)}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{AssertionError}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{AssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{HasStackTrace}}{{lastInvocation}{=}{{finder}{.}{getLastStackTrace}{(}{actualInvocations}{)}}}{;}}{{{reporter}{.}{tooLittleActualInvocationsInAtLeastMode}{(}{{mode}{.}{wantedCount}{()}}{,}{actualCount}{,}{wanted}{,}{lastInvocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{mode}{.}{explicitMode}{()}}{||}{{mode}{.}{atLeastMode}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{atLeast}{=}{{{atLeastMode}{()}}{&&}{{actualCount}{>=}{wantedInvocationCount}}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{exactNumberOfInvocationsMode}{()}{{{}{{return}{{{!}{{inOrderMode}{()}}}{&&}{{(}{{{explicitMode}{()}}{||}{{atLeastMode}{()}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{VerificationModeImpl}}{noMoreInteractions}{()}{{{}{{return}{{new}{{VerificationModeImpl}}{(}{NUMBER_CONSTANT}{,}{{Collections}{.}{emptyList}{()}}{,}{Verification.NO_MORE_WANTED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldNeverVerifyWhenVerificationIsInAtLeastMode}{(}{)}{throws}{{Exception}}{{{}{{{assertFalse}{(}{{verifier}{.}{appliesTo}{(}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldNeverVerifyWhenVerificationIsExplicit}{(}{)}{throws}{{Exception}}{{{}{{{assertFalse}{(}{{verifier}{.}{appliesTo}{(}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{atLeastMode}{()}}}
{AST_ROOT_SC2NF{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{inOrderMode}{()}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{void}{verify}{(}{{{VerificationMode}}{mode}}{)}{{{}{{{verify}{(}{null}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{verificationMode}{=}{{mockingProgress}{.}{pullVerificationMode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{atLeastOnceInOrder}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{VerificationModeDecoder}{(}{{{VerificationMode}}{mode}}{)}{{{}{{{{this}{.}{mode}}{=}{mode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{{List}}{<}{{Invocation}}{>}}{invocations}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{VerificationMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationMode}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{missingMethodMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationMode}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{missingMethodInOrderMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{inOrderMode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationModeImpl}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{private}{{VerificationModeDecoder}}{decode}{(}{{{VerificationMode}}{mode}}{)}{{{}{{return}{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationMode}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{inOrderMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationMode}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{exactNumberOfInvocationsMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{assert}{{!}{{mocksToBeVerifiedInOrder}{.}{isEmpty}{()}}}{;}}{{return}{{new}{{InOrderVerificationMode}}{(}{minNumberOfInvocations}{,}{mocksToBeVerifiedInOrder}{,}{Verification.AT_LEAST}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{!}{{mocksToBeVerifiedInOrder}{.}{isEmpty}{()}}}{;}}{{return}{{new}{{InOrderVerificationMode}}{(}{wantedNumberOfInvocations}{,}{mocksToBeVerifiedInOrder}{,}{Verification.EXPLICIT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{=}{{new}{{VerifyingRecorder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{state}{.}{verificationStarted}{(}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{atLeastOnceInOrder}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{finder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedDifferentMethod}{)}}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{finder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedSimpleMethod}{)}}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{VerificationModeDecoder}{(}{{{MockitoVerificationMode}}{mode}}{)}{{{}{{{{this}{.}{mode}}{=}{mode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{MockitoVerificationModeTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeFactory}{.}{atLeast}{(}{minNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeFactory}{.}{times}{(}{wantedNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{{VerificationModeDecoder}}{decode}{(}{{{MockitoVerificationMode}}{mode}}{)}{{{}{{return}{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mode}{.}{verify}{(}{{new}{{VerificationDataImpl}}{(}{{getRegisteredInvocations}{()}}{,}{wanted}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{InvocationMatcher}}{getWanted}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnList}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnMap}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnList}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{missingInvocation}{.}{verify}{(}{{data}{.}{getAllInvocations}{()}}{,}{{data}{.}{getWanted}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{STRING_CONSTANT}{+}{{wantedCount}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AtMostXVerificationTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{registeredInvocations}}{=}{{new}{{RegisteredInvocations}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{{registeredInvocations}{.}{getAll}{()}}{,}{null}{)}}}{;}}{{{{VerificationModeFactory}{.}{noMoreInteractions}{()}}{.}{verify}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{{registeredInvocations}{.}{getAll}{()}}{,}{invocationMatcher}{)}}}{;}}{{{verificationMode}{.}{verify}{(}{data}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{RegisteredInvocationsTest}}{.}{class}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{mode}{instanceof}{{VerificationInOrderMode}}}{)}}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{{{mode}{.}{getClass}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoAssertionError}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{neverWanted}{()}{{{}{{return}{{{mode}{.}{wantedCount}{()}}{==}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooManyActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{mode}{.}{wantedCount}{()}}{<}{actualCount}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooLittleActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{mode}{.}{wantedCount}{()}}{>}{actualCount}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{MockitoVerificationMode}}{times}{(}{{int}{wantedNumberOfInvocations}}{)}{{{}{{return}{{new}{{MockitoVerificationMode}}{(}{wantedNumberOfInvocations}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Times}}{mode}}}
{AST_ROOT_SC2NF{{{Times}}{mode}}}
{AST_ROOT_SC2NF{{public}{VerificationModeDecoder}{(}{{{Times}}{mode}}{)}{{{}{{{{this}{.}{mode}}{=}{mode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TimesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{Times}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{mode}}}
{AST_ROOT_SC2NF{{private}{{VerificationModeDecoder}}{decode}{(}{{{Times}}{mode}}{)}{{{}{{return}{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Times}}{{atLeastOnceInOrder}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{mode}}}
{AST_ROOT_SC2NF{{return}{{Mockito}{.}{verify}{(}{mock}{,}{{new}{{InOrderWrapper}}{(}{{(}{{VerificationInOrderMode}}{)}{mode}}{,}{mocksToBeVerifiedInOrder}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{wantedCount}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{wanted}{,}{{mode}{.}{wantedCount}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{wantedNumberOfInvocations}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wantedCount}}{=}{wantedNumberOfInvocations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{wantedNumberOfInvocations}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wantedCount}}{=}{wantedNumberOfInvocations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{numberOfCalls}{.}{verify}{(}{allInvocations}{,}{wanted}{,}{wantedCount}{)}}{;}}}
{AST_ROOT_SC2NF{{wantedCount}{>}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.actualToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{assertNull}{(}{reporterStub.stackTrace}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.validMatchingChunkToReturn}{.}{add}{(}{{wanted}{.}{getInvocation}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.validMatchingChunkToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{wantedCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{{missingInvocation}{.}{check}{(}{allInvocations}{,}{wanted}{,}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{wantedCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{{missingInvocation}{.}{check}{(}{{data}{.}{getAllInvocations}{()}}{,}{{data}{.}{getWanted}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.validMatchingChunkToReturn}{.}{add}{(}{{wanted}{.}{getInvocation}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.validMatchingChunkToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checker}{=}{{new}{{NumberOfInvocationsInOrderChecker}}{(}{finderStub}{,}{reporter}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{=}{{new}{{MissingInvocationChecker}}{(}{finderStub}{,}{reporterStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{=}{{new}{{MissingInvocationInOrderChecker}}{(}{finderStub}{,}{reporterStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.actualToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{assertNull}{(}{reporterStub.stackTrace}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{=}{{new}{{NumberOfInvocationsChecker}}{(}{reporterStub}{,}{finderStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{numberOfCalls}{.}{check}{(}{allInvocations}{,}{wanted}{,}{wantedCount}{)}}{;}}}
{AST_ROOT_SC2NF{{{numberOfInvocations}{.}{check}{(}{{data}{.}{getAllInvocations}{()}}{,}{{data}{.}{getWanted}{()}}{,}{wantedCount}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbing}{==}{null}}{)}{{{}{{{MOCKING_PROGRESS}{.}{reset}{()}}{;}}{{{REPORTER}{.}{missingMethodInvocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{public}{{{DeprecatedOngoingStubbing}}{<}{{T}}{>}}{toReturn}{(}{{{T}}{value}}{)}{{{}{{return}{{toAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{NewOngoingStubbing}}{<}{{T}}{>}}{thenReturn}{(}{{{T}}{value}}{)}{{{}{{return}{{thenAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{handler}{=}{{new}{{MockHandler}}{(}{null}{,}{state}{,}{{new}{{ExceptionThrowingBinder}}{()}}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{returnValues}{.}{valueFor}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{name}{,}{null}{,}{USING_GLOBAL_CONFIG}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{null}{,}{null}{,}{USING_GLOBAL_CONFIG}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{mockedType}{.}{getSigners}{()}}{!=}{null}}{)}{{{}{{{enhancer}{.}{setNamingPolicy}{(}{NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES}{)}}{;}}{}}}{else}{{{}{{{enhancer}{.}{setNamingPolicy}{(}{MockitoNamingPolicy.INSTANCE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockingProgress}}{{state}{=}{{new}{{MockingProgressImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{verificationMode}{=}{null}}{;}}{{{{getLastArguments}{()}}{.}{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{getLastArguments}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ArgumentMatcherStorage}}{argumentMatcherStorage}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{verificationMode}{=}{null}}{;}}{{{{getArgumentMatcherStorage}{()}}{.}{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{getArgumentMatcherStorage}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{debuggingHelper}{.}{addStubbedInvocation}{(}{invocation}{)}}{;}}{{{stubbingInProgress}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExperimentalMockitoJUnitRunner}{(}{{{{Class}}{<}{?}{>}}{klass}}{)}{throws}{{InitializationError}}{{{}{{super}{(}{klass}{)}{;}}{{{logger}{=}{{new}{{MockitoLoggerImpl}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{shouldPrint}{()}{{{}{{return}{{{!}{{unusedStubs}{.}{isEmpty}{()}}}{||}{{!}{{unstubbedInvocations}{.}{isEmpty}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{byte}{[]}}{naughtyMethodUnderTestWhichDoesNotFailBecauseItReturnsAValue}{(}{{{String}}{filename}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addUnstubbedInvocation}{(}{{{InvocationMatcher}}{invocation}}{)}{{{}{{{unstubbedInvocations}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{invocation}{.}{isVoid}{()}}}{&&}{{answer}{==}{null}}}{)}{{{}{{{{mockingProgress}{.}{getDebuggingHelper}{()}}{.}{addPotentiallyUnstubbed}{(}{invocationMatcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{invocation}{.}{isVoid}{()}}}{&&}{{answer}{==}{null}}}{)}{{{}{{{{mockingProgress}{.}{getDebuggingInfo}{()}}{.}{addPotentiallyUnstubbed}{(}{invocationMatcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{println}{(}{{{Object}}{what}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{debuggingInfo}{.}{addStubbedInvocation}{(}{invocation}{)}}{;}}{{{stubbingInProgress}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{println}{()}{{{}{{{System.out}{.}{println}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExperimentalMockitoJUnitRunner}{(}{{{{Class}}{<}{?}{>}}{klass}}{)}{throws}{{InitializationError}}{{{}{{super}{(}{klass}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{log}{(}{{{Object}}{what}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{hasData}{()}}{)}{{{}{{{WarningsPrinter}}{{warningsPrinter}{=}{{new}{{WarningsPrinter}}{(}{unusedStubs}{,}{unstubbedInvocations}{)}}}{;}}{{{warningsPrinter}{.}{print}{(}{logger}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{addPotentiallyUnstubbed}{(}{{{InvocationMatcher}}{invocationMatcher}}{)}{{{}{{if}{(}{{!}{collectingData}}{)}{{{}{return;}{}}}}{{{unstubbedInvocations}{.}{add}{(}{invocationMatcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExperimentalMockitoJUnitRunnerPMStub}{(}{)}{throws}{{InitializationError}}{{{}{{super}{(}{{{ExperimentalMockitoJUnitRunnerPMTest}}{.}{class}}{,}{loggerStub}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{loggerStub}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{loggerStub}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{loggerStub}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{loggerStub}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{log}{(}{{{Object}}{what}}{)}{{{}{{{super}{.}{log}{(}{what}{)}}{;}}{{{loggedInfo}{.}{append}{(}{what}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{DEFAULT_RETURN_VALUES}{.}{valueFor}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{someUnusedStubbingThatQualifiesForWarning}{()}}{;}}{{{notifier}{.}{fireTestFailure}{(}{null}{)}}{;}}{{{assertTrue}{(}{{debuggingInfo}{.}{hasData}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EmptyReturnValuesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{HandyReturnValues}}{reportMatcher}{(}{{{Matcher}}{matcher}}{)}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{mock}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{RETURNS_SMART_NULLS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{mock}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{RETURNS_SMART_NULLS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setup}{()}{{{}{{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{Mockito.RETURNS_SMART_NULLS}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{name}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockName}}{mockName}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{unfinishedVerificationHere}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateState}{()}}{;}}{{{resetOngoingStubbing}{()}}{;}}{{{verificationMode}{=}{{new}{{Localized}}{(}{verify}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verify}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{firstTraceElement}}{=}{{{filter}{.}{filterStackTrace}{(}{stackTrace}{)}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{callback}{instanceof}{{MethodInterceptorFilter}}}{)}{{{}{{return}{{(}{{{MethodInterceptorFilter}}{<}{{{MockHandler}}{<}{{T}}{>}}{>}}{)}{callback}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ClickableStackTracesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{pluralize}{(}{actualCount}{)}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{{matcherStack}{.}{push}{(}{{new}{{LocalizedMatcher}}{(}{matcher}{)}}{)}}{;}}{{return}{{new}{{HandyReturnValues}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{expectedMessage}{,}{actualMessage}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocations}{(}{{new}{{Discrepancy}}{(}{wantedCount}{,}{actualCount}{)}}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocations}{(}{{new}{{AtLeastDiscrepancy}}{(}{wantedCount}{,}{actualCount}{)}}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocationsInOrder}{(}{{new}{{Discrepancy}}{(}{wantedCount}{,}{actualCount}{)}}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{Pluralizer}{.}{pluralize}{(}{wantedCount}{)}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocationsInOrder}{(}{{new}{{AtLeastDiscrepancy}}{(}{wantedCount}{,}{actualCount}{)}}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SmartNullPointerException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{spy}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{f}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{VerificationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{{VerificationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{{VerificationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{{VerificationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{message}{=}{{createTooLittleInvocationsMessage}{(}{discrepancy}{,}{wanted}{,}{lastActualStackTrace}{)}}}{;}}{{throw}{{new}{{VerificationInOrderFailure}}{(}{{join}{(}{{STRING_CONSTANT}{+}{message}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{VerificationInOrderFailure}}{(}{{join}{(}{{STRING_CONSTANT}{+}{message}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{stubbingInProgress}{)}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{reporter}{.}{unfinishedStubbing}{(}{{debuggingInfo}{.}{getLastInvocationLocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{expectedMessage}{,}{actualMessage}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{misplacedArgumentMatcherHere}{()}{{{}{{{anyString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mockitoStubber}{.}{setInvocationForPotentialStubbing}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocationMatcher}{()}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{VoidMethodStubbableImpl}}{<}{{T}}{>}}{(}{mock}{,}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{VoidMethodStubbableImpl}}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{stubbingInProgress}{)}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{reporter}{.}{unfinishedStubbing}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mockitoStubber}{.}{setInvocationForPotentialStubbing}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocationMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{null}}{;}}{{{verificationMode}{=}{null}}{;}}{{{{getArgumentMatcherStorage}{()}}{.}{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{debuggingInfo}{.}{addStubbedInvocation}{(}{invocation}{)}}{;}}{{{stubbingInProgress}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Throwable}}{{filtered}{=}{{throwable}{.}{fillInStackTrace}{()}}}{;}}{{{filter}{.}{filterStackTrace}{(}{filtered}{)}}{;}}{{throw}{filtered}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{invocation}{.}{getLocation}{()}}{,}{reporterStub.location}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{third}{.}{getLocation}{()}}{,}{reporterStub.location}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.actualToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{assertNull}{(}{reporterStub.location}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{second}{.}{getLocation}{()}}{,}{reporterStub.location}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{previousInOrder}{==}{null}}{)}{{{}{{{reporter}{.}{wantedButNotInvoked}{(}{wanted}{)}}{;}}{}}}{else}{{{}{{{reporter}{.}{wantedButNotInvokedInOrder}{(}{wanted}{,}{previousInOrder}{,}{{previousInOrder}{.}{getLocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Throwable}}{hasStackTrace}}}
{AST_ROOT_SC2NF{{{reporter}{.}{argumentsAreDifferent}{(}{{syncingPrinter}{.}{getWanted}{()}}{,}{{syncingPrinter}{.}{getActual}{()}}{,}{{similar}{.}{getLocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{noMoreInteractionsWanted}{(}{unverified}{,}{{unverified}{.}{getLocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{previous}{.}{getLocation}{()}}{,}{reporterStub.previousLocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{actualInvocation}{.}{getLocation}{()}}{,}{reporterStub.actualLocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{reporterStub.actualLocation}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{overloadedButSameArgs}{=}{{{!}{methodEquals}}{&&}{{argumentsMatch}{(}{{candidate}{.}{getArguments}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{expectedMatchersSize}{=}{{invocation}{.}{getArgumentsCount}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastInvocation}{=}{{finder}{.}{getLastLocation}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastInvocation}{=}{{finder}{.}{getLastLocation}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{previousInOrder}{==}{null}}{)}{{{}{{{reporter}{.}{wantedButNotInvoked}{(}{wanted}{)}}{;}}{}}}{else}{{{}{{{reporter}{.}{wantedButNotInvokedInOrder}{(}{wanted}{,}{previousInOrder}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{noMoreInteractionsWanted}{(}{unverified}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{STRING_CONSTANT}{+}{{{this}{.}{firstTraceElement}}{.}{toString}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{matcherStack}{.}{isEmpty}{()}}{)}{{{}{{return}{{Collections}{.}{emptyList}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{{new}{{ThreadSafeMockingProgress}}{()}}{.}{pullOngoingStubbing}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{ret}{.}{getClass}{()}}{.}{isArray}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{doAnswer}{(}{{new}{{Returns}}{(}{toBeReturned}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{doAnswer}{(}{{new}{{DoesNothing}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{doAnswer}{(}{{new}{{ThrowsException}}{(}{toBeThrown}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoCore}{.}{verifyNoMoreInteractions}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{mock}{(}{classToMock}{,}{null}{,}{{(}{{T}}{)}{null}}{,}{returnValues}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{mock}{(}{classToMock}{,}{name}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{mock}{(}{classToMock}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{mockitoCore}{.}{mock}{(}{{(}{{Class}}{)}{class1}}{,}{null}{,}{null}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{inOrder}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{Returns}}{(}{toBeReturned}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{DoesNothing}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{answer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{ThrowsException}}{(}{toBeThrown}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{stubVoid}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKITO_CORE}{.}{verifyNoMoreInteractions}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKITO_CORE}{.}{verifyNoMoreInteractions}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{verify}{(}{mock}{,}{mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKITO_CORE}{.}{reset}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{when}{(}{methodCall}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{stub}{(}{methodCall}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{null}{,}{{(}{{T}}{)}{null}}{,}{returnValues}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{name}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{MockUtil}{.}{resetMock}{(}{m}{,}{MOCKING_PROGRESS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{stubbingStarted}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{mocks}{==}{null}}{||}{{mocks.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{{reporter}{.}{mocksHaveToBePassedToVerifyNoMoreInteractions}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingStarted}{()}}{;}}{{return}{{(}{{NewOngoingStubbing}}{)}{{stub}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingStarted}{()}}{;}}{{return}{{(}{{DeprecatedOngoingStubbing}}{)}{{stub}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{super}{.}{makeStackTracesClean}{()}}{;}}}
{AST_ROOT_SC2NF{{{super}{.}{makeStackTracesClean}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{Mockito.RETURNS_SMART_NULLS}{)}}}{;}}{{{super}{.}{makeStackTracesClean}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{makeStackTracesClean}{()}}{;}}{{{first}{()}}{;}}{{{second}{()}}{;}}{{{third}{()}}{;}}{{{fourth}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{init}{()}{{{}{{{{new}{{StateMaster}}{()}}{.}{validate}{()}}{;}}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{StateMaster}}{()}}{.}{validate}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{anyObject}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{filter}{.}{filterConditionally}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{unfilteredStackTrace}{=}{{getStackTrace}{()}}}{;}}{{{StackTraceFilter}}{{filter}{=}{{new}{{StackTraceFilter}}{()}}}{;}}{{{filter}{.}{filterConditionally}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{filter}{.}{filterConditionally}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{filter}{.}{filterConditionally}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{firstTraceElement}}{=}{{{filter}{.}{filter}{(}{stackTrace}{)}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{cleanStackTraces}{()}{{{}{{{super}{.}{makeStackTracesClean}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{filter}{.}{filter}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidUseOfMatchersException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mockTwo}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{overloadedButSameArgs}{=}{{{!}{methodEquals}}{&&}{{safelyArgumentsMatch}{(}{{candidate}{.}{getArguments}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{anyObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{method}{,}{args}{,}{sequenceNumber}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestedObject}}{{mock}{=}{{mock}{(}{{{TestedObject}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{Person}{(}{{{Integer}}{age}}{)}{{{}{{{{this}{.}{age}}{=}{age}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{arguments}{.}{isEmpty}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{noArgumentValueWasCaptured}{()}}{;}}{}}}{else}{{{}{{return}{{(}{{T}}{)}{{arguments}{.}{getLast}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{anyObject}{()}}{;}}{{try}{{{}{{{Mockito}{.}{validateMockitoUsage}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvalidUseOfMatchersException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{Mockito}{.}{validateMockitoUsage}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedStubbingException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{verify}{(}{mock}{)}}{;}}{{try}{{{}{{{Mockito}{.}{validateMockitoUsage}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{capturingMatcher}}{.}{getAllValues}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{capturingMatcher}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{notifier}{.}{addListener}{(}{{new}{{FrameworkUsageValidator}}{(}{notifier}{)}}{)}}{;}}{{{legacyRunner}{.}{run}{(}{notifier}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{classProvider}{.}{isJUnit45OrHigherAvailable}{()}}{)}{{{}{{return}{{classProvider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}{else}{{{}{{return}{{classProvider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{RunnerFactory}{(}{{{RunnerProvider}}{classProvider}}{)}{{{}{{{{this}{.}{classProvider}}{=}{classProvider}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{runner}}{=}{{new}{{JUnit44RunnerImpl}}{(}{klass}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{runner}{.}{run}{(}{notifier}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{MockUtil}{.}{isMock}{(}{instance}{)}}{)}{{{}{{return}{{returnValues}{.}{valueFor}{(}{invocation}{)}}{;}}{}}}{else}{{{}{{return}{{methodProxy}{.}{invokeSuper}{(}{proxy}{,}{args}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{{new}{{ShallowCopyTool}}{()}}{.}{copyToMock}{(}{optionalInstance}{,}{mock}{)}}{;}}{}}}{{catch}{(}{{{UnableToCopyFieldValue}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldCallRealMethdsEvenDelegatedToOtherSelfMethod}{()}{{{}{{{String}}{{name}{=}{{spy}{.}{getName}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Name}}{guessName}{()}{{{}{{return}{defaultName}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getName}{()}{{{}{{return}{{{guessName}{()}}{.}{name}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{VoidMethodStubbableImpl}}{<}{{T}}{>}}{(}{mock}{,}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{null}{,}{name}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{null}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{configureWith}{()}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{classMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{interfaceMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{throwable}{)}}{)}{{{}{{throw}{throwable}{;}}{}}}}}
{AST_ROOT_SC2NF{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{instance}{)}}}
{AST_ROOT_SC2NF{{{{new}{{MockUtil}}{()}}{.}{getMockHandler}{(}{withFinal}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockName}}{{name}{=}{{{new}{{MockUtil}}{()}}{.}{getMockName}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mockUtil}{.}{getMockHandler}{(}{o}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{List}}{{mock}{=}{{Mockito}{.}{mock}{(}{{{List}}{.}{class}}{)}}}{;}}{{{assertNotNull}{(}{{mockUtil}{.}{getMockHandler}{(}{mock}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{fromSingleMock}{=}{{{{new}{{MockUtil}}{()}}{.}{getMockHandler}{(}{mock}{)}}{.}{getRegisteredInvocations}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandler}}{<}{{T}}{>}}{{handler}{=}{{mockUtil}{.}{getMockHandler}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mock}{==}{null}}{)}{{{}{{{reporter}{.}{nullPassedWhenCreatingInOrder}{()}}{;}}{}}}{else}{{if}{(}{{!}{{mockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{{reporter}{.}{notAMockPassedWhenCreatingInOrder}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mock}{==}{null}}{)}{{{}{{{reporter}{.}{nullPassedToVerifyNoMoreInteractions}{()}}{;}}{}}}}{{{{mockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{verifyNoMoreInteractions}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{mockUtil}{.}{resetMock}{(}{m}{,}{mockingProgress}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mock}{==}{null}}{)}{{{}{{{reporter}{.}{nullPassedToVerify}{()}}{;}}{}}}{else}{{if}{(}{{!}{{mockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{{reporter}{.}{notAMockPassedToVerify}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{validateState}{()}}{;}}{{{mockingProgress}{.}{resetOngoingStubbing}{()}}{;}}{{return}{{mockUtil}{.}{createMock}{(}{classToMock}{,}{mockingProgress}{,}{{(}{{MockSettingsImpl}}{)}{mockSettings}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{IMethods}}{.}{class}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Foo}}{.}{class}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{IFoo}}{.}{class}}{,}{null}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Foo}}{{mock}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{IFoo}}{.}{class}}{,}{{{IBar}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{MOCKITO_CORE}{.}{mock}{(}{{(}{{{Class}}{<}{{T}}{>}}{)}{{object}{.}{getClass}{()}}}{,}{{{{withSettings}{()}}{.}{spiedInstance}{(}{object}{)}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultBehavior}{(}{returnValues}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{{withSettings}{()}}{.}{name}{(}{name}{)}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldScreamWhenExtraIsTheSame}{()}{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{IMethods}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldScreamWhenNonInterfacePassed}{()}{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{LinkedList}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{List}}{.}{class}}{,}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultBehavior}{(}{returnValues}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockSettingsImpl}}{{settings}{=}{{(}{{MockSettingsImpl}}{)}{{Mockito}{.}{withSettings}{()}}}}{;}}{{{assertEquals}{(}{Mockito.RETURNS_DEFAULTS}{,}{{settings}{.}{getDefaultAnswer}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{defaultAnswer}{(}{RETURNS_SMART_NULLS}{)}}{.}{name}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{mockSettings}{.}{getDefaultAnswer}{()}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{values}{.}{answer}{(}{{invocationOf}{(}{{{StringMethods}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{ret}{=}{{(}{{{String}}{[]}}{)}{{values}{.}{answer}{(}{{invocationOf}{(}{{{StringMethods}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}}}}
{AST_ROOT_SC2NF{{public}{static}{{MockSettings}}{withSettings}{()}{{{}{{return}{{{new}{{MockSettingsImpl}}{()}}{.}{defaultAnswer}{(}{RETURNS_DEFAULTS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{CallsRealMethods}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{MOCKITO_CORE}{.}{mock}{(}{{(}{{{Class}}{<}{{T}}{>}}{)}{{object}{.}{getClass}{()}}}{,}{{{{withSettings}{()}}{.}{spiedInstance}{(}{object}{)}}{.}{defaultAnswer}{(}{RETURNS_DEFAULTS}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{{{withSettings}{()}}{.}{name}{(}{name}{)}}{.}{defaultAnswer}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultAnswer}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ReturnsEmptyValuesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideCleansStackTrace}{(}{false}{)}}{;}}{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideDefaultAnswer}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{runner}{=}{{new}{{ConsoleSpammingMockitoJUnitRunner}}{(}{{{DummyTest}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Object}}{answer}{(}{{{InvocationOnMock}}{invocation}}{)}{throws}{{Throwable}}{{{}{{return}{{invocation}{.}{callRealMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MOCKITO_CORE}{.}{mock}{(}{{(}{{{Class}}{<}{{T}}{>}}{)}{{object}{.}{getClass}{()}}}{,}{{{{withSettings}{()}}{.}{spiedInstance}{(}{object}{)}}{.}{defaultAnswer}{(}{CALLS_REAL_METHODS}{)}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{throw}{t}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{firstTraceElement}}{=}{{{filter}{.}{filter}{(}{stackTrace}{,}{NUMBER_CONSTANT}{)}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{firstTraceElement}}{=}{{{filter}{.}{filter}{(}{stackTrace}{,}{false}{)}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{{throwable}{.}{getStackTrace}{()}}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{{new}{{{StackTraceElement}}{[}}{NUMBER_CONSTANT}{]}}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{line}{=}{{printer}{.}{getArgumentsLine}{(}{{(}{{List}}{)}{{Arrays}{.}{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{NotNull.NOT_NULL}{)}}}{,}{{PrintSettings}{.}{verboseMatchers}{()}}{)}}}}
{AST_ROOT_SC2NF{{printer}{.}{getArgumentsBlock}{(}{{(}{{List}}{)}{{Arrays}{.}{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{)}}}{,}{{PrintSettings}{.}{verboseMatchers}{()}}{)}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getVerboseSelfDescribing}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getVerboseSelfDescribing}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setMatchersToBePrintedVerbosely}{(}{{{{Integer}}{[]}}{toBePrintedVerbosely}}{)}{{{}{{{{this}{.}{verboseMatchers}}{=}{{Arrays}{.}{asList}{(}{toBePrintedVerbosely}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Integer}}{.}{.}{.}{verboselyPrinted}}}
{AST_ROOT_SC2NF{{{Integer}}{.}{.}{.}{toBePrintedVerbosely}}}
{AST_ROOT_SC2NF{{{}{{{withPrintSettings}{.}{add}{(}{{{(}{{(}{{CanPrintArgumentVerbosely}}{)}{matcher}}{)}}{.}{getSelfDescribingVerbosely}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{SelfDescribing}}{getSelfDescribingVerbosely}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getSelfDescribingVerbosely}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getSelfDescribingVerbosely}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsExtraTypeInformation}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{m}{.}{withExtraTypeInfo}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verify}{(}{withFinal}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{public}{BDDOngoingStubbingImpl}{(}{{{{OngoingStubbing}}{<}{{T}}{>}}{ongoingStubbing}}{)}{{{}{{{{this}{.}{mockitoOngoingStubbing}}{=}{ongoingStubbing}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Field}}{{createInfoField}{=}{{reflectOnCreateInfo}{(}{methodProxy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getInterceptor}{(}{mock}{)}}{.}{getMockHandler}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{capturingMatcher}{)}}{;}}{{return}{{{new}{{HandyReturnValues}}{()}}{.}{returnFor}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{String}}{>}}{{captor}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{String}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{Person}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{String}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{String}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{Person}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{Person}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{person}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{Person}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{Person}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{Person}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{capturingMatcher}{)}}{;}}{{return}{{handyReturnValues}{.}{returnFor}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{String}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{String}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{newMessage}{+=}{{STRING_CONSTANT}{+}{{debuggingInfo}{.}{getWarnings}{()}}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{newMessage}{+=}{{STRING_CONSTANT}{+}{{debuggingInfo}{.}{getWarnings}{(}{false}{)}}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{private}{{String}}{thisStubWasNotUsed}{(}{{{Invocation}}{i}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{i}{.}{getLocation}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{unusedStubs}{,}{unstubbedInvocations}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{invocationMarker}{.}{markVerified}{(}{actualInvocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{wantedNumberOfInvocations}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wantedCount}}{=}{wantedNumberOfInvocations}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{int}{hashCodeForMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{System}{.}{identityHashCode}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{MockHandler}}{)}{{{getInterceptor}{(}{mock}{)}}{.}{getMockHandler}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{mockUtil}{.}{resetMock}{(}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{isToString}{(}{{{InvocationOnMock}}{invocation}}{)}{{{}{{return}{{ObjectMethodsGuru}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ObjectMethodsGuru}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{objectMethodsGuru}{.}{isEqualsMethod}{(}{method}{)}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{newFilter}{=}{{new}{{MethodInterceptorFilter}}{(}{newMockHandler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{mockHandler}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{objectMethodsGuru}{.}{isHashCodeMethod}{(}{method}{)}}{)}{{{}{{return}{{hashCodeForMock}{(}{proxy}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{isToString}{(}{{{InvocationOnMock}}{invocation}}{)}{{{}{{return}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{marker}{.}{markVerified}{(}{{chunk}{.}{get}{(}{NUMBER_CONSTANT}{)}}{,}{wantedMatcher}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{{new}{{ArgumentsComparator}}{()}}{.}{argumentsMatch}{(}{this}{,}{actualArgs}{)}}{;}}{}}}{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{false}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{,}{capturingMatcher}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{proxy}{.}{setCallbacks}{(}{{new}{{{Callback}}{[]}}{{{}{interceptor}{,}{SerializableNoOp.SERIALIZABLE_INSTANCE}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{methodProxy}{.}{getMethodProxy}{()}}{.}{invokeSuper}{(}{target}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{CGLIBProxyRealMethod}{(}{{{MockitoMethodProxy}}{methodProxy}}{)}{{{}{{{{this}{.}{methodProxy}}{=}{methodProxy}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{FilteredCGLIBProxyRealMethod}{(}{{{MockitoMethodProxy}}{methodProxy}}{)}{{{}{{this}{(}{{new}{{CGLIBProxyRealMethod}}{(}{methodProxy}{)}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Any}}{{mock}{=}{{mock}{(}{{{Any}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{methodProxy}{.}{invokeSuper}{(}{target}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MockitoMethod}}{getMethod}{()}{{{}{{return}{{invocation}{.}{getMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoMethod}}{method}}}
{AST_ROOT_SC2NF{{{MockitoMethod}}{getMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{{new}{{SerializableMockitoMethod}}{(}{method}{)}}{,}{args}{,}{sequenceNumber}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{ObjectOutputStream}}{(}{{new}{{ByteArrayOutputStream}}{()}}{)}}{.}{writeObject}{(}{{new}{{MethodInterceptorFilter}}{(}{null}{,}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{mockHandler}{,}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{{new}{{MockitoMethod}}{(}{testBaseToStringMethod}{)}}{.}{equals}{(}{mockMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockMethod}{=}{{new}{{MockitoMethod}}{(}{toStringMethod}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{Class}}{<}{?}{>}}{getReturnType}{()}{{{}{{return}{returnType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoMethod}}{{mockitoMethod}{=}{{new}{{MockitoMethod}}{(}{method}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{{new}{{MockitoMethod}}{(}{method}{)}}{,}{args}{,}{sequenceNumber}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{{new}{{SerializableMethod}}{(}{testBaseToStringMethod}{)}}{.}{equals}{(}{mockMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockMethod}{=}{{new}{{SerializableMethod}}{(}{toStringMethod}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{SerializableMethod}}{getMethod}{()}{{{}{{return}{{invocation}{.}{getMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SerializableMethod}}{getMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{SerializableMethod}}{method}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{{new}{{SerializableMethod}}{(}{method}{)}}{,}{args}{,}{sequenceNumber}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Method}}{getMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{Method}}{getMethod}{()}{{{}{{return}{{invocation}{.}{getMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isDeclaredOnInterface}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotCallRealMethodOnInterface}{()}}{;}}{}}}}{{return}{{realMethod}{.}{invoke}{(}{mock}{,}{rawArguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{invocation}{.}{isDeclaredOnInterface}{()}}{)}{{{}{{{reporter}{.}{cannotCallRealMethodOnInterface}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{MockitoMethod}}{method}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isPrimitiveWrapper}{(}{clazz}{)}}{)}{{{}{{return}{{primitiveWrapperOf}{(}{clazz}{)}}{;}}{}}}}{{return}{{primitiveValueOrNullFor}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MethodProxy}}{getMethodProxy}{()}{{{}{{return}{methodProxy}{;}}{}}}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{allInvocations}{=}{{ongoingStubbing}{.}{getRegisteredInvocations}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{mockitoStubber}{.}{getRegisteredInvocations}{()}}{.}{removeLast}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{{ConsecutiveStubbing}}{<}{{T}}{>}}{(}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{mockitoStubber}{.}{getRegisteredInvocations}{()}}{.}{removeLast}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{{ConsecutiveStubbing}}{<}{{T}}{>}}{(}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{OngoingStubbingImpl}}{<}{{T}}{>}}{{ongoingStubbing}{=}{{new}{{{OngoingStubbingImpl}}{<}{{T}}{>}}{(}{mockitoStubber}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{addAnswer}{(}{{{Answer}}{answer}}{)}{{{}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{addAnswer}{(}{answer}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MockHandler}{(}{{{{MockHandler}}{<}{{T}}{>}}{oldMockHandler}}{)}{{{}{{this}{(}{oldMockHandler.mockingProgress}{,}{oldMockHandler.matchersBinder}{,}{oldMockHandler.mockSettings}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{handler}{.}{handle}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{MockHandler}}{)}{{{getInterceptor}{(}{mock}{)}}{.}{getHandler}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{handler}{,}{{(}{{MockSettingsImpl}}{)}{{withSettings}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{handler}{,}{{(}{{MockSettingsImpl}}{)}{{withSettings}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{handler}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{handler}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{validateState}{()}}{;}}{{{mockingProgress}{.}{resetOngoingStubbing}{()}}{;}}{{return}{{mockUtil}{.}{createMock}{(}{classToMock}{,}{{(}{{MockSettingsImpl}}{)}{mockSettings}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MockName}}{getMockName}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{{getMockHandler}{(}{mock}{)}}{.}{getMockSettings}{()}}{.}{getMockName}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MockHandler}{()}{{{}{{this}{(}{{new}{{MockSettingsImpl}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{invocationContainerImpl}{.}{addAnswerForVoidMethod}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{VoidMethodStubbable}}{<}{{T}}{>}}{toReturn}{()}{{{}{{{invocationContainerImpl}{.}{addAnswerForVoidMethod}{(}{{new}{{DoesNothing}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{invocationContainerImpl}{.}{addAnswerForVoidMethod}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{invocationContainerImpl}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{null}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{state}{.}{stubbingStarted}{()}}{;}}{{{invocationContainerImpl}{.}{addAnswer}{(}{{new}{{Returns}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{state}{.}{validateState}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{invocationContainerImpl}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{{new}{{Exception}}{()}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{invocationContainerImpl}{.}{addConsecutiveAnswer}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{invocationContainerImpl}{.}{addConsecutiveAnswer}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{Answer}}{>}}{answers}}{)}{{{}{{{invocationContainerImpl}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{VoidMethodStubbableImpl}}{<}{{T}}{>}}{(}{mock}{,}{invocationContainerImpl}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{{invocationContainerImpl}{.}{getInvocations}{()}}{,}{null}{)}}}{;}}{{{{VerificationModeFactory}{.}{noMoreInteractions}{()}}{.}{verify}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{invocationContainerImpl}}{=}{{new}{{InvocationContainerImpl}}{(}{mockingProgress}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{i}{.}{stubInfo}{()}}{!=}{null}}{)}{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{{{i}{.}{stubInfo}{()}}{.}{stubbedAt}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{printInvocations}{(}{{{Object}}{.}{.}{.}{mocks}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{mockSettings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{varargs}{(}{{{String}}{.}{.}{.}{string}}{)}{;}}}
{AST_ROOT_SC2NF{{int}{varargs}{(}{{{Object}}{.}{.}{.}{object}}{)}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{allInvocations}{=}{{{new}{{AllInvocationsFinder}}{()}}{.}{find}{(}{mocksToBeVerifiedInOrder}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{finder}{.}{find}{(}{{asList}{(}{mockOne}{,}{mockOne}{,}{mockOne}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{finder}{.}{find}{(}{{asList}{(}{mockOne}{,}{mockTwo}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{log}{(}{{{Object}}{what}}{)}{{{}{{{System.out}{.}{print}{(}{{what}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{stubbingInProgress}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{InvocationMatcher}}{i}}{:}{allInvocations}{)}{{{}{{{findingsListener}{.}{foundUnstubbed}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{listener}{,}{{only}{()}}{)}}{.}{foundUnstubbed}{(}{unstubbedInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{foundUnstubbed}{(}{{{InvocationMatcher}}{unstubbed}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{ConsoleMockitoLogger}}{()}}{,}{{{new}{{RunnerFactory}}{()}}{.}{create}{(}{klass}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{cleanStackTraces}{()}{{{}{{{super}{.}{makeStackTracesClean}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MockUtil}{(}{{{MockCreationValidator}}{creationValidator}}{)}{{{}{{{{this}{.}{creationValidator}}{=}{creationValidator}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{isEmpty}{(}{{{String}}{warnings}}{)}{{{}{{return}{{{warnings}{==}{null}}{||}{{STRING_CONSTANT}{.}{equals}{(}{warnings}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SimpleTestCase}}{{test}{=}{{new}{{SimpleTestCase}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleTestCase}}{{test}{=}{{new}{{SimpleTestCase}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferent}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{instance}{==}{null}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{field}{.}{getName}{()}}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{log}{=}{{{NewMockito}{.}{debug}{()}}{.}{printInvocations}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{log}{=}{{{NewMockito}{.}{debug}{()}}{.}{printInvocations}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{log}{=}{{{NewMockito}{.}{debug}{()}}{.}{printInvocations}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMocks}}{{Object}}{{iAmNull}{=}{null}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMocks}}{{@}{Captor}}{{ArgumentCaptor}}{{captor}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMocks}}{{@}{Mock}}{{List}}{{mock}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMocks}}{{@}{Spy}}{{List}}{{mock}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{null}{!=}{{field}{.}{getAnnotation}{(}{{{InjectMocks}}{.}{class}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{field}{.}{isAnnotationPresent}{(}{annotation}{)}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{unsupportedCombinationOfAnnotations}{(}{{annotation}{.}{getSimpleName}{()}}{,}{{{{InjectMocks}}{.}{class}}{.}{getSimpleName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{field}{.}{isAnnotationPresent}{(}{{{InjectMocks}}{.}{class}}{)}}}
{AST_ROOT_SC2NF{{{}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.validMatchingChunkToReturn}{.}{add}{(}{{wanted}{.}{getInvocation}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.validMatchingChunkToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{mockitoCore}{.}{verify}{(}{mock}{,}{{new}{{InOrderWrapper}}{(}{{(}{{VerificationInOrderMode}}{)}{mode}}{,}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{invocation}{.}{isVoid}{()}}{)}{{{}{{{reporter}{.}{cannotStubVoidMethodWithAReturnValue}{(}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{invocationContainerImpl}{,}{invocationMatcher}{)}}}{;}}{{{verificationMode}{.}{verify}{(}{data}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{Thread}{.}{sleep}{(}{sleep}{)}}{;}}{}}}{{catch}{(}{{{InterruptedException}}{ie}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{t}{.}{verify}{(}{data}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{public}{{InvocationMatcher}}{getWanted}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{InOrderContext}}{getOrderingContext}{()}{{{}{{return}{inOrder}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{join}{(}{{STRING_CONSTANT}{+}{methodName}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnFor}{(}{clazz}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{{instance}{=}{{{new}{{FieldInitializer}}{(}{testClass}{,}{field}{)}}{.}{initialize}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{field}{.}{getType}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{field}{.}{getType}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{field}{.}{getType}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{field}{.}{getType}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{NestedClassWithNoArgConstructor}{(}{{{String}}{f}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{{reporter}{.}{notAMockPassedToVerify}{(}{{mock}{.}{getClass}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{validateMostStuff}{()}}{;}}}
{AST_ROOT_SC2NF{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{formatMethodCall}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{Reporter}}{()}}{.}{smartNullPointerException}{(}{{invocation}{.}{toString}{()}}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{invocation}{.}{toString}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{null}{!=}{{field}{.}{getAnnotation}{(}{{{org.mockito.MockitoAnnotations.Mock}}{.}{class}}{)}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{testClass}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{filter}{.}{accept}{(}{actualMethod}{,}{actualMethods}{)}}}{;}}}
{AST_ROOT_SC2NF{{{notifyAllInvocationListener}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandler}}{<}{?}{>}}{handler}}}
{AST_ROOT_SC2NF{{{}{{{{given}{(}{{{handler}{.}{getMockSettings}{()}}{.}{getDefaultAnswer}{()}}{)}}{.}{willReturn}{(}{SOME_ANSWER}{)}}{;}}{{{stubOrdinaryInvocationWithInvocationMatcher}{(}{handler}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{doThrow}{(}{SOME_EXCEPTION}{)}}{.}{when}{(}{throwingListener}{)}}}
{AST_ROOT_SC2NF{{public}{{OngoingMockInjection}}{tryPropertyOrFieldInjection}{()}{{{}{{{injectionStrategies}{.}{thenTry}{(}{{new}{{PropertyAndSetterInjection}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{OngoingMockInjection}}{tryConstructorInjection}{()}{{{}{{{injectionStrategies}{.}{thenTry}{(}{{new}{{ConstructorInjection}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{nextStrategy}{!=}{null}}{&&}{{nextStrategy}{.}{process}{(}{field}{,}{fieldOwner}{,}{mockCandidates}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{wasAccessible}{!=}{null}}{:}{STRING_CONSTANT}{;}}{{try}{{{}{{{accessibleObject}{.}{setAccessible}{(}{wasAccessible}{)}}{;}}{}}}{{catch}{(}{{{Throwable}}{t}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{VerifiableInvocationsFinder}}{{finder}{=}{{new}{{VerifiableInvocationsFinder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{InvocationListener}}{listener}}{:}{{mockSettings}{.}{getInvocationListeners}{()}}{)}{{{}{{{notifyListenerOfInvocationWithException}{(}{invocation}{,}{exception}{,}{listener}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{InvocationListener}}{listener}}{:}{{mockSettings}{.}{getInvocationListeners}{()}}{)}{{{}{{{notifyListenerOfInvocationWithReturnValue}{(}{invocation}{,}{returnValue}{,}{listener}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{given}{(}{{{handler}{.}{getMockSettings}{()}}{.}{getInvocationListeners}{()}}{)}}{.}{willReturn}{(}{{Arrays}{.}{asList}{(}{listener}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{shouldThrowCorrectExceptionForNullInvocationListener}{(}{)}{throws}{{Exception}}{{{}{{{{new}{{Reporter}}{()}}{.}{invocationListenerDoesNotAcceptNullParameters}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{{withSettings}{()}}{.}{invocationListeners}{(}{listener1}{)}}{.}{invocationListeners}{(}{listener2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{invocationListeners}{(}{listener}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{{withSettings}{()}}{.}{invocationListeners}{(}{listener1}{)}}{.}{invocationListeners}{(}{listener2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{invocationListeners}{(}{listener}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertFalse}{(}{{mockSettingsImpl}{.}{hasInvocationListeners}{()}}{)}}{;}}{{{mockSettingsImpl}{.}{verboseLogging}{()}}{;}}{{{assertContainsType}{(}{{mockSettingsImpl}{.}{getInvocationListeners}{()}}{,}{{{VerboseMockInvocationLogger}}{.}{class}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MethodInvocationReport}}{mcr}}}
{AST_ROOT_SC2NF{{public}{void}{invocationListenersRequiresAtLeastOneListener}{()}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{invocationListenerDoesNotAcceptNullParameters}{()}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{notifier}{.}{handle}{(}{invocation}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{notifier}{.}{handle}{(}{invocation}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockSettingsImpl}{.}{invocationListeners}{(}{invocationListener}{,}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockSettingsImpl}{.}{invocationListeners}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mapOngoingStubbing}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{{URL}}{[]}}{{{}{{obtainClassPath}{()}}{,}{{obtainClassPath}{(}{STRING_CONSTANT}{)}}{}}}}{,}{parentClassLoader}{)}{;}}{{{{this}{.}{reloadClassPredicate}}{=}{reloadClassPredicate}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{{URL}}{[]}}{{{}{{obtainClassPath}{()}}{,}{{obtainClassPath}{(}{STRING_CONSTANT}{)}}{}}}}{)}{;}}{{{{this}{.}{reloadClassPredicate}}{=}{reloadClassPredicate}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{report}{.}{fieldWasInitializedUsingContructorArgs}{()}}{;}}}
{AST_ROOT_SC2NF{{{mocks}{.}{addAll}{(}{{scanAndPrepareMocks}{(}{testClassInstance}{,}{clazz}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{inject_mocks_even_in_declared_spy}{(}{)}{throws}{{Exception}}{{{}{{{assertNotNull}{(}{spiedReceiver.oldAntenna}{)}}{;}}{{{assertNotNull}{(}{spiedReceiver.tuner}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{InjectMocksScanner}}{(}{clazz}{)}}{.}{addTo}{(}{mockDependentFields}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{MockHandlerInterface}}{)}{{mockMaker}{.}{getHandler}{(}{mock}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{canThrowException}{(}{)}{throws}{{CharacterCodingException}}{;}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{mockSettings}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{settings}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{settings}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{settings}}}
{AST_ROOT_SC2NF{{public}{void}{setTheField}{(}{{final}{{File}}{theField}}{)}{{{}{{{theFieldSetterWasUsed}{=}{true}}{;}}{{{{this}{.}{theField}}{=}{theField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{{configClass}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{misplaced_anyBoolean_argument_matcher}{()}{{{}{{{anyBoolean}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{misplaced_anyInt_argument_matcher}{()}{{{}{{{anyInt}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{misplaced_anyObject_argument_matcher}{()}{{{}{{{anyObject}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LocalizedMatcher}}{>}}{pullLocalizedMatchers}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Object}}{>}}{{mocks}{=}{{newMockSafeHashSet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Object}}{>}}{{mocks}{=}{{newMockSafeHashSet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{delegatedInstance}}{=}{delegatedInstance}}{;}}{{return}{{defaultAnswer}{(}{{new}{{ForwardsInvocations}}{(}{{this}{.}{delegatedInstance}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{getSequenceNumber}{()}{{{}{{return}{sequenceNumber}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{expectedMatchersSize}{=}{{{invocation}{.}{getArguments}{()}}{.}{length}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{this}{.}{getMethod}{()}}{.}{getDeclaringClass}{()}}{.}{isInterface}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotCallRealMethodOnInterface}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{List}}{{matchers}{=}{{Invocation}{.}{argumentsToMatchers}{(}{{i}{.}{getArguments}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{{new}{{PrintSettings}}{()}}{.}{print}{(}{matchers}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{matchers}}{=}{{Invocation}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{matchers}}{=}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{print}{(}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{{new}{{PrintSettings}}{()}}{.}{print}{(}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{getArguments}{()}}{)}}{,}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arguments}}{=}{{ArgumentsProcessor}{.}{expandVarArgs}{(}{{mockitoMethod}{.}{isVarArgs}{()}}{,}{args}{)}}}{;}}}
{AST_ROOT_SC2NF{{{List}}{{matchers}{=}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{i}{.}{getArguments}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{NoInteractionsWanted}}{(}{{join}{(}{STRING_CONSTANT}{,}{{new}{{LocationImpl}}{()}}{,}{STRING_CONSTANT}{,}{{undesired}{.}{getLocation}{()}}{,}{scenario}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{wanted}{.}{toString}{()}}{,}{{new}{{LocationImpl}}{()}}{,}{STRING_CONSTANT}{,}{{previous}{.}{toString}{()}}{,}{{previous}{.}{getLocation}{()}}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{new}{{LocationImpl}}{()}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{location}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{location}}}
{AST_ROOT_SC2NF{{public}{Localized}{(}{{{T}}{object}}{)}{{{}{{{{this}{.}{object}}{=}{object}}{;}}{{{location}{=}{{new}{{LocationImpl}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{actualLocation}}}
{AST_ROOT_SC2NF{{public}{{LocationImpl}}{getLocation}{()}{{{}{{return}{{invocation}{.}{getLocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{last}{=}{{finder}{.}{getLastLocation}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{location}}{=}{{new}{{LocationImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loc}{=}{{{new}{{LocationImpl}}{(}{filterReturningEmptyArray}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{lastLocation}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{actualMatcher}}{=}{actualMatcher}}{;}}{{{{this}{.}{location}}{=}{{new}{{LocationImpl}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{actualLocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{}{{{LocationImpl}}{{location}{=}{{verificationMode}{.}{getLocation}{()}}}{;}}{{{verificationMode}{=}{null}}{;}}{{{reporter}{.}{unfinishedVerificationException}{(}{location}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbingInProgress}{!=}{null}}{)}{{{}{{{LocationImpl}}{{temp}{=}{stubbingInProgress}}{;}}{{{stubbingInProgress}{=}{null}}{;}}{{{reporter}{.}{unfinishedStubbing}{(}{temp}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{invocation}{.}{markStubbed}{(}{{new}{{StubInfoImpl}}{(}{stubbedInvocation}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{+=}{{line}{(}{{STRING_CONSTANT}{+}{{{{i}{.}{stubInfo}{()}}{.}{stubbedAt}{()}}{.}{toString}{()}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{s}{.}{markStubUsed}{(}{invocation}{)}}{;}}{{{invocation}{.}{markStubbed}{(}{{new}{{StubInfoImpl}}{(}{s}{)}}{)}}{;}}{{return}{s}{;}}{}}}}
{AST_ROOT_SC2NF{{{isMultiline}{()}}{||}{{(}{{{!}{{matchers}{.}{isEmpty}{()}}}{&&}{{{invocationString}{.}{length}{()}}{>}{MAX_LINE_LENGTH}}}{)}}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{{{threadSafely}{()}}{.}{stubbingCompleted}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{undesired}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{undesired}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{handler}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{InvocationImpl}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{handler}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{InvocationImpl}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{foundUnusedStub}{(}{{{InvocationImpl}}{unused}}{)}{{{}{{{logger}{.}{log}{(}{{STRING_CONSTANT}{+}{{unused}{.}{getLocation}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{unused}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{InvocationImpl}}{i}}{)}{{{}{{{verified}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{verified}{.}{contains}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocationOnInterface}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{previous}{=}{{finder}{.}{findPreviousVerifiedInOrder}{(}{invocations}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{finder}{.}{getLastLocation}{(}{{Collections}{.}{<}{{InvocationImpl}}{>}{emptyList}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocationOnClass}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{i}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{candidate}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{candidate}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{public}{{InvocationImpl}}{getInvocation}{()}{{{}{{return}{{this}{.}{invocation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InvocationMatcher}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{this}{(}{invocation}{,}{{Collections}{.}{<}{{Matcher}}{>}{emptyList}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{WarningsFinder}}{{finder}{=}{{new}{{WarningsFinder}}{(}{{Arrays}{.}{<}{{InvocationImpl}}{>}{asList}{()}}{,}{{Arrays}{.}{<}{{InvocationMatcher}}{>}{asList}{(}{unstubbedInvocation}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{!}{{orderingContext}{.}{isVerified}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{!}{{wanted}{.}{matches}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{add}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{{invocations}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{ExposedInvocation}{(}{{{InvocationImpl}}{toBeExposed}}{)}{{{}{{{methodProxy}{=}{{{(}{{(}{{HasCGLIBMethodProxy}}{)}{toBeExposed.realMethod}}{)}}{.}{getMethodProxy}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{InvocationImpl}}{i}}{)}{{{}{{{inOrderContext}{.}{markVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{InvocationImpl}}{i}}{)}{{{}{{return}{{inOrderContext}{.}{isVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{getInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{allInvocations}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{{given}{(}{{handler.invocationContainerImpl}{.}{findAnswerFor}{(}{{any}{(}{{{InvocationImpl}}{.}{class}}{)}}{)}}{)}}{.}{willReturn}{(}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{previous}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{actual}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{print}{(}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{Object}}{answerTo}{(}{{{InvocationImpl}}{invocation}}{)}{throws}{{Throwable}}{{{}{{return}{{{findAnswerFor}{(}{invocation}{)}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{invocationForStubbing}{.}{getInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{actualInvocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{nullDereference}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{compareTo}{=}{{this}{.}{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{MethodInfo}{(}{{{Invocation}}{theInvocation}}{)}{{{}{{{{this}{.}{method}}{=}{{theInvocation}{.}{getMethod}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{theInvocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{compareTo}{=}{{this}{.}{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{allInvocations}}}
{AST_ROOT_SC2NF{{{Invocation}}{{previous}{=}{{finder}{.}{findPreviousVerifiedInOrder}{(}{invocations}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actual}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{print}{(}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{i}}}
{AST_ROOT_SC2NF{{{Invocation}}{candidate}}}
{AST_ROOT_SC2NF{{{Invocation}}{candidate}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{public}{{Invocation}}{getInvocation}{()}{{{}{{return}{{this}{.}{invocation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InvocationMatcher}{(}{{{Invocation}}{invocation}}{)}{{{}{{this}{(}{invocation}{,}{{Collections}{.}{<}{{Matcher}}{>}{emptyList}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{invocations}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{{threadSafely}{()}}{.}{stubbingCompleted}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{Invocation}}{i}}{)}{{{}{{{inOrderContext}{.}{markVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{Invocation}}{i}}{)}{{{}{{return}{{inOrderContext}{.}{isVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{foundUnusedStub}{(}{{{Invocation}}{unused}}{)}{{{}{{{logger}{.}{log}{(}{{STRING_CONSTANT}{+}{{unused}{.}{getLocation}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{unused}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{getInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocationOnInterface}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{}{{public}{{InvocationMatcher}}{bindMatchers}{(}{{{ArgumentMatcherStorage}}{argumentMatcherStorage}}{,}{{{Invocation}}{invocation}}{)}{{{}{{throw}{{new}{{InvalidUseOfMatchersException}}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{!}{{orderingContext}{.}{isVerified}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{!}{{wanted}{.}{matches}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{undesired}}}
{AST_ROOT_SC2NF{{{Invocation}}{undesired}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{chunk}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocationOnClass}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{add}{(}{{{Invocation}}{invocation}}{)}{{{}{{{invocations}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{Invocation}}{i}}{)}{{{}{{{verified}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{verified}{.}{contains}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actualInvocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{invocationForStubbing}{.}{getInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Location}}{getLocation}{()}{{{}{{return}{{invocation}{.}{getLocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{actualLocation}}}
{AST_ROOT_SC2NF{{{}{{{Location}}{{location}{=}{{verificationMode}{.}{getLocation}{()}}}{;}}{{{verificationMode}{=}{null}}{;}}{{{reporter}{.}{unfinishedVerificationException}{(}{location}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbingInProgress}{!=}{null}}{)}{{{}{{{Location}}{{temp}{=}{stubbingInProgress}}{;}}{{{stubbingInProgress}{=}{null}}{;}}{{{reporter}{.}{unfinishedStubbing}{(}{temp}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{location}}}
{AST_ROOT_SC2NF{{{Location}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{Location}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{Location}}{lastActualInvocation}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{actualLocation}}}
{AST_ROOT_SC2NF{{{Location}}{location}}}
{AST_ROOT_SC2NF{{{Location}}{location}}}
{AST_ROOT_SC2NF{{{Location}}{{last}{=}{{finder}{.}{getLastLocation}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{actualLocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{for}{(}{{{Invocation}}{i}}{:}{unusedStubs}{)}{{{}{{{findingsListener}{.}{foundUnusedStub}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{previousInOrder}{=}{{finder}{.}{findPreviousVerifiedInOrder}{(}{invocations}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Object}}{answerTo}{(}{{{Invocation}}{invocation}}{)}{throws}{{Throwable}}{{{}{{return}{{{findAnswerFor}{(}{invocation}{)}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{nullDereference}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{previous}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{}{{{markVerified}{(}{chunk}{,}{wanted}{)}}{;}}{{for}{(}{{{Invocation}}{i}}{:}{chunk}{)}{{{}{{{context}{.}{markVerified}{(}{i}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{return}{{new}{{{LinkedList}}{<}{{Invocation}}{>}}{(}{invocationsInOrder}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{finder}{.}{getLastLocation}{(}{{Collections}{.}{<}{{Invocation}}{>}{emptyList}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{synchronized}{(}{invocations}{)}{{{}{{{copiedList}{=}{{new}{{{LinkedList}}{<}{{Invocation}}{>}}{(}{invocations}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{WarningsFinder}}{{finder}{=}{{new}{{WarningsFinder}}{(}{{Arrays}{.}{<}{{Invocation}}{>}{asList}{(}{stub}{)}}{,}{{Arrays}{.}{<}{{InvocationMatcher}}{>}{asList}{(}{wrongArg}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{WarningsFinder}}{{finder}{=}{{new}{{WarningsFinder}}{(}{{Arrays}{.}{<}{{Invocation}}{>}{asList}{()}}{,}{{Arrays}{.}{<}{{InvocationMatcher}}{>}{asList}{(}{unstubbedInvocation}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{Reporter}}{()}}{.}{tooLittleActualInvocations}{(}{{new}{{org.mockito.internal.reporting.Discrepancy}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{org.mockito.internal.reporting.Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{{org.mockito.internal.reporting.Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{{org.mockito.internal.reporting.Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{{org.mockito.internal.reporting.Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{pluralize}{(}{wantedCount}{)}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{DescribedInvocation}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{public}{StubInfoImpl}{(}{{{DescribedInvocation}}{stubbedAt}}{)}{{{}{{{{this}{.}{stubbedAt}}{=}{stubbedAt}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markStubUsed}{(}{{{DescribedInvocation}}{usedAt}}{)}{{{}{{{{this}{.}{usedAt}}{=}{usedAt}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{DescribedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{DescribedInvocation}}{wanted}}{)}{{{}{{throw}{{new}{{WantedButNotInvoked}}{(}{{createWantedButNotInvokedMessage}{(}{wanted}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{DefaultMockingDetails}}{(}{toInspect}{,}{{new}{{MockUtil}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocationOnClass}{=}{{{new}{{MockitoCore}}{()}}{.}{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImplTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{Mock}}{annotation}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Answer}}{<}{{T}}{>}}{)}{{new}{{ReturnsArgumentAt}}{(}{position}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{ReturnsArgumentAt}}{(}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{validate}{(}{{new}{{ReturnsArgumentAt}}{(}{ReturnsArgumentAt.LAST_ARGUMENT}{)}}{,}{{{{new}{{InvocationBuilder}}{()}}{.}{simpleMethod}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validator}{.}{validate}{(}{{new}{{ReturnsArgumentAt}}{(}{NUMBER_CONSTANT}{)}}{,}{{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{arg}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{Factory}}{)}{mock}}{)}}{.}{setCallback}{(}{NUMBER_CONSTANT}{,}{{new}{{MethodInterceptorFilter}}{(}{{cast}{(}{newHandler}{)}}{,}{settings}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockHandlerInterface}}{handler}}}
{AST_ROOT_SC2NF{{{InvocationNotifierHandler}}{{oldHandler}{=}{{(}{{InvocationNotifierHandler}}{)}{{getMockHandler}{(}{mock}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{public}{{MockSettingsInfo}}{getMockSettings}{()}{{{}{{return}{{mockHandler}{.}{getMockSettings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{settings}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{if}{(}{{isMockOrSpy}{(}{instance}{)}}{)}{{{}{{{mockUtil}{.}{maybeRedefineMockName}{(}{instance}{,}{{field}{.}{getName}{()}}{)}}{;}}{{return}{instance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{{settings}{=}{{oldHandler}{.}{getMockSettings}{()}}}{;}}}
{AST_ROOT_SC2NF{{{mockUtil}{.}{maybeRedefineMockName}{(}{mock}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockUtil}{.}{maybeRedefineMockName}{(}{mock}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{validateExtraInterfaces}{(}{{{Class}}{classToMock}}{,}{{{{Collection}}{<}{{Class}}{>}}{interfaces}}{)}{{{}{{{extraInterfacesValidated}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{mockSettings}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{{{MockHandler}}{<}{?}{>}}{{handler}{=}{{new}{{MockHandler}}{(}{{new}{{MockSettingsImpl}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{{mock}{=}{{mockUtil}{.}{createMock}{(}{classToMock}{,}{mockSettings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Class}}{>}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{name}{.}{isDefault}{()}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mockName}}{=}{{toInstanceName}{(}{classToMock}{)}}}{;}}{{{{this}{.}{defaultName}}{=}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getMockName}{(}{mock}{)}}{.}{isDefault}{()}}{)}{{{}{{{{{getMockHandler}{(}{mock}{)}}{.}{getMockSettings}{()}}{.}{redefineMockName}{(}{newName}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{IMethods}}{{methods}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{MethodsImpl}}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{mockedList}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{delegatedList}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{delegatedList}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{delegatedList}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{{settings}{=}{{oldHandler}{.}{getMockSettings}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{mockSettings}}}
{AST_ROOT_SC2NF{{public}{{MockCreationSettings}}{getMockSettings}{()}{{{}{{return}{{mockHandler}{.}{getMockSettings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{settings}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{settings}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{settings}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{mockSettings}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{setListener}{(}{null}{)}}{;}}{{{mockingProgress}{.}{mockingStarted}{(}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{mockingStarted}{(}{mock}{,}{typeToMock}{)}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandlerImpl}}{<}{{T}}{>}}{mockHandler}}}
{AST_ROOT_SC2NF{{{MockHandlerImplTest}}{.}{class}}}
{AST_ROOT_SC2NF{{newHandler}{=}{{new}{{{InvocationNotifierHandler}}{<}{{T}}{>}}{(}{{new}{{{MockHandlerImpl}}{<}{{T}}{>}}{(}{settings}{)}}{,}{settings}{)}}}}
{AST_ROOT_SC2NF{{{InternalMockHandler}}{{mockitoHandler}{=}{{cast}{(}{handler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InternalMockHandler}}{handler}}}
{AST_ROOT_SC2NF{{{MockHandler}}{newHandler}}}
{AST_ROOT_SC2NF{{{MockHandler}}{handler}}}
{AST_ROOT_SC2NF{{{MockHandler}}{newHandler}}}
{AST_ROOT_SC2NF{{{{given}{(}{{iMethods}{.}{varargsObject}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{anyVararg}{()}}{)}}{)}}{.}{will}{(}{{returnsArgAt}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{T}}{>}}{mockHandler}}}
{AST_ROOT_SC2NF{{{}{{return}{{Primitives}{.}{primitiveValueOrNullFor}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{(}{{{clazz}{!=}{null}}{?}{{clazz}{.}{hashCode}{()}}{:}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{registerTypeParametersOn}{(}{{clazz}{.}{getTypeParameters}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{typeVariable}{.}{equals}{(}{{{(}{{(}{{TypeVarBoundedType}}{)}{o}}{)}}{.}{typeVariable}}{)}}{;}}}
{AST_ROOT_SC2NF{{<}{{O}{extends}{{K}}}{>}{{O}}{typeVar_with_type_params}{(}{)}{;}}}
{AST_ROOT_SC2NF{{<}{{S}}{,}{{T}{extends}{{S}}}{>}{{T}}{two_type_params}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{super}{{Integer}}}{>}}{returning_wildcard_with_class_lower_bound}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setMockitoGenericMetadata}{(}{{{GenericMetadataSupport}}{mockitoGenericMetadata}}{)}{{{}{{{{this}{.}{mockitoGenericMetadata}}{=}{mockitoGenericMetadata}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MockSettings}}{parameterizedInfo}{(}{{{GenericMetadataSupport}}{mockitoGenericMetadata}}{)}{{{}{{{{this}{.}{mockitoGenericMetadata}}{=}{mockitoGenericMetadata}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{returnTypeGenericMetadata}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{createVerificationData}{(}{invocationContainerImpl}{,}{invocationMatcher}{)}}}{;}}{{{verificationMode}{.}{verify}{(}{data}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{invocationContainerImpl}}{=}{{new}{{InvocationContainerImpl}}{(}{mockingProgress}{,}{mockSettings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RegisteredInvocationsAllTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{DefaultRegisteredInvocationsTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{return}{{{mockSettings}{.}{isStubOnly}{()}}{?}{{new}{{RegisteredInvocationsStubOnly}}{()}}{:}{{new}{{DefaultRegisteredInvocations}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{mockSettings}{.}{isStubOnly}{()}}{?}{{new}{{SingleRegisteredInvocation}}{()}}{:}{{new}{{DefaultRegisteredInvocations}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CannotVerifyStubOnlyMock}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{yes_I_know_some_matchers_are_misplaced}{()}{{{}{{{resetState}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TestNG}}{{testNG}{=}{{new_TestNG_with_failure_recorder_for}{(}{{{FailingOnPurposeBecauseWrongStubbingSyntaxInConfigurationMethod}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestNG}}{{testNG}{=}{{new_TestNG_with_failure_recorder_for}{(}{{{FailingOnPurposeBecauseIncorrectStubbingSyntax}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestNG}}{{testNG}{=}{{new_TestNG_with_failure_recorder_for}{(}{{{FailingOnPurposeBecauseIncorrectAnnotationUsage}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mockitoGenericMetadata}{==}{null}}{)}{{{}{{{{this}{.}{mockitoGenericMetadata}}{=}{{GenericMetadataSupport}{.}{inferFrom}{(}{typeToMock}{)}}}{;}}{}}}}{{return}{mockitoGenericMetadata}{;}}{}}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{inferFrom}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{inferFrom}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{inferFrom}{(}{{{StringBuilder}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{StringBuilder}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{inferFrom}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{inferFrom}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{RETURNS_DEEP_STUBS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{RETURNS_DEEP_STUBS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{RETURNS_DEEP_STUBS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{RETURNS_DEEP_STUBS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{RETURNS_DEEP_STUBS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{RETURNS_DEEP_STUBS}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{recordDeepStubMock}{(}{{createNewDeepStubMock}{(}{returnTypeGenericMetadata}{)}}{,}{container}{)}}{;}}}
{AST_ROOT_SC2NF{{static}{{MockMaker}}{findPlatformMockMaker}{()}{{{}{{return}{{findPluginImplementation}{(}{{{MockMaker}}{.}{class}}{,}{DEFAULT_MOCK_MAKER_CLASS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mockitoCore}{.}{isTypeMockable}{(}{clazz}{)}}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{mockUtil}{.}{isTypeMockable}{(}{classToMock}{)}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotMockFinalClass}{(}{classToMock}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mockitoCore}{.}{mock}{(}{{returnTypeGenericMetadata}{.}{rawType}{()}}{,}{{withSettingsUsing}{(}{returnTypeGenericMetadata}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mockitoCore}{.}{isTypeMockable}{(}{rawType}{)}}}{)}{{{}{{return}{{delegate}{.}{returnValueFor}{(}{rawType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{pluginType}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{SerializableAndNoDefaultConstructor}{(}{{{Observable}}{o}}{)}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{{mockSettings}{=}{{{new}{{MockUtil}}{()}}{.}{getMockSettings}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSpy}{(}{{{Object}}{mock}}{)}{{{}{{return}{{mock}{instanceof}{{MockitoSpy}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mockUtil}{.}{isMock}{(}{cl}{)}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}{else}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{MOCKITO_PROXY_MARKER}{.}{equals}{(}{marker}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{mock}{instanceof}{{MockitoMock}}}{&&}{{isMockitoMock}{(}{mock}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSpy}{(}{{{Object}}{mock}}{)}{{{}{{return}{{mock}{instanceof}{{MockitoSpy}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{mock}{instanceof}{{MockitoMock}}}{&&}{{isMockitoMock}{(}{mock}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ObjectStreamException}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{{e}{.}{toString}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{SimpleSerializationUtil}{.}{serializeAndBack}{(}{mockWithPrivateConstructor}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{AClassToBeMockedInThisTestOnlyAndInCallablesOnly}}{{mock}{=}{{Mockito}{.}{mock}{(}{{{AClassToBeMockedInThisTestOnlyAndInCallablesOnly}}{.}{class}}{,}{{{Mockito}{.}{withSettings}{()}}{.}{serializable}{(}{SerializableMode.ACROSS_CLASSLOADERS}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{serializableMode}}{=}{copy.serializableMode}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{AcrossJVMMockitoMockSerializable}}{.}{class}}{.}{isAssignableFrom}{(}{cl}{)}}{)}{{{}{{return}{MOCKITO_PROXY_MARKER}{;}}{}}}{else}{{{}{{return}{NOTHING}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{isMockitoMock}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{,}{{{timeout}{(}{NUMBER_CONSTANT}{)}}{.}{atLeast}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{{VerificationMode}}{never}{()}{{{}{{{{new}{{Reporter}}{()}}{.}{atMostAndNeverShouldNotBeUsedWithTimeout}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{Reporter}}{()}}{.}{atMostAndNeverShouldNotBeUsedWithTimeout}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{target}{,}{{{timeout}{(}{{TEST_TIMEOUT_MILLIS}{*}{NUMBER_CONSTANT}}{)}}{.}{times}{(}{{TIMES}{*}{nThreads}}{)}}{)}}{.}{targetMethod}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getPollingPeriod}{()}{{{}{{return}{pollingPeriod}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{After}}{(}{{wrappedVerification}{.}{getPollingPeriod}{()}}{,}{{wrappedVerification}{.}{getDelay}{()}}{,}{verificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Timeout}}{(}{{wrappedVerification}{.}{getPollingPeriod}{()}}{,}{{wrappedVerification}{.}{getDuration}{()}}{,}{newVerificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{VerificationOverTimeImpl}}{(}{pollingPeriod}{,}{millis}{,}{delegate}{,}{true}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{After}}{(}{{wrappedVerification}{.}{getPollingPeriod}{()}}{,}{{wrappedVerification}{.}{getDuration}{()}}{,}{verificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{VerificationOverTimeImpl}}{(}{pollingPeriod}{,}{delayMillis}{,}{verificationMode}{,}{false}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expectedTimeout}{,}{{{{(}{{(}{{Timeout}}{)}{t}}{)}}{.}{wrappedVerification}}{.}{getDuration}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{canRecoverFromFailure}{(}{delegate}{)}}{)}{{{}{{{error}{=}{e}}{;}}{{{sleep}{(}{pollingPeriodMillis}{)}}{;}}{}}}{else}{{{}{{throw}{e}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{ClassLoader}}{{cl}{=}{{{{{{isolatedClassLoader}{()}}{.}{withCurrentCodeSourceUrls}{()}}{.}{withPrivateCopyOf}{(}{CLASS_NAME_USING_INTERFACE}{)}}{.}{withPrivateCopyOf}{(}{INTERFACE_NAME}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{cl}{.}{loadClass}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{cl}{.}{loadClass}{(}{CLASS_NAME_USING_INTERFACE}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{cl}{.}{loadClass}{(}{CLASS_NAME_USING_INTERFACE}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TypeVarBoundedType}{(}{{{TypeVariable}}{typeVariable}}{)}{{{}{{{{this}{.}{typeVariable}}{=}{{new}{{SerializableTypeVariable}}{(}{typeVariable}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Type}}{{actualType}{=}{{getActualTypeArgumentFor}{(}{typeParameter}{)}}}{;}}{{{actualTypeArguments}{.}{put}{(}{{new}{{SerializableTypeVariable}}{(}{typeParameter}{)}}{,}{actualType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{SerializableBoundedType}}{(}{wildCardBoundedType}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{SerializableBoundedType}}{(}{{new}{{TypeVarBoundedType}}{(}{typeParameter}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{TypeVariable}}{typeParameter}}{:}{typeParameters}{)}{{{}{{{contextualActualTypeParameters}{.}{put}{(}{{new}{{SerializableTypeVariable}}{(}{typeParameter}{)}}{,}{{boundsOf}{(}{typeParameter}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{TypeVarBoundedType}{(}{{{TypeVariable}}{typeVariable}}{)}{{{}{{{{this}{.}{typeVariable}}{=}{typeVariable}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Type}}{{actualType}{=}{{getActualTypeArgumentFor}{(}{typeParameter}{)}}}{;}}{{{actualTypeArguments}{.}{put}{(}{typeParameter}{,}{actualType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{wildCardBoundedType}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{TypeVarBoundedType}}{(}{typeParameter}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{mockitoCore}{()}}{.}{mock}{(}{{returnTypeGenericMetadata}{.}{rawType}{()}}{,}{{withSettingsUsing}{(}{returnTypeGenericMetadata}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{{ReturnsDeepStubs}}{returnsDeepStubsAnswerUsing}{(}{{final}{{GenericMetadataSupport}}{returnTypeGenericMetadata}}{)}{{{}{{return}{{new}{{ReturnsDeepStubsSerializationFallback}}{(}{returnTypeGenericMetadata}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{deepStub}{(}{invocation}{,}{returnTypeGenericMetadata}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Mockito}{.}{verify}{(}{mock}{,}{mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{T}}{should}{()}{{{}{{return}{{Mockito}{.}{verify}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{verify}{(}{mock}{,}{mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{T}}{should}{()}{{{}{{return}{{verify}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Float}{.}{floatToIntBits}{(}{lhs}{)}}{,}{{Float}{.}{floatToIntBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Double}{.}{doubleToLongBits}{(}{lhs}{)}}{,}{{Double}{.}{doubleToLongBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES}{.}{get}{(}{primitiveOrWrapperType}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES}{.}{containsKey}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{clazz}{.}{isPrimitive}{()}}{)}{{{}{{return}{clazz}{;}}{}}}}{{return}{{(}{{{Class}}{<}{{T}}{>}}{)}{{PRIMITIVE_TYPES}{.}{get}{(}{clazz}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{CLEANER}{.}{isOut}{(}{{unfilteredStackTrace}{.}{get}{(}{i}{)}}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{T}}}
{AST_ROOT_SC2NF{{long}{delayMillis}}}
{AST_ROOT_SC2NF{{long}{millis}}}
{AST_ROOT_SC2NF{{long}{millis}}}
{AST_ROOT_SC2NF{{public}{long}{getDuration}{()}{{{}{{return}{durationMillis}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{getPollingPeriod}{()}{{{}{{return}{pollingPeriodMillis}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{sleep}}}
{AST_ROOT_SC2NF{{{}{{{verifyNoMoreInteractions}{(}{{(}{{{Object}}{[]}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyNoMoreInteractions}{(}{{(}{{{Object}}{[]}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{inOrder}{(}{{(}{{{Object}}{[]}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCause}{=}{{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{+}{mock}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCause}{=}{{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{+}{mock}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{return}{{method}{.}{hashCode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{timer}{.}{isUp}{(}{startTime}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{timer}}{=}{{new}{{Timer}}{(}{durationMillis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{timer}{.}{isCounting}{()}}{)}}{.}{thenReturn}{(}{true}{,}{true}{,}{true}{,}{true}{,}{true}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{mockingProgress}{.}{reset}{()}}{;}}{{{mockingProgress}{.}{resetOngoingStubbing}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{when}{(}{{clazzMock}{.}{isValid}{()}}{)}}{.}{thenReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CannotStubVoidMethodWithReturnValue}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{MockitoLimitations.NON_PUBLIC_PARENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{==}{null}}{?}{STRING_CONSTANT}{:}{{STRING_CONSTANT}{+}{{type}{.}{getCanonicalName}{()}}{+}{STRING_CONSTANT}{+}{{type}{.}{getClassLoader}{()}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ClassImposterizer}}{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{new}{{CachingObjenesisInstantiator}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{new}{{ClassImposterizer}}{(}{{new}{{CachingObjenesisInstantiator}}{()}}{)}}{.}{imposterise}{(}{{new}{{MethodInterceptorFilter}}{(}{mockitoHandler}{,}{settings}{)}}{,}{{settings}{.}{getTypeToMock}{()}}{,}{{settings}{.}{getExtraInterfaces}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{new}{{ConstructorInstantiator}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Factory}}{{proxy}{=}{{instantiator}{.}{newInstance}{(}{proxyClass}{)}}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{{instantiator}{.}{getClass}{()}}{.}{getSimpleName}{()}}}}
{AST_ROOT_SC2NF{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{ClassImposterizer}}{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{DefaultClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{DefaultClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{CglibClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{new}{{CglibClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{ClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{{new}{{CGLIBHacker}}{()}}{.}{setMockitoNamingPolicy}{(}{methodProxy}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getMethodProxy}{()}}{.}{invokeSuper}{(}{target}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CleanTraceRealMethod}}{{realMethod}{=}{{new}{{CleanTraceRealMethod}}{(}{mockitoMethodProxy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sourceJarComparator}{.}{setPair}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{jars}{=}{{binaryComparator}{.}{areEqual}{()}}}{;}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeListWithWrongMethods}}{<}{{String}}{>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeListWithWrongMethods}}{<}{{String}}{>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeList}}{<}{{String}}{>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeList}}{<}{{String}}{>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeList}}{<}{{String}}{>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<}{{T}}{>}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<}{{T}}{>}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ZipComparator.Result}}{{result}{=}{{zipComparator}{.}{compareFiles}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{zipComparator}{.}{setPair}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ClassImposterizer}}{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{(}{{new}{{CreationSettings}}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{(}{settings}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{settings}{.}{isUsingConstructor}{()}}{)}{{{}{{return}{{new}{{ConstructorInstantiator}}{(}{{settings}{.}{getOuterClassInstance}{()}}{)}}{;}}{}}}{else}{{{}{{return}{INSTANCE}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{new}{{ConstructorInstantiator}}{(}{null}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InstantationException}}{e}}{)}{{{}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{{commits}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{author}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{authorId}{=}{{commit}{.}{getAuthorId}{()}}}{;}}{{{author}{=}{{commit}{.}{getAuthor}{()}}}{;}}{{{commits}{.}{add}{(}{commit}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAuthorId}{()}{{{}{{return}{email}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Commit}}{commit}}}
{AST_ROOT_SC2NF{{{Commit}}{commit}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{GitContributionsProvider}}{(}{{new}{{GitLogProvider}}{(}{runner}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{GitContributionsProvider}}{(}{{new}{{GitLogProvider}}{(}{runner}{)}}{,}{{new}{{IgnoreCiSkip}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DefaultContributionSet}}{{contributions}{=}{{new}{{DefaultContributionSet}}{(}{ignoredCommit}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ignoreCommit}{.}{isTrue}{(}{commit}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{{Map.Entry}}{<}{{String}}{,}{{Contribution}}{>}}{entry}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{m}{.}{matches}{()}}}{)}{{{}{{throw}{{new}{{ReleaseNotesException}}{(}{{STRING_CONSTANT}{+}{releaseNotesContent}}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{out}{==}{null}}{)}{{{}{{throw}{{new}{{ReleaseNotesException}}{(}{{STRING_CONSTANT}{+}{envVariableName}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{id}}}
{AST_ROOT_SC2NF{{public}{GitHubImprovementsProvider}{(}{{{String}}{authToken}}{)}{{{}{{{{this}{.}{authToken}}{=}{authToken}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Modifier}{.}{isAbstract}{(}{{{invocation}{.}{getMethod}{()}}{.}{getModifiers}{()}}{)}}{)}{{{}{{return}{{{Answers.CALLS_REAL_METHODS}{.}{get}{()}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Modifier}{.}{isAbstract}{(}{{{invocation}{.}{getMethod}{()}}{.}{getModifiers}{()}}{)}}{)}{{{}{{return}{{{Answers.RETURNS_DEFAULTS}{.}{get}{()}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{content}{=}{{IOUtil}{.}{readFully}{(}{response}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{noDefaultConstructor}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{field}{.}{getName}{()}}{+}{STRING_CONSTANT}{+}{{type}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ThenImpl}}{<}{{T}}{>}}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{closeable}{.}{close}{()}}{;}}{}}}{{catch}{(}{{{IOException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{closeable}}{,}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{reader}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{output}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{asList}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{IOUtil}{.}{readLines}{(}{{new}{{FileInputStream}}{(}{file}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{pluginSwitch}{.}{isEnabled}{(}{pluginClassName}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{foundPluginClass}{=}{{{new}{{PluginFinder}}{(}{pluginSwitch}{)}}{.}{findPluginClass}{(}{{Iterables}{.}{toIterable}{(}{resources}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{LinkedList}}{<}{{ReleaseStep}}{>}}{{targets}{=}{{new}{{{LinkedList}}{<}{{ReleaseStep}}{>}}{(}{attempted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{jUnitRule}{.}{apply}{(}{{new}{{ExceptionStatement}}{()}}{,}{injectTestCase}{)}}{.}{evaluate}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{injectTestCase}{=}{{new}{{InjectTestCase}}{()}}}{;}}{{{jUnitRule}{=}{{new}{{JUnitRule}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{Modifier}{.}{isAbstract}{(}{{{invocation}{.}{getMethod}{()}}{.}{getModifiers}{()}}{)}}{)}{{{}{{return}{{RETURNS_DEFAULTS}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mockSettings}{.}{defaultAnswer}{(}{{annotation}{.}{answer}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ReleaseStep}}{getStep}{(}{{int}{stepNumber}}{)}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DefaultGitAuthor}}{(}{currentLocalUser}{,}{currentLocalEmail}{,}{runner}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{anyObject}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnFor}{(}{clazz}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{VersionTool}}{getVersionTool}{()}{{{}{{return}{{new}{{DefaultVersionTool}}{(}{{new}{{VersionBumper}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{millis}}}
{AST_ROOT_SC2NF{{public}{{ClassLoader}}{build}{()}{{{}{{return}{{new}{{InMemoryClassLoader}}{(}{parent}{,}{inMemoryClassObjects}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{error}{=}{{handleVerifyException}{(}{e}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{paramsMatch}{(}{types}{,}{params}{)}}{)}{{{}{{return}{{invokeConstructor}{(}{constructor}{,}{params}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InstantiationException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{proxyClass}{.}{getSuperclass}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{mockedType}{.}{hashCode}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mockedType}{.}{equals}{(}{mockKey.mockedType}{)}}}{)}{{return}{false}{;}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{T}}{>}}{mockedType}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Class}}{<}{{?}{extends}{{T}}}{>}}{)}{{PREVIOUS_CLASSES}{.}{get}{(}{mockKey}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cacheMethod}{=}{true}}{)}}{{Method}}{method}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cacheMethod}{=}{true}}{)}}{{Method}}{method}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cacheMethod}{=}{true}}{)}}{{Method}}{method}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{proxyClass}{=}{{{new}{{ByteBuddyMockMaker}}{()}}{.}{getOrMakeMock}{(}{typeToMock}{,}{extraInterfaces}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Class}}{<}{{?}{extends}{{T}}}{>}}{)}{{PREVIOUSLY_GENERATED_MOCK_CLASSES}{.}{get}{(}{mockKey}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PREVIOUSLY_GENERATED_MOCK_CLASSES}{.}{put}{(}{mockKey}{,}{mockType}{)}}{;}}}
{AST_ROOT_SC2NF{{{T}}{{mock}{=}{{classInstantiator}{.}{instantiate}{(}{mockedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{handler}{instanceof}{{InternalMockHandler}}}{)}}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{proxyClass}{=}{{{new}{{CachingBytecodeGenerator}}{()}}{.}{get}{(}{typeToMock}{,}{extraInterfaces}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{proxyClass}{=}{{{new}{{CachingMockBytecodeGenerator}}{()}}{.}{get}{(}{typeToMock}{,}{extraInterfaces}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{cache}{)}}{.}{hasSize}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{cachingMockBytecodeGenerator.avoidingClassLeakageCache}{)}}{.}{hasSize}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{byteBuddy}{.}{subclass}{(}{mockedType}{,}{ConstructorStrategy.Default.IMITATE_SUPER_TYPE}{)}}{.}{name}{(}{{nameFor}{(}{mockedType}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{thiz}{.}{getMockitoInterceptor}{()}}{.}{getSerializationSupport}{()}}{.}{writeReplace}{(}{thiz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{handler}}{=}{handler}}{;}}{{{{this}{.}{mockCreationSettings}}{=}{mockCreationSettings}}{;}}{{{serializationSupport}{=}{{new}{{ByteBuddyCrossClassLoaderSerializationSupport}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CachingMockBytecodeGeneratorTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{Collections}{.}{sort}{(}{unsortedFields}{,}{cmp}{)}}{;}}}
{AST_ROOT_SC2NF{{{Collections}{.}{sort}{(}{unsortedFields}{,}{cmp}{)}}{;}}}
{AST_ROOT_SC2NF{{{PropertyAndSetterInjection}{.}{sortSuperTypesLast}{(}{unsortedFields}{)}}{;}}}
{AST_ROOT_SC2NF{{{sortSuperTypesLast}{(}{declaredFields}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Improvement}}{>}}{{pagedImprovements}{=}{{new}{{{ArrayList}}{<}{{Improvement}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{mockMethod}{+}{STRING_CONSTANT}{+}{{safelyGetMockName}{(}{mock}{)}}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{mockMethod}{+}{STRING_CONSTANT}{+}{{safelyGetMockName}{(}{mock}{)}}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{safelyGetMockName}{(}{{invocation}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{safelyGetMockName}{(}{{invocation}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setup}{()}{{{}{{{mock}{=}{{Mockito}{.}{mock}{(}{{{IMethods}}{.}{class}}{,}{STRING_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{validator}{.}{validate}{(}{{new}{{CallsRealMethods}}{()}}{,}{invocationOnInterface}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{Thread}{.}{sleep}{(}{sleep}{)}}{;}}{}}}{{catch}{(}{{{InterruptedException}}{ie}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{,}{ie}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{pollingPeriodMillis}{,}{delegate}{,}{returnOnSuccess}{,}{{new}{{Timer}}{(}{durationMillis}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{After}}{(}{{wrappedVerification}{.}{copyWithVerificationMode}{(}{verificationMode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Timeout}}{(}{{wrappedVerification}{.}{copyWithVerificationMode}{(}{newVerificationMode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{VerificationOverTimeImpl}}{(}{pollingPeriodMillis}{,}{millis}{,}{delegate}{,}{true}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cache}{=}{true}}{)}}{{Method}}{invokedMethod}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cache}{=}{true}}{)}}{{Method}}{invokedMethod}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cache}{=}{true}}{)}}{{Method}}{invokedMethod}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Improvement}}{>}}{{pagedImprovements}{=}{{new}{{{ArrayList}}{<}{{Improvement}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{argument}{.}{getValue}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{true}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{CapturesArgumentsFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{CapturesArgumentsFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{CapturesArgumentsFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{c.invocationMarker}{)}}{.}{markVerified}{(}{{eq}{(}{{asList}{(}{invocation}{)}}{)}}{,}{{any}{(}{{{CapturesArgumentsFromInvocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{injectionOccurred}{|=}{{injectMockCandidates}{(}{fieldClass}{,}{fieldInstanceNeedingInjection}{,}{{newMockSafeHashSet}{(}{mockCandidates}{)}}{)}}}{;}}{{{fieldClass}{=}{{fieldClass}{.}{getSuperclass}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{MockAccess}}{)}{mock}}{)}}{.}{setMockitoInterceptor}{(}{{new}{{MockMethodInterceptor}}{(}{{asInternalMockHandler}{(}{newHandler}{)}}{,}{settings}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockAccess}}{{mockAccess}{=}{{(}{{MockAccess}}{)}{mockInstance}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{interceptor}{==}{null}}{)}{{{}{{return}{{superCall}{.}{call}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{MatchersPrinter}}{()}}{.}{print}{(}{m}{)}}{.}{equals}{(}{{{arg}{==}{null}}{?}{STRING_CONSTANT}{:}{{arg}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ContainsTypedDescription}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ContainsTypedDescription}}{{equals}{=}{{new}{{Equals}}{(}{null}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsTypedDescription}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getTypedDescription}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getTypedDescription}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LocalizedMatcher}}{{m}{=}{{new}{{LocalizedMatcher}}{(}{Any.ANY}{)}}}{;}}{{{assertEquals}{(}{{describe}{(}{m}{)}}{,}{{m}{.}{getTypedDescription}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsTypedDescription}}{{equals10}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{HamcrestPrinter}{.}{print}{(}{m}{)}}{.}{equals}{(}{{{arg}{==}{null}}{?}{STRING_CONSTANT}{:}{{arg}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{the_mock_type}{=}{{cachingMockBytecodeGenerator}{.}{get}{(}{{withMockFeatures}{(}{{classloader_with_life_shorter_than_cache}{.}{loadClass}{(}{STRING_CONSTANT}{)}}{,}{{Collections}{.}{<}{{{Class}}{<}{?}{>}}{>}{emptySet}{()}}{,}{false}{)}}{)}}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{{Class}}{<}{?}{>}}{>}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{{Class}}{<}{?}{>}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{{Class}}{<}{?}{>}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{{Class}}{<}{?}{>}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{{Class}}{<}{?}{>}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{{Class}}{<}{?}{>}}{>}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{{}{{{byteBuddy}{=}{{{{new}{{ByteBuddy}}{()}}{.}{withDefaultMethodAttributeAppender}{(}{MethodAttributeAppender.ForInstrumentedMethod.INSTANCE}{)}}{.}{withAttribute}{(}{TypeAttributeAppender.ForSuperType.INSTANCE}{)}}}{;}}{{{random}{=}{{new}{{Random}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{m}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{{m}{=}{{matchers}{.}{get}{(}{position}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{m}}}
{AST_ROOT_SC2NF{{{}{{{LocalizedMatcher}}{{m}{=}{{new}{{LocalizedMatcher}}{(}{Any.ANY}{)}}}{;}}{{{assertEquals}{(}{{m}{.}{describe}{()}}{,}{{m}{.}{getTypedDescription}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{actualMatcher}{instanceof}{{ContainsTypedDescription}}}{)}{{{}{{return}{{{(}{{(}{{ContainsTypedDescription}}{)}{actualMatcher}}{)}}{.}{getTypedDescription}{()}}{;}}{}}}{else}{{{}{{return}{{actualMatcher}{.}{describe}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{actualMatcher}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{MockitoMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationWithMatchers}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{{List}}{<}{{MockitoMatcher}}{>}}{)}{{(}{{List}}{)}{lastMatchers}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{MockitoMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{MockitoMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{MockitoMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Double}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Float}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Long}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Integer}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Short}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Byte}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Boolean}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Character}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{name}{+}{STRING_CONSTANT}}{,}{{compareTo}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{MockitoMatcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{null}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{CHAR_CONS}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{matchesToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Matches}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{findToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Find}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{containsToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Contains}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{endsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{EndsWith}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{startsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{StartsWith}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{notToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Not}}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{o}{)}}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{CHAR_CONS}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{o}{)}}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{CHAR_CONS}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{LocalizedMatcher}}{{m}{=}{{new}{{LocalizedMatcher}}{(}{Any.ANY}{)}}}{;}}{{{assertEquals}{(}{{m}{.}{toString}{()}}{,}{{m}{.}{toStringWithType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsExtraTypeInfo}}{{equals10}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ContainsExtraTypeInfo}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ContainsExtraTypeInfo}}{{equals}{=}{{new}{{Equals}}{(}{null}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsExtraTypeInfo}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{null}{)}}{.}{toString}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{toString}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{CHAR_CONS}{)}}{.}{toString}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{toStringWithType}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{toStringWithType}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{toStringWithType}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Equals}}{{matcherWithBadDescription}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}{{{}{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{describe}{(}{wanted}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{name}{+}{STRING_CONSTANT}}{,}{{compareTo}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{matchesToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Matches}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{findToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Find}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{containsToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Contains}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{endsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{EndsWith}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{startsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{StartsWith}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{And}}{(}{matchers}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{notToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Not}}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Or}}{(}{matchers}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{o}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{CHAR_CONS}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{o}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{CHAR_CONS}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{m}{.}{toString}{()}}{.}{equals}{(}{{{arg}{==}{null}}{?}{STRING_CONSTANT}{:}{{arg}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{out}{.}{append}{(}{{{new}{{Equals}}{(}{{array}{[}{i}{]}}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{add}{(}{{new}{{FormattedText}}{(}{{MatcherToString}{.}{toString}{(}{matcher}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{ArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{m}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{m}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{ArgumentMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Double}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Float}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Long}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Integer}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Short}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Byte}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Boolean}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{{Character}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{m}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{{m}{=}{{matchers}{.}{get}{(}{position}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{ArgumentMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{Arrays}{.}{<}{{ArgumentMatcher}}{>}{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{m}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{ArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{ArgumentMatcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{reset_state}{()}{{{}{{{super}{.}{resetState}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{MOCKITO_CORE}{.}{stubber}{()}}{.}{doReturn}{(}{toBeReturned}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{MOCKITO_CORE}{.}{stubber}{()}}{.}{doNothing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{MOCKITO_CORE}{.}{stubber}{()}}{.}{doAnswer}{(}{answer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{MOCKITO_CORE}{.}{stubber}{()}}{.}{doCallRealMethod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{throwables}{==}{null}}{)}{{{}{{return}{{thenThrow}{(}{{(}{{Throwable}}{)}{null}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{returnedMock}{)}}{.}{isEqualTo}{(}{expectedMock}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{dog}{.}{bark}{()}}{)}}{.}{isEqualTo}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{dog}{.}{bark}{()}}{)}}{.}{isEqualTo}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{ThrowsExceptionClass}{(}{{{{Class}}{<}{{?}{extends}{{Throwable}}}{>}}{throwableClass}}{)}{{{}{{{{this}{.}{throwableClass}}{=}{{checkNonNullThrowable}{(}{throwableClass}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{)}}{.}{simpleMethod}{(}{{(}{{Object}}{)}{{anyObject}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{oneArg}{(}{{(}{{Object}}{)}{{anyObject}{()}}}{)}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{oneArg}{(}{{(}{{Object}}{)}{{anyObject}{()}}}{)}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{oneArg}{(}{{(}{{Object}}{)}{{any}{()}}}{)}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Instantiator}}{{instantiator}{=}{{{Plugins}{.}{getInstantiatorProvider}{()}}{.}{getInstantiator}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{byteBuddy}{=}{{{{new}{{ByteBuddy}}{()}}{.}{withDefaultMethodAttributeAppender}{(}{{new}{{MethodAttributeAppender.ForInstrumentedMethod}}{(}{AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE}{)}}{)}}{.}{withAttribute}{(}{{new}{{TypeAttributeAppender.ForInstrumentedType}}{(}{AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{AllTestsRunner}}{t}}{:}{threads}{)}{{{}{{{t}{.}{join}{()}}{;}}{{{failed}{|=}{{t}{.}{isFailed}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{pomComparator}{=}{{new}{{PomComparator}}{(}{left}{,}{right}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContributionsProvider}}{{contributionsProvider}{=}{{Vcs}{.}{getGitProvider}{(}{{Exec.INSTANCE}{.}{getProcessRunner}{(}{workDir}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ContributionsProvider}}{{contributionsProvider}{=}{{Vcs}{.}{getGitProvider}{(}{{Exec}{.}{getProcessRunner}{(}{workDir}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{MockBytecodeGenerator}{()}{{{}{{{byteBuddy}{=}{{{new}{{ByteBuddy}}{()}}{.}{with}{(}{TypeValidation.DISABLED}{)}}}{;}}{{{random}{=}{{new}{{Random}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{runner}{.}{addListener}{(}{{new}{{TextListener}}{(}{DevNull.out}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{invocation}{.}{getMock}{()}}{==}{{invocation}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{arg}{=}{{invocation}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{CapturesArguments}}{)}{m}}{)}}{.}{captureFrom}{(}{{invocation}{.}{getArgument}{(}{position}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{secondArgument}{=}{{invocationOnInterface}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateIndexWithinInvocationRange}{(}{invocation}{)}}{;}}{{return}{{invocation}{.}{getArgument}{(}{{actualArgumentPosition}{(}{invocation}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ImportLogBean}}{{bean}{=}{{invocation}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{invocation}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{invocation}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{invocation}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{runner}{=}{{new}{{MockitoJUnitRunner}}{(}{{{DummyTest}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{ArgumentCaptor}{.}{forClass}{(}{{{Person}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{AdditionalAnswers}{.}{returnsElementsOf}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{jUnitRule}}{=}{{new}{{JUnitRule}}{(}{{new}{{ConsoleMockitoLogger}}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{{{assertTrue}{(}{{{logger}{.}{getLoggedInfo}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{listener}{.}{getStubbingInfo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{CapturesArguments}}{)}{m}}{)}}{.}{captureFrom}{(}{{invocation}{.}{getArgument}{(}{position}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{mock}{instanceof}{{List}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{CoreMatchers}{.}{isA}{(}{{(}{{Class}}{)}{type}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{runner}{instanceof}{{JUnit45AndHigherRunnerImpl}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{runner}{instanceof}{{JUnit44RunnerImpl}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{RunnerProvider}}{()}}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{filterRequested}{=}{true}}{;}}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{MockitoJUnitListener}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{MockitoJUnitListener}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{MockitoJUnitListener}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reportOngoingStubbing}{(}{{{OngoingStubbing}}{iOngoingStubbing}}{)}{{{}{{{{threadSafely}{()}}{.}{reportOngoingStubbing}{(}{iOngoingStubbing}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{doAnswer}{(}{recordCall}{)}}{.}{when}{(}{mock}{)}}{.}{voidMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{doThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{.}{when}{(}{mock}{)}}{.}{clone}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{doThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{.}{when}{(}{mock}{)}}{.}{clone}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{doThrow}{(}{expected}{)}}{.}{when}{(}{mock}{)}}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{CoreMatchers}{.}{is}{(}{{(}{{Class}}{)}{type}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{jUnitRule}{.}{apply}{(}{{new}{{UnfinishedStubbingStatement}}{()}}{,}{null}{,}{injectTestCase}{)}}{.}{evaluate}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{jUnitRule}{.}{apply}{(}{{new}{{ExceptionStatement}}{()}}{,}{null}{,}{injectTestCase}{)}}{.}{evaluate}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{jUnitRule}{.}{apply}{(}{{new}{{DummyStatement}}{()}}{,}{null}{,}{injectTestCase}{)}}{.}{evaluate}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{JUnitRule}}{(}{{new}{{ConsoleMockitoLogger}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{VerificationCollectorImpl}{()}{{{}{{{this}{.}{resetBuilder}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{methods}{)}}{.}{simpleMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{IMethods}}{{methods}{=}{{mock}{(}{{{IMethods}}{.}{class}}{)}}}{;}}{{{{verify}{(}{methods}{)}}{.}{simpleMethod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{newHandler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{mockHandler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setField}{(}{testClass}{,}{field}{,}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setField}{(}{descInstance}{,}{classNameField}{,}{{proxyClass}{.}{getCanonicalName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setField}{(}{instance}{,}{field}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setField}{(}{testInstance}{,}{field}{,}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setField}{(}{testClass}{,}{field}{,}{newFieldInstance}{)}}{;}}}
{AST_ROOT_SC2NF{{{setField}{(}{testClass}{,}{field}{,}{newFieldInstance}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{new}{{BeanPropertySetter}}{(}{injectee}{,}{candidateFieldToBeInjected}{)}}{.}{set}{(}{matchingMock}{)}}}{)}{{{}{{{setField}{(}{injectee}{,}{candidateFieldToBeInjected}{,}{matchingMock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InternalMockHandler}}{{handler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InternalMockHandler}}{{handler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{listenerThrowable}}{)}{{{}{{throw}{{invocationListenerThrewException}{(}{listener}{,}{listenerThrowable}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{listenerThrowable}}{)}{{{}{{throw}{{invocationListenerThrewException}{(}{listener}{,}{listenerThrowable}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsInOrderChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expectedMatchersSize}{!=}{recordedMatchersSize}}{)}{{{}{{throw}{{invalidUseOfMatchers}{(}{expectedMatchersSize}{,}{lastMatchers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{superMethod}{.}{isInvokable}{()}}}{)}{{{}{{throw}{{cannotCallAbstractRealMethod}{()}}{;}}{}}}}{{return}{{superMethod}{.}{invoke}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{argumentPosition}{!=}{LAST_ARGUMENT}}{&&}{{argumentPosition}{<}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{invalidArgumentRangeAtIdentityAnswerCreationTime}{()}}{;}}{}}}}{{return}{argumentPosition}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{throw}{{noMoreInteractionsWantedInOrder}{(}{unverified}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NonGreedyNumberOfInvocationsInOrderChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{InvocationMarker}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{mocks}{==}{null}}{||}{{mocks.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{mocksHaveToBePassedToVerifyNoMoreInteractions}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbing}{==}{null}}{)}{{{}{{{mockingProgress}{.}{reset}{()}}{;}}{{throw}{{missingMethodInvocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{defaultAnswer}}{=}{defaultAnswer}}{;}}{{if}{(}{{defaultAnswer}{==}{null}}{)}{{{}{{throw}{{defaultAnswerDoesNotAcceptNullParameter}{()}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{alreadyAssigned}{)}{{{}{{throw}{{moreThanOneAnnotationNotAllowed}{(}{{field}{.}{getName}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{o}{.}{isToString}{(}{{wanted}{.}{getMethod}{()}}{)}}{)}{{{}{{throw}{{cannotVerifyToString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{throw}{{cannotInjectDependency}{(}{candidateFieldToBeInjected}{,}{matchingMock}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{alreadyAssigned}{)}{{{}{{throw}{{moreThanOneAnnotationNotAllowed}{(}{{field}{.}{getName}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{usingConstructor}{&&}{{mode}{==}{SerializableMode.ACROSS_CLASSLOADERS}}}{)}{{{}{{throw}{{usingConstructorWithFancySerializable}{(}{mode}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{delegatedInstance}{.}{getClass}{()}}{.}{isAssignableFrom}{(}{classToMock}{)}}{)}{{{}{{throw}{{mockedTypeIsInconsistentWithDelegatedInstanceType}{(}{classToMock}{,}{delegatedInstance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{classToMock}{.}{equals}{(}{{spiedInstance}{.}{getClass}{()}}{)}}}{)}{{{}{{throw}{{mockedTypeIsInconsistentWithSpiedInstanceType}{(}{classToMock}{,}{spiedInstance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Class}}{i}}{:}{extraInterfaces}{)}{{{}{{if}{(}{{classToMock}{==}{i}}{)}{{{}{{throw}{{extraInterfacesCannotContainMockedType}{(}{classToMock}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mockSettings}{.}{isStubOnly}{()}}{)}{{{}{{throw}{{stubPassedToVerify}{()}}{;}}{}}}}{{return}{{new}{{VerificationDataImpl}}{(}{invocationContainerImpl}{,}{invocationMatcher}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{invocationContainerImpl}{.}{hasInvocationForPotentialStubbing}{()}}}{)}{{{}{{throw}{{incorrectUseOfApi}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{methodInfo}{.}{isVoid}{()}}}{)}{{{}{{throw}{{onlyVoidMethodsCanBeSetToDoNothing}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{methodInfo}{.}{isAbstract}{()}}{)}{{{}{{throw}{{cannotCallAbstractRealMethod}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{foundSize}{>}{maxNumberOfInvocations}}{)}{{{}{{throw}{{wantedAtMostX}{(}{maxNumberOfInvocations}{,}{foundSize}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{method}{.}{isAbstract}{()}}{)}{{{}{{throw}{{cannotCallAbstractRealMethod}{()}}{;}}{}}}}{{return}{{realMethod}{.}{invoke}{(}{mock}{,}{rawArguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{throwableClass}{==}{null}}{||}{{!}{{{{Throwable}}{.}{class}}{.}{isAssignableFrom}{(}{throwableClass}{)}}}}{)}{{{}{{throw}{{notAnException}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{should_throw_correct_exception_for_null_invocation_listener}{(}{)}{throws}{{Exception}}{{{}{{throw}{{Reporter}{.}{invocationListenerDoesNotAcceptNullParameters}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{StackTraceElement}}{element}}{:}{target}{)}{{{}{{if}{(}{{CLEANER}{.}{isOut}{(}{element}{)}}{)}{{{}{{{filtered}{.}{add}{(}{element}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{{assertThat}{(}{{cleaner}{.}{isOut}{(}{{type}{(}{className}{)}}{)}}{)}}{.}{describedAs}{(}{STRING_CONSTANT}{,}{className}{)}}{.}{isFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{assertThat}{(}{{cleaner}{.}{isOut}{(}{{type}{(}{className}{)}}{)}}{)}}{.}{describedAs}{(}{STRING_CONSTANT}{,}{className}{)}}{.}{isTrue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{markVerified}{(}{actualInvocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{markVerified}{(}{next}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NonGreedyNumberOfInvocationsInOrderChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{markVerified}{(}{{chunk}{.}{get}{(}{NUMBER_CONSTANT}{)}}{,}{wantedMatcher}{)}}{;}}}
{AST_ROOT_SC2NF{{{markVerifiedInOrder}{(}{chunk}{,}{wanted}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{markVerifiedInOrder}{(}{chunk}{,}{wanted}{,}{orderingContext}{)}}{;}}}
{AST_ROOT_SC2NF{{{markVerified}{(}{actualInvocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{markVerified}{(}{found}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{void}{reportMatcher}{(}{{{ArgumentMatcher}}{matcher}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{matcher}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{;}}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{;}}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{;}}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{;}}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{Null.NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{Null.NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{AnyVararg.ANY_VARARG}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{Any.ANY}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{capturingMatcher}{)}}{;}}{{return}{{defaultValue}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Primitives}{.}{defaultValue}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{{new}{{ThreadSafeMockingProgress}}{()}}{.}{pullOngoingStubbing}{()}}{)}}{.}{isNull}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ENABLED}{&&}{{{candidate}{.}{getMethodName}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{return}{true}{;}}{}}}}{{return}{{defaultCleaner}{.}{isOut}{(}{candidate}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{T}}{argument}}}
{AST_ROOT_SC2NF{{{String}}{argument}}}
{AST_ROOT_SC2NF{{new}{{{ArgumentMatcher}}{<}{{String}}{>}}{()}{{{}{{public}{boolean}{matches}{(}{{{String}}{argument}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{{Answer}}{<}{?}{>}}{>}}{answers}}{)}{{{}{{{answersForStubbing}{.}{addAll}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{public}{InOrderImpl}{(}{{{{List}}{<}{{?}{extends}{{Object}}}{>}}{mocksToBeVerifiedInOrder}}{)}{{{}{{{{this}{.}{mocksToBeVerifiedInOrder}}{.}{addAll}{(}{mocksToBeVerifiedInOrder}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{?}{,}{?}{>}}{map}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{LinkedList}}{<}{?}{>}}{linkedList}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{?}{>}}{list}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{Answer}}{<}{?}{>}}{>}}{answers}}}
{AST_ROOT_SC2NF{{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{{Answer}}{<}{?}{>}}{>}}{answers}}{)}{{{}{{{mockHandler}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{?}{>}}{settings}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{captor}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Long}}{{longPretendingAnInt}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{{new}{{{HamcrestArgumentMatcher}}{<}{{T}}{>}}{(}{matcher}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{mockUtil}{.}{isSpy}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{{Answer}}{<}{?}{>}}{>}}{answers}}{)}{;}}}
{AST_ROOT_SC2NF{{int}{compareTo}{(}{{{HasCompare}}{redHerring}}{)}{;}}}
{AST_ROOT_SC2NF{{int}{foo}{(}{{{HasCompare}}{other}}{)}{;}}}
{AST_ROOT_SC2NF{{int}{compareTo}{(}{{{HasCompareToButDoesNotImplementComparable}}{other}}{)}{;}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{readObject}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NullResultGuardian}{(}{{{{InternalMockHandler}}{<}{{T}}{>}}{delegate}}{)}{{{}{{{{this}{.}{delegate}}{=}{delegate}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{)}}{.}{simpleMethod}{(}{{anyObject}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{pluginType}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{int}{{secondArgument}{=}{{(}{{Integer}}{)}{{invocationOnInterface}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{void}{reportMatcher}{(}{{{{ArgumentMatcher}}{<}{?}{>}}{matcher}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{mockingStarted}{(}{{{Object}}{mock}}{,}{{{{Class}}{<}{?}{>}}{classToMock}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{mockingStarted}{(}{{{Object}}{mock}}{,}{{{{Class}}{<}{?}{>}}{classToMock}}{)}{;}}}
{AST_ROOT_SC2NF{{{{OngoingStubbing}}{<}{?}{>}}{pullOngoingStubbing}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{reportOngoingStubbing}{(}{{{{OngoingStubbing}}{<}{?}{>}}{ongoingStubbing}}{)}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{public}{void}{reportOngoingStubbing}{(}{{{{OngoingStubbing}}{<}{?}{>}}{iOngoingStubbing}}{)}{{{}{{{{threadSafely}{()}}{.}{reportOngoingStubbing}{(}{iOngoingStubbing}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{ArgumentMatcher}}{<}{?}{>}}{getMatcher}{()}{{{}{{return}{matcher}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ArgumentMatcher}}{<}{?}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{createdMocks}{=}{{new}{{{LinkedList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{mockingStarted}{(}{{{Object}}{mock}}{,}{{{{Class}}{<}{?}{>}}{classToMock}}{)}{{{}{{{toBeFilled}{.}{add}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CollectCreatedMocks}{(}{{{{List}}{<}{{Object}}{>}}{toBeFilled}}{)}{{{}{{{{this}{.}{toBeFilled}}{=}{toBeFilled}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{expected}}}
{AST_ROOT_SC2NF{{{}{{{copy}{(}{from}{,}{to}{,}{{from}{.}{getClass}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{actualType}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{lhsClass}{=}{{lhs}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{typeToMock}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{?}{>}}{lines}}}
{AST_ROOT_SC2NF{{new}{{SerializableMethod}}{(}{{type}{.}{getMethod}{(}{methodName}{,}{{new}{{{{Class}}{<}{?}{>}}{[}}{NUMBER_CONSTANT}{]}}{)}}{)}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{mockedType}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{argTypes}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{(}{{{{Class}}{<}{?}{>}}{[]}}{)}{null}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{{Class}}{<}{?}{>}}{anInterface}}{:}{interfaces}{)}{{{}{{{types}{.}{add}{(}{{anInterface}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{{Class}}{<}{?}{>}}{i}}{:}{extraInterfaces}{)}{{{}{{if}{(}{{classToMock}{==}{i}}{)}{{{}{{throw}{{extraInterfacesCannotContainMockedType}{(}{classToMock}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{currentExploredClass}{=}{clazz}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{oneArg}{(}{{(}{char}{)}{{(}{{CHAR_CONS}{+}{i}}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{public}{{BDDStubber}}{will}{(}{{{{Answer}}{<}{?}{>}}{answer}}{)}{{{}{{return}{{new}{{BDDStubberImpl}}{(}{{mockitoStubber}{.}{doAnswer}{(}{answer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{BDDStubber}}{willAnswer}{(}{{{{Answer}}{<}{?}{>}}{answer}}{)}{{{}{{return}{{new}{{BDDStubberImpl}}{(}{{mockitoStubber}{.}{doAnswer}{(}{answer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{?}{>}}{answer}}}
{AST_ROOT_SC2NF{{return}{matchers}{;}}}
{AST_ROOT_SC2NF{{HoldingAReference}{(}{{{{WeakReference}}{<}{{{Class}}{<}{?}{>}}{>}}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{extraInterfaces}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{InvocationsFinder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{InvocationsFinder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{InvocationsFinder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{InvocationsFinder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedDifferentMethod}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{InvocationsFinder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedSimpleMethod}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{findFirstUnverifiedInOrder}{(}{{data}{.}{getOrderingContext}{()}}{,}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{findFirstUnverified}{(}{{data}{.}{getAllInvocations}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{next}{=}{{findFirstMatchingUnverifiedInvocation}{(}{invocations}{,}{wanted}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{size}{(}{{{{Collection}}{<}{?}{>}}{collection}}{)}{{{}{{return}{{collection}{.}{size}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{size}{(}{{{{Map}}{<}{?}{,}{?}{>}}{map}}{)}{{{}{{return}{{map}{.}{size}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{{(}{{{Iterable}}{<}{{String}}{>}}{)}{iterable}}{)}}{.}{iterator}{()}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotNull}{(}{{{(}{{(}{{{Iterable}}{<}{{String}}{>}}{)}{iterable}}{)}}{.}{iterator}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifier}{.}{setAnswersForStubbing}{(}{{new}{{{ArrayList}}{<}{{{Answer}}{<}{?}{>}}{>}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{FailingConstructor}{(}{{{{Set}}{<}{?}{>}}{set}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{?}{>}}{getHistogram2}{()}{{{}{{return}{histogram2}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{?}{>}}{getHistogram1}{()}{{{}{{return}{histogram1}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{TreeSet}}{<}{?}{>}}{getSearchTree}{()}{{{}{{return}{searchTree}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{List}}{<}{?}{>}}{getAList}{()}{{{}{{return}{aList}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ConstructorInjection.SimpleArgumentResolver}}{{resolver}{=}{{new}{{ConstructorInjection.SimpleArgumentResolver}}{(}{{newSetOf}{(}{{new}{{{HashSet}}{<}{{Float}}{>}}{()}}{,}{{new}{{ByteArrayOutputStream}}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{some_class_with_parametered_constructor}{(}{{{{List}}{<}{?}{>}}{collaborator}}{)}{{{}{{{constructor_instantiation}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ByteBuddyMockMaker}{()}{{{}{{{cachingMockBytecodeGenerator}{=}{{new}{{CachingMockBytecodeGenerator}}{(}{false}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{LessThan}{(}{{{T}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{LessOrEqual}{(}{{{T}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{GreaterOrEqual}{(}{{{T}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{public}{CompareTo}{(}{{{T}}{value}}{)}{{{}{{{{this}{.}{wanted}}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{GreaterThan}{(}{{{T}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CompareEqual}{(}{{{T}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnmockableHashCodeAndEquals}}{{mock}{=}{mock1}}{;}}}
{AST_ROOT_SC2NF{{Transformer.ForMethod}{.}{withModifiers}{(}{SynchronizationState.PLAIN}{)}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{only}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{atLeastOnce}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{never}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{initialize_dependencies}{()}{{{}{{{underTest}{=}{{new}{{ConstructorInjection}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Method}}{getJavaMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{getExceptionTypes}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{getParameterTypes}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{getReturnType}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{writeReplace}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{{new}{{{HamcrestArgumentMatcher}}{<}{{T}}{>}}{(}{matcher}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{mockingStarted}{(}{mock}{,}{typeToMock}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockingProgress}}{{p}{=}{{mockingProgress}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{mockingProgress}{()}}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{{mockingProgress}{()}}{.}{pullOngoingStubbing}{()}}{)}}{.}{isNull}{()}}{;}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{stubbingCompleted}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationContainerImpl}}{{invocations}{=}{{new}{{InvocationContainerImpl}}{(}{{new}{{MockSettingsImpl}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{setVerificationStrategy}{(}{{MockingProgressImpl}{.}{getDefaultVerificationStrategy}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{mockingProgress}{()}}{.}{setVerificationStrategy}{(}{{MockingProgressImpl}{.}{getDefaultVerificationStrategy}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{ANY}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{{new}{{Equals}}{(}{null}{)}}{,}{ANY}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{ANY}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{ANY}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MissingInvocationChecker}{.}{checkMissingInvocation}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{MissingInvocationChecker}{.}{checkMissingInvocation}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{MissingInvocationChecker}{.}{checkMissingInvocation}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FailureDetecter}}{{listener}{=}{{new}{{FailureDetecter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{RunnerProvider}}{()}}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{filterRequested}{=}{true}}{;}}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifier}{.}{fireTestFailure}{(}{{new}{{Failure}}{(}{unnecessaryStubbings}{,}{{Reporter}{.}{formatUnncessaryStubbingException}{(}{testClass}{,}{{stubbings}{.}{values}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{MockitoJUnitListener}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{MockitoJUnitListener}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{MockitoJUnitListener}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FailureDetecter}}{{listener}{=}{{new}{{FailureDetecter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{argumentsMatch}{(}{this}{,}{actualArgs}{)}}{;}}{}}}{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{false}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{invocation}{.}{getMock}{()}}{.}{equals}{(}{{actual}{.}{getMock}{()}}{)}}{&&}{{hasSameMethod}{(}{actual}{)}}{&&}{{argumentsMatch}{(}{this}{,}{actual}{)}}}{;}}}
{AST_ROOT_SC2NF{{!}{{hasTestMethods}{(}{klass}{)}}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{{T}}{>}}{settings}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{{T}}{>}}{mockSettings}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Collection}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Map}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{HashMap}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Set}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{HashSet}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{List}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{invocation}{.}{toString}{()}}{)}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{invocation}{.}{toString}{()}}{)}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{invocation}{.}{toString}{()}}{)}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{invocation}{.}{toString}{()}}{)}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{invocation}{.}{toString}{()}}{)}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{chunk}{)}}{.}{containsSequence}{(}{simpleMethodInvocation}{,}{simpleMethodInvocationTwo}{,}{simpleMethodInvocationThree}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{chunk}{)}}{.}{containsSequence}{(}{simpleMethodInvocation}{,}{simpleMethodInvocationTwo}{,}{simpleMethodInvocationThree}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{chunk}{)}}{.}{containsSequence}{(}{simpleMethodInvocation}{,}{simpleMethodInvocationTwo}{)}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{MyAssertionError}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{UnnecessaryStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{filtered}{)}}{.}{has}{(}{{onlyThoseClasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{filtered}{)}}{.}{has}{(}{{onlyThoseClasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{filtered}{)}}{.}{has}{(}{{onlyThoseClasses}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{filtered}{)}}{.}{has}{(}{{onlyThoseClasses}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{filtered}{)}}{.}{has}{(}{{onlyThoseClasses}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{TooLittleActualInvocations}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Result}}{{result}{=}{{runner}{.}{run}{(}{{{SomeFeature}}{.}{class}}{)}}}{;}}{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{e}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{expected}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{expected}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{expected}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{e}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{expected}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{e}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{e}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{e}{)}}{.}{has}{(}{{firstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{t}{)}}{.}{has}{(}{{onlyThoseClassesInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{t}{)}}{.}{has}{(}{{onlyThoseClassesInStackTrace}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{filtered}{)}}{.}{containsSequence}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{timer}{.}{isCounting}{()}}{)}}{.}{isFalse}{()}}{;}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{timer}{.}{isCounting}{()}}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Iterable}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Collection}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Map}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{{new}{{HashMap}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Set}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{{new}{{HashSet}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{List}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{String}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Short}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Double}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Float}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Long}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Integer}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Character}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Byte}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Boolean}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{void}{save}{(}{{{Person}}{capture}}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{targetMethod}{(}{{{String}}{arg}}{)}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{getValue}{(}{{{Integer}}{param}}{)}{;}}}
{AST_ROOT_SC2NF{{{Object}}{otherMethod}{(}{{{Object}}{param}}{)}{;}}}
{AST_ROOT_SC2NF{{{Object}}{someMethod}{(}{{{Object}}{param}}{)}{;}}}
{AST_ROOT_SC2NF{{{{MyIterator}}{<}{{T}}{>}}{iterator}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setSpy}{(}{{{{List}}{<}{?}{>}}{spy}}{)}{{{}{{{{this}{.}{spy}}{=}{spy}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{List}}{<}{?}{>}}{getList}{()}{{{}{{return}{list}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{log}{)}}{.}{containsIgnoringCase}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{doesNotContain}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{doesNotContain}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{org.mockito.exceptions.verification.junit.ArgumentsAreDifferent}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{expected}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{expected}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{{{{{e}{.}{getCause}{()}}{.}{getMessage}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{out}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{name}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{name}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{name}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidUseOfMatchersException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SmartNullPointerException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{mockTwo}{.}{toString}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InstantiationException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{failure}{.}{getException}{()}}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{mockTwo}{.}{toString}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{mockTwo}{.}{toString}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{{MockUtil}{.}{getMockSettings}{(}{mock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{MockUtil}{.}{isMock}{(}{throwable}{)}}{)}{{{}{{throw}{throwable}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{notInitializedSpy}{)}}{;}}{{{assertNotNull}{(}{{notInitializedSpy}{.}{getAList}{()}}{)}}{;}}{{{assertTrue}{(}{{MockUtil}{.}{isMock}{(}{notInitializedSpy}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{should_inject_mocks_in_spy}{()}{{{}{{{assertNotNull}{(}{{initializedSpy}{.}{getAList}{()}}{)}}{;}}{{{assertTrue}{(}{{MockUtil}{.}{isMock}{(}{initializedSpy}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{mockType}{=}{{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{getMockSettings}{()}}{.}{getTypeToMock}{()}}}{;}}}
{AST_ROOT_SC2NF{{MockUtil}{.}{isMock}{(}{instance}{)}}}
{AST_ROOT_SC2NF{{MockUtil}{.}{isMock}{(}{instance}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{isMockOrSpy}{(}{instance}{)}}{)}{{{}{{{MockUtil}{.}{maybeRedefineMockName}{(}{instance}{,}{{field}{.}{getName}{()}}{)}}{;}}{{return}{instance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{?}{>}}{{mockSettings}{=}{{MockUtil}{.}{getMockSettings}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{{parentMockSettings}{=}{{MockUtil}{.}{getMockSettings}{(}{parentMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{Object}}{>}}{{handler}{=}{{MockUtil}{.}{getMockHandler}{(}{{invocation}{.}{getMock}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{MockUtil}{.}{isMock}{(}{subClass.list}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{MockUtil}{.}{isMock}{(}{classMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{MockUtil}{.}{isMock}{(}{interfaceMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{Object}}{>}}{{handler}{=}{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{MockingDetails}}{mockingDetails}{(}{{{Object}}{toInspect}}{)}{{{}{{return}{{new}{{DefaultMockingDetails}}{(}{toInspect}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationContainer}}{{invocationContainer}{=}{{{getMockHandler}{(}{m}{)}}{.}{getInvocationContainer}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mock}{==}{null}}{)}{{{}{{throw}{{nullPassedWhenCreatingInOrder}{()}}{;}}{}}}}{{if}{(}{{!}{{isMock}{(}{mock}{)}}}{)}{{{}{{throw}{{notAMockPassedWhenCreatingInOrder}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{InvocationContainer}}{{invocations}{=}{{{getMockHandler}{(}{mock}{)}}{.}{getInvocationContainer}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{{{getMockHandler}{(}{m}{)}}{.}{getInvocationContainer}{()}}{.}{clearInvocations}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{resetMock}{(}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isMock}{(}{mock}{)}}}{)}{{{}{{throw}{{notAMockPassedToVerify}{(}{{mock}{.}{getClass}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{{mock}{=}{{createMock}{(}{creationSettings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{Object}}{>}}{{handler}{=}{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeMockability}}{{typeMockability}{=}{{MockUtil}{.}{typeMockabilityOf}{(}{classToMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{MockUtil}{.}{typeMockabilityOf}{(}{aClass}{)}}{.}{mockable}{()}}{)}{{{}{{{constructorMockableParamsSize}{++}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{mockName}{=}{{{getMockName}{(}{{{mocks}{.}{iterator}{()}}{.}{next}{()}}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{candidateFieldToBeInjected}{.}{getName}{()}}{.}{equals}{(}{{{getMockName}{(}{mock}{)}}{.}{toString}{()}}{)}}{)}{{{}{{{mockNameMatches}{.}{add}{(}{mock}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{qualifiedName}{=}{{{MockUtil}{.}{getMockName}{(}{{invocation}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{AllInvocationsFinder}{.}{find}{(}{{asList}{(}{mockOne}{,}{mockOne}{,}{mockOne}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{AllInvocationsFinder}{.}{find}{(}{{asList}{(}{mockOne}{,}{mockTwo}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{all}{=}{{AllInvocationsFinder}{.}{find}{(}{createdMocks}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{VerifiableInvocationsFinder}{.}{find}{(}{{inOrder}{.}{getMocksToBeVerifiedInOrder}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{AllInvocationsFinder}{.}{find}{(}{{asList}{(}{mocks}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{forThisVm}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{forThisVm}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mockHandler}{)}}{.}{setAnswersForStubbing}{(}{{ArgumentMatchers}{.}{<}{{{Answer}}{<}{?}{>}}{>}{anyList}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{sorter}{.}{sort}{(}{{ArgumentMatchers}{.}{<}{{String}}{>}{anyList}{()}}{)}}{)}}{.}{thenReturn}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{MissingInvocationChecker}{.}{checkMissingInvocation}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{MissingInvocationChecker}{.}{checkMissingInvocation}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{MissingInvocationChecker}{.}{checkMissingInvocation}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{results}{.}{add}{(}{{sortSuperTypesLast}{(}{{Arrays}{.}{asList}{(}{o}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Field}}{>}}{{sortedFields}{=}{{sortSuperTypesLast}{(}{unsortedFields}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Field}}{>}}{{l}{=}{{sortSuperTypesLast}{(}{{Arrays}{.}{asList}{(}{o1}{,}{o2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{sortSuperTypesLast}{(}{declaredFields}{)}}{;}}}
{AST_ROOT_SC2NF{{isNullOrEmpty}{(}{args}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{InvocationMatcher}}{getWanted}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{isToStringMethod}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isToStringMethod}{(}{{currentInvocation}{.}{getMethod}{()}}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{unstubbedInvocation}{.}{toString}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{filterRequested}}{&&}{{listener}{.}{isSussessful}{()}}}{)}{{{}{{{reporter}{.}{validateUnusedStubs}{(}{testClass}{,}{notifier}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{mockingStarted}{(}{mock}{,}{creationSettings}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldNotifyListenerSafely}{(}{)}{throws}{{Exception}}{{{}{{{mockingProgress}{.}{addListener}{(}{null}{)}}{;}}{{{mockingProgress}{.}{mockingStarted}{(}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{?}{>}}{mocks}}}
{AST_ROOT_SC2NF{{throw}{{cannotInitializeForInjectMocksAnnotation}{(}{{field}{.}{getName}{()}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{checkedValue}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}{{return}{value}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{TypeVariable}}{<}{?}{>}}{typeVariable}{()}{{{}{{return}{typeVariable}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TypeVarBoundedType}{(}{{{{TypeVariable}}{<}{?}{>}}{typeVariable}}{)}{{{}{{{{this}{.}{typeVariable}}{=}{typeVariable}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{TypeVariable}}{<}{?}{>}}{[]}}{typeParameters}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{instanceof}{{TypeVariable}}}{)}{{{}{{return}{{new}{{TypeVariableReturnType}}{(}{this}{,}{{method}{.}{getTypeParameters}{()}}{,}{{(}{{{TypeVariable}}{<}{?}{>}}{)}{type}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{wildCardBoundedType}{.}{firstBound}{()}}{instanceof}{{TypeVariable}}}{)}{{{}{{return}{{boundsOf}{(}{{(}{{{TypeVariable}}{<}{?}{>}}{)}{{wildCardBoundedType}{.}{firstBound}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{TypeVariable}}{<}{?}{>}}{typeVariable}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{to.privateTransientField}{)}}{.}{isNotEqualTo}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{to.finalField}{)}}{.}{isNotEqualTo}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{classToMock}}}
{AST_ROOT_SC2NF{{public}{int}{size}{()}{{{}{{return}{{unused}{.}{size}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{ofThisVm}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{ofThisVm}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{getAuthorName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getAuthorEmail}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toText}{()}{{{}{{return}{{{commits}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{authorName}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAuthorName}{()}{{{}{{return}{author}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAuthorEmail}{()}{{{}{{return}{email}{;}}{}}}}}
{AST_ROOT_SC2NF{{UnusedStubbings}{(}{{{{Collection}}{<}{{?}{extends}{{Stubbing}}}{>}}{unused}}{)}{{{}{{{{this}{.}{unused}}{=}{unused}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{instanceof}{{Class}}}{)}{{{}{{return}{{new}{{NotGenericReturnTypeSupport}}{(}{this}{,}{type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DelayedExecution}}{{delayedExecution}{=}{{new}{{DelayedExecution}}{(}{executor}{,}{mock}{,}{NUMBER_CONSTANT}{,}{MILLISECONDS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DelayedExecution}}{{delayedExecution}{=}{{new}{{DelayedExecution}}{(}{executor}{,}{mock}{,}{NUMBER_CONSTANT}{,}{MILLISECONDS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DelayedExecution}}{{delayedExecution}{=}{{new}{{DelayedExecution}}{(}{executor}{,}{mock}{,}{NUMBER_CONSTANT}{,}{MILLISECONDS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{generatedMockClass}{=}{{generator}{.}{generateMockClass}{(}{features}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldRunInMultipleThreads}{(}{)}{throws}{{Exception}}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{Collections}{.}{emptySet}{()}}{,}{{runInMultipleThreads}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{?}{extends}{{T}}}{>}}{{mockedProxyType}{=}{{createMockType}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{?}{extends}{{T}}}{>}}{{type}{=}{{createMockType}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{dispatcher}{==}{null}}{||}{{!}{{dispatcher}{.}{isMocked}{(}{mock}{,}{origin}{)}}}}}
{AST_ROOT_SC2NF{{public}{AbstractByteBuddyMockMakerTest}{(}{{{MM}}{mockMaker}}{)}{{{}{{{{this}{.}{mockMaker}}{=}{mockMaker}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{generatedMockClass}{=}{{bytecodeGenerator}{.}{mockClass}{(}{features}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{invocation}{.}{getMock}{()}}{.}{equals}{(}{{actual}{.}{getMock}{()}}{)}}{&&}{{hasSameMethod}{(}{actual}{)}}{&&}{{argumentsMatch}{(}{actual}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{given}{(}{{{mock}{(}{{{ConstructorArgumentResolver}}{.}{class}}{)}}{.}{resolveTypeInstances}{(}{{any}{(}{{{Class}}{.}{class}}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{withModifiers}{(}{SynchronizationState.PLAIN}{,}{Visibility.PUBLIC}{)}}}
{AST_ROOT_SC2NF{{{}{{{addStep}{(}{task}{,}{config}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{{wantedMatcher}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{MatchableInvocation}}{invocationMatcher}}{)}{{{}{{return}{{print}{(}{{invocationMatcher}{.}{getMatchers}{()}}{,}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{getWanted}{(}{)}{;}}}
{AST_ROOT_SC2NF{{private}{RemoveNotMatching}{(}{{{MatchableInvocation}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{VerificationDataInOrderImpl}}{{dataInOrder}{=}{{new}{{VerificationDataInOrderImpl}}{(}{inOrder}{,}{invocations}{,}{{data}{.}{getTarget}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{{wanted}{=}{{data}{.}{getTarget}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Checks}{.}{checkNotNull}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{mockingProgress}{()}}{.}{removeListener}{(}{listener}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Checks}{.}{checkNotNull}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{mockingProgress}{()}}{.}{addListener}{(}{listener}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{delayedExecution}{=}{{new}{{DelayedExecution}}{()}}}{;}}{{{stopWatch}{=}{{createNotStarted}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Advice.Return}{(}{{readOnly}{=}{false}}{,}{{typing}{=}{Assigner.Typing.DYNAMIC}}{)}}{{Object}}{returned}}}
{AST_ROOT_SC2NF{{{@}{Advice.AllArguments}}{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{private}{ExcludeHandler}{(}{{{Object}}{root}}{)}{{{}{{{{this}{.}{root}}{=}{root}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Invocation}}{getInvocation}{()}{{{}{{return}{invocation}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isMock}{(}{mock}{)}}{&&}{{{{getMockSettings}{(}{mock}{)}}{.}{getDefaultAnswer}{()}}{==}{Mockito.CALLS_REAL_METHODS}}}{;}}{}}}}
{AST_ROOT_SC2NF{{isMock}{(}{mock}{)}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{stubbingCompleted}{()}}{;}}}
{AST_ROOT_SC2NF{{{AnnotationEngine}}{{customizedEngine}{=}{{new}{{IndependentAnnotationEngine}}{()}{{}}}}{;}}}
{AST_ROOT_SC2NF{{{AnnotationEngine}}{{annotationEngine}{=}{{{new}{{GlobalConfiguration}}{()}}{.}{tryGetPluginAnnotationEngine}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ClassLoader}}{{cl}{=}{{{{{{isolatedClassLoader}{()}}{.}{withCurrentCodeSourceUrls}{()}}{.}{withPrivateCopyOf}{(}{CLASS_NAME_DEPENDING_ON_INTERFACE}{)}}{.}{withPrivateCopyOf}{(}{INTERFACE_NAME}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{format}{(}{STRING_CONSTANT}{,}{classLoader}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{ExcludingURLClassLoaderBuilder}}{without}{(}{{{String}}{.}{.}{.}{privatePrefixes}}{)}{{{}{{{excludedPrefixes}{.}{addAll}{(}{{asList}{(}{privatePrefixes}{)}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoStatement}}{statement}}}
{AST_ROOT_SC2NF{{{mock}{.}{otherMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{doAssert}{(}{{{Throwable}}{throwable}}{)}{{{}{{{{assertThrowable}{(}{throwable}{,}{expected}{)}}{.}{hasMessage}{(}{expectedMessage}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{UnnecessaryStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{beforeTest}{(}{{{Object}}{testClassInstance}}{,}{{{String}}{testMethodName}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{{JUnitRule}}{silent}{()}{{{}{{return}{{new}{{JUnitRule}}{(}{logger}{,}{Strictness.SILENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{JUnitRule}}{(}{{new}{{ConsoleMockitoLogger}}{()}}{,}{JUnitRule.Strictness.WARN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{void}{doAssert}{(}{{{Throwable}}{t}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{rule_validates_mockito_usage}{(}{)}{throws}{{Throwable}}{{{}{{{rule}{.}{expectFailure}{(}{{{UnfinishedVerificationException}}{.}{class}}{)}}{;}}{{{verify}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{PotentialStubbingProblem}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{UnnecessaryStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{RuntimeException}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{rule}{.}{expectFailure}{(}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}{{{when}{(}{{mock}{.}{simpleMethod}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{rule}{.}{expectFailure}{(}{{{RuntimeException}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectFailure}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyStubbedAnswerLookup}{(}{invocation}{,}{stubbedInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{StubbingLookupListener}}{>}}{getStubbingLookupListeners}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{JUnitRule}}{(}{{new}{{ConsoleMockitoLogger}}{()}}{,}{Strictness.WARN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MockitoRule}}{silent}{()}{{{}{{return}{{new}{{JUnitRule}}{(}{logger}{,}{Strictness.LENIENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{case}{LENIENT}{:}}}
{AST_ROOT_SC2NF{{{(}{{(}{{CreationSettings}}{)}{settings}}{)}}{.}{getStubbingLookupListeners}{()}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{verificationStarted}{(}{{new}{{MockAwareVerificationMode}}{(}{mock}{,}{actualMode}{,}{{mockingProgress}{.}{verificationListeners}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{int}{wantedArgumentPosition}{()}{{{}{{return}{wantedArgumentPosition}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DefaultAnswerValidator}{.}{validateReturnValueFor}{(}{invocation}{,}{ret}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{boolean}{returnsNull}{()}{{{}{{return}{{value}{==}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{reportMatcher}{(}{{{{ArgumentMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{{matcherStack}{.}{push}{(}{{new}{{LocalizedMatcher}}{(}{matcher}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{StrictRunner}}{(}{{{new}{{RunnerFactory}}{()}}{.}{createStrict}{(}{klass}{)}}{,}{klass}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{StrictRunner}}{(}{{{new}{{RunnerFactory}}{()}}{.}{createStrict}{(}{klass}{)}}{,}{klass}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{RunnerImpl}}{{runner}{=}{{provider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{{this}{.}{getClass}{()}}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{MockitoJUnitRunner}{(}{{{InternalRunner}}{runner}}{)}{throws}{{InvocationTargetException}}{{{}{{{{this}{.}{runner}}{=}{runner}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InternalRunner}}{runner}}}
{AST_ROOT_SC2NF{{loader}{.}{getStrategy}{(}{features.mockedType}{)}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{InlineByteBuddyMockMaker}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}{)}}{.}{isSameAs}{(}{throwable}{)}}{;}}}
{AST_ROOT_SC2NF{{{throwable}{=}{{InlineByteBuddyMockMaker}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{mockable}{()}{{{}{{return}{{{INSTRUMENTATION}{.}{isModifiableClass}{(}{type}{)}}{&&}{{!}{{EXCLUDES}{.}{contains}{(}{type}{)}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{!=}{successCount}}{)}{{{}{{throw}{{new}{{AssertionError}}{(}{{STRING_CONSTANT}{+}{successCount}{+}{STRING_CONSTANT}{+}{i}{+}{STRING_CONSTANT}{+}{{result}{.}{getRunCount}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{runner}{.}{run}{(}{{{StubbingArgMismatch}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{runner}{.}{run}{(}{{{UnnecessaryStubbing}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{withSettings}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{AndroidClassLoadingStrategy.Injecting}}{(}{target}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockSettings}}{{settings}{=}{{{{withSettings}{()}}{.}{defaultAnswer}{(}{CALLS_REAL_METHODS}{)}}{.}{name}{(}{{field}{.}{getName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{Mockito}{.}{mock}{(}{{instance}{.}{getClass}{()}}{,}{{{{{withSettings}{()}}{.}{spiedInstance}{(}{instance}{)}}{.}{defaultAnswer}{(}{CALLS_REAL_METHODS}{)}}{.}{name}{(}{{field}{.}{getName}{()}}{)}}{)}}}
{AST_ROOT_SC2NF{{InnerStaticClassWithNoArgConstructor}{(}{{{String}}{f}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{noMatchingConstructor}{(}{cls}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsChecker}{.}{checkNumberOfInvocations}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argMismatchStubbings}{.}{isEmpty}{()}}}{)}{{{}{{{mismatchesReported}{=}{true}}{;}}{{{Reporter}{.}{potentialStubbingProblem}{(}{invocation}{,}{argMismatchStubbings}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{framework}{()}}{.}{addListener}{(}{listener}{)}}{;}}{}}}{{catch}{(}{{{RedundantListenerException}}{e}}{)}{{{}{{{Reporter}{.}{unfinishedMocking}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{Failure}}{{f}{=}{{firstOf}{(}{{result}{.}{getFailures}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{mockito}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockito}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockito}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockito}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{mock}{.}{otherMethod}{()}}{;}}{{{mockito}{.}{finishMocking}{()}}{;}}{{{logger}{.}{assertEmpty}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{new}{{Runnable}}{()}{{{}{{public}{void}{run}{()}{{{}{{{mockito}{.}{finishMocking}{()}}{;}}{}}}}{}}}}{)}}{.}{throwsException}{(}{{{UnnecessaryStubbingException}}{.}{class}}{)}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{currentStrictness}}{=}{strictness}}{;}}{{{{this}{.}{stubbingLookupListener}}{.}{setCurrentStrictness}{(}{strictness}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{event}{.}{getFailure}{()}}{==}{null}}{&&}{{!}{{stubbingLookupListener}{.}{isMismatchesReported}{()}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{framework}{()}}{.}{addListener}{(}{listener}{)}}{;}}{}}}{{catch}{(}{{{RedundantListenerException}}{e}}{)}{{{}{{{Reporter}{.}{unfinishedMockingSession}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{fails}{(}{{{UnfinishedMockingSessionException}}{.}{class}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{succeeds}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{PotentialStubbingProblem}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{decamelizeMatcher}{(}{{{matcher}{.}{getClass}{()}}{.}{getSimpleName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{ExceptionFactory}{.}{createArgumentsAreDifferentException}{(}{message}{,}{wanted}{,}{actual}{)}}{;}}}
{AST_ROOT_SC2NF{{withModifiers}{(}{SynchronizationState.PLAIN}{)}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{MockMethodAdvice}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}{)}}{.}{isSameAs}{(}{throwable}{)}}{;}}}
{AST_ROOT_SC2NF{{{throwable}{=}{{MockMethodAdvice}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{paramsMatch}{(}{types}{,}{params}{)}}{)}{{{}{{{evaluateConstructor}{(}{matchingConstructors}{,}{constructor}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{forObject}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{throwable}}{)}{{{}{{{lastException}{=}{throwable}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{unused}{.}{isEmpty}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{STRING_CONSTANT}{.}{equals}{(}{{method}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{.}{equals}{(}{{method}{.}{getName}{()}}{)}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{.}{equals}{(}{{m}{.}{getName}{()}}{)}}}
{AST_ROOT_SC2NF{{{Type}}{{genericInterface}{=}{{findGenericInterface}{(}{match}{,}{targetBaseInterface}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{{Class}}{<}{?}{>}}{[]}}{getParameterTypes}{()}{{{}{{return}{parameterTypes}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arguments}}{=}{{ArgumentsProcessor}{.}{expandArgs}{(}{mockitoMethod}{,}{args}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{arguments}}{=}{{ArgumentsProcessor}{.}{expandArgs}{(}{mockitoMethod}{,}{arguments}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parameterTypes}{=}{{SuspendMethod}{.}{trimSuspendParameterTypes}{(}{{method}{.}{getParameterTypes}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{wantedArgumentPositionIsValidForInvocation}{(}{invocation}{,}{argumentPosition}{)}}}{)}{{{}{{throw}{{invalidArgumentPositionRangeAtInvocationTime}{(}{invocation}{,}{{wantedArgumentPosition}{==}{LAST_ARGUMENT}}{,}{wantedArgumentPosition}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{validateArgumentTypeCompatibility}{(}{{(}{{Invocation}}{)}{invocation}}{,}{argumentPosition}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{InOrderImpl}{(}{{{{List}}{<}{?}{>}}{mocksToBeVerifiedInOrder}}{)}{{{}{{{{this}{.}{mocksToBeVerifiedInOrder}}{.}{addAll}{(}{mocksToBeVerifiedInOrder}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{getAllValues}{()}}{)}}{.}{containsSequence}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{?}{>}}{mocks}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{asList}{(}{mock1}{,}{mock2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{given}{(}{{iMethods}{.}{varargsObject}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{any}{()}}{)}}{)}}{.}{will}{(}{{returnsArgAt}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{indirect}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnusedStubbings}}{{stubbings}{=}{{new}{{UnusedStubbings}}{(}{{Arrays}{.}{<}{{Stubbing}}{>}{asList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Stubbing}}{>}}{getStubbedInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{MockHandler}}{handler}}}
{AST_ROOT_SC2NF{{public}{NullResultGuardian}{(}{{{{MockHandler}}{<}{{T}}{>}}{delegate}}{)}{{{}{{{{this}{.}{delegate}}{=}{delegate}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{MockAccess}}{)}{mock}}{)}}{.}{setMockitoInterceptor}{(}{{new}{{MockMethodInterceptor}}{(}{newHandler}{,}{settings}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockAccess}{.}{setMockitoInterceptor}{(}{{new}{{MockMethodInterceptor}}{(}{handler}{,}{settings}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandler}}{<}{?}{>}}{{handler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandler}}{<}{?}{>}}{{handler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandler}}{<}{{T}}{>}}{mockHandler}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{{Answer}}{<}{?}{>}}{>}}{answers}}{)}{{{}{{{invocationContainer}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{invocationContainer}}{=}{{new}{{InvocationContainerImpl}}{(}{mockSettings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{<}{{M}}{>}{{M}}{getMock}{()}{{{}{{return}{{(}{{M}}{)}{{invocationContainer}{.}{invokedMock}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{getInvocationContainer}{()}}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{extends}{{Stubbing}}}{>}}{{stubbings}{=}{{{getInvocationContainer}{()}}{.}{getStubbedInvocations}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationContainerImpl}}{invocations}}}
{AST_ROOT_SC2NF{{{InvocationContainerImpl}}{{invocations}{=}{{getInvocationContainer}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{{getInvocationContainer}{(}{m}{)}}{.}{clearInvocations}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockUtil}{.}{getInvocationContainer}{(}{mock}{)}}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationContainerImpl}}{invocationContainer}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{{T}}{>}}{{creationSettings}{=}{{impl}{.}{build}{(}{typeToMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{{{MockHandler}}{<}{{Object}}{>}}{mockHandler}{()}{{{}{{{assertGoodMock}{()}}{;}}{{return}{{MockUtil}{.}{getMockHandler}{(}{toInspect}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{given}{(}{{handler.invocationContainer}{.}{findAnswerFor}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{)}}{.}{willReturn}{(}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interceptor}{==}{null}}{)}{{{}{{return}{stubValue}{;}}{}}}}{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{InterceptedInvocation.RealMethod.IsIllegal.INSTANCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{{new}{{InterceptedInvocation.RealMethod.FromCallable}}{(}{superCall}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verify}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{RealMethod.FromCallable}}{{superMethod}{=}{{new}{{RealMethod.FromCallable}}{(}{realMethod}{)}}}{;}}{{return}{{MockMethodInterceptor}{.}{createInvocation}{(}{target}{,}{method}{,}{args}{,}{superMethod}{,}{settings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interceptor}{==}{null}}{)}{{{}{{return}{stubValue}{;}}{}}}}{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{RealMethod.IsIllegal.INSTANCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{{new}{{RealMethod.FromCallable}}{(}{superCall}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{RealMethod}}{{realMethod}}{;}}}
{AST_ROOT_SC2NF{{return}{{{!}{{{node}{.}{getSort}{()}}{.}{isResolved}{()}}}{||}{{!}{{{{node}{.}{getRepresentative}{()}}{.}{asDefined}{()}}{.}{represents}{(}{origin}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isMock}{(}{mock}{)}}}{)}{{{}{{throw}{{notAMockPassedToWhenMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnusedStubbings}}{{stubbings}{=}{{new}{{UnusedStubbings}}{(}{{Collections}{.}{<}{{Stubbing}}{>}{emptyList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{addListeners}{(}{listeners}{,}{{this}{.}{verificationStartedListeners}}{,}{STRING_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{should_throw_correct_exception_for_null_invocation_listener}{(}{)}{throws}{{Exception}}{{{}{{throw}{{Reporter}{.}{methodDoesNotAcceptNullParameters}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{should_throw_correct_exception_for_null_invocation_listener}{(}{)}{throws}{{Exception}}{{{}{{throw}{{Reporter}{.}{methodDoesNotAcceptParameter}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mock}{==}{null}}{)}{{{}{{throw}{{Reporter}{.}{methodDoesNotAcceptParameter}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{mock}}{=}{mock}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationStartedEvent}}{{event}{=}{{new}{{Event}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{mock}{=}{{(}{{T}}{)}{{VerificationStartedNotifier}{.}{notifyVerificationStarted}{(}{{{handler}{.}{getMockSettings}{()}}{.}{getVerificationStartedListeners}{()}}{,}{mockitoMock}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{MockitoMock}}{getMockitoMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{new}{{MockitoMock}}{(}{mock}{,}{{mockMaker}{.}{getHandler}{(}{mock}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{does_not_do_anything_when_list_is_empty}{(}{)}{throws}{{Exception}}{{{}{{{VerificationStartedNotifier}{.}{notifyVerificationStarted}{(}{{(}{{List}}{)}{{emptyList}{()}}}{,}{mockitoMock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockingDetails}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockingDetails}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockingDetails}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{does_not_do_anything_when_list_is_empty}{(}{)}{throws}{{Exception}}{{{}{{{VerificationStartedNotifier}{.}{notifyVerificationStarted}{(}{{(}{{List}}{)}{{emptyList}{()}}}{,}{mockingDetails}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{{captor}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Object}}{getOuterClassInstance}{()}{{{}{{return}{outerClassInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Object}}{getSpiedInstance}{()}{{{}{{return}{spiedInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{MockName}}{getMockName}{()}{{{}{{return}{mockName}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Object}}{getOuterClassInstance}{()}{{{}{{return}{outerClassInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{SerializableMode}}{getSerializableMode}{()}{{{}{{return}{serializableMode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{MockName}}{getMockName}{()}{{{}{{return}{mockName}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Object}}{getSpiedInstance}{()}{{{}{{return}{spiedInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SerializableClass}}{{proxy}{=}{{mockMaker}{.}{createMock}{(}{{serializableSettingsFor}{(}{{{SerializableClass}}{.}{class}}{,}{SerializableMode.BASIC}{)}}{,}{{dummyHandler}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OtherClass}}{{mock}{=}{{mockMaker}{.}{createMock}{(}{{settingsWithConstructorFor}{(}{{{OtherClass}}{.}{class}}{)}}{,}{{dummyHandler}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SomeClass}}{{mock}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{SomeClass}}{.}{class}}{,}{{{SomeInterface}}{.}{class}}{)}}{,}{{dummyHandler}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ClassWithDodgyConstructor}}{{mock}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{ClassWithDodgyConstructor}}{.}{class}}{)}}{,}{{dummyHandler}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ClassWithoutConstructor}}{{proxy}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{ClassWithoutConstructor}}{.}{class}}{)}}{,}{{dummyHandler}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SomeInterface}}{{proxy}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{SomeInterface}}{.}{class}}{)}}{,}{{dummyHandler}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{MockitoMockKey}}{(}{params.mockedType}{,}{params.interfaces}{,}{params.serializableMode}{,}{params.stripAnnotations}{)}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{bytecodeGenerator}}{=}{bytecodeGenerator}}{;}}{{{typeCache}{=}{{new}{{{TypeCache.WithInlineExpunction}}{<}{{MockitoMockKey}}{>}}{(}{{weak}{?}{TypeCache.Sort.WEAK}{:}{TypeCache.Sort.SOFT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{!}{{selfCallInfo}{.}{isSelfInvocation}{(}{instance}{)}}}{&&}{{isMock}{(}{instance}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getFoo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{mock}{,}{{{after}{(}{NUMBER_CONSTANT}{)}}{.}{atLeast}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{oneArg}{(}{CHAR_CONS}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{threads}{.}{awaitTermination}{(}{NUMBER_CONSTANT}{,}{TimeUnit.MILLISECONDS}{)}}}{)}{{{}{{{fail}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{threads}{.}{awaitTermination}{(}{NUMBER_CONSTANT}{,}{TimeUnit.MILLISECONDS}{)}}}{)}{{{}{{{fail}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TestedObject}}{{mock}{=}{{mock}{(}{{{TestedObject}}{.}{class}}{,}{CALLS_REAL_METHODS}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{mock.value}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{when}{(}{{mock}{.}{getValue}{()}}{)}}{.}{thenCallRealMethod}{()}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{sb}{.}{append}{(}{STRING_CONSTANT}{)}}{.}{append}{(}{mock}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{singletonLock}{||}{{classLoader}{==}{null}}}{?}{BOOTSTRAP_LOCK}{:}{classLoader}}}
{AST_ROOT_SC2NF{{{}{{return}{{{selfCallInfo}{.}{checkSuperCall}{(}{instance}{)}}{&&}{{isMock}{(}{instance}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isMock}{(}{{{Object}}{instance}}{)}{{{}{{return}{{{instance}{!=}{interceptors.target}}{&&}{{interceptors}{.}{containsKey}{(}{instance}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Throwable}}{getFailure}{()}{{{}{{return}{testFailure}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{filterLineNo}{(}{{STRING_CONSTANT}{+}{TEST_NAME}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{,}{{filterLineNo}{(}{{logger}{.}{getLoggedInfo}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{filterLineNo}{(}{{STRING_CONSTANT}{+}{TEST_NAME}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{,}{{filterLineNo}{(}{{logger}{.}{getLoggedInfo}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{getTestName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{org.mockito.creation.instance.InstantiationException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{type}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{org.mockito.creation.instance.InstantiationException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{org.mockito.creation.instance.InstantiationException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{org.mockito.creation.instance.InstantiationException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{mockedProxyType}{.}{getSuperclass}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{explosive}{.}{get}{()}}{!=}{null}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{{{{MyMockMaker}}{.}{class}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{pluginType}{.}{cast}{(}{{new}{{InstantiatorProvider2Adapter}}{(}{{create}{(}{{{InstantiatorProvider2}}{.}{class}}{,}{className}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{instantiatorProvider}{=}{{new}{{InstantiatorProviderAdapter}}{(}{{(}{{InstantiatorProvider}}{)}{impl}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{createInvocation}{(}{target}{,}{method}{,}{args}{,}{superMethod}{,}{settings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mockRef}}{.}{get}{()}}{.}{equals}{(}{{other.mockRef}{.}{get}{()}}{)}}}
{AST_ROOT_SC2NF{{public}{{String}}{getStuff}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ref}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{instanceRef}}{=}{{new}{{{MockWeakReference}}{<}{{Object}}{>}}{(}{instance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{{ref}{=}{{{this}{.}{ref}}{.}{get}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{instanceRef}}{=}{{new}{{{MockWeakReference}}{<}{{Object}}{>}}{(}{instance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{throwableType}{==}{null}}{)}{{{}{{return}{{abortNullExceptionType}{()}}{;}}{}}}}{{return}{{thenThrow}{(}{{newInstance}{(}{throwableType}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{ThrowsException}}{(}{{new}{{IOException}}{()}}{)}}{.}{validateFor}{(}{{createMethodInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{ThrowsException}}{(}{{new}{{CharacterCodingException}}{()}}{)}}{.}{validateFor}{(}{{createMethodInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{new}{{ThrowsException}}{(}{throwableToRaise}{)}}{.}{answer}{(}{{createMethodInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{ThrowsException}}{(}{{mock}{(}{{{Exception}}{.}{class}}{)}}{)}}{.}{answer}{(}{{createMethodInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{ThrowsException}}{(}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{)}}{.}{answer}{(}{{createMethodInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{throwableType}{==}{null}}{)}{{{}{{{{mockingProgress}{()}}{.}{reset}{()}}{;}}{{throw}{{notAnException}{()}}{;}}{}}}}{{return}{{thenThrow}{(}{{newInstance}{(}{throwableType}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Object}}{>}}{testInstances}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{field}{.}{isAnnotationPresent}{(}{u}{)}}{)}{{{}{{throw}{{unsupportedCombinationOfAnnotations}{(}{{annotation}{.}{getSimpleName}{()}}{,}{{u}{.}{getSimpleName}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isPrimitiveOrWrapper}{(}{valueClass}{)}}{&&}{{isPrimitiveOrWrapper}{(}{referenceType}{)}}}{)}{{{}{{return}{{{Primitives}{.}{primitiveTypeOf}{(}{valueClass}{)}}{.}{isAssignableFrom}{(}{{Primitives}{.}{primitiveTypeOf}{(}{referenceType}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Annotation}}{firstParamAnnotation}}{:}{firstParamAnnotations}{)}{{{}{{if}{(}{{annotationClass}{.}{isAssignableFrom}{(}{{firstParamAnnotation}{.}{annotationType}{()}}{)}}{)}{{{}{{return}{{(}{{T}}{)}{firstParamAnnotation}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{subList}{.}{isEmpty}{()}}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{@}{SuppressWarnings}{(}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}{)}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{ofThisVm}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V7}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{isComingFromJDK}{(}{type}{)}}{||}{{isComingFromSignedJar}{(}{type}{)}}{||}{{isComingFromSealedPackage}{(}{type}{)}}}{)}{{{}{{{typeName}{=}{{CODEGEN_PACKAGE}{+}{{type}{.}{getSimpleName}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{Opcodes.ASM6}{,}{cv}{)}{;}}{{{{this}{.}{typeDescription}}{=}{typeDescription}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{MockitoExtension}{()}{{{}{{this}{(}{Strictness.STRICT_STUBS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{rawArguments}{==}{matcherCount}}{&&}{{isLastMatcherVarargMatcher}{(}{matchers}{)}}}{)}{{{}{{return}{MATCH_EACH_VARARGS_WITH_LAST_MATCHER}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{radiusGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{radiusGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{radiusGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{radiusGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{angleGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{angleGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{angleGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{angleGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{angleLabelsVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{angleLabelsVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{cornerTextItems}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{removed}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionDepth}}{=}{sectionDepth}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{outerSeparatorExtension}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{innerSeparatorExtension}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{separatorsVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBorder}}{=}{status}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{labelType}}{!=}{type}}{)}{{{}{{{{this}{.}{labelType}}{=}{type}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setFixedRangeAxisSpace}{(}{space}{)}}{;}}{{{setFixedRangeAxisSpaceForSubplots}{(}{space}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{intervals}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{dialOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBorder}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{dialBackgroundPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{tickLabelsVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{tickLabelsVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{units}}{=}{units}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendLabelURLGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendLabelToolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{urlGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{simpleLabels}}{=}{simple}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelShadowPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelOutlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelBackgroundPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelLinkMargin}}{=}{margin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelLinksVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumLabelWidth}}{=}{width}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelGap}}{=}{gap}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shadowYOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shadowXOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shadowPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlineStrokeMap}}{.}{put}{(}{key}{,}{stroke}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlinePaintMap}}{.}{put}{(}{key}{,}{paint}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionPaintMap}}{.}{put}{(}{key}{,}{paint}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{ignoreZeroValues}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{ignoreNullValues}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{circular}}{=}{circular}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{interiorGap}}{!=}{percent}}{)}{{{}{{{{this}{.}{interiorGap}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{startAngle}}{=}{angle}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isRangeCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairLockedOnData}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isDomainCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairLockedOnData}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{annotations}}{!=}{null}}{)}{{{}{{{{this}{.}{annotations}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeMarkers}}{!=}{null}}{)}{{{}{{{{this}{.}{rangeMarkers}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainMarkers}}{!=}{null}}{)}{{{}{{{{this}{.}{domainMarkers}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{colorBar}}{=}{axis}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{colorBarLocation}}{=}{edge}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{urlGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlineStrokeList}}{.}{setStroke}{(}{series}{,}{stroke}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlinePaintList}}{.}{setPaint}{(}{series}{,}{paint}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesPaintList}}{.}{setPaint}{(}{series}{,}{paint}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{axisLabelGap}}{=}{gap}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{interiorGap}}{!=}{percent}}{)}{{{}{{{{this}{.}{interiorGap}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maxValue}}{=}{value}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{startAngle}}{=}{angle}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{headPercent}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{webFilled}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{darkerSides}}{=}{darker}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{depthFactor}}{=}{factor}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{columnRadius}}{=}{r}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{bulbRadius}}{=}{r}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useSubrangePaint}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{followDataInSubranges}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{this}{.}{subrangePaint}}{[}{range}{]}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showValueLines}}{=}{b}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{valuePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{valueFont}}{=}{f}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{axisLocation}}{=}{location}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{valueLocation}}{=}{location}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{units}}{!=}{u}}{)}{{{}{{{{this}{.}{units}}{=}{u}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{paint}{!=}{null}}{)}{{{}{{{{this}{.}{thermometerPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{!=}{null}}{)}{{{}{{{{this}{.}{thermometerStroke}}{=}{s}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{limit}}{=}{limit}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderingHints}}{.}{put}{(}{RenderingHints.KEY_TEXT_ANTIALIASING}{,}{val}{)}}{;}}{{{notifyListeners}{(}{{new}{{ChartChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{datasetToScaleMap}}{.}{set}{(}{index}{,}{{new}{{Integer}}{(}{scaleIndex}{)}}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{iterateRangeBounds}{(}{dataset}{,}{includeInterval}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{iterateRangeBounds}{(}{dataset}{,}{includeInterval}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{datasetChanged}{(}{{{DatasetChangeEvent}}{event}}{)}{{{}{{{notifyListeners}{(}{event}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{gap}{=}{{height}{-}{sumOfLabelHeights}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findRangeBounds}{(}{d}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{delta}{=}{{getTickLength}{()}}}{;}}}
{AST_ROOT_SC2NF{{{XYSeries}}{{series}{=}{{new}{{XYSeries}}{(}{STRING_CONSTANT}{,}{true}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{stroke}{instanceof}{{BasicStroke}}}{)}{{{}{{{setData}{(}{stroke}{)}}{;}}{}}}{else}{{{}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{double}{{maxWidth}{=}{{space}{*}{{getMaximumItemWidth}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}{{{setURLGenerator}{(}{urlGenerator}{)}}{;}}{{{setBaseShapesVisible}{(}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getUpperDate}{()}{{{}{{return}{{new}{{Date}}{(}{{this}{.}{upperDate}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getLowerDate}{()}{{{}{{return}{{new}{{Date}}{(}{{this}{.}{lowerDate}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{getSerialIndex}{()}{{{}{{return}{{this}{.}{time}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{time}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{getMiddleMillisecond}{()}{{{}{{return}{{this}{.}{time}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{time}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{getLastMillisecond}{()}{{{}{{return}{{this}{.}{time}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{time}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{getFirstMillisecond}{()}{{{}{{return}{{this}{.}{time}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{difference}{=}{{{this}{.}{time}}{-}{t1.time}}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{hashCode}{()}{{{}{{return}{{(}{int}{)}{{this}{.}{time}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{FixedMillisecond}}{{m}{=}{{(}{{FixedMillisecond}}{)}{object}}}{;}}{{return}{{{this}{.}{time}}{==}{{m}{.}{getFirstMillisecond}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{t}{=}{{this}{.}{time}}}{;}}}
{AST_ROOT_SC2NF{{long}{{t}{=}{{this}{.}{time}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getTime}{()}{{{}{{return}{{new}{{Date}}{(}{{this}{.}{time}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{time}}{=}{{time}{.}{getTime}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{isPointInRect}{(}{dataArea}{,}{xx}{,}{yy}{)}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getEnd}{()}{{{}{{return}{{new}{{Date}}{(}{{this}{.}{end}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getStart}{()}{{{}{{return}{{new}{{Date}}{(}{{this}{.}{start}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RelativeDateFormat}}{{rdf}{=}{{new}{{RelativeDateFormat}}{(}{{{c0}{.}{getTime}{()}}{.}{getTime}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{skip}}}
{AST_ROOT_SC2NF{{if}{(}{{pointCount}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{periodCount}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setChart}{(}{chart}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLayout}{(}{layout}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLayout}{(}{layout}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLayout}{(}{layout}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{parent}{,}{style}{)}{;}}{{{setColor}{(}{color}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{{setDataset}{(}{dataset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{lookupSectionPaint}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{lookupSectionPaint}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{lookupSectionPaint}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EventListener}}{listener}}}
{AST_ROOT_SC2NF{{if}{(}{currentGridBandIsDark}{)}{{{}{{{g2}{.}{setPaint}{(}{{this}{.}{gridBandPaint}}{)}}{;}}{}}}{else}{{{}{{{g2}{.}{setPaint}{(}{{this}{.}{gridBandAlternatePaint}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{currentGridBandIsDark}{)}{{{}{{{g2}{.}{setPaint}{(}{{this}{.}{gridBandPaint}}{)}}{;}}{}}}{else}{{{}{{{g2}{.}{setPaint}{(}{{this}{.}{gridBandAlternatePaint}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{autoPopulateSeriesStroke}}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{{renderer}{.}{getShadowPaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{renderer}{.}{getItemOutlinePaint}{(}{row}{,}{column}{)}}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{{renderer}{.}{getShadowPaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{{{-}{s}}{-}{NUMBER_CONSTANT}}{)}}{,}{{new}{{Double}}{(}{negBase}{)}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TimeZone}}{zone}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{year}}{<}{Year.MAXIMUM_YEAR}}{)}{{{}{{return}{{new}{{Year}}{(}{{{this}{.}{year}}{+}{NUMBER_CONSTANT}}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{year}{<}{Year.MINIMUM_YEAR}}{)}}{||}{{(}{{year}{>}{Year.MAXIMUM_YEAR}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{year}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{createStandardDateTickUnits}{(}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{(}{{this}{.}{timeZone}}{,}{{this}{.}{locale}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{(}{{this}{.}{timeZone}}{,}{{this}{.}{locale}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{r}{.}{getAutoPopulateSeriesStroke}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{item}{==}{{s}{.}{getLastItemIndex}{()}}}{)}{{{}{{{drawFirstPassShape}{(}{g2}{,}{pass}{,}{series}{,}{item}{,}{s.seriesPath}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setMinorTickCount}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkOutsideLength}}{=}{length}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkInsideLength}}{=}{length}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickMarkStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickMarkOutsideLength}}{=}{length}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickMarkInsideLength}}{=}{length}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{tickMarksVisible}}}{)}{{{}{{{{this}{.}{tickMarksVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelInsets}}{=}{insets}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{minorTickMarksVisible}}}{)}{{{}{{{{this}{.}{minorTickMarksVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{tickLabelsVisible}}}{)}{{{}{{{{this}{.}{tickLabelsVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{axisLineVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelAngle}}{=}{angle}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelInsets}}{=}{insets}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{visible}}}{)}{{{}{{{{this}{.}{visible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{SubCategoryAxisTests}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{{{success}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{{{success}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer1}{.}{setBaseToolTipGenerator}{(}{{StandardXYToolTipGenerator}{.}{getTimeSeriesInstance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ResourceBundle}}{{resources}{=}{{ResourceBundleWrapper}{.}{getBundle}{(}{baseResourceClass}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shell}}{.}{setText}{(}{{{ResourceBundleWrapper}{.}{getBundle}{(}{STRING_CONSTANT}{)}}{.}{getString}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ResourceBundle}}{{resources}{=}{{ResourceBundleWrapper}{.}{getBundle}{(}{baseName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{{this}{.}{unitType}}{.}{hashCode}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{overwritten}{=}{{new}{{TimeSeries}}{(}{{STRING_CONSTANT}{+}{{getKey}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{SeriesException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{name}{,}{DEFAULT_DOMAIN_DESCRIPTION}{,}{DEFAULT_RANGE_DESCRIPTION}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{drawZoomRectangle}{(}{g2}{,}{{!}{{this}{.}{useBuffer}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{this}{.}{useBuffer}}}{)}{{{}{{{drawZoomRectangle}{(}{g2}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{zoomFillPaint}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Color}}{(}{g}{,}{g}{,}{g}{,}{{this}{.}{alpha}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowsVisible}}{=}{{getDefaultShadowsVisible}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowsVisible}}{=}{{getDefaultShadowsVisible}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{dataset}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{(}{zone}{,}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{renderer}{.}{getItemOutlinePaint}{(}{row}{,}{column}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeChooserPanel}}{{panel}{=}{{new}{{StrokeChooserPanel}}{(}{{this}{.}{gridStrokeSample}}{,}{{this}{.}{availableStrokeSamples}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeChooserPanel}}{{panel}{=}{{new}{{StrokeChooserPanel}}{(}{{this}{.}{outlineStrokeSample}}{,}{{this}{.}{availableStrokeSamples}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{first}{,}{last}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{result}{=}{{new}{{TimeSeries}}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series1}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{calendar}{.}{add}{(}{{unit}{.}{getCalendarField}{()}}{,}{{unit}{.}{getMultiple}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOutlineVisible}{()}{{{}{{return}{{this}{.}{outlineVisible}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{maxY}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{minY}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{maxX}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{minX}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.zValues}{=}{{DataUtilities}{.}{clone}{(}{{this}{.}{zValues}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Stroke}}{getLabelOutlineStroke}{()}{{{}{{return}{{this}{.}{labelOutlineStroke}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{s1}{.}{updateByIndex}{(}{NUMBER_CONSTANT}{,}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{s1}{.}{updateByIndex}{(}{NUMBER_CONSTANT}{,}{{new}{{Double}}{(}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{rangeAxis}{.}{resizeRange2}{(}{factor}{,}{anchorY}{)}}{;}}}
{AST_ROOT_SC2NF{{{rangeAxis}{.}{resizeRange2}{(}{factor}{,}{anchorY}{)}}{;}}}
{AST_ROOT_SC2NF{{{domainAxis}{.}{resizeRange2}{(}{factor}{,}{anchorX}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtilities}{.}{javascriptEscape}{(}{toolTipText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{Double}{.}{isNaN}{(}{hiY}{)}}}{)}{{{}{{{result}{=}{{Math}{.}{max}{(}{result}{,}{hiY}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxis}}{.}{resizeRange2}{(}{factor}{,}{anchorX}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{renderer}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangePannable}}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{(}{{mods}{&}{{this}{.}{panMask}}}{)}}{==}{{this}{.}{panMask}}}}
{AST_ROOT_SC2NF{{if}{(}{{entities}{!=}{null}}{)}{{{}{{{addEntity}{(}{entities}{,}{hotspot}{,}{dataset}{,}{row}{,}{column}{,}{x1}{,}{y1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberAxis3D}{(}{{{String}}{label}}{)}{{{}{{super}{(}{label}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stripOutlineVisible}}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series}{=}{{new}{{TimeSeries}}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{{{success}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{{new}{{Line2D.Double}}{(}{startX}{,}{startY}{,}{arrowBaseX}{,}{arrowBaseY}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{showBase}}{)}{{{}{{{result}{.}{append}{(}{{this}{.}{baseLabel}}{)}}{;}}{{{result}{.}{append}{(}{{this}{.}{powerLabel}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendShapeList}}{.}{setShape}{(}{series}{,}{shape}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{legendShapeList}}{.}{getShape}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{result}{;}}}
{AST_ROOT_SC2NF{{double}{{ol}}{;}}}
{AST_ROOT_SC2NF{{double}{{transY0}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{seriesPaint}}{;}}}
{AST_ROOT_SC2NF{{double}{{value}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{titleArea}}{;}}}
{AST_ROOT_SC2NF{{double}{{x0}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesDataItem}}{{item}{=}{{series}{.}{getRawDataItem}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getRawDataItem}{(}{index}{)}}{.}{getValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getRawDataItem}{(}{index}{)}}{.}{getPeriod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{XYDataItem}}{{item}{=}{{getRawDataItem}{(}{index}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getRawDataItem}{(}{index}{)}}{.}{getY}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getRawDataItem}{(}{index}{)}}{.}{getX}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{double}{[]}}{)}{{{this}{.}{coefficients}}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{maxRadius}{=}{{{plot}{.}{getAxis}{()}}{.}{getUpperBound}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDataset}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireDatasetChanged}{()}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{{new}{{Line2D.Double}}{(}{startX}{,}{startY}{,}{arrowBaseX}{,}{arrowBaseY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{info}{)}{;}}{{{{this}{.}{area}}{=}{{new}{{GeneralPath}}{()}}}{;}}{{{{this}{.}{line}}{=}{{new}{{Line2D.Double}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{shapesVisible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JPopupMenu}}{{result}{=}{{new}{{JPopupMenu}}{(}{{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{text}{=}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isCounterClockwise}{()}{{{}{{return}{{this}{.}{counterClockwise}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getAngleOffset}{()}{{{}{{return}{{this}{.}{angleOffset}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{getSectionOutlinesVisible}{()}}{&&}{{outlinePaint}{!=}{null}}}{&&}{{outlineStroke}{!=}{null}}}}
{AST_ROOT_SC2NF{{{}{{{Object}}{{c1}{=}{{new}{{XYSeriesCollection}}{()}}}{;}}{{{assertTrue}{(}{{c1}{instanceof}{{PublicCloneable}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{{{assertTrue}{(}{false}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{PropertyVetoException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowGenerator}}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowGenerator}}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{maxY}}{=}{{maxIgnoreNaN}{(}{{this}{.}{maxY}}{,}{yy}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{file}{.}{exists}{()}}}{)}{{{}{{throw}{{new}{{ServletException}}{(}{{STRING_CONSTANT}{+}{filename}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isRadiusMinorGridlinesVisible}{()}{{{}{{return}{{this}{.}{radiusMinorGridlinesVisible}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{toString}{()}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{toString}{()}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{toString}{()}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{result}{=}{{Range}{.}{combineIgnoringNaN}{(}{result}{,}{r}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{include}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setItemLabelsVisible}{(}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setBaseItemLabelsVisible}{(}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesItemLabelsVisible}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesFilled}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{flag}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setShapesFilled}{(}{{Boolean}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesVisible}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setShapesVisible}{(}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesLinesVisible}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLinesVisible}{(}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{c}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{c}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{calendar}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{dimension}{>}{NUMBER_CONSTANT}}{)}{{{}{{{space}{.}{add}{(}{dimension}{,}{edge}{)}}{;}}{{return}{space}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{c}{.}{getTimeInMillis}{()}}{-}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{counterClockwise}{)}{{{}{{{angleDegrees}{=}{{-}{angleDegrees}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sectionKeys}{.}{isEmpty}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{stepped}}{=}{stepped}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{paletteName}}{=}{paletteName}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LegendItem}}{{result}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{data}}{.}{isEmpty}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{valueAxis}}{;}}}
{AST_ROOT_SC2NF{{double}{{dim}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{paintLine}}{;}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{valueAxis}}{;}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{valueAxis}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{adjusted}}{;}}}
{AST_ROOT_SC2NF{{{AxisState}}{{state}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}}{;}}}
{AST_ROOT_SC2NF{{{CategoryToolTipGenerator}}{{result}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{clone}{=}{{super}{.}{clone}{()}}}{;}}{}}}{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{Range}}{{adjusted}}{;}}}
{AST_ROOT_SC2NF{{{EntityBlockParams}}{{ebp}}{;}}}
{AST_ROOT_SC2NF{{{ToolTipTagFragmentGenerator}}{{toolTipTagFragmentGenerator}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{valueBound}{(}{{{HttpSessionBindingEvent}}{event}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{init}{(}{)}{throws}{{ServletException}}{{{}}}}}
{AST_ROOT_SC2NF{{float}{{l}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{PropertyVetoException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickMarkPosition}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelInfo}}{=}{info}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkOutsideLength}}{=}{length}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkInsideLength}}{=}{length}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarksVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{autoRangeTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{dateFormat}}{=}{{(}{{DateFormat}}{)}{{dateFormat}{.}{clone}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{categoryLabelToolTips}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{positions}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelPositions}}{=}{positions}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumCategoryLabelWidthRatio}}{=}{ratio}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumCategoryLabelLines}}{=}{lines}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{categoryMargin}}{=}{margin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{upperMargin}}{=}{margin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{lowerMargin}}{=}{margin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Range}}{{adjusted}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickCount}}{=}{count}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{standardTickUnits}}{=}{source}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{autoTickUnitSelection}}{=}{flag}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultAutoRange}}{=}{range}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{inverted}}{!=}{flag}}{)}{{{}{{{{this}{.}{inverted}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rightArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{leftArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{downArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{upArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeArrowVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveArrowVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{verticalTickLabels}}{!=}{flag}}{)}{{{}{{{{this}{.}{verticalTickLabels}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandAlternatePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{gridBandsVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{gridBandsVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{numberFormatOverride}}{=}{formatter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{result}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{hashCode}{()}{{{}{{return}{{super}{.}{hashCode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{url2}{,}{url1}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{tt2}{,}{tt}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{url2}{,}{url1}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{tt2}{,}{tt}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{ChartFactory}{.}{createPieChart3D}{(}{STRING_CONSTANT}{,}{dataset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{ChartFactory}{.}{createPieChart}{(}{STRING_CONSTANT}{,}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{createXYAreaChart}{(}{title}{,}{xAxisLabel}{,}{yAxisLabel}{,}{dataset}{,}{PlotOrientation.VERTICAL}{,}{true}{,}{true}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{series2}{.}{setKey}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{maxY}}{=}{{maxIgnoreNaN}{(}{{this}{.}{maxY}}{,}{yy}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{gap}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{result}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{paintLine}}{;}}}
{AST_ROOT_SC2NF{{{CategoryAxis}}{{axis}}{;}}}
{AST_ROOT_SC2NF{{{RectangleEdge}}{{result}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}}{;}}}
{AST_ROOT_SC2NF{{(}{float}{)}{{{regions}{[}{NUMBER_CONSTANT}{]}}{.}{getMaxY}{()}}}}
{AST_ROOT_SC2NF{{double}{{result}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{tag}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{result}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{result}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{result}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToolTipTagFragmentGenerator}}{{toolTipTagFragmentGenerator}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{box}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{box}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}}{;}}}
{AST_ROOT_SC2NF{{double}{{space}}{;}}}
{AST_ROOT_SC2NF{{int}{{historyIdx}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{result}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{result}}{;}}}
{AST_ROOT_SC2NF{{double}{{startX}}{;}}}
{AST_ROOT_SC2NF{{{BlockContainer}}{{result}}{;}}}
{AST_ROOT_SC2NF{{{DrawingSupplier}}{{result}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{label}}{;}}}
{AST_ROOT_SC2NF{{{Arc2D}}{{notch}}{;}}}
{AST_ROOT_SC2NF{{int}{{izV}}{;}}}
{AST_ROOT_SC2NF{{int}{{izV}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{paintLine}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{include}}{;}}}
{AST_ROOT_SC2NF{{double}{{space}}{;}}}
{AST_ROOT_SC2NF{{double}{{yyAverage}}{;}}}
{AST_ROOT_SC2NF{{double}{{aRadius}}{;}}}
{AST_ROOT_SC2NF{{int}{{series}}{;}}}
{AST_ROOT_SC2NF{{int}{{series}}{;}}}
{AST_ROOT_SC2NF{{double}{{rectWidth}}{;}}}
{AST_ROOT_SC2NF{{double}{{rectHeight}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{p}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{visible}}{;}}}
{AST_ROOT_SC2NF{{@}{Ignore}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{{@}{Override}}{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.DESCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{{@}{Override}}{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.ASCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{{@}{Override}}{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.DESCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{{@}{Override}}{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.ASCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}}{;}}}
{AST_ROOT_SC2NF{{new}{{Rectangle2D.Double}}{(}{{Math}{.}{min}{(}{x1}{,}{x2}{)}}{,}{{dataArea}{.}{getMinY}{()}}{,}{{Math}{.}{abs}{(}{{x2}{-}{x1}}{)}}{,}{{dataArea}{.}{getHeight}{()}}{)}}}
{AST_ROOT_SC2NF{{return}{{directions}{[}{index}{]}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{y}{<=}{{this}{.}{minY}}}{||}{{y}{>=}{{this}{.}{maxY}}}}{)}{{{}{{{updateMinMaxYByIteration}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{updateMinMaxYByIteration}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{removed}{)}{{{}{{{updateMinMaxYByIteration}{()}}{;}}{{if}{(}{notify}{)}{{{}{{{fireSeriesChanged}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{removed}{)}{{{}{{{updateMinMaxYByIteration}{()}}{;}}{{if}{(}{notify}{)}{{{}{{{fireSeriesChanged}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{updateMinMaxYByIteration}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{updateMinMaxYByIteration}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{extendedSeparator}{=}{{LineUtilities}{.}{extendLine}{(}{separator}{,}{{this}{.}{innerSeparatorExtension}}{,}{{this}{.}{outerSeparatorExtension}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setRange}{(}{{calculateValueNoINF}{(}{log1}{)}}{,}{{calculateValueNoINF}{(}{log2}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{attributedLabels}}{.}{put}{(}{section}{,}{label}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{labelFormat}{,}{numberFormat}{,}{percentFormat}{)}{;}}{{{{this}{.}{attributedLabels}}{=}{{new}{{HashMap}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{datasets}}{.}{put}{(}{index}{,}{dataset}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxisLocations}}{.}{put}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{findRangeAxisIndex}{(}{axis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxes}}{.}{put}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxisLocations}}{.}{put}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxes}}{.}{put}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGeneratorMap}}{.}{put}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{toolTipGeneratorMap}}{.}{get}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorMap}}{.}{put}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{itemLabelGeneratorMap}}{.}{get}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendTextFontMap}}{.}{put}{(}{series}{,}{font}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{legendTextFontMap}}{.}{get}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeItemLabelPositionMap}}{.}{put}{(}{series}{,}{position}{)}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveItemLabelPositionMap}}{.}{put}{(}{series}{,}{position}{)}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelFontMap}}{.}{put}{(}{series}{,}{font}{)}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{itemLabelFontMap}}{.}{get}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemURLGeneratorMap}}{.}{put}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGeneratorMap}}{.}{put}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{toolTipGeneratorMap}}{.}{get}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorMap}}{.}{put}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{findRangeAxisIndex}{(}{axis}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{findDomainAxisIndex}{(}{axis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{renderers}}{.}{put}{(}{index}{,}{renderer}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{datasets}}{.}{put}{(}{index}{,}{dataset}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxisLocations}}{.}{put}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxes}}{.}{put}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxes}}{.}{put}{(}{NUMBER_CONSTANT}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxisLocations}}{.}{put}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxes}}{.}{put}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{copy}{.}{add}{(}{clone}{)}}{;}}{}}}{{catch}{(}{{{SeriesException}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{nDataPoints}{>}{{{this}{.}{valueHistory}}{.}{length}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{copy}{.}{add}{(}{clone}{)}}{;}}{}}}{{catch}{(}{{{SeriesException}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{,}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{null}{,}{rangeAxis}{,}{null}{)}{;}}{{{{this}{.}{subplots}}{=}{{new}{{{java.util.ArrayList}}{<}{{XYPlot}}{>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{domainAxis}{,}{null}{,}{null}{)}{;}}{{{{this}{.}{subplots}}{=}{{new}{{{java.util.ArrayList}}{<}{{XYPlot}}{>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{adj}{=}{{percent}{*}{length}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{fontRenderContext}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ChartPanel}}{{chartPanel}{=}{{new}{{ChartPanel}}{(}{chart}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{FixedMillisecond}{(}{{long}{millisecond}}{)}{{{}{{{{this}{.}{time}}{=}{millisecond}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{response}{=}{{JOptionPane}{.}{showConfirmDialog}{(}{this}{,}{fileExists}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{JOptionPane.OK_CANCEL_OPTION}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{response}{=}{{JOptionPane}{.}{showConfirmDialog}{(}{this}{,}{fileExists}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{JOptionPane.OK_CANCEL_OPTION}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYDataset}}{dataset}}}
{AST_ROOT_SC2NF{{{ChartPanel}}{{panel}{=}{{new}{{ChartPanel}}{(}{chart}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChartPanel}}{{panel}{=}{{new}{{ChartPanel}}{(}{chart}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{panel}}{=}{{new}{{ChartPanel}}{(}{{this}{.}{chart}}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setBaseLegendTextPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.GREEN}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{draw}{(}{{new}{{Line2D.Double}}{(}{xxMin}{,}{{yymid}{-}{halfW}}{,}{xxMin}{,}{{yymid}{+}{halfW}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{canvas}}{.}{removeChartMouseListener}{(}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{hasUniqueID}{(}{handler}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{{handler}{.}{getID}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{viewer}}{.}{hideZoomRectangle}{()}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{viewer}}{.}{showZoomRectangle}{(}{x}{,}{y}{,}{w}{,}{h}{)}}{;}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{xAxis}{=}{{getDomainAxisForDataset}{(}{datasetIndex}{)}}}{;}}}
{AST_ROOT_SC2NF{{{updateCrosshairValues}{(}{crosshairState}{,}{x}{,}{y}{,}{datasetIndex}{,}{{block}{.}{getCenterX}{()}}{,}{{block}{.}{getCenterY}{()}}{,}{orientation}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{entities}{!=}{null}}{)}{{{}{{{addEntity}{(}{entities}{,}{block}{,}{dataset}{,}{series}{,}{item}{,}{transX}{,}{transY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{legendLine}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendLine}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{legendLine}}{!=}{null}}{)}{{{}{{{clone.legendLine}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{additionalItemLabelGenerator}}{,}{that.additionalItemLabelGenerator}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UIUtils}{.}{centerFrameOnScreen}{(}{demo}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{image}}{,}{that.image}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{defaultGroup}}{,}{that.defaultGroup}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{wallPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{wallPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{wallPaint}}{,}{that.wallPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{bounds}}{=}{{(}{{Rectangle2D}}{)}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{bounds}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.bounds}{=}{{(}{{Rectangle2D}}{)}{{ShapeUtils}{.}{clone}{(}{{this}{.}{bounds}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{id}}{,}{that.id}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ValueDataset}}{{vd}{=}{{(}{{ValueDataset}}{)}{obj}}}{;}}{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{value}}{,}{{vd}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{UIUtils}{.}{centerFrameOnScreen}{(}{demo}{)}}{;}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{clone.items}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{items}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StandardEntityCollection}}{{that}{=}{{(}{{StandardEntityCollection}}{)}{obj}}}{;}}{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{entities}}{,}{that.entities}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{{toAdd}{=}{{ObjectUtils}{.}{deepClone}{(}{entry}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{anchor}{=}{{ShapeUtils}{.}{getPointInRectangle}{(}{{anchor}{.}{getX}{()}}{,}{{anchor}{.}{getY}{()}}{,}{dataArea}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{legendLine}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendLine}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.legendLine}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setShapesFilled}{(}{{Boolean}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{UIUtils}{.}{centerFrameOnScreen}{(}{demo}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{seriesKey}}{,}{that.seriesKey}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.legendItemShape}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendItemShape}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{seriesShapesFilled}}{,}{that.seriesShapesFilled}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesFilled}}{.}{setBoolean}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{drawable}}{,}{that.drawable}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{image}}{,}{that.image}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SerialUtils}{.}{writePaint}{(}{paint}{,}{stream}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{p1}{,}{p2}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{legendArea}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendArea}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtils}{.}{equal}{(}{{this}{.}{legendArea}}{,}{that.legendArea}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.legendArea}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendArea}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawShapes}}{=}{{Boolean}{.}{valueOf}{(}{{{this}{.}{drawShapesCheckBox}}{.}{isSelected}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawLines}}{=}{{Boolean}{.}{valueOf}{(}{{{this}{.}{drawLinesCheckBox}}{.}{isSelected}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.bins}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{bins}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{data}}{!=}{null}}{)}{{{}{{{clone.data}{=}{{ArrayUtils}{.}{clone}{(}{{this}{.}{data}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{ShapeUtils}{.}{equal}{(}{{s1}{[}{i}{]}}{,}{{s2}{[}{i}{]}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DefaultBoxAndWhiskerCategoryDataset}}{{dataset}{=}{{(}{{DefaultBoxAndWhiskerCategoryDataset}}{)}{obj}}}{;}}{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{dataset.data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Shape}}{{shadowArc}{=}{{ShapeUtils}{.}{createTranslatedShape}{(}{path}{,}{{(}{float}{)}{shadowXOffset}}{,}{{(}{float}{)}{shadowYOffset}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtils}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{backgroundPaint}}{,}{that.backgroundPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{image}}{,}{that.image}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{shadowPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{shadowPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{hash}{=}{{{NUMBER_CONSTANT}{*}{hash}}{+}{{ObjectUtils}{.}{hashCode}{(}{{this}{.}{seriesKey}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{subLabelPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{subLabelPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.rows}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{rows}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{gradientPaintTransformer}}{,}{that.gradientPaintTransformer}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtils}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{backgroundPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{backgroundPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{backgroundPaint}}{,}{that.backgroundPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Shape}}{{shape}{=}{{ShapeUtils}{.}{createTranslatedShape}{(}{{getItemShape}{(}{seriesIndex}{,}{{i}{++}}{)}}{,}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesFilled}}{.}{setBoolean}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{y}}{,}{that.y}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesFilled}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesVisible}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setShapesVisible}{(}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesLinesVisible}{(}{series}{,}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLinesVisible}{(}{{Boolean}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.seriesList}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{seriesList}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MatrixSeriesCollection}}{{c}{=}{{(}{{MatrixSeriesCollection}}{)}{obj}}}{;}}{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{seriesList}}{,}{c.seriesList}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{p1}{,}{p2}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{SerialUtils}{.}{readPaint}{(}{in}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{rotatedBox}{=}{{ShapeUtils}{.}{rotateShape}{(}{box}{,}{{position}{.}{getAngle}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{rotatedBox}{=}{{ShapeUtils}{.}{rotateShape}{(}{box}{,}{{position}{.}{getAngle}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{arrowStroke}}{,}{that.arrowStroke}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{formatter}}{,}{that.formatter}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.rangeAxis}{=}{{(}{{ValueAxis}}{)}{{ObjectUtils}{.}{clone}{(}{{this}{.}{rangeAxis}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{groupPaint}}{,}{that.groupPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{indexParamName}}{,}{that.indexParamName}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.tasks}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{tasks}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{formatter}}{,}{that.formatter}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{addEntity}{(}{info}{,}{{ShapeUtils}{.}{createLineRegion}{(}{line}{,}{NUMBER_CONSTANT}{)}}{,}{rendererIndex}{,}{toolTip}{,}{url}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.legendLine}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.legendItemShape}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendItemShape}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{wallPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{wallPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{wallPaint}}{,}{that.wallPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{getDescription}{()}}{,}{{that}{.}{getDescription}{()}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{sublabelPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{sublabelPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{sublabelPaint}}{,}{that.sublabelPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{chartArea}}{=}{{(}{{Rectangle2D}}{)}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{chartArea}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{legendArea}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendArea}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.legendArea}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendArea}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtils}{.}{equal}{(}{{this}{.}{legendArea}}{,}{that.legendArea}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{defaultPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{defaultPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{defaultPaint}}{,}{that.defaultPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{title}}{,}{that.title}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{put}{(}{key}{,}{{ObjectUtils}{.}{clone}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{add}{(}{{ObjectUtils}{.}{clone}{(}{obj}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{arrowStroke}}{,}{that.arrowStroke}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{wallPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{wallPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{wallPaint}}{,}{that.wallPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{legendBar}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendBar}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtils}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{legendShape}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendShape}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtils}{.}{equal}{(}{{this}{.}{legendShape}}{,}{that.legendShape}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{gradientPaintTransformer}}{,}{that.gradientPaintTransformer}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{new}{{Integer}}{(}{series}{)}}{,}{{{faces}{[}{NUMBER_CONSTANT}{]}}{.}{getBounds2D}{()}}{,}{{Boolean}{.}{valueOf}{(}{{v0}{<}{{getBase}{()}}}{)}}{}}}}
{AST_ROOT_SC2NF{{{}{{new}{{Integer}}{(}{series}{)}}{,}{{{faces}{[}{NUMBER_CONSTANT}{]}}{.}{getBounds2D}{()}}{,}{{Boolean}{.}{valueOf}{(}{{v0}{<}{{getBase}{()}}}{)}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtils}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Stroke}}{{stroke}{=}{{SerialUtils}{.}{readStroke}{(}{stream}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SerialUtils}{.}{writeStroke}{(}{stroke}{,}{stream}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{s1}{,}{s2}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{area}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{area}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{obj}}{,}{that.obj}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{ObjectUtils}{.}{hashCode}{(}{{this}{.}{fillPaint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{date}}{,}{that.date}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{artifactPaint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{artifactPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{artifactPaint}}{,}{that.artifactPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writeShape}{(}{{this}{.}{legendLine}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendLine}}{=}{{SerialUtils}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtils}{.}{equal}{(}{{this}{.}{legendLine}}{,}{that.legendLine}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{legendLine}}{!=}{null}}{)}{{{}{{{clone.legendLine}{=}{{ShapeUtils}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtils}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtils}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtils}{.}{equal}{(}{{this}{.}{key}}{,}{that.key}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtils}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtils}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtils}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series1}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{s1}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Week}}{{w}{=}{{new}{{Week}}{(}{{gc}{.}{getTime}{()}}{,}{zone}{,}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{interval}{=}{includeInterval}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTickUnit}}{{a1}{=}{{new}{{DateTickUnit}}{(}{DateTickUnitType.DAY}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{axis}{.}{setTickUnit}{(}{{new}{{DateTickUnit}}{(}{DateTickUnitType.MONTH}{,}{NUMBER_CONSTANT}{,}{sdf}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maxItemWidth}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{getMaximumItemWidth}{()}{{{}{{return}{{this}{.}{maxItemWidth}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setDefaultToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setDefaultItemLabelGenerator}{(}{{new}{{StandardCategoryItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDefaultToolTipGenerator}{(}{labelGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setDefaultPaint}{(}{Color.red}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setDefaultItemLabelGenerator}{(}{{new}{{StandardCategoryItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultLegendTextPaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultLegendTextFont}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultLegendShape}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{position}{==}{null}}{)}{{{}{{{position}{=}{{this}{.}{defaultNegativeItemLabelPosition}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{position}{==}{null}}{)}{{{}{{{position}{=}{{this}{.}{defaultPositiveItemLabelPosition}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultItemLabelPaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultShape}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultOutlineStroke}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultStroke}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{seriesOutlinePaint}{==}{null}}{)}{{{}{{{seriesOutlinePaint}{=}{{this}{.}{defaultOutlinePaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{seriesFillPaint}{==}{null}}{)}{{{}{{{seriesFillPaint}{=}{{this}{.}{defaultFillPaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{defaultToolTipGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{defaultItemLabelGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setDefaultToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDefaultToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setDefaultToolTipGenerator}{(}{{new}{{StandardXYToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setDefaultToolTipGenerator}{(}{{new}{{BoxAndWhiskerToolTipGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setDefaultToolTipGenerator}{(}{{new}{{StandardXYToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setDefaultToolTipGenerator}{(}{{new}{{StandardXYZToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setDefaultToolTipGenerator}{(}{{new}{{HighLowItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setDefaultToolTipGenerator}{(}{{new}{{HighLowItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setDefaultToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setDefaultToolTipGenerator}{(}{{new}{{StandardXYToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setDefaultToolTipGenerator}{(}{tt}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setDefaultToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDefaultToolTipGenerator}{(}{{new}{{BoxAndWhiskerXYToolTipGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDefaultLegendShape}{(}{{this}{.}{legendLine}}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer1}{.}{setDefaultToolTipGenerator}{(}{{StandardXYToolTipGenerator}{.}{getTimeSeriesInstance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDefaultToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{defaultItemURLGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{defaultToolTipGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{defaultItemLabelGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Color.GRAY}{,}{{r}{.}{getDefaultOutlinePaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Color.WHITE}{,}{{r}{.}{getDefaultFillPaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Color.BLUE}{,}{{r}{.}{getDefaultPaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{dataAreaHotspot}{.}{isEmpty}{()}}}{)}{{{}{{{addEntity}{(}{entities}{,}{dataAreaHotspot}{,}{dataset}{,}{series}{,}{item}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{entities}{!=}{null}}{)}{{{}{{{addEntity}{(}{entities}{,}{hotspot}{,}{dataset}{,}{series}{,}{item}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{r1}{.}{setErrorPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setErrorPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{RectangleInsets}}{(}{top}{,}{left}{,}{bottom}{,}{right}{)}}{,}{Color.BLACK}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{chart}{.}{setBackgroundPaint}{(}{Color.WHITE}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{noDataMessagePaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{public}{DialBackground}{()}{{{}{{this}{(}{Color.WHITE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{m1}{=}{{new}{{CategoryMarker}}{(}{STRING_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{m1}{=}{{new}{{CategoryMarker}}{(}{STRING_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setSeriesPaint}{(}{NUMBER_CONSTANT}{,}{Color.BLACK}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{StandardDialRange}{()}{{{}{{this}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.GRAY}{)}}{;}}}
{AST_ROOT_SC2NF{{{p1}{.}{setSubrangePaint}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{baseline}{.}{setPaint}{(}{Color.BLACK}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{Color.BLACK}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arrowPaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{x0}{,}{y0}{,}{x1}{,}{y1}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.BLACK}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{x1}{,}{y1}{,}{x2}{,}{y2}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.BLACK}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arrowPaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setAxisLinePaint}{(}{Color.RED}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{outlinePaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{shape}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.BLACK}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{polygon}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.BLACK}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.BLACK}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{sublabelPaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{labelPaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{public}{Crosshair}{(}{{double}{value}}{)}{{{}{{this}{(}{value}{,}{Color.BLACK}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LegendGraphic}}{{g1}{=}{{new}{{LegendGraphic}}{(}{r}{,}{Color.BLACK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LegendGraphic}}{{g1}{=}{{new}{{LegendGraphic}}{(}{r}{,}{Color.BLACK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setColor}{(}{Color.BLACK}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{defaultSectionPaint}}{=}{Color.GRAY}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{paint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.BLUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{datasetIndex}{)}{;}}{{{{this}{.}{paint}}{=}{Color.RED}}{;}}{{{{this}{.}{stroke}}{=}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{,}{BasicStroke.CAP_ROUND}{,}{BasicStroke.JOIN_BEVEL}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{axisLinePaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowPaint}}{=}{Color.GRAY}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{artifactPaint}}{=}{Color.BLACK}}{;}}}
{AST_ROOT_SC2NF{{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{{Graphics2D}}{g2}}}
{AST_ROOT_SC2NF{{{TextBlock}}{block}}}
{AST_ROOT_SC2NF{{double}{offset}}}
{AST_ROOT_SC2NF{{double}{offset}}}
{AST_ROOT_SC2NF{{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{{RectangleInsets}}{gap}}}
{AST_ROOT_SC2NF{{{Stroke}}{stroke}}}
{AST_ROOT_SC2NF{{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{{{this}{.}{boxPaint}}{=}{Color.GREEN}}{;}}}
{AST_ROOT_SC2NF{{{Graphics2D}}{g2}}}
{AST_ROOT_SC2NF{{{TextUtils}{.}{drawAlignedString}{(}{valueStr}{,}{g2}{,}{x}{,}{y}{,}{TextAnchor.TOP_CENTER}{)}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{tickLabelBounds}{=}{{TextUtils}{.}{getTextBounds}{(}{tickLabel}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FontMetrics}}{{fm}{=}{{g2}{.}{getFontMetrics}{(}{{getLabelFont}{()}}{)}}}{;}}{{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{axisLabel}{,}{g2}{,}{fm}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{r}{=}{{TextUtils}{.}{getTextBounds}{(}{text}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{tick}{.}{getText}{()}}{!=}{null}}{)}{{{}{{{labelBounds}{=}{{TextUtils}{.}{getTextBounds}{(}{{tick}{.}{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{tick}{.}{getText}{()}}{!=}{null}}{)}{{{}{{{labelBounds}{=}{{TextUtils}{.}{getTextBounds}{(}{{tick}{.}{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{label}}{=}{{TextUtils}{.}{createTextBlock}{(}{{this}{.}{text}}{,}{font}{,}{{this}{.}{paint}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{label}}{=}{{TextUtils}{.}{createTextBlock}{(}{text}{,}{font}{,}{{this}{.}{paint}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{r}{=}{{TextUtils}{.}{getTextBounds}{(}{{{this}{.}{internalMarkerCycleBoundTick}}{.}{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{{this}{.}{text}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{tickLabel}{,}{g2}{,}{{g2}{.}{getFontMetrics}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{tickLabel}{,}{g2}{,}{{g2}{.}{getFontMetrics}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TextUtils}{.}{drawRotatedString}{(}{label}{,}{g2}{,}{xx}{,}{yy}{,}{TextAnchor.CENTER}{,}{NUMBER_CONSTANT}{,}{TextAnchor.CENTER}{)}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{label}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{getTextBounds}{(}{text}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{DefaultShadowGenerator}{()}{{{}{{this}{(}{NUMBER_CONSTANT}{,}{Color.BLACK}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{{-}{Math.PI}}{/}{NUMBER_CONSTANT}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setSeriesPaint}{(}{NUMBER_CONSTANT}{,}{Color.BLACK}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{f1}{.}{setBackgroundPaint}{(}{Color.BLUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setDefaultPaint}{(}{Color.RED}{)}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{t1}{.}{setBackgroundPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{t1}{.}{setBackgroundPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{p1}{.}{setAggregatedItemsPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{)}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{gridPaintSample}}{=}{{new}{{PaintSample}}{(}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYDifferenceRenderer}}{{r1}{=}{{new}{{XYDifferenceRenderer}}{(}{Color.RED}{,}{Color.BLUE}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYDifferenceRenderer}}{{r1}{=}{{new}{{XYDifferenceRenderer}}{(}{Color.RED}{,}{Color.BLUE}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{)}}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setSubLabelPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Color}}{{defaultColor}{=}{{(}{{{p}{instanceof}{{Color}}}{?}{{(}{{Color}}{)}{p}}{:}{Color.BLUE}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setTickLabelPaint}{(}{STRING_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setShapePaint}{(}{Color.RED}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{downPaint}}{=}{Color.RED}}{;}}}
{AST_ROOT_SC2NF{{{t1}{.}{setBackgroundPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{paint}}{=}{Color.RED}}{;}}}
{AST_ROOT_SC2NF{{c1}{=}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{c1}{=}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{{b1}{.}{setPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.green}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{b1}{.}{setPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.green}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setOutlinePaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a1}{=}{{new}{{XYLineAnnotation}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{stroke}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a1}{=}{{new}{{XYLineAnnotation}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{stroke}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a1}{=}{{new}{{XYLineAnnotation}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{stroke}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{o1}{.}{addRangeCrosshair}{(}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{o1}{.}{addRangeCrosshair}{(}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{BlockBorder}}{(}{{new}{{RectangleInsets}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{)}}{)}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setSeriesPaint}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.YELLOW}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{range}{,}{Color.YELLOW}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.BLUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.BLUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{s1}{.}{setMajorTickPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{s1}{.}{setMajorTickPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.RED}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.WHITE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{incompletePaint}}{=}{Color.RED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{zoomOutlinePaint}}{=}{Color.BLUE}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{return}{{HashUtils}{.}{hashCodeForDoubleArray}{(}{{this}{.}{coefficients}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtils}{.}{hashCode}{(}{result}{,}{{this}{.}{radius}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{HashUtils}{.}{hashCode}{(}{{super}{.}{hashCode}{()}}{,}{{this}{.}{stepPoint}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtils}{.}{hashCode}{(}{result}{,}{{this}{.}{visible}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{result}{*}{NUMBER_CONSTANT}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{arrowPaint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtils}{.}{hashCode}{(}{result}{,}{{this}{.}{formatPattern}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtils}{.}{hashCode}{(}{result}{,}{{this}{.}{formatPattern}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{{super}{.}{hashCode}{()}}}{;}}{{{result}{=}{{HashUtils}{.}{hashCode}{(}{result}{,}{{this}{.}{isArrowAtTop}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{{super}{.}{hashCode}{()}}}{;}}{{{result}{=}{{HashUtils}{.}{hashCode}{(}{result}{,}{{this}{.}{key}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{arrowPaint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{hash}{=}{{super}{.}{hashCode}{()}}}{;}}{{{hash}{=}{{HashUtils}{.}{hashCode}{(}{hash}{,}{{this}{.}{errorIndicatorPaint}}{)}}}{;}}{{return}{hash}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtils}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ChartUtils}{.}{saveChartAsJPEG}{(}{tempFile}{,}{chart}{,}{width}{,}{height}{,}{info}{)}}{;}}}
{AST_ROOT_SC2NF{{{ChartUtils}{.}{saveChartAsPNG}{(}{tempFile}{,}{chart}{,}{width}{,}{height}{,}{info}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtils}{.}{javascriptEscape}{(}{toolTipText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ImageMapUtils}{.}{getImageMap}{(}{name}{,}{info}{,}{toolTipTagFragmentGenerator}{,}{urlTagFragmentGenerator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{writer}{.}{println}{(}{{ImageMapUtils}{.}{getImageMap}{(}{name}{,}{info}{,}{toolTipTagFragmentGenerator}{,}{urlTagFragmentGenerator}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ImageMapUtils}{.}{writeImageMap}{(}{writer}{,}{name}{,}{info}{,}{toolTipTagFragmentGenerator}{,}{{new}{{StandardURLTagFragmentGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtils}{.}{htmlEscape}{(}{toolTipText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{extendedSeparator}{=}{{LineUtils}{.}{extendLine}{(}{separator}{,}{{this}{.}{innerSeparatorExtension}}{,}{{this}{.}{outerSeparatorExtension}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{visible}{=}{{LineUtils}{.}{clipLine}{(}{state.workingLine}{,}{dataArea}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{visible}{=}{{LineUtils}{.}{clipLine}{(}{line}{,}{dataArea}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{visible}{=}{{LineUtils}{.}{clipLine}{(}{line}{,}{dataArea}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{return}{{new}{{Range}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtils}{.}{findStackedRangeBounds}{(}{dataset}{,}{{getBase}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{return}{{new}{{Range}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtils}{.}{findStackedRangeBounds}{(}{dataset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtils}{.}{isEmptyOrNull}{(}{dataset}{)}}}}
{AST_ROOT_SC2NF{{{Range}}{{range}{=}{{DatasetUtils}{.}{findDomainBounds}{(}{{this}{.}{dataset}}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{total}{=}{{DatasetUtils}{.}{calculateStackTotal}{(}{{(}{{TableXYDataset}}{)}{dataset}}{,}{item}{)}}}{;}}{{{value}{=}{{value}{/}{total}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{return}{{new}{{Range}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtils}{.}{findStackedRangeBounds}{(}{{(}{{TableXYDataset}}{)}{dataset}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{return}{{DatasetUtils}{.}{findRangeBounds}{(}{dataset}{,}{true}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{includeInterval}{)}{{{}{{return}{{{this}{.}{intervalDelegate}}{.}{getDomainBounds}{(}{includeInterval}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtils}{.}{iterateDomainBounds}{(}{this}{,}{includeInterval}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{hasData}{=}{{!}{{DatasetUtils}{.}{isEmptyOrNull}{(}{currentDataset}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtils}{.}{findRangeBounds}{(}{d}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{XYDataset}}{{dataset}{=}{{plot}{.}{getDataset}{(}{i}{)}}}{;}}{{if}{(}{{!}{{DatasetUtils}{.}{isEmptyOrNull}{(}{dataset}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtils}{.}{isEmptyOrNull}{(}{{this}{.}{dataset}}{)}}}}
{AST_ROOT_SC2NF{{double}{{total}{=}{{DatasetUtils}{.}{calculatePieDatasetTotal}{(}{dataset}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{totalValue}{=}{{DatasetUtils}{.}{calculatePieDatasetTotal}{(}{{this}{.}{dataset}}{)}}}{;}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtils}{.}{isEmptyOrNull}{(}{{this}{.}{dataset}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{dataset}}{!=}{null}}{)}{{{}{{{state}{.}{setTotal}{(}{{DatasetUtils}{.}{calculatePieDatasetTotal}{(}{{plot}{.}{getDataset}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{return}{{DatasetUtils}{.}{findZBounds}{(}{dataset}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtils}{.}{findRangeBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtils}{.}{findDomainBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{return}{{DatasetUtils}{.}{findStackedRangeBounds}{(}{{(}{{TableXYDataset}}{)}{dataset}}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtils}{.}{findStackedRangeBounds}{(}{dataset}{,}{{this}{.}{seriesToGroupMap}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{d}{!=}{null}}{)}{{{}{{{result}{=}{{Range}{.}{combine}{(}{result}{,}{{DatasetUtils}{.}{findRangeBounds}{(}{d}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtils}{.}{isEmptyOrNull}{(}{dataset}{)}}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtils}{.}{findRangeBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtils}{.}{findDomainBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{includeInterval}{)}{{{}{{return}{{{this}{.}{intervalDelegate}}{.}{getDomainBounds}{(}{includeInterval}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtils}{.}{iterateDomainBounds}{(}{this}{,}{includeInterval}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtils}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{total}{=}{{DataUtils}{.}{calculateColumnTotal}{(}{dataset}{,}{column}{,}{{state}{.}{getVisibleSeriesArray}{()}}{)}}}{;}}{{{value}{=}{{value}{/}{total}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{DataUtils}{.}{createNumberArray2D}{(}{starts}{)}}{,}{{DataUtils}{.}{createNumberArray2D}{(}{ends}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.zValues}{=}{{DataUtils}{.}{clone}{(}{{this}{.}{zValues}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{DataUtils}{.}{equal}{(}{{this}{.}{zValues}}{,}{that.zValues}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{total}{=}{{DataUtils}{.}{calculateColumnTotal}{(}{dataset}{,}{column}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{{total}{=}{{DataUtils}{.}{calculateColumnTotal}{(}{dataset}{,}{index}{,}{validRows}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{OHLCItem}}{{item2}{=}{{(}{{OHLCItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a2}{=}{{(}{{XYLineAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Hour}}{{h2}{=}{{(}{{Hour}}{)}{{TestUtils}{.}{serialised}{(}{h1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomXYToolTipGenerator}}{{g2}{=}{{(}{{CustomXYToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerToolTipGenerator}}{{g2}{=}{{(}{{BoxAndWhiskerToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategoryToolTipGenerator}}{{g2}{=}{{(}{{StandardCategoryToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BarRenderer}}{{r2}{=}{{(}{{BarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYTaskDataset}}{{d2}{=}{{(}{{XYTaskDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ClusteredXYBarRenderer}}{{r2}{=}{{(}{{ClusteredXYBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YInterval}}{{i2}{=}{{(}{{YInterval}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBubbleRenderer}}{{r2}{=}{{(}{{XYBubbleRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{WindItemRenderer}}{{r2}{=}{{(}{{WindItemRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineNeedle}}{{n2}{=}{{(}{{LineNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SpiderWebPlot}}{{p2}{=}{{(}{{SpiderWebPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{TestUtils}{.}{containsInstanceOf}{(}{{ec}{.}{getEntities}{()}}{,}{{{XYItemEntity}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYItemRenderer}}{{r2}{=}{{(}{{StandardXYItemRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTickMarkPosition}}{{p2}{=}{{(}{{DateTickMarkPosition}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialValueIndicator}}{{i2}{=}{{(}{{DialValueIndicator}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XIntervalSeriesCollection}}{{c2}{=}{{(}{{XIntervalSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryAxis}}{{a2}{=}{{(}{{CategoryAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PiePlot}}{{p2}{=}{{(}{{PiePlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{NumberTickUnit}}{{t2}{=}{{(}{{NumberTickUnit}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDrawableAnnotation}}{{a2}{=}{{(}{{XYDrawableAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalCategoryItemLabelGenerator}}{{g2}{=}{{(}{{IntervalCategoryItemLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelAnchor}}{{a2}{=}{{(}{{ItemLabelAnchor}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeterPlot}}{{p2}{=}{{(}{{MeterPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeterPlot}}{{p2}{=}{{(}{{MeterPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodValues}}{{s2}{=}{{(}{{TimePeriodValues}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryToPieDataset}}{{d2}{=}{{(}{{CategoryToPieDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Vector}}{{v2}{=}{{(}{{Vector}}{)}{{TestUtils}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{WaterfallBarRenderer}}{{r2}{=}{{(}{{WaterfallBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYIntervalSeries}}{{s2}{=}{{(}{{XYIntervalSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYInterval}}{{i2}{=}{{(}{{XYInterval}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HighLowRenderer}}{{r2}{=}{{(}{{HighLowRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedDomainCategoryPlot}}{{plot2}{=}{{(}{{CombinedDomainCategoryPlot}}{)}{{TestUtils}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LabelBlock}}{{b2}{=}{{(}{{LabelBlock}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DeviationRenderer}}{{r2}{=}{{(}{{DeviationRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PowerFunction2D}}{{f2}{=}{{(}{{PowerFunction2D}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardTickUnitSource}}{{t2}{=}{{(}{{StandardTickUnitSource}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Minute}}{{m2}{=}{{(}{{Minute}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PieSectionEntity}}{{e2}{=}{{(}{{PieSectionEntity}}{)}{{TestUtils}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedRangeCategoryPlot}}{{plot2}{=}{{(}{{CombinedRangeCategoryPlot}}{)}{{TestUtils}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYZToolTipGenerator}}{{g2}{=}{{(}{{StandardXYZToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ValueMarker}}{{m2}{=}{{(}{{ValueMarker}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ValueMarker}}{{m2}{=}{{(}{{ValueMarker}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{{(}{{CategoryPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{{(}{{CategoryPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{{(}{{CategoryPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValues}}{{v2}{=}{{(}{{DefaultKeyedValues}}{)}{{TestUtils}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LayeredBarRenderer}}{{r2}{=}{{(}{{LayeredBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerXYToolTipGenerator}}{{g2}{=}{{(}{{BoxAndWhiskerXYToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeTableXYDataset}}{{d2}{=}{{(}{{TimeTableXYDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Quarter}}{{q2}{=}{{(}{{Quarter}}{)}{{TestUtils}{.}{serialised}{(}{q1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PlumNeedle}}{{n2}{=}{{(}{{PlumNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SlidingCategoryDataset}}{{d2}{=}{{(}{{SlidingCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GanttRenderer}}{{r2}{=}{{(}{{GanttRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LongNeedle}}{{n2}{=}{{(}{{LongNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedXYAreaRenderer}}{{r2}{=}{{(}{{StackedXYAreaRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BorderArrangement}}{{b2}{=}{{(}{{BorderArrangement}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardDialFrame}}{{f2}{=}{{(}{{StandardDialFrame}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{p2}{=}{{(}{{ItemLabelPosition}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{EmptyBlock}}{{b2}{=}{{(}{{EmptyBlock}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryAnchor}}{{a2}{=}{{(}{{CategoryAnchor}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYShapeRenderer}}{{r2}{=}{{(}{{XYShapeRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBarDataset}}{{bd2}{=}{{(}{{XYBarDataset}}{)}{{TestUtils}{.}{serialised}{(}{bd1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorRenderer}}{{r2}{=}{{(}{{VectorRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBarRenderer}}{{r2}{=}{{(}{{XYBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBarRenderer}}{{r2}{=}{{(}{{XYBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelEntity}}{{e2}{=}{{(}{{CategoryLabelEntity}}{)}{{TestUtils}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PlotOrientation}}{{orientation2}{=}{{(}{{PlotOrientation}}{)}{{TestUtils}{.}{serialised}{(}{orientation1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelWidthType}}{{w2}{=}{{(}{{CategoryLabelWidthType}}{)}{{TestUtils}{.}{serialised}{(}{w1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYIntervalSeriesCollection}}{{c2}{=}{{(}{{XYIntervalSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYURLGenerator}}{{g2}{=}{{(}{{StandardXYURLGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYIntervalDataItem}}{{item2}{=}{{(}{{XYIntervalDataItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryItemEntity}}{{e2}{=}{{(}{{CategoryItemEntity}}{)}{{TestUtils}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PolynomialFunction2D}}{{f2}{=}{{(}{{PolynomialFunction2D}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StatisticalLineAndShapeRenderer}}{{r2}{=}{{(}{{StatisticalLineAndShapeRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultPieDataset}}{{d2}{=}{{(}{{DefaultPieDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTick}}{{t2}{=}{{(}{{DateTick}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ShipNeedle}}{{n2}{=}{{(}{{ShipNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDataItem}}{{i2}{=}{{(}{{XYDataItem}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GradientBarPainter}}{{p2}{=}{{(}{{GradientBarPainter}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardDialRange}}{{r2}{=}{{(}{{StandardDialRange}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeMap}}{{m2}{=}{{(}{{StrokeMap}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeMap}}{{m2}{=}{{(}{{StrokeMap}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LogFormat}}{{f2}{=}{{(}{{LogFormat}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedBarRenderer}}{{r2}{=}{{(}{{StackedBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLCSeries}}{{s2}{=}{{(}{{OHLCSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultIntervalCategoryDataset}}{{d2}{=}{{(}{{DefaultIntervalCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MyComparableObjectSeries}}{{s2}{=}{{(}{{MyComparableObjectSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorSeriesCollection}}{{c2}{=}{{(}{{VectorSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalBarRenderer}}{{r2}{=}{{(}{{IntervalBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedValuesDataset}}{{d2}{=}{{(}{{KeyedValuesDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialCap}}{{c2}{=}{{(}{{DialCap}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PointerNeedle}}{{n2}{=}{{(}{{PointerNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateAxis}}{{a2}{=}{{(}{{DateAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalCategoryToolTipGenerator}}{{g2}{=}{{(}{{IntervalCategoryToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYItemEntity}}{{e2}{=}{{(}{{XYItemEntity}}{)}{{TestUtils}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FixedMillisecond}}{{m2}{=}{{(}{{FixedMillisecond}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultOHLCDataset}}{{d2}{=}{{(}{{DefaultOHLCDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolicXYItemLabelGenerator}}{{g2}{=}{{(}{{SymbolicXYItemLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LevelRenderer}}{{r2}{=}{{(}{{LevelRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodAxis}}{{a2}{=}{{(}{{PeriodAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DatasetGroup}}{{g2}{=}{{(}{{DatasetGroup}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Axis}}{{a2}{=}{{(}{{Axis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorDataItem}}{{v2}{=}{{(}{{VectorDataItem}}{)}{{TestUtils}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategoryItemLabelGenerator}}{{g2}{=}{{(}{{StandardCategoryItemLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyToGroupMap}}{{m2}{=}{{(}{{KeyToGroupMap}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MatrixSeriesCollection}}{{c2}{=}{{(}{{MatrixSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Year}}{{y2}{=}{{(}{{Year}}{)}{{TestUtils}{.}{serialised}{(}{y1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYStepRenderer}}{{r2}{=}{{(}{{XYStepRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleTimePeriod}}{{p2}{=}{{(}{{SimpleTimePeriod}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultMultiValueCategoryDataset}}{{d2}{=}{{(}{{DefaultMultiValueCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYSeries}}{{s2}{=}{{(}{{XYSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedRangeXYPlot}}{{plot2}{=}{{(}{{CombinedRangeXYPlot}}{)}{{TestUtils}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryTableXYDataset}}{{d2}{=}{{(}{{CategoryTableXYDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalRenderer}}{{r2}{=}{{(}{{YIntervalRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TaskSeriesCollection}}{{c2}{=}{{(}{{TaskSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleHistogramBin}}{{b2}{=}{{(}{{SimpleHistogramBin}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultCategoryDataset}}{{d2}{=}{{(}{{DefaultCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BubbleXYItemLabelGenerator}}{{g2}{=}{{(}{{BubbleXYItemLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PaintScaleLegend}}{{l2}{=}{{(}{{PaintScaleLegend}}{)}{{TestUtils}{.}{serialised}{(}{l1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLCDataItem}}{{i2}{=}{{(}{{OHLCDataItem}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{AreaRendererEndType}}{{t2}{=}{{(}{{AreaRendererEndType}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerRenderer}}{{r2}{=}{{(}{{BoxAndWhiskerRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HistogramDataset}}{{d2}{=}{{(}{{HistogramDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MiddlePinNeedle}}{{n2}{=}{{(}{{MiddlePinNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedDomainXYPlot}}{{plot2}{=}{{(}{{CombinedDomainXYPlot}}{)}{{TestUtils}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalXYDelegate}}{{d2}{=}{{(}{{IntervalXYDelegate}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDifferenceRenderer}}{{r2}{=}{{(}{{XYDifferenceRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategoryURLGenerator}}{{g2}{=}{{(}{{StandardCategoryURLGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardPieURLGenerator}}{{g2}{=}{{(}{{StandardPieURLGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Millisecond}}{{m2}{=}{{(}{{Millisecond}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesDataItem}}{{item2}{=}{{(}{{TimeSeriesDataItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalDataItem}}{{item2}{=}{{(}{{YIntervalDataItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYTextAnnotation}}{{a2}{=}{{(}{{XYTextAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SubCategoryAxis}}{{a2}{=}{{(}{{SubCategoryAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GrayPaintScale}}{{g2}{=}{{(}{{GrayPaintScale}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalSeriesCollection}}{{c2}{=}{{(}{{YIntervalSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYBarPainter}}{{p2}{=}{{(}{{StandardXYBarPainter}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineBorder}}{{b2}{=}{{(}{{LineBorder}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYAreaRenderer}}{{r2}{=}{{(}{{XYAreaRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDotRenderer}}{{r2}{=}{{(}{{XYDotRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GradientXYBarPainter}}{{p2}{=}{{(}{{GradientXYBarPainter}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MatrixSeries}}{{m2}{=}{{(}{{MatrixSeries}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPlot}}{{p2}{=}{{(}{{XYPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtils}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPlot}}{{p2}{=}{{(}{{XYPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPlot}}{{p2}{=}{{(}{{XYPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomCategoryURLGenerator}}{{g2}{=}{{(}{{CustomCategoryURLGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYToolTipGenerator}}{{g2}{=}{{(}{{StandardXYToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XIntervalDataItem}}{{item2}{=}{{(}{{XIntervalDataItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MarkerAxisBand}}{{a2}{=}{{(}{{MarkerAxisBand}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HistogramBin}}{{b2}{=}{{(}{{HistogramBin}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesCollection}}{{c2}{=}{{(}{{TimeSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ThermometerPlot}}{{p2}{=}{{(}{{ThermometerPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ThermometerPlot}}{{p2}{=}{{(}{{ThermometerPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FlowArrangement}}{{f2}{=}{{(}{{FlowArrangement}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryTick}}{{t2}{=}{{(}{{CategoryTick}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ArrowNeedle}}{{n2}{=}{{(}{{ArrowNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ArcDialFrame}}{{f2}{=}{{(}{{ArcDialFrame}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBlockRenderer}}{{r2}{=}{{(}{{XYBlockRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{AxisLocation}}{{location2}{=}{{(}{{AxisLocation}}{)}{{TestUtils}{.}{serialised}{(}{location1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FlowArrangement}}{{f2}{=}{{(}{{FlowArrangement}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBoxAnnotation}}{{a2}{=}{{(}{{XYBoxAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GroupedStackedBarRenderer}}{{r2}{=}{{(}{{GroupedStackedBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistributionFunction2D}}{{f2}{=}{{(}{{NormalDistributionFunction2D}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleHistogramDataset}}{{d2}{=}{{(}{{SimpleHistogramDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedObjects2D}}{{ko2D2}{=}{{(}{{KeyedObjects2D}}{)}{{TestUtils}{.}{serialised}{(}{ko2D1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PolarPlot}}{{p2}{=}{{(}{{PolarPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DomainOrder}}{{d2}{=}{{(}{{DomainOrder}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorSeries}}{{s2}{=}{{(}{{VectorSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ColorBlock}}{{b2}{=}{{(}{{ColorBlock}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PieLabelRecord}}{{p2}{=}{{(}{{PieLabelRecord}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultPolarItemRenderer}}{{r2}{=}{{(}{{DefaultPolarItemRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPointerAnnotation}}{{a2}{=}{{(}{{XYPointerAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendItemEntity}}{{e2}{=}{{(}{{LegendItemEntity}}{)}{{TestUtils}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TaskSeries}}{{s2}{=}{{(}{{TaskSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultCategoryItemRenderer}}{{r2}{=}{{(}{{DefaultCategoryItemRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r2}{=}{{(}{{Range}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ExtendedCategoryAxis}}{{a2}{=}{{(}{{ExtendedCategoryAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultDrawingSupplier}}{{r2}{=}{{(}{{DefaultDrawingSupplier}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Month}}{{m2}{=}{{(}{{Month}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PinNeedle}}{{n2}{=}{{(}{{PinNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYErrorRenderer}}{{r2}{=}{{(}{{XYErrorRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYErrorRenderer}}{{r2}{=}{{(}{{XYErrorRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomXYURLGenerator}}{{g2}{=}{{(}{{CustomXYURLGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineFunction2D}}{{f2}{=}{{(}{{LineFunction2D}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYSeriesCollection}}{{c2}{=}{{(}{{XYSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardPieSectionLabelGenerator}}{{g2}{=}{{(}{{StandardPieSectionLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Second}}{{s2}{=}{{(}{{Second}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BarRenderer}}{{r2}{=}{{(}{{BarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultTableXYDataset}}{{d2}{=}{{(}{{DefaultTableXYDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CompassPlot}}{{p2}{=}{{(}{{CompassPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultTableXYDataset}}{{d2}{=}{{(}{{DefaultTableXYDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MultipleXYSeriesLabelGenerator}}{{g2}{=}{{(}{{MultipleXYSeriesLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryTextAnnotation}}{{a2}{=}{{(}{{CategoryTextAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategorySeriesLabelGenerator}}{{g2}{=}{{(}{{StandardCategorySeriesLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryMarker}}{{m2}{=}{{(}{{CategoryMarker}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Day}}{{d2}{=}{{(}{{Day}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTitle}}{{t2}{=}{{(}{{DateTitle}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Week}}{{w2}{=}{{(}{{Week}}{)}{{TestUtils}{.}{serialised}{(}{w1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{AreaRenderer}}{{r2}{=}{{(}{{AreaRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TickUnits}}{{t2}{=}{{(}{{TickUnits}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerItem}}{{i2}{=}{{(}{{BoxAndWhiskerItem}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodAnchor}}{{a2}{=}{{(}{{TimePeriodAnchor}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PaintMap}}{{m2}{=}{{(}{{PaintMap}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PaintMap}}{{m2}{=}{{(}{{PaintMap}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{RingPlot}}{{p2}{=}{{(}{{RingPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardBarPainter}}{{p2}{=}{{(}{{StandardBarPainter}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendItemCollection}}{{c2}{=}{{(}{{LegendItemCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{RangeType}}{{r2}{=}{{(}{{RangeType}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StatisticalBarRenderer}}{{r2}{=}{{(}{{StatisticalBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValue}}{{v2}{=}{{(}{{DefaultKeyedValue}}{)}{{TestUtils}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLC}}{{i2}{=}{{(}{{OHLC}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYItemLabelGenerator}}{{g2}{=}{{(}{{StandardXYItemLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BlockContainer}}{{c2}{=}{{(}{{BlockContainer}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{NumberAxis}}{{a2}{=}{{(}{{NumberAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LogAxis}}{{a2}{=}{{(}{{LogAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryStepRenderer}}{{r2}{=}{{(}{{CategoryStepRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomPieURLGenerator}}{{g2}{=}{{(}{{CustomPieURLGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodAxisLabelInfo}}{{info2}{=}{{(}{{PeriodAxisLabelInfo}}{)}{{TestUtils}{.}{serialised}{(}{info1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultHighLowDataset}}{{d2}{=}{{(}{{DefaultHighLowDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialPointer}}{{i2}{=}{{(}{{DialPointer}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialPointer}}{{i2}{=}{{(}{{DialPointer}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedObject}}{{ko2}{=}{{(}{{KeyedObject}}{)}{{TestUtils}{.}{serialised}{(}{ko1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BlockBorder}}{{b2}{=}{{(}{{BlockBorder}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MultiplePiePlot}}{{p2}{=}{{(}{{MultiplePiePlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYSplineRenderer}}{{r2}{=}{{(}{{XYSplineRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYShapeAnnotation}}{{a2}{=}{{(}{{XYShapeAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YWithXInterval}}{{i2}{=}{{(}{{YWithXInterval}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultBoxAndWhiskerCategoryDataset}}{{d2}{=}{{(}{{DefaultBoxAndWhiskerCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CompositeTitle}}{{t2}{=}{{(}{{CompositeTitle}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPointerAnnotation}}{{a2}{=}{{(}{{CategoryPointerAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPolygonAnnotation}}{{a2}{=}{{(}{{XYPolygonAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Task}}{{t2}{=}{{(}{{Task}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialPlot}}{{p2}{=}{{(}{{DialPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYTitleAnnotation}}{{a2}{=}{{(}{{XYTitleAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValues2D}}{{kv2D2}{=}{{(}{{DefaultKeyedValues2D}}{)}{{TestUtils}{.}{serialised}{(}{kv2D1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedAreaRenderer}}{{r2}{=}{{(}{{StackedAreaRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodValue}}{{tpv2}{=}{{(}{{TimePeriodValue}}{)}{{TestUtils}{.}{serialised}{(}{tpv1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultHeatMapDataset}}{{d2}{=}{{(}{{DefaultHeatMapDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAndShapeRenderer}}{{r2}{=}{{(}{{XYLineAndShapeRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYStepAreaRenderer}}{{r2}{=}{{(}{{XYStepAreaRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalSeries}}{{s2}{=}{{(}{{YIntervalSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GridArrangement}}{{f2}{=}{{(}{{GridArrangement}}{)}{{TestUtils}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYAreaRenderer2}}{{r2}{=}{{(}{{XYAreaRenderer2}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{WindNeedle}}{{n2}{=}{{(}{{WindNeedle}}{)}{{TestUtils}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HighLowItemLabelGenerator}}{{g2}{=}{{(}{{HighLowItemLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultBoxAndWhiskerXYDataset}}{{d2}{=}{{(}{{DefaultBoxAndWhiskerXYDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesURLGenerator}}{{g2}{=}{{(}{{TimeSeriesURLGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LogarithmicAxis}}{{a2}{=}{{(}{{LogarithmicAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardPieToolTipGenerator}}{{g2}{=}{{(}{{StandardPieToolTipGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CyclicNumberAxis}}{{a2}{=}{{(}{{CyclicNumberAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedObjects}}{{ko2}{=}{{(}{{KeyedObjects}}{)}{{TestUtils}{.}{serialised}{(}{ko1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CandlestickRenderer}}{{r2}{=}{{(}{{CandlestickRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MonthDateFormat}}{{mf2}{=}{{(}{{MonthDateFormat}}{)}{{TestUtils}{.}{serialised}{(}{mf1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBoxAndWhiskerRenderer}}{{r2}{=}{{(}{{XYBoxAndWhiskerRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ChartRenderingInfo}}{{i2}{=}{{(}{{ChartRenderingInfo}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ChartRenderingInfo}}{{i2}{=}{{(}{{ChartRenderingInfo}}{)}{{TestUtils}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYCoordinate}}{{v2}{=}{{(}{{XYCoordinate}}{)}{{TestUtils}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardEntityCollection}}{{c2}{=}{{(}{{StandardEntityCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CrosshairOverlay}}{{o2}{=}{{(}{{CrosshairOverlay}}{)}{{TestUtils}{.}{serialised}{(}{o1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PiePlot3D}}{{p2}{=}{{(}{{PiePlot3D}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FastScatterPlot}}{{p2}{=}{{(}{{FastScatterPlot}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValueDataset}}{{d2}{=}{{(}{{DefaultKeyedValueDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TextTitle}}{{t2}{=}{{(}{{TextTitle}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ComparableObjectItem}}{{item2}{=}{{(}{{ComparableObjectItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{s2}{=}{{(}{{TimeSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodValuesCollection}}{{c2}{=}{{(}{{TimePeriodValuesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendItem}}{{item2}{=}{{(}{{LegendItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{item2}{=}{{(}{{LegendItem}}{)}{{TestUtils}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineAndShapeRenderer}}{{r2}{=}{{(}{{LineAndShapeRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{EmptyBlock}}{{b2}{=}{{(}{{EmptyBlock}}{)}{{TestUtils}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedXYBarRenderer}}{{r2}{=}{{(}{{StackedXYBarRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MinMaxCategoryRenderer}}{{r2}{=}{{(}{{MinMaxCategoryRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardChartTheme}}{{t2}{=}{{(}{{StandardChartTheme}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SlidingGanttCategoryDataset}}{{d2}{=}{{(}{{SlidingGanttCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{QuarterDateFormat}}{{qf2}{=}{{(}{{QuarterDateFormat}}{)}{{TestUtils}{.}{serialised}{(}{qf1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedXYAreaRenderer2}}{{r2}{=}{{(}{{StackedXYAreaRenderer2}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalMarker}}{{m2}{=}{{(}{{IntervalMarker}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultStatisticalCategoryDataset}}{{d2}{=}{{(}{{DefaultStatisticalCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultStatisticalCategoryDataset}}{{d2}{=}{{(}{{DefaultStatisticalCategoryDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeterInterval}}{{m2}{=}{{(}{{MeterInterval}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendTitle}}{{t2}{=}{{(}{{LegendTitle}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ScatterRenderer}}{{r2}{=}{{(}{{ScatterRenderer}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLCSeriesCollection}}{{c2}{=}{{(}{{OHLCSeriesCollection}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PlotRenderingInfo}}{{p2}{=}{{(}{{PlotRenderingInfo}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ModuloAxis}}{{a2}{=}{{(}{{ModuloAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeanAndStandardDeviation}}{{m2}{=}{{(}{{MeanAndStandardDeviation}}{)}{{TestUtils}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTickUnit}}{{a2}{=}{{(}{{DateTickUnit}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelPositions}}{{p2}{=}{{(}{{CategoryLabelPositions}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelPosition}}{{p2}{=}{{(}{{CategoryLabelPosition}}{)}{{TestUtils}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ShortTextTitle}}{{t2}{=}{{(}{{ShortTextTitle}}{)}{{TestUtils}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateRange}}{{r2}{=}{{(}{{DateRange}}{)}{{TestUtils}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XIntervalSeries}}{{s2}{=}{{(}{{XIntervalSeries}}{)}{{TestUtils}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLineAnnotation}}{{a2}{=}{{(}{{CategoryLineAnnotation}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYSeriesLabelGenerator}}{{g2}{=}{{(}{{StandardXYSeriesLabelGenerator}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Crosshair}}{{c2}{=}{{(}{{Crosshair}}{)}{{TestUtils}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendGraphic}}{{g2}{=}{{(}{{LegendGraphic}}{)}{{TestUtils}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolAxis}}{{a2}{=}{{(}{{SymbolAxis}}{)}{{TestUtils}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValues2DDataset}}{{d2}{=}{{(}{{DefaultKeyedValues2DDataset}}{)}{{TestUtils}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TickLabelEntity}}{{e2}{=}{{(}{{TickLabelEntity}}{)}{{TestUtils}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{ShapeUtils}{.}{isPointInRect}{(}{dataArea}{,}{xx}{,}{yy}{)}}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{ShapeUtils}{.}{isPointInRect}{(}{dataArea}{,}{xx}{,}{yy}{)}}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{area}}}
{AST_ROOT_SC2NF{{float}{s}}}
{AST_ROOT_SC2NF{{float}{s}}}
{AST_ROOT_SC2NF{{float}{s}}}
{AST_ROOT_SC2NF{{{Shape}}{shape}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{ShapeUtils}{.}{isPointInRect}{(}{dataArea}{,}{x}{,}{y}{)}}}}
{AST_ROOT_SC2NF{{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{{Graphics2D}}{g2}}}
{AST_ROOT_SC2NF{{{TextFragment}}{fragment}}}
{AST_ROOT_SC2NF{{{TextFragment}}{fragment}}}
{AST_ROOT_SC2NF{{public}{TextLine}{(}{{{String}}{text}}{)}{{{}{{this}{(}{text}{,}{TextFragment.DEFAULT_FONT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{month}}}
{AST_ROOT_SC2NF{{int}{code}}}
{AST_ROOT_SC2NF{{boolean}{shortened}}}
{AST_ROOT_SC2NF{{int}{weekday}}}
{AST_ROOT_SC2NF{{{String}}{title}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{Font}}{font}}}
{AST_ROOT_SC2NF{{{Font}}{font}}}
{AST_ROOT_SC2NF{{{Font}}{font}}}
{AST_ROOT_SC2NF{{{Font}}{font}}}
{AST_ROOT_SC2NF{{{Font}}{font}}}
{AST_ROOT_SC2NF{{double}{height}}}
{AST_ROOT_SC2NF{{double}{height}}}
{AST_ROOT_SC2NF{{double}{width}}}
{AST_ROOT_SC2NF{{double}{width}}}
{AST_ROOT_SC2NF{{double}{width}}}
{AST_ROOT_SC2NF{{double}{width}}}
{AST_ROOT_SC2NF{{double}{width}}}
{AST_ROOT_SC2NF{{double}{width}}}
{AST_ROOT_SC2NF{{double}{height}}}
{AST_ROOT_SC2NF{{double}{height}}}
{AST_ROOT_SC2NF{{double}{height}}}
{AST_ROOT_SC2NF{{double}{height}}}
{AST_ROOT_SC2NF{{int}{d}}}
{AST_ROOT_SC2NF{{int}{serial}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{Dialog}}{dialog}}}
{AST_ROOT_SC2NF{{{Window}}{frame}}}
{AST_ROOT_SC2NF{{{Window}}{frame}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{double}{height}}}
{AST_ROOT_SC2NF{{double}{width}}}
{AST_ROOT_SC2NF{{int}{maxrows}}}
{AST_ROOT_SC2NF{{{TextLine}}{line}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{public}{ObjectList}{(}{{int}{initialCapacity}}{)}{{{}{{super}{(}{initialCapacity}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{String}}{classLoaderSource}}}
{AST_ROOT_SC2NF{{{RectangleEdge}}{edge}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{int}{targetDOW}}}
{AST_ROOT_SC2NF{{int}{targetDOW}}}
{AST_ROOT_SC2NF{{int}{targetDOW}}}
{AST_ROOT_SC2NF{{int}{serial}}}
{AST_ROOT_SC2NF{{int}{relative}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{protected}{AbstractObjectList}{(}{{int}{initialCapacity}}{)}{{{}{{this}{(}{initialCapacity}{,}{initialCapacity}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{file}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{fillType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{type}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{type}}{=}{type}}{;}}{{{fireDatasetChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{group}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{defaultGroup}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{category2}}{=}{category}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{category1}}{=}{category}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{zone}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{listenerList}}{.}{remove}{(}{{{RendererChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{listenerList}}{.}{add}{(}{{{RendererChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultLegendTextFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultNegativeItemLabelPosition}}{=}{position}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultPositiveItemLabelPosition}}{=}{position}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultItemLabelPaint}}{=}{paint}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{setDefaultItemLabelFont}{(}{font}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultShape}}{=}{shape}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultOutlineStroke}}{=}{stroke}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultStroke}}{=}{stroke}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultOutlinePaint}}{=}{paint}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultFillPaint}}{=}{paint}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowPaint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowStroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{indexOf}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{marker}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePosition}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rowRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{columnRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{renderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{orientation}}{=}{orientation}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{key}}{=}{key}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paintScale}}{=}{scale}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{renderer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{renderer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{supplier}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{drawingSupplier}}{=}{supplier}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandAlternatePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorIndicatorPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{thermometerPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{xyBarPainter}}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{barPainter}}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shadowPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemLabelPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLabelPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisOffset}}{=}{offset}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{crosshairPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baselinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{style}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkStyle}}{=}{style}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plotOutlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plotBackgroundPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendBackgroundPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{chartBackgroundPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subtitlePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{titlePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{smallFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{regularFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{largeFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{extraLargeFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{name}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{seriesKeys}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{chart}}{=}{chart}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{indexOf}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandAlternatePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{getValue}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shapeLocation}}{=}{location}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shapeAnchor}}{=}{anchor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{transformer}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaintTransformer}}{=}{transformer}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{x}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{x}}{=}{x}}{;}}{{{{this}{.}{obj}}{=}{y}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{unit}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseFormatter}}{=}{formatter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{separatorPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{separatorStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{color}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextColor}}{=}{color}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{mode}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextMode}}{=}{mode}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}{{{Range}}{{result}{=}{{iterateToFindZBounds}{(}{dataset}{,}{visibleSeriesKeys}{,}{xRange}{,}{includeInterval}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}{{{Range}}{{result}{=}{{iterateZBounds}{(}{dataset}{,}{includeInterval}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{negativeBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{positiveBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{lastBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{firstBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{radialAxis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{composite}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillComposite}}{=}{composite}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{guideLineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{guideLinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paintScale}}{=}{scale}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{key}}{=}{key}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{icon}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minIcon}}{=}{icon}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{icon}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{maxIcon}}{=}{icon}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{icon}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{objectIcon}}{=}{icon}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{groupStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{groupPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{xPosition}}{=}{position}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{interval}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{intervals}}{.}{add}{(}{interval}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valuePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valueFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelFormat}}{=}{format}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{needlePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{polygon}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{thresholdType}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gapThresholdType}}{=}{thresholdType}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{name}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{period}}{=}{period}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{key}}{=}{key}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickMarkPosition}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{maximumDate}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{date}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{locale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{zone}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{chartMouseListeners}}{.}{add}{(}{{{ChartMouseListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{file}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{overlay}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{overlay}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zoomFillPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{incompletePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{completePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rotationAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{text}}{=}{text}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelTextAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{adj}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelOffsetType}}{=}{adj}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelOffset}}{=}{offset}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{color}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelBackgroundColor}}{=}{color}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{arrangement}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrangement}}{=}{arrangement}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{arrangement}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{foregroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{backgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{x}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{period}}{=}{period}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{category}}{=}{category}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{subtask}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subtasks}}{.}{add}{(}{subtask}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{description}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{description}}{=}{description}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{description}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stripOutlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stripOutlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLocation}}{=}{location}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{scale}}{=}{scale}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{serialDate}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{serialDate}}{=}{serialDate}}{;}}{{{peg}{(}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowPaint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowStroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeAxis}}{=}{axis}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainAxis}}{=}{axis}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axisIndex}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{cornerTextItems}}{.}{add}{(}{text}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{angleLabelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{angleLabelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{unit}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{angleTickUnit}}{=}{unit}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{type}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{endType}}{=}{type}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sortOrder}}{=}{order}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemLabelPadding}}{=}{padding}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemGraphicPadding}}{=}{padding}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemGraphicAnchor}}{=}{anchor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{edge}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemGraphicEdge}}{=}{edge}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{sources}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sources}}{=}{sources}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{title}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{title}}{=}{title}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plot}}{=}{plot}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{volumePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{remove}{(}{{{ChartChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{add}{(}{{{ChartChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subtitle}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subtitle}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{padding}}{=}{padding}}{;}}{{{notifyListeners}{(}{{new}{{ChartChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{renderingHints}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{renderingHints}}{=}{renderingHints}}{;}}{{{fireChartChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{store}}{.}{put}{(}{key}{,}{stroke}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{Stroke}}{)}{{{this}{.}{store}}{.}{get}{(}{key}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{artifactPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{t}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gradientPaintTransformer}}{=}{t}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{transformer}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gradientTransformer}}{=}{transformer}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendArea}}{=}{area}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dataset}}{=}{dataset}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{anchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{label}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{label}}{=}{label}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{label}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{edge}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{drawable}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{alignment}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAlignment}}{=}{alignment}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{alignment}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{alignment}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{rectangle}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{area}}{=}{area}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{hour}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{artifactPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{coefficients}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{coefficients}}{=}{{(}{{double}{[]}}{)}{{coefficients}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subLabelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subLabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subCategory}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{f}{,}{STRING_CONSTANT}{)}}{;}}{{{factory}{=}{f}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{container}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{container}}{=}{container}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{container}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{container}}{=}{container}}{;}}{{{{this}{.}{backgroundPaint}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{remove}{(}{{{OverlayChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{add}{(}{{{OverlayChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}{{{setRange}{(}{{Range}{.}{expand}{(}{range}{,}{{getLowerMargin}{()}}{,}{{getUpperMargin}{()}}{)}}{,}{turnOffAutoRange}{,}{notify}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultAutoRange}}{=}{range}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rightArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{leftArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{downArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{upArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rotationAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{text}}{=}{text}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zDateFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{x}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{x}}{=}{x}}{;}}{{{{this}{.}{y}}{=}{y}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{tickType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axisIndex}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axisIndex}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{origin}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{quadrantOrigin}}{=}{origin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainZeroBaselinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainZeroBaselineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainMinorGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainMinorGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{seriesRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{datasetRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{mercuryPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valueFormat}}{=}{formatter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{f}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{padding}}{=}{padding}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{store}}{.}{put}{(}{key}{,}{paint}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{Paint}}{)}{{{this}{.}{store}}{.}{get}{(}{key}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{ServletUtilities.tempOneTimeFilePrefix}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{ServletUtilities.tempFilePrefix}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{extract}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelGenerator}}{=}{generator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseSeriesOutlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseSeriesOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseSeriesPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{direction}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{direction}}{=}{direction}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dataExtractOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{extract}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{aggregatedItemsPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{aggregatedItemsKey}}{=}{key}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dataExtractOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{pieChart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{directions}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{array}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{columnKey}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{getCategoryIndex}{(}{columnKey}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{categoryKeys}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{seriesKeys}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{contentAlignmentPoint}}{=}{anchor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{advanceLineStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{advanceLinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{day}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{categories}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{if}{(}{{{{this}{.}{categoryLabelURLs}}{.}{remove}{(}{category}{)}}{!=}{null}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{String}}{)}{{{this}{.}{categoryLabelURLs}}{.}{get}{(}{category}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelURLs}}{.}{put}{(}{category}{,}{url}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{if}{(}{{{{this}{.}{categoryLabelToolTips}}{.}{remove}{(}{category}{)}}{!=}{null}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{String}}{)}{{{this}{.}{categoryLabelToolTips}}{.}{get}{(}{category}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelToolTips}}{.}{put}{(}{category}{,}{tooltip}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{positions}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelPositions}}{=}{positions}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{columnKey}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{keys}}{.}{indexOf}{(}{columnKey}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{foregroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{backgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{barPainter}}{=}{painter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{bar}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendBar}}{=}{bar}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{XYBarRenderer.defaultBarPainter}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{columnKey}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{rowKey}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{columnKeys}}{.}{indexOf}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{color}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{hotspot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plot}}{=}{plot}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatPattern}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valueAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{insets}}{=}{insets}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{backgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{formatter}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{value}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{templateValue}}{=}{value}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{frameAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axis}}{=}{axis}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{noDataMessagePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{noDataMessageFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{source}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{annotation}}{=}{annotation}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{transformer}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaintTransformer}}{=}{transformer}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{line}}{=}{line}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{linePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{lineStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shape}}{=}{shape}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendArea}}{=}{area}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sublabelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sublabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{image}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{prefix}}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{defaultPaint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{roseHighlightPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{roseCenterPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rosePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{entity}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{entities}}{.}{add}{(}{entity}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{rect}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{pointer}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{pointers}}{.}{indexOf}{(}{pointer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{pointer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{layer}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{layers}}{.}{indexOf}{(}{layer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{layer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{frame}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{task}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tasks}}{.}{add}{(}{task}{)}}{;}}{{{fireSeriesChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{secondFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{secondSuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minuteSuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minuteFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{hourSuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{hourFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{daySuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dayFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{positivePrefix}}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{map}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{seriesToGroupMap}}{=}{map}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zDateFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelFormatter}}{=}{formatter}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{columnKeys}}{.}{indexOf}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{rowKeys}}{.}{indexOf}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{date}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shadowPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{barPainter}}{=}{painter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{BarRenderer.defaultBarPainter}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{bounds}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{bounds}}{=}{bounds}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{padding}}{=}{padding}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{frame}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{frame}}{=}{frame}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{margin}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{margin}}{=}{margin}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{unit}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{rangeType}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeType}}{=}{rangeType}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{group}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{group}}{=}{group}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{locale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{theme}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{input}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{input}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{negativePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{positivePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{id}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{id}}{=}{id}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{locale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{tasks}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickMarkPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLocation}}{=}{location}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{indexOf}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{autoRangeTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{zone}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{last}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{first}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{size}{,}{minorTickCount}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{size}{)}{;}}{{{Args}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{seriesKey}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{seriesKey}}{=}{seriesKey}}{;}}{{{{this}{.}{itemIndex}}{=}{itemIndex}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatPattern}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{record}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labels}}{.}{add}{(}{record}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{base}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{base}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{distributor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelDistributor}}{=}{distributor}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{simpleLabelOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPadding}}{=}{padding}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{style}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkStyle}}{=}{style}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Args}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultSectionOutlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultSectionOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultSectionPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Args}{.}{nullNotPermitted}{(}{direction}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{direction}}{=}{direction}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{{this}{.}{anchor}}{.}{getAnchorPoint}{(}{titleRect}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{anchor}{.}{getAnchorPoint}{(}{anchorRect}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{anchor}{.}{getAnchorPoint}{(}{anchorRect}{)}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{pt2}{=}{{{this}{.}{valueAnchor}}{.}{getAnchorPoint}{(}{bounds}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{{position}{.}{getCategoryAnchor}{()}}{.}{getAnchorPoint}{(}{area}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{anchor}{.}{getAnchorPoint}{(}{anchorRect}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{anchor}{.}{getAnchorPoint}{(}{anchorRect}{)}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{anchor}{.}{getAnchorPoint}{(}{{shape}{.}{getBounds2D}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{pt}{=}{{{this}{.}{textAnchor}}{.}{getAnchorPoint}{(}{area}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{{this}{.}{anchor}}{.}{getAnchorPoint}{(}{imageRect}{)}}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setXORMode}{(}{Color.ORANGE}{)}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setXORMode}{(}{Color.ORANGE}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{xor}{)}{{{}{{{g2}{.}{setXORMode}{(}{Color.GRAY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{overlays}}{=}{{new}{{{java.util.ArrayList}}{<}{{Overlay}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mep}{>}{NUMBER_CONSTANT}}{)}{{{}{{{ep}{=}{{{getExplodePercent}{(}{{dataset}{.}{getKey}{(}{section}{)}}{)}}{/}{mep}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ChartUtils}{.}{isOrsonPDFAvailable}{()}}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{chart.subtitles}{=}{{new}{{{ArrayList}}{<}{{Title}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{subtitles}}{.}{get}{(}{index}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{subtitles}}{=}{{new}{{{ArrayList}}{<}{{Title}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{chartPanel}}{=}{{new}{{ChartPanel}}{(}{chart}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{Null}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ObjectUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{BooleanUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{CharUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ClassUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ArrayUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{Validate}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{WordUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{StringEscapeUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{CharSetUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{RandomStringUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{private}{Entry}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{private}{Entry}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{DateFormatUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{DateUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{StopWatch}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{RandomStringUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{StringEscapeUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{WordUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{CharSetUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{CharUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{ObjectUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{BooleanUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{ArrayUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{ClassUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{createLong}{(}{numeric}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{;}{}}}}}{{return}{{createBigInteger}{(}{numeric}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{in}{!=}{null}}{)}{{{}{{{in}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}{;}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{out}{!=}{null}}{)}{{{}{{{out}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}{;}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{createLong}{(}{numeric}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{;}{}}}}}{{return}{{createBigInteger}{(}{numeric}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{last}{==}{CHAR_CONS}}{)}{{{}{;}{}}}{else}{{{}{{{lastIdx}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{StringUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{SystemUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{in}{!=}{null}}{)}{{{}{{{in}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{out}{!=}{null}}{)}{{{}{{{out}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{public}{DateFormatUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{Null}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{DateUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{TwoDigitMonthField}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{TwoDigitYearField}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{UnpaddedMonthField}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{VariableFormatterTest}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Object}}{{result}{=}{{replaceObject}{(}{source}{)}}}{;}}{{return}{{{result}{==}{null}}{?}{null}{:}{{result}{.}{toString}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendFixedWidthPadLeft}{(}{null}{,}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{;}}}
{AST_ROOT_SC2NF{{noPrimitives}{=}{{new}{{{Class}}{[]}}{{{}{{{String}}{.}{class}}{,}{{{ClassUtils}}{.}{class}}{,}{Void.TYPE}{}}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{DoubleRange}}{(}{nonComparableNumber}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{IntRange}}{(}{nonComparableNumber}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{LongRange}}{(}{nonComparableNumber}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsFloat}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsDouble}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsInteger}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsLong}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparableNumber}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{FloatRange}}{(}{nonComparableNumber}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getTSVClone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCSVClone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{removeLen}{=}{{endIndex}{-}{startIndex}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{lastIndexOf}{(}{str}{,}{{size}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{lastIndexOf}{(}{ch}{,}{{size}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{String}}{(}{buf}{,}{{size}{-}{length}}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{StringBuffer}}{(}{size}{)}}{.}{append}{(}{buffer}{,}{NUMBER_CONSTANT}{,}{size}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{String}}{(}{buffer}{,}{NUMBER_CONSTANT}{,}{size}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{.}{charAt}{(}{j}{)}}{!=}{{buffer}{[}{{i}{+}{j}}{]}}}{)}{{{}{{continue}{outer}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{buffer}{[}{i}{]}}{==}{ch}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{{}{{{endIndex}{=}{{validateRange}{(}{startIndex}{,}{endIndex}{)}}}{;}}{{return}{{new}{{String}}{(}{buffer}{,}{startIndex}{,}{{endIndex}{-}{startIndex}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{buffer}{[}{pos}{]}}{!=}{{str}{.}{charAt}{(}{i}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{buffer}{[}{i}{]}}{!=}{{str}{.}{charAt}{(}{i}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{>}{NUMBER_CONSTANT}}{)}{{{}{{{System}{.}{arraycopy}{(}{buffer}{,}{endIndex}{,}{buffer}{,}{startIndex}{,}{{size}{-}{endIndex}}{)}}{;}}{{{size}{-=}{len}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{length}}{;}{{i}{++}}{)}{{{}{{{{buffer}{[}{{size}{++}}{]}}{=}{padChar}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{buffer}{[}{{size}{++}}{]}}{=}{ch}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{chars}{,}{startIndex}{,}{buffer}{,}{len}{,}{length}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{chars}{,}{NUMBER_CONSTANT}{,}{buffer}{,}{len}{,}{strLen}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{str.buffer}{,}{NUMBER_CONSTANT}{,}{buffer}{,}{len}{,}{strLen}{)}}{;}}}
{AST_ROOT_SC2NF{{{str}{.}{getChars}{(}{NUMBER_CONSTANT}{,}{strLen}{,}{buffer}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{str}{.}{getChars}{(}{NUMBER_CONSTANT}{,}{strLen}{,}{buffer}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buffer}{,}{startIndex}{,}{destination}{,}{destinationIndex}{,}{{endIndex}{-}{startIndex}}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buffer}{,}{NUMBER_CONSTANT}{,}{destination}{,}{NUMBER_CONSTANT}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buffer}{,}{startIndex}{,}{chars}{,}{NUMBER_CONSTANT}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buffer}{,}{NUMBER_CONSTANT}{,}{chars}{,}{NUMBER_CONSTANT}{,}{size}{)}}{;}}}
{AST_ROOT_SC2NF{{{{buffer}{[}{index}{]}}{=}{ch}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{length}{()}}}}{)}{{{}{{throw}{{new}{{StringIndexOutOfBoundsException}}{(}{index}{)}}{;}}{}}}}{{return}{{buffer}{[}{index}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{oldEnd}}}{;}{{i}{<}{newEnd}}{;}{{i}{++}}{)}{{{}{{{{buffer}{[}{i}{]}}{=}{CHAR_CONS}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{if}{(}{{initialCapacity}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{initialCapacity}{=}{CAPACITY}}{;}}{}}}}{{{buffer}{=}{{new}{{char}{[}}{initialCapacity}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{sb.buffer.length}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{pos}{+}{len}}{>}{textLen}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{boolean}{[]}}{)}{{add}{(}{array}{,}{index}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{element}{)}}{,}{Boolean.TYPE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{sb}{.}{setLength}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IndexOutOfBoundsException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{sb}{.}{setLength}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IndexOutOfBoundsException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{sb}{.}{deleteCharAt}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IndexOutOfBoundsException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{startPos}{<}{{getPos}{()}}}{)}{{{}{{{{getTokenList}{()}}{.}{addLast}{(}{{VariableParser}{.}{newTextToken}{(}{startPos}{,}{{{getPos}{()}}{-}{startPos}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{last}{!=}{CharUtils.CR}}{)}{{{}{{{lastIdx}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{setVarStartMatcher}{(}{{{StrMatcher}}{varStartMatcher}}{)}{{{}{{{{this}{.}{varStartMatcher}}{=}{varStartMatcher}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{setVarEndMatcher}{(}{{{StrMatcher}}{varEndMatcher}}{)}{{{}{{{{this}{.}{varEndMatcher}}{=}{varEndMatcher}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{setEscVarMatcher}{(}{{{StrMatcher}}{escVarMatcher}}{)}{{{}{{{{this}{.}{escVarMatcher}}{=}{escVarMatcher}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{trimmer}}}
{AST_ROOT_SC2NF{{{}{{{setIgnoredMatcher}{(}{{StrMatcher}{.}{charMatcher}{(}{ignored}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{ignored}}}
{AST_ROOT_SC2NF{{{}{{{setQuoteMatcher}{(}{{StrMatcher}{.}{charMatcher}{(}{quote}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{quote}}}
{AST_ROOT_SC2NF{{{start}{==}{len}}{&&}{{{delim}{.}{isMatch}{(}{chars}{,}{{start}{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{len}{)}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{delim}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{delim}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{{StrMatcher}{.}{trimMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{{StrMatcher}{.}{trimMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{{StrMatcher}{.}{trimMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{{StrMatcher}{.}{noneMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{{StrMatcher}{.}{noneMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{{StrMatcher}{.}{trimMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{replaceFirst}{(}{CHAR_CONS}{,}{CHAR_CONS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ArrayUtils}{.}{toString}{(}{tokens}{)}}{,}{expected.length}{,}{tokens.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ArrayUtils}{.}{toString}{(}{tokens}{)}}{,}{expected.length}{,}{tokens.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ArrayUtils}{.}{toString}{(}{tokens}{)}}{,}{expected.length}{,}{tokens.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ArrayUtils}{.}{toString}{(}{tokens}{)}}{,}{expected.length}{,}{tokens.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ArrayUtils}{.}{toString}{(}{tokens}{)}}{,}{expected.length}{,}{tokens.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ArrayUtils}{.}{toString}{(}{tokens}{)}}{,}{expected.length}{,}{tokens.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ArrayUtils}{.}{toString}{(}{tokens}{)}}{,}{expected.length}{,}{tokens.length}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{cloned.chars}{!=}{null}}{)}{{{}{{{cloned.chars}{=}{cloned.chars}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{cloned.chars}{!=}{null}}{)}{{{}{{{cloned.chars}{=}{{(}{{char}{[]}}{)}{{cloned.chars}{.}{clone}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isEmptyTokenAsNull}{()}{{{}{{return}{{this}{.}{emptyAsNull}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{trimmer}{!=}{null}}{)}{{{}{{{{this}{.}{trimmerMatcher}}{=}{trimmer}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getTrimmerMatcher}{()}{{{}{{return}{trimmerMatcher}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ignored}{!=}{null}}{)}{{{}{{{{this}{.}{ignoredMatcher}}{=}{ignored}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getIgnoredMatcher}{()}{{{}{{return}{ignoredMatcher}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{quote}{!=}{null}}{)}{{{}{{{{this}{.}{quoteMatcher}}{=}{quote}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getQuoteMatcher}{()}{{{}{{return}{quoteMatcher}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getDelimiterMatcher}{()}{{{}{{return}{{this}{.}{delimMatcher}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{!}{{bf_multi}{.}{isAllSet}{(}{j}{)}}}{)}}{;}}{{{assertTrue}{(}{{bf_zero}{.}{isAllSet}{(}{j}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{msg}{==}{null}}{?}{DEFAULT_MESSAGE}{:}{msg}}{)}{;}}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{DEFAULT_MESSAGE}{)}{;}}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{msg}{==}{null}}{?}{DEFAULT_MESSAGE}{:}{msg}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotImplementedException}{()}{{{}{{super}{(}{DEFAULT_MESSAGE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{tokenize}{()}{{{}{{if}{(}{{tokens}{==}{null}}{)}{{{}{{{tokens}{=}{{readTokens}{()}}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{{sb}{.}{clear}{()}}{.}{append}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertLocaleLookupList}{(}{LOCALE_EN_US_ZZZZ}{,}{null}{,}{{new}{{{Locale}}{[]}}{{{}{LOCALE_EN_US_ZZZZ}{,}{LOCALE_EN_US}{,}{{new}{{Locale}}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertLocaleLookupList}{(}{LOCALE_EN_US_ZZZZ}{,}{null}{,}{{new}{{{Locale}}{[]}}{{{}{LOCALE_EN_US_ZZZZ}{,}{LOCALE_EN_US}{,}{LOCALE_EN}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{StringUtils}{.}{isEmpty}{(}{str}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{StrBuilder}{.}{this}}{.}{append}{(}{str}{,}{off}{,}{len}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{StrBuilder}{.}{this}}{.}{append}{(}{cbuf}{,}{off}{,}{len}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{write}{(}{{{char}{[]}}{cbuf}}{)}{{{}{{{{StrBuilder}{.}{this}}{.}{append}{(}{cbuf}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{write}{(}{{int}{c}}{)}{{{}{{{{StrBuilder}{.}{this}}{.}{append}{(}{{(}{char}{)}{c}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{,}{NUMBER_CONSTANT}{,}{tolerance}{)}}{!=}{INDEX_NOT_FOUND}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{INDEX_NOT_FOUND}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{INDEX_NOT_FOUND}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{INDEX_NOT_FOUND}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{INDEX_NOT_FOUND}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{INDEX_NOT_FOUND}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{objectToFind}{)}}{!=}{INDEX_NOT_FOUND}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionEquals}{(}{lhs}{,}{rhs}{,}{testTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionEquals}{(}{lhs}{,}{rhs}{,}{false}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{testTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{false}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{object}{,}{testTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{object}{,}{false}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{compareTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{false}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{HashCodeBuilder}{.}{reflectionHashCode}{(}{x}{,}{{(}{{{String}}{[]}}{)}{null}}{)}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getTokenArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasPrevious}{()}{{{}{{{checkTokenized}{()}}{;}}{{return}{{tokenPos}{>}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasNext}{()}{{{}{{{checkTokenized}{()}}{;}}{{return}{{tokenPos}{<}{tokens.length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkTokenized}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkTokenized}{()}}{;}}{{return}{{(}{{{String}}{[]}}{)}{{tokens}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{size}{()}{{{}{{{checkTokenized}{()}}{;}}{{return}{tokens.length}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{input}{,}{{tok}{.}{getContent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{ready}{()}}{==}{false}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{{StrBuilder}{.}{this}}{.}{charAt}{(}{{pos}{++}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{varValue}{=}{{resolveVariable}{(}{varName}{,}{buf}{,}{startPos}{,}{endPos}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{substitute}{(}{buf}{,}{NUMBER_CONSTANT}{,}{length}{)}}{==}{false}}{)}{{{}{{return}{{source}{.}{substring}{(}{offset}{,}{{offset}{+}{length}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StrLookup}}{variableResolver}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{StrLookup}{.}{mapLookup}{(}{valueMap}{)}}{,}{prefix}{,}{suffix}{,}{escape}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{StrLookup}{.}{mapLookup}{(}{valueMap}{)}}{,}{prefix}{,}{suffix}{,}{DEFAULT_ESCAPE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{StrLookup}{.}{mapLookup}{(}{valueMap}{)}}{,}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ESCAPE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{StrSubstitutor}}{(}{{StrLookup}{.}{systemPropertiesLookup}{()}}{)}}{.}{replace}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{entry.map}{.}{get}{(}{{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{Entry}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{return}{{entry.map}{.}{get}{(}{{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{Entry}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{sub}{.}{replaceIn}{(}{builder}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{ExceptionUtils}{.}{getThrowableCount}{(}{cyclicCause}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{cyclicCause}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{cyclicCause}{=}{{new}{{ExceptionWithCause}}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{protected}{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{Boolean}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{new}{{Boolean}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{BooleanUtils}{.}{toBooleanObject}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StringWriter}}{{stringWriter}{=}{{createStringWriter}{(}{str}{)}}}{;}}{{{this}{.}{unescape}{(}{stringWriter}{,}{str}{)}}{;}}{{return}{{stringWriter}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{StringWriter}}{{stringWriter}{=}{{createStringWriter}{(}{str}{)}}}{;}}{{{this}{.}{escape}{(}{stringWriter}{,}{str}{)}}{;}}{{return}{{stringWriter}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{CharSet.EMPTY}{,}{{CharSet}{.}{getInstance}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{CharSet}}{{chars}{=}{{CharSet}{.}{getInstance}{(}{set}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharSet}}{{chars}{=}{{CharSet}{.}{getInstance}{(}{set}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharSet}}{{chars}{=}{{CharSet}{.}{getInstance}{(}{set}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopTime}}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopTime}}{=}{{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopTime}}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{runningState}}{==}{STATE_RUNNING}}{)}{{{}{{{{this}{.}{stopTime}}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{java.util.Locale}{.}{setDefault}{(}{java.util.Locale.US}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{containsNone}{(}{str}{,}{CSV_SEARCH_CHARS}{)}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MessageFormat}}{{f}{=}{{createMessageFormat}{(}{pattern}{,}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{subformats}{.}{put}{(}{INTEGER}{,}{{createIntegerInstance}{(}{{getLocale}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{getIntegerNumberFormat}{(}{Locale.US}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{splitByWholeSeparatorWorker}{(}{str}{,}{separator}{,}{{-}{NUMBER_CONSTANT}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{clazz}{=}{{Class}{.}{forName}{(}{{toCanonicalName}{(}{className}{)}}{,}{initialize}{,}{classLoader}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{containsAny}{(}{quoteless}{,}{CSV_SEARCH_CHARS}{)}}{)}{{{}{{{str}{=}{{StringUtils}{.}{replace}{(}{quoteless}{,}{{CSV_QUOTE_STR}{+}{CSV_QUOTE_STR}}{,}{CSV_QUOTE_STR}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{replaceChars}{==}{null}}{)}{{{}{{{replaceChars}{=}{EMPTY}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{isEmpty}{(}{remove}{)}}}{)}{{{}{{return}{str}{;}}{}}}}{{return}{{replace}{(}{str}{,}{remove}{,}{EMPTY}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ExtendedMessageFormat}}{(}{pattern}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertPatternsEqual}{(}{null}{,}{pattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPatternsEqual}{(}{STRING_CONSTANT}{,}{pattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{mid}{=}{{{(}{{low}{+}{high}}{)}}{>}{>}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{osName}{.}{toLowerCase}{(}{Locale.ENGLISH}{)}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Integer}{.}{toHexString}{(}{ch}{)}}{.}{toUpperCase}{(}{Locale.ENGLISH}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{throw}{{new}{{UnhandledException}}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{throw}{{new}{{UnhandledException}}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{throw}{{new}{{UnhandledException}}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{throw}{{new}{{UnhandledException}}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{getRegistry}{()}}{.}{remove}{(}{{new}{{IDKey}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{getRegistry}{()}}{.}{add}{(}{{new}{{IDKey}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getRegistry}{()}}{.}{contains}{(}{{new}{{IDKey}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{roundUp}{=}{{offset}{>=}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{runningState}}{==}{STATE_UNSTARTED}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{this}{.}{startTimeMillis}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{startTime}}{+=}{{(}{{{System}{.}{nanoTime}{()}}{-}{{this}{.}{stopTime}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopTime}}{=}{{System}{.}{nanoTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopTime}}{=}{{System}{.}{nanoTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{runningState}}{==}{STATE_RUNNING}}{)}{{{}{{{{this}{.}{stopTime}}{=}{{System}{.}{nanoTime}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableErrorTest}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableExceptionTest}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableRuntimeExceptionTest}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionUtilsTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{Boolean}}{)}{{IS_SYNTHETIC}{.}{invoke}{(}{m}{,}{{(}{{{Object}}{[]}}{)}{null}}{)}}}{)}}{.}{booleanValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{objects}{[}{NUMBER_CONSTANT}{]}}{=}{simple}}{;}}}
{AST_ROOT_SC2NF{{{{objectsLevel2}{[}{NUMBER_CONSTANT}{]}}{=}{objects}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{array}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{cloned.chars}{!=}{null}}{)}{{{}{{{cloned.chars}{=}{{cloned.chars}{.}{clone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkTokenized}{()}}{;}}{{return}{{tokens}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Throwable}}{getCause}{()}{{{}{{return}{cause}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{toString}{;}}{}}}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendln}{(}{FOO}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{msg}{)}{;}}{{{{this}{.}{cause}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{msg}{)}{;}}{{{{this}{.}{cause}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{msg}{)}{;}}{{{{this}{.}{cause}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{splitOnNullResults}{=}{{StringUtils}{.}{splitByWholeSeparator}{(}{stringToSplitOnNulls}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ObjectUtils}{.}{identityToString}{(}{{this}{.}{getStringBuffer}{()}}{,}{object}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ObjectUtils}{.}{identityToString}{(}{buffer}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{pBaseStr}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{DEFAULT_MESSAGE}{,}{cause}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{{n}{=}{{new}{{UnhandledException}}{(}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{throw}{{new}{{UnhandledException}}{(}{{STRING_CONSTANT}{+}{unicode}}{,}{nfe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{Entities}{.}{getISO8859_1}{(}{{i}{%}{Entities.ISO8859_1_ARRAY_LENGTH}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{Entities}{.}{getHTML40}{(}{{i}{%}{Entities.HTML40_ARRAY_LENGTH}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{collection}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{collection}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{iterator}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{iterator}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{tokens}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{tokens}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{list}}}
{AST_ROOT_SC2NF{{public}{{Byte}}{toByte}{()}{{{}{{return}{{Byte}{.}{valueOf}{(}{{byteValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{Byte}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mutNum}{.}{compareTo}{(}{{Byte}{.}{valueOf}{(}{{(}{byte}{)}{NUMBER_CONSTANT}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{byte}{[]}}{)}{{add}{(}{array}{,}{index}{,}{{Byte}{.}{valueOf}{(}{element}{)}}{,}{Byte.TYPE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Byte}{.}{valueOf}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{list}{=}{{getCauseMethodNameList}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{list}{=}{{getCauseMethodNameList}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{FormatFactory}}{>}}{registry}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{FormatFactory}}{>}}{registry}}}
{AST_ROOT_SC2NF{{{String}}{obj}}}
{AST_ROOT_SC2NF{{{String}}{obj}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{lhsClass}{=}{{lhs}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{excludeFields}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{collection}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{excludeFieldNames}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{priorVariables}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clss}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{clss}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{newArrayComponentType}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{expected}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{excludeFields}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{excludeFields}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{if}{(}{{methodNames}{==}{null}}{)}{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES_LOCK}{)}{{{}{{{methodNames}{=}{CAUSE_METHOD_NAMES}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES_LOCK}{)}{{{}{{return}{{getCause}{(}{throwable}{,}{CAUSE_METHOD_NAMES}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{list}{.}{remove}{(}{methodName}{)}}{)}{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES_LOCK}{)}{{{}{{{CAUSE_METHOD_NAMES}{=}{{toArray}{(}{list}{)}}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{list}{.}{add}{(}{methodName}{)}}{)}{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES_LOCK}{)}{{{}{{{CAUSE_METHOD_NAMES}{=}{{toArray}{(}{list}{)}}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{ObjectUtils.NULL}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{obj}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{Boolean}{.}{valueOf}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{boolean}{[]}}{)}{{add}{(}{array}{,}{index}{,}{{Boolean}{.}{valueOf}{(}{element}{)}}{,}{Boolean.TYPE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{Boolean}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}{{return}{{{cls}{.}{getPackage}{()}}{.}{getName}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{comparison}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{{comparison}{=}{{Float}{.}{compare}{(}{lhs}{,}{rhs}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{comparison}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{{comparison}{=}{{Double}{.}{compare}{(}{lhs}{,}{rhs}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Double}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Float}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{compare}{=}{{{(}{{(}{{{Comparable}}{<}{{Number}}{>}}{)}{num1}}{)}}{.}{compareTo}{(}{num2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{?}{,}{?}{>}}{map}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{collection}}}
{AST_ROOT_SC2NF{{{{Comparator}}{<}{?}{>}}{comparator}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{?}{super}{{T}}}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{V}}{>}}{map}}}
{AST_ROOT_SC2NF{{public}{{{String}}{[]}}{getExcludeFieldNames}{()}{{{}{{return}{{{this}{.}{excludeFieldNames}}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{UnescapeUtils.UNESCAPE_ECMASCRIPT}{.}{translate}{(}{str}{,}{out}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils.UNESCAPE_ECMASCRIPT}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{EscapeUtils.ESCAPE_ECMASCRIPT}{.}{translate}{(}{str}{,}{out}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils.ESCAPE_ECMASCRIPT}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{EscapeUtils.ESCAPE_JAVA}{.}{translate}{(}{str}{,}{out}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils.ESCAPE_JAVA}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils}{.}{unescapeCsv}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils}{.}{escapeCsv}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils}{.}{unescapeXml}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils}{.}{escapeXml}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils}{.}{unescapeHtml4}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils}{.}{escapeHtml4}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils}{.}{unescapeEcmaScript}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils}{.}{unescapeJava}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils}{.}{escapeEcmaScript}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils}{.}{escapeJava}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{void}{setValue}{(}{{{T}}{value}}{)}{;}}}
{AST_ROOT_SC2NF{{{T}}{getValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{CharSequence}}{str}}}
{AST_ROOT_SC2NF{{{CharSequence}}{str}}}
{AST_ROOT_SC2NF{{{CharSequence}}{str}}}
{AST_ROOT_SC2NF{{{CharSequence}}{str}}}
{AST_ROOT_SC2NF{{{modify}{(}{truncated}{,}{field}{,}{MODIFY_TRUNCATE}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{MODIFY_TRUNCATE}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{rounded}{,}{field}{,}{MODIFY_ROUND}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{MODIFY_ROUND}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{NullPointerException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{target}{==}{null}}{)}{{{}{{throw}{{new}{{NullPointerException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{{STRING_CONSTANT}{+}{unicode}}{,}{nfe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertGetClassThrowsNullPointerException}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{buffer}{=}{{new}{{char}{[}}{{capacity}{*}{NUMBER_CONSTANT}}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{getMessage}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{getMessage}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{getMessage}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{message}{+}{value}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{message}{+}{value}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{message}{+}{value}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Float}{.}{valueOf}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Double}{.}{valueOf}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Short}{.}{valueOf}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Integer}{.}{valueOf}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Long}{.}{valueOf}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Character}{.}{valueOf}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{float}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{long}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{int}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{short}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{byte}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{boolean}{.}{.}{.}{array2}}}
{AST_ROOT_SC2NF{{object}{instanceof}{{{Map.Entry}}{<}{?}{,}{?}{>}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{num1}{instanceof}{{{Comparable}}{<}{?}{>}}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{num}{instanceof}{{{Comparable}}{<}{?}{>}}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{oos}{.}{writeObject}{(}{{new}{{ClassNotFoundSerialization}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{object}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{getPackageName}{(}{{object}{.}{getClass}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{object}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{getShortClassName}{(}{{object}{.}{getClass}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}{{return}{{getPackageName}{(}{{cls}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{isSet}{(}{PARAM.escapePlus}{)}}}
{AST_ROOT_SC2NF{{{uu}{=}{{new}{{UnicodeUnescaper}}{(}{UnicodeUnescaper.PARAM.escapePlus}{)}}}{;}}}
{AST_ROOT_SC2NF{{{uu}{=}{{new}{{UnicodeUnescaper}}{(}{UnicodeUnescaper.OPTION.escapePlus}{)}}}{;}}}
{AST_ROOT_SC2NF{{isSet}{(}{OPTION.escapePlus}{)}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{result}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{canonicalClassNameBuffer}{=}{{new}{{StringBuilder}}{(}{className}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{classNameBuffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{arrayPrefix}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuilder}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toLowerCase}{(}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{str}{.}{substring}{(}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuilder}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toTitleCase}{(}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{str}{.}{substring}{(}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{outputLength}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{strLength}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{bufSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{bufSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{toString}{=}{{{{{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}{.}{append}{(}{{getNumerator}{()}}{)}}{.}{append}{(}{CHAR_CONS}{)}}{.}{append}{(}{{getDenominator}{()}}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{CharRange}}{{range}{=}{{CharRange}{.}{is}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{collection}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{collection}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{?}{,}{?}{>}}{map}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{coll}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{{Collection}}{<}{?}{>}}{)}{null}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{{Collection}}{<}{?}{>}}{)}{null}}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{{Iterator}}{<}{?}{>}}{)}{null}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{{Iterator}}{<}{?}{>}}{)}{null}}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{exceptionType}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{ClassUtils}{.}{isAssignable}{(}{{(}{{{Class}}{<}{?}{>}}{)}{null}}{,}{null}{,}{true}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{ClassUtils}{.}{isAssignable}{(}{{(}{{{Class}}{<}{?}{>}}{)}{null}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ClassUtils}{.}{getPackageName}{(}{{(}{{{Class}}{<}{?}{>}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iMap}{=}{{new}{{{HashMap}}{<}{{Object}}{,}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{c}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendWithSeparators}{(}{{(}{{{Iterator}}{<}{?}{>}}{)}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendWithSeparators}{(}{{(}{{{Collection}}{<}{?}{>}}{)}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendAll}{(}{{(}{{{Iterator}}{<}{?}{>}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendAll}{(}{{(}{{{Collection}}{<}{?}{>}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFormattedExceptionMessage}{(}{{{String}}{baseMessage}}{)}{{{}{{return}{{exceptionContext}{.}{getFormattedExceptionMessage}{(}{baseMessage}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFormattedExceptionMessage}{(}{{{String}}{baseMessage}}{)}{{{}{{return}{{exceptionContext}{.}{getFormattedExceptionMessage}{(}{baseMessage}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{c}}}
{AST_ROOT_SC2NF{{{values}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{?}{>}}{{list}{=}{{tok}{.}{getTokenList}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{?}{>}}{{map}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{?}{extends}{{FormatFactory}}}{>}}{registry}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{?}{>}}{registry}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{?}{>}}{registry}}}
{AST_ROOT_SC2NF{{{String}}{{toString}{=}{{ReflectionToStringBuilder}{.}{toStringExclude}{(}{{new}{{TestFixture}}{()}}{,}{{(}{{{Collection}}{<}{{String}}{>}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{toString}{=}{{ReflectionToStringBuilder}{.}{toStringExclude}{(}{{new}{{TestFixture}}{()}}{,}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{object}{,}{null}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{element}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{{this}{.}{comparator}}{.}{compare}{(}{{getMinimum}{()}}{,}{element}{)}}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils.UNESCAPE_CSV}{.}{translate}{(}{value}{,}{writer}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils.ESCAPE_CSV}{.}{translate}{(}{value}{,}{writer}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils.UNESCAPE_JAVA}{.}{translate}{(}{original}{,}{writer}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils.ESCAPE_JAVA}{.}{translate}{(}{original}{,}{writer}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Comparator}}{<}{{T}}{>}}{c}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{initialize}{()}}{;}}{}}}{finally}{{{}{{if}{(}{{execFinally}{!=}{null}}{)}{{{}{{{execFinally}{.}{shutdown}{()}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{execFinally}{=}{exec}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{translators}}{=}{{ArrayUtils}{.}{clone}{(}{translators}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{chars}{,}{index}{,}{DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EXCEPTION_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{collection}{,}{index}{,}{DEFAULT_VALID_INDEX_COLLECTION_EXCEPTION_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{array}{,}{index}{,}{DEFAULT_VALID_INDEX_ARRAY_EXCEPTION_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{values2}{=}{{ArrayUtils}{.}{addAll}{(}{values}{,}{{Integer}{.}{valueOf}{(}{i}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{values2}{=}{{ArrayUtils}{.}{add}{(}{values}{,}{{Integer}{.}{valueOf}{(}{i}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{,}{{new}{{Double}}{(}{value}{)}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{,}{{Long}{.}{valueOf}{(}{value}{)}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{calendar}{.}{getTimeInMillis}{()}}{;}}{{{calendar}{=}{{(}{{Calendar}}{)}{{calendar}{.}{clone}{()}}}}{;}}{{{calendar}{.}{setTimeZone}{(}{mTimeZone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{element}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{{this}{.}{comparator}}{.}{compare}{(}{element}{,}{{this}{.}{maximum}}{)}}{>}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{element}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{{this}{.}{comparator}}{.}{compare}{(}{element}{,}{{this}{.}{minimum}}{)}}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{null}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{chars}{,}{index}{,}{DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{collection}{,}{index}{,}{DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{array}{,}{index}{,}{DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{noNullElements}{(}{iterable}{,}{DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{noNullElements}{(}{array}{,}{DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notBlank}{(}{chars}{,}{DEFAULT_NOT_BLANK_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{chars}{,}{DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{map}{,}{DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{collection}{,}{DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{array}{,}{DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notNull}{(}{object}{,}{DEFAULT_IS_NULL_EX_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{{resolver}{=}{{getVariableResolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{public}{StrSubstitutor}{()}{{{}{{this}{(}{{(}{{{StrLookup}}{<}{?}{>}}{)}{null}}{,}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ESCAPE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{m}{!=}{null}}{&&}{{Modifier}{.}{isPublic}{(}{{m}{.}{getModifiers}{()}}{)}}}{&&}{{!}{{m}{.}{isSynthetic}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{REGISTRY}{.}{get}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CharSequence}}{str}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{suffix}{==}{null}}}{)}{{{}{{return}{{{str}{==}{null}}{&&}{{suffix}{==}{null}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{CharSequenceUtils}{.}{reverse}{(}{str}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{searchStrs}{==}{null}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{smallestIndexOfDiff}{==}{INDEX_NOT_FOUND}}}
{AST_ROOT_SC2NF{{if}{(}{{at}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{{str}{.}{indexOf}{(}{remove}{)}}{==}{INDEX_NOT_FOUND}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{pos}{==}{INDEX_NOT_FOUND}}{||}{{pos}{==}{{(}{{{str}{.}{length}{()}}{-}{{separator}{.}{length}{()}}}{)}}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{==}{INDEX_NOT_FOUND}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{indexOfAnyBut}{(}{cs}{,}{valid}{)}}{==}{INDEX_NOT_FOUND}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isEmpty}{(}{cs}{)}}{||}{{isEmpty}{(}{searchChars}{)}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{indexOfAny}{(}{cs}{,}{{searchChars}{.}{toCharArray}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchStr}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{str}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchChar}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{str}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchChar}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{str}{.}{indexOf}{(}{searchStr}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{str}{.}{indexOf}{(}{searchStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{(}{{start}{!=}{strLen}}{)}}{&&}{{(}{{{stripChars}{.}{indexOf}{(}{{str}{.}{charAt}{(}{start}{)}}{)}}{!=}{INDEX_NOT_FOUND}}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{{new}{{StringBuilder}}{(}{str}{)}}{.}{reverse}{()}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{searchChar}}}
{AST_ROOT_SC2NF{{int}{searchChar}}}
{AST_ROOT_SC2NF{{int}{searchChar}}}
{AST_ROOT_SC2NF{{int}{searchChar}}}
{AST_ROOT_SC2NF{{int}{searchChar}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{parameterTypes}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{parsePatterns}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{parsePatterns}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{strs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{.}{.}{.}{css}}}
{AST_ROOT_SC2NF{{{Boolean}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{boolean}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{delimiters}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{delimiters}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{delimiters}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{delimiters}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{parameterTypes}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{searchStrings}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableFloat}}{(}{STRING_CONSTANT}{)}}{.}{floatValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{compareTransients}{,}{reflectUpToClass}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{isAssignable}{(}{midClass}{,}{superClass}{)}}{&&}{{isAssignable}{(}{genericInterface}{,}{{(}{{Type}}{)}{midClass}}{)}}}}
{AST_ROOT_SC2NF{{{{listeners}{.}{fire}{()}}{.}{propertyChange}{(}{{new}{{PropertyChangeEvent}}{(}{this}{,}{STRING_CONSTANT}{,}{oldValue}{,}{property}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{notNull}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{listeners}{.}{add}{(}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtilsTest}{.}{toArrayPropagatingType}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtils}{.}{toArray}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtilsTest}{.}{<}{{String}}{>}{toArrayPropagatingType}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtils}{.}{<}{{String}}{>}{toArray}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{StringUtils}{.}{indexOfDifference}{(}{{(}{{{String}}{[]}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{results}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{results}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{concatWith}{(}{null}{,}{{(}{{{String}}{[]}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{concat}{(}{{(}{{{String}}{[]}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{parseDate}{(}{dateStr}{,}{{(}{{{String}}{[]}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{DEFAULT_VALID_STATE_EX_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{StringBuilder}}{(}{{{annotationType}{==}{null}}{?}{STRING_CONSTANT}{:}{{annotationType}{.}{getName}{()}}}{)}}{.}{insert}{(}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{.}{toString}{()}}{;}}}
{AST_ROOT_SC2NF{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_4}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{isAssignable}{(}{cls}{,}{toClass}{,}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JavaVersion.JAVA_1_5}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isAssignable}{(}{classArray}{,}{toClassArray}{,}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JavaVersion.JAVA_1_5}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{atLeastJava14}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_4}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{isJavaVersionMatch}{(}{JAVA_SPECIFICATION_VERSION}{,}{versionPrefix}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_3}{)}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{new}{{BigDecimal}}{(}{STRING_CONSTANT}{)}}{,}{{NumberUtils}{.}{createNumber}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_5}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_5}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_5}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_4}{)}}{)}{{{}{{{assertEquals}{(}{message}{,}{expected}{,}{actual}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{static}{{JavaVersion}}{getJavaVersion}{(}{{final}{{String}}{nom}}{)}{{{}{{return}{{get}{(}{nom}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{options}{==}{null}}{)}}{?}{false}{:}{{options}{.}{contains}{(}{option}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{StringUtils}{.}{isNumeric}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{StringUtils}{.}{isAlphanumeric}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{StringUtils}{.}{isAlpha}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{UTC_TIME_ZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{UTC_TIME_ZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{UTC_TIME_ZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{UTC_TIME_ZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Pair}}{<}{{IDKey}}{,}{{IDKey}}{>}}{{swappedPair}{=}{{Pair}{.}{of}{(}{{pair}{.}{getLeftElement}{()}}{,}{{pair}{.}{getRightElement}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Boolean}{.}{valueOf}{(}{{isEquals}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Integer}}{build}{()}{{{}{{return}{{Integer}{.}{valueOf}{(}{{toHashCode}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Integer}{.}{valueOf}{(}{{toComparison}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EqualsBuilder}}{.}{class}}}
{AST_ROOT_SC2NF{{{EqualsBuilder}}{.}{class}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuilder}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toLowerCase}{(}{{cs}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{StringUtils}{.}{subSequence}{(}{cs}{,}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuilder}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toTitleCase}{(}{{cs}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{StringUtils}{.}{subSequence}{(}{cs}{,}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{return}{{{str}{.}{subSequence}{(}{start}{,}{end}{)}}{.}{toString}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{str}{.}{subSequence}{(}{start}{,}{{str}{.}{length}{()}}{)}}{.}{toString}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{set}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{classes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{classes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{toClassArray}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{chars}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{chars}}}
{AST_ROOT_SC2NF{{return}{{types}{.}{toArray}{(}{{new}{{{Type}}{[}}{{types}{.}{size}{()}}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{frames}{.}{toArray}{(}{{new}{{{String}}{[}}{{frames}{.}{size}{()}}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{searchStrs}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{searchStrs}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{searchChars}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{strs}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{(}{{idx}{=}{{CharSequenceUtils}{.}{indexOf}{(}{str}{,}{sub}{,}{idx}{)}}}{)}}{!=}{INDEX_NOT_FOUND}}}
{AST_ROOT_SC2NF{{{tmp}{=}{{CharSequenceUtils}{.}{lastIndexOf}{(}{str}{,}{search}{,}{{str}{.}{length}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tmp}{=}{{CharSequenceUtils}{.}{indexOf}{(}{str}{,}{search}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{searchChars}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{containsAny}{(}{cs}{,}{{CharSequenceUtils}{.}{toCharArray}{(}{searchChars}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{CharSequenceUtils}{.}{regionMatches}{(}{str}{,}{true}{,}{i}{,}{searchStr}{,}{NUMBER_CONSTANT}{,}{len}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{CharSequenceUtils}{.}{indexOf}{(}{seq}{,}{searchSeq}{,}{NUMBER_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{CharSequenceUtils}{.}{indexOf}{(}{seq}{,}{searchChar}{,}{NUMBER_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{seq}{==}{null}}{||}{{searchSeq}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{CharSequenceUtils}{.}{lastIndexOf}{(}{seq}{,}{searchSeq}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{CharSequenceUtils}{.}{lastIndexOf}{(}{seq}{,}{searchSeq}{,}{{seq}{.}{length}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{CharSequenceUtils}{.}{lastIndexOf}{(}{seq}{,}{searchChar}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{CharSequenceUtils}{.}{lastIndexOf}{(}{seq}{,}{searchChar}{,}{{seq}{.}{length}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{seq}{==}{null}}{||}{{searchSeq}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{CharSequenceUtils}{.}{indexOf}{(}{seq}{,}{searchSeq}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{seq}{==}{null}}{||}{{searchSeq}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{CharSequenceUtils}{.}{indexOf}{(}{seq}{,}{searchSeq}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{CharSequenceUtils}{.}{indexOf}{(}{seq}{,}{searchChar}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{CharSequenceUtils}{.}{indexOf}{(}{seq}{,}{searchChar}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{value}{!=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{bool}{.}{booleanValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{Boolean.FALSE}{:}{Boolean.TRUE}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{lastWasGap}{)}{{{}{{{{buf}{[}{{count}{++}}{]}}{=}{ch}}{;}}{{{lastWasGap}{=}{false}}{;}}{}}}{else}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{compareTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{object}{,}{testTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{testTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFieldNames}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionEquals}{(}{lhs}{,}{rhs}{,}{testTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{excludeFieldNames}}{=}{{toNoNullStringArray}{(}{excludeFieldNamesParam}{)}}}{;}}{{{Arrays}{.}{sort}{(}{{this}{.}{excludeFieldNames}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{builder}{=}{{new}{{StringBuilder}}{(}{{{this}{.}{getClass}{()}}{.}{getSimpleName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{chars}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{R}}{getRightElement}{()}{{{}{{return}{right}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{L}}{getLeftElement}{()}{{{}{{return}{left}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Pair}}{<}{{IDKey}}{,}{{IDKey}}{>}}{{swappedPair}{=}{{Pair}{.}{of}{(}{{pair}{.}{getLeft}{()}}{,}{{pair}{.}{getRight}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{R}}{{result}{=}{{getRight}{()}}}{;}}{{{setRightElement}{(}{value}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{R}}{getValue}{()}{{{}{{return}{{getRight}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{{L}}{getKey}{()}{{{}{{return}{{getLeft}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleMethod}{(}{{cls}{.}{getMethod}{(}{methodName}{,}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleConstructor}{(}{{cls}{.}{getConstructor}{(}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{mTimeZone}{,}{mLocale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{mTimeZone}{,}{mLocale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{dateStyle}{,}{timeStyle}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{dateStyle}{,}{timeStyle}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{null}{,}{style}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{null}{,}{style}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{null}{,}{style}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{style}{,}{null}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{style}{,}{null}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{style}{,}{null}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getInstance}{(}{pattern}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getInstance}{(}{pattern}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getInstance}{(}{pattern}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CharSequence}}{{_ellipsis}{=}{{ObjectUtils}{.}{defaultIfNull}{(}{ellipsis}{,}{StringUtils.EMPTY}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{pad}{(}{pads}{,}{padChar}{)}}{.}{concat}{(}{str}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{str}{.}{concat}{(}{{pad}{(}{pads}{,}{padChar}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{inputLength}{==}{NUMBER_CONSTANT}}{&&}{{repeat}{<=}{PAD_LIMIT}}}{)}{{{}{{return}{{pad}{(}{repeat}{,}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{repeat}{(}{padChar}{,}{pads}{)}}{.}{concat}{(}{str}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{str}{.}{concat}{(}{{repeat}{(}{padChar}{,}{pads}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Locale.GERMANY}{,}{{format1}{.}{getLocale}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Integer}}{{count}{=}{{eventCounts}{.}{get}{(}{eventName}{)}}}{;}}{{return}{{{count}{==}{null}}{?}{NUMBER_CONSTANT}{:}{{count}{.}{intValue}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{R}}{{result}{=}{{getRight}{()}}}{;}}{{{setRight}{(}{value}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isSet}{(}{OPTION.semiColonRequired}{)}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{if}{(}{{isSet}{(}{OPTION.errorIfNoSemiColon}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{int}{{delimLen}{=}{{{delimiters}{==}{null}}{?}{{-}{NUMBER_CONSTANT}}{:}{delimiters.length}}}{;}}}
{AST_ROOT_SC2NF{{@}{Before}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullPointerException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullPointerException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{timeToLive}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{StringUtils}{.}{isEmpty}{(}{str}{)}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Character}{.}{valueOf}{(}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldUtils}{.}{writeField}{(}{field}{,}{publicChild}{,}{{Integer}{.}{valueOf}{(}{Integer.MAX_VALUE}{)}}{)}}{;}}{}}}{{catch}{(}{{{IllegalAccessException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{Integer}}{{val}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{val}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendln}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iInteger}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{value}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{map}{.}{put}{(}{STRING_CONSTANT}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{map}{.}{put}{(}{STRING_CONSTANT}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{coll}{.}{add}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{coll}{.}{add}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{sb1}{.}{equals}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{numA}{.}{equals}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableInt}}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{intValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{f1}{.}{equals}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{i}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{i}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DurationFormatUtils.Token}}{{numToken}{=}{{new}{{DurationFormatUtils.Token}}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{map}{.}{put}{(}{STRING_CONSTANT}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Integer}}{getValue}{()}{{{}{{return}{{Integer}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{Long}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{Long}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{Long}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{mutNumA}{.}{equals}{(}{{Long}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableLong}}{(}{{Long}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{longValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Long}}{getValue}{()}{{{}{{return}{{Long}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Short}}{getValue}{()}{{{}{{return}{{Short}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{Short}{.}{valueOf}{(}{{(}{short}{)}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{Short}{.}{valueOf}{(}{{(}{short}{)}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{,}{{Double}{.}{valueOf}{(}{value}{)}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{{Float}}{getValue}{()}{{{}{{return}{{Float}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getValue}{()}{{{}{{return}{{Double}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldUtils}{.}{writeField}{(}{field}{,}{publicChild}{,}{{Double}{.}{valueOf}{(}{Double.MAX_VALUE}{)}}{)}}{;}}{}}}{{catch}{(}{{{IllegalAccessException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{args}{=}{{new}{{{Object}}{[]}}{{{}{{Double}{.}{valueOf}{(}{STRING_CONSTANT}{)}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{args}{=}{{new}{{{Object}}{[]}}{{{}{STRING_CONSTANT}{,}{{cal}{.}{getTime}{()}}{,}{{Double}{.}{valueOf}{(}{STRING_CONSTANT}{)}}{}}}}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{Float}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{Float}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{Float}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{mutNumA}{.}{equals}{(}{{Float}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableFloat}}{(}{{Float}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{floatValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{mutNumA}{.}{equals}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableDouble}}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{doubleValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{{MutableObject}}{<}{{Double}}{>}}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{+}{java6Exception}{+}{STRING_CONSTANT}{+}{sunException}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{splitByWholeSeparatorPreserveAllTokens}{(}{null}{,}{STRING_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{splitByWholeSeparator}{(}{null}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{splitByWholeSeparator}{(}{null}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{split}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{split}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{synchronized}{void}{delete}{()}{{{}{{{listField}{.}{remove}{(}{{Integer}{.}{valueOf}{(}{{random}{.}{nextInt}{(}{N}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{separator}{=}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{ObjectUtils}{.}{toString}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{ObjectUtils}{.}{toString}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{ObjectUtils}{.}{toString}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{value}{)}}}{;}}{{return}{{(}{int}{)}{{(}{{bits}{^}{{bits}{>}{>}{>}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{E}}{constant}}{:}{values}{)}{{{}{{{total}{|=}{{NUMBER_CONSTANT}{<}{<}{{constant}{.}{ordinal}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{remainder}{=}{{len}{-}{pos}}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{super}{.}{equals}{(}{o}{)}}{&&}{{b}{==}{rhs.b}}}{;}}}
{AST_ROOT_SC2NF{{return}{{a}{==}{rhs.a}}{;}}}
{AST_ROOT_SC2NF{{{root}{=}{{{root}{==}{null}}{?}{th}{:}{root}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{super}{.}{equals}{(}{o}{)}}{&&}{{b}{==}{rhs.b}}}{;}}}
{AST_ROOT_SC2NF{{return}{{a}{==}{rhs.a}}{;}}}
{AST_ROOT_SC2NF{{{dev}{=}{{{observed}{[}{i}{]}}{-}{{expected}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{{pos}{+}{i}}{>=}{len}}{||}{{{chars}{[}{{pos}{+}{i}}{]}}{!=}{{chars}{[}{{quoteStart}{+}{i}}{]}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{options}{==}{null}}{?}{false}{:}{{options}{.}{contains}{(}{option}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{result}{!=}{null}}{?}{result}{:}{value}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{initializer}{!=}{null}}{?}{{initializer}{.}{get}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{schedFuture}{!=}{null}}{?}{schedFuture}{:}{{super}{.}{startTimer}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{d2}{=}{{{tmodd1}{==}{NUMBER_CONSTANT}}{?}{d1}{:}{{greatestCommonDivisor}{(}{tmodd1}{,}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{long}{{m}{=}{{{(}{long}{)}{x}}{*}{{(}{long}{)}{y}}}}{;}}}
{AST_ROOT_SC2NF{{long}{{m}{=}{{{(}{long}{)}{x}}{*}{{(}{long}{)}{y}}}}{;}}}
{AST_ROOT_SC2NF{{{power}{%}{NUMBER_CONSTANT}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{double}{)}{numerator}}{/}{{(}{double}{)}{denominator}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{float}{)}{numerator}}{/}{{(}{float}{)}{denominator}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{obj}{==}{null}}{?}{NUMBER_CONSTANT}{:}{{obj}{.}{hashCode}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{object1}{==}{null}}{||}{{object2}{==}{null}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{bf_zero}{.}{setShortValue}{(}{{(}{short}{)}{NUMBER_CONSTANT}}{,}{{(}{short}{)}{j}}{)}}{,}{{(}{short}{)}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{prefix}{==}{null}}}{)}{{{}{{return}{{{str}{==}{null}}{&&}{{prefix}{==}{null}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{allStringsNull}{||}{{{longestStrLen}{==}{NUMBER_CONSTANT}}{&&}{{!}{anyStringNull}}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{length}{>=}{{str}{.}{length}{()}}}{||}{{length}{<}{{{middle}{.}{length}{()}}{+}{NUMBER_CONSTANT}}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{noOfItems}{=}{{endIndex}{-}{startIndex}}}{;}}}
{AST_ROOT_SC2NF{{int}{{noOfItems}{=}{{endIndex}{-}{startIndex}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{match}{||}{{preserveAllTokens}{&&}{lastMatch}}}{)}{{{}{{{list}{.}{add}{(}{{str}{.}{substring}{(}{start}{,}{i}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{match}{||}{{preserveAllTokens}{&&}{lastMatch}}}{)}{{{}{{{list}{.}{add}{(}{{str}{.}{substring}{(}{start}{,}{i}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{separator}{==}{null}}{||}{{EMPTY}{.}{equals}{(}{separator}{)}}}{)}{{{}{{return}{{splitWorker}{(}{str}{,}{null}{,}{max}{,}{preserveAllTokens}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{pos}{<}{{strLen}{-}{closeLen}}}}
{AST_ROOT_SC2NF{{if}{(}{{{pos}{==}{INDEX_NOT_FOUND}}{||}{{pos}{==}{{{str}{.}{length}{()}}{-}{{separator}{.}{length}{()}}}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{.}{length}{()}}{<=}{{pos}{+}{len}}}{)}{{{}{{return}{{str}{.}{substring}{(}{pos}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{ret}{==}{Integer.MAX_VALUE}}{?}{INDEX_NOT_FOUND}{:}{ret}}{;}}}
{AST_ROOT_SC2NF{{startPos}{>}{{{str}{.}{length}{()}}{-}{{searchStr}{.}{length}{()}}}}}
{AST_ROOT_SC2NF{{int}{{endLimit}{=}{{{{str}{.}{length}{()}}{-}{{searchStr}{.}{length}{()}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{int}{{delimLen}{=}{{{delimiters}{==}{null}}{?}{{-}{NUMBER_CONSTANT}}{:}{delimiters.length}}}{;}}}
{AST_ROOT_SC2NF{{int}{{delimLen}{=}{{{delimiters}{==}{null}}{?}{{-}{NUMBER_CONSTANT}}{:}{delimiters.length}}}{;}}}
{AST_ROOT_SC2NF{{{inputLineLength}{-}{offset}}{>}{wrapLength}}}
{AST_ROOT_SC2NF{{return}{{{super}{.}{equals}{(}{o}{)}}{&&}{{b}{==}{rhs.b}}}{;}}}
{AST_ROOT_SC2NF{{return}{{a}{==}{rhs.a}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{{!}{{toClass}{.}{isPrimitive}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{boolean}{{b}{=}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}}{;}}{{{t}{+=}{{b}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{coll}{==}{null}}{||}{{coll}{.}{isEmpty}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Boolean.TRUE}{,}{{triple}{.}{getRight}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Boolean.FALSE}{,}{{triple}{.}{getRight}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{flag}{==}{{t}{.}{isDaemon}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{triple2}{=}{{Triple}{.}{of}{(}{null}{,}{STRING_CONSTANT}{,}{{Long}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{original}{=}{{new}{{{Object}}{[]}}{{{}{Boolean.TRUE}{,}{Boolean.FALSE}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{fdf}{=}{{getInstance}{(}{STRING_CONSTANT}{,}{NEW_YORK}{,}{Locale.US}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Locale}}{getLocale}{()}{{{}{{return}{mLocale}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{mTimeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getPattern}{()}{{{}{{return}{mPattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Locale}}{getLocale}{()}{{{}{{return}{locale}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{timeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getPattern}{()}{{{}{{return}{pattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateFormatSymbols}}{{symbols}{=}{{new}{{DateFormatSymbols}}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{emptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{str}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{||}{{deepEmpty}{(}{set}{)}}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{cls}{!=}{null}}{)}{{{}{{return}{cls}{;}}{}}}{else}{{{}{{throw}{cnfe}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Locale}}{getLocale}{()}{{{}{{return}{locale}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{timeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{getPattern}{()}{{{}{{return}{pattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Locale}}{getLocale}{()}{{{}{{return}{mLocale}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{mTimeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{getPattern}{()}{{{}{{return}{mPattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{Runnable}}{()}{{{}{{{@}{Override}}{public}{void}{run}{()}{{{}{{{endOfPeriod}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Object}}{getValue}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Locale}}{getLocale}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{getLocale}{(}{)}{;}}}
{AST_ROOT_SC2NF{{@}{Before}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{exceptionContext}{=}{{new}{{DefaultExceptionContext}}{()}}}{;}}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{{new}{{BitField}}{(}{NUMBER_CONSTANT}{)}}{.}{isSet}{(}{clearedBit}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{hc2a}{!=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{sb.buffer.length}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{return}{{{b}{*}{NUMBER_CONSTANT}}{+}{{super}{.}{hashCode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{parseDateStrictly}{(}{str}{,}{null}{,}{parsePatterns}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{parseDate}{(}{str}{,}{null}{,}{parsePatterns}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateParser}}{{parser}{=}{{getInstance}{(}{STRING_CONSTANT}{,}{GMT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getInstance}{(}{{FormatCache}{.}{getPatternForStyle}{(}{{Integer}{.}{valueOf}{(}{dateStyle}{)}}{,}{null}{,}{locale}{)}}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateFormatSymbols}}{{symbols}{=}{{DateFormatSymbols}{.}{getInstance}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{eraBC}{&&}{{format}{.}{equals}{(}{SHORT_FORMAT}{)}}{&&}{{locale}{.}{equals}{(}{FastDateParser.JAPANESE_IMPERIAL}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{year}{<}{NUMBER_CONSTANT}}{&&}{{locale}{.}{equals}{(}{FastDateParser.JAPANESE_IMPERIAL}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{locale}{.}{toString}{()}}{+}{STRING_CONSTANT}{+}{formattedDate}{+}{STRING_CONSTANT}}{,}{expectedTime}{,}{actualTime}{)}}{;}}}
{AST_ROOT_SC2NF{{{Strategy}}{{strategy}{=}{{cache}{.}{get}{(}{{Integer}{.}{valueOf}{(}{field}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getInstance}{(}{{FormatCache}{.}{getPatternForStyle}{(}{{Integer}{.}{valueOf}{(}{dateStyle}{)}}{,}{null}{,}{locale}{)}}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Integer}{.}{valueOf}{(}{{++}{initializeCalls}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Integer}{.}{valueOf}{(}{REPEAT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Integer}{.}{valueOf}{(}{initializeCalls}{)}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{value}}{instanceof}{{StringBuilder}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{expected}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{result}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{nibble}}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{nibble}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{HashMap}}{<}{{Boolean}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Boolean}}{,}{{MutableInt}}{>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{osName}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{javaVersion}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{output}{=}{{(}{{int}{[]}}{)}{{ArrayUtils}{.}{removeAll}{(}{array}{,}{toRemove}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{boolean}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{double}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{float}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{long}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{char}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{int}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{short}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{byte}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}{;}}}
{AST_ROOT_SC2NF{{result}{=}{{(}{{{T}}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{printer}{.}{format}{(}{millis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{newCalendar}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{WHITESPACE_PATTERN}{.}{matcher}{(}{{trim}{(}{str}{)}}{)}}{.}{replaceAll}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{WHITESPACE_PATTERN}{.}{matcher}{(}{{trim}{(}{str}{)}}{)}}{.}{replaceAll}{(}{SPACE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{padStr}{)}}{)}{{{}{{{padStr}{=}{SPACE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{padStr}{)}}{)}{{{}{{{padStr}{=}{SPACE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{padStr}{)}}{)}{{{}{{{padStr}{=}{SPACE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{write}{(}{{toUtf16Escape}{(}{codepoint}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{double}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{double}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{double}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{double}{value}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Boolean}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Float}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Double}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Byte}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Short}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Integer}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Long}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Character}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Boolean}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Float}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Double}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Byte}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Character}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Short}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Integer}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Long}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{String}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{MutableByte}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{byte}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{byte}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{byte}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{byte}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{char}{charAt}{(}{{final}{int}{index}}{)}{{{}{{return}{{seq}{.}{charAt}{(}{index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CustomCharSequence}{(}{{final}{{CharSequence}}{seq}}{)}{{{}{{{{this}{.}{seq}}{=}{seq}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{final}{{CharSequenceTranslator}}{.}{.}{.}{translators}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{input}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{char}{charAt}{(}{{final}{int}{arg0}}{)}{{{}{{return}{{value}{.}{charAt}{(}{arg0}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{int}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{int}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{msg}}}
{AST_ROOT_SC2NF{{{DateParser}}{getInstance}{(}{{final}{{String}}{format}}{)}{{{}{{return}{{getInstance}{(}{format}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{flag}}}
{AST_ROOT_SC2NF{{final}{{BasicThreadFactory}}{factory}}}
{AST_ROOT_SC2NF{{final}{{{Callable}}{<}{{T}}{>}}{call}}}
{AST_ROOT_SC2NF{{final}{{{Callable}}{<}{{T}}{>}}{call}}}
{AST_ROOT_SC2NF{{{DatePrinter}}{getInstance}{(}{{final}{{String}}{format}}{)}{{{}{{return}{{getInstance}{(}{format}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Formattable}}{formattable}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{?}{>}}{coll}}}
{AST_ROOT_SC2NF{{final}{{String}}{language}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{str}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{str}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{str}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{final}{{String}}{msg}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{boolean}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{boolean}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{boolean}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{boolean}{bool}}}
{AST_ROOT_SC2NF{{final}{boolean}{bool}}}
{AST_ROOT_SC2NF{{final}{boolean}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{boolean}{bool}}}
{AST_ROOT_SC2NF{{final}{boolean}{bool}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{value}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj2}}}
{AST_ROOT_SC2NF{{final}{{Object}}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{format}}}
{AST_ROOT_SC2NF{{final}{long}{durationMillis}}}
{AST_ROOT_SC2NF{{final}{long}{durationMillis}}}
{AST_ROOT_SC2NF{{final}{boolean}{expression}}}
{AST_ROOT_SC2NF{{final}{{T}}{iterable}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{T}}{chars}}}
{AST_ROOT_SC2NF{{final}{{T}}{chars}}}
{AST_ROOT_SC2NF{{final}{{T}}{map}}}
{AST_ROOT_SC2NF{{final}{{T}}{collection}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{T}}{object}}}
{AST_ROOT_SC2NF{{final}{boolean}{expression}}}
{AST_ROOT_SC2NF{{final}{int}{nibble}}}
{AST_ROOT_SC2NF{{final}{int}{nibble}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{final}{char}{hexDigit}}}
{AST_ROOT_SC2NF{{final}{char}{hexDigit}}}
{AST_ROOT_SC2NF{{final}{char}{hexDigit}}}
{AST_ROOT_SC2NF{{final}{char}{hexDigit}}}
{AST_ROOT_SC2NF{{final}{{ObjectStreamClass}}{desc}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{objectData}}}
{AST_ROOT_SC2NF{{final}{{InputStream}}{inputStream}}}
{AST_ROOT_SC2NF{{final}{{Serializable}}{obj}}}
{AST_ROOT_SC2NF{{final}{{T}}{object}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{Character}}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{Character}}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{Character}}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{Character}}{ch}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{excludeFieldNamesParam}}}
{AST_ROOT_SC2NF{{final}{boolean}{appendTransients}}}
{AST_ROOT_SC2NF{{final}{boolean}{appendStatics}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{Field}}{field}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{final}{{Field}}{field}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{String}}{>}}{collection}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{R}}{right}}}
{AST_ROOT_SC2NF{{final}{{M}}{middle}}}
{AST_ROOT_SC2NF{{final}{{L}}{left}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{cancel}{(}{{final}{boolean}{mayInterruptIfRunning}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{T}}{value}}}
{AST_ROOT_SC2NF{{final}{{T}}{value}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentInitializer}}{<}{{T}}{>}}{initializer}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentInitializer}}{<}{{T}}{>}}{initializer}}}
{AST_ROOT_SC2NF{{final}{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{ex}}}
{AST_ROOT_SC2NF{{final}{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{final}{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{final}{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{final}{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{final}{{OPTION}}{option}}}
{AST_ROOT_SC2NF{{final}{{OPTION}}{.}{.}{.}{options}}}
{AST_ROOT_SC2NF{{final}{{JavaVersion}}{requiredVersion}}}
{AST_ROOT_SC2NF{{final}{{String}}{property}}}
{AST_ROOT_SC2NF{{final}{{String}}{osNamePrefix}}}
{AST_ROOT_SC2NF{{final}{{String}}{versionPrefix}}}
{AST_ROOT_SC2NF{{CollectionHolder}{(}{{final}{{T}}{collection}}{)}{{{}{{{{this}{.}{collection}}{=}{collection}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{replaceTemplate}}}
{AST_ROOT_SC2NF{{public}{void}{testTwo}{(}{{final}{{ChildInterface}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOne}{(}{{final}{{GrandParentObject}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOne}{(}{{final}{{Object}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOne}{(}{{final}{{ParentObject}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTwo}{(}{{final}{{GrandParentObject}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTwo}{(}{{final}{{Object}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{final}{{{{Class}}{<}{?}{>}}{[]}}{c}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setValue}{(}{{final}{{Object}}{value}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{oneParameter}{(}{{final}{{String}}{s}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{final}{{Object}}{o}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{final}{{String}}{s}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{final}{double}{d}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{final}{{Integer}}{i}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{final}{int}{i}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{bar}{(}{{final}{{Object}}{o}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{bar}{(}{{final}{{String}}{s}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{bar}{(}{{final}{{Integer}}{i}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{canonicalName}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{String}}{canonicalName}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{{String}}{className}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{.}{.}{.}{classes}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{.}{.}{.}{classes}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{final}{boolean}{autoboxing}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{classes}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{classNames}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{{Class}}{<}{?}{>}}{>}}{interfacesFound}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{int}{superHashCode}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{short}{value}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{long}{value}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{float}{value}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{double}{value}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{char}{value}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{byte}{value}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{boolean}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{summaryObjectEndText}}}
{AST_ROOT_SC2NF{{final}{{String}}{summaryObjectStartText}}}
{AST_ROOT_SC2NF{{final}{{String}}{sizeEndText}}}
{AST_ROOT_SC2NF{{final}{{String}}{sizeStartText}}}
{AST_ROOT_SC2NF{{final}{{String}}{nullText}}}
{AST_ROOT_SC2NF{{final}{boolean}{fieldSeparatorAtEnd}}}
{AST_ROOT_SC2NF{{final}{boolean}{fieldSeparatorAtStart}}}
{AST_ROOT_SC2NF{{final}{{String}}{fieldSeparator}}}
{AST_ROOT_SC2NF{{final}{{String}}{fieldNameValueSeparator}}}
{AST_ROOT_SC2NF{{final}{{String}}{contentEnd}}}
{AST_ROOT_SC2NF{{final}{{String}}{contentStart}}}
{AST_ROOT_SC2NF{{final}{{String}}{arraySeparator}}}
{AST_ROOT_SC2NF{{final}{{String}}{arrayEnd}}}
{AST_ROOT_SC2NF{{final}{{String}}{arrayStart}}}
{AST_ROOT_SC2NF{{final}{boolean}{arrayContentDetail}}}
{AST_ROOT_SC2NF{{final}{boolean}{defaultFullDetail}}}
{AST_ROOT_SC2NF{{final}{boolean}{useFieldNames}}}
{AST_ROOT_SC2NF{{final}{boolean}{useIdentityHashCode}}}
{AST_ROOT_SC2NF{{final}{boolean}{useShortClassName}}}
{AST_ROOT_SC2NF{{final}{boolean}{useClassName}}}
{AST_ROOT_SC2NF{{final}{{String}}{format}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{{Pair}}{<}{{L}}{,}{{R}}{>}}{other}}}
{AST_ROOT_SC2NF{{void}{warn}{(}{{final}{{String}}{msg}}{)}{{{}{{{System.err}{.}{println}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{BitSet}}{coll}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Integer}}{>}}{coll}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{equals}{(}{{final}{{Object}}{obj}}{)}{{{}{{return}{{EqualsBuilder}{.}{reflectionEquals}{(}{this}{,}{obj}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setObjectReference}{(}{{final}{{TestObjectReference}}{reference}}{)}{{{}{{{{this}{.}{reference}}{=}{reference}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestObjectReference}{(}{{final}{int}{one}}{)}{{{}{{{{this}{.}{one}}{=}{{new}{{TestObject}}{(}{one}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestBCanEqualA}{(}{{final}{int}{b}}{)}{{{}{{{{this}{.}{b}}{=}{b}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestACanEqualB}{(}{{final}{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{public}{void}{setT}{(}{{final}{int}{t}}{)}{{{}{{{{this}{.}{t}}{=}{t}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setB}{(}{{final}{int}{b}}{)}{{{}{{{{this}{.}{b}}{=}{b}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{void}{setA}{(}{{final}{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestObject}{(}{{final}{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{boolean}{enableSubstitutionInVariables}}}
{AST_ROOT_SC2NF{{final}{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{final}{{String}}{suffix}}}
{AST_ROOT_SC2NF{{final}{char}{suffix}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{suffixMatcher}}}
{AST_ROOT_SC2NF{{final}{{String}}{prefix}}}
{AST_ROOT_SC2NF{{final}{char}{prefix}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{prefixMatcher}}}
{AST_ROOT_SC2NF{{final}{char}{escapeCharacter}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{source}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{source}}}
{AST_ROOT_SC2NF{{final}{{Object}}{source}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{source}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{source}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{source}}}
{AST_ROOT_SC2NF{{final}{{String}}{source}}}
{AST_ROOT_SC2NF{{final}{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{V}}{>}}{valueMap}}}
{AST_ROOT_SC2NF{{final}{{Object}}{source}}}
{AST_ROOT_SC2NF{{final}{boolean}{isEquals}}}
{AST_ROOT_SC2NF{{final}{boolean}{superEquals}}}
{AST_ROOT_SC2NF{{final}{{String}}{toString}}}
{AST_ROOT_SC2NF{{final}{{String}}{superToString}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{short}{value}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{long}{value}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{float}{value}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{double}{value}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{char}{value}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{byte}{value}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{boolean}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{style}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{float}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{float}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{float}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{float}{value}}}
{AST_ROOT_SC2NF{{final}{int}{limit}}}
{AST_ROOT_SC2NF{{final}{{JavaVersion}}{requiredVersion}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{set}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{setStrs}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Date}}{parse}{(}{{final}{{String}}{source}}{)}{throws}{{ParseException}}{{{}{{return}{{parser}{.}{parse}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{final}{{Date}}{date}}}
{AST_ROOT_SC2NF{{final}{long}{millis}}}
{AST_ROOT_SC2NF{{final}{int}{style}}}
{AST_ROOT_SC2NF{{final}{int}{style}}}
{AST_ROOT_SC2NF{{final}{{String}}{pattern}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{cbuf}}}
{AST_ROOT_SC2NF{{final}{int}{c}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{mark}{(}{{final}{int}{readAheadLimit}}{)}{{{}{{{mark}{=}{pos}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{final}{int}{startIndex}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{other}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{other}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{int}{length}}}
{AST_ROOT_SC2NF{{final}{int}{length}}}
{AST_ROOT_SC2NF{{final}{int}{length}}}
{AST_ROOT_SC2NF{{final}{int}{startIndex}}}
{AST_ROOT_SC2NF{{final}{int}{start}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{int}{startIndex}}}
{AST_ROOT_SC2NF{{final}{boolean}{value}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{final}{char}{separator}}}
{AST_ROOT_SC2NF{{final}{{String}}{separator}}}
{AST_ROOT_SC2NF{{final}{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{?}{>}}{iterable}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{?}{>}}{iterable}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{final}{double}{value}}}
{AST_ROOT_SC2NF{{final}{float}{value}}}
{AST_ROOT_SC2NF{{final}{long}{value}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{boolean}{value}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{chars}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{str}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{str}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{double}{value}}}
{AST_ROOT_SC2NF{{final}{float}{value}}}
{AST_ROOT_SC2NF{{final}{long}{value}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{boolean}{value}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{chars}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{str}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{str}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{seq}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{int}{startIndex}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{final}{int}{capacity}}}
{AST_ROOT_SC2NF{{final}{int}{length}}}
{AST_ROOT_SC2NF{{final}{{String}}{newLine}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{private}{void}{readObject}{(}{{final}{{ObjectInputStream}}{in}}{)}{throws}{{ClassNotFoundException}}{{{}{{throw}{{new}{{ClassNotFoundException}}{(}{SerializationUtilsTest.CLASS_NOT_FOUND_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{void}{write}{(}{{final}{int}{arg0}}{)}{throws}{{IOException}}{{{}{{throw}{{new}{{IOException}}{(}{SERIALIZE_IO_EXCEPTION_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{baseMessage}}}
{AST_ROOT_SC2NF{{final}{{String}}{label}}}
{AST_ROOT_SC2NF{{final}{{String}}{label}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{final}{{String}}{message}}}
{AST_ROOT_SC2NF{{final}{{MutableShort}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{short}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{short}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{short}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{short}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{Field}}{field}}}
{AST_ROOT_SC2NF{{final}{{String}}{languageCode}}}
{AST_ROOT_SC2NF{{final}{{String}}{countryCode}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{final}{{String}}{baseMessage}}}
{AST_ROOT_SC2NF{{final}{{String}}{label}}}
{AST_ROOT_SC2NF{{final}{{String}}{label}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{final}{{String}}{message}}}
{AST_ROOT_SC2NF{{final}{{ObjectInputStream}}{objectInputStream}}}
{AST_ROOT_SC2NF{{final}{{ObjectOutputStream}}{objectOutputStream}}}
{AST_ROOT_SC2NF{{final}{{L}}{listener}}}
{AST_ROOT_SC2NF{{final}{{L}}{listener}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{L}}{>}}{listenerInterface}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{T}}{>}}{listenerInterface}}}
{AST_ROOT_SC2NF{{protected}{{String}}{toUtf16Escape}{(}{{final}{int}{codepoint}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{hex}{(}{codepoint}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{public}{NestableException}{(}{{final}{{Throwable}}{t}}{)}{{{}{{super}{(}{t}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setCause}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionWithCause}{(}{{final}{{Throwable}}{cause}}{)}{{{}{``;}}{super}{{{setCause}{(}{cause}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{String}}{[]}}{eventTypes}}}
{AST_ROOT_SC2NF{{void}{warn}{(}{{final}{{String}}{msg}}{)}{{{}{{{System.err}{.}{println}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertSupportedEncoding}{(}{{final}{{String}}{name}}{)}{{{}{{{assertTrue}{(}{{STRING_CONSTANT}{+}{name}}{,}{{CharEncoding}{.}{isSupported}{(}{name}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AClass}{(}{{final}{{{AAClass}}{<}{{String}}{>}}{enclosingInstance}}{)}{{{}{{enclosingInstance}{.}{super}{(}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InspectingClient}{(}{{final}{{TestFixture}}{testFixture}}{)}{{{}{{{{this}{.}{testFixture}}{=}{testFixture}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MutatingClient}{(}{{final}{{TestFixture}}{testFixture}}{)}{{{}{{{{this}{.}{testFixture}}{=}{testFixture}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{String}}{[]}}{strings}}}
{AST_ROOT_SC2NF{{final}{{MutableBoolean}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{value}}}
{AST_ROOT_SC2NF{{final}{boolean}{value}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{value}}}
{AST_ROOT_SC2NF{{final}{boolean}{value}}}
{AST_ROOT_SC2NF{{final}{{CharRange}}{r}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{CharRange}}{range}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{boolean}{negated}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{th}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{th}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{t}}}
{AST_ROOT_SC2NF{{final}{{String}}{stackTrace}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{final}{{StrTokenizer}}{tokenizer}}}
{AST_ROOT_SC2NF{{final}{{StrTokenizer}}{tokenizer}}}
{AST_ROOT_SC2NF{{final}{{String}}{data}}}
{AST_ROOT_SC2NF{{final}{{StrTokenizer}}{tokenizer}}}
{AST_ROOT_SC2NF{{final}{int}{loopCount}}}
{AST_ROOT_SC2NF{{final}{int}{loopCount}}}
{AST_ROOT_SC2NF{{final}{int}{loopCount}}}
{AST_ROOT_SC2NF{{public}{static}{void}{main}{(}{{final}{{{String}}{[]}}{args}}{)}{{{}{{{{new}{{CharUtilsPerfRun}}{()}}{.}{run}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{long}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{operand}}}
{AST_ROOT_SC2NF{{final}{long}{operand}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{long}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{long}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{T}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Object}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{_value}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{items}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{items}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{objects}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{final}{int}{iValue}}{)}{{{}{{return}{{iValue}{%}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{final}{int}{iValue}}{)}{{{}{{return}{{iValue}{%}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{final}{int}{iValue}}{)}{{{}{{return}{{iValue}{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{int}{modify}{(}{{final}{int}{iValue}}{)}{{{}{{return}{iValue}{;}}{}}}}}
{AST_ROOT_SC2NF{{NumberStrategy}{(}{{final}{int}{field}}{)}{{{}{{{{this}{.}{field}}{=}{field}}{;}}{}}}}}
{AST_ROOT_SC2NF{{CopyQuotedStrategy}{(}{{final}{{String}}{formatField}}{)}{{{}{{{{this}{.}{formatField}}{=}{formatField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{field}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{definingCalendar}}}
{AST_ROOT_SC2NF{{final}{int}{twoDigitYear}}}
{AST_ROOT_SC2NF{{final}{{String}}{source}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Object}}{parseObject}{(}{{final}{{String}}{source}}{)}{throws}{{ParseException}}{{{}{{return}{{parse}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{ObjectInputStream}}{in}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{byte}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{byte}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{mask}}}
{AST_ROOT_SC2NF{{final}{{Annotation}}{a}}}
{AST_ROOT_SC2NF{{final}{{{java.lang.Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{String}}{formattedDate}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{boolean}{ignoreEmptyTokens}}}
{AST_ROOT_SC2NF{{final}{boolean}{emptyAsNull}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{trimmer}}}
{AST_ROOT_SC2NF{{final}{char}{ignored}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{ignored}}}
{AST_ROOT_SC2NF{{final}{char}{quote}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{quote}}}
{AST_ROOT_SC2NF{{final}{{String}}{delim}}}
{AST_ROOT_SC2NF{{final}{char}{delim}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{delim}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{list}}}
{AST_ROOT_SC2NF{{final}{{String}}{obj}}}
{AST_ROOT_SC2NF{{final}{{String}}{obj}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{final}{int}{codepoint}}}
{AST_ROOT_SC2NF{{CollectionHolder}{(}{{final}{{T}}{collection}}{)}{{{}{{{{this}{.}{collection}}{=}{collection}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{T}}{value}}}
{AST_ROOT_SC2NF{{final}{{T}}{value}}}
{AST_ROOT_SC2NF{{final}{{{CharSequence}}{[]}}{.}{.}{.}{lookup}}}
{AST_ROOT_SC2NF{{final}{{R}}{value}}}
{AST_ROOT_SC2NF{{final}{int}{unit}}}
{AST_ROOT_SC2NF{{final}{{Date}}{date}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{void}{setA}{(}{{final}{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestObject}{(}{{final}{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{R}}{value}}}
{AST_ROOT_SC2NF{{final}{{R}}{right}}}
{AST_ROOT_SC2NF{{final}{{L}}{left}}}
{AST_ROOT_SC2NF{{final}{{String}}{toString}}}
{AST_ROOT_SC2NF{{final}{{String}}{toString}}}
{AST_ROOT_SC2NF{{final}{{String}}{toString}}}
{AST_ROOT_SC2NF{{final}{{Type}}{type}}}
{AST_ROOT_SC2NF{{final}{{Type}}{type}}}
{AST_ROOT_SC2NF{{final}{{ParameterizedType}}{parameterizedType}}}
{AST_ROOT_SC2NF{{final}{{WildcardType}}{wildcardType}}}
{AST_ROOT_SC2NF{{final}{{WildcardType}}{wildcardType}}}
{AST_ROOT_SC2NF{{final}{{{TypeVariable}}{<}{?}{>}}{typeVariable}}}
{AST_ROOT_SC2NF{{final}{{{Type}}{[]}}{bounds}}}
{AST_ROOT_SC2NF{{final}{{ParameterizedType}}{type}}}
{AST_ROOT_SC2NF{{c}{=}{{new}{{Comparable}}{()}{{{}{{{@}{Override}}{public}{int}{compareTo}{(}{{final}{{Object}}{other}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{final}{{{Constructor}}{<}{{T}}{>}}{ctor}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{char}{.}{.}{.}{delimiters}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{CharSequenceTranslator}}{.}{.}{.}{translators}}}
{AST_ROOT_SC2NF{{final}{{{String}}{[]}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{final}{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{String}}{val}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{CharMatcher}{(}{{final}{char}{ch}}{)}{{{}{``;}}{super}{{{{this}{.}{ch}}{=}{ch}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{char}{chars}{[]}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{chars}}}
{AST_ROOT_SC2NF{{final}{char}{.}{.}{.}{chars}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{ExecutorService}}{exec}}}
{AST_ROOT_SC2NF{{final}{{String}}{format}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{{Range}}{<}{{T}}{>}}{other}}}
{AST_ROOT_SC2NF{{final}{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{final}{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{final}{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{final}{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{final}{{T}}{element}}}
{AST_ROOT_SC2NF{{final}{{T}}{element}}}
{AST_ROOT_SC2NF{{final}{{T}}{element}}}
{AST_ROOT_SC2NF{{final}{{T}}{element}}}
{AST_ROOT_SC2NF{{final}{{T}}{element}}}
{AST_ROOT_SC2NF{{final}{{T}}{element}}}
{AST_ROOT_SC2NF{{final}{{T}}{element}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{int}{threshold}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{strs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{.}{.}{.}{css}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{int}{size}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{elements}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{seq}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{strs}}}
{AST_ROOT_SC2NF{{final}{{String}}{stripChars}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{String}}{str}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{String}}{format}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{ExecutorService}}{exec}}}
{AST_ROOT_SC2NF{{final}{{ExecutorService}}{execDestroy}}}
{AST_ROOT_SC2NF{{final}{{ExecutorService}}{externalExecutor}}}
{AST_ROOT_SC2NF{{final}{{ExecutorService}}{exec}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{final}{{{{Class}}{<}{?}{>}}{[]}}{c}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{Object}}{o}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{String}}{s}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{double}{d}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{Integer}}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{int}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{SimpleReflectionTestFixture}{(}{{final}{{Object}}{o}}{)}{{{}{{{{this}{.}{o}}{=}{o}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{?}{>}}{coll}}}
{AST_ROOT_SC2NF{{final}{{ParsePosition}}{pos}}}
{AST_ROOT_SC2NF{{final}{{String}}{desc}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{String}}{pattern}}}
{AST_ROOT_SC2NF{{final}{{String}}{pattern}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Object}}{.}{.}{.}{keys}}}
{AST_ROOT_SC2NF{{final}{{String}}{pattern}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{int}{superCompareTo}}}
{AST_ROOT_SC2NF{{final}{{Fraction}}{other}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{final}{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{final}{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{final}{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{final}{int}{power}}}
{AST_ROOT_SC2NF{{public}{BackgroundInitializerTestImpl}{(}{{final}{{ExecutorService}}{exec}}{)}{{{}{{super}{(}{exec}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{BackgroundInitializerTestImpl}}{init}}}
{AST_ROOT_SC2NF{{final}{boolean}{fieldSeparatorAtEnd}}}
{AST_ROOT_SC2NF{{final}{boolean}{fieldSeparatorAtStart}}}
{AST_ROOT_SC2NF{{final}{boolean}{arrayContentDetail}}}
{AST_ROOT_SC2NF{{final}{boolean}{defaultFullDetail}}}
{AST_ROOT_SC2NF{{final}{boolean}{useFieldNames}}}
{AST_ROOT_SC2NF{{final}{boolean}{useIdentityHashCode}}}
{AST_ROOT_SC2NF{{final}{boolean}{useShortClassName}}}
{AST_ROOT_SC2NF{{final}{boolean}{useClassName}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{fullDetailRequest}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{final}{{Object}}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{final}{{TestObject}}{rhs}}}
{AST_ROOT_SC2NF{{public}{void}{setA}{(}{{final}{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestObject}{(}{{final}{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertGetClassThrowsClassNotFound}{(}{{final}{{String}}{className}}{)}{throws}{{Exception}}{{{}{{{assertGetClassThrowsException}{(}{className}{,}{{{ClassNotFoundException}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertGetClassThrowsNullPointerException}{(}{{final}{{String}}{className}}{)}{throws}{{Exception}}{{{}{{{assertGetClassThrowsException}{(}{className}{,}{{{NullPointerException}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{public}{void}{removePropertyChangeListener}{(}{{final}{{PropertyChangeListener}}{listener}}{)}{{{}{{{listeners}{.}{removeListener}{(}{listener}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addPropertyChangeListener}{(}{{final}{{PropertyChangeListener}}{listener}}{)}{{{}{{{listeners}{.}{addListener}{(}{listener}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{addVetoableChangeListener}{(}{{final}{{VetoableChangeListener}}{listener}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{property}}}
{AST_ROOT_SC2NF{{public}{void}{addPropertyChangeListener}{(}{{final}{{PropertyChangeListener}}{listener}}{)}{{{}{{throw}{{new}{{RuntimeException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addMultipleEventListener}{(}{{final}{{MultipleEventListener}}{listener}}{)}{{{}{{{listeners}{.}{addListener}{(}{listener}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{eventName}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{L}}{>}}{listenerType}}}
{AST_ROOT_SC2NF{{public}{void}{eventOccurred}{(}{{final}{{PropertyChangeEvent}}{e}}{)}{{{}{{{count}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{PropertyChangeListener}}{()}{{{}{{{@}{Override}}{public}{void}{propertyChange}{(}{{final}{{PropertyChangeEvent}}{e}}{)}{{{}}}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{boolean}{colon}}}
{AST_ROOT_SC2NF{{final}{{NumberRule}}{rule}}}
{AST_ROOT_SC2NF{{final}{{NumberRule}}{rule}}}
{AST_ROOT_SC2NF{{TwoDigitNumberField}{(}{{final}{int}{field}}{)}{{{}{{{mField}{=}{field}}{;}}{}}}}}
{AST_ROOT_SC2NF{{UnpaddedNumberField}{(}{{final}{int}{field}}{)}{{{}{{{mField}{=}{field}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{CharacterLiteral}{(}{{final}{char}{value}}{)}{{{}{{{mValue}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{ObjectInputStream}}{in}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{final}{{Date}}{date}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{c}}}
{AST_ROOT_SC2NF{{final}{long}{millis}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{void}{vetoableChange}{(}{{final}{{PropertyChangeEvent}}{e}}{)}{{{}{{{calledListeners}{.}{add}{(}{this}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{void}{vetoableChange}{(}{{final}{{PropertyChangeEvent}}{e}}{)}{{{}{{{listenerSupport}{.}{removeListener}{(}{this}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{listenerSupport}{.}{addListener}{(}{{new}{{VetoableChangeListener}}{()}{{{}{{{@}{Override}}{public}{void}{vetoableChange}{(}{{final}{{PropertyChangeEvent}}{e}}{)}{{{}}}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{key}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{V}}{>}}{map}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{V}}{>}}{map}}}
{AST_ROOT_SC2NF{{final}{{String}}{baseMessage}}}
{AST_ROOT_SC2NF{{final}{{String}}{label}}}
{AST_ROOT_SC2NF{{final}{{String}}{label}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{String}}{input}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{destClass}}}
{AST_ROOT_SC2NF{{final}{{Member}}{m}}}
{AST_ROOT_SC2NF{{final}{int}{modifiers}}}
{AST_ROOT_SC2NF{{final}{{AccessibleObject}}{o}}}
{AST_ROOT_SC2NF{{final}{{Thread.UncaughtExceptionHandler}}{handler}}}
{AST_ROOT_SC2NF{{final}{int}{prio}}}
{AST_ROOT_SC2NF{{final}{boolean}{f}}}
{AST_ROOT_SC2NF{{final}{{String}}{pattern}}}
{AST_ROOT_SC2NF{{final}{{ThreadFactory}}{factory}}}
{AST_ROOT_SC2NF{{final}{{Thread}}{t}}}
{AST_ROOT_SC2NF{{final}{{Runnable}}{r}}}
{AST_ROOT_SC2NF{{final}{{Builder}}{builder}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{String}}{s}}{:}{strings}{)}{{{}{{if}{(}{{StringUtils}{.}{isNotEmpty}{(}{s}{)}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{total}{=}{{{System}{.}{currentTimeMillis}{()}}{-}{start}}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{c}{=}{{Character}{.}{forDigit}{(}{nibble}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{cloneReset}{()}}{;}}{}}}{{catch}{(}{{final}{{CloneNotSupportedException}}{ex}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{StrTokenizer}}{{tok}{=}{{getTSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{StrTokenizer}}{{tok}{=}{{getTSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{StrTokenizer}}{{tok}{=}{{getCSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{StrTokenizer}}{{tok}{=}{{getCSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{IDKey}}{{idKey}{=}{{(}{{IDKey}}{)}{other}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{InterruptedException}}{iex}}{)}{{{}{{{{Thread}{.}{currentThread}{()}}{.}{interrupt}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Float}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Double}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Byte}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Short}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Long}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Character}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{StringUtils}{.}{endsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{StringUtils}{.}{startsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{{tmp}{=}{s}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{smallestIndexOfDiff}{=}{{indexOfDifference}{(}{strs}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{at}{=}{{indexOfDifference}{(}{str1}{,}{str2}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pads}{=}{{size}{-}{{str}{.}{length}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pads}{=}{{size}{-}{{str}{.}{length}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{{chars}{=}{{str}{.}{toCharArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pos}{=}{{str}{.}{lastIndexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pos}{=}{{str}{.}{lastIndexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pos}{=}{{str}{.}{indexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pos}{=}{{str}{.}{indexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{strLen}{=}{{seq}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{String}}{{ts}{=}{{trim}{(}{str}{)}}}{;}}{{return}{{{isEmpty}{(}{ts}{)}}{?}{null}{:}{ts}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{short}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ScheduledThreadPoolExecutor}}{{s}{=}{{new}{{ScheduledThreadPoolExecutor}}{(}{THREAD_POOL_SIZE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{canonicalClassNameBuffer}{=}{{new}{{StringBuilder}}{(}{className}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{i}{=}{{className}{.}{lastIndexOf}{(}{PACKAGE_SEPARATOR_CHAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{Object}}{name}}{:}{coll}{)}{{{}{{if}{(}{{name}{!=}{null}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{{buffer}{=}{{pattern}{.}{toCharArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExtendedMessageFormat}}{{rhs}{=}{{(}{{ExtendedMessageFormat}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{toString}{=}{{AnnotationUtils}{.}{toString}{(}{testAnno}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{byte}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{boolean}{{anotherVal}{=}{other.value}}{;}}{{return}{{{value}{==}{anotherVal}}{?}{NUMBER_CONSTANT}{:}{{(}{{value}{?}{NUMBER_CONSTANT}{:}{{-}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{OctalUnescaper}}{{oue}{=}{{new}{{OctalUnescaper}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{EqualsBuilder}}{{equalsBuilder}{=}{{new}{{EqualsBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{EqualsBuilder}}{{equalsBuilder}{=}{{new}{{EqualsBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TestSubObject}}{{rhs}{=}{{(}{{TestSubObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TestObject}}{{rhs}{=}{{(}{{TestObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{str}{=}{{f}{.}{toProperString}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{str}{=}{{f}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f1}{.}{compareTo}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f}{=}{{f}{.}{abs}{()}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{ArithmeticException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f}{=}{{f}{.}{negate}{()}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{ArithmeticException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{ExecutorService}}{{exec}{=}{{Executors}{.}{newSingleThreadExecutor}{()}}}{;}}{{{new}{{{CallableBackgroundInitializer}}{<}{{Integer}}{>}}{(}{null}{,}{exec}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{StrTokenizer}}{{tkn}{=}{{new}{{StrTokenizer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrTokenizer}}{{tok}{=}{{new}{{StrTokenizer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrTokenizer}}{{tok}{=}{{new}{{StrTokenizer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrTokenizer}}{{tok}{=}{{new}{{StrTokenizer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{input}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{tokenizer}{.}{next}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{NoSuchElementException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{float}{{anotherVal}{=}{other.value}}{;}}{{return}{{Float}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{chars.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{isException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{getException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{getResultObject}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{getInitializer}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalStateException}}{istex}}{)}{{{}{{{initializer}{.}{get}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{ExecutorService}}{{exec}{=}{{Executors}{.}{newCachedThreadPool}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{initializer}{.}{get}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Object}}{{item}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{char}{delimiter}}{:}{delimiters}{)}{{{}{{if}{(}{{ch}{==}{delimiter}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{{BackgroundInitializer}}{<}{?}{>}}{bi}}{:}{{childInitializers}{.}{values}{()}}{)}{{{}{{{result}{+=}{{bi}{.}{getTaskCount}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{i}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{millisPerUnit}{=}{{getMillisPerUnit}{(}{unit}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}{{{c}{.}{setTime}{(}{date}{)}}{;}}{{return}{c}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{neu}{.}{translate}{(}{input}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{iae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{NumericEntityUnescaper}}{{neu}{=}{{new}{{NumericEntityUnescaper}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{DateParser}}{{parser}{=}{{getInstance}{(}{yMdHmsSZ}{,}{REYKJAVIK}{)}}}{;}}{{{assertEquals}{(}{REYKJAVIK}{,}{{parser}{.}{getTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{DateParser}}{{parser}{=}{{getInstance}{(}{yMdHmsSZ}{,}{SWEDEN}{)}}}{;}}{{{assertEquals}{(}{SWEDEN}{,}{{parser}{.}{getLocale}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{DateParser}}{{parser}{=}{{getInstance}{(}{yMdHmsSZ}{)}}}{;}}{{{assertEquals}{(}{yMdHmsSZ}{,}{{parser}{.}{getPattern}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{DateParser}}{{parser}{=}{{getInstance}{(}{YMD_SLASH}{)}}}{;}}{{{assertTrue}{(}{{{parser}{.}{toString}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{gmt}{=}{{msg}{.}{indexOf}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Object}}{{object}{=}{{getObject}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{part1}{=}{{{name}{.}{hashCode}{()}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{BasicThreadFactory}}{{factory}{=}{{new}{{BasicThreadFactory}}{(}{this}{)}}}{;}}{{{reset}{()}}{;}}{{return}{factory}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleConstructor}{(}{{cls}{.}{getConstructor}{(}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{final}{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{CustomCharSequence}}{{other}{=}{{(}{{CustomCharSequence}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{BasicThreadFactory}}{{factory}{=}{{builder}{.}{build}{()}}}{;}}{{{checkFactoryDefaults}{(}{factory}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{StrLookup}}{<}{?}{>}}{{resolver}{=}{{getVariableResolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{buf}{=}{{new}{{StrBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{buf}{=}{{new}{{StrBuilder}}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{T}}{value}}}
{AST_ROOT_SC2NF{{final}{{T}}{value}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Object}}{object}}{:}{objects}{)}{{{}{{{hash}{=}{{{hash}{*}{NUMBER_CONSTANT}}{+}{{ObjectUtils}{.}{hashCode}{(}{object}{)}}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{values}{!=}{null}}{)}{{{}{{for}{(}{{final}{{T}}{val}}{:}{values}{)}{{{}{{if}{(}{{val}{!=}{null}}{)}{{{}{{return}{val}{;}}{}}}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{buf}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{sub}{.}{replace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{sub}{.}{replace}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{FastDateFormat}}{{other}{=}{{(}{{FastDateFormat}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Object}}{{obj}{=}{{map}{.}{get}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NoSuchMethodException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{short}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Object}}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{long}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{int}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{float}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{double}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{char}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{byte}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{boolean}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{key}}}
{AST_ROOT_SC2NF{{final}{{CompareToBuilder}}{{compareToBuilder}{=}{{new}{{CompareToBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Type}}{{rawType}{=}{{parameterizedType}{.}{getRawType}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Type}}{{replacementType}{=}{{typeVarAssigns}{.}{get}{(}{type}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Type}}{bound}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{Exception}}{e}}{)}{{{}{{{assertTrue}{(}{{exceptionType}{.}{isAssignableFrom}{(}{{e}{.}{getClass}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_5}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_5}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{R}}{{result}{=}{{getRight}{()}}}{;}}{{{setRight}{(}{value}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{properNumerator}{=}{{getProperNumerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Fraction}}{{other}{=}{{(}{{Fraction}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Fraction}}{{f}{=}{{this}{.}{multiplyBy}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{gcd}{=}{{greatestCommonDivisor}{(}{numerator}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{E}}{value}}}
{AST_ROOT_SC2NF{{final}{{E}}{constant}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Enum}{.}{valueOf}{(}{enumClass}{,}{enumName}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{{return}{null}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{Enum}{.}{valueOf}{(}{enumClass}{,}{enumName}{)}}{;}}{{return}{true}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{{return}{false}{;}}{}}}}}}
{AST_ROOT_SC2NF{{final}{{TimeZoneDisplayKey}}{{other}{=}{{(}{{TimeZoneDisplayKey}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{zone}{=}{{calendar}{.}{getTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{len}{=}{{{mValues}{[}{i}{]}}{.}{length}{()}}}{;}}{{if}{(}{{len}{>}{max}}{)}{{{}{{{max}{=}{len}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{FastDatePrinter}}{{other}{=}{{(}{{FastDatePrinter}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Rule}}{rule}}{:}{mRules}{)}{{{}{{{rule}{.}{appendTo}{(}{buf}{,}{calendar}{)}}{;}}{}}}}{{return}{buf}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Calendar}}{{c}{=}{{newCalendar}{()}}}{;}}{{{c}{.}{setTime}{(}{date}{)}}{;}}{{return}{{applyRules}{(}{c}{,}{buf}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Calendar}}{{c}{=}{{newCalendar}{()}}}{;}}{{{c}{.}{setTime}{(}{date}{)}}{;}}{{return}{{applyRulesToString}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Calendar}}{{c}{=}{{newCalendar}{()}}}{;}}{{{c}{.}{setTimeInMillis}{(}{millis}{)}}{;}}{{return}{{applyRulesToString}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{stringMatcher}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{stringMatcher}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{charSetMatcher}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{charMatcher}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{noneMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{quoteMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{doubleQuoteMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{singleQuoteMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{trimMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{splitMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{spaceMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{tabMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{commaMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{oldValue}{=}{{this}{.}{property}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Integer}}{{count}{=}{{eventCounts}{.}{get}{(}{eventName}{)}}}{;}}{{return}{{{count}{==}{null}}{?}{NUMBER_CONSTANT}{:}{{count}{.}{intValue}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{RuntimeException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{char}{{pad}{=}{CHAR_CONS}}{;}}}
{AST_ROOT_SC2NF{{final}{{Token}}{{tok2}{=}{{(}{{Token}}{)}{obj2}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{tokens.length}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{str}{=}{{super}{.}{getContent}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{buf}{[]}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{strLen}{=}{{str}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{{thisBuf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{{thisBuf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{str}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{str}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{{buf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{newSize}{=}{{{size}{-}{removeLen}}{+}{insertLen}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{endIndex}{-}{startIndex}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{chars.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iterable}{!=}{null}}{)}{{{}{{for}{(}{{final}{{Object}}{o}}{:}{iterable}{)}{{{}{{{append}{(}{o}{)}}{;}}{}}}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Object}}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{{old}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{{old}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{String}}{textKeyValue}}{:}{{keyValues}{.}{keySet}{()}}{)}{{{}{{{{escapeRegex}{(}{regex}{,}{textKeyValue}{,}{false}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{FastDateParser}}{{other}{=}{{(}{{FastDateParser}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInHours}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInHours}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInHours}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{expectedValue}{=}{hours}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{expectedValue}{=}{hours}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aCalendar}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}{{{assertEquals}{(}{minutes}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aDate}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}{{{assertEquals}{(}{minutes}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aDate}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.MINUTE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aDate}{,}{Calendar.MINUTE}{)}}}{;}}{{{assertEquals}{(}{seconds}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.MINUTE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.MINUTE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.SECOND}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.SECOND}{)}}}{;}}{{{assertEquals}{(}{millis}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{CharRange}}{{rangea}{=}{{CharRange}{.}{isNot}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CharRange}}{{rangea}{=}{{CharRange}{.}{is}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{element}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{boolean}{element}}{:}{array}{)}{{{}{{if}{(}{element}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{boolean}{element}}{:}{array}{)}{{{}{{if}{(}{{!}{element}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{intRange}{.}{elementCompareTo}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{String}}{{str}{=}{{intRange}{.}{toString}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{str}{=}{{intRange}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{,}{NEW_YORK}{)}}}{;}}{{{assertEquals}{(}{NEW_YORK}{,}{{printer}{.}{getTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{,}{SWEDEN}{)}}}{;}}{{{assertEquals}{(}{SWEDEN}{,}{{printer}{.}{getLocale}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{)}}}{;}}{{{assertEquals}{(}{YYYY_MM_DD}{,}{{printer}{.}{getPattern}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{)}}}{;}}{{{assertTrue}{(}{{{printer}{.}{toString}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{NumberUtils}{.}{createNumber}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{NumberFormatException}}{nfe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{osName}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{javaVersion}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{File}}{{dir}{=}{{SystemUtils}{.}{getUserHome}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{File}}{{dir}{=}{{SystemUtils}{.}{getUserDir}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{File}}{{dir}{=}{{SystemUtils}{.}{getJavaIoTmpDir}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{File}}{{dir}{=}{{SystemUtils}{.}{getJavaHome}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{assertFalse}{(}{STRING_CONSTANT}{,}{{init}{.}{isStarted}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{init}{.}{get}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{assertNull}{(}{STRING_CONSTANT}{,}{{init}{.}{getActiveExecutor}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{init}{.}{start}{()}}{;}}{{{checkInitialize}{(}{init}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{CharUtils}{.}{toIntValue}{(}{CHAR_CONS}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{CharUtils}{.}{toChar}{(}{{(}{{Character}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{anotherVal}{=}{other.value}}{;}}{{return}{{Double}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{value}{)}}}{;}}{{return}{{(}{int}{)}{{(}{{bits}{^}{{bits}{>}{>}{>}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{o1}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{o1}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{TestObject}}{{o1}{=}{{new}{{TestObject}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{CompareToBuilder}{.}{reflectionCompare}{(}{o1}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{TestSubObject}}{{rhs}{=}{{(}{{TestSubObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TestObject}}{{rhs}{=}{{(}{{TestObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{Integer}}{[]}}{{iArray}{=}{null}}{;}}{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{iArray}{,}{Integer.MIN_VALUE}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{sb}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IndexOutOfBoundsException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{L}}{listener}}{:}{listeners}{)}{{{}{{{method}{.}{invoke}{(}{listener}{,}{args}{)}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{BitSet}}{{toRemove}{=}{{new}{{BitSet}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{testCalendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{DateUtils}{.}{toCalendar}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{GregorianCalendar}}{{cal}{=}{{new}{{GregorianCalendar}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{parentClass}{.}{getMethod}{(}{methodName}{,}{parameterTypes}{)}}{;}}{}}}{{catch}{(}{{final}{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleMethod}{(}{{cls}{.}{getMethod}{(}{methodName}{,}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{final}{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Charset}{.}{isSupported}{(}{name}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalCharsetNameException}}{ex}}{)}{{{}{{return}{false}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Object}}{{test}{=}{{SerializationUtils}{.}{clone}{(}{null}{)}}}{;}}{{{assertNull}{(}{test}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{new}{{byte}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}{{catch}{(}{{final}{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{byte}{[]}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{InputStream}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{null}{,}{null}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{iMap}{,}{null}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Exception}}{{ex}{=}{{new}{{Exception}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalStateException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{{obj}{=}{{new}{{Object}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TestSubObject}}{{rhs}{=}{{(}{{TestSubObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TestObject}}{{rhs}{=}{{(}{{TestObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MessageFormat}}{{result}{=}{{new}{{MessageFormat}}{(}{pattern}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{Locale}}{locale}}{:}{locales}{)}{{{}{{{checkBuiltInFormat}{(}{pattern}{,}{registry}{,}{args}{,}{locale}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{CharSet}}{{other}{=}{{(}{{CharSet}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{CharRange}}{range}}{:}{set}{)}{{{}{{if}{(}{{range}{.}{contains}{(}{ch}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{sz}{=}{set.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{throw}{{new}{{ExceptionWithoutCause}}{()}}{;}}{}}}{{catch}{(}{{final}{{Throwable}}{t}}{)}{{{}{{return}{t}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mutNum}{.}{compareTo}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mutNum}{.}{setValue}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{new}{{MutableShort}}{(}{{(}{{Number}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{expected}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{char}{{cur}{=}{current}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CharRange}}{{other}{=}{{(}{{CharRange}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{start}{>}{end}}{)}{{{}{{final}{char}{{temp}{=}{start}}{;}}{{{start}{=}{end}}{;}}{{{end}{=}{temp}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{SecurityException}}{ex}}{)}{{{}{{{System.err}{.}{println}{(}{{STRING_CONSTANT}{+}{property}{+}{STRING_CONSTANT}}{)}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{ConcurrentException}}{cex}}{)}{{{}{{throw}{{new}{{ConcurrentRuntimeException}}{(}{{cex}{.}{getCause}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{V}}{{value}{=}{{map}{.}{get}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{initialize}{(}{initializer}{)}}{;}}{}}}{{catch}{(}{{final}{{ConcurrentException}}{cex}}{)}{{{}{{throw}{{new}{{ConcurrentRuntimeException}}{(}{{cex}{.}{getCause}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{ConcurrentRuntimeException}}{{crex}{=}{{extractCauseUnchecked}{(}{ex}{)}}}{;}}{{if}{(}{{crex}{!=}{null}}{)}{{{}{{throw}{crex}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{ConcurrentException}}{{cex}{=}{{extractCause}{(}{ex}{)}}}{;}}{{if}{(}{{cex}{!=}{null}}{)}{{{}{{throw}{cex}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{ByteArrayOutputStream}}{{baos}{=}{{new}{{ByteArrayOutputStream}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{serialize}{(}{obj}{,}{baos}{)}}{;}}{{return}{{baos}{.}{toByteArray}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{message}{=}{{exceptionContext}{.}{getMessage}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{trace}{=}{{ExceptionUtils}{.}{getStackTrace}{(}{exceptionContext}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Person}}{{p}{=}{{new}{{Person}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{{Object}}{[]}}{{array}{=}{null}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{ObjectUtils}{.}{hashCodeMulti}{(}{array}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{final}{{InheritedReflectionStaticFieldsFixture}}{{instance1}{=}{{new}{{InheritedReflectionStaticFieldsFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ReflectionStaticFieldsFixture}}{{instance1}{=}{{new}{{ReflectionStaticFieldsFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{SimpleReflectionStaticFieldsFixture}}{{instance1}{=}{{new}{{SimpleReflectionStaticFieldsFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{SelfInstanceTwoVarsReflectionTestFixture}}{{test}{=}{{new}{{SelfInstanceTwoVarsReflectionTestFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{SelfInstanceVarReflectionTestFixture}}{{test}{=}{{new}{{SelfInstanceVarReflectionTestFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{SimpleReflectionTestFixture}}{{simple}{=}{{new}{{SimpleReflectionTestFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Outer}}{{outer}{=}{{new}{{Outer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Character}}{{c}{=}{{new}{{Character}}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{coll}{.}{add}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{locale}{=}{{LocaleUtils}{.}{toLocale}{(}{localeString}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{locale}{=}{{LocaleUtils}{.}{toLocale}{(}{localeString}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{locale}{=}{{LocaleUtils}{.}{toLocale}{(}{language}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{IllegalArgumentException}}{ex}}}
{AST_ROOT_SC2NF{{final}{long}{{seed}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{seed}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{message}{=}{{exceptionContext}{.}{getMessage}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{trace}{=}{{ExceptionUtils}{.}{getStackTrace}{(}{exceptionContext}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Short}{.}{parseShort}{(}{str}{)}}{;}}{}}}{{catch}{(}{{final}{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Byte}{.}{parseByte}{(}{str}{)}}{;}}{}}}{{catch}{(}{{final}{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Double}{.}{parseDouble}{(}{str}{)}}{;}}{}}}{{catch}{(}{{final}{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Float}{.}{parseFloat}{(}{str}{)}}{;}}{}}}{{catch}{(}{{final}{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Long}{.}{parseLong}{(}{str}{)}}{;}}{}}}{{catch}{(}{{final}{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Integer}{.}{parseInt}{(}{str}{)}}{;}}{}}}{{catch}{(}{{final}{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{final}{int}{{start}{=}{{index}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{StrLookup}{.}{systemPropertiesLookup}{()}}{.}{lookup}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{BigDecimal}}{{value}{=}{{NumberUtils}{.}{createBigDecimal}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{str}{+}{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{BigInteger}}{{value}{=}{{NumberUtils}{.}{createBigInteger}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{str}{+}{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Long}}{{value}{=}{{NumberUtils}{.}{createLong}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{str}{+}{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Integer}}{{value}{=}{{NumberUtils}{.}{createInteger}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{str}{+}{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Double}}{{value}{=}{{NumberUtils}{.}{createDouble}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{str}{+}{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Float}}{{value}{=}{{NumberUtils}{.}{createFloat}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{str}{+}{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getTimeInstance}{(}{style}{,}{timeZone}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getTimeInstance}{(}{style}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getTimeInstance}{(}{style}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getTimeInstance}{(}{style}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateInstance}{(}{style}{,}{timeZone}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateInstance}{(}{style}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateInstance}{(}{style}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateInstance}{(}{style}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{SerializationUtils}{.}{<}{{T}}{>}{deserialize}{(}{{new}{{ByteArrayInputStream}}{(}{objectData}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{exceptionContext}{=}{{new}{{ContextedRuntimeException}}{(}{TEST_MESSAGE_2}{,}{{new}{{Exception}}{(}{TEST_MESSAGE}{)}}{,}{{new}{{DefaultExceptionContext}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{exceptionContext}{=}{{new}{{ContextedRuntimeException}}{(}{TEST_MESSAGE_2}{,}{{new}{{Exception}}{(}{TEST_MESSAGE}{)}}{,}{{new}{{DefaultExceptionContext}}{()}{{}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strategy}}{{strategy}{=}{{cache}{.}{get}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{nullText}{!=}{null}}{&&}{{nullText}{.}{isEmpty}{()}}}{)}{{{}{{{nullText}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{str}{.}{isEmpty}{()}}{)}{{{}{{return}{ArrayUtils.EMPTY_STRING_ARRAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{separator}{.}{isEmpty}{()}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{str}{.}{isEmpty}{()}}{?}{null}{:}{str}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{.}{isEmpty}{()}}{||}{{deepEmpty}{(}{set}{)}}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{max}{=}{{TypeUtilsTest}{.}{<}{{Integer}}{>}{stub}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{empty}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{ContextedRuntimeException}}{(}{TEST_MESSAGE_2}{,}{{new}{{Exception}}{(}{TEST_MESSAGE}{)}}{,}{{new}{{DefaultExceptionContext}}{()}{{{}{{private}{static}{final}{long}{{serialVersionUID}{=}{NUMBER_CONSTANT}}{;}}{}}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{runningState}}{==}{State.UNSTARTED}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{this}{.}{startTimeMillis}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{splitState}}{!=}{SplitState.SPLIT}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{GenericArrayTypeImpl}}{(}{{Validate}{.}{notNull}{(}{componentType}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readDeclaredField}{(}{null}{,}{STRING_CONSTANT}{,}{true}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readDeclaredField}{(}{null}{,}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readField}{(}{null}{,}{publicChild}{,}{true}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readField}{(}{null}{,}{publicChild}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{LocaleUtils}{.}{toLocale}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{{?}{extends}{{E}}}{>}}{values}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{{?}{extends}{{E}}}{>}}{values}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{FastDateParser}}{(}{format}{,}{timeZone}{,}{locale}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{normalizeSpace}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{difference}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{abbreviate}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{reverseDelimited}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{reverse}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{leftPad}{(}{null}{,}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{leftPad}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{rightPad}{(}{null}{,}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{rightPad}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{repeat}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{replaceChars}{(}{null}{,}{CHAR_CONS}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{deleteWhitespace}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{split}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{split}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{assertEquals}{(}{{minutes}{+}{{{(}{{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{{(}{{days}{-}{NUMBER_CONSTANT}}{)}}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_MINUTE}}}{,}{testResult}{)}}}
{AST_ROOT_SC2NF{{assertEquals}{(}{{minutes}{+}{{{(}{{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{{(}{{days}{-}{NUMBER_CONSTANT}}{)}}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_MINUTE}}}{,}{testResult}{)}}}
{AST_ROOT_SC2NF{{{(}{{{(}{{minutes}{*}{DateUtils.MILLIS_PER_MINUTE}}{)}}{+}{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{{(}{{days}{-}{NUMBER_CONSTANT}}{)}}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_SECOND}}}
{AST_ROOT_SC2NF{{{(}{{{(}{{minutes}{*}{DateUtils.MILLIS_PER_MINUTE}}{)}}{+}{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{{(}{{days}{-}{NUMBER_CONSTANT}}{)}}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_SECOND}}}
{AST_ROOT_SC2NF{{(}{{{(}{{days}{-}{NUMBER_CONSTANT}}{)}}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}
{AST_ROOT_SC2NF{{(}{{{(}{{days}{-}{NUMBER_CONSTANT}}{)}}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{swapCase}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffResult}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{context}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{context}}}
{AST_ROOT_SC2NF{{list0}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{(}{{Arrays}{.}{asList}{(}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{StringUtils}{.}{join}{(}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{readField}{(}{field}{,}{target}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{readField}{(}{field}{,}{target}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeField}{(}{field}{,}{target}{,}{value}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeField}{(}{field}{,}{target}{,}{value}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeField}{(}{field}{,}{{(}{{Object}}{)}{null}}{,}{value}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeStaticField}{(}{field}{,}{value}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toShort}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toDouble}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toFloat}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toLong}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toInt}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toShort}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toDouble}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toFloat}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toLong}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toInt}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{DiffResult}}{(}{left}{,}{right}{,}{diffs}{,}{style}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{message}{,}{cause}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotImplementedException}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{this}{(}{cause}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{message}{,}{{(}{{String}}{)}{null}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Character}{.}{codePointCount}{(}{input}{,}{NUMBER_CONSTANT}{,}{{input}{.}{length}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{pos}{+=}{{Character}{.}{charCount}{(}{{Character}{.}{codePointAt}{(}{input}{,}{pos}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Date}}{centuryStart}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{TimeUnit.DAYS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{TimeUnit.HOURS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{TimeUnit.MINUTES}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{TimeUnit.SECONDS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{TimeUnit.MILLISECONDS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{TimeUnit.DAYS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{TimeUnit.HOURS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{TimeUnit.MINUTES}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{TimeUnit.SECONDS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{TimeUnit.MILLISECONDS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{NOT_FOUND}{;}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{iVal}{=}{{lKeyValues}{.}{get}{(}{{value}{.}{toLowerCase}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{regex}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{iVal}{=}{{lKeyValues}{.}{get}{(}{{value}{.}{toLowerCase}{(}{locale}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strategy}{=}{{{field}{==}{Calendar.ZONE_OFFSET}}{?}{{new}{{TimeZoneStrategy}}{(}{locale}{)}}{:}{{new}{{CaseInsensitiveTextStrategy}}{(}{field}{,}{definingCalendar}{,}{locale}{)}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{String}}{textKeyValue}}{:}{{lKeyValues}{.}{keySet}{()}}{)}{{{}{{{{sb}{.}{append}{(}{textKeyValue}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{String}}{textKeyValue}}{:}{{lKeyValues}{.}{keySet}{()}}{)}{{{}{{{{escapeRegex}{(}{regex}{,}{textKeyValue}{,}{false}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{shift}{=}{{i}{+}{srcPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{i}{+}{srcPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{i}{+}{srcPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{i}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{i}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{i}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{i}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Interfaces}}{interfacesBehavior}}}
{AST_ROOT_SC2NF{{final}{{{String}}{[]}}{zone}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{trial}{=}{{century}{+}{twoDigitYear}}}{;}}{{return}{{{twoDigitYear}{>=}{startYear}}{?}{trial}{:}{{trial}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{definingCalendar}}}
{AST_ROOT_SC2NF{{final}{{SimpleClass}}{obj}}}
{AST_ROOT_SC2NF{{public}{SimpleClass}{(}{{final}{boolean}{booleanField}}{)}{{{}{{{{this}{.}{booleanField}}{=}{booleanField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{String}}{{pattern}{=}{STRING_CONSTANT}}{;}}{{{FastDateFormat}{.}{getInstance}{(}{pattern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{BooleanDiff}{(}{{final}{{String}}{fieldName}}{)}{{{}{{super}{(}{fieldName}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{Token}}{token}}{:}{tokens}{)}{{{}{{if}{(}{{{token}{.}{getValue}{()}}{==}{value}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Field}}{field}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{tmpHash}{=}{{ObjectUtils}{.}{hashCode}{(}{object}{)}}}{;}}{{{hash}{=}{{{hash}{*}{NUMBER_CONSTANT}}{+}{tmpHash}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{GenericArrayType}}{g}}}
{AST_ROOT_SC2NF{{final}{{WildcardType}}{w}}}
{AST_ROOT_SC2NF{{final}{{ParameterizedType}}{p}}}
{AST_ROOT_SC2NF{{final}{{{TypeVariable}}{<}{?}{>}}{v}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{final}{{{TypeVariable}}{<}{?}{>}}{var}}}
{AST_ROOT_SC2NF{{final}{{Type}}{type}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{Type}}{componentType}}}
{AST_ROOT_SC2NF{{final}{{Type}}{.}{.}{.}{bounds}}}
{AST_ROOT_SC2NF{{final}{{Type}}{.}{.}{.}{bounds}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{RandomUtils}{.}{nextDouble}{(}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{result}{=}{{RandomUtils}{.}{nextFloat}{(}{NUMBER_CONSTANT}{,}{Float.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{result}{=}{{RandomUtils}{.}{nextLong}{(}{NUMBER_CONSTANT}{,}{Long.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{result}{=}{{RandomUtils}{.}{nextInt}{(}{NUMBER_CONSTANT}{,}{Integer.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{result}{=}{{RandomUtils}{.}{nextLong}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{RandomUtils}{.}{nextFloat}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{RandomUtils}{.}{nextDouble}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{result}{=}{{RandomUtils}{.}{nextInt}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{consume}{(}{{final}{{String}}{t}}{)}{{{}{{{super}{.}{consume}{(}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{consume}{(}{{final}{{T}}{t}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Method}}{m}}}
{AST_ROOT_SC2NF{{final}{{Method}}{m}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{char}{ch}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{source}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{source}}}
{AST_ROOT_SC2NF{{final}{{T}}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{fieldName}}}
{AST_ROOT_SC2NF{{final}{{TypeTestClass}}{{class1}{=}{{new}{{TypeTestClass}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{equals}{(}{{final}{{Object}}{obj}}{)}{{{}{{return}{{EqualsBuilder}{.}{reflectionEquals}{(}{this}{,}{obj}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{TypeTestClass}}{obj}}}
{AST_ROOT_SC2NF{{final}{char}{{firstChar}{=}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{firstChar}{=}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{.}{.}{.}{css}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{.}{.}{.}{css}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{final}{{{String}}{[]}}{element}}}
{AST_ROOT_SC2NF{{final}{{{String}}{[]}}{element}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{endsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{startsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isEmpty}{(}{str}{)}}{?}{defaultStr}{:}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isBlank}{(}{str}{)}}{?}{defaultStr}{:}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isBlank}{(}{cs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{cs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isDigits}{(}{{StringUtils}{.}{replaceOnce}{(}{{str}{.}{substring}{(}{NUMBER_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{StringUtils.EMPTY}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{modify}{(}{ceiled}{,}{field}{,}{ModifyType.CEILING}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{ModifyType.CEILING}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{truncated}{,}{field}{,}{ModifyType.TRUNCATE}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{ModifyType.TRUNCATE}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{rounded}{,}{field}{,}{ModifyType.ROUND}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{ModifyType.ROUND}{)}}{;}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{{}}}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{{array}{.}{getClass}{()}}{.}{getComponentType}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{appendQuotedString}{(}{pattern}{,}{pos}{,}{sb}{)}}{;}}}
{AST_ROOT_SC2NF{{{getQuotedString}{(}{pattern}{,}{pos}{)}}{;}}}
{AST_ROOT_SC2NF{{{appendQuotedString}{(}{pattern}{,}{pos}{,}{stripCustom}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{pattern}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{<}{NUMBER_CONSTANT}}{)}{{{}{{{appendDigits}{(}{buffer}{,}{value}{)}}{;}}{}}}{else}{{{}{{{buffer}{.}{append}{(}{value}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{exec}{.}{awaitTermination}{(}{NUMBER_CONSTANT}{,}{TimeUnit.SECONDS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fail}{(}{{STRING_CONSTANT}{+}{osName}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{isOSNameMatch}{(}{osName}{,}{osNamePrefix}{)}}{&&}{{osVersion}{.}{startsWith}{(}{osVersionPrefix}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{isOSNameMatch}{(}{osName}{,}{osNamePrefix}{)}}{&&}{{isOSVersionMatch}{(}{osVersion}{,}{osVersionPrefix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{osName}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getLength}{(}{array}{)}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isEmpty}{(}{array}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{halflength}{=}{{{{shorter}{.}{length}{()}}{/}{NUMBER_CONSTANT}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{(}{{!}{{{f}{.}{getName}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}}
{AST_ROOT_SC2NF{{(}{{!}{{{field}{.}{getName}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}}
{AST_ROOT_SC2NF{{(}{{!}{{{f}{.}{getName}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Float}{.}{floatToIntBits}{(}{lhs}{)}}{,}{{Float}{.}{floatToIntBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Double}{.}{doubleToLongBits}{(}{lhs}{)}}{,}{{Double}{.}{doubleToLongBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{superEquals}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{modType}{==}{ModifyType.CEILING}}{||}{{{modType}{==}{ModifyType.ROUND}}{&&}{roundUp}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{setMilliseconds}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{setSeconds}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{setMinutes}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{setHours}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{setDays}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{setMonths}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{DateUtils}{.}{parseDateStrictly}{(}{dateStr}{,}{parsers}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{ParseException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{VALID_TZ}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{validTimeZoneChars}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{VALID_TZ}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.JANUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.OCTOBER}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.DECEMBER}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.JANUARY}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{expected}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.MAY}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.OCTOBER}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.DECEMBER}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.JANUARY}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.JUNE}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.FEBRUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.JANUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.JANUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{set}{(}{NUMBER_CONSTANT}{,}{Calendar.JANUARY}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{pattern}{,}{timeZone}{,}{locale}{,}{null}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{text}{=}{{DateFormatUtils}{.}{format}{(}{cal}{,}{{DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT}{.}{getPattern}{()}}{,}{timeZone}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{calendar}{.}{getTime}{()}}{,}{buf}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{actualValue}{=}{{{FastDateFormat}{.}{getInstance}{(}{PATTERN}{,}{{this}{.}{timeZone}}{)}}{.}{format}{(}{cal}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tokenLen}{==}{NUMBER_CONSTANT}}{)}{{{}{{{rule}{=}{Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES}}{;}}{}}}{else}{{{}{{{rule}{=}{TimeZoneNumberRule.INSTANCE_COLON}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{threadGroup}{.}{isDestroyed}{()}}}{)}{{{}{{{threadGroup}{.}{destroy}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeArguments}}{=}{{typeArguments}{.}{clone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{final}{{Thread}}{thread}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{final}{{ThreadGroup}}{threadGroup}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threadGroups}{.}{isEmpty}{()}}{)}{{{}{{return}{{Collections}{.}{emptyList}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{{checkNotNull}{(}{object}{)}}{,}{style}{,}{buffer}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{checkNotNull}{(}{object}{)}}{,}{style}{,}{buffer}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{checkNotNull}{(}{object}{)}}{,}{style}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{checkNotNull}{(}{object}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{final}{{Thread}}{thread}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{final}{{ThreadGroup}}{threadGroup}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threadGroups}{.}{isEmpty}{()}}{)}{{{}{{return}{{Collections}{.}{emptyList}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{tz}{=}{{tzNames}{.}{get}{(}{{value}{.}{toLowerCase}{(}{locale}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{validTimeZoneChars}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{String}}{textKeyValue}}{:}{{lKeyValues}{.}{keySet}{()}}{)}{{{}{{{{simpleQuote}{(}{regex}{,}{textKeyValue}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}{)}}{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{propertiesMap}{=}{{(}{{Map}}{)}{properties}}}{;}}}
{AST_ROOT_SC2NF{{ISO8601TimeZoneStrategy}{(}{{{String}}{pattern}}{)}{{{}{{{createPattern}{(}{pattern}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{strategy}{=}{{{field}{==}{Calendar.ZONE_OFFSET}}{?}{{new}{{TimeZoneStrategy}}{(}{definingCalendar}{,}{locale}{)}}{:}{{new}{{CaseInsensitiveTextStrategy}}{(}{field}{,}{definingCalendar}{,}{locale}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{pattern}{,}{timeZone}{,}{locale}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{SystemUtils.LINE_SEPARATOR}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{SystemUtils.LINE_SEPARATOR}}{;}}}
{AST_ROOT_SC2NF{{final}{{DateParser}}{{fdp}{=}{{getInstance}{(}{STRING_CONSTANT}{,}{kst}{,}{Locale.KOREA}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{applyRules}{(}{c}{,}{{new}{{StringBuilder}}{(}{mMaxLengthEstimate}{)}}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{BooleanUtils}{.}{toBoolean}{(}{{{{new}{{StringBuilder}}{(}{STRING_CONSTANT}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{newChar}{=}{{Character}{.}{toTitleCase}{(}{firstChar}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{throw}{{new}{{IOException}}{()}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{<}{{Integer}}{>}{rethrow}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{count}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}{else}{{if}{(}{{count}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{count}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{return}{{{pattern}{.}{matcher}{(}{decomposed}{)}}{.}{replaceAll}{(}{StringUtils.EMPTY}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{StringBuilder}}{(}{{{annotationType}{==}{null}}{?}{StringUtils.EMPTY}{:}{{annotationType}{.}{getName}{()}}}{)}}{.}{insert}{(}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{.}{toString}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{summaryObjectEndText}{==}{null}}{)}{{{}{{{summaryObjectEndText}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{summaryObjectEndText}}{=}{summaryObjectEndText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{summaryObjectStartText}{==}{null}}{)}{{{}{{{summaryObjectStartText}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{summaryObjectStartText}}{=}{summaryObjectStartText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sizeEndText}{==}{null}}{)}{{{}{{{sizeEndText}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{sizeEndText}}{=}{sizeEndText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sizeStartText}{==}{null}}{)}{{{}{{{sizeStartText}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{sizeStartText}}{=}{sizeStartText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{nullText}{==}{null}}{)}{{{}{{{nullText}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{nullText}}{=}{nullText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldSeparator}{==}{null}}{)}{{{}{{{fieldSeparator}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{fieldSeparator}}{=}{fieldSeparator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldNameValueSeparator}{==}{null}}{)}{{{}{{{fieldNameValueSeparator}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{fieldNameValueSeparator}}{=}{fieldNameValueSeparator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{contentEnd}{==}{null}}{)}{{{}{{{contentEnd}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{contentEnd}}{=}{contentEnd}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{contentStart}{==}{null}}{)}{{{}{{{contentStart}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{contentStart}}{=}{contentStart}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arraySeparator}{==}{null}}{)}{{{}{{{arraySeparator}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{arraySeparator}}{=}{arraySeparator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arrayEnd}{==}{null}}{)}{{{}{{{arrayEnd}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{arrayEnd}}{=}{arrayEnd}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arrayStart}{==}{null}}{)}{{{}{{{arrayStart}{=}{StringUtils.EMPTY}}{;}}{}}}}{{{{this}{.}{arrayStart}}{=}{arrayStart}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{obj}{==}{null}}{?}{StringUtils.EMPTY}{:}{{obj}{.}{toString}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{>=}{count}}{)}{{{}{{{addToken}{(}{tokenList}{,}{StringUtils.EMPTY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{delimiters}{!=}{null}}{&&}{{delimiters.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{th}{==}{null}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{locale}{.}{getCountry}{()}}{.}{length}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{list}{.}{add}{(}{{new}{{Locale}}{(}{{locale}{.}{getLanguage}{()}}{,}{StringUtils.EMPTY}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{length}{<=}{NUMBER_CONSTANT}}{||}{{index}{>=}{size}}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{str}{==}{null}}{)}{{{}{{{str}{=}{StringUtils.EMPTY}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{str}{==}{null}}{)}{{{}{{{str}{=}{StringUtils.EMPTY}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{lKeyValues}{=}{{appendDisplayNames}{(}{definingCalendar}{,}{locale}{,}{field}{,}{regex}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{parseDateWithLeniency}{(}{str}{,}{locale}{,}{parsePatterns}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{Object}}{o}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{{{varArgs}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{String}}{s}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{{{varArgs}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{double}{d}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{{{varArgs}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{Integer}}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{{{varArgs}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{int}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{{{varArgs}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{()}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{{{varArgs}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{boolean}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{double}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{float}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{long}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{char}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{int}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{short}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{byte}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{indices}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{str}{,}{toString}{)}}{;}}{{{assertArrayEquals}{(}{args}{,}{varArgs}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCause}{(}{throwable}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{JAVA_9}{,}{{get}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{STRING_CONSTANT}{.}{equals}{(}{nom}{)}}{)}{{{}{{return}{JAVA_1_8}{;}}{}}}{else}{{if}{(}{{STRING_CONSTANT}{.}{equals}{(}{nom}{)}}{)}{{{}{{return}{JAVA_9}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{strategy}{=}{{{field}{==}{Calendar.ZONE_OFFSET}}{?}{{new}{{TimeZoneStrategy}}{(}{locale}{)}}{:}{{new}{{CaseInsensitiveTextStrategy}}{(}{field}{,}{definingCalendar}{,}{locale}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{isValid}{=}{{NumberUtils}{.}{isCreatable}{(}{val}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{srcArgs.length}{<}{normalArgsLen}}{)}{{{}{{return}{Float.MAX_VALUE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{lhs.length}{<}{rhs.length}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{hasSign}{=}{{{firstChar}{==}{CHAR_CONS}}{||}{{firstChar}{==}{CHAR_CONS}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{javaVersion}{=}{SystemUtils.JAVA_VERSION}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ImmutablePair}}{<>}}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Locale}}{>}}{{jdkLocaleSet}{=}{{new}{{{HashSet}}{<>}}{(}{jdkLocaleList}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{allFieldsInteger}{=}{{new}{{{ArrayList}}{<>}}{(}{fieldsInteger}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{CallableBackgroundInitializer}}{<}{{Integer}}{>}}{{init}{=}{{new}{{{CallableBackgroundInitializer}}{<>}}{(}{call}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{{CallableBackgroundInitializer}}{<>}}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{tasks}{=}{{new}{{{ArrayList}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{{{this}{.}{diffs}}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Integer}}{>}}{{toRemove}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{frames}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Throwable}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{typeVarAssigns}{=}{{new}{{{HashMap}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{annotatedFields}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{allFields}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{E}}{>}}{{map}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{tokenList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{tokens.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{?}{>}}{{set}{=}{{Collections}{.}{unmodifiableSet}{(}{{new}{{{HashSet}}{<>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{?}{>}}{{set}{=}{{Collections}{.}{unmodifiableSet}{(}{{new}{{{HashSet}}{<>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ConstantFuture}}{<>}}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MapStrLookup}}{<>}}{(}{map}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Boolean}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Double}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Float}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Long}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Character}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Integer}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Short}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{Byte}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{T}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{AtomicReference}}{<}{{InterruptedException}}{>}}{{iex}{=}{{new}{{{AtomicReference}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MutablePair}}{<>}}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{m}{==}{null}}{)}{{{}{{{REGISTRY}{.}{set}{(}{{new}{{{WeakHashMap}}{<>}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{countries}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{langs}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Locale}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Type}}{>}}{{types}{=}{{new}{{{HashSet}}{<>}}{(}{bounds.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{priorVariables}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{priorVariables}{.}{add}{(}{{new}{{String}}{(}{chars}{,}{offset}{,}{length}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{valueMap}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{Object}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{String}}{>}}{{labels}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{values}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{contextValues}{.}{add}{(}{{new}{{{ImmutablePair}}{<>}}{(}{label}{,}{value}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{iMap}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{listeners}}{=}{{new}{{{CopyOnWriteArrayList}}{<>}}{(}{srcListeners}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{L}}{>}}{{serializableListeners}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EventListenerSupport}}{<>}}{(}{listenerInterface}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{VetoableChangeListener}}{>}}{{calledListeners}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{{candidateClasses}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{classNames}{=}{{new}{{{ArrayList}}{<>}}{(}{{classes}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{{classes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Integer}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{expectedSource}{=}{source}}{;}}{{{changedValues}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{array.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Method}}{>}}{{annotatedMethods}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Method}}{>}}{{result}{=}{{new}{{{LinkedHashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{eventTypes}}{=}{{new}{{{HashSet}}{<>}}{(}{{Arrays}{.}{asList}{(}{eventTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{registry}{==}{null}}{)}{{{}{{{registry}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}{{{REGISTRY}{.}{set}{(}{registry}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{MutableObject}}{<}{{String}}{>}}{{obj}{=}{{new}{{{MutableObject}}{<>}}{(}{replaceTemplate}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{values}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{T}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<>}}{(}{items.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{TreeSet}}{<}{{T}}{>}}{{sort}{=}{{new}{{{TreeSet}}{<>}}{(}{comparator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{TreeSet}}{<}{{T}}{>}}{{sort}{=}{{new}{{{TreeSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{ThreadGroup}}{>}}{{result}{=}{{new}{{{ArrayList}}{<>}}{(}{count}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Thread}}{>}}{{result}{=}{{new}{{{ArrayList}}{<>}}{(}{count}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Thread}}{>}}{{result}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ImmutablePair}}{<>}}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{DateParser}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{String}}{>}}{{sorted}{=}{{new}{{{TreeSet}}{<>}}{(}{LONGER_FIRST_LOWERCASE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{caches}{[}{field}{]}}{=}{{new}{{{ConcurrentHashMap}}{<>}}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{patterns}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Locale}}{>}}{{testLocales}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{s}{=}{{{new}{{{ConstantInitializer}}{<>}}{(}{null}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkEquals}{(}{{new}{{{ConstantInitializer}}{<>}}{(}{STRING_CONSTANT}{)}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{init}{=}{{new}{{{ConstantInitializer}}{<>}}{(}{VALUE}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{triple}{=}{{new}{{{MutableTriple}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{pair}{=}{{new}{{{MutablePair}}{<>}}{(}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{final}{{{MutablePair}}{<}{{Integer}}{,}{{String}}{>}}{{pair}{=}{{new}{{{MutablePair}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Range}}{<>}}{(}{fromInclusive}{,}{toInclusive}{,}{comparator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{tasks}{=}{{new}{{{ArrayList}}{<>}}{()}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{TimeZone}}{>}}{{timeZones}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{String}}{>}}{{substrings}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{excludeList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{excludeList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{excludeList}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Integer}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Integer}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Rule}}{>}}{{rules}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{CircuitBreakingException}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CircuitBreakingException}{(}{{final}{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Customer}{(}{{final}{{String}}{name}}{)}{{{}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Bank}{(}{{final}{{String}}{name}}{)}{{{}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{final}{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{final}{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{final}{{FastDateParser}}{parser}}{,}{{final}{int}{iValue}}{)}{{{}{{return}{{iValue}{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{tokenLen}}}
{AST_ROOT_SC2NF{{ISO8601TimeZoneStrategy}{(}{{final}{{String}}{pattern}}{)}{{{}{{{createPattern}{(}{pattern}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{final}{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{void}{createPattern}{(}{{final}{{String}}{regex}}{)}{{{}{{{{this}{.}{pattern}}{=}{{Pattern}{.}{compile}{(}{regex}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{createPattern}{(}{{final}{{StringBuilder}}{regex}}{)}{{{}{{{createPattern}{(}{{regex}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{char}{c}}}
{AST_ROOT_SC2NF{{final}{char}{c}}}
{AST_ROOT_SC2NF{{final}{{{ListIterator}}{<}{{StrategyAndWidth}}{>}}{lt}}}
{AST_ROOT_SC2NF{{public}{FastDatePrinterTimeZonesTest}{(}{{final}{{TimeZone}}{timeZone}}{)}{{{}{{{{this}{.}{timeZone}}{=}{timeZone}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{s}}}
{AST_ROOT_SC2NF{{{class}{LANG1261ParentObject}{{}{{{@}{Override}}{public}{boolean}{equals}{(}{{final}{{Object}}{o}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Method}}{method}}}
{AST_ROOT_SC2NF{{final}{{SystemDefaults}}{defaults}}}
{AST_ROOT_SC2NF{{final}{{SystemDefaults}}{defaults}}}
{AST_ROOT_SC2NF{{final}{int}{len}}}
{AST_ROOT_SC2NF{{final}{{{Constructor}}{<}{?}{>}}{constructor}}}
{AST_ROOT_SC2NF{{final}{{Method}}{method}}}
{AST_ROOT_SC2NF{{private}{static}{{Executable}}{of}{(}{{final}{{{Constructor}}{<}{?}{>}}{constructor}}{)}{{{}{{return}{{new}{{Executable}}{(}{constructor}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{Executable}}{of}{(}{{final}{{Method}}{method}}{)}{{{}{{return}{{new}{{Executable}}{(}{method}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Number}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{final}{{Number}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{final}{{Number}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{final}{{Long}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{final}{{Integer}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{final}{{Double}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{final}{{Float}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{final}{{Short}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{final}{{Byte}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{String}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Object}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Number}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Long}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Integer}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Double}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Float}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Boolean}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Short}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Character}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{final}{{Byte}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{unboxing}{(}{{final}{int}{.}{.}{.}{values}}{)}{{{}{{return}{values}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{PropertyChangeListener}}{listener}}}
{AST_ROOT_SC2NF{{final}{{PropertyChangeListener}}{listener}}}
{AST_ROOT_SC2NF{{final}{{State}}{newState}}}
{AST_ROOT_SC2NF{{final}{{State}}{state}}}
{AST_ROOT_SC2NF{{final}{{Boolean}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{final}{{PropertyChangeEvent}}{evt}}}
{AST_ROOT_SC2NF{{final}{{Object}}{source}}}
{AST_ROOT_SC2NF{{final}{long}{time}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{tz}}}
{AST_ROOT_SC2NF{{final}{{String}}{valueAsString}}}
{AST_ROOT_SC2NF{{final}{{String}}{valueAsString}}}
{AST_ROOT_SC2NF{{final}{int}{spaces}}}
{AST_ROOT_SC2NF{{final}{{Long}}{increment}}}
{AST_ROOT_SC2NF{{final}{long}{threshold}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{tz}}}
{AST_ROOT_SC2NF{{final}{int}{tokenLen}}}
{AST_ROOT_SC2NF{{final}{int}{value}}}
{AST_ROOT_SC2NF{{final}{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{long}{fetchCheckInterval}{(}{{final}{{EventCountCircuitBreaker}}{breaker}}{)}{{{}{{return}{{breaker}{.}{getClosingInterval}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{long}{fetchCheckInterval}{(}{{final}{{EventCountCircuitBreaker}}{breaker}}{)}{{{}{{return}{{breaker}{.}{getOpeningInterval}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{delta}}}
{AST_ROOT_SC2NF{{final}{{State}}{state}}}
{AST_ROOT_SC2NF{{final}{{State}}{newState}}}
{AST_ROOT_SC2NF{{final}{int}{increment}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{increment}}}
{AST_ROOT_SC2NF{{private}{NotVisibleException}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{allowDuplicate}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{{?}{extends}{{Throwable}}}{>}}{type}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{final}{{String}}{key}}}
{AST_ROOT_SC2NF{{final}{long}{nanos}}}
{AST_ROOT_SC2NF{{final}{int}{max}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{decomposed}}}
{AST_ROOT_SC2NF{{final}{int}{maxWidth}}}
{AST_ROOT_SC2NF{{final}{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{zeroThreshold}{)}}}{;}}{{{assertTrue}{(}{STRING_CONSTANT}{,}{{circuit}{.}{incrementAndCheckState}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{UnsupportedOperationException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{UnsupportedOperationException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{UnsupportedOperationException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{long}{{randomResult}{=}{{RandomUtils}{.}{nextLong}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{randomResult}{=}{{RandomUtils}{.}{nextFloat}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{randomResult}{=}{{RandomUtils}{.}{nextDouble}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{randomResult}{=}{{RandomUtils}{.}{nextInt}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{result}{=}{{mutableFloat}{.}{addAndGet}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{result}{=}{{mutableFloat}{.}{getAndAdd}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{TestThrowable}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{IOException}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{RuntimeException}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{Error}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{throw}{{new}{{IOException}}{()}}{;}}{}}}{{catch}{(}{{final}{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{<}{{Integer}}{>}{rethrow}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{final}{byte}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{byte}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{byte}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{byte}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{short}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{short}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{short}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{short}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{mutableDouble}{.}{addAndGet}{(}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{mutableDouble}{.}{getAndAdd}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IllegalAccessException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{<}{{Integer}}{>}{rethrow}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{<}{{Boolean}}{>}{rethrow}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Format}}{{fdf}{=}{{FastDateFormat}{.}{getInstance}{(}{pattern}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{StateStrategy}}{{strategy}{=}{{STRATEGY_MAP}{.}{get}{(}{state}{)}}}{;}}{{return}{strategy}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{time}{=}{{now}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{InterruptedException}}{iex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{regex}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{sIdx}{=}{{idx}{+}{{pos}{.}{getIndex}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{c}{=}{{value}{.}{charAt}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ParsePosition}}{{pp}{=}{{new}{{ParsePosition}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{c}{=}{{pattern}{.}{charAt}{(}{currentIdx}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{intValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{short}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{shortValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{short}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{short}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{short}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{longValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{long}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{(}{SWEDEN}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{(}{tz}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{float}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{floatValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{float}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{float}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{float}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{ExecutorService}}{{exec}{=}{{Executors}{.}{newSingleThreadExecutor}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Locale}}{{save}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{save}{=}{{TimeZone}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{String}}{{date}{=}{STRING_CONSTANT}}{;}}{{{DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT}{.}{parse}{(}{date}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{encoding}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{methodStr}{=}{{m}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Exception}}{ex}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{lastHold}{=}{start}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{value}{=}{{calendar}{.}{get}{(}{Calendar.DAY_OF_WEEK}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{IOException}}{ioe}}{)}{{{}{{{ExceptionUtils}{.}{rethrow}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{CharSequence}}{searchCharSequence}}{:}{searchCharSequences}{)}{{{}{{if}{(}{{contains}{(}{cs}{,}{searchCharSequence}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{CharSequence}}{next}}{:}{searchStrings}{)}{{{}{{if}{(}{{equalsIgnoreCase}{(}{string}{,}{next}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{final}{{CharSequence}}{next}}{:}{searchStrings}{)}{{{}{{if}{(}{{equals}{(}{string}{,}{next}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{System}{.}{getProperty}{(}{key}{)}}{;}}{}}}{{catch}{(}{{final}{{SecurityException}}{scex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{{clonedIndices}{=}{{clone}{(}{indices}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{final}{short}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Object}}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{float}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{byte}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{StopWatch}}{{sw}{=}{{new}{{StopWatch}}{()}}}{;}}{{{sw}{.}{start}{()}}{;}}{{return}{sw}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Pattern}}{{patternToWrapOn}{=}{{Pattern}{.}{compile}{(}{wrapOn}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{utc}{=}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{balance}{=}{NUMBER_CONSTANT}}{;}}{{for}{(}{{final}{{Transaction}}{tx}}{:}{transactions}{)}{{{}{{{balance}{+=}{tx.amount}}{;}}{}}}}{{return}{balance}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{DateParser}}{{parser}{=}{{getInstance}{(}{YMD_SLASH}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{(}{tz}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{byte}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{byteValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{byte}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{byte}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{byte}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{doubleValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Diff}}{<}{?}{>}}{diff}}}
{AST_ROOT_SC2NF{{{methodName}{.}{equals}{(}{{method}{.}{getName}{()}}{)}}{&&}{{Objects}{.}{deepEquals}{(}{parameterTypes}{,}{{method}{.}{getParameterTypes}{()}}{)}}}}
{AST_ROOT_SC2NF{{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{{memoizer}{=}{{new}{{{Memoizer}}{<>}}{(}{computable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{{memoizer}{=}{{new}{{{Memoizer}}{<>}}{(}{computable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{{memoizer}{=}{{new}{{{Memoizer}}{<>}}{(}{computable}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{StrategyParser}}{{fm}{=}{{new}{{StrategyParser}}{(}{definingCalendar}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setCycle}{(}{{final}{{TestRecursiveCycleObject}}{cycle}}{)}{{{}{{{{this}{.}{cycle}}{=}{cycle}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestRecursiveCycleObject}{(}{{final}{int}{n}}{)}{{{}{{{{this}{.}{n}}{=}{n}}{;}}{{{{this}{.}{cycle}}{=}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestRecursiveInnerObject}{(}{{final}{int}{n}}{)}{{{}{{{{this}{.}{n}}{=}{n}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{offset}}}
{AST_ROOT_SC2NF{{final}{boolean}{testRecursive}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{excludeFields}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{final}{boolean}{testRecursive}}}
{AST_ROOT_SC2NF{{final}{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{final}{{{Locale}}{[]}}{{availableLocales}{=}{{NumberFormat}{.}{getAvailableLocales}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mRule}{.}{appendTo}{(}{buffer}{,}{{calendar}{.}{getWeekYear}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{compareTo}{(}{{BigDecimal}{.}{valueOf}{(}{{d}{.}{doubleValue}{()}}{)}}{)}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{d}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{spaceToWrapAt}{=}{{{matcher}{.}{start}{()}}{+}{offset}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}{)}}{final}{{{String}}{[]}}{{sa}{=}{{ArrayUtils}{.}{add}{(}{stringArray}{,}{NUMBER_CONSTANT}{,}{aString}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{final}{{T}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{locale}}{,}{expectedPattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{pattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{{baseStr}{+}{STRING_CONSTANT}{+}{{System}{.}{lineSeparator}{()}}{+}{STRING_CONSTANT}}{,}{{{new}{{ToStringBuilder}}{(}{base}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newLine}{==}{null}}{)}{{{}{{{append}{(}{{System}{.}{lineSeparator}{()}}{)}}{;}}{{return}{this}{;}}{}}}}{{return}{{append}{(}{newLine}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{linebreak}{=}{{System}{.}{lineSeparator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{linebreak}{=}{{System}{.}{lineSeparator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{{System}{.}{lineSeparator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{{System}{.}{lineSeparator}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLineStr}{==}{null}}{)}{{{}{{{newLineStr}{=}{{System}{.}{lineSeparator}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldName}{==}{null}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{super}{.}{appendFieldStart}{(}{buffer}{,}{{FIELD_NAME_QUOTE}{+}{fieldName}{+}{FIELD_NAME_QUOTE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{CharUtils}{.}{isAsciiPrintable}{(}{CHAR_COPY}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{GenericDeclaration}}{{d}{=}{{var}{.}{getGenericDeclaration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameLocalTime}{(}{{Calendar}{.}{getInstance}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameLocalTime}{(}{null}{,}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{{Calendar}{.}{getInstance}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{null}{,}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{{new}{{Date}}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{null}{,}{{new}{{Date}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{{Calendar}{.}{getInstance}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{null}{,}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{{new}{{Date}}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{null}{,}{{new}{{Date}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{LocaleUtils}{.}{toLocale}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{NUMBER_CONSTANT}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{NUMBER_CONSTANT}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{BAR}{,}{{ObjectUtils}{.}{toString}{(}{null}{,}{BAR}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ObjectUtils}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{intRange}{=}{{Range}{.}{between}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{BooleanUtils}{.}{toString}{(}{null}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringYesNo}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringOnOff}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringTrueFalse}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toIntegerObject}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{BooleanUtils}{.}{isNotFalse}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{BooleanUtils}{.}{isFalse}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{BooleanUtils}{.}{isNotTrue}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{BooleanUtils}{.}{isTrue}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ClassUtils}{.}{getSimpleName}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{StrMatcher}{.}{noneMatcher}{()}}{,}{{StrMatcher}{.}{stringMatcher}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{array}{=}{{ArrayUtils}{.}{removeElement}{(}{null}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{array}{=}{{ArrayUtils}{.}{removeElement}{(}{null}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{replace}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{setNullText}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{setNewLineText}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb5}{=}{{new}{{StrBuilder}}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{{cyclicCause}{.}{getCause}{()}}{.}{getCause}{()}}{,}{{throwables}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{{cyclicCause}{.}{getCause}{()}}{.}{getCause}{()}}{,}{{throwables}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{{cyclicCause}{.}{getCause}{()}}{.}{getCause}{()}}{,}{{ExceptionUtils}{.}{getRootCause}{(}{cyclicCause}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<=}{start}}{||}{{value}{>=}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{message}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<=}{start}}{||}{{value}{>=}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{message}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<}{start}}{||}{{value}{>}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{message}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<}{start}}{||}{{value}{>}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{message}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{longRange}{=}{{Range}{.}{between}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{null}{,}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{null}{,}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{parseLocale}{(}{str}{)}}{;}}}
{AST_ROOT_SC2NF{{{classes}{.}{add}{(}{NUMBER_CONSTANT}{,}{cls}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{trace}{.}{contains}{(}{TEST_MESSAGE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{trace}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{trace}{.}{contains}{(}{TEST_MESSAGE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{trace}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{stackTrace}{.}{contains}{(}{ExceptionUtils.WRAPPED_MARKER}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{stackTrace}{.}{contains}{(}{ExceptionUtils.WRAPPED_MARKER}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{contextMessage}{.}{contains}{(}{TEST_MESSAGE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Integer}}{>}}{{toRemove}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{super}{.}{reflectionAppendArrayDetail}{(}{buffer}{,}{fieldName}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{static}{{String}}{getFieldName}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{SelfInstanceTwoVarsReflectionTestFixture}{()}{{{}{{{{this}{.}{typeIsSelf}}{=}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{SelfInstanceVarReflectionTestFixture}{()}{{{}{{{{this}{.}{typeIsSelf}}{=}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{TestSubObject}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{StrMatcher}{.}{noneMatcher}{()}}{,}{{StrMatcher}{.}{charSetMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{noNullElements}{(}{values}{)}}{;}}{{return}{{generateBitVector}{(}{enumClass}{,}{{Arrays}{.}{asList}{(}{values}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{TypeUtils}{.}{wrap}{(}{{(}{{Type}}{)}{type}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{typeArguments}{==}{null}}{)}{{{}{{{typeArguments}{=}{{Collections}{.}{emptyMap}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{StringUtils}{.}{containsOnly}{(}{str}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{StringUtils}{.}{containsOnly}{(}{str}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{StringUtils}{.}{containsOnly}{(}{str}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ObjectUtils}{.}{firstNonNull}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{event2}{(}{{{PropertyChangeEvent}}{e}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{event1}{(}{{{PropertyChangeEvent}}{e}}{)}{;}}}
{AST_ROOT_SC2NF{{TestSubObject}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{{objectData}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{SerializationUtils}{.}{deserialize}{(}{{new}{{ByteArrayInputStream}}{(}{objectData}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{strColl}{=}{{Arrays}{.}{asList}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{strColl}{=}{{Arrays}{.}{asList}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{TestEmptySubObject}{(}{{final}{int}{a}}{)}{{{}{{super}{(}{a}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{TestSubObject}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{BackgroundInitializerTestImpl}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{NestableException}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{options}{!=}{null}}{&&}{{options}{.}{contains}{(}{option}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{arraylistInitialCapacity}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{ARRAYLIST_INITIAL_CAPACITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{ARRAYLIST_INITIAL_CAPACITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{wrapChar}{==}{CharUtils.NUL}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{wrapWith}{==}{CharUtils.NUL}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{wrapWith}{==}{CharUtils.NUL}}}{)}{{{}{{return}{str}{;}}{}}}}{{return}{{wrapWith}{+}{str}{+}{wrapWith}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{oldEnd}}}{;}{{i}{<}{newEnd}}{;}{{i}{++}}{)}{{{}{{{{buffer}{[}{i}{]}}{=}{CharUtils.NUL}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{unwrap}{(}{null}{,}{CharUtils.NUL}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{ObjectUtils}{.}{equals}{(}{object1}{,}{object2}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{obj}{instanceof}{{TypeLiteral}}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isFalse}{()}{{{}{{return}{{!}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isTrue}{()}{{{}{{return}{value}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{expression}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{DEFAULT_VALID_STATE_EX_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{expression}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{DEFAULT_IS_TRUE_EX_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{obj}{instanceof}{{FastDateFormat}}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{obj}{instanceof}{{Fraction}}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{obj}{instanceof}{{FastDatePrinter}}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{toClass}{.}{isPrimitive}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isAsciiNumeric}{(}{ch}{)}}}{)}{{{}{{return}{defaultValue}{;}}{}}}}{{return}{{ch}{-}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{obj}{instanceof}{{CharSet}}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{I}}{arg}}}
{AST_ROOT_SC2NF{{final}{{{Pair}}{<}{{IDKey}}{,}{{IDKey}}{>}}{{swappedPair}{=}{{Pair}{.}{of}{(}{{pair}{.}{getRight}{()}}{,}{{pair}{.}{getLeft}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{hasNext}}{)}{{{}{{throw}{{new}{{NoSuchElementException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{obj}{instanceof}{{CharRange}}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{CharUtils}{.}{toIntValue}{(}{CHAR_CONS}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{tzId}{.}{equalsIgnoreCase}{(}{TimeZones.GMT_ID}{)}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{cal}{.}{setTimeZone}{(}{{TimeZone}{.}{getTimeZone}{(}{{TimeZones.GMT_ID}{+}{value}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{cal}{.}{setTimeZone}{(}{{TimeZone}{.}{getTimeZone}{(}{TimeZones.GMT_ID}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toAppendTo}{.}{append}{(}{{{(}{{(}{{String}}{)}{obj}}{)}}{.}{toUpperCase}{(}{Locale.ROOT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{expected}{.}{append}{(}{{{{args}{[}{NUMBER_CONSTANT}{]}}{.}{toString}{()}}{.}{toUpperCase}{(}{Locale.ROOT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{StringUtils}{.}{equalsAny}{(}{FOO}{,}{{FOO}{.}{toUpperCase}{(}{Locale.ROOT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{toAppendTo}{.}{append}{(}{{{(}{{(}{{String}}{)}{obj}}{)}}{.}{toLowerCase}{(}{Locale.ROOT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{utc}{=}{{FastTimeZone}{.}{getGmtTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TimeZone}{.}{setDefault}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{utc}{=}{{FastTimeZone}{.}{getGmtTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{timeZone}{=}{{FastTimeZone}{.}{getGmtTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{TimeZone}}{{timeZone}{=}{{FastTimeZone}{.}{getGmtTimeZone}{()}}}{;}}{{{assertFormats}{(}{expectedValue}{,}{pattern}{,}{timeZone}{,}{{createFebruaryTestDate}{(}{timeZone}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{substring}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{getContent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tokenizer}{.}{nextToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ObjectUtils}{.}{identityToString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{strip}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{trim}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toStringYesNo}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toStringOnOff}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toStringTrueFalse}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toBooleanObject}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toIntegerObject}{(}{null}{,}{six}{,}{seven}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toIntegerObject}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toBooleanObject}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{BooleanUtils}{.}{toBooleanObject}{(}{{(}{{Integer}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{unescapeJson}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{escapeJson}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{unescapeCsv}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{escapeCsv}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{escapeEcmaScript}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{escapeEcmaScript}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{unescapeJava}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringEscapeUtils}{.}{escapeJava}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{{new}{{{MutableObject}}{<>}}{()}}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{getDigits}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{wrap}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{rotate}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ClassUtils}{.}{getAllInterfaces}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ClassUtils}{.}{getAllSuperclasses}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{swapCase}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{initials}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{uncapitalize}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{uncapitalize}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{capitalizeFully}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{capitalizeFully}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{capitalize}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{WordUtils}{.}{capitalize}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertNull}{(}{{CharUtils}{.}{unicodeEscaped}{(}{null}{)}}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{CharUtils}{.}{unicodeEscaped}{(}{CHARACTER_A}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{CharUtils}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Double.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Float.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Long.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{{Integer}}{[]}}{{iArray}{=}{null}}{;}}{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{iArray}{,}{Integer.MIN_VALUE}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Integer.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{s}{,}{Short.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{,}{Byte.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{,}{Character.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{null}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ArrayUtils}{.}{toMap}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertNull}{(}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNull}{(}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{toString}{.}{indexOf}{(}{SECRET_VALUE}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}{{{this}{.}{validateNonSecretField}{(}{toString}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{ArrayUtils.INDEX_NOT_FOUND}{,}{{toString}{.}{indexOf}{(}{SECRET_VALUE}{)}}{)}}{;}}{{{this}{.}{validateNonSecretField}{(}{toString}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNotEquals}{(}{{summer}{.}{getTime}{()}}{,}{{standard}{.}{getTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{cal}{.}{getTime}{()}}{,}{date}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{value}{,}{{SerializationUtils}{.}{deserialize}{(}{serialized}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{watch}{.}{getStartTime}{()}}{;}}{{{assertTrue}{(}{{{watch}{.}{getStartTime}{()}}{>=}{beforeStopWatch}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUTC}{()}{{{}{{{assertEquals}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{,}{{FastTimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZ}{()}{{{}{{{assertEquals}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{,}{{FastTimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBareGmt}{()}{{{}{{{assertEquals}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{,}{{FastTimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testGetGmtTimeZone}{()}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{FastTimeZone}{.}{getGmtTimeZone}{()}}{.}{getRawOffset}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{REPEAT}{,}{{{future}{.}{get}{()}}{.}{intValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{TypeUtils}{.}{toString}{(}{{method}{.}{getGenericReturnType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{TypeUtils}{.}{isAssignable}{(}{fromType}{,}{failingToType}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{expectedArray}{,}{{TypeUtils}{.}{normalizeUpperBounds}{(}{typeArray}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testInvokeMethodForceAccessNoArgs}{(}{)}{throws}{{Exception}}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{MethodUtils}{.}{invokeMethod}{(}{testBean}{,}{true}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expected}{,}{hostName}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{isoForm}{,}{{printer}{.}{format}{(}{vulgar}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{vulgar}{.}{getTime}{()}}{,}{{cal}{.}{getTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{T}}{object}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{for}{(}{{final}{{String}}{s}}{:}{set}{)}{{{}{{{add}{(}{s}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{excludeNullValues}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{builder}{=}{{new}{{StringBuilder}}{(}{count}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{NoSuchMethodException}}{expected}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{tz}{=}{{FastTimeZone}{.}{getGmtTimeZone}{(}{timeZone}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{boolean}{{result}{=}{{RandomUtils}{.}{nextBoolean}{()}}}{;}}{{{assertTrue}{(}{{{result}{==}{true}}{||}{{result}{==}{false}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{other}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{inDaylightTime}{(}{{final}{{Date}}{date}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setRawOffset}{(}{{final}{int}{offsetMillis}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Class}}{<}{?}{>}}{anInterface}}}
{AST_ROOT_SC2NF{{final}{{ReflectionToStringBuilder}}{{oldBuilder}{=}{{new}{{ReflectionToStringBuilder}}{(}{BOTH_NULL}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{char}{chr}}{:}{chrs}{)}{{{}{{if}{(}{{{chars}{.}{contains}{(}{chr}{)}}{==}{expect}}{)}{{{}{{{buffer}{.}{append}{(}{chr}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{group}}}
{AST_ROOT_SC2NF{{final}{{String}}{group}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{String}}{.}{.}{.}{s}}}
{AST_ROOT_SC2NF{{final}{{CharRange}}{{a}{=}{{CharRange}{.}{is}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{final}{{String}}{value}}}
{AST_ROOT_SC2NF{{{}{{{list}{.}{add}{(}{throwable}{)}}{;}}{{{throwable}{=}{{throwable}{.}{getCause}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{String}{.}{format}{(}{STRING_CONSTANT}{,}{delta}{)}}{,}{{delta}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{performStateCheck}{(}{increment}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeArguments}}{=}{{Arrays}{.}{copyOf}{(}{typeArguments}{,}{typeArguments.length}{,}{{{{Type}}{[]}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{daemon}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{daemon}{=}{{Boolean}{.}{valueOf}{(}{f}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{daemonFlag}{=}{builder.daemon}}{;}}}
{AST_ROOT_SC2NF{{public}{final}{{Boolean}}{getDaemonFlag}{()}{{{}{{return}{daemon}{;}}{}}}}}
{AST_ROOT_SC2NF{{{daemon}{=}{builder.daemon}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{valueAsString}{.}{startsWith}{(}{{getArrayStart}{()}}{)}}{&&}{{valueAsString}{.}{endsWith}{(}{{getArrayEnd}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{defaultString}{(}{str}{,}{EMPTY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{sanitizedSeparator}{=}{{defaultString}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{suffix}{==}{null}}}{)}{{{}{{return}{{str}{==}{suffix}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{prefix}{==}{null}}}{)}{{{}{{return}{{str}{==}{prefix}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{bypassReflectionClasses}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}{{{bypassReflectionClasses}{.}{add}{(}{{{String}}{.}{class}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{,}{{new}{{Random}}{(}{SEED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Field}}{field}}{:}{allFields}{)}{{{}{{if}{(}{{{field}{.}{getName}{()}}{.}{equals}{(}{JACOCO_DATA_FIELD_NAME}{)}}{)}{{{}{{{expected}{++}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Field}}{field}}{:}{allFields}{)}{{{}{{if}{(}{{{field}{.}{getName}{()}}{.}{equals}{(}{JACOCO_DATA_FIELD_NAME}{)}}{)}{{{}{{{expected}{++}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{{buffer}{.}{append}{(}{CHAR_CONS}{)}}{.}{append}{(}{{StringEscapeUtils}{.}{escapeJson}{(}{value}{)}}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{super}{.}{appendFieldStart}{(}{buffer}{,}{{FIELD_NAME_QUOTE}{+}{{StringEscapeUtils}{.}{escapeJson}{(}{fieldName}{)}}{+}{FIELD_NAME_QUOTE}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{iterator}{.}{hasNext}{()}}}{)}{{{}{{return}{{Objects}{.}{toString}{(}{first}{,}{EMPTY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{STRING_BUILDER_SIZE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{STRING_BUILDER_SIZE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{newStringBuilder}{(}{noOfItems}{)}}}{;}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{indexesToRemove}{=}{{}}}{;}}}
{AST_ROOT_SC2NF{{return}{{!}{{str}{.}{isEmpty}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{diffs}{.}{isEmpty}{()}}{)}{{{}{{return}{OBJECTS_SAME_STRING}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{IS_OS_WINDOWS}{?}{{System}{.}{getenv}{(}{STRING_CONSTANT}{)}}{:}{{System}{.}{getenv}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{JSON_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{NO_CLASS_NAME_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{MULTI_LINE_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{SIMPLE_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{SHORT_PREFIX_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{NO_FIELD_NAMES_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{DEFAULT_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{replace}{(}{source}{,}{valueMap}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{getFraction}{(}{{numerator}{/}{gcd}}{,}{{denominator}{/}{gcd}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{{objectData}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{deserialize}{(}{{new}{{ByteArrayInputStream}}{(}{objectData}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{deserialize}{(}{{serialize}{(}{msg}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Throwable}}{{root}{=}{{getRootCause}{(}{th}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Throwable}}{[]}}{{throwables}{=}{{getThrowables}{(}{throwable}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{srcLength}{=}{{getLength}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{NULL}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{tmpHash}{=}{{hashCode}{(}{object}{)}}}{;}}{{{hash}{=}{{{hash}{*}{NUMBER_CONSTANT}}{+}{tmpHash}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{equals}{(}{object1}{,}{object2}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isMatchingExecutable}{(}{{Executable}{.}{of}{(}{method}{)}}{,}{parameterTypes}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isMatchingExecutable}{(}{{Executable}{.}{of}{(}{method}{)}}{,}{parameterTypes}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPackageName}{(}{{getCanonicalName}{(}{canonicalName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getShortClassName}{(}{{getCanonicalName}{(}{canonicalName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{wrap}{(}{{(}{{Type}}{)}{type}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{{isAssignable}{(}{owner}{,}{{raw}{.}{getEnclosingClass}{()}}{)}}{,}{STRING_CONSTANT}{,}{owner}{,}{raw}{)}}{;}}{{{useOwner}{=}{owner}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{parameterizedTypeArguments}{=}{{new}{{{HashMap}}{<>}}{(}{typeArguments}{)}}}{;}}{{{parameterizedTypeArguments}{.}{putAll}{(}{{getTypeArguments}{(}{p}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notNull}{(}{chars}{)}}{;}}}
{AST_ROOT_SC2NF{{{notNull}{(}{collection}{)}}{;}}}
{AST_ROOT_SC2NF{{{notNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{notNull}{(}{iterable}{)}}{;}}}
{AST_ROOT_SC2NF{{{notNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{str}{)}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{replaceFirst}{(}{text}{,}{regex}{,}{EMPTY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{pattern}{.}{matcher}{(}{decomposed}{)}}{.}{replaceAll}{(}{EMPTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{iValue}{==}{NUMBER_CONSTANT}}{?}{Calendar.SUNDAY}{:}{{iValue}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{_mask}{=}{mask}}{;}}{{{_shift_count}{=}{{{mask}{==}{NUMBER_CONSTANT}}{?}{NUMBER_CONSTANT}{:}{{Integer}{.}{numberOfTrailingZeros}{(}{mask}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mRule}{.}{appendTo}{(}{buffer}{,}{{{value}{==}{Calendar.SUNDAY}}{?}{NUMBER_CONSTANT}{:}{{value}{-}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{lhs}{)}{{{}{{{comparison}{=}{NUMBER_CONSTANT}}{;}}{}}}{else}{{{}{{{comparison}{=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rhs}{==}{null}}{)}{{{}{{{comparison}{=}{NUMBER_CONSTANT}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{retDT}{=}{{new}{{DateTime}}{(}{s}{)}}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{pe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{IllegalArgumentException}}{e}}}
{AST_ROOT_SC2NF{{final}{{Object}}{f}}}
{AST_ROOT_SC2NF{{final}{{Object}}{f}}}
{AST_ROOT_SC2NF{{final}{{Object}}{f}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{int}{minDigits}}}
{AST_ROOT_SC2NF{{final}{{DateTimeField}}{field}}}
{AST_ROOT_SC2NF{{final}{{DateTimeField}}{field}}}
{AST_ROOT_SC2NF{{final}{char}{c}}}
{AST_ROOT_SC2NF{{final}{{Object}}{element}}}
{AST_ROOT_SC2NF{{final}{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{final}{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{final}{{DateTimePrinter}}{printer}}}
{AST_ROOT_SC2NF{{final}{{DateTimeFormatter}}{formatter}}}
{AST_ROOT_SC2NF{{final}{{Chronology}}{chrono}}}
{AST_ROOT_SC2NF{{final}{{DateTimeZone}}{zone}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{new}{{LenientChronology}}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{long}{instant}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{final}{long}{millis}}}
{AST_ROOT_SC2NF{{GJWeekyearDateTimeField}{(}{{{ProlepticChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getRoughMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTime}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{get}{(}{{long}{instant}}{)}{{{}{{return}{BuddhistChronology.BE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getNameKey}{(}{{long}{instant}}{)}{{{}{{return}{iNameKey}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{millis}{,}{{{(}{long}{)}{value}}{-}{{get}{(}{millis}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{add}{(}{{long}{millis}}{,}{{long}{value}}{)}{{{}{{return}{{millis}{+}{{value}{*}{iChronology.MILLIS_PER_DAY}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{IllegalArgumentException}}{pe}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{millis}{,}{{{(}{long}{)}{value}}{-}{{get}{(}{millis}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{add}{(}{{long}{millis}}{,}{{long}{value}}{)}{{{}{{return}{{millis}{+}{{value}{*}{iChronology.MILLIS_PER_DAY}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{add}{(}{{long}{millis}}{,}{{long}{value}}{)}{{{}{{return}{{millis}{+}{{value}{*}{iChronology.MILLIS_PER_DAY}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{getMillis}{(}{readableInstant}{)}}{<}{{readableInstant}{.}{getMillis}{(}{this}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Chronology}}{{chrono}{=}{{getChronology}{()}}}{;}}{{return}{{(}{{{chrono}{!=}{null}}{?}{{chrono}{.}{getDateTimeZone}{()}}{:}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{AbstractInstant}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{pe}}{)}{{{}{{{pe}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{retDT}{=}{{new}{{DateTime}}{(}{s}{,}{DateTimeZone.UTC}{)}}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{pe}}{)}{{{}{{{pe}{.}{printStackTrace}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{DateTimeZone}{.}{getDefault}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{DateTimeZone}{.}{getDefault}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{GJMonthOfYearDateTimeField}{(}{{{ProlepticChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getRoughMillisPerMonth}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{public}{abstract}{boolean}{equals}{(}{{{Object}}{object}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{final}{long}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{final}{{ReadableInstant}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{final}{{ReadableInstant}}{instant}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{char}{c}}}
{AST_ROOT_SC2NF{{final}{char}{style}}}
{AST_ROOT_SC2NF{{final}{char}{style}}}
{AST_ROOT_SC2NF{{public}{{RealMatrix}}{copy}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{markNameProcessed}{(}{{nameNode}{.}{getQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNameProcessed}{(}{{nameNode}{.}{getQualifiedName}{()}}{)}}{)}{{{}{{return}{RemovalType.REMOVE_ALL}{;}}{}}}}{{{jsdocNode}{.}{setJSDocInfo}{(}{{getAllTypeJSDoc}{()}}{)}}{;}}{{return}{RemovalType.REMOVE_RHS}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{{new}{{RemoveCode}}{(}{compiler}{)}}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{plot}{.}{setToolTipGenerator}{(}{{new}{{StandardPieToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{plot}{.}{setToolTipGenerator}{(}{{new}{{StandardPieToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getThrowableCount}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{field}{.}{isSupported}{()}}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{{STRING_CONSTANT}{+}{name}{+}{CHAR_CONS}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{text}{.}{length}{()}}{<=}{{sampleLen}{+}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{public}{{DurationPrinter}}{toPrinter}{()}{{{}{{return}{{toFormatter}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{value}{==}{NUMBER_CONSTANT}}{&&}{{iPrintZeroSetting}{==}{PRINT_ZERO_RARELY}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{ReadableIntervalConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{toString}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getMaximumValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getMinimumValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DurationField}}{getLeapDurationField}{(}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{toString}{(}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{getAverageYearMonthType}{(}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{appendDecimal}{(}{field}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSignedDecimal}{(}{{iChronoUTC}{.}{centuryOfEra}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{yearOfCentury}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{yearOfEra}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSignedDecimal}{(}{{iChronoUTC}{.}{year}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{monthOfYear}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{weekyear}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{weekOfWeekyear}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{dayOfYear}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{dayOfMonth}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{dayOfWeek}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{clockhourOfHalfday}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{hourOfHalfday}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{clockhourOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{hourOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{minuteOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{minuteOfHour}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{secondOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{secondOfMinute}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{millisOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{millisOfSecond}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{ymd}{=}{{{{{{new}{{DateTimeFormatterBuilder}}{(}{iChrono}{)}}{.}{append}{(}{{yearElement}{()}}{)}}{.}{append}{(}{{monthElement}{()}}{)}}{.}{append}{(}{{dayOfMonthElement}{()}}{)}}{.}{toFormatter}{()}}}}
{AST_ROOT_SC2NF{{long}{{scaled}{=}{{{fraction}{*}{iScalar}}{/}{iRangeMillis}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{saveField}{(}{{new}{{SavedField}}{(}{field}{,}{text}{,}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{saveField}{(}{{new}{{SavedField}}{(}{field}{,}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sort}{(}{savedFields}{,}{count}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{{value}{<}{NUMBER_CONSTANT}}{?}{NUMBER_CONSTANT}{:}{{(}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}{)}}}{)}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfEven}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{set}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{addWrapped}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{instant}{.}{withMillis}{(}{{addTo}{(}{{instant}{.}{getMillis}{()}}{,}{scalar}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfEven}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{set}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{addWrapped}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfEven}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundHalfFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{roundFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{set}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{addWrapped}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{withMillis}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{ImpreciseCutoverField}{(}{{{DateTimeField}}{julianField}}{,}{{{DateTimeField}}{gregorianField}}{)}{{{}{{this}{(}{julianField}{,}{gregorianField}{,}{null}{,}{false}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{julianField}{,}{gregorianField}{,}{iCutoverInstant}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSignedDecimal}{(}{{iChronoUTC}{.}{weekyear}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{newYear}{=}{{year}{+}{{FieldUtils}{.}{safeToInt}{(}{value}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{wrapped}{=}{{FieldUtils}{.}{getWrappedValue}{(}{year}{,}{value}{,}{{getMinimumValue}{()}}{,}{{getMaximumValue}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{localToUTC}{(}{{{getBase}{()}}{.}{getDateTimeMillis}{(}{year}{,}{monthOfYear}{,}{dayOfMonth}{,}{millisOfDay}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{localToUTC}{(}{{{getBase}{()}}{.}{getTimeOnlyMillis}{(}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{instant}{=}{{{getBase}{()}}{.}{getTimeOnlyMillis}{(}{instant}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{newWeekyear}{=}{{weekyear}{+}{{FieldUtils}{.}{safeToInt}{(}{value}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{wrapped}{=}{{FieldUtils}{.}{getWrappedValue}{(}{weekyear}{,}{value}{,}{{getMinimumValue}{()}}{,}{{getMaximumValue}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeOfYear}}{{dtOfYear}{=}{{getStartOfYear}{()}}}{;}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{ISOYearOfEraDateTimeField.INSTANCE}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationType}{.}{getMillisType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationType}{.}{getAverageYearMonthType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{PRECISE_YEAR_MONTH_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{AVERAGE_YEAR_MONTH_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iChronology}{=}{{selectChronologyUTC}{(}{chronology}{)}}}{;}}{{{iMillis}{=}{{resetUnsupportedFields}{(}{{toLocalTime}{(}{{DateTimeUtils}{.}{currentTimeMillis}{()}}{,}{chronology}{,}{iChronology}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{selectChronology}{(}{chronology}{)}}}{;}}{{{iMillis}{=}{{DateTimeUtils}{.}{currentTimeMillis}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{ISOChronology}{.}{getInstance}{(}{zone}{)}}}{;}}{{{iMillis}{=}{{DateTimeUtils}{.}{currentTimeMillis}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{ISOChronology}{.}{getInstance}{()}}}{;}}{{{iMillis}{=}{{DateTimeUtils}{.}{currentTimeMillis}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{getZone}{()}}{==}{DateTimeZone.UTC}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{UTC}{.}{equals}{(}{{provider}{.}{getZone}{(}{STRING_CONSTANT}{)}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{cProvider}{.}{getZone}{(}{id}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{getZone}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{MutableDateTime}}{(}{{getMillis}{(}{base}{,}{{chronology}{.}{getZone}{()}}{)}}{,}{chronology}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{MutableDateTime}}{(}{{getMillis}{(}{base}{,}{zone}{)}}{,}{{{getChronology}{()}}{.}{withZone}{(}{zone}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTime}}{(}{{getMillis}{(}{base}{,}{{chronology}{.}{getZone}{()}}{)}}{,}{chronology}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTime}}{(}{{getMillis}{(}{base}{,}{zone}{)}}{,}{{{getChronology}{()}}{.}{withZone}{(}{zone}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{instanceof}{{DateTime}}}{&&}{{{getZone}{()}}{==}{zone}}}{)}{{{}{{return}{{(}{{DateTime}}{)}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{sb}{.}{append}{(}{{{getZone}{()}}{.}{getID}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{withUTC}{()}{{{}{{return}{{withZone}{(}{DateTimeZone.UTC}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{getZone}{()}}{==}{DateTimeZone.UTC}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{zone}{,}{{{BuddhistChronology}{.}{getInstance}{(}{zone}{)}}{.}{getZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{zone}{,}{{{BuddhistChronology}{.}{getInstance}{()}}{.}{getZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeZone}}{getZone}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{msg}{+}{STRING_CONSTANT}}{,}{z}{,}{{dt}{.}{getZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{{Object}}{writeReplace}{()}{{{}{{return}{{new}{{Stub}}{(}{{getZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{getBase}{()}}{.}{getZone}{()}}{==}{DateTimeZone.UTC}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{!=}{null}}{&&}{{{chrono}{.}{getZone}{()}}{==}{zone}}}{)}{{{}{{return}{chrono}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{chrono}{.}{withZone}{(}{{DateTimeZone}{.}{getDefault}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{chrono}{==}{null}}{)}{{{}{{{zone}{=}{{DateTimeZone}{.}{getDefault}{()}}}{;}}{}}}{else}{{{}{{{zone}{=}{{chrono}{.}{getZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{getZone}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{chrono}{.}{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{baseZone}{=}{{base}{.}{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{base}{==}{null}}{||}{{isMatchingType}{(}{base}{)}}}{)}{{{}{{return}{{getMillis}{()}}{;}}{}}}}{{return}{{getMillis}{(}{base}{,}{{base}{.}{getZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{chronology}{.}{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{original}{.}{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{withUTC}{()}{{{}{{return}{{withZone}{(}{DateTimeZone.UTC}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{instant}{.}{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{chrono}{.}{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{print}{(}{millisUTC}{,}{{chrono}{.}{getZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{out}{,}{millisUTC}{,}{{chrono}{.}{getZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{buf}{,}{millisUTC}{,}{{chrono}{.}{getZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{getZone}{()}}}
{AST_ROOT_SC2NF{{{ZonedDurationField}}{{zonedField}{=}{{new}{{ZonedDurationField}}{(}{field}{,}{{getZone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{localToUTC}{(}{{{getBase}{()}}{.}{getDateTimeMillis}{(}{{instant}{+}{{{getZone}{()}}{.}{getOffset}{(}{instant}{)}}}{,}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{UnivariateImplTest}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInitialCapacity}{(}{initialCapacity}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInitialCapacity}{(}{initialCapacity}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{{(}{{(}{{ExpandableDoubleArray}}{)}{da}}{)}}{.}{getInternalLength}{()}}{<}{{(}{{{(}{int}{)}{NUMBER_CONSTANT}}{*}{NUMBER_CONSTANT}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{da}{=}{{new}{{ContractableDoubleArray}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{da}{=}{{new}{{ExpandableDoubleArray}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{synchronized}{void}{clear}{()}{{{}{{{eDA}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{{eDA}{.}{getElements}{()}}{,}{NUMBER_CONSTANT}{,}{copiedArray}{,}{NUMBER_CONSTANT}{,}{{eDA}{.}{getNumElements}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{void}{tearDown}{(}{)}{throws}{{Exception}}{{{}{{{da}{=}{null}}{;}}{{{ra}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{{(}{{numElements}{+}{startIndex}}{)}}}}
{AST_ROOT_SC2NF{{i}{<}{{(}{{numElements}{+}{startIndex}}{)}}}}
{AST_ROOT_SC2NF{{void}{clear}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{getElements}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{{String}}{{msg}{=}{STRING_CONSTANT}}{;}}{{throw}{{new}{{ArrayIndexOutOfBoundsException}}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getN}{()}{{{}{{return}{{eDA}{.}{getNumElements}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{{n}{=}{{(}{double}{)}{{u}{.}{getN}{()}}}}{;}}}
{AST_ROOT_SC2NF{{abstract}{int}{getWindowSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{windowSize}{!=}{Univariate.INFINITE_WINDOW}}}
{AST_ROOT_SC2NF{{windowSize}{!=}{Univariate.INFINITE_WINDOW}}}
{AST_ROOT_SC2NF{{{windowSize}{!=}{Univariate.INFINITE_WINDOW}}{&&}{{windowSize}{<}{{list}{.}{size}{()}}}}}
{AST_ROOT_SC2NF{{{windowSize}{!=}{Univariate.INFINITE_WINDOW}}{&&}{{windowSize}{<}{{list}{.}{size}{()}}}}}
{AST_ROOT_SC2NF{{windowSize}{!=}{Univariate.INFINITE_WINDOW}}}
{AST_ROOT_SC2NF{{public}{CertifiedDataTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{lower}{+}{{(}{int}{)}{{(}{{{rand}{.}{nextDouble}{()}}{*}{{(}{{{upper}{-}{lower}}{+}{NUMBER_CONSTANT}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{getColumnDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getRowDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{isSingular}{(}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{isSquare}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getDeterminant}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{transpose}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{windowSize}{!=}{Univariate.INFINITE_WINDOW}}{)}{{{}{{return}{{super}{.}{getVariance}{()}}{;}}{}}}}{{return}{{{variance}{<}{NUMBER_CONSTANT}}{?}{NUMBER_CONSTANT}{:}{variance}}{;}}{}}}}
{AST_ROOT_SC2NF{{{variance}{=}{{accum}{/}{{(}{double}{)}{{(}{{values.length}{-}{NUMBER_CONSTANT}}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{sum}{(}{values}{)}}{/}{{(}{double}{)}{values.length}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumLog}{(}{values}{)}}{/}{{(}{double}{)}{values.length}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{Gamma}{.}{logGamma}{(}{x}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}{{return}{sumYY}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geometricMean}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mean}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geoMean}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{product}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{.}{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{getWindowSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{clear}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getSumsq}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getSum}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getMin}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getMax}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getStandardDeviation}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getVariance}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getMean}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getKurtosis}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{sum}{(}{values}{)}}{/}{{(}{double}{)}{values.length}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geometricMean}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{product}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{{variance}{=}{{{(}{{n}{<}{NUMBER_CONSTANT}}{)}}{?}{NUMBER_CONSTANT}{:}{{m2}{/}{{(}{double}{)}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{super}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{{(}{double}{)}{length}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{init}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{super}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{super}{.}{clear}{()}}{;}}{{{lastVar}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{UnivariateImpl}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{void}{clear}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{test}{(}{values}{,}{begin}{,}{length}{)}}{)}{{{}{{return}{{{sum}{.}{evaluate}{(}{values}{)}}{/}{{(}{{(}{double}{)}{length}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{UnivariateRealSolverFactory}{()}{{{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{begin}}}{;}{{i}{<}{l}}{;}{{i}{++}}{)}{{{}{{{increment}{(}{{values}{[}{i}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{root}{=}{{UnivariateRealSolverUtil}{.}{solve}{(}{rootFindingFunction}{,}{{bracket}{[}{NUMBER_CONSTANT}{]}}{,}{{bracket}{[}{NUMBER_CONSTANT}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{increment}{(}{{final}{double}{d}}{)}{{{}{{{super}{.}{increment}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setPropertyName}{(}{{final}{{String}}{string}}{)}{{{}{{{propertyName}{=}{string}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{void}{setPercentile}{(}{{final}{double}{p}}{)}{{{}{{{percentile}{=}{p}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{final}{{Throwable}}{throwable}}{)}{{{}{{super}{(}{throwable}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{final}{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{n}}}
{AST_ROOT_SC2NF{{final}{int}{n}}}
{AST_ROOT_SC2NF{{final}{int}{n}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{public}{MathException}{(}{{final}{{Throwable}}{throwable}}{)}{{{}{{super}{(}{throwable}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathException}{(}{{final}{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{final}{double}{d}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{msg}{=}{STRING_CONSTANT}}{;}}{{throw}{{new}{{ArrayIndexOutOfBoundsException}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{expansionFactor}{<}{NUMBER_CONSTANT}}{)}{{{}{{{String}}{{msg}{=}{STRING_CONSTANT}}{;}}{{throw}{{new}{{IllegalArgumentException}}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{b}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomialDistribution}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{public}{DistributionFactoryImpl}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{UnivariateRealSolverFactoryImpl}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{BeanListUnivariateImpl}{(}{{{List}}{list}}{)}{{{}{{this}{(}{list}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ConvergenceException}{(}{{{String}}{message}}{)}{{{}{{this}{(}{message}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setPropertyName}{(}{property}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setName}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{final}{{Throwable}}{throwable}}{)}{{{}{{this}{(}{null}{,}{throwable}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{final}{{String}}{message}}{)}{{{}{{this}{(}{message}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{min}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{max}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{variance}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mean}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{prod}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{BeanListUnivariateImpl}}{(}{patientList}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{list}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{externalList}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{new}{{StorelessDescriptiveStatisticsImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{StorelessDescriptiveStatisticsImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{externalList}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Complex}}{(}{{{MathUtils}{.}{sinh}{(}{a2}{)}}{/}{d}}{,}{{{Math}{.}{sin}{(}{b2}{)}}{/}{d}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Complex}}{(}{{{Math}{.}{sin}{(}{a2}{)}}{/}{d}}{,}{{{MathUtils}{.}{sinh}{(}{b2}{)}}{/}{d}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{URL}}{{url}{=}{{{getClass}{()}}{.}{getResource}{(}{STRING_CONSTANT}{)}}}{;}}{{{vs}{.}{setValuesFileURL}{(}{url}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{.}{load}{(}{url}{)}}{;}}}
{AST_ROOT_SC2NF{{{vs}{.}{resetReplayFile}{()}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{stats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{u}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{u}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{u}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{long}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{StatisticalSummary}}{sampleStats}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{list}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractDescriptiveStatistics}{(}{{int}{window}}{)}{{{}{{{setWindowSize}{(}{window}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractDescriptiveStatistics}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{new}{{Complex}}{(}{{{Math}{.}{abs}{(}{{z}{.}{getImaginary}{()}}{)}}{/}{{(}{{NUMBER_CONSTANT}{*}{t}}{)}}}{,}{{{MathUtils}{.}{indicator}{(}{b}{)}}{*}{t}}{)}}}
{AST_ROOT_SC2NF{{public}{double}{getMean}{()}{{{}{{return}{{{new}{{Mean}}{(}{secondMoment}{)}}{.}{getResult}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{.}{load}{(}{url}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNext}{(}{)}{throws}{{Exception}}{{{}{{{tstGen}{(}{NUMBER_CONSTANT}{)}}{;}}{{{tstDoubleGen}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fail}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{Number}}{)}{{PropertyUtils}{.}{getProperty}{(}{o}{,}{{getPropertyName}{()}}{)}}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{f}{.}{inverseCumulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{f}{.}{cumulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{actual}{=}{{{{DistributionFactory}{.}{newInstance}{()}}{.}{createGammaDistribution}{(}{a}{,}{b}{)}}{.}{inverseCumulativeProbability}{(}{p}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{actual}{=}{{{{DistributionFactory}{.}{newInstance}{()}}{.}{createGammaDistribution}{(}{a}{,}{b}{)}}{.}{cumulativeProbability}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{b}{.}{cumulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testcumulativeProbability8}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability1}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability001}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{getSlopeStdErr}{()}}{*}{{{getTDistribution}{()}}{.}{inverseCumulativeProbability}{(}{{NUMBER_CONSTANT}{-}{{alpha}{/}{NUMBER_CONSTANT}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{tDistribution}{.}{cumulativeProbability}{(}{{-}{t}}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{tDistribution}{.}{cumulativeProbability}{(}{{-}{t}}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{chiSquaredDistribution}{.}{cumulativeProbability}{(}{{chiSquare}{(}{expected}{,}{observed}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{chiSquare}{.}{inverseCumulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{chiSquare}{.}{cumulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{z}{.}{inverseCumulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{PRECISION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{z}{.}{cumulativeProbability}{(}{{{z}{.}{getMean}{()}}{+}{{z}{.}{getStandardDeviation}{()}}}{)}}{,}{PRECISION}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{z}{.}{cumulativeProbability}{(}{mu}{)}}{,}{PRECISION}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{inverseCumulativeProbability}{(}{p}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{cumulativeProbability}{(}{x}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbabilityPositive}{()}{{{}{{{testValue}{(}{Double.NaN}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbabilityOne}{()}{{{}{{{testValue}{(}{Double.POSITIVE_INFINITY}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbabilityZero}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbabilityZero}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability900}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability950}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability975}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability990}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability999}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability100}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability050}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability025}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability010}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability001}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability900}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability950}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability975}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability990}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability100}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability050}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability025}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability010}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability001}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{h}{.}{cumulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability1}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability0}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{inverseCumulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{cumulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCumulativeProbability999}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCumulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PolynomialFunction}}{{f}{=}{{new}{{PolynomialFunction}}{(}{c}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathException}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathException}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{{bp}{[}{row}{]}}{[}{col}{]}}{=}{{{bv}{[}{{permutation}{[}{row}{]}}{]}}{[}{col}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{luDecompose}{()}}{;}}{{return}{false}{;}}{}}}{{catch}{(}{{{InvalidMatrixException}}{ex}}{)}{{{}{{return}{true}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{new}{{RealMatrixImpl}}{(}{testData2}{)}}{)}}{.}{luDecompose}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{test}{(}{values}{,}{begin}{,}{length}{)}}{)}{{{}{{return}{{{sum}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{{(}{{(}{double}{)}{length}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{AbstractDescriptiveStatistics}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}{{{ex}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ExpandableDoubleArray}}{{eDA3}{=}{{newInstance}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ExpandableDoubleArray}}{{eDA2}{=}{{newInstance}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{{new}{{Character}}{(}{v}{)}}{)}}}{;}}{}}}{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{{new}{{Long}}{(}{v}{)}}{)}}}{;}}{}}}{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{{new}{{Long}}{(}{v}{)}}{)}}}{;}}{}}}{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{v}{)}}}{;}}{}}}{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{tDistribution}{=}{{{getDistributionFactory}{()}}{.}{createTDistribution}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{tDistribution}{=}{{{getDistributionFactory}{()}}{.}{createTDistribution}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquaredDistribution}}{{chiSquaredDistribution}{=}{{{getDistributionFactory}{()}}{.}{createChiSquareDistribution}{(}{df}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquaredDistribution}}{{chiSquaredDistribution}{=}{{{getDistributionFactory}{()}}{.}{createChiSquareDistribution}{(}{{{(}{double}{)}{expected.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{eDA}{=}{{new}{{ResizableDoubleArray}}{()}}}{;}}{{{setWindowSize}{(}{window}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Iterator}}{{iter}{=}{{{freqTable}{.}{keySet}{()}}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{freqTable}{=}{{new}{{TreeMap}}{(}{comparator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{det}{=}{parity}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{super}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{moment.n}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{{}{{return}{{moment.m2}{/}{{(}{{{(}{double}{)}{moment.n}}{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{sumSq}{+=}{{{values}{[}{i}{]}}{*}{{values}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{variance}{.}{increment}{(}{d}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{variance}{=}{{new}{{Variance}}{(}{m2}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{{new}{{UnivariateRealSolverFactoryImpl}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{{new}{{DistributionFactoryImpl}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{{new}{{DescriptiveStatisticsImpl}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{resetFunctionValueAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getFunctionValueAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{resetRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{resetAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{getAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getMaximalIterationCount}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumOfLogs}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{{(}{double}{)}{length}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{sumOfLogs}{.}{increment}{(}{d}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{os}{+=}{{{m}{.}{getEntry}{(}{i}{,}{j}{)}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{os}{+=}{{{m}{.}{getEntry}{(}{i}{,}{j}{)}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getInstance}{()}}{.}{format}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{InvalidMatrixException}{(}{{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPoissonDistribution}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPoissonDistribution}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{Math}{.}{abs}{(}{{homoscedasticT}{(}{m1}{,}{m2}{,}{v1}{,}{v2}{,}{n1}{,}{n2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{RandomDataTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{{{randomData}{=}{{new}{{RandomDataImpl}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rand}{==}{null}}{)}{{{}{{{rand}{=}{{new}{{JDKRandomGenerator}}{()}}}{;}}{}}}}{{{rand}{.}{setSeed}{(}{{System}{.}{currentTimeMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rand}{==}{null}}{)}{{{}{{{rand}{=}{{new}{{JDKRandomGenerator}}{()}}}{;}}{}}}}{{{rand}{.}{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{ran}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{MatrixUtils}{.}{createBigIdentityMatrix}{(}{{this}{.}{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{{this}{.}{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{MathUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{float}{{sign}{=}{{indicator}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{sign}{=}{{indicator}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{numberOfSuccesses}{>}{populationSize}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{x}{<}{a}}{||}{{a}{<}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{a}{>=}{NUMBER_CONSTANT}}{&&}{{x}{>}{a}}}}
{AST_ROOT_SC2NF{{public}{AbstractRandomGeneratorTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{{{randomData}{=}{{new}{{RandomDataImpl}}{(}{testGenerator}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{fm}{*}{fmin}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{min}{=}{m}}{;}}{}}}{else}{{{}{{{max}{=}{m}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{z}{=}{{new}{{Complex}}{(}{nan}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{Math}{.}{sqrt}{(}{{getRSquare}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumYY}{-}{{{sumXY}{*}{sumXY}}{/}{sumXX}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Number}}{{number}{=}{{format}{.}{parse}{(}{source}{,}{pos}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{format}{.}{format}{(}{value}{,}{toAppendTo}{,}{pos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{FastSineTransformer}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{FastFourierTransformer}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{FastCosineTransformer}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Rotation}}{(}{{-}{q0}}{,}{q1}{,}{q2}{,}{q3}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{eventOccurred}{(}{{double}{t}}{,}{{{double}{[]}}{y}}{)}{{{}{{{sign}{=}{{-}{sign}}}{;}}{{return}{SwitchingFunction.RESET_STATE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{v}{=}{{Vector3D}{.}{multiply}{(}{NUMBER_CONSTANT}{,}{v}{)}}}{;}}}
{AST_ROOT_SC2NF{{{v1}{=}{{Vector3D}{.}{add}{(}{v1}{,}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{v1}{=}{{Vector3D}{.}{subtract}{(}{v1}{,}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{(}{{Polynomial.Rational}}{)}{{p}{.}{multiply}{(}{lcm}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{u}{.}{setElement}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{u}{.}{solve}{(}{b}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{mean}{=}{{sample}{.}{getMean}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{VectorialSampleStatisticsTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{{{points}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getArray}{()}{{{}{{return}{{(}{{double}{[]}}{)}{{internalArray}{.}{clone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{Integer}{.}{toString}{(}{k}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{TestProblem}}{[]}}{)}{{problems}{.}{toArray}{(}{{new}{{{TestProblem}}{[}}{{problems}{.}{size}{()}}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{d}{.}{setElement}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{d}{.}{solve}{(}{b}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{simplex}{[}{i}{]}}{.}{cost}}{>}{pointCostPair.cost}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{PointCostPair}}{[]}}{)}{{minima}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{simplex}{[}{i}{]}}{=}{{new}{{PointCostPair}}{(}{{vertices}{[}{i}{]}}{,}{Double.NaN}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{simplex}{[}{i}{]}}{=}{{new}{{PointCostPair}}{(}{vertex}{,}{Double.NaN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomVectorGenerator}}{{rvg}{=}{{new}{{CorrelatedRandomVectorGenerator}}{(}{{statistics}{.}{getMean}{()}}{,}{{statistics}{.}{getCovarianceMatrix}{(}{null}{)}}{,}{{new}{{UniformRandomGenerator}}{(}{seed}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{largest.cost}{-}{smallest.cost}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{BilinearPattern}}{pattern}}}
{AST_ROOT_SC2NF{{{WeightedMeasurement}}{{m}{=}{{new}{{MyMeasurement}}{(}{NUMBER_CONSTANT}{,}{{{theoretical}{()}}{+}{NUMBER_CONSTANT}}{,}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{WeightedMeasurement}}{{m}{=}{{new}{{MyMeasurement}}{(}{NUMBER_CONSTANT}{,}{{{theoretical}{()}}{+}{NUMBER_CONSTANT}}{,}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{WeightedMeasurement}}{{m}{=}{{new}{{MyMeasurement}}{(}{NUMBER_CONSTANT}{,}{{{theoretical}{()}}{+}{NUMBER_CONSTANT}}{,}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{tearDown}{()}{{{}{{{fitter}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractCurveFitterTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{{{fitter}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fail}{(}{{STRING_CONSTANT}{+}{r}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{while}{(}{true}{)}{{{}{{{sum}{=}{{{sampler}{.}{nextSamplePoint}{()}}{.}{y}}}{;}}{}}}}{}}}{{catch}{(}{{{ExhaustedSampleException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{data}{=}{{mapper}{.}{getDataArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{data}{=}{{mapper}{.}{getDataArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{{mapper}{.}{getDataArray}{()}}{.}{length}}{==}{size}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{while}{(}{true}{)}{{{}{{{sum}{=}{{{sampler}{.}{nextSamplePoint}{()}}{.}{y}}}{;}}{}}}}{}}}{{catch}{(}{{{ExhaustedSampleException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{double}{{originalCost}{=}{{{original}{[}{NUMBER_CONSTANT}{]}}{.}{cost}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{EstimatedParameter}}{[]}}{)}{{coefficients}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{EstimatedParameter}}{[]}}{)}{{coefficients}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{estimator}{.}{estimate}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{largest.cost}{-}{smallest.cost}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{optimum.cost}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{optimum.cost}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{estimatedMean}{=}{{sample}{.}{getMean}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{l}{.}{setElement}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{l}{.}{solve}{(}{b}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{estimatedMean}{=}{{sample}{.}{getMean}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RationalNumber}}{{newCoeff}{=}{{{a}{[}{i}{]}}{.}{multiply}{(}{lcm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{double}{[]}}{)}{{interpolatedState}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ScalarSampleStatisticsTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{{{points}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{SwitchingFunction}}{[]}}{getSwitchingFunctions}{()}{{{}{{return}{{new}{{{SwitchingFunction}}{[}}{NUMBER_CONSTANT}{]}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MaxIterationsExceededException}}{(}{maxIterations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{ConvergenceException}}{()}}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{buildMessage}{(}{pattern}{,}{arguments}{,}{Locale.US}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{buildMessage}{(}{pattern}{,}{arguments}{,}{Locale.US}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{new}{{BigDecimal}}{(}{{Double}{.}{toString}{(}{x}{)}}{)}}{.}{setScale}{(}{scale}{,}{roundingMethod}{)}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{getSlopeStdErr}{()}}{*}{{distribution}{.}{inverseCumulativeProbability}{(}{{NUMBER_CONSTANT}{-}{{alpha}{/}{NUMBER_CONSTANT}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{p}{,}{{new}{{NormalDistributionImpl}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{HypergeometricDistribution}}{{dist}{=}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{ChiSquaredDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{PascalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{PascalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{BinomialDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{BinomialDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{TDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setUp}{()}{{{}{{{super}{.}{setUp}{()}}{;}}{{{testStatistic}{=}{{TestUtils}{.}{getTTest}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUp}{()}{{{}{{{super}{.}{setUp}{()}}{;}}{{{testStatistic}{=}{{TestUtils}{.}{getChiSquareTest}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{MathUtils}{.}{factorial}{(}{test}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x2}{,}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{x2.length}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{internalArray.length}{/}{{(}{{(}{float}{)}{numElements}}{)}}}{)}}{>}{contractionCriteria}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{createDescriptiveStatistics}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RungeKuttaStepInterpolator}}{{rki}{=}{{(}{{RungeKuttaStepInterpolator}}{)}{{prototype}{.}{copy}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{RungeKuttaStepInterpolator}}{{rki}{=}{{(}{{RungeKuttaStepInterpolator}}{)}{{prototype}{.}{copy}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{setSafety}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setSafety}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{ThreeEighthesStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{EulerStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{MidpointStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{GillStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{ClassicalRungeKuttaStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{getCurrentSignedStepsize}{()}{{{}{{return}{stepSize}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getCurrentSignedStepsize}{()}{{{}{{return}{stepSize}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{,}{integ}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{,}{integ}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{,}{integ}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{,}{integ}{)}}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addSwitchingFunction}{(}{stepProblem}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addSwitchingFunction}{(}{stepProblem}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addSwitchingFunction}{(}{stepProblem}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{createComplex}{(}{{-}{real}}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{createComplex}{(}{real}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{SummaryStatistics}}{{stats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}{{{binStats}{.}{add}{(}{i}{,}{stats}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{stats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{stats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{u}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{DescriptiveStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{oneSidedPStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{oneSidedPStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{DescriptiveStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BufferedReader}}{{in}{=}{{new}{{BufferedReader}}{(}{{new}{{InputStreamReader}}{(}{{{{CertifiedDataTest}}{.}{class}}{.}{getResourceAsStream}{(}{resource}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Object}}{[]}}{)}{{arguments}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{ConvergenceException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{new}{{{Object}}{[]}}{{{}{{Integer}{.}{toString}{(}{starts}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{originalCost}{=}{{{original}{[}{NUMBER_CONSTANT}{]}}{.}{getCost}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{simplex}{[}{i}{]}}{.}{getCost}{()}}{>}{{pointCostPair}{.}{getCost}{()}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{largest}{.}{getCost}{()}}{-}{{smallest}{.}{getCost}{()}}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{optimum}{.}{getCost}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{optimum}{.}{getCost}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{largest}{.}{getCost}{()}}{-}{{smallest}{.}{getCost}{()}}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{maxCostEval}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{c}{=}{{NUMBER_CONSTANT}{/}{{(}{{n}{*}{{(}{{isBiasCorrected}{?}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}{:}{n}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{stat}{=}{{new}{{VectorialCovariance}}{(}{{{points}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{stat}{=}{{new}{{VectorialCovariance}}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{VectorialCovariance}}{(}{NUMBER_CONSTANT}{,}{true}{)}}{.}{increment}{(}{{new}{{double}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{covStat}{=}{{new}{{VectorialCovariance}}{(}{{{vertices}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{covStat}{=}{{new}{{VectorialCovariance}}{(}{mean.length}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{covStat}{=}{{new}{{VectorialCovariance}}{(}{mean.length}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{meanImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{geoMeanImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{sumLogImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{maxImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{minImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{sumSqImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{sumImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{u}{.}{setMeanImpl}{(}{{new}{{Sum}}{()}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalStateException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{incrementJacobianEvaluationsCounter}{()}}{;}}}
{AST_ROOT_SC2NF{{{incrementJacobianEvaluationsCounter}{()}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{distribution}{.}{cumulativeProbability}{(}{{-}{t}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{distribution}{.}{cumulativeProbability}{(}{{-}{t}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{distribution}{.}{cumulativeProbability}{(}{{-}{t}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{certifiedValues}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{switchesHandler}{.}{addSwitchingFunction}{(}{function}{,}{maxCheckInterval}{,}{convergence}{,}{maxIterationCount}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{key}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{key}}}
{AST_ROOT_SC2NF{{{}{{{switchesHandler}{.}{addSwitchingFunction}{(}{function}{,}{maxCheckInterval}{,}{convergence}{,}{maxIterationCount}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{functions}{=}{{new}{{{ArrayList}}{<}{{SwitchState}}{>}}{()}}}{;}}{{{first}{=}{null}}{;}}{{{initialized}{=}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{list}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{list}}}
{AST_ROOT_SC2NF{{public}{ListUnivariateImpl}{()}{{{}{{this}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{binCount}}{=}{binCount}}{;}}{{{binStats}{=}{{new}{{{ArrayList}}{<}{{SummaryStatistics}}{>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistributionImpl}{()}{{{}{{{binStats}{=}{{new}{{{ArrayList}}{<}{{SummaryStatistics}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{points}{=}{{new}{{{ArrayList}}{<}{{PointModel}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{steps}{.}{get}{(}{index}{)}}{.}{getInterpolatedState}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{steps}{.}{get}{(}{index}{)}}{.}{getInterpolatedTime}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ContinuousOutputModel}{()}{{{}{{{steps}{=}{{new}{{{ArrayList}}{<}{{StepInterpolator}}{>}}{()}}}{;}}{{{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{points}{=}{{new}{{{ArrayList}}{<}{{PointModel}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{MatrixUtils}{.}{createBigIdentityMatrix}{(}{{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{BigMatrix}}{copy}{()}{{{}{{return}{{new}{{BigMatrixImpl}}{(}{{this}{.}{copyOut}{()}}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{{nRows}{=}{v.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Rotation}}{(}{u}{,}{Vector3D.ZERO}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Vector3D}{.}{angle}{(}{Vector3D.ZERO}{,}{Vector3D.PLUS_I}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Vector3D.ZERO}{.}{normalize}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{Vector3D.ZERO}{.}{getNorm}{()}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{if}{(}{{offset}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{SwitchException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Double}{.}{valueOf}{(}{t}{)}}{}}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Integer}{.}{valueOf}{(}{maxIterations}{)}}{}}}}{)}{;}}{{{{this}{.}{maxIterations}}{=}{maxIterations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Integer}{.}{valueOf}{(}{m}{)}}{,}{{Integer}{.}{valueOf}{(}{p}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Integer}{.}{valueOf}{(}{maxCostEval}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Integer}{.}{valueOf}{(}{dimension1}{)}}{,}{{Integer}{.}{valueOf}{(}{dimension2}{)}}{}}}}{)}{;}}}
{AST_ROOT_SC2NF{{{dynaBean}{.}{set}{(}{propertyName}{,}{{Double}{.}{valueOf}{(}{v}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{input}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{input}{=}{{Double}{.}{valueOf}{(}{expected}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Double}{.}{valueOf}{(}{{o}{.}{toString}{()}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{list}{.}{add}{(}{{Double}{.}{valueOf}{(}{one}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{Object}}{[]}}{{{}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{Object}}{[]}}{{{}{{Double}{.}{valueOf}{(}{p}{)}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumPct}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumPct}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumFreq}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumFreq}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPct}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPct}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{{Long}{.}{valueOf}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addValue}{(}{{Long}{.}{valueOf}{(}{{v}{.}{longValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Integer}{.}{valueOf}{(}{rows}{)}}{,}{{Integer}{.}{valueOf}{(}{cols}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{,}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{Double}{.}{valueOf}{(}{value}{)}}}{;}}{{{pos}{.}{setIndex}{(}{endIndex}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Double}{.}{valueOf}{(}{argument}{)}}{}}}}{)}{;}}{{{{this}{.}{argument}}{=}{argument}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{zero}{.}{equals}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{u}{.}{equals}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Double}{.}{valueOf}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Double}{.}{valueOf}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Double}{.}{valueOf}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Double}{.}{valueOf}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{STRING_CONSTANT}{,}{{u}{.}{equals}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{Double}{.}{valueOf}{(}{value}{)}}{,}{{Integer}{.}{valueOf}{(}{maxIterations}{)}}{}}}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Double}}{{pi}{=}{{Double}{.}{valueOf}{(}{Math.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{STRING_CONSTANT}{,}{{u}{.}{equals}{(}{{Double}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{value}{=}{{Double}{.}{valueOf}{(}{valueString}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{delta}{=}{{{(}{{max}{-}{min}}{)}}{/}{{{(}{{Double}{.}{valueOf}{(}{binCount}{)}}{)}}{.}{doubleValue}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{val}{=}{{{Double}{.}{valueOf}{(}{str}{)}}{.}{doubleValue}{()}}}{;}}{{{sampleStats}{.}{addValue}{(}{val}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{rhs}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{rootNameNode}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Node}}{{newVar}{=}{{{IR}{.}{declaration}{(}{child}{,}{{n}{.}{getToken}{()}}{)}}{.}{srcref}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{notChild}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{CALL}{:}}{{{annotateCalls}{(}{n}{)}}{;}}{break;}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{enumTypeNode}{.}{getToken}{()}}{)}}{.}{isEqualTo}{(}{Token.BANG}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{CALL}{:}}{{{visitCall}{(}{t}{,}{n}{)}}{;}}{break;}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{typeExprNode}{.}{getToken}{()}}{==}{Token.QMARK}}{&&}{{!}{{typeExprNode}{.}{hasChildren}{()}}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.VAR}{,}{{var}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{getToken}{()}}{==}{type}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{definitionParent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{throw}{{new}{{RuntimeException}}{(}{{STRING_CONSTANT}{+}{{defSite}{.}{getToken}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{nameNode}{.}{isGetProp}{()}}{,}{STRING_CONSTANT}{,}{{nameNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{exprKind}{=}{{expr}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{expr}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{insideQualifiedName}{||}{{{{propAccessNode}{.}{getParent}{()}}{.}{getToken}{()}}{!=}{Token.ASSIGN}}}}
{AST_ROOT_SC2NF{{expr}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{lvalue}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{tokenType}{=}{{expr}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{warnInvalidOperand}{(}{expr}{,}{{expr}{.}{getToken}{()}}{,}{STRING_CONSTANT}{,}{{lhsType}{+}{STRING_CONSTANT}{+}{rhsType}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{commonTypes}{.}{isNumberScalarOrObj}{(}{pair.type}{)}}}{)}{{{}{{{warnInvalidOperand}{(}{child}{,}{{expr}{.}{getToken}{()}}{,}{JSType.NUMBER}{,}{pair.type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{exprKind}{=}{{expr}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{expr}{,}{UNKNOWN_EXPR_TYPE}{,}{{{expr}{.}{getToken}{()}}{.}{toString}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{dn}{.}{getValue}{()}}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{cont}{.}{getToken}{()}}{)}}{.}{isSameAs}{(}{Token.CONTINUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{breakStm}{.}{getToken}{()}}{)}}{.}{isSameAs}{(}{Token.BREAK}{)}}{;}}}
{AST_ROOT_SC2NF{{value}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{!}{{registerFunc}{.}{isValidNodeType}{(}{{valueNode}{.}{getToken}{()}}{)}}}}
{AST_ROOT_SC2NF{{!}{{registerFunc}{.}{isValidNodeType}{(}{{value}{.}{getToken}{()}}{)}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{changed}{=}{{{changed}{||}{{{finalValue}{.}{getToken}{()}}{!=}{{info.initialValue}{.}{getToken}{()}}}}{||}{{!}{{finalValue}{.}{isEquivalentTo}{(}{info.initialValue}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{blockNode}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{&&}{{{{blockNode}{.}{getFirstChild}{()}}{.}{getToken}{()}}{==}{Token.THROW}}}{)}{{{}{{return}{true}{;}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{arg}{.}{getToken}{()}}{!=}{desiredType}}}
{AST_ROOT_SC2NF{{val}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{lhs}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{HOOK}{:}}{{case}{AND}{:}}{{case}{OR}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{expr}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{ancestor}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{actualType}{=}{{{{cfgNodes}{.}{get}{(}{i}{)}}{.}{getValue}{()}}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{source}{.}{getToken}{()}}{==}{startToken}}{)}{{{}{{{assertFalse}{(}{{STRING_CONSTANT}{+}{startToken}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{cfg}{.}{isImplicitReturn}{(}{dest}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{source}{.}{getToken}{()}}{==}{startToken}}{&&}{{cfg}{.}{isImplicitReturn}{(}{dest}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{enclosingNode}{!=}{null}}{&&}{{{enclosingNode}{.}{getToken}{()}}{!=}{Token.FUNCTION}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{expr}{.}{getRoot}{()}}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{refParent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{anc}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{grandparent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{AND}{:}}{{case}{OR}{:}}{{case}{HOOK}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.STRING}{,}{{n}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{Token.STRING}{,}{{n}{.}{getToken}{()}}{)}}{;}}{{{visited}{.}{append}{(}{{n}{.}{getString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{next}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{value}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{return}{{{{parent}{!=}{null}}{&&}{{{parent}{.}{getToken}{()}}{==}{Token.EXPONENT}}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NodeUtil}{.}{precedence}{(}{{n}{.}{getToken}{()}}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{LET}{:}}{{case}{CONST}{:}}{{case}{FUNCTION}{:}}{{case}{CLASS}{:}}{{case}{DO}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{while}{(}{{{firstNonOperator}{.}{getToken}{()}}{==}{op}}{)}{{{}{{{firstNonOperator}{=}{{firstNonOperator}{.}{getFirstChild}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{c}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{last}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{FUNCTION}{:}}{{if}{(}{{n}{.}{isArrowFunction}{()}}{)}{{{}{{{visitArrowFunction}{(}{t}{,}{n}{)}}{;}}{}}}}{break;}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{value}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}{{return}{{(}{{{type}{==}{Token.INC}}{||}{{type}{==}{Token.DEC}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{{node}{.}{getToken}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Token}}{{declarationType}{=}{{declarationNode}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newNode}{=}{{IR}{.}{declaration}{(}{newLHS}{,}{newRHS}{,}{{parent}{.}{getToken}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{newNode}{=}{{IR}{.}{declaration}{(}{newLHS}{,}{newRHS}{,}{{parent}{.}{getToken}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{int}{{parentPrecedence}{=}{{NodeUtil}{.}{precedence}{(}{{n}{.}{getToken}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{if}{(}{isSimpleOp}{)}{{{}{{{msg}{=}{{STRING_CONSTANT}{+}{{{{n}{.}{getToken}{()}}{.}{toString}{()}}{.}{toLowerCase}{()}}{+}{STRING_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.SCRIPT}{,}{{{{global}{.}{getDeclaration}{()}}{.}{getNode}{()}}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.GETPROP}{,}{{{{refs}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getNode}{()}}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.GETPROP}{,}{{{{refs}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getNode}{()}}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.NAME}{,}{{{{refs}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getNode}{()}}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{propName}{.}{isString}{()}}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{propName}{.}{getToken}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{propName}{.}{isString}{()}}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{propName}{.}{getToken}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{nodeType}{=}{{input}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{current}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{type}{!=}{null}}{&&}{{{type}{.}{getToken}{()}}{!=}{Token.ARRAY_TYPE}}}}
{AST_ROOT_SC2NF{{if}{(}{{invalidInitializers}{.}{contains}{(}{{initializer}{.}{getToken}{()}}{)}}{)}{{{}{{{errorReporter}{.}{error}{(}{STRING_CONSTANT}{,}{sourceName}{,}{{lineno}{(}{loopNode.initializer}{)}}{,}{{charno}{(}{loopNode.initializer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{invalidInitializers}{.}{contains}{(}{{initializer}{.}{getToken}{()}}{)}}{)}{{{}{{{errorReporter}{.}{error}{(}{STRING_CONSTANT}{,}{sourceName}{,}{{lineno}{(}{loopNode.initializer}{)}}{,}{{charno}{(}{loopNode.initializer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{nType}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{WHILE}{:}}{{case}{DO}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{WHILE}{:}}{{case}{DO}{:}}{{case}{SWITCH}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{GETPROP}{:}}{{return}{{{n}{.}{getLastChild}{()}}{.}{getString}{()}}{;}}{{case}{MEMBER_FUNCTION_DEF}{:}}{{return}{{n}{.}{getString}{()}}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{expr}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{expr}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{this}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{this}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{this}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{this}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{source}{==}{null}}{||}{{Token.FUNCTION}{==}{{source}{.}{getToken}{()}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{source}{==}{null}}{||}{{Token.FUNCTION}{==}{{source}{.}{getToken}{()}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{expectedArity}{=}{{Token}{.}{arity}{(}{{n}{.}{getToken}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{NAME}{:}}{{{validateName}{(}{n}{)}}{;}}{break;}{{case}{GETPROP}{:}}{{{validateGetProp}{(}{n}{)}}{;}}{break;}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{UnsupportedOperationException}}{e}}{)}{{{}{{{violation}{(}{{STRING_CONSTANT}{+}{{n}{.}{getToken}{()}}}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}{{{validateNameDeclarationHelper}{(}{{n}{.}{getToken}{()}}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{)}{{{}{{{validateNameDeclarationHelper}{(}{{n}{.}{getToken}{()}}{,}{n}{)}}{;}}{}}}{else}{{{}{{{validateOptionalExpression}{(}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{body}{.}{getToken}{()}}{==}{Token.BLOCK}}{)}{{{}{{{validateBlock}{(}{body}{)}}{;}}{}}}{else}{{{}{{{validateExpression}{(}{body}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getFirstChild}{()}}{.}{getToken}{()}}{==}{Token.EXPORT_SPECS}}}
{AST_ROOT_SC2NF{{secondChild}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{control}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{{n}{.}{getParent}{()}}{.}{getToken}{()}}{)}{{}{{case}{VAR}{:}}{{case}{CATCH}{:}}{{{names}{.}{add}{(}{{n}{.}{getString}{()}}{)}}{;}}{break;}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{switch}{(}{{c}{.}{getToken}{()}}{)}{{}{{case}{FUNCTION}{:}}{{case}{AND}{:}}{{case}{OR}{:}}{{case}{HOOK}{:}}{{return}{true}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{cArg}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{type}{==}{{n}{.}{getToken}{()}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{rightScope}{=}{{reverseInterpreter}{.}{getPreciserScopeKnowingConditionOutcome}{(}{left}{,}{{leftOutcome}{.}{getOutcomeFlowScope}{(}{{left}{.}{getToken}{()}}{,}{nIsAnd}{)}}{,}{nIsAnd}{)}}}{;}}}
{AST_ROOT_SC2NF{{left}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{newScope}{=}{{reverseInterpreter}{.}{getPreciserScopeKnowingConditionOutcome}{(}{condition}{,}{{conditionOutcomes}{.}{getOutcomeFlowScope}{(}{{condition}{.}{getToken}{()}}{,}{{branch}{==}{Branch.ON_TRUE}}{)}}{,}{{branch}{==}{Branch.ON_TRUE}}{)}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{namedImports}{.}{getToken}{()}}{==}{Token.IMPORT_SPECS}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{Token.FUNCTION}{,}{{function}{.}{getToken}{()}}{)}}{;}}{{{assertEquals}{(}{name}{,}{{NodeUtil}{.}{getName}{(}{function}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{arg}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{isASTNormalized}{()}}{&&}{{Token.NAME}{==}{{constructorNameNode}{.}{getToken}{()}}}}}
{AST_ROOT_SC2NF{{result}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{{export}{.}{getFirstChild}{()}}{.}{getToken}{()}}{==}{Token.EXPORT_SPECS}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{nextNode}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{typeNode}{.}{getToken}{()}}{==}{Token.BANG}}{)}{{{}{{{typeNode}{=}{{typeNode}{.}{getFirstChild}{()}}}{;}}{}}}}{{return}{typeNode}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Node}}{{decl}{=}{{{IR}{.}{declaration}{(}{{cls.name}{.}{cloneTree}{()}}{,}{cls.constructor.value}{,}{{exprRoot}{.}{getToken}{()}}{)}}{.}{srcref}{(}{exprRoot}{)}}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{fieldTypeNode}{.}{getToken}{()}}{==}{Token.COLON}}{)}{{{}{{{fieldNameNode}{=}{{fieldTypeNode}{.}{getFirstChild}{()}}}{;}}{{{hasType}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{pType}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.NEW}{,}{{callsiteNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.CALL}{,}{{callsiteNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.CALL}{,}{{callsiteNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{getToken}{()}}{==}{Token.PARAM_LIST}}}
{AST_ROOT_SC2NF{{{aliasReference}{.}{getToken}{()}}{==}{Token.STRING_KEY}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{getToken}{()}}{==}{Token.INSTANCEOF}}{)}{{{}{{{reportIfNonObject}{(}{t}{,}{{n}{.}{getFirstChild}{()}}{,}{SUSPICIOUS_INSTANCEOF_LEFT_OPERAND}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{getToken}{()}}{==}{Token.IN}}{)}{{{}{{{reportIfNonObject}{(}{t}{,}{{n}{.}{getLastChild}{()}}{,}{SUSPICIOUS_IN_OPERATOR}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{operatorToken}{=}{{condition}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{append}{(}{{{n}{.}{getToken}{()}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{decl.node}{.}{getParent}{()}}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isGetProp}{()}}{,}{STRING_CONSTANT}{,}{{n}{.}{getToken}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{nType}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{val}{.}{getToken}{()}}{==}{Token.OR}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{typeNode}{.}{getToken}{()}}{!=}{Token.EQUALS}}{)}{{{}{{{report}{(}{typeNode}{,}{DEFAULT_PARAM_MUST_BE_MARKED_OPTIONAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{typeNode}{!=}{null}}{&&}{{{typeNode}{.}{getToken}{()}}{==}{Token.STRING}}}}
{AST_ROOT_SC2NF{{c}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{left}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{TernaryValue}}{{result}{=}{{evaluateComparison}{(}{{n}{.}{getToken}{()}}{,}{left}{,}{right}{,}{shouldUseTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{result}{=}{{performArithmeticOp}{(}{{n}{.}{getToken}{()}}{,}{left}{,}{right}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{argumentNode}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{subtree}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{subtree}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{while}{(}{{moveIt}{.}{hasNext}{()}}{)}{{{}{{{actualTokens}{.}{add}{(}{{{moveIt}{.}{next}{()}}{.}{getToken}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{node}{.}{getToken}{()}}{==}{Token.CALL}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{useParent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{nodeType}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{parentNodeType}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{key}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{sourceName}{!=}{null}}{)}}{;}}{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getToken}{()}}{==}{type}}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.FUNCTION}{,}{{fooNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{{n}{.}{getFirstChild}{()}}{.}{getToken}{()}}{)}{{}{{case}{HOOK}{:}}{{case}{AND}{:}}{{case}{OR}{:}}{{return}{true}{;}}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{BREAK}{:}}{{case}{CONTINUE}{:}}{{case}{RETURN}{:}}{{case}{THROW}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{blockChild}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{subtree}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{ancestor}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{getToken}{()}}{==}{type}}{)}{{{}{{{matchingNodes}{.}{add}{(}{node}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{declType}{=}{{variable}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isNew}{()}}{,}{STRING_CONSTANT}{,}{{node}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isCall}{()}}{,}{STRING_CONSTANT}{,}{{node}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isHook}{()}}{,}{STRING_CONSTANT}{,}{{node}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{(}{{node}{.}{isAnd}{()}}{)}}{||}{{(}{{node}{.}{isOr}{()}}{)}}}{,}{STRING_CONSTANT}{,}{{node}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{hook}{.}{isHook}{()}}{,}{STRING_CONSTANT}{,}{{hook}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{(}{{original}{.}{isAnd}{()}}{)}}{||}{{(}{{original}{.}{isOr}{()}}{)}}}{,}{STRING_CONSTANT}{,}{{original}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{secondArgumentType}{=}{{secondArgument}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{int}{{offset}{=}{{{provideStringNode}{==}{null}}{?}{NUMBER_CONSTANT}{:}{{getSourceInfoOffset}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{type}{.}{isUnresolved}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{isKnown}{(}{n}{)}}{&&}{{!}{{isTop}{(}{n}{)}}}{&&}{{isClassType}{(}{n}{)}}{&&}{{!}{{isNativeObjectType}{(}{n}{)}}}{&&}{{!}{{isWhitelistedType}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{!}{{isTypeVariable}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{!}{{isTypeVariable}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{||}{{type}{.}{isTop}{()}}}{)}{{{}{{return}{{new}{{MatchResult}}{(}{allowLooseMatches}{,}{allowLooseMatches}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setPreserveGoogProvidesAndRequires}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setPreserveGoogProvidesAndRequires}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{importNode}{.}{useSourceInfoFrom}{(}{export}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{stringKey}{=}{{IR}{.}{stringKey}{(}{name}{,}{{{memberDef}{.}{getFirstChild}{()}}{.}{detach}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isExprResult}{()}}{)}{{{}{{{parent}{.}{detach}{()}}{;}}{}}}{else}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{elemValue}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{parent}{.}{getParent}{()}}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{getParent}{()}}{!=}{null}}{)}{{{}{{{n}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{body}{=}{{IR}{.}{block}{(}{{IR}{.}{returnNode}{(}{{returnValue}{.}{detach}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{replaceChild}{(}{export}{,}{{declaration}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{newBlock}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{typeString}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{rep}{.}{isExprResult}{()}}{)}{{{}{{{rep}{=}{{rep}{.}{getFirstChild}{()}}}{;}}{{{rep}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{changeProxy}{.}{replaceWith}{(}{grandparent}{,}{parent}{,}{{{parent}{.}{getLastChild}{()}}{.}{detach}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{replacement}{=}{{firstArg}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{rhs}{.}{detach}{()}}{;}}{{{ancestor}{.}{replaceChild}{(}{last}{,}{rhs}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{rhs}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{child}{=}{{{n}{.}{getLastChild}{()}}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{{argNode}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{assignmentValue}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{simplified}{=}{{{new}{{Node}}{(}{type}{,}{{condition}{.}{detach}{()}}{,}{{simplifyShortCircuitBranch}{(}{body}{)}}{)}}{.}{useSourceInfoIfMissingFrom}{(}{hook}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{original}{.}{getParent}{()}}{!=}{null}}{)}{{{}{{{original}{.}{detach}{()}}{;}}{}}}}{{{replacements}{.}{add}{(}{original}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{newGetProp}{=}{{IR}{.}{getprop}{(}{{target}{.}{detach}{()}}{,}{{prop}{.}{detach}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{i}{==}{NUMBER_CONSTANT}}{&&}{{{first}{.}{getString}{()}}{.}{isEmpty}{()}}}{)}{{{}{{{add}{=}{{{add}{.}{getSecondChild}{()}}{.}{detach}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{PrototypeMemberDeclaration}}{declar}}{:}{instance.declarations}{)}{{{}{{{block}{.}{addChildToBack}{(}{{declar.node}{.}{detach}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{preserveGoogProvidesAndRequires}{&&}{{explicitNode}{.}{hasChildren}{()}}}{)}{{{}{return;}{}}}}{{{explicitNode}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{typeDeclaration}{!=}{null}}{)}{{{}{{{compiler}{.}{forwardDeclareType}{(}{typeDeclaration}{)}}{;}}{{{parent}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{value}{=}{{{n}{.}{getChildAtIndex}{(}{NUMBER_CONSTANT}{)}}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{closureRequire}}{:}{requiresToBeRemoved}{)}{{{}{{{closureRequire}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{arg}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{method}{=}{{{member}{.}{getLastChild}{()}}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{stringKey}{=}{{IR}{.}{stringKey}{(}{{{(}{{{member}{.}{isGetterDef}{()}}{||}{{member}{.}{getBooleanProp}{(}{Node.COMPUTED_PROP_GETTER}{)}}}{)}}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{,}{{function}{.}{detach}{()}}{)}}}}
{AST_ROOT_SC2NF{{{constructor}{=}{{{member}{.}{getFirstChild}{()}}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{{functionBody}{.}{children}{()}}{)}{{{}{{{newBlock}{.}{addChildToBack}{(}{{child}{.}{detach}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{stringKey}{=}{{IR}{.}{stringKey}{(}{name}{,}{{{n}{.}{getFirstChild}{()}}{.}{detach}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{subtree}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{{{subtree}{.}{getLastChild}{()}}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Node}}{c}}{:}{{externs}{.}{children}{()}}{)}{{{}{{if}{(}{{!}{{c}{.}{hasChildren}{()}}}{)}{{{}{{{c}{.}{detach}{()}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{expected}{!=}{null}}{)}{{{}{{{expectedRoot}{=}{{parseExpectedJs}{(}{expected}{)}}}{;}}{{{expectedRoot}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{ancParent}{=}{{ancestor}{.}{getParent}{()}}}{;}}{{{ancParent}{.}{replaceChild}{(}{ancestor}{,}{{{ancestor}{.}{getLastChild}{()}}{.}{detach}{()}}{)}}{;}}{break;}{}}}}
{AST_ROOT_SC2NF{{{node}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{node}{!=}{null}}{&&}{{{node}{.}{getParent}{()}}{!=}{null}}}{)}{{{}{{{node}{.}{detach}{()}}{;}}{}}}}{{return}{node}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{requireNode}{,}{MISSING_MODULE_OR_PROVIDE.level}{,}{MISSING_MODULE_OR_PROVIDE}{,}{legacyNamespace}{)}}{)}}{;}}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{requireNode}{)}}{.}{detach}{()}}{;}}{continue;}{}}}}
{AST_ROOT_SC2NF{{{moduleBlockNode}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{returnStatementNode}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{call}{)}}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{void}{updateGoogDeclareLegacyNamespace}{(}{{{Node}}{call}}{)}{{{}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{call}{)}}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.declareLegacyNamespace}}{)}{{{}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{call}{)}}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{secondExpr}{!=}{firstExpr}}{)}{{{}{{{secondExpr}{.}{detach}{()}}{;}}{}}}{else}{{{}{{{secondExpr}{=}{{IR}{.}{nullNode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{bind.target}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{declParent}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{!=}{null}}{)}{{{}{{{value}{.}{detach}{()}}{;}}{}}}}{{{varNode}{=}{parent}}{;}}{}}}}
{AST_ROOT_SC2NF{{{callbackFunction}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{objlit}{.}{removeChild}{(}{key}{)}}{;}}{{{value}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{replacement}{=}{{value}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{destObj}{=}{{{n}{.}{getSecondChild}{()}}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newNode}{=}{{new}{{Node}}{(}{newType}{,}{{left}{.}{detach}{()}}{,}{{newRight}{.}{detach}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isNumericResult}{(}{left}{)}}{)}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{{left}{.}{detach}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{left}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{root}{!=}{null}}{)}{{{}{{{root}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{{replacementNode}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{clinitAssignedValue}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{follow}{==}{null}}{||}{{areMatchingExits}{(}{n}{,}{follow}{)}}}{)}{{{}{{{n}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{block}{.}{replaceChild}{(}{maybeIf}{,}{{{maybeIf}{.}{getLastChild}{()}}{.}{detach}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{colon}{.}{addChildToBack}{(}{{member}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{stringKeys}{)}{{{}{{{child}{.}{detach}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{member}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{indexSignature}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{comma}{.}{addChildToBack}{(}{{leftMostChild}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{condStatement}{=}{{{IR}{.}{exprResult}{(}{{cond}{.}{detach}{()}}{)}}{.}{srcref}{(}{cond}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{statement}{=}{{{IR}{.}{exprResult}{(}{{cond}{.}{detach}{()}}{)}}{.}{useSourceInfoIfMissingFrom}{(}{cond}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{{caseBlock}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maybeBreak}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{detach}{()}}{;}}{{{subtree}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{subtree}{.}{getParent}{()}}{.}{replaceChild}{(}{subtree}{,}{{right}{.}{detach}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{var}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newDeclaration}{=}{{{IR}{.}{var}{(}{{name}{.}{detach}{()}}{)}}{.}{useSourceInfoFrom}{(}{declarationList}{)}}}{;}}}
{AST_ROOT_SC2NF{{{inlineValue}{(}{v}{,}{ref}{,}{{value}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{opDetached}{=}{{op}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{{potentialCallee}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{expectedRoot}{=}{{parseExpectedJs}{(}{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{expected}{)}}{)}}{)}}}{;}}{{{expectedRoot}{.}{detach}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{t}{.}{inGlobalScope}{()}}}{&&}{{NodeUtil}{.}{isHoistedFunctionDeclaration}{(}{value}{)}}}{)}{{{}{{{parent}{.}{addChildToFront}{(}{{value}{.}{detach}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{body}{.}{detach}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{decl}{=}{{IR}{.}{declaration}{(}{{pattern}{.}{detach}{()}}{,}{{IR}{.}{name}{(}{tempVarName}{)}}{,}{declarationType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{assignments}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{nodes}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getJSTypeBeforeCast}{()}{{{}{{return}{{(}{{JSType}}{)}{{getTypeIBeforeCast}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{DEFAULT_EXTERNS}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypeI}}{evaluateTypeExpressionInGlobalScope}{(}{{{JSTypeExpression}}{expr}}{)}{{{}{{return}{{createTypeFromCommentNode}{(}{{expr}{.}{getRoot}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isInstanceType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getNominalTypeIfSingletonObj}{()}}{.}{isClassy}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isUnresolved}{()}{{{}{{return}{{isUnknown}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{fn}{.}{isLooseSubtypeOf}{(}{other.fn}{)}}{;}}}
{AST_ROOT_SC2NF{{{UpdateThisAndArgumentsReferences}}{{updater}{=}{{new}{{UpdateThisAndArgumentsReferences}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{passUnderTest}}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{,}{true}{)}}}{;}}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NameBasedDefinitionProvider}}{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testHookOperators4}{(}{)}{throws}{{Exception}}{{{}{{{checkMarkedCalls}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{ImmutableList}{.}{<}{{String}}{>}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{DefinitionUseSiteFinder}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{super}{(}{compiler}{,}{false}{)}{;}}{{{{this}{.}{nameUseSiteMultimap}}{=}{{LinkedHashMultimap}{.}{create}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NameBasedDefinitionProvider}}{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NameBasedDefinitionProvider}}{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.ADDING_PROPERTY_TO_NON_OBJECT}{,}{NewTypeInference.INEXISTENT_PROPERTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{NewTypeInference.ADDING_PROPERTY_TO_NON_OBJECT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isInTestMode}{()}}{)}{{{}{{return}{{new}{{StringWriter}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isInTestMode}{()}}{)}{{{}{{return}{{new}{{StringWriter}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapCheck}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{externAndJsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferencesForTranspileOnly}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{ImmutableList}{.}{of}{(}{NO_J2CL_SOURCE_FILE}{,}{NO_J2CL_SOURCE_FILE2}{)}}{)}}{;}}{{{{assertThat}{(}{{compiler}{.}{getAnnotation}{(}{J2clSourceFileChecker.HAS_J2CL_ANNOTATION_KEY}{)}}{)}}{.}{isEqualTo}{(}{Boolean.FALSE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{ImmutableList}{.}{of}{(}{NO_J2CL_SOURCE_FILE}{,}{J2CL_SOURCE_FILE}{,}{NO_J2CL_SOURCE_FILE2}{)}}{)}}{;}}{{{{assertThat}{(}{{compiler}{.}{getAnnotation}{(}{J2clSourceFileChecker.HAS_J2CL_ANNOTATION_KEY}{)}}{)}}{.}{isEqualTo}{(}{Boolean.TRUE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{{new}{{StaticFieldGetterSetterInliner}}{(}{root}{)}}{.}{run}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recvType}{=}{{recvType}{.}{withProperty}{(}{pname}{,}{JSType.UNKNOWN}{)}}}{;}}{{{inEnv}{=}{{updateLvalueTypeInEnv}{(}{inEnv}{,}{obj}{,}{recvLvalue.ptr}{,}{recvType}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{EXTERNS}{+}{STRING_CONSTANT}}{,}{{code}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{RefactoringDriver}}{{driver}{=}{{{{{new}{{RefactoringDriver.Builder}}{(}{scanner}{)}}{.}{addExternsFromCode}{(}{{STRING_CONSTANT}{+}{externs}}{)}}{.}{addInputsFromCode}{(}{originalCode}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{externs}}{)}}{)}}}
{AST_ROOT_SC2NF{{isSomeUnknownType}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{}{{{tracker}{=}{{new}{{PerformanceTracker}}{(}{externsRoot}{,}{jsRoot}{,}{options.tracer}{,}{{this}{.}{outStream}}{)}}}{;}}{{{addChangeHandler}{(}{{tracker}{.}{getCodeChangeHandler}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{process}{(}{null}{,}{scriptRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferences}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{ResourceBundle}}{getBundle}{(}{{{String}}{baseName}}{,}{{{Locale}}{locale}}{)}{{{}{{return}{{getBundle}{(}{baseName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}{{{super}{.}{addUndeclaredProperty}{(}{pname}{,}{defSite}{,}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{type}{==}{null}}{&&}{isConstant}}{)}{{{}{{{type}{=}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{randomProps}}{.}{with}{(}{pname}{,}{{Property}{.}{make}{(}{{{type}{==}{null}}{?}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{:}{type}}{,}{type}{)}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{t}{.}{isUnknown}{()}}}{&&}{{!}{{t}{.}{equals}{(}{{JSType}{.}{fromTypeVar}{(}{{getCommonTypes}{()}}{,}{typeVar}{)}}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{typeMap}{.}{isEmpty}{()}}{)}{{{}{{return}{{Property}{.}{make}{(}{{{getCommonTypes}{()}}{.}{UNKNOWN}}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{thisWithoutTypemap}{=}{{{this}{.}{rawType}}{.}{getAsNominalType}{()}}}{;}}{{return}{{thisWithoutTypemap}{.}{instantiateGenerics}{(}{{{getCommonTypes}{()}}{.}{MAP_TO_UNKNOWN}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{{{getCommonTypes}{()}}{.}{TOP}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{{{getCommonTypes}{()}}{.}{BOTTOM}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{isGeneric}{()}}}{||}{{{{this}{.}{commonTypes}}{.}{MAP_TO_UNKNOWN}}{.}{equals}{(}{concreteTypes}{)}}}{)}{{{}{{return}{{substituteNominalGenerics}{(}{concreteTypes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FunctionTypeBuilder}}{{builder}{=}{{new}{{FunctionTypeBuilder}}{(}{f1.commonTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{f}{.}{isGeneric}{()}}}{)}{{{}{{return}{f}{;}}{}}}}{{return}{{f}{.}{instantiateGenerics}{(}{f.commonTypes.MAP_TO_UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{!}{{{this}{.}{commonTypes}}{.}{allowMethodsAsFunctions}}}{&&}{{{this}{.}{receiverType}}{!=}{null}}}{&&}{{other.receiverType}{==}{null}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FunctionTypeBuilder}}{{builder}{=}{{new}{{FunctionTypeBuilder}}{(}{f1.commonTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{optionalFormals}{.}{add}{(}{{JSType}{.}{join}{(}{t}{,}{{{this}{.}{commonTypes}}{.}{UNDEFINED}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{==}{other}}{||}{{other.ns}{!=}{null}}}{||}{{!}{{{other}{.}{getNominalType}{()}}{.}{equals}{(}{{{this}{.}{commonTypes}}{.}{getObjectType}{()}}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{other}{==}{{{this}{.}{commonTypes}}{.}{TOP_OBJECTTYPE}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{other}{==}{{{this}{.}{commonTypes}}{.}{TOP_OBJECTTYPE}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{newPropType}{.}{isBottom}{()}}{)}{{{}{{return}{{{newPropType}{.}{getCommonTypes}{()}}{.}{BOTTOM_PROPERTY_MAP}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{commonTypes.BOTTOM}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{)}{{{}{{return}{commonTypes.STRING}{;}}{}}}}}
{AST_ROOT_SC2NF{{{recvType}{=}{{recvType}{.}{removeType}{(}{commonTypes.NULL}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{propInferredFunType}{!=}{null}}{)}{{{}{{{rawType}{.}{addUndeclaredClassProperty}{(}{pname}{,}{propInferredFunType}{,}{getProp}{)}}{;}}{}}}{else}{{{}{{{rawType}{.}{addUndeclaredClassProperty}{(}{pname}{,}{commonTypes.UNKNOWN}{,}{getProp}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{t}{==}{null}}{)}{{{}{{{t}{=}{commonTypes.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FunctionType}}{{getInstanceFunType}{=}{{{{(}{{new}{{FunctionTypeBuilder}}{(}{commonTypes}{)}}{)}}{.}{addRetType}{(}{instanceType}{)}}{.}{buildFunction}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{t}{==}{null}}{)}{{{}{{{t}{=}{commonTypes.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{currentScope}}{.}{addLocal}{(}{varName}{,}{commonTypes.UNKNOWN}{,}{false}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{resultType}{=}{commonTypes.TOP}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{typedefName}}{:}{{localTypedefs}{.}{keySet}{()}}{)}{{{}{{{locals}{.}{put}{(}{typedefName}{,}{{{this}{.}{commonTypes}}{.}{UNDEFINED}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{isTypeVar}{=}{true}}{;}}{{{type}{=}{{JSType}{.}{fromTypeVar}{(}{{this}{.}{commonTypes}}{,}{{declaredType}{.}{getTypeVariableDefinedLocally}{(}{name}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addNamespace}{(}{qnameNode}{,}{{new}{{NamespaceLit}}{(}{{this}{.}{commonTypes}}{,}{{qnameNode}{.}{getQualifiedName}{()}}{,}{qnameNode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{root}}{.}{setTypeI}{(}{{{this}{.}{commonTypes}}{.}{fromFunctionType}{(}{{declaredType}{.}{toFunctionType}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{anyNumOrStr}{==}{null}}{)}{{{}{{return}{{t}{.}{isSubtypeOf}{(}{{this}{.}{NUMBER_OR_STRING}}{)}}{;}}{}}}}{{return}{{t}{.}{isSubtypeOf}{(}{anyNumOrStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numberOrNumber}{==}{null}}{)}{{{}{{return}{{t}{.}{isSubtypeOf}{(}{{this}{.}{STRING}}{)}}{;}}{}}}}{{return}{{t}{.}{isSubtypeOf}{(}{stringOrString}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numberOrNumber}{==}{null}}{)}{{{}{{return}{{t}{.}{isSubtypeOf}{(}{{this}{.}{NUMBER}}{)}}{;}}{}}}}{{return}{{t}{.}{isSubtypeOf}{(}{numberOrNumber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{stringOrString}{=}{{JSType}{.}{join}{(}{{this}{.}{STRING}}{,}{stringInstance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{numberOrNumber}{=}{{JSType}{.}{join}{(}{{this}{.}{NUMBER}}{,}{numberInstance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ObjectType}}{getStringInstanceObjType}{()}{{{}{{return}{{{stringInstanceObjtype}{!=}{null}}{?}{stringInstanceObjtype}{:}{{this}{.}{TOP_OBJECTTYPE}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{getBooleanInstanceObjType}{()}{{{}{{return}{{{booleanInstanceObjtype}{!=}{null}}{?}{booleanInstanceObjtype}{:}{{this}{.}{TOP_OBJECTTYPE}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{getNumberInstanceObjType}{()}{{{}{{return}{{{numberInstanceObjtype}{!=}{null}}{?}{numberInstanceObjtype}{:}{{this}{.}{TOP_OBJECTTYPE}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getStringInstance}{()}{{{}{{return}{{{stringInstance}{!=}{null}}{?}{stringInstance}{:}{{this}{.}{STRING}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getBooleanInstance}{()}{{{}{{return}{{{booleanInstance}{!=}{null}}{?}{booleanInstance}{:}{{this}{.}{BOOLEAN}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getNumberInstance}{()}{{{}{{return}{{{numberInstance}{!=}{null}}{?}{numberInstance}{:}{{this}{.}{NUMBER}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getRegexpType}{()}{{{}{{return}{{{regexpInstance}{!=}{null}}{?}{regexpInstance}{:}{{this}{.}{UNKNOWN}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{arguments}}{==}{null}}{)}{{{}{{return}{{this}{.}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{arrayType}{==}{null}}{)}{{{}{{return}{{this}{.}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{commonTypes}}{.}{fromFunctionType}{(}{ctorType}{)}}{;}}}
{AST_ROOT_SC2NF{{{ObjectType}}{{arrayType}{=}{{{{this}{.}{commonTypes}}{.}{getArrayInstance}{()}}{.}{getObjTypeIfSingletonObj}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isTrueOrTruthy}{()}}{)}{{{}{{return}{{{this}{.}{commonTypes}}{.}{FALSY}}{;}}{}}}{else}{{if}{(}{{isFalseOrFalsy}{()}}{)}{{{}{{return}{TRUTHY}{;}}{}}}}}}
{AST_ROOT_SC2NF{{return}{{makeType}{(}{lhs.commonTypes}{,}{newtype}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{maybeScalar}{=}{{ObjectType}{.}{mayTurnLooseObjectToScalar}{(}{t}{,}{{this}{.}{commonTypes}}{)}}}{;}}{{if}{(}{{t}{!=}{maybeScalar}}{)}{{{}{{return}{maybeScalar}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{{{this}{.}{commonTypes}}{.}{BOTTOM}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{{{this}{.}{commonTypes}}{.}{TOP}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{noCycles}{=}{{constructorType}{.}{addInterfaces}{(}{{{extendedInterfaces}{.}{isEmpty}{()}}{?}{{ImmutableSet}{.}{of}{(}{{{this}{.}{commonTypes}}{.}{getObjectType}{()}}{)}}{:}{extendedInterfaces}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NominalType}}{{builtinObject}{=}{{{this}{.}{commonTypes}}{.}{getObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{builder}{.}{addRetType}{(}{{{this}{.}{commonTypes}}{.}{UNDEFINED}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{addRestFormals}{(}{{{t}{!=}{null}}{?}{t}{:}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{t}{.}{isSingletonObjWithNull}{()}}{?}{{t}{.}{removeType}{(}{{{this}{.}{commonTypes}}{.}{NULL}}{)}}{:}{t}}{;}}}
{AST_ROOT_SC2NF{{{tdType}{=}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{getTypeFromCommentHelper}{(}{n}{,}{registry}{,}{typeParameters}{)}}{;}}{}}}{{catch}{(}{{{UnknownTypeException}}{e}}{)}{{{}{{return}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{lvalue.type}{=}{{{lvalue.type}{.}{mayHaveProp}{(}{pname}{)}}{?}{{lvalue.type}{.}{getProp}{(}{pname}{)}}{:}{UNKNOWN}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{doSlicing}{)}{{{}{{{pair.env}{=}{{envPutType}{(}{pair.env}{,}{name}{,}{{{declType}{!=}{null}}{?}{declType}{:}{UNKNOWN}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{lvalueType}{.}{isSubtypeOf}{(}{TOP_OBJECT}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{requiredType}{.}{mayHaveProp}{(}{pname}{)}}{)}{{{}{{{reqPtype}{=}{{requiredType}{.}{getProp}{(}{pname}{)}}}{;}}{}}}{else}{{{}{{{reqPtype}{=}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{EnvTypePair}}{(}{env}{,}{UNKNOWN}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{formalType}{.}{isBottom}{()}}{)}{{{}{{{formalType}{=}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{pair.type}{=}{BOOLEAN}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{operandType}{=}{{{requiredType}{.}{isNumber}{()}}{?}{NUMBER}{:}{UNKNOWN}}}{;}}}
{AST_ROOT_SC2NF{{private}{{EnvTypePair}}{analyzeExprBwd}{(}{{{Node}}{expr}}{,}{{{TypeEnv}}{outEnv}}{)}{{{}{{return}{{analyzeExprBwd}{(}{expr}{,}{outEnv}{,}{UNKNOWN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{outerType}{==}{null}}{)}{{{}{{{outerType}{=}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{tmp}{=}{{t}{.}{getIndexedType}{()}}}{;}}{{return}{{{tmp}{==}{null}}{?}{UNKNOWN}{:}{tmp}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reqPtype}{=}{{specPtype}{=}{UNKNOWN}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScope}{.}{hasThis}{()}}}{)}{{{}{{{mayWarnAboutGlobalThis}{(}{expr}{,}{currentScope}{)}}{;}}{{return}{{new}{{EnvTypePair}}{(}{inEnv}{,}{UNKNOWN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{EnvTypePair}}{(}{env}{,}{UNKNOWN}{)}}{;}}}
{AST_ROOT_SC2NF{{{funType}{.}{isOptionalArg}{(}{i}{)}}{&&}{{pair.type}{.}{equals}{(}{UNDEFINED}{)}}}}
{AST_ROOT_SC2NF{{{rhsPair.type}{=}{BOOLEAN}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{analyzeExprFwd}{(}{expr}{,}{inEnv}{,}{UNKNOWN}{,}{UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{rootNs}{!=}{null}}{&&}{{rootNs}{.}{isSubtypeOf}{(}{TOP_OBJECT}{)}}}{)}{{{}{{{namespaceType}{=}{{rootNs}{.}{getProp}{(}{{qname}{.}{getAllButLeftmost}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{out}{;}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{lhsPair}{=}{{analyzeExprBwd}{(}{lhs}{,}{outEnv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapCheck}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferencesForTranspileOnly}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{externAndJsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{rawType}}{.}{isBuiltinWithName}{(}{STRING_CONSTANT}{)}}{&&}{{{NUMERIC_PATTERN}{.}{matcher}{(}{pname}{)}}{.}{matches}{()}}}}
{AST_ROOT_SC2NF{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{ProcessDefinesTest}{()}{{{}{{super}{(}{{DEFAULT_EXTERNS}{+}{STRING_CONSTANT}}{)}{;}}{{{allowSourcelessWarnings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{.}{isEqualTo}{(}{output}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{jsDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{process}{(}{null}{,}{scriptRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferences}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{stop}{()}{{{}{{return}{{{System}{.}{currentTimeMillis}{()}}{-}{start}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setTypeI}{(}{{getNativeStringType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{externAndJsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FindStaticMembers}}{{findStaticMembers}{=}{{new}{{FindStaticMembers}}{()}}}{;}}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{scriptRoot}{,}{findStaticMembers}{)}}{;}}{{{processInherits}{(}{findStaticMembers.inheritsCalls}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferencesForTranspileOnly}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapCheck}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{,}{j2clChangeTracker}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clConstantHoisterPass}}{(}{compiler}{,}{j2clChangeTracker}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{,}{j2clChangeTracker}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clConstantHoisterPass}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{moduleNode}{=}{{newNode}{(}{Token.MODULE_BODY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{lhs}{=}{{node}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{clinitFunction}{=}{{multiExpression}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{methodName}{=}{{member}{.}{getFirstFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ANALYZER_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{disable_testClassMethodUnused2}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassMethodUnused1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{passes}{.}{add}{(}{flowSensitiveInlineVariables}{)}}{;}}{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{lastRemoveUnusedVars}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setFoldConstants}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setFoldConstants}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setRemoveDeadCode}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setRemoveDeadCode}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ANALYZER_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation5}{(}{)}{throws}{{Exception}}{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation4}{(}{)}{throws}{{Exception}}{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toModuleName}{()}{{{}{{return}{{ModuleNames}{.}{toModuleName}{(}{path}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toJSIdentifier}{()}{{{}{{return}{{ModuleNames}{.}{toJSIdentifier}{(}{path}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{requires}{.}{add}{(}{{{file}{.}{resolveEs6Module}{(}{arg}{)}}{.}{toModuleName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{globalModuleName}{=}{{{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{.}{resolveEs6Module}{(}{moduleName}{)}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{moduleName}{=}{{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{moduleName}{=}{{{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{.}{resolveEs6Module}{(}{{moduleIdentifier}{.}{getString}{()}}{)}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{moduleName}{=}{{{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{.}{resolveEs6Module}{(}{importName}{)}}{.}{toModuleName}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ModuleLoader.ModulePath}}{actual}}}
{AST_ROOT_SC2NF{{{String}}{{moduleName}{=}{{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TemplateTypeMapReplacer}}{{replacer}{=}{{new}{{TemplateTypeMapReplacer}}{(}{registry}{,}{this}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{errorReporter}{.}{warning}{(}{{STRING_CONSTANT}{+}{{SimpleErrorReporter}{.}{getMessage0}{(}{messageId}{)}}{+}{BAD_TYPE_WIKI_LINK}}{,}{{getSourceName}{()}}{,}{lineno}{,}{charno}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{errorReporter}{.}{warning}{(}{{STRING_CONSTANT}{+}{{SimpleErrorReporter}{.}{getMessage1}{(}{messageId}{,}{messageArg}{)}}{+}{BAD_TYPE_WIKI_LINK}}{,}{{getSourceName}{()}}{,}{lineno}{,}{charno}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertWarning}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.JSDOC_MISSING_BRACES_WARNING}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{SourceMapObject}}{{sourceMapObject}{=}{{SourceMapObjectParser}{.}{parse}{(}{contents}{)}}}{;}}{{{parse}{(}{sourceMapObject}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{SourceMapObject}}{{sourceMapObject}{=}{{SourceMapObjectParser}{.}{parse}{(}{contents}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{MemberDefinition}}{prop}}{:}{{PolymerPassStaticUtils}{.}{extractProperties}{(}{objLit}{,}{compiler}{)}}{)}{{{}{{{prop.name}{.}{removeProp}{(}{Node.JSDOC_INFO_PROP}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{PolymerPassStaticUtils}{.}{extractProperties}{(}{objLit}{,}{compiler}{)}}}
{AST_ROOT_SC2NF{{{overwriteMembersIfPresent}{(}{allProperties}{,}{{PolymerPassStaticUtils}{.}{extractProperties}{(}{descriptor}{,}{compiler}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{GwtProperties}}{{p}{=}{{GwtProperties}{.}{load}{(}{STRING_CONSTANT}{)}}}{;}}{{{{assertThat}{(}{{p}{.}{propertyNames}{()}}{)}}{.}{isEmpty}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{MODULE_JOINER}{.}{join}{(}{{Arrays}{.}{copyOf}{(}{buffer}{,}{position}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.coalesceVariableNames}{)}{{{}{{{passes}{.}{add}{(}{coalesceVariableNames}{)}}{;}}{{if}{(}{options.foldConstants}{)}{{{}{{{passes}{.}{add}{(}{peepholeOptimizationsOnce}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{hasInstanceType}{()}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}{{return}{{typeOfThis}{.}{toObjectType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{sideEffectInfo}{.}{taintedLocals}{()}}{.}{contains}{(}{v}{)}}{)}{{{}{{{sideEffectInfo}{.}{setTaintsGlobalState}{()}}{;}}{{{sideEffectInfo}{.}{resetLocalVars}{()}}{;}}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{defs}{==}{null}}{)}{{{}{{{functionInfo}{.}{setTaintsGlobalState}{()}}{;}}{break;}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{currentJsSource}{=}{{getCurrentJsSource}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{ParserRunner}{.}{createConfig}{(}{mode}{,}{Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}{,}{Config.RunMode.KEEP_GOING}{,}{null}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ParseResult}}{(}{root}{,}{comments}{,}{features}{,}{{p}{.}{getInlineSourceMap}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{createConfig}{(}{languageMode}{,}{JsDocParsing.TYPES_ONLY}{,}{RunMode.STOP_AFTER_ERROR}{,}{extraAnnotationNames}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{config}{,}{errorReporter}{,}{source}{,}{offset}{,}{false}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{annotationWhitelist}{,}{JsDocParsing.TYPES_ONLY}{,}{RunMode.STOP_AFTER_ERROR}{,}{suppressionNames}{,}{languageMode}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{new}{{Config}}{(}{extraAnnotations}{,}{parseDocumentation}{,}{RunMode.STOP_AFTER_ERROR}{,}{extraSuppressions}{,}{LanguageMode.ECMASCRIPT3}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{new}{{Config}}{(}{extraAnnotations}{,}{JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}{,}{RunMode.KEEP_GOING}{,}{extraSuppressions}{,}{LanguageMode.ECMASCRIPT3}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{n}{.}{getToken}{()}}{==}{Token.DIV}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isNumber}{()}}}{&&}{{{{n}{.}{getFirstChild}{()}}{.}{getDouble}{()}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{value}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{ancestor}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{node}{.}{getToken}{()}}{)}{{}{{case}{GETTER_DEF}{:}}{{case}{SETTER_DEF}{:}}{{return}{true}{;}}{default:}{break;}{}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{key}{.}{getToken}{()}}{)}{{}{{case}{STRING_KEY}{:}}{{case}{GETTER_DEF}{:}}{{case}{SETTER_DEF}{:}}{{case}{MEMBER_FUNCTION_DEF}{:}}{{return}{{key}{.}{getString}{()}}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{node}{.}{getToken}{()}}{)}{{}{{case}{STRING_KEY}{:}}{{case}{GETTER_DEF}{:}}{{case}{SETTER_DEF}{:}}{{case}{MEMBER_FUNCTION_DEF}{:}}{{return}{true}{;}}{default:}{break;}{}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{parent}{!=}{null}}{&&}{{{parent}{.}{getToken}{()}}{==}{Token.ASSIGN}}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{;}}}
{AST_ROOT_SC2NF{{current}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{parent}{.}{getToken}{()}}{)}{{}{{case}{DECLARE}{:}}{{case}{EXPORT}{:}}{{return}{true}{;}}{default:}{{return}{{isStatementParent}{(}{parent}{)}}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{parent}{.}{getToken}{()}}{)}{{}{{case}{SCRIPT}{:}}{{case}{MODULE_BODY}{:}}{{case}{BLOCK}{:}}{{case}{LABEL}{:}}{{case}{NAMESPACE_ELEMENTS}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{DO}{:}}{{case}{WHILE}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{{n}{.}{getToken}{()}}{==}{type}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{VOID}{:}}{{return}{true}{;}}{{case}{NAME}{:}}{{return}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{callNode}{.}{isNew}{()}}{,}{STRING_CONSTANT}{,}{{callNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{val}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{GT}{:}}{{case}{GE}{:}}{{case}{LT}{:}}{{case}{LE}{:}}{{return}{true}{;}}{default:}{break;}{}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{EQ}{:}}{{case}{NE}{:}}{{case}{SHEQ}{:}}{{case}{SHNE}{:}}{{case}{MUL}{:}}{{return}{true}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{valueNode}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{pType}{=}{{{root}{.}{getParent}{()}}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{DECLARATION_PARENTS}{.}{contains}{(}{{parent}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{propdef}{.}{setToken}{(}{Token.STRING}{)}}{;}}}
{AST_ROOT_SC2NF{{{op}{.}{setToken}{(}{assignOp}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{canFoldStandardConstructors}{(}{n}{)}}{)}{{{}{{{n}{.}{setToken}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{include}{==}{{nodeTypes}{.}{contains}{(}{{n}{.}{getToken}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{valueNode}{.}{getToken}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{parent}{.}{setToken}{(}{Token.ASSIGN}{)}}{;}}}
{AST_ROOT_SC2NF{{{newOperator}{.}{setToken}{(}{complementOperator}{)}}{;}}}
{AST_ROOT_SC2NF{{{shorthand}{.}{setToken}{(}{{NodeUtil}{.}{getOpFromAssignmentOp}{(}{shorthand}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{setToken}{(}{Token.FOR}{)}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{DO}{:}}{{case}{WHILE}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Token}}{type}}{:}{types}{)}{{{}{{if}{(}{{{c}{.}{getToken}{()}}{==}{type}}{)}{{{}{{return}{c}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isConst}{()}}{)}{{{}{{{handleDeclarationList}{(}{n}{,}{{n}{.}{getParent}{()}}{)}}{;}}{}}}}{{{n}{.}{setToken}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{declarationList}{.}{setToken}{(}{Token.VAR}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{currentProp}{.}{setToken}{(}{Token.STRING}{)}}{;}}{{{newProp}{=}{{{IR}{.}{getprop}{(}{{objectToExtend}{.}{cloneTree}{()}}{,}{currentProp}{)}}{.}{srcref}{(}{currentProp}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{member}{.}{setToken}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{setToken}{(}{Token.VAR}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{dollarChildProp}{=}{{n}{.}{getGrandparent}{()}}}{;}}{{{dollarChildProp}{.}{setToken}{(}{Token.GETELEM}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{node}{.}{getToken}{()}}{)}{{}{{case}{NAME}{:}}{{case}{STRING}{:}}{{case}{STRING_KEY}{:}}{{return}{{node}{.}{getString}{()}}{;}}{default:}{{return}{{compiler}{.}{toSource}{(}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Token}}{{inverseOperator}{=}{{NodeUtil}{.}{getInverseOperator}{(}{{subtree}{.}{getToken}{()}}{)}}}{;}}{{{subtree}{.}{setToken}{(}{inverseOperator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{jsdoc}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{return}{{{jsdocNode}{!=}{null}}{&&}{{{jsdocNode}{.}{getToken}{()}}{==}{Token.ELLIPSIS}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{thisRoot}{.}{getToken}{()}}{==}{Token.BANG}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{isPropDeclared}{=}{{{propNode}{.}{getToken}{()}}{==}{Token.COLON}}}{;}}}
{AST_ROOT_SC2NF{{{importedName}{.}{setToken}{(}{Token.NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{key}{.}{setToken}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{key}{.}{setToken}{(}{Token.SETTER_DEF}{)}}{;}}}
{AST_ROOT_SC2NF{{{key}{.}{setToken}{(}{Token.GETTER_DEF}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{irNode}{.}{setToken}{(}{Token.BLOCK}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{name}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getToken}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{setToken}{(}{TEMPLATE_LOCAL_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{setToken}{(}{TEMPLATE_TYPE_PARAM}{)}}{;}}}
{AST_ROOT_SC2NF{{{keyNode}{.}{setToken}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{keyNode}{.}{setToken}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{{n}{.}{isScript}{()}}{||}{{n}{.}{isFunction}{()}}}{)}}{&&}{{comp}{.}{hasScopeChanged}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{boolean}{taintsThis}{()}{{{}{{return}{{getMask}{(}{TAINTS_THIS_MASK}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{taintsGlobalState}{()}{{{}{{return}{{getMask}{(}{TAINTS_GLOBAL_STATE_MASK}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{pureFunction}{()}{{{}{{return}{{getMask}{(}{PURE_FUNCTION_MASK}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{node}{.}{isFunction}{()}}{)}{{{}{{{functionSideEffectMap}{.}{put}{(}{node}{,}{{createFunctionInfo}{(}{node}{,}{parent}{)}}{)}}{;}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Definition}}{>}}{{defs}{=}{{getFunctionDefinitions}{(}{definitionProvider}{,}{callSite}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{{new}{{MinimizeExitPoints}}{(}{compiler}{)}}{.}{asCompilerPass}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clConstantHoisterPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{=}{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{useTypesForOptimization}{=}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForLocalOptimization}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{shouldAmbiguateProperties}{()}{{{}{{return}{{this}{.}{ambiguateProperties}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{shouldDisambiguateProperties}{()}{{{}{{return}{{this}{.}{disambiguateProperties}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerOptions}}{getOptions}{(}{{{CompilerOptions}}{options}}{)}{{{}{{{options.useTypesForLocalOptimization}{=}{true}}{;}}{{return}{{super}{.}{getOptions}{(}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{CompilerPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeFoldConstants}}{(}{late}{,}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForLocalOptimization}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{getOptions}{()}}{.}{useTypesForLocalOptimization}}}
{AST_ROOT_SC2NF{{final}{boolean}{{useTypesForOptimization}{=}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForLocalOptimization}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForLocalOptimization}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getOptions}{()}}}{;}}{{{options.useTypesForLocalOptimization}{=}{useTypesForOptimization}}{;}}{{{options}{.}{setJ2clPass}{(}{CompilerOptions.J2clPassMode.ON}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockitoOperations}{.}{reportLastControlForStubbing}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoOperations}{.}{reportLastControlForStubbing}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{replay}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{replay}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verify}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{simpleMethodWithArgument}{(}{STRING_CONSTANT}{)}}{;}}{{{mock}{.}{simpleMethodWithArgument}{(}{STRING_CONSTANT}{)}}{;}}{{{verify}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{addInvocation}{(}{{{InvocationWithMatchers}}{invocation}}{)}{{{}{{{{this}{.}{registeredInvocations}}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{behavior}{.}{addInvocation}{(}{invocationWithMatchers}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{proxyFactory}{.}{createProxy}{(}{toMock}{,}{{new}{{MockitoObjectMethodsFilter}}{(}{toMock}{,}{{new}{{MockInvocationHandler}}{(}{this}{)}}{,}{name}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{proxyFactory}{.}{createProxy}{(}{toMock}{,}{{new}{{MockitoObjectMethodsFilter}}{(}{toMock}{,}{{new}{{MockInvocationHandler}}{(}{this}{)}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Field}}{{methodField}{=}{{retrieveField}{(}{{{MockitoObjectMethodsFilter}}{.}{class}}{,}{{{correctMethod}{.}{getName}{()}}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{AssertionErrorWrapper}}{(}{{new}{{AssertionError}}{(}{{STRING_CONSTANT}{+}{{actual}{.}{toString}{()}}{+}{STRING_CONSTANT}{+}{{errorMessage}{.}{toString}{()}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnedType}{.}{isPrimitive}{()}}{)}{{{}{{{returnedType}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{CrazyMatchers}{.}{find}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{CrazyMatchers}{.}{not}{(}{{notNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{CrazyMatchers}{.}{not}{(}{{isNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{CrazyMatchers}{.}{or}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{eq}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{CrazyMatchers}{.}{cmpEq}{(}{{new}{{BigDecimal}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{{new}{{InvocationWithMatchers}}{(}{invocation}{,}{null}{)}}{.}{hashCode}{()}}{,}{{equalTo}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{first}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{first}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Same}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{MethodSelector}}{<}{{T}}{>}}{toThrow}{(}{{{Throwable}}{throwable}}{)}{{{}{{{mockitoState}{.}{reportThrowableToBeSetOnVoidMethod}{(}{throwable}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{MockitoState}{.}{instance}{()}}{.}{verifyingStarted}{(}{{VerifyingMode}{.}{times}{(}{exactNumberOfInvocations}{)}}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{{MockitoState}{.}{instance}{()}}{.}{verifyingStarted}{(}{{VerifyingMode}{.}{anyTimes}{()}}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{EqualsWithDelta}}{(}{value}{,}{delta}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{EqualsWithDelta}}{(}{value}{,}{delta}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{Null.NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{Any.ANY}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockitoExpectation}}{{controlToStub}{=}{{{MockitoState}{.}{instance}{()}}{.}{removeControlToBeStubbed}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{synchronized}{void}{verifyingStarted}{(}{{{VerifyingMode}}{verify}}{)}{{{}{{{checkForUnfinishedVerification}{()}}{;}}{{{verifyingModeLocal}{.}{set}{(}{verify}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{state}{.}{verificationScenario}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setMock}{(}{{{T}}{mock}}{)}{{{}{{{{this}{.}{mock}}{=}{mock}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{lastInvocation}{=}{{behavior}{.}{lastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{mode}{,}{{mockitoState}{.}{removeVerifyingMode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{registeredInvocation}{.}{getInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{{MockitoState}{.}{instance}{()}}{.}{pullControlToBeStubbed}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoExpectation}}{{controlToStub}{=}{{{MockitoState}{.}{instance}{()}}{.}{pullControlToBeStubbed}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{MethodSelector}}{<}{{T}}{>}}{toThrow}{(}{{{Throwable}}{throwable}}{)}{{{}{{{throwableToBeSetOnVoidMethod}{=}{throwable}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{withBooleanVarargs}{(}{{int}{value}}{,}{{boolean}{.}{.}{.}{b}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockControl}}{{control}{=}{{lastControl}{.}{get}{()}}}{;}}{{{lastControl}{.}{set}{(}{null}{)}}{;}}{{return}{control}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MockAwareStub}{()}{{{}{{super}{(}{{{Object}}{.}{class}}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{{VerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{{VerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{{VerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{exactNumberOfInvocations}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{new}{{VerifyingMode}}{(}{exactNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsAssertionError}{(}{{int}{expectedInvoked}}{,}{{int}{actuallyInvoked}}{)}{{{}{{super}{(}{{STRING_CONSTANT}{+}{expectedInvoked}{+}{STRING_CONSTANT}{+}{actuallyInvoked}}{,}{{new}{{LastClassIsCglibEnchantedFilter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mock}{==}{null}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{Mockito}{.}{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{verify}{(}{mock}{)}}{;}}{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verify}{(}{mock}{)}}{;}}{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{get}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mockitoState}{.}{verifyingStarted}{(}{{VerifyingMode}{.}{anyTimes}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsAssertionError}{(}{{int}{expectedInvoked}}{,}{{int}{actuallyInvoked}}{)}{{{}{{super}{(}{{STRING_CONSTANT}{+}{expectedInvoked}{+}{STRING_CONSTANT}{+}{actuallyInvoked}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{actuallyInvoked}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{VerificationAssertionError}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{{invocation}{.}{toString}{()}}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{expected}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{assertEquals}{(}{expected}{,}{{error}{.}{getMessage}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{message}{+=}{{STRING_CONSTANT}{+}{expected}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{void}{simpleMethod}{(}{{{String}}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{VerificationAssertionError}}{(}{{STRING_CONSTANT}{+}{verificationErrorMessage}{+}{STRING_CONSTANT}{+}{mockName}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{{registeredInvocation}{.}{toString}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{reader}{.}{read}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertEquals}{(}{ioException}{,}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{public}{InstanceOf}{(}{{{{Class}}{<}{?}{>}}{clazz}}{)}{{{}{{{{this}{.}{clazz}}{=}{clazz}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{newInstance}{(}{{{{Class}}{<}{?}{>}}{clazz}}{)}{throws}{{InstantiationException}}{{{}{{return}{{ObjenesisHelper}{.}{newInstance}{(}{clazz}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{paramType}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{emptyReturnValueFor}{(}{{{{Class}}{<}{?}{>}}{type}}{)}{{{}{{return}{{emptyReturnValueToType}{.}{get}{(}{type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Mockito}{.}{verify}{(}{mock}{,}{{VerifyingMode}{.}{inSequence}{(}{exactNumberOfInvocations}{,}{mocks}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{this}{.}{isLastStackElementToRemove}{(}{trace}{)}}{)}{{{}{{{lastToRemove}{=}{i}}{;}}{}}}}{{{i}{++}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{list}{,}{NUMBER_CONSTANT}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{list}{,}{NUMBER_CONSTANT}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{map}{,}{NUMBER_CONSTANT}{)}}{.}{put}{(}{{anyObject}{()}}{,}{{anyObject}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{,}{NUMBER_CONSTANT}{)}}{.}{oneArg}{(}{two}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{orderOfInvocationsMatters}{()}{{{}{{return}{{!}{{mocksToBeVerifiedInSequence}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{state}{.}{verifyingStarted}{(}{{VerifyingMode}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{mock}{)}}{.}{simpleMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{ClassWithoutConstructor}}{.}{class}}{,}{superClass}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{Object}}{.}{class}}{,}{superClass}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifyNoMoreInteractions}{(}{list}{,}{map}{,}{set}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{atLeastOnceMode}{()}{{{}{{return}{{expectedNumberOfInvocations}{==}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{lastInvocation}{=}{{{behavior}{.}{getInvocationForStubbing}{()}}{.}{getInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{invocation}{.}{setSequenceNumber}{(}{{mockitoState}{.}{nextSequenceNumber}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{{new}{{ExpectedInvocation}}{(}{invocation}{,}{null}{)}}{.}{hashCode}{()}}{,}{{equalTo}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expectedInvocation}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expectedInvocation}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expected}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expected}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expected}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expected}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expected}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{boolean}{{shouldMarkAsVerified}{=}{{{verifyingMode}{.}{atLeastOnceMode}{()}}{||}{{{verifyingMode}{.}{getExpectedNumberOfInvocations}{()}}{>}{verifiedSoFar}}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{expectedInvocationCount}}{=}{expectedNumberOfInvocations}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{new}{{Invocation}}{(}{null}{,}{m}{,}{args}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationChunk}}{>}}{{chunks}{=}{{registeredInvocations}{.}{unverifiedInvocationChunks}{(}{mode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{similarInvocation}{=}{{registeredInvocations}{.}{findSimilarInvocation}{(}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{actuallyInvoked}{=}{{registeredInvocations}{.}{countActual}{(}{expected}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{actualCount}{=}{{registeredInvocations}{.}{countActual}{(}{expected}{)}}}{;}}}
{AST_ROOT_SC2NF{{{registeredInvocations}{.}{markInvocationsAsVerified}{(}{expected}{,}{verifyingMode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{assert}{{invocationForStubbing}{!=}{null}}{;}}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{{this}{.}{results}}{.}{put}{(}{invocationForStubbing}{,}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{,}{EMPTY_LIST}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{.}{isVerifiedInOrder}{()}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markAllInvocationsAsVerified}{()}{{{}{{for}{(}{{{Invocation}}{invocation}}{:}{invocations}{)}{{{}{{{invocation}{.}{markVerifiedInOrder}{()}}{;}}{{{invocation}{.}{markVerified}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mocks.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{{Exceptions}{.}{mocksHaveToBePassedAsArguments}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{verify}{(}{mock}{,}{{VerifyingMode}{.}{inOrder}{(}{expectedNumberOfInvocations}{,}{mocksToBeVerifiedInOrder}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationChunk}}{>}}{{chunks}{=}{{registered}{.}{unverifiedInvocationChunks}{(}{{inOrder}{(}{null}{,}{{asList}{(}{mock}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{unverifiedInvocationChunks}{(}{{inOrder}{(}{null}{,}{dummyMocks}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{{invocation}{=}{{new}{{ExpectedInvocation}}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailWhenLastMethodCalledFirst}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{oneArg}{(}{true}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodExpected}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsExpected}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{atLeastOnce}}{&&}{{actuallyInvoked}{!=}{expectedInvoked}}}{)}{{{}{{throw}{{new}{{NumberOfInvocationsAssertionError}}{(}{expectedInvoked}{,}{actuallyInvoked}{,}{{expected}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailVerification}{(}{)}{throws}{{Exception}}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{VerificationError}}{expected}}}
{AST_ROOT_SC2NF{{{VerificationError}}{expected}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberOfInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberOfInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{verify}{(}{mock}{,}{NUMBER_CONSTANT}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}{{{assertTrue}{(}{{{e}{.}{getMessage}{()}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}{{{assertTrue}{(}{{{e}{.}{getMessage}{()}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{{buffer}{.}{append}{(}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{wantedCountIsZero}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{matchResult}{(}{{{(}{{(}{{Comparable}}{)}{actual}}{)}}{.}{compareTo}{(}{wanted}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{wanted}}{=}{value}}{;}}{{{{this}{.}{delta}}{=}{delta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{actual}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{operator}{.}{matchResult}{(}{{comparator}{.}{compare}{(}{{(}{{T}}{)}{actual}}{,}{wanted}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{appendQuoting}{(}{buffer}{)}}{;}}{{{buffer}{.}{append}{(}{wanted}{)}}{;}}{{{appendQuoting}{(}{buffer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Mockito}{.}{verify}{(}{mock}{,}{{VerifyingMode}{.}{inOrder}{(}{{verifyingMode}{.}{wantedCount}{()}}{,}{mocksToBeVerifiedInOrder}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{<}{{T}}{>}{{T}}{verify}{(}{{{T}}{mock}}{,}{{int}{wantedNumberOfInvocations}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{Integer}}{wantedCount}{()}{{{}{{return}{wantedInvocationCount}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{reportStrictOrderDiscrepancy}{(}{wanted}{,}{{{chunks}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{actual}{!=}{null}}{)}{{{}{{{reportDiscrepancy}{(}{wanted}{,}{actual}{)}}{;}}{}}}{else}{{{}{{{Exceptions}{.}{wantedButNotInvoked}{(}{{wanted}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{m}{.}{isBridge}{()}}{)}{{{}{{if}{(}{{{m}{.}{getName}{()}}{.}{equals}{(}{methodName}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{print}{(}{{{Object}}{message}}{)}{{{}{{{mock}{.}{print}{(}{message}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{say}{(}{{{String}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{say}{(}{{{Object}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{Exceptions}{.}{noMoreInteractionsWanted}{(}{{unverified}{.}{toString}{()}}{,}{message}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrows}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{)}}}{;}}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{synchronized}{void}{verifyingStarted}{(}{{{VerifyingMode}}{verify}}{)}{{{}{{{validateState}{()}}{;}}{{{verifyingModeLocal}{.}{set}{(}{verify}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockitoState}{.}{instance}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{{MockitoState}{.}{instance}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{assert}{{invocationForStubbing}{!=}{null}}{;}}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{results}{.}{put}{(}{invocationForStubbing}{,}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{{IAnswer}}{<}{{Object}}{>}}{()}{{{}{{public}{{Object}}{answer}{(}{)}{throws}{{Throwable}}{{{}{{throw}{{throwable}{.}{fillInStackTrace}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{simpleMethod}{(}{{{String}}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{simpleMethod}{(}{{int}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{simpleMethod}{(}{{{String}}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{find}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{not}{(}{{notNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{not}{(}{{isNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{or}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{eq}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{cmpEq}{(}{{new}{{BigDecimal}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{{@}{Ignore}}{public}{void}{shouldDetectProblemsWithMatchers}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{invocationForStubbing}{!=}{null}}{;}}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{stubbed}{.}{addFirst}{(}{{new}{{StubbedInvocation}}{(}{invocationForStubbing}{,}{result}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{call}{.}{equals}{(}{callWithNewStringInstance}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{result}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{suffix}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{wanted}{+}{STRING_CONSTANT}{+}{delta}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{prefix}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{{clazz}{.}{getName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{{getName}{()}}{+}{STRING_CONSTANT}{+}{wanted}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{buffer}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{substring}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuilder}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{synchronized}{{LastArguments}}{instance}{()}{{{}{{return}{INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{MockitoState}{.}{instance}{()}}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{behavior}{.}{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MockitoState}{.}{instance}{()}}{.}{stubbingCompleted}{()}}{;}}{{{behavior}{.}{addResult}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{synchronized}{{MockitoState}}{instance}{()}{{{}{{return}{INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{verifyingStarted}{(}{{{VerifyingMode}}{verify}}{)}{{{}{{{validateState}{()}}{;}}{{{verifyingMode}{=}{verify}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{toAssert}}{)}{{{}{{{matcherStack}{.}{clear}{()}}{;}}{{throw}{{new}{{InvalidUseOfMatchersException}}{(}{message}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{mock}{)}}{.}{oneArray}{(}{{aryEq}{(}{nullArray}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{map}{.}{put}{(}{call}{,}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{three}{.}{simpleMethod}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{map}{.}{put}{(}{invocation}{,}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stackTrace}}{=}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StackTraceFilter}}{{filter}{=}{{new}{{StackTraceFilter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StackTraceFilter}}{{filter}{=}{{new}{{StackTraceFilter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{{{e}{.}{getCause}{()}}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StackTraceFilter}}{{filter}{=}{{new}{{StackTraceFilter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actual}{=}{{registeredInvocations}{.}{findActualInvocation}{(}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{UndesiredInvocation}}{{cause}{=}{{buildUndesiredInvocationCause}{(}{actualInvocationStackTrace}{,}{STRING_CONSTANT}{,}{undesired}{)}}}{;}}{{throw}{{new}{{VerificationError}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{UndesiredInvocation}}{{cause}{=}{{buildUndesiredInvocationCause}{(}{actualInvocationStackTrace}{,}{STRING_CONSTANT}{,}{undesired}{)}}}{;}}{{throw}{{new}{{VerificationError}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TooLittleActualInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{MockitoExceptionTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{Exceptions}{.}{strictlyWantedInvocationDiffersFromActual}{(}{wanted}{,}{actual}{,}{{actualInvocation}{.}{getStackTrace}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{{MethodSelector}}{<}{{T}}{>}}{toThrow}{(}{{{Throwable}}{throwable}}{)}{{{}{{{stubber}{.}{addThrowableForVoidMethod}{(}{throwable}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setInvocationForPotentialStubbing}{(}{{{InvocationMatcher}}{invocation}}{)}{{{}{{{{this}{.}{invocationForStubbing}}{=}{invocation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{invocationWithMatchers}}}
{AST_ROOT_SC2NF{{{InvocationMatcherTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{s}{.}{setInvocationForPotentialStubbing}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toMatchingInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wantedInvocation}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wantedInvocation}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{addInvocation}{(}{{{InvocationMatcher}}{invocation}}{)}{{{}{{{{this}{.}{registeredInvocations}}{.}{add}{(}{{invocation}{.}{getInvocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{registered}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{registered}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{registered}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{InvocationMatcher}}{(}{null}{)}}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{inOrder}{(}{null}{,}{{asList}{(}{mock}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{expected}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{invocation}}}
{AST_ROOT_SC2NF{{{EmptyReturnValuesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{if}{(}{{verifyingMode}{!=}{null}}{)}{{{}{{{behavior}{.}{verify}{(}{invocationWithMatchers}{,}{verifyingMode}{)}}{;}}{{return}{{EmptyReturnValues}{.}{emptyValueFor}{(}{{method}{.}{getReturnType}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoStateImplTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.mockitoState}{.}{pullControlToBeStubbed}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mockitoState}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoState}{.}{stubbingCompleted}{()}}{;}}{{{addResult}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockitoState}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockitoState}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{mockitoState}{.}{verifyingStarted}{(}{mode}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MockControl}}{<}{{T}}{>}}{{mockControl}{=}{{new}{{{MockControl}}{<}{{T}}{>}}{(}{mockitoState}{,}{{new}{{MatchersBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerifyingRecorderTest}}{.}{class}}}
{AST_ROOT_SC2NF{{public}{void}{andThrows}{(}{{{Throwable}}{throwable}}{)}{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addThrowable}{(}{throwable}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{andReturn}{(}{{{T}}{value}}{)}{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addReturnValue}{(}{value}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{timeline}{.}{setStartTime}{(}{{{firstMondayAfter1900}{()}}{+}{{NUMBER_CONSTANT}{*}{{timeline}{.}{getSegmentSize}{()}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{SegmentedTimeline}}{{timeline}{=}{{new}{{SegmentedTimeline}}{(}{DAY_SEGMENT_SIZE}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{timeline}{.}{setStartTime}{(}{{firstMondayAfter1900}{()}}{)}}{;}}{{return}{timeline}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{RegularTimePeriod.DEFAULT_TIME_ZONE}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{getDatasetCount}{()}}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{index}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{getDatasetCount}{()}}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{index}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{index}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{index}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.seriesShapesVisible}{=}{{(}{{BooleanList}}{)}{{{this}{.}{seriesShapesVisible}}{.}{clone}{()}}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{pos}{=}{{getIndex}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Range}}{(}{{this}{.}{minimumRangeValue}}{,}{{this}{.}{maximumRangeValue}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{{getVolumePaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{gap}}{!=}{that.gap}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}}
{AST_ROOT_SC2NF{{{MessageBox}}{{messageBox}{=}{{new}{{MessageBox}}{(}{{{this}{.}{canvas}}{.}{getShell}{()}}{,}{{SWT.OK}{|}{SWT.ICON_ERROR}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SWTChartEditor}}{{editor}{=}{{new}{{SWTChartEditor}}{(}{{{this}{.}{canvas}}{.}{getDisplay}{()}}{,}{{this}{.}{chart}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{this}{.}{switchColors}{()}}{;}}{{{{this}{.}{gc}}{.}{fillRectangle}{(}{x}{,}{y}{,}{width}{,}{height}{)}}{;}}{{{this}{.}{switchColors}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gc}}{.}{drawLine}{(}{x1}{,}{y1}{,}{x2}{,}{y2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{gc}}{.}{setClipping}{(}{clipPath}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gc}}{.}{setClipping}{(}{x}{,}{y}{,}{width}{,}{height}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{org.eclipse.swt.graphics.Rectangle}}{{clip}{=}{{{this}{.}{gc}}{.}{getClipping}{()}}}{;}}{{return}{{new}{{Rectangle}}{(}{clip.x}{,}{clip.y}{,}{clip.width}{,}{clip.height}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Path}}{{path}{=}{{toSwtPath}{(}{s}{)}}}{;}}{{{{this}{.}{gc}}{.}{setClipping}{(}{path}{)}}{;}}{{{path}{.}{dispose}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{org.eclipse.swt.graphics.Font}}{{swtFont}{=}{{getSwtFontFromPool}{(}{font}{)}}}{;}}{{{{this}{.}{gc}}{.}{setFont}{(}{swtFont}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{gc}}{.}{setForeground}{(}{swtColor}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setTransform}{(}{{{AffineTransform}}{Tx}}{)}{{{}{{{{this}{.}{gc}}{.}{setTransform}{(}{{toSwtTransform}{(}{Tx}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gc}}{.}{drawImage}{(}{image}{,}{x}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Path}}{{path}{=}{{toSwtPath}{(}{shape}{)}}}{;}}{{{{this}{.}{gc}}{.}{drawPath}{(}{path}{)}}{;}}{{{path}{.}{dispose}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{swtColor}{=}{{SWTUtils}{.}{toSwtColor}{(}{{{this}{.}{gc}}{.}{getDevice}{()}}{,}{awtColor}{)}}}{;}}}
{AST_ROOT_SC2NF{{protected}{DialPointer}{()}{{{}{{this}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DialValueIndicator}}{{i1}{=}{{new}{{DialValueIndicator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DialValueIndicator}}{{i1}{=}{{new}{{DialValueIndicator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{dialFrame}}{=}{{new}{{ArcDialFrame}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{ArcDialFrameTests}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Color}}{getColor}{()}{{{}{{return}{{this}{.}{myColor}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{myColor}}{!=}{null}}{)}{{{}{{{{this}{.}{myColor}}{.}{dispose}{()}}{;}}{}}}}{{{{this}{.}{myColor}}{=}{color}}{;}}{}}}}
{AST_ROOT_SC2NF{{{e.gc}{.}{setBackground}{(}{{{SWTPaintCanvas}{.}{this}}{.}{myColor}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{drawBarOutline}}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{XYSplineRendererTests}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{StandardDialFrameTests}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Comparable}}{name}}}
{AST_ROOT_SC2NF{{{Comparable}}{name}}}
{AST_ROOT_SC2NF{{{Comparable}}{name}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{axis}}{.}{resizeRange}{(}{factor}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{values}{!=}{null}}{)}{{{}{{return}{{Collections}{.}{unmodifiableList}{(}{values}{)}}{;}}{}}}{else}{{{}{{return}{Collections.EMPTY_LIST}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{PeriodAxisLabelInfo}}{{clone}{=}{{(}{{PeriodAxisLabelInfo}}{)}{{super}{.}{clone}{()}}}}{;}}{{return}{clone}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SWTUtils}{.}{toAwtFont}{(}{{getDisplay}{()}}{,}{{this}{.}{tickLabelFont}}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Stroke}}{getStroke}{()}{{{}{{return}{{{this}{.}{strokeCanvas}}{.}{getStroke}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Color}}{getOutlinePaint}{()}{{{}{{return}{{{this}{.}{outlinePaintCanvas}}{.}{getColor}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Color}}{getBackGroundPaint}{()}{{{}{{return}{{{this}{.}{backgroundPaintCanvas}}{.}{getColor}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{radius}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{==}{null}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CategoryPlot}}{{plot}{=}{{(}{{CategoryPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedRangeAxisSpace}{(}{space}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{CategoryPlot}}{{plot}{=}{{(}{{CategoryPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedDomainAxisSpace}{(}{space}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{canvas}}{=}{{new}{{Canvas}}{(}{this}{,}{{SWT.DOUBLE_BUFFERED}{|}{SWT.NO_BACKGROUND}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{baseShapesVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{baseShapesVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemToolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseToolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseItemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{new}{{ComparableObjectSeries}}{(}{null}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{pass}{=}{true}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{errorIndicatorPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{errorIndicatorStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{plotLines}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemURLGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemMargin}}{=}{margin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fillBox}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useSeriesOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useFillPaint}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesFilled}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesFilled}}{.}{setBoolean}{(}{series}{,}{filled}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesFilled}}{=}{filled}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useOutlinePaint}}{=}{use}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOutlines}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseLinesVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesLinesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{linesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{yOffset}}{=}{yOffset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{xOffset}}{=}{xOffset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maxItemWidth}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{includeBaseInRange}}{!=}{include}}{)}{{{}{{{{this}{.}{includeBaseInRange}}{=}{include}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeItemLabelPositionFallback}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveItemLabelPositionFallback}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gradientPaintTransformer}}{=}{transformer}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minimumBarLength}}{=}{min}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumBarWidth}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBarOutline}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemMargin}}{=}{percent}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{base}}{=}{base}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useFillPaint}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOutlines}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useSeriesOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{stagger}}{=}{shouldStagger}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useOutlinePaint}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useFillPaint}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOutlines}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesFilled}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesFilled}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesFilled}}{=}{filled}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseLinesVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesLinesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{linesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{yOffset}}{=}{yOffset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{xOffset}}{=}{xOffset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeItemLabelPositionFallback}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveItemLabelPositionFallback}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gradientPaintTransformer}}{=}{transformer}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBarOutline}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{margin}}{=}{margin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{useYInterval}}{!=}{use}}{)}{{{}{{{{this}{.}{useYInterval}}{=}{use}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{base}}{=}{base}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showOutline}}{=}{show}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{drawVolume}}{!=}{flag}}{)}{{{}{{{{this}{.}{drawVolume}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{downPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{upPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{autoWidthFactor}}{!=}{autoWidthFactor}}{)}{{{}{{{{this}{.}{autoWidthFactor}}{=}{autoWidthFactor}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemURLGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemToolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{foregroundAnnotations}}{.}{clear}{()}}{;}}{{{{this}{.}{backgroundAnnotations}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseToolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseItemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fillBox}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{boxPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{width}{!=}{{this}{.}{boxWidth}}}{)}{{{}{{{{this}{.}{boxWidth}}{=}{width}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showOutline}}{=}{show}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showOutline}}{=}{show}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{roundXCoordinates}}{=}{round}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{closeTickPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{openTickPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawCloseTicks}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOpenTicks}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{roundXCoordinates}}{=}{round}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{capLength}}{=}{length}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{drawYError}}{!=}{draw}}{)}{{{}{{{{this}{.}{drawYError}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawXError}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{org.eclipse.swt.graphics.Image}}{{im}{=}{{new}{{org.eclipse.swt.graphics.Image}}{(}{{{this}{.}{gc}}{.}{getDevice}{()}}{,}{{SWTUtils}{.}{convertToSWT}{(}{image}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{XYPlot}}{{plot}{=}{{(}{{XYPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedRangeAxisSpace}{(}{space}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{XYPlot}}{{plot}{=}{{(}{{XYPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedDomainAxisSpace}{(}{space}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sb}{.}{append}{(}{{STRING_CONSTANT}{+}{{htmlEscape}{(}{name}{)}}{+}{STRING_CONSTANT}{+}{{htmlEscape}{(}{name}{)}}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{BufferedImage}}{{image}{=}{{new}{{BufferedImage}}{(}{imageWidth}{,}{imageHeight}{,}{BufferedImage.TYPE_INT_ARGB}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{createBufferedImage}{(}{width}{,}{height}{,}{BufferedImage.TYPE_INT_ARGB}{,}{info}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{URLUtilities}{.}{encode}{(}{urlText}{,}{STRING_CONSTANT}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{zone}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{this}{.}{seriesToGroupMap}}{.}{getGroupIndex}{(}{{{this}{.}{seriesToGroupMap}}{.}{getGroup}{(}{{{plot}{.}{getDataset}{(}{{plot}{.}{getIndexOf}{(}{this}{)}}{)}}{.}{getRowKey}{(}{row}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BufferedImage}}{{image}{=}{{chart}{.}{createBufferedImage}{(}{width}{,}{height}{,}{BufferedImage.TYPE_INT_RGB}{,}{info}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BufferedImage}}{{image}{=}{{chart}{.}{createBufferedImage}{(}{width}{,}{height}{,}{BufferedImage.TYPE_INT_RGB}{,}{info}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Comparable}}{key}}}
{AST_ROOT_SC2NF{{double}{{seriesGap}{=}{{{{dataArea}{.}{getHeight}{()}}{*}{{getItemMargin}{()}}}{/}{{(}{{categoryCount}{*}{{(}{{seriesCount}{-}{NUMBER_CONSTANT}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{showBase}}{)}{{{}{{{result}{.}{append}{(}{{this}{.}{baseLabel}}{)}}{;}}{{{result}{.}{append}{(}{{this}{.}{powerLabel}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{categoryKeys.length}{!=}{{getCategoryCount}{()}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{rangeGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{domainGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{data}}{=}{data}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedLegendItems}}{=}{items}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedRangeAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedDomainAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isRangeCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairLockedOnData}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isDomainCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairLockedOnData}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{annotations}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeTickBandPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainTickBandPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeZeroBaselineVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainZeroBaselineVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{rangeGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{domainGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{weight}}{=}{weight}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{orientation}{!=}{{this}{.}{orientation}}}{)}{{{}{{{{this}{.}{orientation}}{=}{orientation}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{foregroundAlpha}}{!=}{alpha}}{)}{{{}{{{{this}{.}{foregroundAlpha}}{=}{alpha}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{outlineVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{backgroundImageAlpha}}{=}{alpha}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{backgroundImageAlignment}}{!=}{alignment}}{)}{{{}{{{{this}{.}{backgroundImageAlignment}}{=}{alignment}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{backgroundImage}}{=}{image}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawingSupplier}}{=}{supplier}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{backgroundAlpha}}{!=}{alpha}}{)}{{{}{{{{this}{.}{backgroundAlpha}}{=}{alpha}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{insets}}{=}{insets}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{noDataMessage}}{=}{message}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{anchorValue}}{=}{value}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawSharedDomainAxis}}{=}{draw}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedRangeAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedDomainAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{weight}}{=}{weight}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{annotations}}{.}{clear}{()}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isRangeCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairLockedOnData}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairVisible}}{=}{flag}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedLegendItems}}{=}{items}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{rangeGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{domainGridlinesVisible}}{=}{visible}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{fireChangeEvent}{()}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{HashCodeBuilderTest}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{{this}{.}{cause}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Throwable}}{[]}}{{throwables}{=}{{this}{.}{getThrowables}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Throwable}}{{nestedCause}{=}{{ExceptionUtils}{.}{getCause}{(}{{this}{.}{cause}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{cause}}{=}{{(}{{Throwable}}{)}{cause}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{ExceptionUtils}{.}{indexOfThrowable}{(}{{this}{.}{nestable}}{,}{type}{,}{fromIndex}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ExceptionUtils}{.}{getThrowables}{(}{{this}{.}{nestable}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{{this}{.}{nestable}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Throwable}}{{nestedCause}{=}{{ExceptionUtils}{.}{getCause}{(}{{this}{.}{nestable}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{n}{=}{{getTester1}{(}{{getThrowable}{(}{{msgs}{[}{NUMBER_CONSTANT}{]}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableErrorTestCase}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{NestableRuntimeExceptionTester2}}{(}{msg}{,}{{(}{{Throwable}}{)}{n}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableRuntimeExceptionTestCase}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RandomStringUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSummaryObjectEndText}{()}{{{}{{return}{{super}{.}{getSummaryObjectEndText}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSummaryObjectStartText}{()}{{{}{{return}{{super}{.}{getSummaryObjectStartText}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSizeEndText}{()}{{{}{{return}{{super}{.}{getSizeEndText}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSizeStartText}{()}{{{}{{return}{{super}{.}{getSizeStartText}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getNullText}{()}{{{}{{return}{{super}{.}{getNullText}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFieldSeparator}{()}{{{}{{return}{{super}{.}{getFieldSeparator}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFieldNameValueSeparator}{()}{{{}{{return}{{super}{.}{getFieldNameValueSeparator}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getContentEnd}{()}{{{}{{return}{{super}{.}{getContentEnd}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getContentStart}{()}{{{}{{return}{{super}{.}{getContentStart}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getArraySeparator}{()}{{{}{{return}{{super}{.}{getArraySeparator}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getArrayEnd}{()}{{{}{{return}{{super}{.}{getArrayEnd}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getArrayStart}{()}{{{}{{return}{{super}{.}{getArrayStart}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setArrayContentDetail}{(}{{boolean}{arrayContentDetail}}{)}{{{}{{{super}{.}{setArrayContentDetail}{(}{arrayContentDetail}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setDefaultFullDetail}{(}{{boolean}{defaultFullDetail}}{)}{{{}{{{super}{.}{setDefaultFullDetail}{(}{defaultFullDetail}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUseFieldNames}{(}{{boolean}{useFieldNames}}{)}{{{}{{{super}{.}{setUseFieldNames}{(}{useFieldNames}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUseIdentityHashCode}{(}{{boolean}{useIdentityHashCode}}{)}{{{}{{{super}{.}{setUseIdentityHashCode}{(}{useIdentityHashCode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setShortClassName}{(}{{boolean}{shortClassName}}{)}{{{}{{{super}{.}{setShortClassName}{(}{shortClassName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUseClassName}{(}{{boolean}{useClassName}}{)}{{{}{{{super}{.}{setUseClassName}{(}{useClassName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{style}{==}{null}}{)}{{{}{{{style}{=}{{getDefaultStyle}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{linebreak}{=}{SystemUtils.LINE_SEPARATOR}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{entry}{==}{null}}{)}{{{}{{return}{EMPTY_MAP}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ExceptionInInitializerError}}{ex}}{)}{{{}{{{assertTrue}{(}{{{ex}{.}{getException}{()}}{instanceof}{{IllegalArgumentException}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ExceptionInInitializerError}}{ex}}{)}{{{}{{{assertTrue}{(}{{{ex}{.}{getException}{()}}{instanceof}{{IllegalArgumentException}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ExceptionInInitializerError}}{ex}}{)}{{{}{{{assertTrue}{(}{{{ex}{.}{getException}{()}}{instanceof}{{IllegalArgumentException}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{TestExecutorUtils}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Number}}{getMaximum}{()}{{{}{{return}{max}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{member}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{Modifier}{.}{isPublic}{(}{{member}{.}{getModifiers}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{!}{{ReflectionUtils}{.}{isCompatable}{(}{{parameterTypes}{[}{n}{]}}{,}{{methodsParams}{[}{n}{]}}{)}}}}
{AST_ROOT_SC2NF{{!}{{ReflectionUtils}{.}{isCompatible}{(}{{parameterTypes}{[}{n}{]}}{,}{{methodsParams}{[}{n}{]}}{)}}}}
{AST_ROOT_SC2NF{{{{{methods}{[}{i}{]}}{.}{getName}{()}}{.}{equals}{(}{methodName}{)}}{&&}{{ReflectionUtils}{.}{isCompatible}{(}{paramTypes}{,}{{{methods}{[}{i}{]}}{.}{getParameterTypes}{()}}{)}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ReflectionException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{private}{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchMapExecutor}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchExecutor}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchMapTransformer}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchTransformer}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchMapExecutor}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchExecutor}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchMapTransformer}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchTransformer}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{clss}}{=}{listener}}{;}}}
{AST_ROOT_SC2NF{{{Method}}{{method}{=}{{getMethod}{(}{{object}{.}{getClass}{()}}{,}{methodName}{,}{parameterTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchMapExecutor}{(}{{new}{{HashMap}}{()}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchExecutor}{(}{{new}{{HashMap}}{()}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchMapTransformer}{(}{{new}{{HashMap}}{()}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchTransformer}{(}{{new}{{HashMap}}{()}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{buf}{.}{append}{(}{{ClassUtils}{.}{getShortClassName}{(}{th}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{withoutCause}{=}{{createExceptionWithoutCause}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ByteArrayOutputStream}}{{baos}{=}{{new}{{ByteArrayOutputStream}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{serialize}{(}{obj}{,}{baos}{)}}{;}}{{return}{{baos}{.}{toByteArray}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{{cls}{.}{getName}{()}}{.}{indexOf}{(}{CHAR_CONS}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{Enum}{.}{getEnumClassName}{(}{{getClass}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{Enum}{.}{getEnumClassName}{(}{{getClass}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{frames}{.}{add}{(}{{WRAPPED_MARKER}{+}{{{throwables}{[}{i}{]}}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{{Enum}{.}{getEnumClass}{(}{{getClass}{()}}{)}}{.}{getName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Entry}}{{entry}{=}{{(}{{Entry}}{)}{{cEnumClasses}{.}{get}{(}{{Enum}{.}{getEnumClass}{(}{{getClass}{()}}{)}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{Null}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{reverseArray}{(}{strs}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{join}{(}{array}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{reverse}{(}{strs}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{iso}{=}{{entityValue}{(}{entity}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInt}{(}{JVM_RANDOM}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{nextLong}{()}{{{}{{return}{{(}{long}{)}{{(}{{{Math}{.}{random}{()}}{*}{Long.MAX_VALUE}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{int}{)}{{(}{{{Math}{.}{random}{()}}{*}{n}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{random}{(}{count}{,}{NUMBER_CONSTANT}{,}{set.length}{,}{false}{,}{false}{,}{set}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{printPartialStackTrace}{(}{{{PrintWriter}}{out}}{)}{{{}{{{super}{.}{printStackTrace}{(}{out}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_ALPHANUMERIC_IDENTIFIER_FACTORY}{.}{nextStringIdentifier}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_NUMERIC_IDENTIFIER_FACTORY}{.}{nextStringIdentifier}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{LONG_IDENTIFIER_FACTORY}{.}{nextLongIdentifier}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{{cls}{.}{getName}{()}}{.}{indexOf}{(}{INNER_CLASS_SEPARATOR_CHAR}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{className}{.}{lastIndexOf}{(}{PACKAGE_SEPARATOR_CHAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReflectionToStringBuilder}{.}{isRegistered}{(}{value}{)}}{&&}{{!}{{(}{{{value}{instanceof}{{Number}}}{||}{{value}{instanceof}{{Boolean}}}{||}{{value}{instanceof}{{Character}}}}{)}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{ReflectionToStringBuilder}{.}{getRegistry}{()}}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{end}{=}{{{(}{int}{)}{CHAR_CONS}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{lastIdx}{<=}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{object}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{cal}{,}{{DateUtils}{.}{truncate}{(}{cal}{,}{Calendar.DATE}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{public}{BinaryEntityMap}{(}{{int}{growBy}}{)}{{{}{{super}{(}{growBy}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Entities.XML}{.}{unescape}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Entities.XML}{.}{escape}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Entities.HTML40}{.}{unescape}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Entities.HTML40}{.}{escape}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{entities}{.}{entityName}{(}{{isovalue}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{buf}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{{char}{{ch}{=}{{isovalue}{(}{i}{)}}}{;}}{{{buf}{.}{append}{(}{ch}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{pads}{>}{PAD_LIMIT}}{)}{{{}{{return}{{leftPad}{(}{str}{,}{size}{,}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pads}{>}{PAD_LIMIT}}{)}{{{}{{return}{{rightPad}{(}{str}{,}{size}{,}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{ArrayUtils}{.}{lastIndexOf}{(}{array}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{ArrayUtils}{.}{indexOf}{(}{array}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ObjectUtils}{.}{appendIdentityToString}{(}{buffer}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ObjectUtils}{.}{appendIdentityToString}{(}{{this}{.}{getStringBuffer}{()}}{,}{object}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{StringUtils}{.}{isNotEmptyTrimmed}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{StringUtils}{.}{isEmptyTrimmed}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{StringUtils}{.}{isNotEmpty}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{StringUtils}{.}{isEmpty}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{pads}{>}{PAD_LIMIT}}{)}{{{}{{return}{{leftPad}{(}{str}{,}{size}{,}{{String}{.}{valueOf}{(}{padChar}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AccessibleObject}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{byte}{[]}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{InputStream}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{null}{,}{null}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{iMap}{,}{null}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmpty}{(}{className}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmpty}{(}{className}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmpty}{(}{name}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmpty}{(}{className}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AccessibleObject}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{AccessibleObject}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{AccessibleObject}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{method}{=}{{{interfaces}{[}{i}{]}}{.}{getDeclaredMethod}{(}{methodName}{,}{parameterTypes}{)}}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{RandomUtils.JVM_RANDOM}{.}{setSeed}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{comparison}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{{comparison}{=}{superCompareTo}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{rule}{=}{{new}{{StringLiteral}}{(}{sub}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iTotal}{=}{{{iTotal}{*}{iConstant}}{+}{value}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iTotal}{=}{{{iTotal}{*}{iConstant}}{+}{value}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iTotal}{=}{{{iTotal}{*}{iConstant}}{+}{value}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{CHAR_CONS}{,}{{Entities.XML}{.}{entityValue}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{{Entities.ISO8859_1_ARRAY}{[}{{i}{%}{Entities.ISO8859_1_ARRAY.length}}{]}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{{Entities.HTML40_ARRAY}{[}{{i}{%}{Entities.HTML40_ARRAY.length}}{]}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{new}{{BigDecimal}}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{new}{{BigInteger}}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Long}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Integer}{.}{decode}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Double}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Float}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{new}{{BigInteger}}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Long}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Integer}{.}{decode}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Double}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Float}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{f}{.}{nextIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{random}{(}{count}{,}{start}{,}{end}{,}{letters}{,}{numbers}{,}{null}{,}{RANDOM}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{out}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{out}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{array1}{==}{null}}{||}{{array2}{==}{null}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{causeFrames}{==}{null}}{||}{{wrapperFrames}{==}{null}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{writer}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{stream}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{objectData}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{inputStream}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{outputStream}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{notNull}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{false}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{shortName}{=}{{ClassUtils}{.}{getShortClassName}{(}{{getEnumClass}{()}}{)}}}{;}}{{{iToString}{=}{{shortName}{+}{STRING_CONSTANT}{+}{{getName}{()}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{entry.unmodifiableList}{;}}}
{AST_ROOT_SC2NF{{return}{entry.unmodifiableMap}{;}}}
{AST_ROOT_SC2NF{{{text}{=}{{DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT}{.}{format}{(}{cal}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{at}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{EMPTY}{:}{str}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{repeat}{<=}{NUMBER_CONSTANT}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lastIdx}{<=}{NUMBER_CONSTANT}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{strLen}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idx}{!=}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{str}{.}{substring}{(}{NUMBER_CONSTANT}{,}{{idx}{+}{{sep}{.}{length}{()}}}{)}}{;}}{}}}{else}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idx}{!=}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{str}{.}{substring}{(}{idx}{)}}{;}}{}}}{else}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{ch}{==}{CHAR_CONS}}{||}{{ch}{==}{CHAR_CONS}}}{)}{{{}{{return}{EMPTY}{;}}{}}}{else}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{overlay}{==}{null}}{)}{{{}{{{overlay}{=}{EMPTY}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{separator}{==}{null}}{)}{{{}{{{separator}{=}{EMPTY}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{separator}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{len}{<}{NUMBER_CONSTANT}}{||}{{pos}{>}{{str}{.}{length}{()}}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{start}{>}{end}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{start}{>}{{str}{.}{length}{()}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{EMPTY}{:}{{strip}{(}{str}{,}{null}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{EMPTY}{:}{{str}{.}{trim}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{EMPTY}{:}{{str}{.}{trim}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{greatestCommonDivisor}{(}{{Math}{.}{abs}{(}{numerator}{)}}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{greatestCommonDivisor}{(}{{Math}{.}{abs}{(}{numerator}{)}}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{Fraction}{.}{getFraction}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{StringUtils}{.}{overlayString}{(}{SENTENCE_UNCAP}{,}{FOO_UNCAP}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{at}{=}{{indexOfDifference}{(}{str1}{,}{str2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{index}{=}{{binarySearch}{(}{value}{)}}}{;}}{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{names}{[}{index}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{insertAt}{>}{NUMBER_CONSTANT}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{==}{null}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{==}{null}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{escapeSingleQuote}{)}{{{}{{{out}{.}{write}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toString}{(}{object}{,}{style}{,}{outputTransients}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toString}{(}{object}{,}{style}{,}{false}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toString}{(}{object}{,}{null}{,}{false}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ReflectionToStringBuilder}{.}{toString}{(}{object}{,}{style}{,}{outputTransients}{,}{false}{,}{reflectUpToClass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ReflectionToStringBuilder}{.}{toString}{(}{object}{,}{style}{,}{outputTransients}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{new}{{ArrayList}}{(}{{ColorEnum}{.}{getEnumList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{flush}{()}}{;}}{{return}{{{(}{{(}{{StringWriter}}{)}{{this}{.}{out}}}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{isEmpty}{(}{searchChars}{)}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{isEmpty}{(}{remove}{)}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{isEmpty}{(}{remove}{)}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{isEmpty}{(}{searchChars}{)}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{isEmpty}{(}{str}{)}}{||}{{searchChars}{==}{null}}}{||}{{searchChars.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isAsciiNumeric}{(}{ch}{)}}{==}{false}}{)}{{{}{{return}{defaultValue}{;}}{}}}}{{return}{{(}{{ch}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isAsciiNumeric}{(}{ch}{)}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{ch}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ch}{<}{CHAR_ARRAY.length}}{)}{{{}{{return}{{CHAR_ARRAY}{[}{ch}{]}}{;}}{}}}{else}{{{}{{return}{{new}{{Character}}{(}{ch}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{{new}{{Short}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{value}}{.}{equals}{(}{obj}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MutableNumber}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{{new}{{Float}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{{new}{{Byte}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{{new}{{Long}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{{new}{{Integer}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{{new}{{Double}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{MutableNumber}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{new}{{Integer}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{MutableIntTest}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{splitWorker}{(}{str}{,}{separatorChars}{,}{{-}{NUMBER_CONSTANT}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{byte}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{byte}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{int}{mask}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Boolean}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Float}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Double}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Byte}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Short}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Integer}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Long}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{public}{EqualsBuilder}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{{addToken}{(}{tokens}{,}{StringUtils.EMPTY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{nEntries}{++}}{;}}{{{markers}{.}{add}{(}{marker}{)}}{;}}{{{sources}{.}{add}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{splitTime}{=}{{watch}{.}{getSplitTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tokenLen}{>=}{NUMBER_CONSTANT}}{)}{{{}{{{rule}{=}{{selectNumberRule}{(}{Calendar.YEAR}{,}{tokenLen}{)}}}{;}}{}}}{else}{{{}{{{rule}{=}{TwoDigitYearField.INSTANCE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{millis}{,}{format}{,}{true}{,}{{TimeZone}{.}{getDefault}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{.}{isAssignableFrom}{(}{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{.}{isAssignableFrom}{(}{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{.}{equals}{(}{type}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{.}{equals}{(}{type}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{{Class}}{getThrowableClass}{()}{{{}{{return}{{{EOFException}}{.}{class}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{EOFException}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Class}}{getThrowableClass}{()}{{{}{{return}{{{EOFException}}{.}{class}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{EOFException}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Class}}{getThrowableClass}{()}{{{}{{return}{{{EOFException}}{.}{class}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{EOFException}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{newArray.length}{-}{NUMBER_CONSTANT}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{(}{{{argName}{==}{null}}{?}{STRING_CONSTANT}{:}{argName}}{)}}{+}{STRING_CONSTANT}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationFormatUtils}{.}{formatDurationHMS}{(}{{getSplitTime}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{DurationFormatUtils}{.}{formatDurationHMS}{(}{{getTime}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{DurationFormatUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{STRING_CONSTANT}{,}{{token}{.}{equals}{(}{{new}{{DurationFormatUtils.Token}}{(}{DurationFormatUtils.y}{,}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arrayEnd}{==}{null}}{)}{{{}{{{arrayEnd}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{arrayEnd}}{=}{arrayEnd}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{Object}}{[]}}{)}{{add}{(}{array}{,}{index}{,}{element}{,}{clss}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{str}{==}{null}}{?}{defaultStr}{:}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{str}{==}{null}}{?}{EMPTY}{:}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{str}{==}{null}}{?}{EMPTY}{:}{{str}{.}{trim}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{ts}{=}{{trim}{(}{str}{)}}}{;}}{{return}{{{isEmpty}{(}{ts}{)}}{?}{null}{:}{ts}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{str}{==}{null}}{?}{null}{:}{{str}{.}{trim}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{str}{==}{null}}{?}{EMPTY}{:}{{str}{.}{trim}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{text}{[}{pos}{]}}{<=}{NUMBER_CONSTANT}}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ch}{==}{{text}{[}{pos}{]}}}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{previousIndex}{()}{{{}{{return}{{tokenPos}{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasPrevious}{()}{{{}{{{tokenize}{()}}{;}}{{return}{{tokenPos}{>}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasNext}{()}{{{}{{{tokenize}{()}}{;}}{{return}{{tokenPos}{<}{tokens.length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{str}{,}{NUMBER_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{if}{(}{{initialCapacity}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{initialCapacity}{=}{CAPACITY}}{;}}{}}}}{{{buf}{=}{{new}{{char}{[}}{initialCapacity}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{min}{==}{range.min}}{&&}{{max}{==}{range.max}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{stopTime}}{-}{{this}{.}{startTime}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{min}{==}{range.min}}{&&}{{max}{==}{range.max}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{str}{.}{indexOf}{(}{searchStr}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{str}{)}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{str}{.}{indexOf}{(}{searchChar}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{str}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{?}{null}{:}{str}}{;}}}
{AST_ROOT_SC2NF{{return}{{{date1}{.}{getTime}{()}}{==}{{date2}{.}{getTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{objectToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{obj}{==}{null}}{?}{nullStr}{:}{{obj}{.}{toString}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{obj}{==}{null}}{?}{STRING_CONSTANT}{:}{{obj}{.}{toString}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{object}{!=}{null}}{?}{object}{:}{defaultValue}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ch}{<}{NUMBER_CONSTANT}}{||}{{ch}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ch}{>=}{NUMBER_CONSTANT}}{&&}{{ch}{<}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ch}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isAsciiNumeric}{(}{ch}{)}}{==}{false}}{)}{{{}{{return}{defaultValue}{;}}{}}}}{{return}{{ch}{-}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{ch}{-}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{{cls}{.}{getName}{()}}{.}{indexOf}{(}{INNER_CLASS_SEPARATOR_CHAR}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{==}{null}}{?}{STRING_CONSTANT}{:}{{value}{.}{toString}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{hashCode}{()}{{{}{{return}{{{value}{==}{null}}{?}{NUMBER_CONSTANT}{:}{{value}{.}{hashCode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{nextBoolean}{()}{{{}{{return}{{{Math}{.}{random}{()}}{>}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{compareMin}{<=}{NUMBER_CONSTANT}}{&&}{{compareMax}{>=}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{compareMin}{<=}{NUMBER_CONSTANT}}{&&}{{compareMax}{>=}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{isThrowableNested}{()}{{{}{{return}{{THROWABLE_CAUSE_METHOD}{!=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{xor}{(}{primitive}{)}}{?}{Boolean.TRUE}{:}{Boolean.FALSE}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{bool}{?}{trueString}{:}{falseString}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{nullString}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{trueString}{:}{falseString}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{nullValue}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{trueValue}{:}{falseValue}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{bool}{?}{trueValue}{:}{falseValue}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{nullValue}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{trueValue}{:}{falseValue}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{bool}{?}{trueValue}{:}{falseValue}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{NumberUtils.INTEGER_ONE}{:}{NumberUtils.INTEGER_ZERO}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{bool}{?}{NumberUtils.INTEGER_ONE}{:}{NumberUtils.INTEGER_ZERO}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{bool}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{{value}{.}{intValue}{()}}{==}{NUMBER_CONSTANT}}{?}{Boolean.FALSE}{:}{Boolean.TRUE}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{==}{NUMBER_CONSTANT}}{?}{Boolean.FALSE}{:}{Boolean.TRUE}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{==}{NUMBER_CONSTANT}}{?}{false}{:}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{true}{:}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{true}{:}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{bool}{?}{Boolean.TRUE}{:}{Boolean.FALSE}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{false}{:}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{true}{:}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{JAVA_VERSION_INT}{>=}{requiredVersion}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{JAVA_VERSION_FLOAT}{>=}{requiredVersion}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{compareMin}{<=}{NUMBER_CONSTANT}}{&&}{{compareMax}{>=}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{holder}{&}{_mask}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{set}{.}{equals}{(}{other.set}{)}}{;}}}


