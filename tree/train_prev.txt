{AST_ROOT_SC2NF{{{}{{{super}{.}{moveDateTimeZone}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{sm}{!=}{null}}{)}{{{}{{{sm}{.}{checkPermission}{(}{{new}{{DateTimeZonePermission}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sm}{!=}{null}}{)}{{{}{{{sm}{.}{checkPermission}{(}{{new}{{DateTimeZonePermission}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sm}{!=}{null}}{)}{{{}{{{sm}{.}{checkPermission}{(}{{new}{{DateTimeZonePermission}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsText}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DurationField}}{getLeapDurationField}{(}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{result}{=}{{new}{{DateTime}}{(}{{test}{.}{resolve}{(}{{dt}{.}{getMillis}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{instant}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{DateTimeUtils}{.}{currentTimeMillis}{()}}{,}{chronology}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TimeOfDay}{()}{{{}{{this}{(}{{DateTimeUtils}{.}{currentTimeMillis}{()}}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iInstantConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableInstantConverter.INSTANCE}{,}{PartialInstantConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{CalendarConverter.INSTANCE}{,}{DateConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{getMillis}{(}{readableInstant}{)}}{<}{{readableInstant}{.}{getMillis}{(}{this}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iInstantConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableInstantConverter.INSTANCE}{,}{PartialInstantConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{CalendarConverter.INSTANCE}{,}{DateConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getMaximumValue}{(}{{{PartialInstant}}{instant}}{)}{;}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getMinimumValue}{(}{{{PartialInstant}}{instant}}{)}{;}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{()}{{{}{{return}{{iInstant}{.}{getField}{(}{iFieldIndex}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMaximumValue}{(}{{getPartialInstant}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMinimumValue}{(}{{getPartialInstant}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsShortText}{(}{{getPartialInstant}{()}}{,}{{get}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsText}{(}{{getPartialInstant}{()}}{,}{{get}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximumValue}{(}{{{PartialInstant}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{PartialInstant}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{millisOfSecond}{()}}{.}{compareTo}{(}{{(}{{PartialInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{millisOfSecond}{()}}{.}{getPartialInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{secondOfMinute}{()}}{.}{compareTo}{(}{{(}{{PartialInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{secondOfMinute}{()}}{.}{getPartialInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{minuteOfHour}{()}}{.}{compareTo}{(}{{(}{{PartialInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{minuteOfHour}{()}}{.}{getPartialInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{hourOfDay}{()}}{.}{compareTo}{(}{{(}{{PartialInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{hourOfDay}{()}}{.}{getPartialInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{MockPartialInstant.EMPTY_INSTANCE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{PartialInstant}}{instant}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{void}{validate}{(}{{{PartialInstant}}{instant}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{()}{{{}{{return}{{iInstant}{.}{getField}{(}{iFieldIndex}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{dayOfMonth}{()}}{.}{compareTo}{(}{{(}{{PartialInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{dayOfMonth}{()}}{.}{getPartialInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{monthOfYear}{()}}{.}{compareTo}{(}{{(}{{PartialInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{monthOfYear}{()}}{.}{getPartialInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{year}{()}}{.}{compareTo}{(}{{(}{{PartialInstant}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{year}{()}}{.}{getPartialInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{MockPartialInstant.EMPTY_INSTANCE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximumValue}{(}{{{PartialInstant}}{instant}}{,}{{{int}{[]}}{values}}{)}{{{}{{return}{{iField}{.}{getMaximumValue}{(}{instant}{,}{values}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximumValue}{(}{{{PartialInstant}}{instant}}{)}{{{}{{return}{{iField}{.}{getMaximumValue}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{PartialInstant}}{instant}}{,}{{{int}{[]}}{values}}{)}{{{}{{return}{{iField}{.}{getMinimumValue}{(}{instant}{,}{values}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{{PartialInstant}}{instant}}{)}{{{}{{return}{{iField}{.}{getMinimumValue}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAsShortText}{(}{{{PartialInstant}}{partial}}{,}{{{Locale}}{locale}}{)}{{{}{{return}{{iField}{.}{getAsShortText}{(}{partial}{,}{locale}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAsText}{(}{{{PartialInstant}}{partial}}{,}{{{Locale}}{locale}}{)}{{{}{{return}{{iField}{.}{getAsText}{(}{partial}{,}{locale}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{partial}}}
{AST_ROOT_SC2NF{{{PartialInstant}}{instant}}}
{AST_ROOT_SC2NF{{{}{{{t}{=}{{{{{new}{{DateTimeFormatterBuilder}}{(}{iChrono}{)}}{.}{append}{(}{{hourMinuteSecondFraction}{()}}{)}}{.}{append}{(}{{offsetElement}{()}}{)}}{.}{toFormatter}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{converter}{.}{getChronology}{(}{instant}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{converter}{.}{getChronology}{(}{instant}{,}{zone}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{converter}{.}{getChronology}{(}{instant}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationType}{.}{getAverageYearMonthType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{millis}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{seconds}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{minutes}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{hours}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{days}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{weeks}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{months}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{years}{()}{{{}{{return}{UnsupportedDurationField.INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{dayOfMonth}{()}}{.}{getInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{monthOfYear}{()}}{.}{getInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{year}{()}}{.}{getInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{yearOfCentury}{()}}{.}{getInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{centuryOfEra}{()}}{.}{getInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{yearOfEra}{()}}{.}{getInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{test}{,}{{{test}{.}{era}{()}}{.}{getInstant}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{remainder}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMaximumValue}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMinimumValue}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getLeapAmount}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{isLeap}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{getField}{()}}{.}{getDifferenceAsLong}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{,}{{instant}{.}{getMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{getField}{()}}{.}{getDifference}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{,}{{instant}{.}{getMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsShortText}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsText}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{get}{(}{{{getInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{iChrono}{.}{era}{()}}{.}{addWrapped}{(}{SMALL_MILLIS}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{zone}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{selectChronology}{(}{chronology}{)}}}{;}}{{{iMillis}{=}{instant}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setDateTime}{(}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{ReadableIntervalConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LongConverter.INSTANCE}{.}{setInto}{(}{m}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{instant}{=}{{{getChronology}{()}}{.}{getDateTimeMillis}{(}{{getMillis}{()}}{,}{hour}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}}{;}}{{{setTime}{(}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{withUTC}{()}}{.}{getTimeOnlyMillis}{(}{iCutoverMillis}{)}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{return}{{{getDateOnlyMillis}{(}{year}{,}{monthOfYear}{,}{dayOfMonth}{)}}{+}{millisOfDay}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{zone5}{.}{equals}{(}{zone5}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{DateTimeUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{private}{DateTimeUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{size}{()}{{{}{{return}{iConverters.length}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{set}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{DateTimeConstants.MILLIS_PER_DAY}}{,}{{{test}{.}{monthOfYear}{()}}{.}{remainder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{duration}{=}{{new}{{MutableDuration}}{(}{type}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{STRING_CONSTANT}{+}{{getName}{()}}{+}{CHAR_CONS}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{{getChronology}{()}}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{mask}{(}{{iType}{.}{withChronology}{(}{chrono}{)}}{,}{iMask}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{YearWeekType}}{(}{iChronology}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{YearMonthType}}{(}{iChronology}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{AllType}}{(}{iChronology}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{DayHourType}}{(}{iChronology}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isPrecise}{()}}{)}{{{}{{return}{{instant}{+=}{{{getTotalMillis}{()}}{*}{scalar}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{()}}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getMillisType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getMillisType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getMillisType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{duration}{=}{{duration}{.}{withDurationType}{(}{type}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{startInstant}{,}{endInstant}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{Duration.ZERO}{.}{getTotalMillis}{()}}{)}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getMillisType}{()}}{,}{{Duration.ZERO}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{YearMonthType}{(}{{{Chronology}}{chrono}}{)}{{{}{{super}{(}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AllType}{(}{{{Chronology}}{chrono}}{)}{{{}{{super}{(}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getMillisType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testGetDurationType_Object}{(}{)}{throws}{{Exception}}{{{}{{{assertEquals}{(}{{DurationType}{.}{getMillisType}{()}}{,}{{NullConverter.INSTANCE}{.}{getDurationType}{(}{null}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{convId}{=}{{{offsetFormatter}{()}}{.}{print}{(}{NUMBER_CONSTANT}{,}{UTC}{,}{offset}{)}}}{;}}{{return}{{new}{{FixedDateTimeZone}}{(}{convId}{,}{null}{,}{offset}{,}{offset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{id}{=}{{{offsetFormatter}{()}}{.}{print}{(}{NUMBER_CONSTANT}{,}{UTC}{,}{offset}{)}}}{;}}{{return}{{new}{{FixedDateTimeZone}}{(}{id}{,}{null}{,}{offset}{,}{offset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Duration}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAverageYearMonthType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getYearWeekType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getYearMonthType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getAllType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getDayHourType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{type}{=}{{(}{{{type}{==}{null}}{?}{{converter}{.}{getDurationType}{(}{duration}{)}}{:}{type}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Duration}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAverageYearMonthType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{type}{,}{{type}{.}{withChronology}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{type}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ReadWritableDuration}}{duration}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{ReadableDuration}}{)}{object}}{)}}{.}{getTotalMillis}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{ReadableDuration}}{)}{object}}{)}}{.}{isPrecise}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{MutableDuration}}{(}{{DurationType}{.}{getAllType}{()}}{,}{true}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{null}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{null}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutableDuration}}{{test}{=}{{new}{{MutableDuration}}{()}}}{;}}{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setInto}{(}{{{ReadWritableDuration}}{duration}}{,}{{{Object}}{object}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setInto}{(}{{{ReadWritableDuration}}{duration}}{,}{{{Object}}{object}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setInto}{(}{{{ReadWritableDuration}}{duration}}{,}{{{Object}}{object}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverter}{(}{{new}{{Duration}}{(}{{DurationType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{{new}{{Duration}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{test}{=}{Duration.ZERO}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{DurationConverter}}{[]}}{{array}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{m}{.}{getTotalMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{m}{.}{getTotalMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{duration}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{duration}{!=}{null}}{)}{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{{duration}{.}{getMillis}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{TimePeriod}}{(}{{toDurationMillis}{()}}{,}{{getDurationType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{TestDurationType}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{duration}{,}{{getDurationType}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{duration}{!=}{null}}{)}{{{}{{{add}{(}{{new}{{TimePeriod}}{(}{{duration}{.}{getMillis}{()}}{,}{{getDurationType}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interval}{!=}{null}}{)}{{{}{{{add}{(}{{interval}{.}{toTimePeriod}{(}{{getDurationType}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{DurationType}}{{type}{=}{iType}}{;}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{int}{{hash}{=}{{{getDurationType}{()}}{.}{hashCode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DurationType}}{{type}{=}{iType}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{TestDurationType}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{{type}{=}{{period}{.}{getDurationType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{mustParse}}{&&}{{!}{{isSupported}{(}{{period}{.}{getDurationType}{()}}{)}}}}{)}{{{}{{return}{position}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodConverter}}{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getTimePeriodConverter}{(}{{new}{{TimePeriod}}{(}{{DurationType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverter}{(}{{new}{{TimePeriod}}{(}{{DurationType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MillisDuration}}{{base}{=}{{new}{{MillisDuration}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getDayHourType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getPreciseAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test3}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{{DurationType}}{type}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{<}{NUMBER_CONSTANT}}{)}{{{}{{{parser}{.}{parseMutableTimePeriod}{(}{{period}{.}{getDurationType}{()}}{,}{str}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{DurationType}{.}{getAllType}{()}}{,}{{test}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseAllType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearMonthType}{()}}{.}{withMillisRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearMonthType}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearMonthType}{()}}{.}{withMinutesRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearMonthType}{()}}{.}{withHoursRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearMonthType}{()}}{.}{withDaysRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearWeekType}{()}}{.}{withWeeksRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearMonthType}{()}}{.}{withMonthsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getPreciseYearMonthType}{()}}{.}{withYearsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getPreciseYearWeekType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getPreciseYearMonthType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withMillisRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withMinutesRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withHoursRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withDaysRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withWeeksRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withMonthsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{{{DurationType}{.}{getAllType}{()}}{.}{withYearsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{test}{.}{getDurationType}{()}}{,}{{copy}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{test}{.}{getDurationType}{()}}{,}{{copy}{.}{getDurationType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getAllType}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{,}{{DurationType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{m}{=}{{new}{{MutableTimePeriod}}{(}{{DurationType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadableTimePeriod}}{period}}}
{AST_ROOT_SC2NF{{{ReadableTimePeriod}}{period}}}
{AST_ROOT_SC2NF{{{c}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getDurationConverter}{(}{{new}{{TimePeriod}}{(}{{PeriodType}{.}{getMillisType}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{result}{=}{{test}{.}{toMutableTimePeriod}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{()}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadableTimePeriod}}{period}}}
{AST_ROOT_SC2NF{{{ReadableTimePeriod}}{period}}}
{AST_ROOT_SC2NF{{public}{void}{testSetDuration_RD}{()}{{{}{{{setTimePeriod}{(}{{(}{{ReadableDuration}}{)}{null}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TimePeriod}}{{test}{=}{{new}{{TimePeriod}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{length}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableTimePeriod}}{{test}{=}{{new}{{MutableTimePeriod}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{iInstantConverters}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{{iDurationConverters}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{{iTimePeriodConverters}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{{iIntervalConverters}{.}{size}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ReadableTimePeriod}}{period}}}
{AST_ROOT_SC2NF{{{ReadableTimePeriod}}{period}}}
{AST_ROOT_SC2NF{{{TimePeriod}}{{duration}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{{cls}{=}{{{ReadableTimePeriodConverter}}{.}{class}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSetTotalMillis_2}{()}{{{}{{{setPeriod}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSetTotalMillis_1}{()}{{{}{{{setPeriod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSetDuration_RD}{()}{{{}{{{setDuration}{(}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{PeriodType}{.}{getYearWeekType}{(}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{PRECISE_ALL_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{PRECISE_YEAR_WEEK_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{PRECISE_YEAR_MONTH_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getPreciseYearDayType}{()}{{{}{{return}{PRECISE_YEAR_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getPreciseDayHourType}{()}{{{}{{return}{PRECISE_DAY_HOUR_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getUTCYearWeekType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{YEAR_WEEK_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getUTCYearMonthType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{YEAR_MONTH_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getYearDayType}{()}{{{}{{return}{YEAR_DAY_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{==}{null}}{||}{{chrono}{.}{equals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}}{)}{{{}{{return}{{getUTCAllType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{ALL_TYPE}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{PeriodType}}{getMillisType}{()}{{{}{{return}{MILLIS_TYPE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getUTCAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getUTCAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{Duration}{(}{{long}{duration}}{)}{{{}{{super}{(}{duration}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractDuration}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{long}{{durationMillis}{=}{{DateTimeUtils}{.}{getDurationMillis}{(}{duration}{)}}}{;}}{{{setStartMillis}{(}{{FieldUtils}{.}{safeAdd}{(}{{getStartMillis}{()}}{,}{{-}{durationMillis}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Object}}{duration}}}
{AST_ROOT_SC2NF{{public}{Duration}{(}{{long}{duration}}{)}{{{}{``;}}{super}{{{iMillis}{=}{duration}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{long}{{endMillis}{=}{{DateTimeUtils}{.}{getInstantMillis}{(}{end}{)}}}{;}}{{{setInterval}{(}{iStartMillis}{,}{endMillis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{startMillis}{=}{{DateTimeUtils}{.}{getInstantMillis}{(}{start}{)}}}{;}}{{{setInterval}{(}{startMillis}{,}{iEndMillis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setInterval}{(}{startInstant}{,}{iEndMillis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{normalize}{()}{{{}{{{super}{.}{normalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MutableDateTime}}{(}{this}{,}{chronology}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{toMutableDateTime}{()}{{{}{{return}{{new}{{MutableDateTime}}{(}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{long}{{instant}{=}{{{getChronology}{()}}{.}{getDateTimeMillis}{(}{year}{,}{monthOfYear}{,}{dayOfMonth}{,}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}}{;}}{{{setDateTime}{(}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{partial.iChronology}}{;}}{{{iValues}{=}{values}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{partial.iChronology}}{;}}{{{iValues}{=}{values}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Chronology}}{{chrono}{=}{{iChronology}{.}{withZone}{(}{zone}{)}}}{;}}{{return}{{resolve}{(}{baseInstant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJYearDateTimeField}{(}{{{AbstractGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJMonthOfYearDateTimeField}{(}{{{AbstractGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerMonth}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{{chrono}{=}{iChronology}}{;}}}
{AST_ROOT_SC2NF{{CopticYearDateTimeField}{(}{{{AbstractGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJWeekyearDateTimeField}{(}{{{AbstractGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJEraDateTimeField}{(}{{{AbstractGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NoWeekyearZeroField}{(}{{{AbstractGJChronology}}{chronology}}{,}{{{DateTimeField}}{field}}{)}{{{}{{super}{(}{chronology}{,}{field}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AbstractGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{return}{{BulkTest}{.}{makeSuite}{(}{{{TestParseISO}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{return}{{BulkTest}{.}{makeSuite}{(}{{{TestDateTimeConstants}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{millis}{=}{{{getField}{(}{i}{)}}{.}{set}{(}{millis}{,}{{getValue}{(}{i}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{text}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}{}}}}{{return}{{appendSuffix}{(}{{new}{{SingularAffix}}{(}{text}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{text}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}{}}}}{{return}{{appendPrefix}{(}{{new}{{SingularAffix}}{(}{text}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DurationFieldAffix}}{{affix}}{;}}}
{AST_ROOT_SC2NF{{{DurationFieldAffix}}{{affix}}{;}}}
{AST_ROOT_SC2NF{{{DurationFieldAffix}}{{affix}}{;}}}
{AST_ROOT_SC2NF{{{DurationFieldAffix}}{suffix}}}
{AST_ROOT_SC2NF{{int}{scan}{(}{{{String}}{durationStr}}{,}{{int}{position}}{)}{;}}}
{AST_ROOT_SC2NF{{int}{parse}{(}{{{String}}{durationStr}}{,}{{int}{position}}{)}{;}}}
{AST_ROOT_SC2NF{{{DurationFieldAffix}}{suffix}}}
{AST_ROOT_SC2NF{{{DurationFieldAffix}}{prefix}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{iPrintZeroSetting}{==}{PRINT_ZERO_ALWAYS}}{||}{{{getFieldValue}{(}{period}{)}}{>=}{NUMBER_CONSTANT}}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendMillis}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendSecondsWithOptionalMillis}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendSecondsWithMillis}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendSeconds}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendMinutes}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendHours}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendDays}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendWeeks}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendMonths}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodFormatterBuilder}}{appendYears}{()}{{{}{{{appendField}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeComparator}}{{c}{=}{{DateTimeComparator}{.}{getInstance}{(}{{ISO}{.}{hourOfDay}{()}}{,}{{ISO}{.}{dayOfYear}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeField}}{lowerLimit}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeComparator}}{getInstance}{()}{{{}{{return}{INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerMonth}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{iParseField}{==}{null}}{)}{{{}{{{iParseField}{=}{{new}{{PreciseDateTimeField}}{(}{STRING_CONSTANT}{,}{MillisDurationField.INSTANCE}{,}{{iField}{.}{getDurationField}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{{gregorianField}{.}{getName}{()}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{weeks}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{ISOYearOfEraDateTimeField}{()}{{{}{{super}{(}{{{GregorianChronology}{.}{getInstanceUTC}{()}}{.}{year}{()}}{,}{STRING_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJMonthOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerMonth}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{field}{,}{{field}{.}{getName}{()}}{)}{;}}{{{iDurationField}{=}{durationField}}{;}}{{{iRangeDurationField}{=}{rangeDurationField}}{;}}{{{iLeapDurationField}{=}{leapDurationField}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{{field}{.}{getName}{()}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJWeekyearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{days}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{months}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{GJEraDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{era}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{eras}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{centuryOfEra}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{centuries}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{yearOfCentury}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{years}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{yearOfEra}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{years}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{year}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{years}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{monthOfYear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{months}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{weekyear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{weekyears}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{weekOfWeekyear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{weeks}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{dayOfYear}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{days}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{dayOfMonth}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{days}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{days}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{clockhourOfHalfday}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{hourOfHalfday}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{clockhourOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{hourOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{hours}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{minuteOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{minutes}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{minuteOfHour}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{minutes}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{secondOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{seconds}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{secondOfMinute}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{seconds}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{millisOfDay}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{millis}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{millisOfSecond}{()}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{STRING_CONSTANT}{,}{{millis}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{yearField}{,}{STRING_CONSTANT}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{LinkedDurationField}{(}{{{DurationField}}{durationField}}{,}{{{ImpreciseCutoverField}}{dateTimeField}}{)}{{{}{{super}{(}{durationField}{,}{{durationField}{.}{getName}{()}}{)}{;}}{{{iField}{=}{dateTimeField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{{DateTimeFieldType}{.}{halfdayOfDay}{()}}{,}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfYear}{()}}{,}{STRING_CONSTANT}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfWeekField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{,}{STRING_CONSTANT}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{field}{,}{{DateTimeFieldType}{.}{centuryOfEra}{()}}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfMonthField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfMonth}{()}}{,}{STRING_CONSTANT}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{{field}{.}{getName}{()}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJWeekyearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerYear}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerYear}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{field}{,}{{DateTimeFieldType}{.}{centuryOfEra}{()}}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{iMask}{&}{{(}{{NUMBER_CONSTANT}{<}{<}{NUMBER_CONSTANT}}{)}}}{)}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{UnsupportedDurationField}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{chrono}{)}{;}}{{{iMonths}{=}{{new}{{ScaledDurationField}}{(}{{chrono}{.}{days}{()}}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{chrono}{)}{;}}{{{iYears}{=}{{new}{{ScaledDurationField}}{(}{{chrono}{.}{days}{()}}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{ISOYearOfEraDateTimeField.INSTANCE}{,}{{DateTimeFieldType}{.}{centuryOfEra}{()}}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{STRING_CONSTANT}{,}{{chronology}{.}{getAverageMillisPerMonth}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJMonthOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{monthOfYear}{()}}{,}{STRING_CONSTANT}{,}{{chrono}{.}{millisPerMonth}{()}}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getFieldSize}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{values}{=}{{new}{{int}{[}}{{getFieldSize}{()}}{]}}}{;}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{NUMBER_CONSTANT}}{,}{{isize}{=}{{getFieldSize}{()}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getAsShortText}{(}{partial}{,}{{partial}{.}{get}{(}{this}{)}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getAsText}{(}{partial}{,}{{partial}{.}{get}{(}{this}{)}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{getFieldSize}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{getFieldSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{partial}{.}{isSupported}{(}{iField}{)}}}
{AST_ROOT_SC2NF{{partial}{.}{isSupported}{(}{iField}{)}}}
{AST_ROOT_SC2NF{{partial}{.}{isSupported}{(}{iField}{)}}}
{AST_ROOT_SC2NF{{public}{int}{getFieldSize}{()}{{{}{{return}{{{getFields}{()}}{.}{length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{era}{()}{{{}{{return}{ERA}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{centuryOfEra}{()}{{{}{{return}{CENTURY_OF_ERA}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{yearOfCentury}{()}{{{}{{return}{YEAR_OF_CENTURY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{yearOfEra}{()}{{{}{{return}{YEAR_OF_ERA}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{year}{()}{{{}{{return}{YEAR}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{monthOfYear}{()}{{{}{{return}{MONTH_OF_YEAR}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{weekyearOfCentury}{()}{{{}{{return}{WEEKYEAR_OF_CENTURY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{weekyear}{()}{{{}{{return}{WEEKYEAR}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{weekOfWeekyear}{()}{{{}{{return}{WEEK_OF_WEEKYEAR}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{dayOfYear}{()}{{{}{{return}{DAY_OF_YEAR}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{dayOfMonth}{()}{{{}{{return}{DAY_OF_MONTH}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{dayOfWeek}{()}{{{}{{return}{DAY_OF_WEEK}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{halfdayOfDay}{()}{{{}{{return}{HALFDAY_OF_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{clockhourOfHalfday}{()}{{{}{{return}{CLOCKHOUR_OF_HALFDAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{hourOfHalfday}{()}{{{}{{return}{HOUR_OF_HALFDAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{clockhourOfDay}{()}{{{}{{return}{CLOCKHOUR_OF_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{hourOfDay}{()}{{{}{{return}{HOUR_OF_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{minuteOfDay}{()}{{{}{{return}{MINUTE_OF_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{minuteOfHour}{()}{{{}{{return}{MINUTE_OF_HOUR}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{secondOfDay}{()}{{{}{{return}{SECOND_OF_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{secondOfMinute}{()}{{{}{{return}{SECOND_OF_MINUTE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{millisOfDay}{()}{{{}{{return}{MILLIS_OF_DAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DateTimeFieldType}}{millisOfSecond}{()}{{{}{{return}{MILLIS_OF_SECOND}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{otherValue}{=}{{{chrono}{.}{getField}{(}{{getFieldType}{()}}{)}}{.}{get}{(}{{instant}{.}{getMillis}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{eras}{()}{{{}{{return}{ERAS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{centuries}{()}{{{}{{return}{CENTURIES}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{years}{()}{{{}{{return}{YEARS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{months}{()}{{{}{{return}{MONTHS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{weekyears}{()}{{{}{{return}{WEEKYEARS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{weeks}{()}{{{}{{return}{WEEKS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{days}{()}{{{}{{return}{DAYS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{halfdays}{()}{{{}{{return}{HALFDAYS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{hours}{()}{{{}{{return}{HOURS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{minutes}{()}{{{}{{return}{MINUTES}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{seconds}{()}{{{}{{return}{SECONDS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{DurationFieldType}}{millis}{()}{{{}{{return}{MILLIS}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isAfter}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isBefore}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isAfter}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test}{.}{isBefore}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{instant}{==}{null}}{)}{{{}{{return}{{isAfter}{(}{{DateTimeUtils}{.}{currentTimeMillis}{()}}{)}}{;}}{}}}}{{return}{{isAfter}{(}{{instant}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{instant}{==}{null}}{)}{{{}{{return}{{isBefore}{(}{{DateTimeUtils}{.}{currentTimeMillis}{()}}{)}}{;}}{}}}}{{return}{{isBefore}{(}{{instant}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{instant}{==}{null}}{)}{{{}{{return}{{contains}{(}{{DateTimeUtils}{.}{currentTimeMillis}{()}}{)}}{;}}{}}}}{{return}{{contains}{(}{{instant}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllTypeUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllTypeUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllTypeUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{dur}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getAllTypeUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{result}{=}{{test}{.}{withPeriodType}{(}{{PeriodType}{.}{getAllType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Period}}{{test}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{ReadablePeriodConverter.INSTANCE}{,}{ReadableIntervalConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{getAllType}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{getAllType}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{getAllType}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{getAllType}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{p}{=}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{{{PeriodType}{.}{getAllType}{()}}{.}{withMillisRemoved}{()}}{.}{withSecondsRemoved}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{=}{{new}{{MutablePeriod}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getMillisType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setMillis}{(}{millis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setSeconds}{(}{seconds}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setMinutes}{(}{minutes}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setHours}{(}{hours}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setDays}{(}{days}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setWeeks}{(}{weeks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setMonths}{(}{months}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setYears}{(}{years}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setPeriod}{(}{duration}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MutablePeriod}{(}{{{PeriodType}}{type}}{)}{{{}{{super}{(}{NUMBER_CONSTANT}{,}{type}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{Period}}{(}{NUMBER_CONSTANT}{,}{{PeriodType}{.}{getDayHourType}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{()}}}{;}}{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{type}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{period}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setMillis}{(}{{period}{.}{addTo}{(}{{getMillis}{()}}{,}{scalar}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{getAllType}{()}}{,}{{result}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{test1}{.}{year}{()}}{.}{compareTo}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{time}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{chrono}{=}{{DateTimeUtils}{.}{getChronology}{(}{chrono}{)}}}{;}}{{{setStartMillis}{(}{{period}{.}{addTo}{(}{{getEndMillis}{()}}{,}{{-}{NUMBER_CONSTANT}}{,}{chrono}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{chrono}{=}{{DateTimeUtils}{.}{getChronology}{(}{chrono}{)}}}{;}}{{{setEndMillis}{(}{{period}{.}{addTo}{(}{{getStartMillis}{()}}{,}{NUMBER_CONSTANT}{,}{chrono}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setMillis}{(}{{period}{.}{addTo}{(}{{getMillis}{()}}{,}{scalar}{,}{{getChronology}{()}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{PeriodType}{.}{time}{()}}{,}{{test}{.}{getPeriodType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{setYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{millis}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{seconds}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{minutes}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{hours}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{days}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{weeks}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{months}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{Period}}{(}{{new}{{int}{[]}}{{{}{years}{}}}}{,}{{PeriodType}{.}{standard}{()}}{)}}}
{AST_ROOT_SC2NF{{{}{{{duration}{.}{setPeriod}{(}{NUMBER_CONSTANT}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iIntervalConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableIntervalConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setEndMillis}{(}{endInstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setStartMillis}{(}{startInstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{getDurationMillis}{()}{{{}{{return}{{(}{{NUMBER_CONSTANT}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{getDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{getDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{IntervalConverter}}{[]}}{{array}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getIntervalConverters}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{getDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Duration}}{{dur}{=}{{{new}{{Interval}}{(}{dt1}{,}{dt2}{)}}{.}{getDuration}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{long}{getDurationMillis}{()}{{{}{{return}{{(}{{NUMBER_CONSTANT}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Instant}}{getEndInstant}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Instant}}{getStartInstant}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{MutableInterval}}{{test}{=}{{new}{{MutableInterval}}{(}{TEST_TIME1}{,}{TEST_TIME1}{)}}}{;}}{{{assertSame}{(}{Duration.ZERO}{,}{{test}{.}{getDuration}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withEndInstant}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{.}{withEndInstant}{(}{{new}{{Instant}}{(}{{TEST_TIME1}{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withEndInstant}{(}{{new}{{Instant}}{(}{{TEST_TIME2}{-}{NUMBER_CONSTANT}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withStartInstant}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{.}{withStartInstant}{(}{{new}{{Instant}}{(}{{TEST_TIME2}{+}{NUMBER_CONSTANT}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{result}{=}{{test}{.}{withStartInstant}{(}{{new}{{Instant}}{(}{{TEST_TIME1}{-}{NUMBER_CONSTANT}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Interval}}{{test}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME1}{)}}}{;}}{{{assertSame}{(}{Duration.ZERO}{,}{{test}{.}{getDuration}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{(}{{ReadableInterval}}{)}{object}}{)}}{)}}{.}{getDurationMillis}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{iValues}{=}{{initValues}{(}{millis}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iValues}{=}{{initValues}{(}{millis}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iValues}{=}{{initValues}{(}{instant}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{resolved}{=}{{resolve}{(}{instantMillis}{,}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Chronology}}{{chrono}{=}{{{getChronology}{()}}{.}{withZone}{(}{zone}{)}}}{;}}{{return}{{resolve}{(}{baseInstant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{setMillis}{(}{{{getChronology}{()}}{.}{add}{(}{{getMillis}{()}}{,}{period}{,}{scalar}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{period}{==}{null}}{)}{{{}{{{iStartMillis}{=}{iEndMillis}}{;}}{}}}{else}{{{}{{{iStartMillis}{=}{{chrono}{.}{add}{(}{iEndMillis}{,}{period}{,}{{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{period}{==}{null}}{)}{{{}{{{iEndMillis}{=}{iStartMillis}}{;}}{}}}{else}{{{}{{{iEndMillis}{=}{{chrono}{.}{add}{(}{iStartMillis}{,}{period}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{{instant}{=}{{{getChronology}{()}}{.}{add}{(}{{getMillis}{()}}{,}{period}{,}{scalar}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{==}{null}}{)}{{{}{{{setPeriodInternal}{(}{NUMBER_CONSTANT}{,}{null}{)}}{;}}{}}}{else}{{{}{{{setPeriodInternal}{(}{period}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{long}{{endMillis}{=}{{chrono}{.}{add}{(}{startMillis}{,}{this}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setPeriodInternal}{(}{startMillis}{,}{endMillis}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setStartMillis}{(}{{{getChronology}{()}}{.}{add}{(}{{getEndMillis}{()}}{,}{period}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setEndMillis}{(}{{{getChronology}{()}}{.}{add}{(}{{getStartMillis}{()}}{,}{period}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{addPeriod}{(}{period}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{partial}{==}{null}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{partial}{.}{resolveDateTime}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTime}}{{result}{=}{{test}{.}{resolveDateTime}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{millis}{=}{{partial}{.}{resolve}{(}{NUMBER_CONSTANT}{,}{DateTimeZone.UTC}{)}}}{;}}{{{printTo}{(}{null}{,}{out}{,}{millis}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{partial}{.}{resolve}{(}{NUMBER_CONSTANT}{,}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{result}{=}{{test}{.}{resolveDateTime}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Period}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Period}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MutableInterval}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Interval}}{(}{{getStartMillis}{()}}{,}{{getEndMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Interval}}{{test4}{=}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME1}{,}{{Chronology}{.}{getGJ}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{endInstant}{==}{{getEndMillis}{()}}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{Interval}}{(}{{getStartMillis}{()}}{,}{endInstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{startInstant}{==}{{getStartMillis}{()}}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{Interval}}{(}{startInstant}{,}{{getEndMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{.}{set}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{monthOfYear}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{.}{set}{(}{{{ISOChronology}{.}{getInstance}{()}}{.}{year}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Object}}{f}}}
{AST_ROOT_SC2NF{{final}{{Object}}{f}}}
{AST_ROOT_SC2NF{{final}{{Object}}{f}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendEraText}{()}{{{}{{return}{{appendText}{(}{{iChronoUTC}{.}{era}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendMonthOfYearShortText}{()}{{{}{{return}{{appendShortText}{(}{{iChronoUTC}{.}{monthOfYear}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendMonthOfYearText}{()}{{{}{{return}{{appendText}{(}{{iChronoUTC}{.}{monthOfYear}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendDayOfWeekShortText}{()}{{{}{{return}{{appendShortText}{(}{{iChronoUTC}{.}{dayOfWeek}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendDayOfWeekText}{()}{{{}{{return}{{appendText}{(}{{iChronoUTC}{.}{dayOfWeek}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeFormatterBuilder}}{appendHalfdayOfDayText}{()}{{{}{{return}{{appendText}{(}{{iChronoUTC}{.}{halfdayOfDay}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{text}}}
{AST_ROOT_SC2NF{{final}{char}{c}}}
{AST_ROOT_SC2NF{{final}{{Object}}{element}}}
{AST_ROOT_SC2NF{{final}{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{final}{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{final}{{DateTimePrinter}}{printer}}}
{AST_ROOT_SC2NF{{final}{{DateTimeFormatter}}{formatter}}}
{AST_ROOT_SC2NF{{final}{{Chronology}}{chrono}}}
{AST_ROOT_SC2NF{{final}{{DateTimeZone}}{zone}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{final}{{String}}{text}}{)}{{{}{{return}{{mParser}{.}{parseMutableDateTime}{(}{text}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{final}{{String}}{text}}{)}{{{}{{return}{{mParser}{.}{parseDateTime}{(}{text}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{parseMillis}{(}{{final}{{String}}{text}}{)}{{{}{{return}{{mParser}{.}{parseMillis}{(}{text}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{final}{long}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{final}{{ReadableInstant}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{FParser}{(}{{final}{{DateTimeParser}}{parser}}{)}{{{}{``;}}{super}{{{mParser}{=}{parser}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{final}{{String}}{text}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{final}{{String}}{text}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{parseMillis}{(}{{final}{{String}}{text}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{final}{long}{instant}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{final}{{ReadableInstant}}{instant}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{FPrinter}{(}{{final}{{DateTimePrinter}}{printer}}{)}{{{}{``;}}{super}{{{mPrinter}{=}{printer}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getInstantConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{PartialConverter}}{[]}}{{array}{=}{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{ConverterManager}{.}{getInstance}{()}}{.}{getPartialConverters}{()}}{.}{length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iPartialConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableInstantConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{CalendarConverter.INSTANCE}{,}{DateConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{NullConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{(}{{{Chronology}}{chronology}}{)}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{this}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{(}{{{Chronology}}{chronology}}{)}{{{}{{return}{{UnsupportedDateTimeField}{.}{getInstance}{(}{this}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{()}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MillisDurationField.INSTANCE}{.}{getDifferenceAsLong}{(}{Long.MAX_VALUE}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{ArithmeticException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{value}{*}{{getUnitMillis}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{value}{*}{iUnitMillis}}{;}}{}}}}
{AST_ROOT_SC2NF{{{BaseDateTimeField}}{{field}{=}{{new}{{MockBaseDateTimeField}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BaseDateTimeField}}{{field}{=}{{new}{{MockPreciseDateTimeField}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{dateTimeParser}{=}{{{ISODateTimeFormat}{.}{getInstance}{()}}{.}{dateTimeParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{PARIS}{,}{{DateTimeUtils}{.}{getZone}{(}{PARIS}{)}}{)}}{;}}{{{assertEquals}{(}{LONDON}{,}{{DateTimeUtils}{.}{getZone}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{offsetFormatter}{()}}{.}{print}{(}{instant}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{offsetFormatter}{()}}{.}{print}{(}{instant}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{convId}{=}{{{offsetFormatter}{()}}{.}{print}{(}{NUMBER_CONSTANT}{,}{UTC}{,}{offset}{)}}}{;}}{{return}{{fixedOffsetZone}{(}{convId}{,}{offset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{PeriodParser}}{[]}}{{parsers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodPrinter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodPrinter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodPrinter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{PeriodPrinter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{Separator}}{finish}{(}{{{PeriodFormatter}}{after}}{)}{{{}{{{iAfter}{=}{after}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{before}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{composite}{=}{{createComposite}{(}{formatters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatterBuilder}}{{builder}{=}{{new}{{DateTimeFormatterBuilder}}{(}{iChrono}{,}{iLocale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{p}{=}{{{ISODateTimeFormat}{.}{getInstance}{(}{{getLenientISOChronology}{()}}{)}}{.}{hourMinuteSecondFraction}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{DateTimeFormat}{.}{getInstance}{(}{{getChronology}{()}}{,}{locale}{)}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{DateTimeFormat}{.}{getInstance}{(}{{getChronology}{()}}{)}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{bucket}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{{bucket}{=}{{new}{{DateTimeParserBucket}}{(}{instantLocal}{,}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{{bucket}{=}{{new}{{DateTimeParserBucket}}{(}{NUMBER_CONSTANT}{,}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParserBucket}}{{bucket}{=}{{new}{{DateTimeParserBucket}}{(}{instantLocal}{,}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{permission}{instanceof}{{JodaTimePermission}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{super}{.}{implies}{(}{domain}{,}{permission}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{permission}{instanceof}{{JodaTimePermission}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{super}{.}{implies}{(}{domain}{,}{permission}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{permission}{instanceof}{{JodaTimePermission}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{super}{.}{implies}{(}{domain}{,}{permission}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{iFieldType}{>=}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSeparator}{(}{text}{,}{finalText}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSeparator}{(}{text}{,}{text}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{offset}{=}{{-}{{(}{int}{)}{{{offsetFormatter}{()}}{.}{parseMillis}{(}{convId}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{offset}{=}{{-}{{(}{int}{)}{{{offsetFormatter}{()}}{.}{parseMillis}{(}{id}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{itimeStyle}{=}{{selectStyle}{(}{dateStyle}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeField}}{{field}{=}{{iFieldType}{.}{getField}{(}{chrono}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{printTimeZone}{(}{{getOffset}{(}{instant}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{printTimeZone}{(}{{getOffset}{(}{instant}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{id}{=}{{printTimeZone}{(}{offset}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{MutableDateTime}}{(}{{parseMillis}{(}{text}{,}{millis}{,}{chrono}{)}}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MutableDateTime}}{(}{{parseMillis}{(}{text}{,}{chrono}{)}}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTime}}{(}{{parseMillis}{(}{text}{,}{millis}{,}{chrono}{)}}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{DateTime}}{(}{{parseMillis}{(}{text}{,}{chrono}{)}}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{print}{(}{millis}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{printTo}{(}{out}{,}{millis}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{{printTo}{(}{buf}{,}{millis}{,}{chrono}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{{String}}{text}}{,}{{{ReadableInstant}}{instant}}{)}{{{}{{return}{{mParser}{.}{parseMutableDateTime}{(}{text}{,}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MutableDateTime}}{parseMutableDateTime}{(}{{{String}}{text}}{,}{{{Chronology}}{chrono}}{)}{{{}{{return}{{mParser}{.}{parseMutableDateTime}{(}{text}{,}{chrono}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{{String}}{text}}{,}{{{ReadableInstant}}{instant}}{)}{{{}{{return}{{mParser}{.}{parseDateTime}{(}{text}{,}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTime}}{parseDateTime}{(}{{{String}}{text}}{,}{{{Chronology}}{chrono}}{)}{{{}{{return}{{mParser}{.}{parseDateTime}{(}{text}{,}{chrono}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mParser}{.}{parseMillis}{(}{text}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mParser}{.}{parseInto}{(}{instant}{,}{text}{,}{position}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{long}{instant}}{,}{{{Chronology}}{chrono}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{,}{chrono}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{long}{instant}}{,}{{{DateTimeZone}}{zone}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{,}{zone}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mPrinter}{.}{printTo}{(}{out}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mPrinter}{.}{printTo}{(}{buf}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mPrinter}{.}{printTo}{(}{out}{,}{instant}{,}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mPrinter}{.}{printTo}{(}{buf}{,}{instant}{,}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{printTo}{(}{{{Writer}}{out}}{,}{{long}{instant}}{)}{throws}{{IOException}}{{{}{{{mPrinter}{.}{printTo}{(}{out}{,}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mPrinter}{.}{printTo}{(}{out}{,}{instant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{iParsedLengthEstimate}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{iParsedLengthEstimate}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{BaseDateTimeFormatter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{{{BaseDateTimeFormatter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{protected}{int}{estimatePrintedLength}{()}{{{}{{return}{iPrintedLengthEstimate}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{BaseDateTimeFormatter}}{[]}}{printers}}}
{AST_ROOT_SC2NF{{protected}{int}{estimatePrintedLength}{()}{{{}{{return}{{iShortFormat}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{{estimatePrintedLength}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{iMaxDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimatePrintedLength}{()}{{{}{{return}{iMaxDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{{estimatePrintedLength}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimatePrintedLength}{()}{{{}{{return}{{iShort}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimatePrintedLength}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimatePrintedLength}{()}{{{}{{return}{iMaxParsedDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimatePrintedLength}{()}{{{}{{return}{iMaxParsedDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{iMaxParsedDigits}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ParseBucket}}{bucket}}}
{AST_ROOT_SC2NF{{protected}{int}{estimateParsedLength}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{parsers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{{BasePeriodFormatter}}{[]}}{{printers}{=}{iFormatters}}{;}}}
{AST_ROOT_SC2NF{{{Separator}}{finish}{(}{{{BasePeriodFormatter}}{after}}{)}{{{}{{{iAfter}{=}{after}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BasePeriodFormatter}}{before}}}
{AST_ROOT_SC2NF{{{BasePeriodFormatter}}{{composite}{=}{{createComposite}{(}{formatters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{remainder}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMaximumValue}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getMinimumValue}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getLeapAmount}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{isLeap}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsShortText}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{getAsText}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getField}{()}}{.}{get}{(}{{{getReadableInstant}{()}}{.}{getMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fields.era}{=}{BuddhistEraDateTimeField.INSTANCE}}{;}}}
{AST_ROOT_SC2NF{{{}{{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{{cal}{.}{getTimeZone}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}{.}{setDefault}{(}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iChronology}{=}{{ISOChronology}{.}{getInstance}{(}{{DateTimeZone}{.}{getInstance}{(}{id}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{zones}{[}{{i}{++}}{]}}{=}{{new}{{ZoneData}}{(}{id}{,}{{DateTimeZone}{.}{getInstance}{(}{id}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{z}{=}{{DateTimeZone}{.}{getInstance}{(}{str}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DateTimeZone}}{{zone}{=}{{DateTimeZone}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{zone}{.}{getID}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfMonthField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfMonth}{()}}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{dayOfWeek}{=}{{(}{int}{)}{{iChronology}{.}{mod}{(}{{iChronology}{.}{fixedFromMillis}{(}{millis}{)}}{,}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfWeekField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfWeek}{()}}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestGJDayOfYearField}{(}{{{TestGJChronology}}{chrono}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{dayOfYear}{()}}{,}{chrono.MILLIS_PER_DAY}{,}{chrono}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{{DateTimeFormat}{.}{getInstance}{(}{locale}{)}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{{DateTimeFormat}{.}{getInstance}{()}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{-}{{(}{int}{)}{{{offsetFormatter}{()}}{.}{parseMillis}{(}{str}{,}{chrono}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{{DateTimeFormat}{.}{getInstance}{(}{locale}{)}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pattern}{==}{null}}{)}{{{}{{return}{{toString}{()}}{;}}{}}}}{{return}{{{{DateTimeFormat}{.}{getInstance}{()}}{.}{forPattern}{(}{pattern}{)}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{cOffsetFormatter}{.}{print}{(}{millis}{,}{iZone}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{getInstance}{(}{Locale.UK}{)}}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parse}{(}{{{ISODateTimeFormat}{.}{getInstance}{()}}{.}{dateTimeParser}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{p}}}
{AST_ROOT_SC2NF{{{{DateTimeFormatter}}{[]}}{printers}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TimeZoneOffsetFormatter}}{(}{zeroOffsetText}{,}{showSeparators}{,}{minFields}{,}{maxFields}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TimeZonePrinter}}{(}{iLocale}{,}{true}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TimeZonePrinter}}{(}{iLocale}{,}{false}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldType}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{new}{{TextField}}{(}{fieldType}{,}{iLocale}{,}{true}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldType}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{new}{{TextField}}{(}{fieldType}{,}{iLocale}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{formatter}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{formatter}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{p}{=}{{{ISODateTimeFormat}{.}{getInstance}{()}}{.}{hourMinuteSecondFraction}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{g}{.}{parseMutableDateTime}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{g}{.}{parseDateTime}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{bucket}{.}{saveField}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{year}{)}}{;}}}
{AST_ROOT_SC2NF{{{iFormatters}{.}{add}{(}{field}{)}}{;}}}
{AST_ROOT_SC2NF{{{iFormatters}{.}{add}{(}{literal}{)}}{;}}}
{AST_ROOT_SC2NF{{{iFormatters}{.}{add}{(}{formatter}{)}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{formatter}{=}{{toFormatter}{(}{iFormatters}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{PeriodParser}}{toParser}{()}{{{}{{return}{{toFormatter}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{PeriodPrinter}}{toPrinter}{()}{{{}{{return}{{toFormatter}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{f}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}{.}{print}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{periodParser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{ISOPeriodFormat}{.}{getInstance}{()}}{.}{standard}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InputStream}}{{in}{=}{{new}{{StringBufferInputStream}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodFormatter}}{{parser}{=}{{{PeriodFormat}{.}{getInstance}{()}}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{iLocale}}}
{AST_ROOT_SC2NF{{{Locale}}{iLocale}}}
{AST_ROOT_SC2NF{{{Locale}}{iLocale}}}
{AST_ROOT_SC2NF{{{Locale}}{iLocale}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{GJYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{CopticYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{BasicYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fields.year}{=}{{new}{{BasicYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iZone}{==}{zone}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{iLocale}{,}{false}{,}{iChrono}{,}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iChrono}{==}{chrono}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{iLocale}{,}{iOffsetParsed}{,}{chrono}{,}{iZone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iOffsetParsed}{==}{true}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{iLocale}{,}{true}{,}{iChrono}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTimeFormatter}}{(}{iPrinter}{,}{iParser}{,}{locale}{,}{iOffsetParsed}{,}{iChrono}{,}{iZone}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TwoDigitYear}}{(}{{DateTimeFieldType}{.}{weekyear}{()}}{,}{pivot}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{append0}{(}{{new}{{TwoDigitYear}}{(}{{DateTimeFieldType}{.}{year}{()}}{,}{pivot}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{STRING_CONSTANT}{.}{equals}{(}{text}{)}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{text}}{)}}{;}}{}}}}{{return}{instant}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{{getName}{()}}{+}{STRING_CONSTANT}{+}{text}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FieldUtils}{.}{verifyValueBounds}{(}{STRING_CONSTANT}{,}{millisOfDay}{,}{NUMBER_CONSTANT}{,}{DateTimeConstants.MILLIS_PER_DAY}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{STRING_CONSTANT}{.}{equals}{(}{text}{)}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{text}}{)}}{;}}{}}}}{{return}{instant}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{text}}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{text}}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{text}}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{text}}{)}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{TestSerialization}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{test}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{final}{int}{getMinimumDaysInFirstWeek}{()}{{{}{{return}{iMinDaysInFirstWeek}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{test}{=}{PARIS}}{;}}}
{AST_ROOT_SC2NF{{private}{DateTimeFormat}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{private}{PeriodFormat}{()}{{{}}}}}
{AST_ROOT_SC2NF{{private}{ISOPeriodFormat}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{cfg}{.}{setProperty}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fields.era}{=}{ThaiBuddhistEraDateTimeField.INSTANCE}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{length}{,}{{PeriodType}{.}{standard}{()}}{,}{{Chronology}{.}{getISOUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Period}}{{test}{=}{{new}{{Period}}{(}{length}{,}{{{PeriodType}{.}{time}{()}}{.}{withMillisRemoved}{()}}{,}{{Chronology}{.}{getISO}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{Chronology}{.}{getISO}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{Chronology}{.}{getISO}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{Chronology}{.}{getISO}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OffsetDateTimeField}}{{field}{=}{{new}{{OffsetDateTimeField}}{(}{{{Chronology}{.}{getISO}{()}}{.}{secondOfMinute}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{iField}{.}{compareTo}{(}{{{Chronology}{.}{getISO}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{{iField}{.}{hashCode}{()}}{==}{{{{Chronology}{.}{getISO}{()}}{.}{minutes}{()}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{iField}{.}{equals}{(}{{{Chronology}{.}{getISO}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{Chronology}{.}{getGJUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{MillisDurationField.INSTANCE}{.}{compareTo}{(}{{{Chronology}{.}{getISO}{()}}{.}{seconds}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{iField}{.}{compareTo}{(}{{{Chronology}{.}{getISO}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{{iField}{.}{hashCode}{()}}{==}{{{{Chronology}{.}{getISO}{()}}{.}{minutes}{()}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{iField}{.}{equals}{(}{{{Chronology}{.}{getISO}{()}}{.}{minutes}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{verifyValueBounds}{(}{{{Chronology}{.}{getISO}{()}}{.}{monthOfYear}{()}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{Chronology}{.}{getISO}{(}{{ZONES}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{Chronology}{.}{getISO}{(}{{ZONES}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{Chronology}{.}{getGregorian}{()}}}{;}}}
{AST_ROOT_SC2NF{{actual}{=}{{ReadablePartialConverter.INSTANCE}{.}{getPartialValues}{(}{tod}{,}{{new}{{TimeOfDay}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{Chronology}{.}{getISO}{(}{PARIS}{)}}{)}}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{actual}{=}{{NullConverter.INSTANCE}{.}{getPartialValues}{(}{tod}{,}{null}{,}{{Chronology}{.}{getISO}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{Interval}}{(}{TEST_TIME1}{,}{TEST_TIME2}{,}{{Chronology}{.}{getISO}{()}}{)}}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{ms}{,}{{Chronology}{.}{getISOUTC}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{ms}{,}{{Chronology}{.}{getISO}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{.}{add}{(}{NUMBER_CONSTANT}{,}{{Chronology}{.}{getISO}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{type}{.}{getField}{(}{{Chronology}{.}{getCopticUTC}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InternalError}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISO}{()}}{,}{{m}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{actual}{=}{{StringConverter.INSTANCE}{.}{getPartialValues}{(}{tod}{,}{STRING_CONSTANT}{,}{{Chronology}{.}{getISO}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Chronology}{.}{getISOUTC}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{type}{.}{getField}{(}{{Chronology}{.}{getCopticUTC}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InternalError}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{{new}{{Duration}}{(}{length}{)}}{,}{{Chronology}{.}{getISOUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{{new}{{Duration}}{(}{length}{)}}{,}{{Chronology}{.}{getISO}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{length}{,}{{PeriodType}{.}{standard}{()}}{,}{{Chronology}{.}{getISOUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutablePeriod}}{{test}{=}{{new}{{MutablePeriod}}{(}{length}{,}{{{PeriodType}{.}{time}{()}}{.}{withMillisRemoved}{()}}{,}{{Chronology}{.}{getISO}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReadableIntervalConverter.INSTANCE}{.}{setInto}{(}{m}{,}{i}{,}{{Chronology}{.}{getCoptic}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{Chronology}{.}{getISO}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{getChronology}{()}{{{}{{return}{{Chronology}{.}{getISOUTC}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{{Chronology}{.}{getISOUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{iStartMillis}{=}{{iEndMillis}{=}{{DateTimeUtils}{.}{currentTimeMillis}{()}}}}{;}}{{{iChronology}{=}{{Chronology}{.}{getISO}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Chronology}{.}{getISO}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{Chronology}{.}{getISO}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{iZone}}{=}{zone}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{iZone}}{=}{zone}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newValues}{=}{{{getField}{(}{index}{)}}{.}{add}{(}{this}{,}{index}{,}{newValues}{,}{{FieldUtils}{.}{safeMultiplyToInt}{(}{{period}{.}{getValue}{(}{i}{)}}{,}{scalar}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{newValues}{=}{{{getField}{(}{index}{)}}{.}{add}{(}{this}{,}{index}{,}{newValues}{,}{{FieldUtils}{.}{safeMultiplyToInt}{(}{{period}{.}{getValue}{(}{i}{)}}{,}{scalar}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{newValues}{=}{{{getField}{(}{index}{)}}{.}{addWrapPartial}{(}{this}{,}{index}{,}{newValues}{,}{{FieldUtils}{.}{safeMultiplyToInt}{(}{{period}{.}{getValue}{(}{i}{)}}{,}{scalar}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{dt}{==}{null}}{)}{{{}{{{System.out}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{dt}{==}{null}}{)}{{{}{{{System.out}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{cal}{.}{setTime}{(}{{toDate}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{setTime}{(}{{toDate}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{write}{(}{{print}{(}{instant}{,}{displayZone}{,}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{buf}{.}{append}{(}{{print}{(}{instant}{,}{displayZone}{,}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iStartMillis}{=}{{iEndMillis}{=}{{DateTimeUtils}{.}{currentTimeMillis}{()}}}}{;}}{{{iChronology}{=}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{(}{zone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{getChronology}{()}{{{}{{return}{{{ChronologyType}{.}{iso}{()}}{.}{getChronologyUTC}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{{{ChronologyType}{.}{iso}{()}}{.}{getChronologyUTC}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{ChronologyType}{.}{iso}{()}}{.}{getChronology}{(}{zone}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{NUMBER_CONSTANT}{;}}}
{AST_ROOT_SC2NF{{return}{NUMBER_CONSTANT}{;}}}
{AST_ROOT_SC2NF{{{FieldUtils}{.}{verifyValueBounds}{(}{this}{,}{month}{,}{MIN}{,}{MAX}{)}}{;}}}
{AST_ROOT_SC2NF{{long}{{difference}{=}{{{{{(}{{minuendYear}{-}{subtrahendYear}}{)}}{*}{NUMBER_CONSTANT}}{+}{minuendMonth}}{-}{subtrahendMonth}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{set}{(}{instant}{,}{{FieldUtils}{.}{getWrappedValue}{(}{{get}{(}{instant}{)}}{,}{months}{,}{MIN}{,}{MAX}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{{EthiopicChronology}{.}{getInstanceUTC}{()}}{.}{months}{()}}{.}{isPrecise}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{{SKIP}{=}{{NUMBER_CONSTANT}{*}{DateTimeConstants.MILLIS_PER_DAY}}}{;}}{{return}{{new}{{TestSuite}}{(}{{{TestEthiopicChronology}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{{CopticChronology}{.}{getInstanceUTC}{()}}{.}{months}{()}}{.}{isPrecise}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{TestSuite}}{suite}{()}{{{}{{{SKIP}{=}{{NUMBER_CONSTANT}{*}{DateTimeConstants.MILLIS_PER_DAY}}}{;}}{{return}{{new}{{TestSuite}}{(}{{{TestCopticChronology}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fields.monthOfYear}{=}{{new}{{BasicMonthOfYearDateTimeField}}{(}{this}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{+}{OFFSET}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{+}{OFFSET}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{fields.monthOfYear}{=}{{new}{{IslamicMonthOfYearDateTimeField}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{date}{.}{getHours}{()}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{date}{.}{getHours}{()}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{cal}{.}{get}{(}{Calendar.HOUR_OF_DAY}{)}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{date}{.}{getHours}{()}}{,}{{test}{.}{getHourOfDay}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJEraDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{{DateTimeFieldType}{.}{era}{()}}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{GJMonthOfYearDateTimeField}{(}{{{BaseGJChronology}}{chronology}}{)}{{{}{{super}{(}{chronology}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BaseGJChronology}}{chronology}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Constructor}}{{con}{=}{{cls}{.}{getDeclaredConstructor}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{len}{=}{{parser}{.}{estimateParsedLength}{()}}}{;}}{{if}{(}{{len}{>}{est}}{)}{{{}{{{len}{=}{est}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{long}{{instant}{=}{{chronology}{.}{getDateTimeMillis}{(}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{forInstant}{(}{{(}{{Object}}{)}{null}}{,}{JULIAN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{forInstant}{(}{date}{,}{JULIAN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{forInstant}{(}{TEST_TIME2}{,}{JULIAN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{now}{(}{JULIAN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{test}{=}{{LocalTime}{.}{fromMillisOfDay}{(}{TEST_TIME1}{,}{JULIAN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{test}{.}{isSupported}{(}{{DurationFieldType}{.}{eras}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateMidnight}}{{test}{=}{{base}{.}{toDateMidnightDefaultZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{test}{=}{{base}{.}{toDateTimeAtCurrentTimeDefaultZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{test}{=}{{base}{.}{toDateTimeAtMidnightDefaultZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{now}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{nowDefaultZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{nowDefaultZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{now}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{now}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{now}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{now}{(}{COPTIC_PARIS}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSize}{()}{{{}{{{LocalDate}}{{test}{=}{{LocalDate}{.}{nowDefaultZone}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{test}{.}{size}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocalDate}}{{test}{=}{{LocalDate}{.}{nowDefaultZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{test}{=}{{base}{.}{toDateTimeTodayDefaultZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{getApproxMillisAtEpoch}{()}{{{}{{return}{{-}{MILLIS_YEAR_1}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{bucket}{.}{computeMillis}{(}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{bucket}{.}{computeMillis}{(}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newPos}{>=}{{text}{.}{length}{()}}}{)}{{{}{{return}{{bucket}{.}{computeMillis}{(}{true}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{instant}{.}{setMillis}{(}{{bucket}{.}{computeMillis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{long}{computeMillis}{()}{{{}{{return}{{computeMillis}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{=}{{new}{{DateMidnight}}{(}{TEST_TIME1_UTC}{,}{{GregorianChronology}{.}{getInstance}{(}{PARIS}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{(}{PARIS}{)}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{(}{PARIS}{)}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{(}{PARIS}{)}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{test1}{.}{equals}{(}{{new}{{DateMidnight}}{(}{TEST_TIME1_UTC}{,}{{GregorianChronology}{.}{getInstance}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{=}{{new}{{DateTime}}{(}{TEST_TIME1}{,}{{GregorianChronology}{.}{getInstance}{(}{PARIS}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{(}{PARIS}{)}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{(}{PARIS}{)}}{,}{{result}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{ISOChronology}{.}{getInstance}{()}}{,}{{test}{.}{getChronology}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millis}{=}{{converter}{.}{getInstantMillis}{(}{instant}{,}{chronology}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{instant}{,}{{DateTimeUtils}{.}{getChronology}{(}{chronology}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{instant}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{{dateStyle}{*}{NUMBER_CONSTANT}}{+}{timeStyle}}}{;}}}
{AST_ROOT_SC2NF{{public}{{LocalDateTime}}{withMinimumValue}{()}{{{}{{return}{{withValue}{(}{{getMinimumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{withValue}{(}{{getMaximumValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{LocalDate}}{withMinimumValue}{()}{{{}{{return}{{withValue}{(}{{getMinimumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{withValue}{(}{{getMaximumValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{LocalTime}}{withMinimumValue}{()}{{{}{{return}{{withValue}{(}{{getMinimumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{LocalTime}}{withMaximumValue}{()}{{{}{{return}{{withValue}{(}{{getMaximumValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{millisOfSecond}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{secondOfMinute}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{minuteOfHour}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalDateTime}}{{copy}{=}{{{test}{.}{hourOfDay}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{millisOfSecond}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{secondOfMinute}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{minuteOfHour}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocalTime}}{{copy}{=}{{{test}{.}{hourOfDay}{()}}{.}{withValue}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{interval33}{.}{contains}{(}{{new}{{Instant}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{interval33}{.}{containsNow}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{interval33}{.}{contains}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{getChronology}{()}}{==}{{other}{.}{getChronology}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{synchronized}{{Set}}{getAvailableIDs}{()}{{{}{{return}{{Collections}{.}{unmodifiableSet}{(}{{iZoneInfoMap}{.}{keySet}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{value}{>=}{min}}{&&}{{value}{<}{{getMaximumValue}{(}{instant}{)}}}}{)}{{{}{{return}{{super}{.}{set}{(}{instant}{,}{value}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{tz}{=}{{builder}{.}{toDateTimeZone}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{writeTo}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{createMessage}{(}{fieldName}{,}{value}{,}{lowerBound}{,}{upperBound}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{createMessage}{(}{{fieldType}{.}{getName}{()}}{,}{value}{,}{lowerBound}{,}{upperBound}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{createMessage}{(}{{fieldType}{.}{getName}{()}}{,}{value}{,}{lowerBound}{,}{upperBound}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{minusYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{plusYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{test}{.}{withYears}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{()}}{;}}{{{printTo}{(}{out}{,}{instant}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{()}}{;}}{{{printTo}{(}{buf}{,}{instant}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTime}}{{now}{=}{{new}{{DateTime}}{()}}}{;}}}
{AST_ROOT_SC2NF{{offsetLocal}{<}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{{t}{=}{{{{{new}{{DateTimeFormatterBuilder}}{()}}{.}{append}{(}{{hourMinuteSecondMillis}{()}}{)}}{.}{append}{(}{{offsetElement}{()}}{)}}{.}{toFormatter}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTime}}{{start}{=}{{base}{.}{toDateTimeAtMidnight}{(}{LONDON}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{start}{=}{{base}{.}{toDateTimeAtMidnight}{(}{TOKYO}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTime}}{{start}{=}{{base}{.}{toDateTimeAtMidnight}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateFormatSymbols}}{{dfs}{=}{{new}{{DateFormatSymbols}}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}{[]}}{{zoneStrings}{=}{{{new}{{DateFormatSymbols}}{(}{locale}{)}}{.}{getZoneStrings}{()}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{id}}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{id}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Hibernate.DATE}{.}{nullSafeSet}{(}{preparedStatement}{,}{{{{(}{{(}{{LocalDate}}{)}{value}}{)}}{.}{toDateMidnight}{()}}{.}{toDate}{()}}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{partial}}}
{AST_ROOT_SC2NF{{{Object}}{readableInstant}}}
{AST_ROOT_SC2NF{{{Object}}{durationField}}}
{AST_ROOT_SC2NF{{{Collection}}{fields}}}
{AST_ROOT_SC2NF{{{Collection}}{fields}}}
{AST_ROOT_SC2NF{{{Collection}}{fields}}}
{AST_ROOT_SC2NF{{{Collection}}{fields}}}
{AST_ROOT_SC2NF{{{Collection}}{fields}}}
{AST_ROOT_SC2NF{{{List}}{list}}}
{AST_ROOT_SC2NF{{{List}}{elementPairs}}}
{AST_ROOT_SC2NF{{{List}}{elementPairs}}}
{AST_ROOT_SC2NF{{{List}}{{pairs}{=}{iElementPairs}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{iElementPairs}{==}{null}}{)}{{{}{{{iElementPairs}{=}{{new}{{ArrayList}}{()}}}{;}}{}}}{else}{{{}{{{iElementPairs}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Map}}{ruleSets}}}
{AST_ROOT_SC2NF{{{}{{{iRules}{=}{{new}{{ArrayList}}{()}}}{;}}{{{iRules}{.}{add}{(}{rule}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{compareTo}{(}{{{Object}}{durationField}}{)}{{{}{{return}{{iField}{.}{compareTo}{(}{durationField}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{iRules}{=}{{new}{{ArrayList}}{(}{rs.iRules}{)}}}{;}}}
{AST_ROOT_SC2NF{{RuleSet}{()}{{{}{{{iRules}{=}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{iUpperYear}{=}{Integer.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{partial}}}
{AST_ROOT_SC2NF{{{f}{=}{{(}{{DateTimeFormatter}}{)}{{cCache}{.}{get}{(}{key}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{formatter}{=}{{(}{{DateTimeFormatter}}{)}{{cPatternedCache}{.}{get}{(}{pattern}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{partial}}}
{AST_ROOT_SC2NF{{{Map}}{zimap}}}
{AST_ROOT_SC2NF{{{iZoneInfoMap}{.}{put}{(}{id}{,}{{new}{{SoftReference}}{(}{tz}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{compareTo}{(}{{{Object}}{durationField}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{List}}{list}}}
{AST_ROOT_SC2NF{{public}{DateTimeFormatterBuilder}{()}{{{}{``;}}{super}{{{iElementPairs}{=}{{new}{{ArrayList}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{HashMap}}{converted}}}
{AST_ROOT_SC2NF{{{HashMap}}{converted}}}
{AST_ROOT_SC2NF{{{HashMap}}{converted}}}
{AST_ROOT_SC2NF{{{HashMap}}{converted}}}
{AST_ROOT_SC2NF{{{TreeMap}}{map}}}
{AST_ROOT_SC2NF{{{TreeMap}}{map}}}
{AST_ROOT_SC2NF{{{symbols}{=}{{(}{{GJLocaleSymbols}}{)}{{cCache}{.}{get}{(}{locale}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{chrono}{=}{{(}{{ISOChronology}}{)}{{cCache}{.}{get}{(}{zone}{)}}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{Single}{.}{between}{(}{start}{,}{{new}{{TimeOfDay}}{()}}{,}{zero}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{f}{.}{withZone}{(}{UTC}{)}}{.}{print}{(}{dt}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZone}{(}{UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZone}{(}{UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZone}{(}{UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withZone}{(}{UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.KOREAN}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.FRANCE}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withPivotYear}{(}{NUMBER_CONSTANT}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{dateFormatter}{=}{{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withPivotYear}{(}{NUMBER_CONSTANT}{)}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ldp}{==}{null}}{)}{{{}{{{ldp}{=}{{{dateElementParser}{()}}{.}{withZone}{(}{DateTimeZone.UTC}{)}}}{;}}{}}}}{{return}{ldp}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{==}{null}}{)}{{return}{null}{;}}}{{return}{{new}{{Instant}}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{int}{[]}}{)}{{iValues}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{int}{[]}}{)}{{iValues}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{java.util.TimeZone}{.}{setDefault}{(}{{LONDON}{.}{toTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.UK}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{locale}{=}{{Locale}{.}{getDefault}{()}}}{;}}{{{zone}{=}{{DateTimeZone}{.}{getDefault}{()}}}{;}}{{{Locale}{.}{setDefault}{(}{Locale.UK}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.UK}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.UK}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.ENGLISH}{)}}{;}}}
{AST_ROOT_SC2NF{{{java.util.TimeZone}{.}{setDefault}{(}{{LONDON}{.}{toTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.UK}{)}}{;}}}
{AST_ROOT_SC2NF{{{Locale}{.}{setDefault}{(}{Locale.UK}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{YearMonth}}{getYearMonth}{()}{{{}{{return}{iYearMonth}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{ReadablePartial}}{getReadablePartial}{()}{{{}{{return}{iYearMonth}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{DateTimeField}}{getField}{()}{{{}{{return}{{iYearMonth}{.}{getField}{(}{iFieldIndex}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iYearMonth}{=}{partial}}{;}}{{{iFieldIndex}{=}{fieldIndex}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{Object}}{>}}{{map}{=}{{new}{{{TreeMap}}{<}{{String}}{,}{{Object}}{>}}{(}{String.CASE_INSENSITIVE_ORDER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}{.}{setDefault}{(}{LONDON}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{iBase}{.}{getZone}{()}}{.}{convertLocalToUTC}{(}{localInstant}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{null}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{duration}{,}{null}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{Hibernate.STRING}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{date}{=}{{Hibernate.DATE}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{value}{=}{{Hibernate.LONG}{.}{nullSafeGet}{(}{resultSet}{,}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{value}{=}{{Hibernate.TIMESTAMP}{.}{nullSafeGet}{(}{resultSet}{,}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{Hibernate.TIME}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{Hibernate.INTEGER}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{Hibernate.DATE}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{date}{=}{{Hibernate.TIME}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{Hibernate.TIMESTAMP}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{timestamp}{=}{{Hibernate.TIMESTAMP}{.}{nullSafeGet}{(}{resultSet}{,}{string}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{s}{=}{{(}{{String}}{)}{{Hibernate.STRING}{.}{nullSafeGet}{(}{resultSet}{,}{{strings}{[}{NUMBER_CONSTANT}{]}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{iValues}{=}{{addPeriodInto}{(}{{getValues}{()}}{,}{period}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{period}{!=}{null}}{)}{{{}{{{iValues}{=}{{mergePeriodInto}{(}{{getValues}{()}}{,}{period}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{iValues}{=}{newValues}}{;}}}
{AST_ROOT_SC2NF{{{array}{=}{{new}{{{Object}}{[]}}{{{}{validValues}{,}{{new}{{Integer}}{(}{maxLength}{)}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{integers}{[}{i}{]}}{=}{{new}{{Integer}}{(}{i}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{withPivotYear}{(}{{new}{{Integer}}{(}{pivotYear}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{array}{=}{{new}{{{Object}}{[]}}{{{}{validValues}{,}{{new}{{Integer}}{(}{maxLength}{)}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{withPivotYear}{(}{{new}{{Integer}}{(}{pivotYear}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{printer}{=}{{ISODateTimeFormat}{.}{dateHourMinuteSecondFraction}{()}}}{;}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{originalLocale}{=}{{Locale}{.}{getDefault}{()}}}{;}}{{{Locale}{.}{setDefault}{(}{Locale.UK}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{convId}{=}{{zone}{.}{getDisplayName}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{readZoneInfoMap}{(}{din}{,}{map}{)}}{;}}{}}}{finally}{{{}{{try}{{{}{{{din}{.}{close}{()}}{;}}{}}}{{catch}{(}{{{IOException}}{e}}{)}{{{}}}}}{}}}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{msg}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tokenLen}{>=}{NUMBER_CONSTANT}}{)}{{{}{{{builder}{.}{appendTimeZoneName}{()}}{;}}{}}}{else}{{{}{{{builder}{.}{appendTimeZoneShortName}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{ex}{.}{getMessage}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{{ex}{.}{getMessage}{()}}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{true}{,}{{{ex}{.}{getMessage}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{localDateTime}{.}{toDateTime}{(}{this}{)}}{;}}{{return}{false}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{return}{true}{;}}{}}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{message}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{divisor}{==}{NUMBER_CONSTANT}}{)}{{return}{this}{;}}}{{return}{{new}{{Duration}}{(}{{FieldUtils}{.}{safeDivide}{(}{{getMillis}{()}}{,}{divisor}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{multiplicand}{==}{NUMBER_CONSTANT}}{)}{{return}{this}{;}}}{{return}{{new}{{Duration}}{(}{{FieldUtils}{.}{safeMultiply}{(}{{getMillis}{()}}{,}{multiplicand}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{appendable}{.}{append}{(}{{print}{(}{instant}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{f2}{=}{{new}{{DateTimeFormatter}}{(}{null}{,}{{f}{.}{getParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{DateTimePrinter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{{{DateTimePrinter}}{[]}}{{elements}{=}{iPrinters}}{;}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{appendable}{,}{null}{,}{instant}{,}{chrono}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{f}{instanceof}{{DateTimePrinter}}}}
{AST_ROOT_SC2NF{{{DateTimePrinter}}{printer}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{(}{printer}{)}}{;}}{{{checkParser}{(}{parser}{)}}{;}}{{return}{{append0}{(}{printer}{,}{parser}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{(}{printer}{)}}{;}}{{return}{{append0}{(}{printer}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{formatter}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{formatter}{.}{getPrinter}{()}}{,}{{formatter}{.}{getParser}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTimePrinter}}{{p}{=}{{{getFormatter}{(}{locale}{)}}{.}{getPrinter}{()}}}{;}}{{{p}{.}{printTo}{(}{appendable}{,}{partial}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimePrinter}}{{p}{=}{{{getFormatter}{(}{locale}{)}}{.}{getPrinter}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{(}{{StyleFormatter}}{)}{{formatter}{.}{getPrinter}{()}}}{)}}{.}{getPattern}{(}{locale}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimePrinter}}{{printer}{=}{{requirePrinter}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimePrinter}}{{printer}{=}{{requirePrinter}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{out}{,}{instant}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimePrinter}}{printer}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeMillis}{(}{resetFields}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeMillis}{(}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{saveField}{(}{{new}{{SavedField}}{(}{{fieldType}{.}{getField}{(}{iChrono}{)}}{,}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{saveField}{(}{{new}{{SavedField}}{(}{field}{,}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{text}}}
{AST_ROOT_SC2NF{{{f2}{=}{{new}{{DateTimeFormatter}}{(}{{(}{{InternalPrinter}}{)}{null}}{,}{{f}{.}{getParser}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{reset}{()}}{;}}{{return}{{doParseMillis}{(}{parser}{,}{text}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{text}}}
{AST_ROOT_SC2NF{{{String}}{text}}}
{AST_ROOT_SC2NF{{{String}}{text}}}
{AST_ROOT_SC2NF{{f}{instanceof}{{DateTimeParser}}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{{}{{{checkPrinter}{(}{printer}{)}}{;}}{{{checkParser}{(}{parser}{)}}{;}}{{return}{{append0}{(}{{DateTimePrinterInternalPrinter}{.}{of}{(}{printer}{)}}{,}{parser}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkParser}{(}{parser}{)}}{;}}{{return}{{append0}{(}{null}{,}{parser}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{formatter}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{append0}{(}{{formatter}{.}{getPrinter0}{()}}{,}{{formatter}{.}{getParser}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{{parser}{=}{{requireParser}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeParser}}{getParser}{()}{{{}{{return}{iParser}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{DateTimePrinterInternalPrinter}{.}{of}{(}{printer}{)}}{,}{parser}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{iMillis}{=}{{FieldUtils}{.}{safeAdd}{(}{endMillis}{,}{{-}{startMillis}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iMillis}{=}{{FieldUtils}{.}{safeAdd}{(}{endInstant}{,}{{-}{startInstant}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{builder}{.}{appendSuffix}{(}{null}{,}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{builder}{.}{appendPrefix}{(}{null}{,}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{iSuffixes}{=}{texts}}{;}}}
{AST_ROOT_SC2NF{{{{{new}{{PeriodFormatterBuilder}}{()}}{.}{appendDays}{()}}{.}{appendSuffix}{(}{STRING_CONSTANT}{)}}{.}{appendSuffix}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{{new}{{PeriodFormatterBuilder}}{()}}{.}{appendPrefix}{(}{STRING_CONSTANT}{)}}{.}{appendPrefix}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{periodStr}{.}{regionMatches}{(}{true}{,}{pos}{,}{text}{,}{NUMBER_CONSTANT}{,}{textLength}{)}}{)}{{{}{{if}{(}{{!}{{matchesOtherAffix}{(}{textLength}{,}{periodStr}{,}{pos}{)}}}{)}{{{}{{return}{pos}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{periodStr}{.}{regionMatches}{(}{false}{,}{pos}{,}{text}{,}{NUMBER_CONSTANT}{,}{textLength}{)}}{)}{{{}{{if}{(}{{!}{{matchesOtherAffix}{(}{textLength}{,}{periodStr}{,}{pos}{)}}}{)}{{{}{{return}{pos}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{synchronized}{(}{{{DateTimeZone}}{.}{class}}{)}{{{}{{{cDefault}{=}{zone}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{TreeSet}}{<}{{String}}{>}}{(}{{iZoneInfoMap}{.}{keySet}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{{String}}{>}}{getAvailableIDs}{()}{{{}{{return}{{Collections}{.}{singleton}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{{Set}}{<}{{String}}{>}}{getAvailableIDs}{()}{{{}{{return}{cAvailableIDs}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{cProvider}{.}{getZone}{(}{id}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{zone}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{curMonth0}{=}{{{partial}{.}{getValue}{(}{NUMBER_CONSTANT}{)}}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ZoneInfoCompiler}{.}{verbose}{()}}{)}{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{{tz}{.}{getID}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{cVerbose}{.}{set}{(}{verbose}{)}}{;}}}
{AST_ROOT_SC2NF{{{Interval}}{{interval}{=}{{new}{{Interval}}{(}{start}{,}{end}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{compare}{=}{{csCompare}{(}{value}{,}{text}{,}{position}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FieldUtils}{.}{safeAdd}{(}{{getEndMillis}{()}}{,}{{-}{{getStartMillis}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{millis}{=}{{iField}{.}{set}{(}{millis}{,}{iValue}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{str}{=}{{str}{.}{toLowerCase}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{str}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{f}{=}{{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}{.}{withLocale}{(}{Locale.UK}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{{fmt}{=}{{DateTimeFormat}{.}{forPattern}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Provider}}{{provider}{=}{{new}{{ZoneInfoProvider}}{(}{STRING_CONSTANT}{)}}}{;}}{{return}{{validateProvider}{(}{provider}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumPct}{(}{{new}{{Character}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumFreq}{(}{{new}{{Character}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPct}{(}{{new}{{Character}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{{new}{{Character}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{IntegratorException}{(}{{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{initialStepSize}}}
{AST_ROOT_SC2NF{{{SecondOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{public}{DerivativeException}{(}{{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{GillStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{MidpointStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{EulerStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{ThreeEighthesStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{c}{,}{a}{,}{b}{,}{{new}{{ClassicalRungeKuttaStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{VariableHandler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{cm}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{KeplerStepHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{VariableStepHandler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{KeplerStepHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integrator}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{VariableHandler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{{new}{{KeplerHandler}}{(}{pb}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{setStepHandler}{(}{handler}{)}}{;}}}
{AST_ROOT_SC2NF{{{handler}{=}{{DummyStepHandler}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FirstOrderIntegrator}}{integrator}}}
{AST_ROOT_SC2NF{{{regression}{.}{addData}{(}{y}{,}{x}{,}{omega}{)}}{;}}}
{AST_ROOT_SC2NF{{{regression}{.}{addData}{(}{y}{,}{x}{,}{omega}{)}}{;}}}
{AST_ROOT_SC2NF{{{CombinedEventsManager}}{{manager}{=}{{addEndTimeChecker}{(}{t}{,}{eventsHandlersManager}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedEventsManager}}{{manager}{=}{{addEndTimeChecker}{(}{t}{,}{eventsHandlersManager}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maxValueError}{=}{NUMBER_CONSTANT}}{;}}{{{maxTimeError}{=}{NUMBER_CONSTANT}}{;}}{{{lastError}{=}{NUMBER_CONSTANT}}{;}}{{{expectedStepStart}{=}{{problem}{.}{getInitialTime}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ComplexFormat}}{{cf}{=}{{new}{{ComplexFormat}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ComplexFormat}}{{cf}{=}{{ComplexFormat}{.}{getInstance}{(}{{getLocale}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{step}}{;}}}
{AST_ROOT_SC2NF{{{stepSize}{=}{step}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{step}}{;}}}
{AST_ROOT_SC2NF{{{stepSize}{=}{step}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{step}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{qr}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{System}{.}{arraycopy}{(}{{b}{[}{i}{]}}{,}{NUMBER_CONSTANT}{,}{{{root}{.}{getDataRef}{()}}{[}{{swap}{[}{i}{]}}{]}}{,}{NUMBER_CONSTANT}{,}{rank}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{QRDecompositionImpl}}{()}}{.}{isFullRank}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isFullRank}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isFullRank}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{cachedQ}{==}{null}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{sse}{=}{{{{u}{.}{transpose}{()}}{.}{multiply}{(}{{Omega}{.}{inverse}{()}}{)}}{.}{multiply}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{RealMatrix}}{{XTX}{=}{{{X}{.}{transpose}{()}}{.}{multiply}{(}{X}{)}}}{;}}{{return}{{XTX}{.}{inverse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isNonSingular}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isNonSingular}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatrixIndexException}}{{ex}{=}{{new}{{MatrixIndexException}}{(}{msg}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{singular}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{singular}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{singular}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{matrix}{.}{isSquare}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{matrix}{.}{isSquare}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isSquare}{()}}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Object}}{[]}}{)}{{arguments}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{pattern}}{=}{null}}{;}}{{{{this}{.}{arguments}}{=}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Object}}{[]}}{)}{{arguments}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MatrixIndexException}}{{ex}{=}{{new}{{MatrixIndexException}}{(}{msg}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvalidMatrixException}}{{ex}{=}{{new}{{InvalidMatrixException}}{(}{msg}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ex}{.}{getMessage}{(}{Locale.FRENCH}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ex}{.}{getMessage}{(}{Locale.FRENCH}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getZ}{()}{{{}{{throw}{{new}{{MathRuntimeException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{o}{==}{null}}{)}{{{}{{throw}{{new}{{MathException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{pattern}}{=}{null}}{;}}{{{{this}{.}{arguments}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{assertNull}{(}{{ioe}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{assertNull}{(}{{ioe}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{setInterpolatedTime}{(}{t}{)}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{new}{{IOException}}{(}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{qrt}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{iterationCount}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lu}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{iterationCount}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{loaded}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{vTv}{.}{subtract}{(}{id}{)}}{.}{getNorm}{()}}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{{refValues}{[}{i}{]}}{,}{{eigenValues}{[}{{eigenValues.length}{-}{NUMBER_CONSTANT}{-}{i}}{]}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{orthoTridiag}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{lu}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{lu}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{copyIn}{(}{d}{)}}{;}}{{{lu}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{lu}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getPivot}{(}{)}{throws}{{IllegalStateException}}{{{}{{{checkDecomposed}{()}}{;}}{{return}{{pivot}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkDecomposed}{()}}{;}}{{return}{{eigenvalues}{[}{i}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getEigenvalues}{(}{)}{throws}{{InvalidMatrixException}}{{{}{{{checkDecomposed}{()}}{;}}{{return}{{eigenvalues}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{distinct}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{repeated}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{{t}{.}{getMainDiagonalRef}{()}}{,}{{t}{.}{getSecondaryDiagonalRef}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{new}{{EigenDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getNorm}{(}{)}{throws}{{InvalidMatrixException}}{{{}{{{checkDecomposed}{()}}{;}}{{return}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getSingularValues}{(}{)}{throws}{{InvalidMatrixException}}{{{}{{{checkDecomposed}{()}}{;}}{{return}{{singularValues}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ds}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ds}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{copyIn}{(}{d}{)}}{;}}{{{ds}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ds}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{distinct}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{repeated}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{m}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{ed}{=}{{{new}{{DecompositionSolver}}{(}{matrix}{)}}{.}{eigenDecompose}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{DescriptiveStatistics}{(}{{int}{window}}{)}{{{}{``;}}{super}{{{setWindowSize}{(}{window}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{stat}{.}{evaluate}{(}{{eDA}{.}{getValues}{()}}{,}{{eDA}{.}{start}{()}}{,}{{eDA}{.}{getNumElements}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}{[]}}{in}}}
{AST_ROOT_SC2NF{{{RealVectorImpl}}{v}}}
{AST_ROOT_SC2NF{{{double}{[]}}{v}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{m}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{m}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{m}}}
{AST_ROOT_SC2NF{{{double}{[]}}{v}}}
{AST_ROOT_SC2NF{{{}{{{setup}{(}{f}{)}}{;}}{{return}{{{factory}{.}{newDefaultSolver}{(}{f}{)}}{.}{solve}{(}{x0}{,}{x1}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newSecantSolver}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newBrentSolver}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newNewtonSolver}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newBisectionSolver}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{iterator}{.}{next}{()}}{;}}{}}}{{catch}{(}{{{ConcurrentModificationException}}{cme}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{{m_outerProduct}{=}{{v1}{.}{outerProduct}{(}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedV}{=}{{{transformer}{.}{getV}{()}}{.}{multiply}{(}{{new}{{RealMatrixImpl}}{(}{iData}{,}{false}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedU}{=}{{{transformer}{.}{getU}{()}}{.}{multiply}{(}{{new}{{RealMatrixImpl}}{(}{iData}{,}{false}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{covRM}{=}{{new}{{RealMatrixImpl}}{(}{cov}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{dData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{xData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{RealMatrixImpl}}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{RealMatrixImpl}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{{matrix}{=}{{new}{{RealMatrixImpl}}{(}{testSquare}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Omega}}{=}{{new}{{RealMatrixImpl}}{(}{omega}{)}}}{;}}{{{{this}{.}{OmegaInverse}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{{matrix}{=}{{new}{{RealMatrixImpl}}{(}{testData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{{matrix}{=}{{new}{{RealMatrixImpl}}{(}{testData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{{matrix}{=}{{new}{{RealMatrixImpl}}{(}{testData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{{matrix}{=}{{new}{{RealMatrixImpl}}{(}{testData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{invData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{RealMatrixImpl}}{(}{x}{)}}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{solver}{.}{isNonSingular}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{RealVectorImpl}}{(}{{solve}{(}{{b}{.}{getData}{()}}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{decomposition}}{=}{decomposition}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{DenseRealMatrix}}{(}{x}{)}}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Omega}}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{omega}{)}}}{;}}{{{{this}{.}{OmegaInverse}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{MatrixUtils}{.}{createRealMatrix}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{RealVectorImpl}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArrayIndexOutOfBoundsException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSingular}{(}{)}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{decomposition}}{=}{decomposition}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{eigenvectors}{[}{i}{]}}{=}{{findEigenvector}{(}{{eigenvalues}{[}{i}{]}}{,}{d}{,}{l}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{eigenvalues}{[}{index}{]}}{=}{{main}{[}{index}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{eigenvectors}{==}{null}}{)}{{{}{{{findEigenVectors}{()}}{;}}{}}}}{{return}{{new}{{Solver}}{(}{eigenvalues}{,}{eigenvectors}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{determinant}{=}{NUMBER_CONSTANT}}{;}}{{for}{(}{{double}{lambda}}{:}{eigenvalues}{)}{{{}{{{determinant}{*=}{lambda}}{;}}{}}}}{{return}{determinant}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cachedD}{==}{null}}{)}{{{}{{{cachedD}{=}{{MatrixUtils}{.}{createRealDiagonalMatrix}{(}{eigenvalues}{)}}}{;}}{}}}}{{return}{cachedD}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{observed}{=}{{ed}{.}{getEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{lambda}{=}{{ed}{.}{getEigenvalue}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{eigenValues}{=}{{ed}{.}{getEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{eigenValues}{=}{{ed}{.}{getEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{eigenValues}{=}{{ed}{.}{getEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{ed}{.}{getEigenvalue}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{singularValues}{=}{{eigenDecomposition}{.}{getEigenvalues}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{eigenvectors}{==}{null}}{)}{{{}{{{findEigenVectors}{()}}{;}}{}}}}{{return}{{new}{{Solver}}{(}{realEigenvalues}{,}{eigenvectors}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{fht}{(}{f}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{OpenIntToDoubleHashMap}}{{map}{=}{{new}{{OpenIntToDoubleHashMap}}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{map}{.}{remove}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{entries}}{=}{{new}{{OpenIntToDoubleHashMap}}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{previous}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{{values}{[}{index}{]}}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{return}{{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{XTX}{)}}{)}}{.}{getInverse}{()}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{RealMatrixImpl}}{(}{reference}{)}}{,}{{new}{{RealMatrixImpl}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{RealMatrixImpl}}{(}{reference}{)}}{,}{{new}{{RealMatrixImpl}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{RealMatrixImpl}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{RealMatrixImpl}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{RealMatrixImpl}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{RealMatrixImpl}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{rDiag}{=}{{new}{{double}{[}}{n}{]}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{XTOIX}{)}}{)}}{.}{getInverse}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lu}{==}{null}}{)}{{{}{{{lu}{=}{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{this}{,}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{double}{getDeterminant}{(}{{{RealMatrix}}{m}}{)}{{{}{{return}{{{new}{{LUSolver}}{(}{{new}{{LUDecompositionImpl}}{(}{m}{)}}{)}}{.}{getDeterminant}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{clearResult}{()}}{;}}{{return}{{localmin}{(}{min}{,}{max}{,}{relativeAccuracy}{,}{absoluteAccuracy}{,}{f}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Float.NaN}{,}{{MathUtils}{.}{sign}{(}{Float.NaN}{)}}{,}{delta}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{vals}{[}{i}{]}}{=}{{values}{[}{i}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{computeOmega}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeOmega}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeOmega}{(}{f.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{computeOmega}{(}{f.length}{)}}{;}}{{return}{{fft}{(}{f}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{virtualSize}}{;}{{i}{++}}{)}{{{}{{{set}{(}{i}{,}{value}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{set}{(}{i}{,}{{Math}{.}{log}{(}{{getEntry}{(}{i}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{set}{(}{i}{,}{{Math}{.}{log10}{(}{{getEntry}{(}{i}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{set}{(}{i}{,}{{NUMBER_CONSTANT}{/}{{getEntry}{(}{i}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{set}{(}{i}{,}{{{getEntry}{(}{i}{)}}{+}{d}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{set}{(}{i}{,}{{Math}{.}{acos}{(}{{getEntry}{(}{i}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{res}{.}{set}{(}{{i}{+}{virtualSize}}{,}{{a}{[}{i}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{RealVector}}{{res}{=}{{new}{{SparseRealVector}}{(}{this}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{res}{.}{set}{(}{virtualSize}{,}{d}{)}}{;}}{{return}{res}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{set}{(}{index}{,}{v.data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{w}{.}{set}{(}{i}{,}{{{w}{.}{getEntry}{(}{i}{)}}{/}{si}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m3}{.}{multiply}{(}{m4}{)}}{,}{m5}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{MatrixIndexException}}{{ex}{=}{{new}{{MatrixIndexException}}{(}{msg}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{expansionMode}{!=}{MULTIPLICATIVE_MODE}}{&&}{{expansionMode}{!=}{ADDITIVE_MODE}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{numElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArrayIndexOutOfBoundsException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getZ}{()}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{{FunctionEvaluationException}}{{ex}{=}{{new}{{FunctionEvaluationException}}{(}{NUMBER_CONSTANT}{,}{cause}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionEvaluationException}}{{ex}{=}{{new}{{FunctionEvaluationException}}{(}{NUMBER_CONSTANT}{,}{pattern}{,}{arguments}{,}{cause}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isZero}{(}{norm}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{rows}{,}{columns}{}}}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{cce}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DimensionMismatchException}}{dme}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{,}{null}{,}{dme}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{covarianceMatrix}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{{return}{isForward}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{{}{{return}{{buildMessage}{(}{pattern}{,}{arguments}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{f}{instanceof}{{PolynomialFunction}}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{instanceof}{{PolynomialFunction}}}{)}{{{}{{{p}{=}{{(}{{PolynomialFunction}}{)}{f}}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{{MathException}}{{ex}{=}{{new}{{MathException}}{(}{pattern}{,}{arguments}{,}{cause}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{isCardan}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathConfigurationException}}{{ex}{=}{{new}{{MathConfigurationException}}{(}{pattern}{,}{arguments}{,}{cause}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{{ConvergenceException}}{{ex}{=}{{new}{{ConvergenceException}}{(}{pattern}{,}{arguments}{,}{cause}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{buildMessage}{(}{pattern}{,}{arguments}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isSquare}{()}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{,}{null}{,}{de}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{iter}{.}{hasNext}{()}}{)}{{{}{{{iter}{.}{advance}{()}}{;}}{{if}{(}{{Double}{.}{isNaN}{(}{{iter}{.}{value}{()}}{)}}{)}{{return}{true}{;}}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{iter}{.}{hasNext}{()}}{)}{{{}{{{iter}{.}{advance}{()}}{;}}{{if}{(}{{Double}{.}{isInfinite}{(}{{iter}{.}{value}{()}}{)}}{)}{{return}{true}{;}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{delta}{>}{max}}{)}{{{max}{=}{delta}}{;}}}}
{AST_ROOT_SC2NF{{{}{{{virtualSize}{=}{values.length}}{;}}{{{fromDoubleArray}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{data.length}{!=}{n}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{data.length}{+}{STRING_CONSTANT}{+}{n}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{epsilon}{=}{DEFAULT_ZERO_TOLERANCE}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setConvergenceChecker}{(}{{{ConvergenceChecker}}{checker}}{)}{{{}{{{optimizer}{.}{setConvergenceChecker}{(}{checker}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Optimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{final}{{{Comparator}}{<}{{PointValuePair}}{>}}{comparator}}}
{AST_ROOT_SC2NF{{public}{void}{setConvergenceChecker}{(}{{{ConvergenceChecker}}{checker}}{)}{{{}{{{{this}{.}{checker}}{=}{checker}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{MultiObjectiveFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{MultiObjectiveFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{MultiObjectiveFunction}}{function}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{{buildArray}{(}{m}{,}{factor}{)}}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{{buildChebyquadArray}{(}{n}{,}{factor}{)}}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{startParams}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{startParams}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{{buildArray}{(}{n}{,}{x0}{)}}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{{if}{(}{{theoreticalStartCost}{>}{NUMBER_CONSTANT}}{)}{{{}{{{setCostAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setParamsAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{{if}{(}{{theoreticalStartCost}{>}{NUMBER_CONSTANT}}{)}{{{}{{{setCostAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setParamsAccuracy}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{{buildArray}{(}{NUMBER_CONSTANT}{,}{x0}{)}}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalStartCost}{,}{NUMBER_CONSTANT}{,}{{buildArray}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{NUMBER_CONSTANT}{,}{startParams}{,}{theoreticalStartCost}{,}{NUMBER_CONSTANT}{,}{{buildArray}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{{buildArray}{(}{n}{,}{x0}{)}}{,}{theoreticalStartCost}{,}{theoreticalMinCost}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{residual}{=}{{{objective}{[}{i}{]}}{-}{{target}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxEvaluations}{(}{maxCostEval}{)}}{;}}}
{AST_ROOT_SC2NF{{{incrementJacobianEvaluationsCounter}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setConvergenceChecker}{(}{{new}{{SimpleVectorialValueChecker}}{()}}{)}}{;}}{{{setMaxEvaluations}{(}{DEFAULT_MAX_EVALUATIONS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{,}{pattern}{,}{arguments}{)}{;}}{{{{this}{.}{argument}}{=}{argument}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{{this}{.}{argument}}{=}{argument}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{pattern}{,}{arguments}{)}{;}}{{{{this}{.}{argument}}{=}{argument}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{ex}{.}{getArgument}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Math.PI}{,}{{ex}{.}{getArgument}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{VectorialObjectiveFunction}}{function}}}
{AST_ROOT_SC2NF{{public}{void}{setConvergenceChecker}{(}{{{ScalarConvergenceChecker}}{checker}}{)}{{{}{{{{this}{.}{checker}}{=}{checker}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ObjectiveException}}{oe}}{)}{{{}{{{assertTrue}{(}{exceptionExpected}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{ZERO}{;}}{}}}}{{return}{{{new}{{BigFraction}}{(}{numerator}{,}{denominator}{)}}{.}{reduce}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wholeFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{FractionFormat}{()}{{{}{{this}{(}{{getDefaultNumberFormat}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{subtract}{(}{{new}{{BigFraction}}{(}{l}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{subtract}{(}{{new}{{BigFraction}}{(}{i}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{multiply}{(}{{new}{{BigFraction}}{(}{l}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{multiply}{(}{{new}{{BigFraction}}{(}{i}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{{new}{{BigFraction}}{(}{l}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{{new}{{BigFraction}}{(}{i}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Fraction}}{>}}{coefficients}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ci}{,}{{l40}{[}{i}{]}}{,}{{ci}{*}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{BigFraction}}{(}{Double.MIN_NORMAL}{)}}{.}{getNumeratorAsLong}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.US}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.FRENCH}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{String}}{getResourceName}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{String}}{getResourceName}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.US}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.FRENCH}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.FRENCH}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Locale}}{getLocale}{()}{{{}{{return}{Locale.US}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{factory}{.}{newDefaultSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setup}{(}{f}{)}}{;}}{{return}{{{factory}{.}{newDefaultSolver}{()}}{.}{solve}{(}{f}{,}{x0}{,}{x1}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{logSum}{+=}{{Math}{.}{log}{(}{{(}{double}{)}{i}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{n0}{=}{{(}{double}{)}{n}}}{;}}}
{AST_ROOT_SC2NF{{double}{{n0}{=}{{(}{double}{)}{n}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{meanImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{geoMeanImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{sumLogImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{maxImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{minImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{sumSqImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{StorelessUnivariateStatistic}}{[]}}{)}{{sumImpl}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{degreesOfFreedom}{=}{{(}{double}{)}{{(}{{{n1}{+}{n2}}{-}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{sumY}{-}{{slope}{*}{sumX}}}{)}}{/}{{(}{{(}{double}{)}{n}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{*}{{(}{{{(}{{NUMBER_CONSTANT}{/}{{(}{double}{)}{n}}}{)}}{+}{{{(}{{xbar}{*}{xbar}}{)}}{/}{sumXX}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}{{return}{{{getSumSquaredErrors}{()}}{/}{{(}{double}{)}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{(}{{{RealPointValuePair}}{[]}}{)}{{optima}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{(}{{{RealPointValuePair}}{[]}}{)}{{optima}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{n}{=}{{(}{double}{)}{length}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{dest.variance}{=}{{(}{{Variance}}{)}{{source.variance}{.}{copy}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{(}{{{VectorialPointValuePair}}{[]}}{)}{{optima}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dest.incMoment}{=}{source.incMoment}}{;}}{{{dest.moment}{=}{{(}{{FirstMoment}}{)}{{source.moment}{.}{copy}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{sampleSize}{=}{{(}{double}{)}{length}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{dest.moment}{=}{{(}{{FourthMoment}}{)}{{source.moment}{.}{copy}{()}}}}{;}}{{{dest.incMoment}{=}{source.incMoment}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{NumberTransformer}}{)}{{map}{.}{get}{(}{key}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{sumDifference}{(}{sample1}{,}{sample2}{)}}{/}{{(}{double}{)}{sample1.length}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dest.sumOfLogs}{=}{{(}{{SumOfLogs}}{)}{{source.sumOfLogs}{.}{copy}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumOfLogs}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{{(}{double}{)}{length}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumOfLogs}{.}{getResult}{()}}{/}{{(}{double}{)}{{sumOfLogs}{.}{getN}{()}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{{i}{-}{NUMBER_CONSTANT}}{]}}{=}{{{(}{double}{)}{i}}{*}{{coefficients}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{n0}{=}{{(}{double}{)}{n}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{dest.moment}{=}{{new}{{ThirdMoment}}{(}{{(}{{ThirdMoment}}{)}{{source.moment}{.}{copy}{()}}}{)}}}{;}}{{{dest.incMoment}{=}{source.incMoment}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Object}}{[]}{[]}}{)}{{contents}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dest.moment}{=}{{(}{{SecondMoment}}{)}{{source.moment}{.}{copy}{()}}}}{;}}{{{dest.isBiasCorrected}{=}{source.isBiasCorrected}}{;}}{{{dest.incMoment}{=}{source.incMoment}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{len}{=}{{(}{double}{)}{length}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{y}{=}{{(}{{double}{[]}}{)}{{problem.y}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{{sum}{/}{{(}{double}{)}{v.length}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{e}{=}{problem.e}}{;}}{{{y}{=}{{(}{{double}{[]}}{)}{{problem.y}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{y}{=}{{(}{{double}{[]}}{)}{{problem.y}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{dY}{[}{i}{]}}{=}{{(}{double}{)}{{y}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{dX}{[}{i}{]}}{=}{{(}{double}{)}{{x}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{asBigDecimal}{(}{testVector}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{m}{.}{getTrace}{()}}{.}{doubleValue}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{problem}{)}{;}}{{{a}{=}{problem.a}}{;}}{{{y}{=}{{(}{{double}{[]}}{)}{{problem.y}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{sum}{/}{{(}{double}{)}{v.length}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextExponential}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextSecureInt}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextSecureLong}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextLong}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{randomData}{.}{nextInt}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{getTrace}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{createSparseMatrix}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{f}{,}{constraints}{,}{GoalType.MAXIMIZE}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{f}{,}{constraints}{,}{GoalType.MAXIMIZE}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{f}{,}{constraints}{,}{goalType}{,}{restrictToNonNegative}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{sumY}{-}{{slope}{*}{sumX}}}{)}}{/}{{(}{n}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{*}{{(}{{{(}{{NUMBER_CONSTANT}{/}{n}}{)}}{+}{{{(}{{xbar}{*}{xbar}}{)}}{/}{sumXX}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{{(}{{accum}{-}{{(}{{{Math}{.}{pow}{(}{accum2}{,}{NUMBER_CONSTANT}{)}}{/}{{(}{length}{)}}}{)}}}{)}}{/}{{(}{{length}{-}{NUMBER_CONSTANT}}{)}}}{)}}}
{AST_ROOT_SC2NF{{double}{{degreesOfFreedom}{=}{{(}{{{n1}{+}{n2}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkSufficientData}{(}{matrix}{)}}{;}}{{{nObs}{=}{{matrix}{.}{getRowDimension}{()}}}{;}}{{{correlationMatrix}{=}{{computeCorrelation}{(}{matrix}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSufficientData}{(}{matrix}{)}}{;}}{{{n}{=}{{matrix}{.}{getRowDimension}{()}}}{;}}{{{covarianceMatrix}{=}{{computeCovariance}{(}{matrix}{,}{biasCorrected}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{getTrace}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{testGenerator}{.}{nextInt}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{regression}{.}{getSlopeConfidenceInterval}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{vs}{.}{getNext}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalStateException}}{ex}}{)}{{{}{;}{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{getTrace}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NonSquareMatrixException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{add}{(}{m2}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{{Iterator}}{{it}{=}{{f}{.}{valuesIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{data}{=}{{buildArray}{(}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{out}{=}{{buildArray}{(}{nRows}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{subMatrix.length}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{nRows}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{FieldVectorImpl}}{<}{{T}}{>}}{)}{{subtract}{(}{{(}{{{T}}{[]}}{)}{v.data}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{FieldVectorImpl}}{<}{{T}}{>}}{)}{{add}{(}{{(}{{{T}}{[]}}{)}{v.data}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{{(}{{{Field}}{<}{{T}}{>}}{)}{{extractField}{(}{v}{)}}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{(}{{{Field}}{<}{{T}}{>}}{)}{{extractField}{(}{d}{)}}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{(}{{{Field}}{<}{{T}}{>}}{)}{{extractField}{(}{d}{)}}}{)}{;}}{{{copyIn}{(}{d}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{nextAction}{=}{{handler}{.}{eventOccurred}{(}{t}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{n}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{n}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{null}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{doubleToLongBits}{(}{test}{)}}{!=}{{Double}{.}{doubleToLongBits}{(}{{iter}{.}{value}{()}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{hatResiduals}{=}{{{{I}{.}{subtract}{(}{hat}{)}}{.}{multiply}{(}{model.Y}{)}}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{row}{,}{endRow}{,}{column}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkMultiplicationCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkMultiplicationCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubtractionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubtractionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkAdditionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkAdditionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{RealMatrixImpl}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{incrementAll}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{denominatorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{numeratorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{<}{NUMBER_CONSTANT}}{||}{{n}{!=}{sample2.length}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{windowSize}{<}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{windowSize}{!=}{INFINITE_WINDOW}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{mean}}{=}{mean}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkMultiplicationCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubtractionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkAdditionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{beta}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{alpha}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{sampleSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{populationSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{num}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{num}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{beta}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{alpha}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkMultiplicationCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkMultiplicationCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkAdditionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkAdditionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{col}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{col}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{r}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkColumnIndex}{(}{column}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRowIndex}{(}{row}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{selectedRows}{,}{selectedColumns}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{selectedRows}{,}{selectedColumns}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubMatrixIndex}{(}{startRow}{,}{endRow}{,}{startColumn}{,}{endColumn}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkMultiplicationCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkSubtractionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkAdditionCompatible}{(}{m}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{successes}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{successes}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{degreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean.length}{!=}{standardDeviation.length}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{trials}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{numberOfTrials}{=}{trials}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{realFormat}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{realFormat}}{=}{realFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{imaginaryFormat}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{imaginaryFormat}}{=}{imaginaryFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{imaginaryCharacter}{==}{null}}{||}{{{imaginaryCharacter}{.}{length}{()}}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sd}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{standardDeviation}{=}{sd}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{scale}{=}{s}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sigma}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<=}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{p}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{p}{>}{NUMBER_CONSTANT}}{)}}{||}{{(}{{p}{<=}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{p}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{alpha}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{alpha}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{alpha}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{alpha}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{{obj1}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{SparseRealVector}}{{v1}{=}{{new}{{SparseRealVector}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{SparseRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{expected}{[}{i}{]}}{,}{{observed}{[}{i}{]}}{,}{tolerance}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{dimension}{=}{currentState.length}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dimension}{=}{currentState.length}}{;}}}
{AST_ROOT_SC2NF{{final}{{MultistepStepInterpolator}}{prototype}}}
{AST_ROOT_SC2NF{{{equations}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{equations}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{yDotK}{=}{null}}{;}}{{{equations}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{interpolator}{.}{reinitialize}{(}{{new}{{DummyEquations}}{()}}{,}{y}{,}{yDot}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{interpolator}{.}{reinitialize}{(}{{new}{{DummyEquations}}{()}}{,}{y}{,}{yDot}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{interpolator}{.}{reinitialize}{(}{{new}{{DummyEquations}}{()}}{,}{y}{,}{yDot}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{equations}{.}{computeDerivatives}{(}{{t0}{+}{h}}{,}{y1}{,}{yDot1}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{factors}}{=}{{new}{{DenseRealMatrix}}{(}{factors}{)}}}{;}}{{{{this}{.}{target}}{=}{target}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{factors}}{=}{{new}{{DenseRealMatrix}}{(}{factors}{)}}}{;}}{{{{this}{.}{target}}{=}{target}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{MatrixUtils}{.}{createColumnRealMatrix}{(}{col}{)}}{,}{{new}{{DenseRealMatrix}}{(}{colMatrix}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{MatrixUtils}{.}{createRowRealMatrix}{(}{row}{)}}{,}{{new}{{DenseRealMatrix}}{(}{rowMatrix}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{testData}{)}}{,}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{mA}{=}{{new}{{DenseRealMatrix}}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{result}{=}{{new}{{DenseRealMatrix}}{(}{dimension}{,}{dimension}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DenseRealMatrix}}{(}{matrixData}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{DenseRealMatrix}}{(}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DenseRealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{testData}{)}}}{;}}{{{assertEquals}{(}{m}{,}{{TestUtils}{.}{serializeAndRecover}{(}{m}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{{new}{{DenseRealMatrix}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{{new}{{DenseRealMatrix}}{(}{sub}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{DenseRealMatrix}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{new}{{DenseRealMatrix}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{factors}}{=}{{new}{{DenseRealMatrix}}{(}{factors}{)}}}{;}}{{{{this}{.}{target}}{=}{target}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeCorrelationMatrix}{(}{{new}{{DenseRealMatrix}}{(}{data}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{outMatrix}{=}{{new}{{DenseRealMatrix}}{(}{nVars}{,}{nVars}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeCorrelationMatrix}{(}{{new}{{DenseRealMatrix}}{(}{data}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{outMatrix}{=}{{new}{{DenseRealMatrix}}{(}{nVars}{,}{nVars}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DenseRealMatrix}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DenseRealMatrix}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{DenseRealMatrix}}{(}{data}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{DenseFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{computeCovarianceMatrix}{(}{{new}{{DenseRealMatrix}}{(}{data}{)}}{,}{biasCorrected}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{outMatrix}{=}{{new}{{DenseRealMatrix}}{(}{dimension}{,}{dimension}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{DenseRealMatrix}}{(}{data}{)}}{,}{biasCorrected}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setColumn}{(}{column}{,}{{{(}{{(}{{RealVectorImpl}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealVectorImpl}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setRow}{(}{row}{,}{{{(}{{(}{{RealVectorImpl}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealVectorImpl}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{RealVectorImpl}}{(}{{getColumn}{(}{column}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{RealVectorImpl}}{(}{{getRow}{(}{row}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{eigenvectors}{=}{{new}{{{RealVectorImpl}}{[}}{m}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVectorImpl}}{{v}{=}{{eigenvectors}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVectorImpl}}{{v}{=}{{eigenvectors}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{RealVectorImpl}}{[]}}{eigenvectors}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{RealMatrixImpl}}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Y}}{=}{{new}{{RealVectorImpl}}{(}{y}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealVectorImpl}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{m}{.}{setColumnVector}{(}{NUMBER_CONSTANT}{,}{{new}{{RealVectorImpl}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{RealVectorImpl}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{RealVectorImpl}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{RealVectorImpl}}{(}{argument}{)}}{)}{;}}{{{{this}{.}{argument}}{=}{{argument}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldVectorImpl}}{<}{{Fraction}}{>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{RealVectorImpl}}{(}{coefficients}{)}}{,}{constantTerm}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{coefficients}}{=}{{new}{{RealVectorImpl}}{(}{sub}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{RealVectorImpl}}{(}{coefficients}{)}}{,}{relationship}{,}{value}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{matrixData}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{repeatedColumns}{=}{{new}{{RealMatrixImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{RealVectorImplTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{tableau}}{=}{{new}{{RealMatrixImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{tableau}}{=}{{new}{{RealMatrixImpl}}{(}{{createTableau}{(}{{goalType}{==}{GoalType.MAXIMIZE}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{nordsieck}{=}{{new}{{RealMatrixImpl}}{(}{nData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setColumn}{(}{column}{,}{{{(}{{(}{{{FieldVectorImpl}}{<}{{T}}{>}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldVectorImpl}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setRow}{(}{row}{,}{{{(}{{(}{{{FieldVectorImpl}}{<}{{T}}{>}}{)}{vector}}{)}}{.}{getDataRef}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldVectorImpl}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealVectorImpl}}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{X}}{=}{{new}{{RealMatrixImpl}}{(}{x}{)}}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrixImpl}}{{augI}{=}{{new}{{RealMatrixImpl}}{(}{n}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldMatrixImpl}}{<}{{BigFraction}}{>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{bigMSupdate}{=}{{bigMStoN}{.}{multiply}{(}{{new}{{{FieldMatrixImpl}}{<}{{BigFraction}}{>}}{(}{shiftedP}{,}{false}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{coefficients.msToN}{.}{multiply}{(}{{new}{{RealMatrixImpl}}{(}{multistep}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{RealVectorImplTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{RealVectorImplTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{x}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{Omega}}{=}{{new}{{RealMatrixImpl}}{(}{omega}{)}}}{;}}{{{{this}{.}{OmegaInverse}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{FieldVectorImpl}}{<}{{T}}{>}}{(}{{getColumn}{(}{column}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{FieldVectorImpl}}{<}{{T}}{>}}{(}{{getRow}{(}{row}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealVectorImpl}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{RealVectorImpl}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{RealVectorImpl}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{lhs}{=}{{new}{{RealVectorImpl}}{(}{numCoefficients}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{matrix}{=}{{new}{{RealMatrixImpl}}{(}{data}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{vector}{=}{{new}{{RealVectorImpl}}{(}{data}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{getConvertedMatrix}{()}{{{}{{return}{{new}{{RealMatrixImpl}}{(}{data}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{getConvertedMatrix}{()}{{{}{{return}{{new}{{RealMatrixImpl}}{(}{data}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{FieldVectorImpl}}{<}{{T}}{>}}{(}{data}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{RealVectorImpl}}{(}{data}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{d}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{data}{)}}}
{AST_ROOT_SC2NF{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{field}{,}{rows}{,}{columns}{)}}}
{AST_ROOT_SC2NF{{{}{{{es}{.}{solve}{(}{{new}{{RealVectorImplTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{decompMatrix}{=}{{new}{{RealMatrixImpl}}{(}{decomp}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{triangularMatrix}{=}{{new}{{RealMatrixImpl}}{(}{lowerTriangularMatrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{triangularMatrix}{=}{{new}{{RealMatrixImpl}}{(}{lowerTriangularMatrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{{new}{{RealMatrixImpl}}{(}{m3}{)}}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{decompose}{(}{{new}{{RealMatrixImpl}}{(}{m7}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldVectorImpl}}{<}{{Fraction}}{>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{{FieldVectorImpl}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{{FieldVectorImpl}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{{FieldMatrixImpl}}{<}{{Fraction}}{>}}{(}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RealMatrixImpl}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{RealVectorImplTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{new}{{RealVectorImplTest.RealVectorTestImpl}}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldMatrixImpl}}{<}{{BigFraction}}{>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{bigMSupdate}{=}{{bigMStoN}{.}{multiply}{(}{{new}{{{FieldMatrixImpl}}{<}{{BigFraction}}{>}}{(}{shiftedP}{,}{false}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{coefficients.msToN}{.}{multiply}{(}{{new}{{RealMatrixImpl}}{(}{multistep}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{T}}{>}}{{identity}{=}{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{cachedP}{=}{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedU}{=}{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedL}{=}{{new}{{{FieldMatrixImpl}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{!=}{startConfiguration.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{,}{simplex.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Arrays}{.}{fill}{(}{corrected}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{.}{set}{(}{this}{,}{{NordsieckTransformer}{.}{getInstance}{(}{nSteps}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{{nSteps}{+}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{{nSteps}{+}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{nordsieck}}}
{AST_ROOT_SC2NF{{if}{(}{{interpolator.nordsieck}{!=}{null}}{)}{{{}{{{nordsieck}{=}{{interpolator.nordsieck}{.}{copy}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{nordsieck}{=}{{transformer}{.}{initializeHighOrderDerivatives}{(}{scaled}{,}{multistep}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblem1}}{{pb2}{=}{{(}{{TestProblem1}}{)}{{pb1}{.}{clone}{()}}}}{;}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{SparseFieldVector}}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{SparseFieldVector}}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{SparseFieldVector}}}}
{AST_ROOT_SC2NF{{v}{instanceof}{{SparseFieldVector}}}}
{AST_ROOT_SC2NF{{!}{{(}{{original}{instanceof}{{RandomKey}}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{another}{instanceof}{{RandomKey}}}{)}}}{)}{{return}{false}{;}}}}
{AST_ROOT_SC2NF{{{}{{{addMeasurement}{(}{{new}{{LocalMeasurement}}{(}{x}{,}{y}{,}{w}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{measurements}{[}{i}{]}}{=}{{new}{{MinpackMeasurement}}{(}{i}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{v}}}
{AST_ROOT_SC2NF{{{Object}}{v}}}
{AST_ROOT_SC2NF{{{Object}}{v}}}
{AST_ROOT_SC2NF{{final}{long}{{curN}{=}{{current}{.}{getN}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StatisticalSummaryValues}}{observed}}}
{AST_ROOT_SC2NF{{{StatisticalSummaryValues}}{{aggregatedStats}{=}{{AggregateSummaryStatistics}{.}{aggregate}{(}{aggregate}{)}}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setConvergenceChecker}{(}{{new}{{SimpleScalarValueChecker}}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setConvergenceChecker}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{DescriptiveStatistics}}{{dstat}{=}{{new}{{DescriptiveStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{new}{{DescriptiveStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{new}{{DescriptiveStatistics}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{new}{{MultivariateSummaryStatistics}}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{new}{{MultivariateSummaryStatistics}}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{new}{{MultivariateSummaryStatistics}}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{new}{{MultivariateSummaryStatistics}}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{new}{{MultivariateSummaryStatistics}}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateSummaryStatistics}}{{u}{=}{{new}{{MultivariateSummaryStatistics}}{(}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m}{,}{startParams}{,}{theoreticalMinCost}{,}{theoreticalMinParams}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{OpenMapRealVector}}{{res}{=}{{(}{{OpenMapRealVector}}{)}{{copy}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{OpenMapRealVector}}{{res}{=}{{(}{{OpenMapRealVector}}{)}{{copy}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{constraints}}{=}{constraints}}{;}}}
{AST_ROOT_SC2NF{{return}{{factorials}{[}{n}{]}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{ThreeEighthesStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{EulerStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{DummyStepHandler}}{getInstance}{()}{{{}{{return}{instance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{MidpointStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{percentile}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{,}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{percentile}{.}{evaluate}{(}{values}{,}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{min}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{min}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{max}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{max}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{variance}{.}{evaluate}{(}{values}{,}{mean}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{variance}{.}{evaluate}{(}{values}{,}{mean}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{variance}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{variance}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geometricMean}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geometricMean}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mean}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mean}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{prod}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{prod}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{ClassicalRungeKuttaStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{{Object}}{[]}{[]}}{getContents}{()}{{{}{{return}{{contents}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{c}{,}{a}{,}{b}{,}{{new}{{GillStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{alg}{=}{{MessageDigest}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}{}}}{{catch}{(}{{{NoSuchAlgorithmException}}{ex}}{)}{{{}{{return}{null}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{row}{*}{columnDimension}}{+}{column}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getRowDimension}{()}{{{}{{return}{rowDimension}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getColumnDimension}{()}{{{}{{return}{columnDimension}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{row}{*}{columnDimension}}{+}{column}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getRowDimension}{()}{{{}{{return}{rowDimension}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getColumnDimension}{()}{{{}{{return}{columnDimension}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{f}{,}{constraints}{,}{goalType}{,}{restrictToNonNegative}{,}{epsilon}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{beta}{)}}{;}}{}}}}{{{{this}{.}{beta}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{)}}{;}}{}}}}{{{{this}{.}{alpha}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{residual}{=}{{residuals}{[}{i}{]}}}{;}}{{{chiSquare}{+=}{{{residual}{*}{residual}}{/}{{weights}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{residual}{=}{{residuals}{[}{i}{]}}}{;}}{{{criterion}{+=}{{{weights}{[}{i}{]}}{*}{residual}{*}{residual}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{factor}{=}{{-}{{Math}{.}{sqrt}{(}{{weights}{[}{i}{]}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MathException}}{(}{e}{,}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{UnivariateMatrixFunction}}{derivative}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{UnivariateRealFunction}}{derivative}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getMean}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getExponent}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getNumberOfElements}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isNaN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{UnivariateVectorialFunction}}{derivative}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{long}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{fitness}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getSampleSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getPopulationSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getNumberOfSuccesses}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{double}{getSum}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{long}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{double}{getMin}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{double}{getMax}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getCurrentTime}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getPreviousTime}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{void}{resetRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{double}{getRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{void}{resetAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{double}{getAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getMaximalIterationCount}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{DummyStepHandler}}{getInstance}{()}{{{}{{return}{INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{randomData}}{=}{randomData}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{generator}}}
{AST_ROOT_SC2NF{{return}{{(}{{{anovaPValue}{(}{categoryData}{)}}{<}{alpha}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{internalArray}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{internalArray}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{synchronized}{int}{getInternalLength}{()}{{{}{{return}{{(}{internalArray.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{dx}{=}{{(}{{x2}{-}{x1}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{isForward}{)}}{?}{{omegaImaginaryForward}{[}{k}{]}}{:}{{omegaImaginaryInverse}{[}{k}{]}}}{;}}}
{AST_ROOT_SC2NF{{{isForward}{=}{{(}{{n}{>}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{stdDev}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{(}{{{tTest}{(}{sampleStats1}{,}{sampleStats2}{)}}{<}{alpha}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{(}{{{homoscedasticTTest}{(}{sample1}{,}{sample2}{)}}{<}{alpha}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{(}{{{tTest}{(}{sample1}{,}{sample2}{)}}{<}{alpha}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{(}{{{tTest}{(}{mu}{,}{sampleStats}{)}}{<}{alpha}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{(}{{{tTest}{(}{mu}{,}{sample}{)}}{<}{alpha}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkSignificanceLevel}{(}{alpha}{)}}{;}}{{return}{{(}{{{pairedTTest}{(}{sample1}{,}{sample2}{)}}{<}{alpha}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSquare}{()}{{{}{{return}{{(}{{{getColumnDimension}{()}}{==}{{getRowDimension}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{g0Positive}{=}{{(}{{g0}{>=}{NUMBER_CONSTANT}}{)}}}{;}}{{{nextAction}{=}{EventHandler.CONTINUE}}{;}}{}}}}
{AST_ROOT_SC2NF{{{increasing}{=}{{(}{{gb}{>=}{ga}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{t0}{=}{tStart}}{;}}{{{g0}{=}{{handler}{.}{g}{(}{tStart}{,}{yStart}{)}}}{;}}{{{g0Positive}{=}{{(}{{g0}{>=}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{(}{{t}{>}{t0}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{(}{{t}{>}{t0}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sum}{+=}{{(}{{{values}{[}{i}{]}}{*}{{weights}{[}{i}{]}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{(}{{t}{>}{t0}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{o1}{.}{compareTo}{(}{{(}{{T}}{)}{o2}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{chiSquareTestDataSetsComparison}{(}{observed1}{,}{observed2}{)}}{<}{alpha}}{)}}{;}}}
{AST_ROOT_SC2NF{{{unequalCounts}{=}{{(}{{countSum1}{!=}{countSum2}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{chiSquareTest}{(}{counts}{)}}{<}{alpha}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{chiSquareTest}{(}{expected}{,}{observed}{)}}{<}{alpha}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{stdDev}{)}}{;}}}
{AST_ROOT_SC2NF{{i}{<}{{this}{.}{getRowDimension}{()}}}}
{AST_ROOT_SC2NF{{{}{{{correction}{+=}{{(}{{{values}{[}{i}{]}}{-}{xbar}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSquare}{()}{{{}{{return}{{(}{{{getColumnDimension}{()}}{==}{{getRowDimension}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{super}{.}{equals}{(}{stat}{)}}{&&}{{aggregateStatistics}{.}{equals}{(}{stat.aggregateStatistics}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{(}{{t}{>}{t0}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{forward}{=}{{(}{{{interpolator}{.}{getCurrentTime}{()}}{>=}{lastTime}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{forward}{=}{{(}{{t}{>}{t0}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{N1}{=}{{new}{{Complex}}{(}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{solution}{.}{getValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{solution}{.}{getValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{solution}{.}{getValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{while}{(}{{!}{{isOptimal}{(}{tableau}{)}}}{)}{{{}{{{doIteration}{(}{tableau}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{!}{{isPhase1Solved}{(}{tableau}{)}}}{)}{{{}{{{doIteration}{(}{tableau}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Integer}}{{pivotRow}{=}{{getPivotRow}{(}{pivotCol}{,}{tableau}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tableau}{.}{discardArtificialVariables}{()}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fitResidualSum}{<}{noisyResidualSum}}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{bounds}{=}{{empiricalDistribution2}{.}{getUpperBounds}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{{xval}{[}{NUMBER_CONSTANT}{]}}{==}{null}}}{)}{{{}{{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{microsphereElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{microsphereElements}{)}}{;}}{}}}}{{{{this}{.}{microsphereElements}}{=}{microsphereElements}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{brightnessExponent}{<}{NUMBER_CONSTANT}}{)}{{{}{{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{brightnessExponent}{)}}{;}}{}}}}{{{{this}{.}{brightnessExponent}}{=}{brightnessExponent}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{{buildMessage}{(}{Locale.US}{,}{pattern}{,}{arguments}{)}}{,}{rootCause}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{buildMessage}{(}{Locale.US}{,}{pattern}{,}{arguments}{)}}{,}{rootCause}{)}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Math}{.}{sqrt}{(}{{NUMBER_CONSTANT}{*}{Math.PI}{*}{x}}{)}}}
{AST_ROOT_SC2NF{{double}{{f}{=}{{{(}{{PI_2}{*}{x}{*}{{(}{{n}{-}{x}}{)}}}{)}}{/}{n}}}{;}}}
{AST_ROOT_SC2NF{{double}{{d}{=}{{(}{{x}{-}{mu}}{)}}}{;}}}
{AST_ROOT_SC2NF{{flipIfWarranted}{(}{deflatedEnd}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{flipIfWarranted}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{numerator}{,}{denominator}{)}}{;}}{}}}}{{return}{{new}{{Fraction}}{(}{{-}{numerator}}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{fraction.numerator}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{multiply}{(}{{fraction}{.}{reciprocal}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{bg}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{den}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{negativeVarColumn}{=}{{columnLabels}{.}{indexOf}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{restrictToNonNegative}}{)}{{{}{{{columnLabels}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{denominatorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{numeratorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{ArrayRealVector}}{(}{argument}{)}}{)}{;}}{{{{this}{.}{argument}}{=}{{argument}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{argument}{)}{;}}{{{{this}{.}{argument}}{=}{{new}{{double}{[]}}{{{}{argument}{}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{!=}{startConfiguration.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{,}{startConfiguration.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{steps}{[}{j}{]}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{j}{,}{{j}{+}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{f}{instanceof}{{PolynomialFunction}}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{instanceof}{{PolynomialFunction}}}{)}{{{}{{{p}{=}{{(}{{PolynomialFunction}}{)}{f}}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{function}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{isForward}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{o.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{o.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{d.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{d.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{int}{{value}{=}{{(}{{Integer}}{)}{{decoded}{.}{get}{(}{i}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{mapDivide}{(}{{getNorm}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{ArrayRealVector}{(}{{{ArrayRealVector}}{v}}{)}{{{}{{{data}{=}{{v.data}{.}{clone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isZero}{(}{norm}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{isZero}{(}{value}{)}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{values}{,}{DEFAULT_ZERO_TOLERANCE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{OpenMapRealVector}{(}{{int}{dimension}}{)}{{{}{{this}{(}{dimension}{,}{DEFAULT_ZERO_TOLERANCE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{NUMBER_CONSTANT}{,}{DEFAULT_ZERO_TOLERANCE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setEntry}{(}{{int}{index}}{,}{{double}{value}}{)}{throws}{{MatrixIndexException}}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.ULP}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.TANH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.TAN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.SQRT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.SINH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.SIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.SIGNUM}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.RINT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.ASIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.LOG10}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.LOG}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.FLOOR}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.EXP1M}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.EXP}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.COSH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.COS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.CEIL}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.CBRT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.ATAN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.ASIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.ACOS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{UnivariateRealFunctions.ABS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ASIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{setDefault}{(}{NUMBER_CONSTANT}{,}{DEFAULT_ZERO_TOLERANCE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{values}{,}{DEFAULT_ZERO_TOLERANCE}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{setDefault}{(}{NUMBER_CONSTANT}{,}{epsilon}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{OpenMapRealVector}{(}{{int}{dimension}}{)}{{{}{{this}{(}{dimension}{,}{DEFAULT_ZERO_TOLERANCE}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{NUMBER_CONSTANT}{,}{DEFAULT_ZERO_TOLERANCE}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{BigReal}}{(}{{d}{.}{divide}{(}{a.d}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{lcm}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Solver}}{(}{singularValues}{,}{{getUT}{()}}{,}{{getV}{()}}{,}{{{getRank}{()}}{==}{singularValues.length}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{unitize}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{unitVector}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{mapCoshToSelf}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getLInfNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getL1Norm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{dest.n}{=}{source.n}}{;}}{{{dest.m1}{=}{source.m1}}{;}}{{{dest.dev}{=}{source.dev}}{;}}{{{dest.nDev}{=}{dest.nDev}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{LoessInterpolator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{LoessInterpolator}}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{min}{,}{max}{,}{yMin}{,}{yMax}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{{es}{.}{solve}{(}{b}{)}}{.}{subtract}{(}{xRef}{)}}{.}{getNorm}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{yTmp}{,}{forward}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{interpolator}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{}}}}
{AST_ROOT_SC2NF{{public}{BadStepInterpolator}{(}{{{double}{[]}}{y}}{,}{{boolean}{forward}}{)}{{{}{{super}{(}{y}{,}{forward}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DummyStepInterpolator}}{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{y}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{yTmp}{,}{forward}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{interpolator}{=}{{new}{{DummyStepInterpolator}}{(}{y}{,}{forward}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{handler}{.}{handleStep}{(}{{new}{{StepInterpolatorWrapper}}{(}{interpolator}{,}{{ode}{.}{getDimension}{()}}{,}{{ode}{.}{getParametersDimension}{()}}{)}}{,}{isLast}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{ParameterizedODEWithJacobians}}{ode}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setMean}{(}{mean}{)}}{;}}{{{setStandardDeviation}{(}{sd}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setTolerance}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{f}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{{getMean}{()}}{;}}{}}}{else}{{{}{{return}{Double.MAX_VALUE}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{{-}{{getMean}{()}}}{*}{{Math}{.}{log}{(}{{NUMBER_CONSTANT}{-}{p}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{Math}{.}{exp}{(}{{{-}{x}}{/}{{getMean}{()}}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ExponentialDistributionImpl}{(}{{double}{mean}}{)}{{{}{``;}}{super}{{{setMean}{(}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getUpperDomain}{(}{{getSampleSize}{()}}{,}{{getNumberOfSuccesses}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getLowerDomain}{(}{{getPopulationSize}{()}}{,}{{getNumberOfSuccesses}{()}}{,}{{getSampleSize}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{Beta}{.}{regularizedBeta}{(}{{getProbabilityOfSuccess}{()}}{,}{{getNumberOfSuccesses}{()}}{,}{{x}{+}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setNumberOfSuccesses}{(}{r}{)}}{;}}{{{setProbabilityOfSuccess}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{{getAlpha}{()}}{*}{{getBeta}{()}}}}{;}}{}}}{else}{{{}{{{ret}{=}{Double.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{Gamma}{.}{regularizedGammaP}{(}{{getAlpha}{()}}{,}{{x}{/}{{getBeta}{()}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setAlpha}{(}{alpha}{)}}{;}}{{{setBeta}{(}{beta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{Math}{.}{exp}{(}{{-}{{Math}{.}{pow}{(}{{x}{/}{{getScale}{()}}}{,}{{getShape}{()}}{)}}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setShape}{(}{alpha}{)}}{;}}{{{setScale}{(}{beta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TDistributionImpl}{(}{{double}{degreesOfFreedom}}{)}{{{}{``;}}{super}{{{setDegreesOfFreedom}{(}{degreesOfFreedom}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Double.MIN_VALUE}{*}{{{getGamma}{()}}{.}{getBeta}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getGamma}{()}}{.}{cumulativeProbability}{(}{x}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<=}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{if}{(}{{x}{>=}{{getNumberOfElements}{()}}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{<=}{NUMBER_CONSTANT}}{||}{{x}{>}{{getNumberOfElements}{()}}}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setNumberOfElements}{(}{numberOfElements}{)}}{;}}{{{setExponent}{(}{exponent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{d}{=}{{getDenominatorDegreesOfFreedom}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setNumeratorDegreesOfFreedom}{(}{numeratorDegreesOfFreedom}{)}}{;}}{{{setDenominatorDegreesOfFreedom}{(}{denominatorDegreesOfFreedom}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{x}{<}{NUMBER_CONSTANT}}{||}{{x}{>}{{getNumberOfTrials}{()}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getNumberOfTrials}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setNumberOfTrials}{(}{trials}{)}}{;}}{{{setProbabilityOfSuccess}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{getMean}{()}}}{;}}{}}}{else}{{{}{{{ret}{=}{Double.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{-}{Double.MAX_VALUE}}}{;}}{}}}{else}{{{}{{{ret}{=}{{getMean}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{getMedian}{()}}}{;}}{}}}{else}{{{}{{{ret}{=}{Double.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{-}{Double.MAX_VALUE}}}{;}}{}}}{else}{{{}{{{ret}{=}{{getMedian}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setMedian}{(}{median}{)}}{;}}{{{setScale}{(}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{LaguerreSolver}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setDistribution}{(}{{{ContinuousDistribution}}{distribution}}{)}{{{}{{{{this}{.}{distribution}}{=}{distribution}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TDistributionImpl}{(}{{double}{degreesOfFreedom}}{)}{{{}{``;}}{super}{{{setDegreesOfFreedomInternal}{(}{degreesOfFreedom}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setNumeratorDegreesOfFreedomInternal}{(}{numeratorDegreesOfFreedom}{)}}{;}}{{{setDenominatorDegreesOfFreedomInternal}{(}{denominatorDegreesOfFreedom}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setShapeInternal}{(}{alpha}{)}}{;}}{{{setScaleInternal}{(}{beta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setAlphaInternal}{(}{alpha}{)}}{;}}{{{setBetaInternal}{(}{beta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ExponentialDistributionImpl}{(}{{double}{mean}}{)}{{{}{``;}}{super}{{{setMeanInternal}{(}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setMedianInternal}{(}{median}{)}}{;}}{{{setScaleInternal}{(}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{row}{=}{{aInv}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{p}{=}{{interpolator}{.}{interpolate}{(}{xval}{,}{wyval}{,}{zval}{)}}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{length}{=}{{eliminateZeroMassPoints}{(}{densityPoints}{,}{densityValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ak2}{==}{NUMBER_CONSTANT}}{)}{{{}{{{rank}{=}{k}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ak2}{<}{NUMBER_CONSTANT}}{)}{{{}{{{rank}{=}{k}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ak2}{==}{NUMBER_CONSTANT}}{)}{{{}{{{rank}{=}{k}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{MathUtils}{.}{equals}{(}{Double.NaN}{,}{Double.NaN}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{residuals.length}{!=}{observations.length}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{point}{,}{STRING_CONSTANT}{,}{residuals.length}{,}{observations.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations.length}{!=}{{scale}{.}{getColumnDimension}{()}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{observations.length}{,}{{scale}{.}{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations.length}{!=}{weights.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{observations.length}{,}{weights.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{dimension}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{minSingularValue}{,}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DuplicateSampleAbscissaException}}{e}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{e}{,}{z}{,}{{e}{.}{getPattern}{()}}{,}{{e}{.}{getArguments}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{fval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{value}{,}{p}{,}{q}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{value}{,}{maxIterations}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wholeFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{specifier}}}
{AST_ROOT_SC2NF{{if}{(}{{{sampleStats}{.}{getN}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createEOFException}{(}{STRING_CONSTANT}{,}{url}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{r}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{r}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{b.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{{getColumnDimension}{()}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{zval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{optima}{[}{NUMBER_CONSTANT}{]}}{==}{null}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{fval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{pattern}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{specifier}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newDegreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{newDegreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{degreesOfFreedom}}{=}{newDegreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sampleSize}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MathRuntimeException}}{(}{{new}{{UnsupportedOperationException}}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{successes}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{successes}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{successes}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{beta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{beta}{)}}{;}}{}}}}{{{{this}{.}{scale}}{=}{beta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{)}}{;}}{}}}}{{{{this}{.}{shape}}{=}{alpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getZ}{()}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{observations.length}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{e}{.}{compareTo}{(}{BigInteger.ZERO}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{k}{,}{e}{)}}{;}}{}}}}{{return}{{k}{.}{pow}{(}{e}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{e}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{k}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lcm}{==}{Long.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{a}{,}{b}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lcm}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{a}{,}{b}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREE_MESSAGE}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREE_MESSAGE}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{f}{instanceof}{{PolynomialFunction}}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POLYNOMIAL_FUNCTION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{instanceof}{{PolynomialFunction}}}{)}{{{}{{{p}{=}{{(}{{PolynomialFunction}}{)}{f}}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POLYNOMIAL_FUNCTION_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{nRows}{<}{NUMBER_CONSTANT}}{||}{{nCols}{<}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{nRows}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{covarianceMatrix}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{offset}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{EventException}}{(}{STRING_CONSTANT}{,}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{DerivativeException}}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{{c1}{/}{c2}}{<}{NUMBER_CONSTANT}}{)}}{||}{{(}{{{c2}{/}{c3}}{<}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{FAILED_EVALUATION_MESSAGE}{,}{{new}{{ArrayRealVector}}{(}{argument}{)}}{)}{;}}{{{{this}{.}{argument}}{=}{{argument}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{FAILED_EVALUATION_MESSAGE}{,}{argument}{)}{;}}{{{{this}{.}{argument}}{=}{{new}{{double}{[]}}{{{}{argument}{}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{,}{pattern}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{pattern}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{target.length}{!=}{weights.length}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{target.length}{,}{weights.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rows}{<=}{cols}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{rows}{,}{cols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{objective.length}{!=}{rows}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{point}{,}{STRING_CONSTANT}{,}{objective.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{jacobian.length}{!=}{rows}}{)}{{{}{{throw}{{new}{{FunctionEvaluationException}}{(}{point}{,}{STRING_CONSTANT}{,}{jacobian.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{data.length}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{data.length}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{abscissa}{,}{i1}{,}{i2}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{optima}{[}{NUMBER_CONSTANT}{]}}{==}{null}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{nRows}{<}{NUMBER_CONSTANT}}{||}{{nCols}{<}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{nRows}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{d}{=}{{getDimension}{()}}}{;}}{{if}{(}{{d}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{d}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{pattern}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{(}{{minimalIterationCount}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{maximalIterationCount}{<=}{minimalIterationCount}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{minimalIterationCount}{,}{maximalIterationCount}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{resultComputed}{)}{{{}{{return}{result}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IntegratorException}}{(}{STRING_CONSTANT}{,}{minStep}{,}{{Math}{.}{abs}{(}{h}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EMPTY_ARRAY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EMPTY_ARRAY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EMPTY_ARRAY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{data.length}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{data.length}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_FITTING_POSITION_AND_SIZE_MESSAGE}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{<}{{pos}{+}{size}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_FITTING_POSITION_AND_SIZE_MESSAGE}{,}{pos}{,}{size}{,}{d.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{verifyIterationCount}{()}}{;}}{{if}{(}{{maximalIterationCount}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_BRACKETING_MESSAGE}{,}{min}{,}{max}{,}{yMin}{,}{yMax}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newMean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{newMean}{)}}{;}}{}}}}{{{{this}{.}{mean}}{=}{newMean}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isDefaultValue}{(}{norm}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{p}{<=}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{)}}{;}}{}}}}{{{quantile}{=}{p}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{p}{>}{NUMBER_CONSTANT}}{)}}{||}{{(}{{p}{<=}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getDimension}{()}}{!=}{n}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{getDimension}{()}}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{MISSING_ROOTS_OF_UNITY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{MISSING_ROOTS_OF_UNITY_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{omegaCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{MISSING_ROOTS_OF_UNITY_MESSAGE}{)}}{;}}{}}}}{{return}{isForward}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{o.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NOT_POWER_OF_TWO_MESSAGE}{,}{o.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{d.length}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NOT_POWER_OF_TWO_MESSAGE}{,}{d.length}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{verifyIterationCount}{()}}{;}}{{if}{(}{{maximalIterationCount}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{s}{)}}{;}}{}}}}{{{{this}{.}{exponent}}{=}{s}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}{{{{this}{.}{numberOfElements}}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{initialCapacity}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{expansionMode}{!=}{MULTIPLICATIVE_MODE}}{&&}{{expansionMode}{!=}{ADDITIVE_MODE}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{expansionMode}{,}{MULTIPLICATIVE_MODE}{,}{STRING_CONSTANT}{,}{ADDITIVE_MODE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArrayIndexOutOfBoundsException}{(}{STRING_CONSTANT}{,}{index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expansion}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{expansion}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{numElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArrayIndexOutOfBoundsException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{numeratorFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{denominatorFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{nSteps}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{isInfinite}{(}{norm2}{)}}{||}{{Double}{.}{isNaN}{(}{norm2}{)}}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{rows}{,}{cols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CardanEulerSingularityException}{(}{{boolean}{isCardan}}{)}{{{}{{super}{(}{{isCardan}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{arrayDimension}{!=}{expected}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{arrayDimension}{,}{expected}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{!=}{startConfiguration.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{DIMENSION_MISMATCH_MESSAGE}{,}{n}{,}{startConfiguration.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{steps}{[}{j}{]}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{EQUAL_VERTICES_MESSAGE}{,}{j}{,}{{j}{+}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{microsphereElements}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{microsphereElements}{)}}{;}}{}}}}{{{{this}{.}{microsphereElements}}{=}{elements}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{brightnessExponent}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{brightnessExponent}{)}}{;}}{}}}}{{{{this}{.}{brightnessExponent}}{=}{brightnessExponent}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{nRows}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{nCols}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sigma}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{sigma}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{mean}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{len}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{upper}{,}{lower}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{len}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Double}{.}{isInfinite}{(}{norm2}{)}}{||}{{Double}{.}{isNaN}{(}{norm2}{)}}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{rows}{,}{cols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sd}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{sd}{)}}{;}}{}}}}{{{standardDeviation}{=}{sd}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{str}{=}{{filePointer}{.}{readLine}{()}}}{)}}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createEOFException}{(}{STRING_CONSTANT}{,}{valuesFileURL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{empiricalDistribution}{==}{null}}{)}}{||}{{(}{{{{empiricalDistribution}{.}{getBinStats}{()}}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newBeta}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{newBeta}{)}}{;}}{}}}}{{{{this}{.}{beta}}{=}{newBeta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newAlpha}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{newAlpha}{)}}{;}}{}}}}{{{{this}{.}{alpha}}{=}{newAlpha}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{denominatorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{degreesOfFreedom}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE}{,}{degreesOfFreedom}{)}}{;}}{}}}}{{{{this}{.}{numeratorDegreesOfFreedom}}{=}{degreesOfFreedom}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{,}{{getN}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{verifyIterationCount}{()}}{;}}{{if}{(}{{maximalIterationCount}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{f.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{size}{)}}{;}}{}}}}{{{sampleSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{size}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{size}{)}}{;}}{}}}}{{{populationSize}{=}{size}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{num}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{num}{)}}{;}}{}}}}{{{numberOfSuccesses}{=}{num}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{pattern}}}
{AST_ROOT_SC2NF{{if}{(}{{xval.length}{!=}{yval.length}}{)}{{{}{{throw}{{new}{{MathException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{xval.length}{,}{yval.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{s}{)}}{;}}{}}}}{{{scale}{=}{s}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{optima}{[}{NUMBER_CONSTANT}{]}}{==}{null}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{pattern}}}
{AST_ROOT_SC2NF{{{String}}{pattern}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{cce}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{vector}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{vector}{.}{getDimension}{()}}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{d.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{{d}{[}{NUMBER_CONSTANT}{]}}{.}{getField}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTHS_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{NO_ENTRY_MESSAGE}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{NotARotationMatrixException}}{(}{STRING_CONSTANT}{,}{{i}{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{norm}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{fraction.numerator}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{FORBIDDEN_ZERO_DENOMINATOR}{)}}{;}}{}}}}{{return}{{multiply}{(}{{fraction}{.}{reciprocal}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{BigInteger.ZERO}{.}{equals}{(}{bg}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{FORBIDDEN_ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{y0}{*}{y1}}{>=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{min}{,}{max}{,}{y0}{,}{y1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{incrementAll}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{format}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wholeFormat}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{dimension1}{,}{dimension2}{)}{;}}{{{{this}{.}{dimension1}}{=}{dimension1}}{;}}{{{{this}{.}{dimension2}}{=}{dimension2}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NULL_FUNCTION_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{trials}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{trials}{)}}{;}}{}}}}{{{numberOfTrials}{=}{trials}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isSequence}{(}{lower}{,}{initial}{,}{upper}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{lower}{,}{initial}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{resultComputed}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{f}{[}{NUMBER_CONSTANT}{]}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{f}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{realFormat}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{realFormat}}{=}{realFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{imaginaryFormat}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{imaginaryFormat}}{=}{imaginaryFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{imaginaryCharacter}{==}{null}}{||}{{{imaginaryCharacter}{.}{length}{()}}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{OVERFLOW_MESSAGE}{,}{numerator}{,}{denominator}{)}}{;}}{}}}}{{return}{{new}{{Fraction}}{(}{{-}{numerator}}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{rows}{,}{columns}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{specifier}}}
{AST_ROOT_SC2NF{{if}{(}{{m}{<=}{p}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{m}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{++}{costEvaluations}}{>}{maxCostEval}}{)}{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{maxCostEval}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{in}{[}{i}{]}}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{i}{,}{{in}{[}{i}{]}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{in}{[}{i}{]}}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{i}{,}{{in}{[}{i}{]}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{alpha}{<=}{NUMBER_CONSTANT}}{)}}{||}{{(}{{alpha}{>}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{obj}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Double}{.}{isNaN}{(}{{optima}{[}{NUMBER_CONSTANT}{]}}{)}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{,}{starts}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optimaValues}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optimaValues}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{optima}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{optima}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArrayIndexOutOfBoundsException}}{e}}{)}{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{column}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nRows}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{array.length}{!=}{nCols}}{)}{{{}{{throw}{{new}{{InvalidMatrixException}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{array.length}{,}{NUMBER_CONSTANT}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{getDimension}{()}}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTH_MISMATCH_MESSAGE}{,}{{b}{.}{getDimension}{()}}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{b.length}{!=}{m}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{VECTOR_LENGTH_MISMATCH_MESSAGE}{,}{b.length}{,}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{{xval}{[}{NUMBER_CONSTANT}{]}}{==}{null}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{sampleSize}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{OUT_OF_RANGE_POINT}{,}{p}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{WRONG_ORDER_ENDPOINTS_MESSAGE}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x0}{>}{x1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{WRONG_ORDER_ENDPOINTS_MESSAGE}{,}{x0}{,}{x1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalAccessException}}{e2}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{ILLEGAL_ACCESS_MESSAGE}{,}{SET_QUANTILE_METHOD_NAME}{,}{{{percentileImpl}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{windowSize}{<}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{windowSize}{!=}{INFINITE_WINDOW}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{windowSize}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean.length}{!=}{standardDeviation.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{mean.length}{,}{standardDeviation.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{,}{i}{,}{k}{,}{{x}{[}{i}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{{STRING_CONSTANT}{+}{{{original}{.}{getClass}{()}}{.}{getSimpleName}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{n}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{sum}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{lower}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{OUT_OF_RANGE_ROOT_INDEX_MESSAGE}{,}{k}{,}{NUMBER_CONSTANT}{,}{{omegaCount}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{OUT_OF_RANGE_ROOT_INDEX_MESSAGE}{,}{k}{,}{NUMBER_CONSTANT}{,}{{omegaCount}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{lower}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{STRING_CONSTANT}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{STRING_CONSTANT}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{STRING_CONSTANT}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{lower}{>=}{upper}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{lower}{,}{upper}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{STRING_CONSTANT}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{e1}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{STRING_CONSTANT}{,}{{{percentileImpl}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parsePosition}{.}{getIndex}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createParseException}{(}{{parsePosition}{.}{getErrorIndex}{()}}{,}{STRING_CONSTANT}{,}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NotStrictlyPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{LocalizedFormats.NOT_STRICTLY_POSITIVE}{,}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NotPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{LocalizedFormats.NOT_POSITIVE}{,}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{xval.length}{==}{NUMBER_CONSTANT}}{||}{{yval.length}{==}{NUMBER_CONSTANT}}}{||}{{fval.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NO_DATA}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{x.length}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{x.length}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mean.length}{!=}{standardDeviation.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{mean.length}{,}{standardDeviation.length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_UPPER_BOUND}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{value}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{point}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{point}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{scale}{=}{{new}{{double}{[}}{y0.length}{]}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{ise}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{LocalizedFormats.NO_DATA}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{a}{[}{i}{]}}{[}{j}{]}}{[}{k}{]}}{=}{{aV}{[}{{{i}{+}{{N}{*}{j}}}{+}{{N2}{*}{k}}}{]}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{==}{null}}{?}{null}{:}{{value}{.}{clone}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{point}{==}{null}}{?}{null}{:}{{point}{.}{clone}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{{(}{{boundIsAllowed}{?}{LocalizedFormats.NUMBER_TOO_SMALL}{:}{LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED}}{)}}{,}{wrong}{,}{min}{)}{;}}}
{AST_ROOT_SC2NF{{{startConfiguration}{==}{null}}{||}{{startConfiguration.length}{!=}{startPoint.length}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{point}{==}{null}}{?}{null}{:}{{point}{.}{clone}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{GoalType}}{getGoalType}{()}{{{}{{return}{goal}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{column}{,}{NUMBER_CONSTANT}{,}{{{getColumnDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{row}{,}{NUMBER_CONSTANT}{,}{{{getRowDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{index}{,}{NUMBER_CONSTANT}{,}{{{getDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{index}{,}{NUMBER_CONSTANT}{,}{{{getDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MatrixIndexException}}{(}{STRING_CONSTANT}{,}{index}{,}{NUMBER_CONSTANT}{,}{{{getDimension}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{remove}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{{nSteps}{+}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{{nSteps}{+}{NUMBER_CONSTANT}}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{nSteps}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{nSteps}{,}{nSteps}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{populationLimit}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{addAndCheck}{(}{a}{,}{{-}{b}}{,}{msg}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{s}{<}{Integer.MIN_VALUE}}{||}{{s}{>}{Integer.MAX_VALUE}}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{addAndCheck}{(}{a}{,}{b}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{s}{<}{Integer.MIN_VALUE}}{||}{{s}{>}{Integer.MAX_VALUE}}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArithmeticException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkOrder}{(}{val}{,}{Order.Direction.INCREASING}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{wrong}{,}{previous}{,}{index}{,}{MathUtils.Order.Direction.INCREASING}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{e}{[}{{i}{+}{NUMBER_CONSTANT}}{]}}{==}{NUMBER_CONSTANT}}{&&}{{i}{>=}{j}}}{)}{continue;}}}
{AST_ROOT_SC2NF{{{arguments}{=}{{{flatten}{(}{args}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{remove}{()}{{{}{{throw}{{MathRuntimeException}{.}{createUnsupportedOperationException}{(}{LocalizedFormats.UNSUPPORTED_OPERATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idxStep}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroNotAllowedException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idxStep}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroNotAllowedException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{observations}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{d}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroNotAllowedException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{d}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ZeroNotAllowedException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{fraction}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FRACTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ZeroNotAllowedException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{xArray.length}{,}{yArray.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{covarianceMatrix}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_COVARIANCE_MATRIX}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{f}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FUNCTION}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{function}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_FUNCTION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{{incrementAll}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{values}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NULL_INPUT_ARRAY}{)}}{;}}{}}}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{grad}{=}{{jacobian}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cause}{,}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{argument}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cause}{,}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{argument}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{argument}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{argument}{,}{{new}{{DummyLocalizable}}{(}{pattern}{)}}{,}{argument}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{step}{*=}{{Math}{.}{max}{(}{NUMBER_CONSTANT}{,}{{yA}{/}{yB}}{)}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{{sum}{/}{v.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{sqrt}{(}{{{getChiSquare}{()}}{/}{rows}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{wi}{=}{{Math}{.}{sqrt}{(}{{residualsWeights}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{h}}{=}{{Math}{.}{abs}{(}{h}{)}}}{;}}{{{{this}{.}{handler}}{=}{handler}}{;}}{{{reset}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{invR3}{=}{{NUMBER_CONSTANT}{/}{{(}{{r2}{*}{{Math}{.}{sqrt}{(}{r2}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{sum2}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{Math}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{Math}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{{Math}{.}{abs}{(}{{rValues}{.}{getEntry}{(}{i}{,}{j}{)}}{)}}{/}{{stdErrors}{.}{getEntry}{(}{i}{,}{j}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{n}{+}{STRING_CONSTANT}{+}{degree}{+}{STRING_CONSTANT}{+}{i}}{,}{reference}{,}{result}{,}{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{+}{{Math}{.}{abs}{(}{reference}{)}}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{+}{{Erf}{.}{erf}{(}{{{(}{{x}{-}{mean}}{)}}{/}{{(}{{standardDeviation}{*}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{{{dx}{*}{dx}}{+}{{dy}{*}{dy}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{{Math}{.}{sqrt}{(}{m.length}{)}}{*}{{estimator}{.}{getRMS}{(}{problem}{)}}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{{result}{[}{i}{]}}{-}{{y}{[}{i}{]}}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{{result}{[}{i}{]}}{-}{{y}{[}{i}{]}}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{{Math}{.}{sqrt}{(}{problem.target.length}{)}}{*}{{optimizer}{.}{getRMS}{()}}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sumLog}{+=}{{Math}{.}{log}{(}{{values}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{value}{+=}{{Math}{.}{log}{(}{d}{)}}}{;}}{{{n}{++}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{{-}{mean}}{*}{{Math}{.}{log}{(}{{NUMBER_CONSTANT}{-}{p}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{Math}{.}{exp}{(}{{{-}{x}}{/}{mean}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{x}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{{return}{{{Math}{.}{exp}{(}{{{-}{x}}{/}{mean}}{)}}{/}{mean}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{sum}{+=}{{Math}{.}{abs}{(}{{{p1}{[}{i}{]}}{-}{{p2}{[}{i}{]}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{Math}{.}{exp}{(}{x}{)}}{-}{{Math}{.}{exp}{(}{{-}{x}}{)}}}{)}}{/}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{float}{{factor}{=}{{{(}{float}{)}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{scale}{)}}}{*}{sign}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Math}{.}{log}{(}{x}{)}}{/}{{Math}{.}{log}{(}{base}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{Math}{.}{abs}{(}{u}{)}}{+}{{Math}{.}{abs}{(}{v}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{Math}{.}{abs}{(}{u}{)}}{+}{{Math}{.}{abs}{(}{v}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{isEqual}{=}{{{Math}{.}{abs}{(}{{xInt}{-}{yInt}}{)}}{<=}{maxUlps}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{equalsIncludingNaN}{(}{x}{,}{y}{)}}{||}{{(}{{{Math}{.}{abs}{(}{{y}{-}{x}}{)}}{<=}{eps}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{equals}{(}{x}{,}{y}{,}{NUMBER_CONSTANT}{)}}{||}{{{Math}{.}{abs}{(}{{y}{-}{x}}{)}}{<=}{eps}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{Math}{.}{exp}{(}{x}{)}}{+}{{Math}{.}{exp}{(}{{-}{x}}{)}}}{)}}{/}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{floor}{(}{{result}{+}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{sigma}{=}{{NUMBER_CONSTANT}{+}{{Math}{.}{random}{()}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{mu}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{f.length}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{f.length}{)}}}}{;}}{{return}{{scaleArray}{(}{{fft}{(}{f}{,}{true}{)}}{,}{scaling_coefficient}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{f.length}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{scaling_coefficient}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{f.length}{)}}}}{;}}{{return}{{scaleArray}{(}{{fft}{(}{f}{,}{false}{)}}{,}{scaling_coefficient}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{atan2}{(}{{getImaginary}{()}}{,}{{getReal}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Math}{.}{abs}{(}{c}{)}}{<}{{Math}{.}{abs}{(}{d}{)}}}}
{AST_ROOT_SC2NF{{{Math}{.}{abs}{(}{dt}{)}}{<=}{{Math}{.}{ulp}{(}{stepStart}{)}}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Math.PI}{,}{x}{,}{accuracy}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{x}{=}{{UnivariateRealSolverUtils}{.}{solve}{(}{sin}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{Math.PI}{,}{x}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{expected}{,}{result}{,}{{Math}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{expected}{,}{result}{,}{{Math}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{singularValues}{[}{i}{]}}{=}{{Math}{.}{sqrt}{(}{{Math}{.}{abs}{(}{{singularValues}{[}{i}{]}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{Math}{.}{sqrt}{(}{{sigma}{*}{{{betaVariance}{[}{i}{]}}{[}{i}{]}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{fpos}{=}{{Math}{.}{floor}{(}{pos}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{dist}{=}{{Math}{.}{abs}{(}{{z}{-}{{x}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setMaxGrowth}{(}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{{-}{exp}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setMaxGrowth}{(}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{{-}{exp}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x}{,}{{Math}{.}{sqrt}{(}{{x.length}{/}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{tolerance}{=}{{Math}{.}{max}{(}{{relativeAccuracy}{*}{{z}{.}{abs}{()}}}{,}{absoluteAccuracy}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{sqrt}{=}{{Math}{.}{sqrt}{(}{{{c}{[}{ir}{]}}{[}{ir}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{k}{=}{{Math}{.}{max}{(}{N}{,}{seed.length}{)}}}}}
{AST_ROOT_SC2NF{{{}{{{{values}{[}{i}{]}}{=}{{Math}{.}{pow}{(}{{values}{[}{i}{]}}{,}{d}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{Math}{.}{abs}{(}{{t}{(}{m}{,}{mu}{,}{v}{,}{n}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{m}{-}{mu}}{)}}{/}{{Math}{.}{sqrt}{(}{{v}{/}{n}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stepStart}{=}{Double.NaN}}{;}}{{{stepSize}{=}{{Math}{.}{sqrt}{(}{{minStep}{*}{maxStep}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{msg}{,}{expected}{,}{actual}{,}{{Math}{.}{abs}{(}{{tolerance}{*}{actual}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{Gamma}{.}{digamma}{(}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{{-}{n}}{)}}{)}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{absAi}{=}{{Math}{.}{abs}{(}{{coefficients}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{median}{+}{{scale}{*}{{Math}{.}{tan}{(}{{Math.PI}{*}{{(}{{p}{-}{NUMBER_CONSTANT}}{)}}}{)}}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{NUMBER_CONSTANT}{/}{Math.PI}}{)}}{*}{{(}{{scale}{/}{{(}{{{dev}{*}{dev}}{+}{{scale}{*}{scale}}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{pi}{=}{{Double}{.}{valueOf}{(}{Math.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{Math}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{pEnd}{=}{{Math}{.}{min}{(}{{pStart}{+}{BLOCK_SIZE}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stdDev}{[}{i}{]}}{=}{{Math}{.}{sqrt}{(}{{matrix}{.}{getEntry}{(}{i}{,}{i}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{(}{int}{)}{{(}{{Math}{.}{abs}{(}{{{NUMBER_CONSTANT}{*}{x}}{+}{{NUMBER_CONSTANT}{*}{y}}}{)}}{)}}}{%}{NUMBER_CONSTANT}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{{(}{int}{)}{{(}{{Math}{.}{abs}{(}{{{NUMBER_CONSTANT}{*}{x}}{+}{{NUMBER_CONSTANT}{*}{y}}}{)}}{)}}}{%}{NUMBER_CONSTANT}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{Math}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{Math}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{Math}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{/}{{(}{{NUMBER_CONSTANT}{*}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}{,}{{sample}{.}{getStandardDeviation}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{/}{{(}{{NUMBER_CONSTANT}{*}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}{,}{{sample}{.}{getStandardDeviation}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{!=}{i}}{)}{{{}{{{res}{+=}{{Math}{.}{abs}{(}{{value}{-}{i}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{value}{+=}{{NUMBER_CONSTANT}{/}{{Math}{.}{pow}{(}{k}{,}{m}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{NUMBER_CONSTANT}{/}{{Math}{.}{pow}{(}{x}{,}{exponent}{)}}}{)}}{/}{{generalizedHarmonic}{(}{numberOfElements}{,}{exponent}{)}}}{;}}}
{AST_ROOT_SC2NF{{{widthSufficient}{=}{{{{Math}{.}{min}{(}{lowerBinMass}{,}{upperBinMass}{)}}{*}{sampleSize}}{>=}{minExpectedCount}}}{;}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{{criterion}{/}{wm.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{factor}{=}{{-}{{Math}{.}{sqrt}{(}{{wm}{.}{getWeight}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{value}{-}{expected}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{end}{()}{{{}{{return}{{Math}{.}{sqrt}{(}{sum}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{atan2}{(}{x}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{pow}{(}{x}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{accum3}{/=}{{variance}{*}{{Math}{.}{sqrt}{(}{variance}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{n0}{*}{moment.m3}}{)}}{/}{{(}{{{(}{{n0}{-}{NUMBER_CONSTANT}}{)}}{*}{{(}{{n0}{-}{NUMBER_CONSTANT}}{)}}{*}{{Math}{.}{sqrt}{(}{variance}{)}}{*}{variance}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Math}{.}{exp}{(}{NUMBER_CONSTANT}{)}}{,}{{u}{.}{getGeometricMean}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{asin}{(}{{z}{/}{{getNorm}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{atan2}{(}{y}{,}{x}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{{generated}{[}{NUMBER_CONSTANT}{]}}{-}{NUMBER_CONSTANT}}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{HarmonicFunction}}{(}{{a}{*}{omega}}{,}{omega}{,}{{phi}{+}{{Math.PI}{/}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{a}{*}{{Math}{.}{cos}{(}{{{omega}{*}{x}}{+}{phi}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Complex}}{{sqrtz}{=}{{ComplexUtils}{.}{polar2Complex}{(}{{Math}{.}{sqrt}{(}{r}{)}}{,}{{theta}{/}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{new}{{Complex}}{(}{{Math}{.}{acos}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{,}{{Complex.ZERO}{.}{acos}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{value}{-}{reference}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{index}{=}{{Math}{.}{round}{(}{{{(}{{Math}{.}{random}{()}}{)}}{*}{testArray.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{length}{=}{{{list}{.}{size}{()}}{-}{{Math}{.}{max}{(}{NUMBER_CONSTANT}{,}{{{list}{.}{size}{()}}{-}{windowSize}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{c}{=}{{t2}{+}{{NUMBER_CONSTANT}{*}{{(}{{{Math}{.}{exp}{(}{{{-}{NUMBER_CONSTANT}}{*}{t2}}{)}}{-}{NUMBER_CONSTANT}}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{NUMBER_CONSTANT}{*}{Math.PI}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{NUMBER_CONSTANT}{*}{Math.PI}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}{,}{{e1}{.}{distanceFrom}{(}{e2}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{error}{=}{{{Math}{.}{sqrt}{(}{{error}{/}{scale.length}}{)}}{*}{{errfac}{[}{{currentDegree}{-}{NUMBER_CONSTANT}}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{Math}{.}{log}{(}{x}{)}}{-}{{NUMBER_CONSTANT}{/}{x}}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{expected}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{power}{=}{{Math}{.}{pow}{(}{normalizedAbscissa}{,}{order}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}{,}{{Vector3D}{.}{distance}{(}{v1}{,}{v2}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}{,}{{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getNorm}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumOfLogs}{.}{getResult}{()}}{/}{{sumOfLogs}{.}{getN}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{x}{)}}{,}{{f}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{convergence}}{=}{{Math}{.}{abs}{(}{convergence}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{capacity}{=}{{(}{int}{)}{{Math}{.}{ceil}{(}{{expectedSize}{/}{LOAD_FACTOR}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{fl}{=}{{Math}{.}{floor}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{cumulativeProbability}{(}{{(}{int}{)}{{Math}{.}{floor}{(}{x}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{value}{-}{reference}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{absError}{=}{{{Math}{.}{abs}{(}{expected}{)}}{*}{relativeError}}}{;}}{{{Assert}{.}{assertEquals}{(}{msg}{,}{expected}{,}{actual}{,}{absError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{-}{mean}}{*}{{Math}{.}{log}{(}{unif}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{sigma}{=}{{Math}{.}{sqrt}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{Math}{.}{abs}{(}{{x1}{-}{x0}}{)}}{<=}{absoluteAccuracy}}{)}{{{}{{{setResult}{(}{x1}{,}{i}{)}}{;}}{{return}{x1}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{delta}{=}{{Math}{.}{abs}{(}{{{getEntry}{(}{i}{)}}{-}{{v}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{delta}{=}{{Math}{.}{abs}{(}{{{getEntry}{(}{i}{)}}{-}{{v}{[}{i}{]}}}{)}}}{;}}{{{max}{+=}{delta}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{res}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{res}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Math}{.}{abs}{(}{value}{)}}{<}{epsilon}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{value}{-}{expected}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{Fraction}}{(}{Math.PI}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Fraction}}{(}{{{(}{{NUMBER_CONSTANT}{+}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}{/}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{max}{=}{{Math}{.}{max}{(}{max}{,}{{Math}{.}{abs}{(}{delta}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{max}{=}{{Math}{.}{max}{(}{max}{,}{{Math}{.}{abs}{(}{delta}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{delta}{=}{{{data}{[}{i}{]}}{-}{{v}{[}{i}{]}}}}{;}}{{{sum}{+=}{{Math}{.}{abs}{(}{delta}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sum}{+=}{{Math}{.}{abs}{(}{delta}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{a}}{:}{data}{)}{{{}{{{max}{=}{{Math}{.}{max}{(}{max}{,}{{Math}{.}{abs}{(}{a}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{a}}{:}{data}{)}{{{}{{{sum}{+=}{{Math}{.}{abs}{(}{a}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{ulp}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{signum}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{rint}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{floor}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{ceil}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{cbrt}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{sqrt}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{abs}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{atan}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{asin}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{acos}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{tan}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{sin}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{cos}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{tanh}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{sinh}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{cosh}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{log1p}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{log10}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{log}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{expm1}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{exp}{(}{{data}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{Math}{.}{pow}{(}{{data}{[}{i}{]}}{,}{d}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{i}{<}{{Math}{.}{min}{(}{rows}{,}{columns}{)}}}}
{AST_ROOT_SC2NF{{final}{double}{{inv}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{norm2}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{Math}{.}{abs}{(}{{value}{-}{{searchArray}{[}{i}{]}}}{)}}{<}{tolerance}}{)}{{{}{{{found}{=}{true}}{;}}{}}}}{{{i}{++}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Math}{.}{abs}{(}{dt}{)}}{<=}{{Math}{.}{ulp}{(}{stepStart}{)}}}}
{AST_ROOT_SC2NF{{{{this}{.}{step}}{=}{{Math}{.}{abs}{(}{step}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{p}{=}{{Math}{.}{min}{(}{m}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{range}{=}{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{int}{)}{{Math}{.}{min}{(}{{randomData}{.}{nextPoisson}{(}{mean}{)}}{,}{Integer.MAX_VALUE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{normal}{.}{setStandardDeviation}{(}{{Math}{.}{sqrt}{(}{p}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{unequalCounts}{)}{{{}{{{weight}{=}{{Math}{.}{sqrt}{(}{{{(}{double}{)}{countSum1}}{/}{{(}{double}{)}{countSum2}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Math}{.}{abs}{(}{{sumExpected}{-}{sumObserved}}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{ratio}{=}{{sumObserved}{/}{sumExpected}}}{;}}{{{rescale}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{s17}{=}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{norm}{=}{{Math}{.}{max}{(}{norm}{,}{{Math}{.}{abs}{(}{{e}{.}{getValue}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{norm}{+=}{{Math}{.}{abs}{(}{{e}{.}{getValue}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{sum}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{d}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Math}{.}{sqrt}{(}{{{dx}{*}{dx}}{+}{{dy}{*}{dy}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{Math}{.}{sqrt}{(}{{circle}{.}{getM}{()}}{)}}{*}{rms}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{a}{*}{{Math}{.}{cos}{(}{{{omega}{*}{x}}{+}{phi}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{f}{=}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{normSq}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{stdDev}{=}{{Math}{.}{sqrt}{(}{{getVariance}{()}}{)}}}{;}}{}}}{else}{{{}{{{stdDev}{=}{NUMBER_CONSTANT}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{double}{{scalAbsoluteTolerance}{=}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{Math}{.}{abs}{(}{h}{)}}{<}{minStep}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{maxStep}{=}{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{stdDev}{=}{{Math}{.}{sqrt}{(}{{getVariance}{()}}{)}}}{;}}{}}}{else}{{{}{{{stdDev}{=}{NUMBER_CONSTANT}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{y0}{=}{{{}{{Math}{.}{sin}{(}{a}{)}}{,}{{Math}{.}{cos}{(}{a}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{new}{{double}{[]}}{{{}{{-}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{}{{new}{{BigReal}}{(}{NUMBER_CONSTANT}{)}}{,}{BigReal.ONE}{,}{BigReal.ZERO}{,}{{new}{{BigReal}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{BigReal}}{(}{Math.PI}{)}}{,}{{new}{{BigReal}}{(}{{-}{NUMBER_CONSTANT}}{)}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{deltaNorm}{>}{{NUMBER_CONSTANT}{*}{{Math}{.}{max}{(}{NUMBER_CONSTANT}{,}{initialNorm}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Math.PI}{,}{{MathUtils}{.}{scalb}{(}{Math.PI}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{MathUtils}{.}{hash}{(}{{new}{{double}{[]}}{{{}{{MathUtils}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{}}}}{)}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{i}{+}{STRING_CONSTANT}}{,}{{Math}{.}{log}{(}{{factorial}{(}{i}{)}}{)}}{,}{{MathUtils}{.}{factorialLog}{(}{i}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{double}{[]}}{{{}{{MathUtils}{.}{nextAfter}{(}{{MathUtils}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{MathUtils}{.}{equals}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{,}{{new}{{double}{[]}}{{{}{{MathUtils}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{}}}}{)}}}
{AST_ROOT_SC2NF{{{ret}{=}{{Math}{.}{exp}{(}{{{p1}{+}{p2}}{-}{p3}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{min}{(}{k}{,}{m}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{max}{(}{NUMBER_CONSTANT}{,}{{m}{-}{{(}{{n}{-}{k}}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{-}{{distribution}{.}{cumulativeProbability}{(}{{{Math}{.}{abs}{(}{{getSlope}{()}}{)}}{/}{{getSlopeStdErr}{()}}}{)}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{/}{sumXX}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{Math}{.}{sqrt}{(}{{getRSquare}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{Math}{.}{abs}{(}{sumXX}{)}}{<}{{NUMBER_CONSTANT}{*}{Double.MIN_VALUE}}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{ulp}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{signum}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{rint}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{cosh}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{acos}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{cos}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{log10}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{log}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{floor}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{ceil}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{cbrt}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{tanh}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{tan}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{atan}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{asin}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{expm1}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{exp}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{sinh}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{sqrt}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{sin}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{value}{(}{{double}{d}}{)}{{{}{{return}{{Math}{.}{abs}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{BigFraction}}{(}{Math.PI}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{new}{{BigFraction}}{(}{{{(}{{NUMBER_CONSTANT}{+}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}{/}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{step}{=}{{{Math}{.}{abs}{(}{{{pb}{.}{getFinalTime}{()}}{-}{{pb}{.}{getInitialTime}{()}}}{)}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x}{,}{{Math}{.}{sqrt}{(}{{NUMBER_CONSTANT}{*}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{c}{=}{{Math}{.}{exp}{(}{{t0}{-}{t}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{Math}{.}{sqrt}{(}{{circle}{.}{getN}{()}}{)}}{*}{{optimizer}{.}{getRMS}{()}}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{product}{*=}{{Math}{.}{pow}{(}{{values}{[}{i}{]}}{,}{{weights}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x2}{,}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{x2.length}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{v}{,}{{new}{{ArrayRealVector}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{NUMBER_CONSTANT}{+}{{Math}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}}{}}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{Math}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{Math}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{{(}{{f.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{Math}{.}{abs}{(}{{fn1}{-}{fn}}{)}}{<=}{threshold}}{)}{{return}{o}{;}}}}
{AST_ROOT_SC2NF{{{assertNotSame}{(}{v}{,}{{new}{{OpenMapRealVector}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{NUMBER_CONSTANT}{+}{{Math}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}}{}}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Math}{.}{sin}{(}{{{i}{*}{Math.PI}}{/}{n}}{)}}{*}{{(}{{{f}{[}{i}{]}}{+}{{f}{[}{{n}{-}{i}}{]}}}{)}}}}
{AST_ROOT_SC2NF{{double}{{scaling_coefficient}{=}{{Math}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{n}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{scaling_coefficient}{=}{{Math}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{f.length}}{)}}}{;}}{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fst}{(}{f}{)}}{,}{scaling_coefficient}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{Math}{.}{exp}{(}{tmp1}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{Math}{.}{sqrt}{(}{tmpSquare}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{absTolerance}{=}{{Math}{.}{pow}{(}{NUMBER_CONSTANT}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Math}{.}{abs}{(}{{max}{-}{min}}{)}}{<=}{absoluteAccuracy}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{ci}{,}{{l40}{[}{i}{]}}{,}{{{Math}{.}{abs}{(}{ci}{)}}{*}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Math}{.}{abs}{(}{{Tk}{.}{value}{(}{x}{)}}{)}}{<}{{(}{{NUMBER_CONSTANT}{+}{NUMBER_CONSTANT}}{)}}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{Math}{.}{exp}{(}{tmp1}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{tmp2}{=}{{Math}{.}{sqrt}{(}{tmpSquare}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{mi}{,}{vi}{,}{{paramsAccuracy}{*}{{(}{{NUMBER_CONSTANT}{+}{{Math}{.}{abs}{(}{mi}{)}}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{theoreticalMinCost}{,}{{{Math}{.}{sqrt}{(}{m}{)}}{*}{rms}}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{{result}{[}{i}{]}}{-}{{y}{[}{i}{]}}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{capacity}{=}{{(}{int}{)}{{Math}{.}{ceil}{(}{{expectedSize}{/}{LOAD_FACTOR}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{,}{mean}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{,}{mean}{,}{begin}{,}{length}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{sqrt}{(}{{variance}{.}{evaluate}{(}{values}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getResult}{()}{{{}{{return}{{Math}{.}{sqrt}{(}{{variance}{.}{getResult}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{minor}{<}{{Math}{.}{min}{(}{m}{,}{n}{)}}}}
{AST_ROOT_SC2NF{{j}{<}{{Math}{.}{min}{(}{{i}{+}{NUMBER_CONSTANT}}{,}{n}{)}}}}
{AST_ROOT_SC2NF{{int}{{row}{=}{{{Math}{.}{min}{(}{m}{,}{n}{)}}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{OptimizationException}}{e}}{)}{{{}{{{assertTrue}{(}{{{(}{{!}{solvable}}{)}}{&&}{{(}{{degree}{>}{NUMBER_CONSTANT}}{)}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RealConvergenceChecker}}{convergenceChecker}}}
{AST_ROOT_SC2NF{{public}{{GoalType}}{getGoalType}{()}{{{}{{return}{optimizationGoal}{;}}{}}}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{.}{setMaxIterations}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{OptimizationException}}{ee}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{Double}{.}{isNaN}{(}{{sum}{.}{getResult}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{SumOfSquares}{()}{{{}{{{n}{=}{NUMBER_CONSTANT}}{;}}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{Double}{.}{isNaN}{(}{{sumSq}{.}{getResult}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Sum}{()}{{{}{{{n}{=}{NUMBER_CONSTANT}}{;}}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{Double}{.}{isNaN}{(}{{statistic}{.}{getResult}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{Double}{.}{isNaN}{(}{{statistic}{.}{getResult}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{{{n}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Product}{()}{{{}{{{n}{=}{NUMBER_CONSTANT}}{;}}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{Double}{.}{isNaN}{(}{{product}{.}{getResult}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{+}{{(}{{sign}{<}{<}{NUMBER_CONSTANT}}{)}}{+}{{(}{{nans}{<}{<}{NUMBER_CONSTANT}}{)}}{+}{exp}{+}{{mant}{.}{hashCode}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumberOfRegressors}{()}{{{}{{return}{{{x}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{int}{getNumberOfRegressors}{()}{{{}{{return}{{{x}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{isMinim}{=}{{(}{{{getGoalType}{()}}{==}{GoalType.MINIMIZE}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{long}{seed}}{)}{{{}{{super}{(}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{int}{seed}}{)}{{{}{{super}{(}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{long}{seed}}{)}{{{}{{super}{(}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{int}{seed}}{)}{{{}{{super}{(}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{mp}}{;}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{mp}}{;}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{mp}}{;}}}
{AST_ROOT_SC2NF{{{{v}{[}{indexRm2}{]}}{&=}{mp}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIFFERENT_ROWS_LENGTHS}{,}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{wrong}{,}{expected}{)}{;}}{{{dimension}{=}{expected}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{rows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{rows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{columns}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{length}{!=}{columns}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.DIFFERENT_ROWS_LENGTHS}{,}{columns}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{dist}{.}{setMean}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{p}{,}{{new}{{NormalDistributionImpl}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{distribution}{.}{setDegreesOfFreedom}{(}{df}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{distribution}{.}{setDegreesOfFreedom}{(}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}{;}}{{return}{{NUMBER_CONSTANT}{-}{{distribution}{.}{cumulativeProbability}{(}{{chiSquare}{(}{expected}{,}{observed}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{density}{(}{{{Double}}{x}}{)}{;}}}
{AST_ROOT_SC2NF{{(}{{{FastMath}{.}{max}{(}{{FastMath}{.}{abs}{(}{mij}{)}}{,}{{Math}{.}{abs}{(}{mji}{)}}{)}}{*}{eps}}{)}}}
{AST_ROOT_SC2NF{{protected}{AbstractContinuousDistribution}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math.distribution.FDistributionImpl}}{{fd}{=}{{new}{{org.apache.commons.math.distribution.FDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{alpha}{>=}{NUMBER_CONSTANT}}{||}{{alpha}{<=}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL}{,}{alpha}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{>}{NUMBER_CONSTANT}}{)}{{{}{{{distribution}{.}{setDegreesOfFreedom}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{>}{NUMBER_CONSTANT}}{)}{{{}{{{distribution}{.}{setDegreesOfFreedom}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{private}{RandomAdaptor}{()}{{{}}}}}
{AST_ROOT_SC2NF{{return}{{a}{.}{dotrap}{(}{DfpField.FLAG_INVALID}{,}{STRING_CONSTANT}{,}{a}{,}{{a}{.}{newInstance}{(}{{(}{byte}{)}{NUMBER_CONSTANT}}{,}{{(}{byte}{)}{Dfp.QNAN}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ia}{>}{NUMBER_CONSTANT}}{)}{{{}{{return}{{a}{.}{newInstance}{(}{{(}{byte}{)}{NUMBER_CONSTANT}}{,}{{(}{byte}{)}{Dfp.INFINITE}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{AbstractIntegerDistribution}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getSizes}{()}{{{}{{return}{{Arrays}{.}{copyOf}{(}{size}{,}{dimension}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{size}}{=}{{Arrays}{.}{copyOf}{(}{size}{,}{dimension}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getCounts}{()}{{{}{{return}{{Arrays}{.}{copyOf}{(}{counter}{,}{dimension}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{d}{=}{{Arrays}{.}{copyOf}{(}{{direc}{[}{i}{]}}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{AbstractMultipleLinearRegression}}{{regression}{=}{{(}{{AbstractMultipleLinearRegression}}{)}{{createRegression}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExponentialDistribution}}{{distribution}{=}{{new}{{ExponentialDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}{{catch}{(}{{{NotStrictlyPositiveException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{realVectorFormat}{.}{parseObject}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{UnivariateRealSolverUtils}{.}{solve}{(}{sin}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{zb}{+=}{{(}{{za}{-}{temp2}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nRows}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nRows}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{v}{.}{getDimension}{()}}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{{v}{.}{getDimension}{()}}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{v.length}{!=}{nCols}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.VECTOR_LENGTH_MISMATCH}{,}{v.length}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setQuantile}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isDefaultValue}{(}{norm}{)}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{n}{,}{DEFAULT_RHO}{,}{DEFAULT_KHI}{,}{DEFAULT_GAMMA}{,}{DEFAULT_SIGMA}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MultiDirectionalSimplex}{(}{{final}{int}{n}}{)}{{{}{{this}{(}{n}{,}{DEFAULT_KHI}{,}{DEFAULT_GAMMA}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FunctionEvaluationException}}{ee}}{)}{{{}{{{assertTrue}{(}{shouldFail}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{es}{.}{getInverse}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FunctionEvaluationException}}{oe}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE}{,}{LocalizedFormats.DIMENSIONS_MISMATCH}{,}{wrong}{,}{expected}{)}{;}}{{{dimension}{=}{expected}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NotPositiveDefiniteMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NotPositiveDefiniteMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NotSymmetricMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidMatrixException}}{ime}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotPositiveDefiniteMatrixException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{LaguerreSolver}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}{;}}{{{p}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MessageFactory}{.}{buildMessage}{(}{locale}{,}{pattern}{,}{LocalizedFormats.USER_EXCEPTION}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getLocalizablePattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getLocalizablePattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getLocalizablePattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getLocalizablePattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getLocalizablePattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{ex}{.}{getLocalizablePattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FunctionEvaluationException}}{fe}}{)}{{{}{{{assertTrue}{(}{exceptionExpected}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{finalizeStep}{()}}{;}}{}}}{{catch}{(}{{{DerivativeException}}{e}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIOException}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ULP}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.TANH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.TAN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SQRT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SINH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.SIGNUM}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.RINT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.POW}{.}{fix2ndArgument}{(}{d}{)}}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.MULTIPLY}{.}{fix1stArgument}{(}{d}{)}}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG1P}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG10}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.LOG}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.INVERT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.FLOOR}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.EXPM1}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.EXP}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.DIVIDE}{.}{fix2ndArgument}{(}{d}{)}}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.COSH}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.COS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.CEIL}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.CBRT}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ATAN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ASIN}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ACOS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{mapToSelf}{(}{ComposableFunction.ABS}{)}}{;}}{}}}{{catch}{(}{{{FunctionEvaluationException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{DerivativeException}}{de}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{x}{+}{y}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Circle}}{{circle}{=}{{new}{{Circle}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Circle}}{{circle}{=}{{new}{{Circle}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Circle}}{{circle}{=}{{new}{{Circle}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ConvergenceException}}{ex}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{handler}{.}{getMaximalValueError}{()}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{mapPowToSelf}{(}{{double}{d}}{)}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.POW}{.}{fix2ndArgument}{(}{d}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{d}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{{mapToSelf}{(}{{BinaryFunction.ADD}{.}{fix1stArgument}{(}{d}{)}}{)}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{++}{iterations}}{>}{maxIterations}}{)}{{{}{{throw}{{new}{{OptimizationException}}{(}{{new}{{MaxIterationsExceededException}}{(}{maxIterations}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MaxIterationsExceededException}}{(}{maximalIterationCount}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MaxIterationsExceededException}}{(}{maxIterations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{>=}{maxIterations}}{)}{{{}{{throw}{{new}{{MaxIterationsExceededException}}{(}{maxIterations}{,}{LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION}{,}{x}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{dimension}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE}{,}{minSingularValue}{,}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{f}{,}{Double.NaN}{,}{Double.NaN}{,}{startValue}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{outBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{msgBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{out}{=}{{new}{{StringBuffer}}{(}{msg}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{messageBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{s}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuffer}}{{buff}{=}{{new}{{StringBuffer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{msgBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{outBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{outBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{outBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{outBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{outBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{FastMath.PI}{,}{{solver}{.}{solve}{(}{f}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{solver}{.}{getAbsoluteAccuracy}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{solver}{.}{solve}{(}{f}{,}{min}{,}{max}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{SimpleVectorialValueChecker}}{()}}{,}{Integer.MAX_VALUE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{SimpleScalarValueChecker}}{()}}{,}{Integer.MAX_VALUE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{java.lang.IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{java.lang.IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{<=}{NUMBER_CONSTANT}}{||}{{p}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{p}{>}{NUMBER_CONSTANT}}{)}}{||}{{(}{{p}{<=}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE}{,}{p}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x1}{<}{x0}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}{,}{x0}{,}{x1}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x1}{<}{x0}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT}{,}{x0}{,}{x1}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{new}{{BlockRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{new}{{BlockRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{new}{{BlockRealMatrix}}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{a}{<}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{{a}{-}{b}}}{;}}{}}}{else}{{{}{{throw}{{new}{{ArithmeticException}}{(}{msg}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{optimizer}{.}{getOptima}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalStateException}}{ise}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numerator}{==}{Integer.MIN_VALUE}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.OVERFLOW_IN_FRACTION}{,}{numerator}{,}{denominator}{)}}{;}}{}}}}{{return}{{new}{{Fraction}}{(}{{-}{numerator}}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{createSparseMatrix}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{UnivariateRealSolverUtils}{.}{solve}{(}{sin}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{UnivariateRealSolverUtils}{.}{solve}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{()}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{createSparseMatrix}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{createSparseMatrix}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{begin}{+}{length}}{>}{values.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{preMultiply}{(}{{new}{{Array2DRowRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{operate}{(}{testVector}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{multiply}{(}{{new}{{Array2DRowRealMatrix}}{(}{bigSingular}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{m}{.}{subtract}{(}{{new}{{Array2DRowRealMatrix}}{(}{testData2}{)}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{min}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{max}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{variance}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{mean}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{NumberFormat}}{{f}{=}{{getDefaultNumberFormat}{(}{locale}{)}}}{;}}{{return}{{new}{{ComplexFormat}}{(}{f}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ComplexFormat}{(}{{{String}}{imaginaryCharacter}}{)}{{{}{{this}{(}{imaginaryCharacter}{,}{{getDefaultNumberFormat}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Vector3DFormat}}{(}{{getDefaultNumberFormat}{(}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{prefix}{,}{suffix}{,}{separator}{,}{{getDefaultNumberFormat}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{found}}{)}{{{}{{{Assert}{.}{fail}{(}{{msg}{+}{STRING_CONSTANT}{+}{{ComplexFormat}{.}{formatComplex}{(}{z}{)}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{formatDouble}{(}{{vector}{.}{getEntry}{(}{i}{)}}{,}{format}{,}{toAppendTo}{,}{pos}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{RealVectorFormat}}{(}{{getDefaultNumberFormat}{(}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{prefix}{,}{suffix}{,}{separator}{,}{{getDefaultNumberFormat}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{imaginaryCharacter}{,}{format}{,}{{(}{{NumberFormat}}{)}{{format}{.}{clone}{()}}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threshold}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.ZERO_NORM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{s}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArithmeticException}{(}{LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createInternalError}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createInternalError}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{alg}{=}{{MessageDigest}{.}{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}{}}}{{catch}{(}{{{NoSuchAlgorithmException}}{ex}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createInternalError}{(}{ex}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsHandlersManager}{.}{isEmpty}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{addStepHandler}{(}{handler}{)}}{;}}{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsHandlersManager}{.}{isEmpty}{()}}}{)}}}}{;}}{{{initializeArrays}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsHandlersManager}{.}{isEmpty}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{denseOutput}{=}{{{requiresDenseOutput}{()}}{||}{{(}{{!}{{eventsHandlersManager}{.}{isEmpty}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{stepStart}{=}{{acceptStep}{(}{interpolator}{,}{stepHandlers}{,}{y}{,}{yDot}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{{stepStart}{=}{{acceptStep}{(}{interpolator}{,}{stepHandlers}{,}{y}{,}{yDot}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{temp}{=}{{sinEpsA}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{tmp}{=}{{{hiPrec}{[}{NUMBER_CONSTANT}{]}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{>=}{NUMBER_CONSTANT}}{||}{{x}{<=}{{-}{NUMBER_CONSTANT}}}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{y}{>=}{NUMBER_CONSTANT}}{||}{{y}{<=}{{-}{NUMBER_CONSTANT}}}}{)}{{{}{{return}{{pow}{(}{{-}{x}}{,}{y}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{epsilon}{=}{{xa}{-}{{EIGHTHES}{[}{idx}{]}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{epsilon}{=}{{xa}{-}{{EIGHTHES}{[}{idx}{]}}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{fatal}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{fatal}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{invx}{==}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{x}{>}{NUMBER_CONSTANT}}{)}{{{}{{return}{y}{;}}{}}}{else}{{{}{{return}{{{getSign}{(}{y}{)}}{*}{Math.PI}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{xa}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{{leftPlane}{?}{{{getSign}{(}{xa}{)}}{*}{Math.PI}}{:}{xa}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{round}{(}{x}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{d}{=}{{copyOf}{(}{{direc}{[}{i}{]}}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getSizes}{()}{{{}{{return}{{copyOf}{(}{size}{,}{dimension}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{size}}{=}{{copyOf}{(}{size}{,}{dimension}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getCounts}{()}{{{}{{return}{{copyOf}{(}{counter}{,}{dimension}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{oneWayAnova}{.}{anovaTest}{(}{categoryData}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{oneWayAnova}{.}{anovaPValue}{(}{categoryData}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{oneWayAnova}{.}{anovaFValue}{(}{categoryData}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{unknownDistributionChiSquareTest}{.}{chiSquareTestDataSetsComparison}{(}{observed1}{,}{observed2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{unknownDistributionChiSquareTest}{.}{chiSquareTestDataSetsComparison}{(}{observed1}{,}{observed2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{unknownDistributionChiSquareTest}{.}{chiSquareDataSetsComparison}{(}{observed1}{,}{observed2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{chiSquareTest}{.}{chiSquareTest}{(}{counts}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{chiSquareTest}{.}{chiSquareTest}{(}{counts}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{chiSquareTest}{.}{chiSquareTest}{(}{expected}{,}{observed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{chiSquareTest}{.}{chiSquareTest}{(}{expected}{,}{observed}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{chiSquareTest}{.}{chiSquare}{(}{counts}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{chiSquareTest}{.}{chiSquare}{(}{expected}{,}{observed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{sampleStats1}{,}{sampleStats2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{sample1}{,}{sample2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{mu}{,}{sampleStats}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{mu}{,}{sampleStats}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{mu}{,}{sample}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{tTest}{(}{mu}{,}{sample}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{t}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{t}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{t}{(}{mu}{,}{sampleStats}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{t}{(}{mu}{,}{observed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{pairedTTest}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{pairedTTest}{(}{sample1}{,}{sample2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{pairedT}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{homoscedasticTTest}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{homoscedasticTTest}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{homoscedasticTTest}{(}{sample1}{,}{sample2}{,}{alpha}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{homoscedasticT}{(}{sampleStats1}{,}{sampleStats2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{tTest}{.}{homoscedasticT}{(}{sample1}{,}{sample2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{TestUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{return}{{(}{double}{)}{y}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{arzneg}{=}{{selectColumns}{(}{arz}{,}{{Arrays}{.}{copyOf}{(}{arReverseIndex}{,}{mu}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{numer}{=}{{(}{{bits}{&}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{statesInitialized}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{statesInitialized}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{statesInitialized}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{statesInitialized}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{statesInitialized}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{ParametricRealFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ParametricRealFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ParametricRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{double}{{g}{=}{{{Gaussian}{.}{this}}{.}{value}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fitter}{=}{{new}{{CurveFitter}}{(}{optimizer}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{fatal}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{specific}{,}{LocalizedFormats.ILLEGAL_STATE}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{null}{,}{specific}{,}{general}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{null}{,}{LocalizedFormats.CANNOT_PARSE}{,}{wrong}{,}{{new}{{Integer}}{(}{position}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{reference}{,}{{p}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{reference}{,}{{p}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{reference}{,}{{{p}{.}{multiply}{(}{q}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{n}}{=}{n}}{;}}}
{AST_ROOT_SC2NF{{return}{{isMinimize}{?}{penalty}{:}{{-}{penalty}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{boundaries}{==}{null}}{)}{{return}{true}{;}}}}
{AST_ROOT_SC2NF{{return}{{_isMinimize}{?}{penalty}{:}{{-}{penalty}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{_boundaries}{==}{null}}{)}{{return}{true}{;}}}}
{AST_ROOT_SC2NF{{final}{{FitnessFunction}}{{fitfun}{=}{{new}{{FitnessFunction}}{(}{boundaries}{,}{isMinimize}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{ioe}{.}{getMessage}{()}}{.}{length}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{LocalizedFormats.SAME_SIGN_AT_ENDPOINTS}{,}{lo}{,}{hi}{,}{fLo}{,}{fHi}{,}{args}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{null}{,}{lo}{,}{hi}{,}{fLo}{,}{fHi}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{LocalizedFormats.NO_DATA}{,}{{(}{{{Object}}{[]}}{)}{null}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{{boundIsAllowed}{?}{LocalizedFormats.NUMBER_TOO_LARGE}{:}{LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED}}{,}{wrong}{,}{max}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{null}{,}{wrong}{,}{max}{,}{boundIsAllowed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{LocalizedFormats.OUT_OF_RANGE_SIMPLE}{,}{wrong}{,}{lo}{,}{hi}{)}{;}}{{{{this}{.}{lo}}{=}{lo}}{;}}{{{{this}{.}{hi}}{=}{hi}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{null}{,}{wrong}{,}{lo}{,}{hi}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{LocalizedFormats.DIMENSIONS_MISMATCH}{,}{wrong}{,}{expected}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{null}{,}{wrong}{,}{expected}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cause}{,}{LocalizedFormats.USER_EXCEPTION}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{LocalizedFormats.DIMENSIONS_MISMATCH}{,}{wrong}{,}{expected}{)}{;}}{{{dimension}{=}{expected}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ZeroException}{(}{{{Localizable}}{specific}}{)}{{{}{{super}{(}{specific}{,}{LocalizedFormats.ZERO_NOT_ALLOWED}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{specific}{,}{{boundIsAllowed}{?}{LocalizedFormats.NUMBER_TOO_SMALL}{:}{LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED}}{,}{wrong}{,}{min}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{null}{,}{wrong}{,}{min}{,}{boundIsAllowed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{LocalizedFormats.NOT_FINITE_NUMBER}{,}{wrong}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{null}{,}{wrong}{,}{args}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{LocalizedFormats.MAX_COUNT_EXCEEDED}{,}{max}{,}{args}{)}{;}}{{{{this}{.}{max}}{=}{max}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MaxCountExceededException}{(}{{{Number}}{max}}{)}{{{}{{this}{(}{null}{,}{max}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathInternalError}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{super}{(}{LocalizedFormats.INTERNAL_ERROR}{,}{REPORT_URL}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{null}{,}{LocalizedFormats.CANNOT_PARSE}{,}{wrong}{,}{{Integer}{.}{valueOf}{(}{position}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{++}{count}}{;}}{{{assertEquals}{(}{{i}{+}{{j}{/}{NUMBER_CONSTANT}}}{,}{value}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{++}{count}}{;}}{{{assertEquals}{(}{{i}{+}{{j}{/}{NUMBER_CONSTANT}}}{,}{value}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{l}{.}{getEntry}{(}{i}{,}{j}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{m}{.}{getEntry}{(}{i}{,}{j}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{doFinalize}{(}{)}{throws}{{MathUserException}}{{{}{{throw}{{new}{{MathUserException}}{(}{LocalizedFormats.SIMPLE_MESSAGE}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{doFinalize}{(}{)}{throws}{{MathUserException}}{{{}{{throw}{{new}{{MathUserException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{addMessage}{(}{LocalizedFormats.USER_EXCEPTION}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{Erf}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{private}{Beta}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{private}{Gamma}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{s}{.}{getN}{()}}{,}{{u}{.}{getN}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{a1}{,}{{MathUtils}{.}{normalizeAngle}{(}{a2}{,}{a1}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{tearDown}{()}{{{}{{{refValues}{=}{null}}{;}}{{{matrix}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{isIncludedColumn}{(}{eigenVector}{,}{{ed}{.}{getV}{()}}{,}{tolerance}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{f}{=}{{new}{{Frequency}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{tearDown}{()}{{{}{{{pb}{=}{null}}{;}}{{{integ}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{bestFinal}{.}{compareTo}{(}{bestInitial}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{assertTrue}{(}{{Double}{.}{isNaN}{(}{{statistic}{.}{getResult}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{variance}{=}{{regression}{.}{estimateRegressandVariance}{()}}}{;}}{{{assertTrue}{(}{{variance}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{double}{[]}{[]}}{{variance}{=}{{regression}{.}{estimateRegressionParametersVariance}{()}}}{;}}{{{assertEquals}{(}{{getNumberOfRegressors}{()}}{,}{variance.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{double}{[]}}{{e}{=}{{regression}{.}{estimateResiduals}{()}}}{;}}{{{assertEquals}{(}{{getSampleSize}{()}}{,}{e.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{double}{[]}}{{beta}{=}{{regression}{.}{estimateRegressionParameters}{()}}}{;}}{{{assertEquals}{(}{{getNumberOfRegressors}{()}}{,}{beta.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FractionField}}{{field}{=}{{FractionField}{.}{getInstance}{()}}}{;}}{{{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{assertEquals}{(}{Fraction.ONE}{,}{{{FractionField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{assertEquals}{(}{Fraction.ZERO}{,}{{{FractionField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fitnessCalls}{<=}{neededCalls}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{numDifferent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{DummyBinaryChromosome}}{(}{repr}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{c3}{,}{{population}{.}{getFittestChromosome}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{null}{,}{expected}{,}{actual}{,}{delta}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{BigRealField}}{{field}{=}{{BigRealField}{.}{getInstance}{()}}}{;}}{{{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{assertEquals}{(}{BigReal.ONE}{,}{{{BigRealField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{assertEquals}{(}{BigReal.ZERO}{,}{{{BigRealField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{uniquePointIsCenter}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{p}{,}{{TestUtils}{.}{serializeAndRecover}{(}{p}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{s}{.}{getN}{()}}{,}{{u}{.}{getN}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{expected}{.}{getN}{()}}{,}{{observed}{.}{getN}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{new}{{Fraction}}{(}{a}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{ConvergenceException}}{ce}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{{y}{[}{i}{]}}{,}{{iResult}{[}{i}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{h}{)}}{<}{minStep}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FractionConversionException}}{fce}}{)}{{{}{{{fail}{(}{{fce}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FractionConversionException}}{fce}}{)}{{{}{{{fail}{(}{{fce}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{DummyRandomKey}}{{drk}{=}{{new}{{DummyRandomKey}}{(}{{RandomKey}{.}{randomPermutation}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}{{{assertNotNull}{(}{drk}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{nextGeneration}{.}{getPopulationSize}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{tearDown}{()}{{{}{{{pb}{=}{null}}{;}}{{{integ}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{{}{{{BigFractionField}}{{field}{=}{{BigFractionField}{.}{getInstance}{()}}}{;}}{{{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{assertEquals}{(}{BigFraction.ONE}{,}{{{BigFractionField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{assertEquals}{(}{BigFraction.ZERO}{,}{{{BigFractionField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fail}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{checkClearValue}{(}{{{StorelessUnivariateStatistic}}{statistic}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{statistic}{.}{getResult}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{approYDot}{,}{{yDot}{[}{i}{]}}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ComplexField}}{{field}{=}{{ComplexField}{.}{getInstance}{()}}}{;}}{{{assertTrue}{(}{{field}{==}{{TestUtils}{.}{serializeAndRecover}{(}{field}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testOne}{()}{{{}{{{assertEquals}{(}{Complex.ONE}{,}{{{ComplexField}{.}{getInstance}{()}}{.}{getOne}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZero}{()}{{{}{{{assertEquals}{(}{Complex.ZERO}{,}{{{ComplexField}{.}{getInstance}{()}}{.}{getZero}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isLast}{)}{{{}{{{assertTrue}{(}{{maxError}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{tooShortStats}{=}{{new}{{SummaryStatistics}}{()}}}{;}}{{{tooShortStats}{.}{addValue}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{maxError}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{isLast}{)}{{{}{{{assertTrue}{(}{{maxError}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isLast}{)}{{{}{{{assertTrue}{(}{{maxError}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{changes}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{column}{>}{row}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{value}{,}{entryTolerance}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{column}{<}{row}}{)}{{{}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{value}{,}{entryTolerance}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{norm}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{FastMath}{.}{abs}{(}{walk}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NoDataException}{(}{{{Localizable}}{specific}}{)}{{{}{{super}{(}{specific}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{parameters}}}
{AST_ROOT_SC2NF{{{double}{[]}}{parameters}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{doubles}}}
{AST_ROOT_SC2NF{{{double}{[]}}{parameters}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{double}{[]}}{param}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegrator}}{{integrator}{=}{{new}{{LegendreGaussIntegrator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setMinimalIterationCount}{(}{{int}{count}}{)}{{{}{{{minimalIterationCount}{=}{count}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{{String}}{>}}{getContextKeys}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getContext}{(}{{{String}}{key}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{z}{=}{{concatinateSamples}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximalIterationCount}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{{Set}}{<}{{String}}{>}}{getContextKeys}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getContext}{(}{{{String}}{key}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{{new}{{PearsonsCorrelation}}{()}}{.}{correlation}{(}{x}{,}{y}{)}}{,}{{{corrInstance}{.}{getCorrelationMatrix}{()}}{.}{getEntry}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{Double.MIN_VALUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{PearsonsCorrelation}}{()}}{.}{correlation}{(}{one}{,}{two}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Double}{.}{isNaN}{(}{{{new}{{PearsonsCorrelation}}{()}}{.}{correlation}{(}{noVariance}{,}{values}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{PearsonsCorrelation}{.}{correlation}{(}{x}{,}{y}{)}}{,}{{{corrInstance}{.}{getCorrelationMatrix}{()}}{.}{getEntry}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{Double.MIN_VALUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PearsonsCorrelation}{.}{correlation}{(}{one}{,}{two}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{Double}{.}{isNaN}{(}{{PearsonsCorrelation}{.}{correlation}{(}{noVariance}{,}{values}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{normps}{=}{{norm}{(}{ps}{)}}}{;}}}
{AST_ROOT_SC2NF{{{normps}{=}{{norm}{(}{ps}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{LocalizedFormats.MAX_COUNT_EXCEEDED}{,}{max}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{SimplexTableau}}{{tableau}{=}{{new}{{SimplexTableau}}{(}{function}{,}{linearConstraints}{,}{goal}{,}{nonNegative}{,}{epsilon}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{MathUtils}{.}{compareTo}{(}{entry}{,}{minValue}{,}{{getEpsilon}{(}{entry}{)}}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{MathUtils}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{{getEpsilon}{(}{entry}{)}}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{columnsToDrop}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{LocalizedFormats.CANNOT_PARSE}{,}{wrong}{,}{{Integer}{.}{valueOf}{(}{position}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.MAX_COUNT_EXCEEDED}{,}{max}{)}{;}}{{{{this}{.}{max}}{=}{max}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{addMessage}{(}{pattern}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{pattern}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{addMessage}{(}{LocalizedFormats.USER_EXCEPTION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{cause}{)}{;}}{{{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addMessage}{(}{pattern}{,}{args}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.EVALUATIONS}{,}{max}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{field}}{=}{{{data}{[}{NUMBER_CONSTANT}{]}}{.}{getField}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ArrayRealVector}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{extractField}{(}{d}{)}}{)}{;}}{{{copyIn}{(}{d}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{matrix}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{Hdata}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{projection}{(}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{v}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{d}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{fractionColMatrix}{)}}{,}{{MatrixUtils}{.}{createFieldMatrix}{(}{fractionColMatrix}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{source}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{prefix}{,}{suffix}{,}{separator}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Vector3DFormat}{(}{{final}{{NumberFormat}}{format}}{)}{{{}{{this}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_SEPARATOR}{,}{format}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Vector3DFormat}{()}{{{}{{this}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_SEPARATOR}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{BSPTreeVisitor}}{visitor}}}
{AST_ROOT_SC2NF{{void}{visitLeafNode}{(}{{{BSPTree}}{node}}{)}{;}}}
{AST_ROOT_SC2NF{{{BSPTree}}{node}}}
{AST_ROOT_SC2NF{{{BSPTree}}{node}}}
{AST_ROOT_SC2NF{{{Hyperplane}}{other}}}
{AST_ROOT_SC2NF{{{Point}}{point}}}
{AST_ROOT_SC2NF{{final}{{Hyperplane}}{other}}}
{AST_ROOT_SC2NF{{final}{{Point2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Hyperplane}}{other}}}
{AST_ROOT_SC2NF{{final}{{Point2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Point2D}}{{tmp}{=}{{loop}{[}{min}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Point2D}}{[]}}{bLoop}}}
{AST_ROOT_SC2NF{{{Point3D}}{{point}{=}{{p}{.}{intersection}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Order}}{visitOrder}{(}{{final}{{BSPTree}}{node}}{)}{{{}{{return}{Order.MINUS_SUB_PLUS}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{BoundaryProjector}{()}{{{}{{{projected}{=}{{new}{{PolygonsSet}}{(}{{new}{{BSPTree}}{(}{Boolean.FALSE}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{BSPTree}}{tree}}}
{AST_ROOT_SC2NF{{{{Point3D}}{[]}}{points}}}
{AST_ROOT_SC2NF{{final}{{BSPTree}}{tree}}}
{AST_ROOT_SC2NF{{public}{{Order}}{visitOrder}{(}{{final}{{BSPTree}}{node}}{)}{{{}{{return}{Order.MINUS_SUB_PLUS}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Hyperplane}}{other}}}
{AST_ROOT_SC2NF{{final}{{Point}}{point}}}
{AST_ROOT_SC2NF{{final}{{Point3D}}{p}}}
{AST_ROOT_SC2NF{{{origin}{=}{{new}{{Point3D}}{(}{{-}{originOffset}}{,}{w}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Order}}{visitOrder}{(}{{final}{{BSPTree}}{node}}{)}{{{}{{return}{Order.MINUS_SUB_PLUS}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{BSPTree}}{tree}}}
{AST_ROOT_SC2NF{{public}{abstract}{{{SplitSubHyperplane}}{<}{{S}}{>}}{split}{(}{{{{Hyperplane}}{<}{{S}}{>}}{hyperplane}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Side}}{side}{(}{{{{Hyperplane}}{<}{{S}}{>}}{hyperplane}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{in}{[}{i}{]}}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NotPositiveException}}{(}{{in}{[}{i}{]}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{val}{<}{NUMBER_CONSTANT}}{||}{{val}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{InvalidRepresentationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{i}}{:}{chromosomeRepresentation}{)}{{{}{{if}{(}{{{i}{<}{NUMBER_CONSTANT}}{||}{{i}{>}{NUMBER_CONSTANT}}}{)}{{throw}{{new}{{InvalidRepresentationException}}{(}{STRING_CONSTANT}{)}}{;}}}{}}}}}
{AST_ROOT_SC2NF{{clusters}{=}{{transformer}{.}{cluster}{(}{{Arrays}{.}{asList}{(}{points}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{getInitialStateEstimate}{()}{{{}{{return}{initialStateEstimate}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{==}{NUMBER_CONSTANT}}{&&}{{i}{>=}{j}}}{)}{continue;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{maxGenerations}{<=}{NUMBER_CONSTANT}}{)}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}}{{{{this}{.}{maxGenerations}}{=}{maxGenerations}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{forward}}{)}{{{h}{=}{{-}{h}}}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{{remA}{>}{NUMBER_CONSTANT}}{)}{break;}}}
{AST_ROOT_SC2NF{{if}{(}{{remA}{>}{NUMBER_CONSTANT}}{)}{break;}}}
{AST_ROOT_SC2NF{{if}{(}{{remA}{>}{NUMBER_CONSTANT}}{)}{break;}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{*}{x}}{==}{NUMBER_CONSTANT}}{)}{{return}{Double.NaN}{;}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Chromosome}}{anotherChr}}{:}{population}{)}{{{}{{if}{(}{{this}{.}{isSame}{(}{anotherChr}{)}}{)}{{return}{anotherChr}{;}}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{y}{.}{equals}{(}{py}{)}}{)}{break;}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<}{NUMBER_CONSTANT}}{)}{{return}{NUMBER_CONSTANT}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{{boundaries}{==}{null}}{)}{{return}{x}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{{boundaries}{==}{null}}{)}{{return}{x}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{{negccov}{>}{negcovMax}}{)}{{{negccov}{=}{negcovMax}}{;}}}}
{AST_ROOT_SC2NF{{{}{{{numElements}{-=}{i}}{;}}{{if}{(}{front}{)}{{{startIndex}{+=}{i}}{;}}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{Method.SECANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{SecantSolver}{(}{{final}{double}{absoluteAccuracy}}{)}{{{}{{super}{(}{absoluteAccuracy}{,}{Method.SECANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{allowedSolutions}}{=}{allowedSolutions}}{;}}{{return}{{super}{.}{solve}{(}{maxEval}{,}{f}{,}{min}{,}{max}{,}{startValue}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowedSolutions}}{=}{AllowedSolutions.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowedSolutions}}{=}{AllowedSolutions.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{se}{[}{i}{]}}{=}{{FastMath}{.}{sqrt}{(}{rank}{)}}}{;}}{continue;}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{Double}{.}{isNaN}{(}{var}{)}}}{&&}{{var}{>}{Double.MIN_VALUE}}}{)}{{{}{{return}{{FastMath}{.}{sqrt}{(}{rank}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}{{return}{{createComplex}{(}{{FastMath}{.}{log}{(}{{abs}{()}}{)}}{,}{{FastMath}{.}{atan2}{(}{imaginary}{,}{real}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Complex.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isNaN}{()}}{||}{{rhs}{.}{isNaN}{()}}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{createComplex}{(}{{-}{real}}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isNaN}{()}}{||}{{Double}{.}{isNaN}{(}{rhs}{)}}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isNaN}{()}}{||}{{rhs}{.}{isNaN}{()}}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isNaN}{()}}{||}{{rhs}{.}{isNaN}{()}}}{)}{{{}{{return}{NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{createComplex}{(}{real}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rng}{.}{nextBoolean}{()}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{w}{.}{getReal}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{include}{(}{{Arrays}{.}{copyOf}{(}{x}{,}{x.length}{)}}{,}{NUMBER_CONSTANT}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{{this}{.}{parameters}}{.}{length}}}}{)}{{{}{{throw}{{new}{{IndexOutOfBoundsException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{{this}{.}{parameters}}{.}{length}}}}{)}{{{}{{throw}{{new}{{IndexOutOfBoundsException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{outerProduct}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getLInfDistance}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getL1Distance}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDistance}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{dotProduct}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ebeDivide}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ebeMultiply}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{subtract}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{{(}{{ArrayRealVector}}{)}{v}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{Method.PEGASUS}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{z}{.}{isNaN}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{Integer}}{)}{{node}{.}{getElement}{()}}}{)}}{.}{intValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{numberOfVariables}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{addEventHandler}{(}{handler}{,}{maxCheckInterval}{,}{convergence}{,}{maxIterationCount}{,}{{new}{{BrentSolver}}{(}{convergence}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolutions.ABOVE_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolutions.BELOW_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolutions.RIGHT_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{solution}{=}{{getSolution}{(}{solver}{,}{NUMBER_CONSTANT}{,}{f}{,}{left}{,}{right}{,}{AllowedSolutions.LEFT_SIDE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{maxEval}{,}{f}{,}{min}{,}{max}{,}{startValue}{,}{AllowedSolutions.ANY_SIDE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeAccuracy}{,}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{absoluteAccuracy}{)}{;}}{{{{this}{.}{allowed}}{=}{AllowedSolutions.ANY_SIDE}}{;}}{{{{this}{.}{method}}{=}{method}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{FastMath}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{dot}{=}{{dotProduct}{(}{v1}{,}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Solver}}{(}{singularValues}{,}{{getUT}{()}}{,}{{getV}{()}}{,}{{{getRank}{()}}{==}{{Math}{.}{max}{(}{m}{,}{n}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{tol}{=}{{FastMath}{.}{max}{(}{{{FastMath}{.}{max}{(}{m}{,}{n}{)}}{*}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{*}{EPS}}{,}{{FastMath}{.}{sqrt}{(}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setEntry}{(}{{row}{-}{NUMBER_CONSTANT}}{,}{{col}{-}{NUMBER_CONSTANT}}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setEntry}{(}{{index}{-}{NUMBER_CONSTANT}}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fsave}{=}{{fval}{.}{getEntry}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}{.}{dotProduct}{(}{crossP}{,}{{otherPlane}{.}{getNormal}{()}}{)}}{<}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{Vector3D}{.}{dotProduct}{(}{crossP}{,}{{otherPlane}{.}{getNormal}{()}}{)}}{<}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{double}{{scaled}{=}{{area}{*}{{Vector3D}{.}{dotProduct}{(}{facetB}{,}{{plane}{.}{getNormal}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{{n}{=}{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{d}{,}{{-}{{Vector3D}{.}{dotProduct}{(}{d}{,}{direction}{)}}}{,}{direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Vector3D}{.}{dotProduct}{(}{{(}{{Vector3D}}{)}{point}}{,}{w}{)}}{+}{originOffset}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setNormal}{(}{normal}{)}}{;}}{{{originOffset}{=}{{-}{{Vector3D}{.}{dotProduct}{(}{p}{,}{w}{)}}}}{;}}{{{setFrame}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Line}}{revert}{()}{{{}{{return}{{new}{{Line}}{(}{zero}{,}{{direction}{.}{negate}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{nRows}{<}{NUMBER_CONSTANT}}{||}{{nCols}{<}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS}{,}{nRows}{,}{nCols}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setResult}{(}{t}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{delta}{<=}{rLimit}}{)}}{||}{{(}{{delta}{<=}{absoluteAccuracy}}{)}}}{)}{{{}{{{setResult}{(}{s}{)}}{;}}{{return}{result}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{delta}{<=}{rLimit}}{)}}{||}{{(}{{delta}{<=}{absoluteAccuracy}}{)}}}{)}{{{}{{{setResult}{(}{t}{)}}{;}}{{return}{result}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{AbstractRealVector}{.}{unmodifiableRealVector}{(}{{u}{.}{copy}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{AbstractRealVector}{.}{unmodifiableRealVector}{(}{{u}{.}{copy}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{AbstractRealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{AbstractRealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{AbstractRealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{v}{=}{{AbstractRealVector}{.}{unmodifiableRealVector}{(}{u}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{new}{{ArrayRealVector}}{(}{dim}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{new}{{ArrayRealVector}}{(}{dim}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{x}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{z}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{d2}{=}{{w}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{coefficients}{.}{dotProduct}{(}{point}{)}}{+}{constantTerm}}{;}}{}}}}
{AST_ROOT_SC2NF{{{dist}{=}{{new}{{EmpiricalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistributionImpl}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistributionImpl}}{(}{binCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{(}{{NUMBER_CONSTANT}{+}{{Erf}{.}{erf}{(}{{dev}{/}{{(}{{standardDeviation}{*}{{FastMath}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setConvergenceChecker}{(}{{new}{{SimpleScalarValueChecker}}{(}{rel}{,}{abs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooManyEvaluationsException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{es}{.}{solve}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{solver}{.}{solve}{(}{{b}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{z}{,}{Complex.NaN}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{z}{,}{Complex.INF}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{cOut}{=}{{new}{{ExceptionContext}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{cOut}{=}{{new}{{ExceptionContext}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{c}{=}{{new}{{ExceptionContext}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{c}{=}{{new}{{ExceptionContext}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ExceptionContext}}{{c}{=}{{new}{{ExceptionContext}}{()}}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathUserException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathUserException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{MathUserException}}{e}}}
{AST_ROOT_SC2NF{{{MathUserException}}{e}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{x}{=}{{b}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{hatResiduals}{=}{{{{I}{.}{subtract}{(}{hat}{)}}{.}{operate}{(}{model.Y}{)}}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{objectiveValue}{=}{{computeObjectiveValue}{(}{{currentBest}{.}{getData}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{f}{=}{{computeObjectiveValue}{(}{{currentBest}{.}{getData}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{x}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{x}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{{x}{.}{combine}{(}{a}{,}{b}{,}{y}{)}}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{actual}{=}{{{x}{.}{combine}{(}{a}{,}{b}{,}{y}{)}}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotSame}{(}{STRING_CONSTANT}{,}{v1.data}{,}{{v_copy}{.}{getData}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{sum}{=}{NUMBER_CONSTANT}}{;}}{{for}{(}{{double}{coefficient}}{:}{{coefficients}{.}{getData}{()}}{)}{{{}{{{sum}{-=}{coefficient}}{;}}{}}}}{{return}{sum}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{ArrayRealVector}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{ArrayRealVector}}{(}{testVector}{)}}{)}}{.}{getData}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getStateEstimation}{()}{{{}{{return}{{stateEstimation}{.}{getData}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{y}{=}{{{u}{.}{add}{(}{{x}{.}{operate}{(}{b}{)}}{)}}{.}{getData}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{new}{{double}{[]}}{{{}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{{b}{.}{getData}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{}}}}{,}{{b}{.}{getData}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{e}{.}{getData}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{RealVector}}{{b}{=}{{calculateBeta}{()}}}{;}}{{return}{{b}{.}{getData}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{instanceof}{{ArrayRealVector}}}{)}{{{}{{return}{{{(}{{(}{{ArrayRealVector}}{)}{x}}{)}}{.}{getDataRef}{()}}{;}}{}}}{else}{{{}{{return}{{x}{.}{getData}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{ltI}{[}{i}{]}}{<}{absolutePositivityThreshold}}{)}{{{}{{throw}{{new}{{NonPositiveDefiniteMatrixException}}{(}{i}{,}{absolutePositivityThreshold}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getIntercept}{(}{{getSlope}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{FACT_LEN}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{FACT_LEN}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{FACT_LEN}{-}{NUMBER_CONSTANT}}}}}
{AST_ROOT_SC2NF{{{CholeskyDecomposition}}{{llt}{=}{{new}{{CholeskyDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CholeskyDecomposition}}{{llt}{=}{{new}{{CholeskyDecompositionImpl}}{(}{matrix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{CholeskyDecompositionImpl}}{(}{s}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{CholeskyDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{CholeskyDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{matrix}{=}{{EigenDecompositionImplTest}{.}{createTestMatrix}{(}{{new}{{Random}}{(}{NUMBER_CONSTANT}{)}}{,}{refValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{eig}{=}{{new}{{EigenDecompositionImpl}}{(}{C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecompositionImpl}}{{eig}{=}{{new}{{EigenDecompositionImpl}}{(}{C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecompositionImpl}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecompositionImpl}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecompositionImpl}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EigenDecompositionImpl}}{ed}}}
{AST_ROOT_SC2NF{{{EigenDecompositionImpl}}{ed}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecompositionImpl}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{max}{=}{val.length}}{;}}}
{AST_ROOT_SC2NF{{int}{{max}{=}{val.length}}{;}}}
{AST_ROOT_SC2NF{{int}{{max}{=}{val.length}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalArgumentException}}{()}}{;}}}
{AST_ROOT_SC2NF{{double}{slope}}}
{AST_ROOT_SC2NF{{double}{slope}}}
{AST_ROOT_SC2NF{{double}{alpha}}}
{AST_ROOT_SC2NF{{{{FieldDecompositionSolver}}{<}{{BigFraction}}{>}}{{pSolver}{=}{{{new}{{{FieldLUDecompositionImpl}}{<}{{BigFraction}}{>}}{(}{bigP}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{{FieldLUDecompositionImpl}}{<}{{Fraction}}{>}}{(}{m}{)}}{.}{getDeterminant}{()}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecompositionImpl}}{<}{{Fraction}}{>}}{(}{{createFractionMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{FieldLUDecompositionImpl}}{(}{{createFractionMatrix}{(}{singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecompositionImpl}}{<}{{Fraction}}{>}}{(}{{createFractionMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonousSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonousSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonMonotonousSequenceException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonousSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonousSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonMonotonousSequenceException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{jTj}{)}}{,}{threshold}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{LUDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{useLU}{?}{{{new}{{LUDecompositionImpl}}{(}{mA}{)}}{.}{getSolver}{()}}{:}{{{new}{{QRDecompositionImpl}}{(}{mA}{)}}{.}{getSolver}{()}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{LUDecompositionImpl}}{(}{XTOIX}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{inverse}{=}{{{{new}{{LUDecompositionImpl}}{(}{XTOIX}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{Rinv}{=}{{{{new}{{LUDecompositionImpl}}{(}{Raug}{)}}{.}{getSolver}{()}}{.}{getInverse}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{useLU}{?}{{{new}{{LUDecomposition}}{(}{mA}{)}}{.}{getSolver}{()}}{:}{{{new}{{QRDecompositionImpl}}{(}{mA}{)}}{.}{getSolver}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newXSampleData}{(}{x}{)}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newSampleData}{(}{data}{,}{nobs}{,}{nvars}{)}}{;}}{{{qr}{=}{{new}{{QRDecompositionImpl}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{x}{=}{{{{new}{{QRDecompositionImpl}}{(}{a}{)}}{.}{getSolver}{()}}{.}{solve}{(}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{x}{=}{{{{new}{{QRDecompositionImpl}}{(}{a}{)}}{.}{getSolver}{()}}{.}{solve}{(}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{QRDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData3x3Singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{QRDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testData3x3NonSingular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RectangularCholeskyDecomposition}}{{decomposition}{=}{{new}{{RectangularCholeskyDecompositionImpl}}{(}{covariance}{,}{small}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RectangularCholeskyDecomposition}}{{decomposition}{=}{{new}{{RectangularCholeskyDecompositionImpl}}{(}{covariance}{,}{small}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SingularValueDecomposition}}{{svd}{=}{{new}{{SingularValueDecompositionImpl}}{(}{rm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{SingularValueDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testSquare}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{SingularValueDecompositionImpl}}{(}{m}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{solver}{=}{{{new}{{SingularValueDecompositionImpl}}{(}{{MatrixUtils}{.}{createRealMatrix}{(}{testSquare}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{g0Positive}{=}{{g0}{>=}{NUMBER_CONSTANT}}}{;}}{{{nextAction}{=}{EventHandler.CONTINUE}}{;}}{}}}}
{AST_ROOT_SC2NF{{{nextAction}{=}{EventHandler.CONTINUE}}{;}}}
{AST_ROOT_SC2NF{{{FirstOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{final}{{FirstOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{final}{{FirstOrderDifferentialEquations}}{equations}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{writeDouble}{(}{{{polynoms}{[}{k}{]}}{[}{l}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{e}{=}{{{{polynoms}{[}{currentDegree}{]}}{[}{i}{]}}{/}{{scale}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{{new}{{int}{[]}}{{{}{m}{,}{nColB}{}}}}{)}}}
{AST_ROOT_SC2NF{{bp}{=}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{m}{)}}}}}
{AST_ROOT_SC2NF{{bp}{=}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{m}{)}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{array}{=}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{length}{)}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{(}{{{T}}{[]}{[]}}{)}{{Array}{.}{newInstance}{(}{{zero}{.}{getClass}{()}}{,}{{new}{{int}{[]}}{{{}{dimension}{,}{dimension}{}}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{Array}{.}{newInstance}{(}{{{field}{.}{getZero}{()}}{.}{getClass}{()}}{,}{length}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{null}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{,}{null}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{,}{null}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{,}{null}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{,}{null}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{m}{,}{b}{,}{null}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{b}{,}{null}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{b}{,}{x0}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{b}{,}{x0}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{solver}{.}{solve}{(}{a}{,}{b}{,}{null}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{solver}{.}{solve}{(}{a}{,}{b}{,}{x}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{nSteps}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS}{,}{name}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED}{,}{n}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArithmeticException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ParseException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f1}{.}{divide}{(}{f2}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{ArithmeticException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getN}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC}{,}{{getN}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INDEX_NOT_POSITIVE}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE}{,}{initialCapacity}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{expansionMode}{!=}{MULTIPLICATIVE_MODE}}{&&}{{expansionMode}{!=}{ADDITIVE_MODE}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.UNSUPPORTED_EXPANSION_MODE}{,}{expansionMode}{,}{MULTIPLICATIVE_MODE}{,}{STRING_CONSTANT}{,}{ADDITIVE_MODE}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createArrayIndexOutOfBoundsException}{(}{LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX}{,}{index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ClassCastException}}{ex}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES}{,}{{{v}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MathException}}{{cause}{=}{{new}{{MathConfigurationException}}{(}{inMsg}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{evaluations}{.}{incrementCount}{()}}{;}}{{{equations}{.}{computeDerivatives}{(}{t}{,}{y}{,}{yDot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{equations}}{=}{equations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allocateInterpolatedArrays}{(}{y.length}{,}{primaryMapper}{,}{secondaryMappers}{)}}{;}}}
{AST_ROOT_SC2NF{{{allocateInterpolatedArrays}{(}{{-}{NUMBER_CONSTANT}}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{STRING_CONSTANT}{+}{mean}{+}{STRING_CONSTANT}{+}{p}{+}{STRING_CONSTANT}{+}{{ex}{.}{getMessage}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathException}}{ex}}{)}{{{}{{{Assert}{.}{fail}{(}{{STRING_CONSTANT}{+}{mean}{+}{STRING_CONSTANT}{+}{x}{+}{STRING_CONSTANT}{+}{{ex}{.}{getMessage}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonPositiveDefiniteLinearOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonSquareLinearOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonPositiveDefiniteLinearOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonSquareLinearOperatorException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{str}{=}{{filePointer}{.}{readLine}{()}}}{)}}{==}{null}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createEOFException}{(}{LocalizedFormats.URL_CONTAINS_NO_DATA}{,}{valuesFileURL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{empiricalDistribution}{==}{null}}{)}}{||}{{(}{{{{empiricalDistribution}{.}{getBinStats}{()}}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.DIGEST_NOT_INITIALIZED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{sampleStats}{.}{getN}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createEOFException}{(}{LocalizedFormats.URL_CONTAINS_NO_DATA}{,}{url}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{throw}{{new}{{MathRuntimeException}}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{EOFException}}{eof}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{EOFException}}{eof}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{BigFraction}}{>}}{coefficients}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{BigFraction}}{>}}{coefficients}}}
{AST_ROOT_SC2NF{{double}{{y}{=}{{{x}{*}{NUMBER_CONSTANT}}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{FastMath}{.}{abs}{(}{m}{)}}{<=}{tol}}{||}{{MathUtils}{.}{equals}{(}{fb}{,}{NUMBER_CONSTANT}{)}}}{)}{{{}{{return}{b}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{MathUtils}{.}{equals}{(}{binomial}{,}{{jacobi}{.}{value}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{mode}{==}{StepNormalizerMode.MULTIPLES}}{&&}{{MathUtils}{.}{equals}{(}{nextTime}{,}{lastTime}{,}{NUMBER_CONSTANT}{)}}}{)}{{{}{{{nextTime}{+=}{h}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertTrue}{(}{{MathUtils}{.}{equals}{(}{{out}{[}{i}{]}}{,}{{expectedSample}{[}{i}{]}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{MathUtils}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distanceInf}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{MathUtils}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distance}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{MathUtils}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distance}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{MathUtils}{.}{equals}{(}{NUMBER_CONSTANT}{,}{{MathUtils}{.}{distance1}{(}{p1}{,}{p2}{)}}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{MathUtils}{.}{compareTo}{(}{entry}{,}{minValue}{,}{maxUlps}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{isLastStep}{=}{{isLastStep}{||}{{MathUtils}{.}{equals}{(}{currentT}{,}{tEnd}{,}{NUMBER_CONSTANT}{)}}}}{;}}}
{AST_ROOT_SC2NF{{!}{{MathUtils}{.}{equalsIncludingNaN}{(}{{expected}{[}{i}{]}}{,}{{observed}{[}{i}{]}}{,}{tolerance}{)}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{value}}{:}{values}{)}{{{}{{if}{(}{{MathUtils}{.}{equals}{(}{value}{,}{x}{,}{epsilon}{)}}{)}{{{}{return;}{}}}}{}}}}}
{AST_ROOT_SC2NF{{MathUtils}{.}{equalsIncludingNaN}{(}{{stat}{.}{getN}{()}}{,}{{getN}{()}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{MathUtils}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{epsilon}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{MathUtils}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{maxUlps}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{columnsToDrop}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{parameters}}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{MathUtils}{.}{copyOf}{(}{parameters}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathUtils}{.}{checkOrder}{(}{knots}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getOrderOfRegressors}{()}{{{}{{return}{{MathUtils}{.}{copyOf}{(}{vorder}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{include}{(}{{MathUtils}{.}{copyOf}{(}{x}{,}{x.length}{)}}{,}{NUMBER_CONSTANT}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathUtils}{.}{checkOrder}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{wrong}{,}{previous}{,}{index}{,}{MathUtils.OrderDirection.INCREASING}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{MathUtils}{.}{checkOrder}{(}{xval}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{d}{=}{{MathUtils}{.}{copyOf}{(}{{direc}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MathUtils}{.}{checkOrder}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathUtils}{.}{distance}{(}{point}{,}{{p}{.}{getPoint}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{arzneg}{=}{{selectColumns}{(}{arz}{,}{{MathUtils}{.}{copyOf}{(}{arReverseIndex}{,}{mu}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{MathUtils}{.}{checkOrder}{(}{x}{,}{MathUtils.OrderDirection.INCREASING}{,}{true}{,}{abort}{)}}{;}}}
{AST_ROOT_SC2NF{{{MathUtils}{.}{sortInPlace}{(}{xNew}{,}{yNew}{)}}{;}}}
{AST_ROOT_SC2NF{{{MathUtils}{.}{sortInPlace}{(}{{this}{.}{x}}{,}{{this}{.}{y}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getSizes}{()}{{{}{{return}{{MathUtils}{.}{copyOf}{(}{size}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{size}}{=}{{MathUtils}{.}{copyOf}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{getCounts}{()}{{{}{{return}{{MathUtils}{.}{copyOf}{(}{counter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{expectedValue}{()}}{,}{{variance}{.}{evaluate}{(}{testArray}{,}{{MathUtils}{.}{normalizeArray}{(}{identicalWeightsArray}{,}{testArray.length}{)}}{,}{NUMBER_CONSTANT}{,}{testArray.length}{)}}{,}{{getTolerance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{MathUtils}{.}{gcd}{(}{numerator}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{d}{=}{{MathUtils}{.}{gcd}{(}{num}{,}{den}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{lcm}{=}{{FastMath}{.}{abs}{(}{{mulAndCheck}{(}{{a}{/}{{gcd}{(}{a}{,}{b}{)}}}{,}{b}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{lcm}{=}{{FastMath}{.}{abs}{(}{{mulAndCheck}{(}{{a}{/}{{gcd}{(}{a}{,}{b}{)}}}{,}{b}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{MathUtils}{.}{binomialCoefficient}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{MathUtils}{.}{binomialCoefficient}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{ArithmeticsUtils}{.}{binomialCoefficient}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{ArithmeticsUtils}{.}{gcd}{(}{numerator}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{d}{=}{{ArithmeticsUtils}{.}{gcd}{(}{num}{,}{den}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{ArithmeticsUtils}{.}{binomialCoefficient}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MathUtils}{.}{sign}{(}{y0}{)}}{+}{{MathUtils}{.}{sign}{(}{ym}{)}}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{FastMath}{.}{abs}{(}{x}{)}}{<}{NUMBER_CONSTANT}}{?}{NUMBER_CONSTANT}{:}{{{FastMath}{.}{sin}{(}{x}{)}}{/}{x}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{MathUtils.EPSILON}}{)}{{{}{{return}{zero}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{<}{MathUtils.SAFE_MIN}}{)}{{{}{{return}{{distance}{(}{line.zero}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{tol}{=}{{FastMath}{.}{max}{(}{{m}{*}{{singularValues}{[}{NUMBER_CONSTANT}{]}}{*}{EPS}}{,}{{FastMath}{.}{sqrt}{(}{MathUtils.SAFE_MIN}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{d}{>}{{-}{MathUtils.SAFE_MIN}}}{&&}{{d}{<}{MathUtils.SAFE_MIN}}}{)}{{{}{{return}{d}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{eps}{=}{{NUMBER_CONSTANT}{*}{rows}{*}{columns}{*}{MathUtils.EPSILON}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{diag}{)}}{<}{MathUtils.SAFE_MIN}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{diag}{)}}{<}{MathUtils.SAFE_MIN}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ZERO_DENOMINATOR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LevenbergMarquardtOptimizer}}{{optimizer}{=}{{new}{{LevenbergMarquardtOptimizer}}{(}{initialStepBoundFactor}{,}{costRelativeTolerance}{,}{parRelativeTolerance}{,}{orthoTolerance}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{indefinite}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{distinct}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{repeated}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{m}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{createTestMatrix}{(}{r}{,}{bigValues}{)}}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{t}{.}{getMainDiagonalRef}{()}}{,}{{t}{.}{getSecondaryDiagonalRef}{()}}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{MathUtils.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{tmp}{)}}{>}{MathUtils.EPSILON}}{)}{{{}{{{w}{=}{{{(}{{di}{*}{w}}{)}}{/}{dpi}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{numberOfVariables}{,}{includeConstant}{,}{MathUtils.EPSILON}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastMath}{.}{abs}{(}{sumXX}{)}}{>}{MathUtils.SAFE_MIN}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{OutOfRangeException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{numberOfInterpolationPoints}{,}{null}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopfitness}}{=}{stopfitness}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopfitness}}{=}{stopFitness}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isInfinite}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isNaN}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isInfinite}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isNaN}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isInfinite}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isNaN}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{unitize}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getLInfNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getL1Norm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getNorm}{()}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{bounds}{=}{{{(}{{(}{{EmpiricalDistributionImpl}}{)}{empiricalDistribution2}}{)}}{.}{getGeneratorUpperBounds}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FieldDecompositionSolver}}{{solver}}{;}}}
{AST_ROOT_SC2NF{{double}{{floatn}{=}{{(}{double}{)}{v.length}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{eventY}{=}{{interpolator}{.}{getInterpolatedState}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{yTmp}{=}{{new}{{double}{[}}{y0.length}{]}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{BetaDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BetaDistributionImpl}}{{betaDistribution}{=}{{new}{{BetaDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BetaDistribution}}{{d}{=}{{new}{{BetaDistributionImpl}}{(}{alpha}{,}{beta}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BetaDistribution}}{{d}{=}{{new}{{BetaDistributionImpl}}{(}{alpha}{,}{beta}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{BinomialDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{BinomialDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{CauchyDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquaredDistribution}}{{d}{=}{{new}{{ChiSquaredDistributionImpl}}{(}{df}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{ChiSquaredDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ChiSquaredDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{ChiSquaredDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{ChiSquaredDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FDistributionImpl}}{{fd}{=}{{new}{{FDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{FDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GammaDistribution}}{{distribution}{=}{{new}{{GammaDistributionImpl}}{(}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GammaDistribution}}{{distribution}{=}{{new}{{GammaDistributionImpl}}{(}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ExponentialDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{ExponentialDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FDistribution}}{{fdist}{=}{{new}{{FDistributionImpl}}{(}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{gamma}{=}{{new}{{GammaDistributionImpl}}{(}{{degreesOfFreedom}{/}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{solverAbsoluteAccuracy}{=}{inverseCumAccuracy}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HypergeometricDistribution}}{{dist}{=}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{HypergeometricDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistribution}}{{normal}{=}{{new}{{NormalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistribution}}{{distribution}{=}{{new}{{NormalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistribution}}{{d}{=}{{new}{{NormalDistributionImpl}}{(}{mean}{,}{sd}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{PascalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{PascalDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{normal}{=}{{new}{{NormalDistributionImpl}}{(}{p}{,}{{FastMath}{.}{sqrt}{(}{p}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{tDistribution}{=}{{new}{{TDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{FastMath}{.}{sqrt}{(}{{{getMeanSquareError}{()}}{*}{{(}{{{(}{{NUMBER_CONSTANT}{/}{{(}{double}{)}{n}}}{)}}{+}{{{(}{{xbar}{*}{xbar}}{)}}{/}{sumXX}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{distribution}{=}{{new}{{TDistributionImpl}}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{distribution}{=}{{new}{{TDistributionImpl}}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{td}{=}{{new}{{TDistributionImpl}}{(}{df}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{new}{{TDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TDistributionImpl}}{{td}{=}{{new}{{TDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{td}{.}{cumulativeProbability}{(}{NUMBER_CONSTANT}{)}}{;}}{{{td}{.}{cumulativeProbability}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{TDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{WeibullDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{quartiles}{=}{{TestUtils}{.}{getDistributionQuartiles}{(}{{new}{{TDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{poissonDistribution}{=}{{new}{{PoissonDistributionImpl}}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{mean}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{dist}{.}{getMean}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{NotStrictlyPositiveException}}{.}{class}}}{)}}{public}{void}{testNegativeMean}{()}{{{}{{{new}{{PoissonDistributionImpl}}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{IntegerDistribution}}{makeDistribution}{()}{{{}{{return}{{new}{{PoissonDistributionImpl}}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{dist}{=}{{new}{{ZipfDistributionImpl}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{windowSize}{<}{NUMBER_CONSTANT}}{)}{{{}{{if}{(}{{windowSize}{!=}{INFINITE_WINDOW}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE}{,}{windowSize}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{sign}{>=}{NUMBER_CONSTANT}}{&&}{{magnitude}{==}{Long.MIN_VALUE}}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.OVERFLOW}{)}}{;}}{}}}{else}{{{}{{return}{{(}{long}{)}{{-}{magnitude}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{sign}{>=}{NUMBER_CONSTANT}}{&&}{{magnitude}{==}{Integer.MIN_VALUE}}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.OVERFLOW}{)}}{;}}{}}}{else}{{{}{{return}{{(}{int}{)}{{-}{magnitude}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{c}{.}{isAssignableFrom}{(}{{{UnivariateRealFunction}}{.}{class}}{)}}{)}{{{}{{return}{{new}{{Sin}}{()}}{;}}{}}}{else}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{c}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{XMinus5Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{ParametricUnivariateRealFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ParametricUnivariateRealFunction}}{{sif}{=}{{new}{{SimpleInverseFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{func}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{f}{=}{{new}{{Gaussian}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{f}{=}{{new}{{Gaussian}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{mapToSelf}{(}{{{UnivariateRealFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{map}{(}{{{UnivariateRealFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{i}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{p}{=}{{interpolator}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{f}{=}{{new}{{Sigmoid}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{p}{=}{{interpolator}{.}{interpolate}{(}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{dfdx}{=}{{f}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealFunction}}{{lsf}{=}{{new}{{LineSearchFunction}}{(}{searchDirection}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{function}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{mapToSelf}{(}{{{UnivariateRealFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{map}{(}{{{UnivariateRealFunction}}{function}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MonitoredFunction}{(}{{{UnivariateRealFunction}}{f}}{)}{{{}{{{callsCount}{=}{NUMBER_CONSTANT}}{;}}{{{{this}{.}{f}}{=}{f}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{dSpline}{=}{{spline}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MultivariateRealFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{{MultivariateRealFunction}}{func}}}
{AST_ROOT_SC2NF{{{MultivariateRealFunction}}{{coll}{=}{{FunctionUtils}{.}{collector}{(}{bi}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MultivariateRealFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{final}{{MultivariateRealFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateRealFunction}}{func}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateRealFunction}}{func}}}
{AST_ROOT_SC2NF{{{MultivariateRealFunction}}{func}}}
{AST_ROOT_SC2NF{{final}{{MultivariateRealFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{final}{{MultivariateRealFunction}}{evaluationFunction}}}
{AST_ROOT_SC2NF{{{MultivariateRealFunction}}{func}}}
{AST_ROOT_SC2NF{{public}{KeplerHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{{{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{KeplerHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{{{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{KeplerStepHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{{{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{resetEvaluations}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{KeplerStepHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{{{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{KeplerHandler}{(}{{{TestProblem3}}{pb}}{)}{{{}{{{{this}{.}{pb}}{=}{pb}}{;}}{{{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateVectorialFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{MultivariateVectorialFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{MultivariateVectorialFunction}}{function}}}
{AST_ROOT_SC2NF{{final}{{MultivariateVectorialFunction}}{function}}}
{AST_ROOT_SC2NF{{#}{optimize}{(}{{int}}{,}{{{MultivariateVectorialFunction}}}{,}{{{double}{[]}}}{,}{{{double}{[]}}}{,}{{{double}{[]}}}{)}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorialFunction}}{problem}}}
{AST_ROOT_SC2NF{{{result}{=}{{transformer}{.}{inversetransform}{(}{f}{,}{min}{,}{max}{,}{N}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{forward}{)}{{{}{{{temp}{=}{{transform2}{(}{temp}{)}}}{;}}{}}}{else}{{{}{{{temp}{=}{{inversetransform2}{(}{temp}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{dResult}{[]}{=}{{transformer}{.}{inversetransform}{(}{dY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{o}{[]}}}
{AST_ROOT_SC2NF{{double}{d}{[]}}}
{AST_ROOT_SC2NF{{{Complex}}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{{Complex}}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{int}{x}{[]}}}
{AST_ROOT_SC2NF{{double}{x}{[]}}}
{AST_ROOT_SC2NF{{int}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{double}{f}{[]}}}
{AST_ROOT_SC2NF{{new}{{Fraction}}{(}{{{(}{{{(}{{{Math}{.}{abs}{(}{w}{)}}{*}{d}}{)}}{+}{n}}{)}}{*}{{MathUtils}{.}{sign}{(}{w}{)}}}{,}{d}{)}}}
{AST_ROOT_SC2NF{{final}{int}{bits}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeed}{(}{{System}{.}{currentTimeMillis}{()}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{x}}}
{AST_ROOT_SC2NF{{{p}{=}{{dist}{.}{cumulativeProbability}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ContinuousDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{ContinuousDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{new}{{FastFourierTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{new}{{FastFourierTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{new}{{FastFourierTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}}{{transformer}{=}{{new}{{FastFourierTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastCosineTransformer}}{{transformer}{=}{{new}{{FastCosineTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastCosineTransformer}}{{transformer}{=}{{new}{{FastCosineTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorialOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{{}{{{DifferentiableMultivariateVectorialOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{true}{)}}}{;}}{{{checkUnsolvableProblem}{(}{optimizer}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateVectorialOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{public}{HarmonicFitter}{(}{{final}{{DifferentiableMultivariateVectorialOptimizer}}{optimizer}}{)}{{{}{{super}{(}{optimizer}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateVectorialOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{public}{GaussianFitter}{(}{{{DifferentiableMultivariateVectorialOptimizer}}{optimizer}}{)}{{{}{{super}{(}{optimizer}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{BaseMultivariateRealOptimizer}}{<}{{FUNC}}{>}}{optimizer}}}
{AST_ROOT_SC2NF{{{MultivariateRealOptimizer}}{optim}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateRealOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{final}{{MultivariateRealOptimizer}}{optimizer}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setSeed}{(}{{int}{seed}}{)}{{{}{{{ran}{.}{setSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rand}{==}{null}}{)}{{{}{{{rand}{=}{{new}{{JDKRandomGenerator}}{()}}}{;}}{}}}}{{{rand}{.}{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{new}{{FastSineTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{new}{{FastSineTransformer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{dist}{.}{inverseCumulativeProbability}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInverseCumulativeTestValues}{(}{{new}{{int}{[]}}{{{}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInverseCumulativeTestValues}{(}{{new}{{int}{[]}}{{{}{{Integer.MAX_VALUE}{-}{NUMBER_CONSTANT}}{,}{{Integer.MAX_VALUE}{-}{NUMBER_CONSTANT}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getNumberOfTrials}{()}}{*}{{getProbabilityOfSuccess}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE}{,}{{Integer}{.}{valueOf}{(}{f.length}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{o.length}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}{,}{{Integer}{.}{valueOf}{(}{o.length}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isPowerOf2}{(}{d.length}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING}{,}{{Integer}{.}{valueOf}{(}{d.length}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO}{,}{{Integer}{.}{valueOf}{(}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{FastFourierTransformer}{.}{isPowerOf2}{(}{n}{)}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.NOT_POWER_OF_TWO}{,}{{Integer}{.}{valueOf}{(}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{FastFourierTransformer}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{FastFourierTransformer}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{double}{[]}}{{data}{=}{{FastFourierTransformer}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}{{return}{{inverseTransform}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{double}{[]}}{{data}{=}{{FastFourierTransformer}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}{{return}{{transform}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{unscaled}{=}{{fht}{(}{{FastFourierTransformer}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{fht}{(}{{FastFourierTransformer}{.}{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{data}{=}{{sample}{(}{f}{,}{min}{,}{max}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fst}{(}{data}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fst}{(}{f}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{s}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{n}}{)}}}{;}}{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fst}{(}{data}{)}}{,}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{s}{=}{{FastMath}{.}{sqrt}{(}{{NUMBER_CONSTANT}{/}{f.length}}{)}}}{;}}{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fst}{(}{f}{)}}{,}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x2}{,}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{x2.length}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{scaleArray}{(}{transformed}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{scaleArray}{(}{{fft}{(}{f}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{scaleArray}{(}{{fft}{(}{data}{,}{true}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{scaleArray}{(}{{fft}{(}{f}{,}{true}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{s}{=}{{NUMBER_CONSTANT}{/}{{FastMath}{.}{sqrt}{(}{f.length}{)}}}}{;}}{{return}{{scaleArray}{(}{{fft}{(}{f}{)}}{,}{s}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{scaleArray}{(}{{fft}{(}{data}{,}{false}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{scaleArray}{(}{{fft}{(}{f}{,}{false}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{FastFourierTransformer}{.}{scaleArray}{(}{x}{,}{{FastMath}{.}{sqrt}{(}{{x.length}{/}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fct}{(}{f}{)}}{,}{s1}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fct}{(}{f}{)}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{unscaled}{,}{{NUMBER_CONSTANT}{/}{n}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{FastFourierTransformer}{.}{scaleArray}{(}{{fht}{(}{f}{)}}{,}{{NUMBER_CONSTANT}{/}{f.length}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{double}{diag}}{:}{rDiag}{)}{{{}{{if}{(}{{diag}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{DecompositionSolver}}{getSolver}{()}{{{}{{return}{{new}{{Solver}}{(}{qrt}{,}{rDiag}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NonMonotonicSequenceException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealSolver}}{solver}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealSolver}}{solver}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolverUtils}{.}{verifyInterval}{(}{lower}{,}{upper}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{super}{.}{solve}{(}{maxEval}{,}{f}{,}{{UnivariateRealSolverUtils}{.}{midpoint}{(}{min}{,}{max}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealSolver}}{lineSearchSolver}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealSolver}}{lineSearchSolver}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{RiddersSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{BrentSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{BrentSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{new}{{MullerSolver2}}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{UnivariateRealSolverUtils}{.}{solve}{(}{toSolve}{,}{lowerBound}{,}{upperBound}{,}{{getSolverAbsoluteAccuracy}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{solver}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealSolver}}{{solver}{=}{{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealSolver}}{{solver}{=}{{new}{{RegulaFalsiSolver}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealSolver}}{solver}}}
{AST_ROOT_SC2NF{{int}{populationLimit}}}
{AST_ROOT_SC2NF{{{Chromosome}}{chromosome}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{chromosomes}}}
{AST_ROOT_SC2NF{{int}{arity}}}
{AST_ROOT_SC2NF{{{Population}}{population}}}
{AST_ROOT_SC2NF{{{Chromosome}}{original}}}
{AST_ROOT_SC2NF{{{Chromosome}}{another}}}
{AST_ROOT_SC2NF{{{Chromosome}}{another}}}
{AST_ROOT_SC2NF{{int}{l}}}
{AST_ROOT_SC2NF{{{{java.util.List}}{<}{{Double}}{>}}{chromosomeRepresentation}}}
{AST_ROOT_SC2NF{{{Chromosome}}{another}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{T}}{>}}{sequence}}}
{AST_ROOT_SC2NF{{{{Double}}{[]}}{representation}}}
{AST_ROOT_SC2NF{{{Population}}{current}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{random}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{maxGenerations}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.TOO_SMALL_GENERATION_COUNT}{,}{maxGenerations}{,}{NUMBER_CONSTANT}{,}{true}{)}}{;}}{}}}}{{{{this}{.}{maxGenerations}}{=}{maxGenerations}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{elitismRate}{<}{NUMBER_CONSTANT}}{||}{{elitismRate}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{OutOfRangeException}}{(}{LocalizedFormats.OUT_OF_RANGE_ELITISM_RATE}{,}{elitismRate}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{partialDerivatives}{=}{{new}{{{BivariateRealFunction}}{[}{[}{[}}{NUMBER_CONSTANT}{]}{[}{lastI}{]}{[}{lastJ}{]}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealFunction}}{{div}{=}{{new}{{Divide}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealFunction}}{{bi}{=}{{new}{{Add}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealFunction}}{{bi}{=}{{new}{{Add}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{BivariateRealFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{BivariateRealFunction}}{combiner}}}
{AST_ROOT_SC2NF{{final}{{BivariateRealFunction}}{combiner}}}
{AST_ROOT_SC2NF{{final}{{BivariateRealFunction}}{combiner}}}
{AST_ROOT_SC2NF{{final}{{IterativeLinearSolverEvent}}{{event}{=}{{createEvent}{(}{state}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{x}{.}{ebeMultiply}{(}{diag}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{InvertibleRealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{InvertibleRealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{InvertibleRealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{InvertibleRealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{InvertibleRealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{InvertibleRealLinearOperator}}{{m}{=}{{JacobiPreconditioner}{.}{create}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{f.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{SmoothingPolynomialBicubicSplineInterpolator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{SmoothingPolynomialBicubicSplineInterpolator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{SmoothingPolynomialBicubicSplineInterpolator}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateRealInterpolator}}{{interpolator}{=}{{new}{{MicrosphereInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MultivariateRealInterpolator}}{{interpolator}{=}{{new}{{MicrosphereInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{LinearInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{interpolator}{=}{{new}{{NevilleInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{interpolator}{=}{{new}{{NevilleInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{interpolator}{=}{{new}{{NevilleInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{BicubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{BicubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{BicubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{interpolator}{=}{{new}{{DividedDifferenceInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{interpolator}{=}{{new}{{DividedDifferenceInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{interpolator}{=}{{new}{{DividedDifferenceInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TrivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{TricubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TrivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{TricubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TrivariateRealGridInterpolator}}{{interpolator}{=}{{new}{{TricubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealInterpolator}}{{i}{=}{{new}{{SplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{f.length}{)}}{;}}}
{AST_ROOT_SC2NF{{{roots}{.}{computeOmega}{(}{{-}{f.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegrator}}{{integrator}{=}{{new}{{TrapezoidIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegrator}}{{integrator}{=}{{new}{{TrapezoidIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{LegendreGaussIntegrator}}{{integrator}{=}{{new}{{LegendreGaussIntegrator}}{(}{n}{,}{UnivariateRealIntegratorImpl.DEFAULT_RELATIVE_ACCURACY}{,}{UnivariateRealIntegratorImpl.DEFAULT_ABSOLUTE_ACCURACY}{,}{UnivariateRealIntegratorImpl.DEFAULT_MIN_ITERATIONS_COUNT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegrator}}{{integrator}{=}{{new}{{SimpsonIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegrator}}{{integrator}{=}{{new}{{SimpsonIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegrator}}{{integrator}{=}{{new}{{RombergIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealIntegrator}}{{integrator}{=}{{new}{{RombergIntegrator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateRealIntegratorImpl}}{baseIntegrator}}}
{AST_ROOT_SC2NF{{{}{{{allocArrays}{()}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ISAACRandom}{(}{{long}{seed}}{)}{{{}{{{allocArrays}{()}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{incMoment}{)}{{{}{{{moment}{.}{increment}{(}{d}{)}}{;}}{}}}{else}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalStateException}{(}{LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{fact2}{=}{{{(}{n}{)}}{/}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{fact2}{=}{{{(}{n}{)}}{/}{{(}{{NUMBER_CONSTANT}{+}{n}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{init}{(}{{double}{t0}}{,}{{{double}{[]}}{y0}}{,}{{double}{t}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{t}{.}{transform}{(}{input}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{(}{{nvars}{+}{NUMBER_CONSTANT}}{)}}{*}{nobs}}{!=}{data.length}}{)}{{{}{{throw}{{MathRuntimeException}{.}{createIllegalArgumentException}{(}{LocalizedFormats.INVALID_REGRESSION_ARRAY}{,}{data.length}{,}{nobs}{,}{nvars}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistributionImpl}}{(}{binCount}{,}{randomData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{computeDistribution}{(}{EmpiricalDistributionImpl.DEFAULT_BIN_COUNT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EmpiricalDistributionImpl}}{{dist}{=}{{new}{{EmpiricalDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{EmpiricalDistributionImpl}}{()}}{.}{load}{(}{{(}{{File}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{EmpiricalDistributionImpl}}{()}}{.}{load}{(}{{(}{{URL}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{EmpiricalDistributionImpl}}{()}}{.}{load}{(}{{(}{{double}{[]}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EmpiricalDistribution}}{{dist}{=}{{new}{{EmpiricalDistributionImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{EmpiricalDistributionImpl}}{()}}{.}{load}{(}{x}{)}}{;}}}
{AST_ROOT_SC2NF{{dataRI}{=}{{new}{{double}{[]}{[]}}{{{}{{Arrays}{.}{copyOf}{(}{f}{,}{f.length}{)}}{,}{{new}{{double}{[}}{f.length}{]}}{}}}}}}
{AST_ROOT_SC2NF{{dataRI}{=}{{new}{{double}{[]}{[]}}{{{}{{Arrays}{.}{copyOf}{(}{f}{,}{f.length}{)}}{,}{{new}{{double}{[}}{f.length}{]}}{}}}}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{double}{[]}}{>}}{categoryData}}}
{AST_ROOT_SC2NF{{boolean}{exactPValue}}}
{AST_ROOT_SC2NF{{double}{{dResult}{[]}{=}{{transformer}{.}{inverseTransform}{(}{dY}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{dResult}{[]}{=}{{transformer}{.}{transform}{(}{dX}{)}}}{;}}}
{AST_ROOT_SC2NF{{protected}{BaseAbstractMultivariateSimpleBoundsOptimizer}{(}{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{UnivariateRealPointValuePair}}{[]}}{{optima}{=}{{optimizer}{.}{getOptima}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{SimplexOptimizer}{(}{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RealPointValuePair}}{expected}}}
{AST_ROOT_SC2NF{{protected}{AbstractScalarDifferentiableOptimizer}{(}{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{UnivariateRealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{UnivariateRealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{RealPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{RealPointValuePair}}{[]}}{points}}}
{AST_ROOT_SC2NF{{{RealPointValuePair}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Comparator}}{<}{{RealPointValuePair}}{>}}{comparator}}}
{AST_ROOT_SC2NF{{{ChiSquareTest}}{{chiSquareTest}{=}{{new}{{ChiSquareTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math.stat.inference.ChiSquareTestImpl}}{{csti}{=}{{new}{{org.apache.commons.math.stat.inference.ChiSquareTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math.stat.inference.ChiSquareTestImpl}}{{csti}{=}{{new}{{org.apache.commons.math.stat.inference.ChiSquareTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquareTest}}{{chiSquareTest}{=}{{new}{{ChiSquareTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialPointValuePair}}{optimum}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{VectorialPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{VectorialPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{VectorialPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{VectorialPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{{ConvergenceChecker}}{<}{{VectorialPointValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{protected}{AbstractLeastSquaresOptimizer}{(}{{{{ConvergenceChecker}}{<}{{VectorialPointValuePair}}{>}}{checker}}{)}{{{}{{super}{(}{checker}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{optimizer}{=}{{new}{{SimplexOptimizer}}{(}{{new}{{SimpleRealPointChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{underlying}{=}{{new}{{SimplexOptimizer}}{(}{{new}{{SimpleScalarValueChecker}}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{BrentSolver}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{BrentSolver}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{BrentSolver}}{()}}{,}{preconditioner}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{optimizer}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{optimizer}{=}{{new}{{SimplexOptimizer}}{(}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NonLinearConjugateGradientOptimizer}}{{underlying}{=}{{new}{{NonLinearConjugateGradientOptimizer}}{(}{ConjugateGradientFormula.POLAK_RIBIERE}{,}{{new}{{SimpleScalarValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{lambda}{,}{inputSigma}{,}{boundaries}{,}{maxIterations}{,}{stopFitness}{,}{isActiveCMA}{,}{diagonalOnly}{,}{checkFeasableCount}{,}{random}{,}{generateStatistics}{,}{{new}{{SimpleScalarValueChecker}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{SimpleScalarValueChecker}}{(}{rel}{,}{abs}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorOptimizer}}{{underlyingOptimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{true}{,}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorOptimizer}}{{underlyingOptimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{true}{,}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GaussNewtonOptimizer}}{{optimizer}{=}{{new}{{GaussNewtonOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LevenbergMarquardtOptimizer}}{{optimizer}{=}{{new}{{LevenbergMarquardtOptimizer}}{(}{{new}{{SimpleVectorialValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{FastSineTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FastSineTransformer}}{{transformer}{=}{{FastSineTransformer}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION}{,}{minStep}{,}{{FastMath}{.}{abs}{(}{h}{)}}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{variablesToInclude}{==}{null}}{||}{{variablesToInclude.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{MathIllegalArgumentException}}{(}{LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOTALLOWED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{optimizer}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{underlying}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{underlying}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateRealOptimizer}}{{underlying}{=}{{new}{{BrentOptimizer}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}{[]}}{loadLnMant}{()}{{{}{{return}{{LN_MANT}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpFracB}{()}{{{}{{return}{{EXP_FRAC_B}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpFracA}{()}{{{}{{return}{{EXP_FRAC_A}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpIntB}{()}{{{}{{return}{{EXP_INT_B}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{static}{{double}{[]}}{loadExpIntA}{()}{{{}{{return}{{EXP_INT_A}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MultiDimensionMismatchException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MultiDimensionMismatchException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{imAppendTo}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{fitness}}{==}{Double.MIN_VALUE}}{)}{{{}{{{{this}{.}{fitness}}{=}{{fitness}{()}}}{;}}{}}}}{{return}{{this}{.}{fitness}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setStepsizeControl}{(}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setStepsizeControl}{(}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{{n}{*}{{(}{{n}{+}{NUMBER_CONSTANT}}{)}}{*}{moment.m4}}{-}{{NUMBER_CONSTANT}{*}{moment.m2}{*}{moment.m2}{*}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}{)}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{hatResiduals}{=}{{{{I}{.}{subtract}{(}{hat}{)}}{.}{operate}{(}{model.Y}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{RealVector}}{{b}{=}{{calculateBeta}{()}}}{;}}{{return}{{Y}{.}{subtract}{(}{{X}{.}{operate}{(}{b}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{residuals}{.}{dotProduct}{(}{residuals}{)}}{/}{{(}{{{X}{.}{getRowDimension}{()}}{-}{{X}{.}{getColumnDimension}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{{e}{=}{{Y}{.}{subtract}{(}{{X}{.}{operate}{(}{b}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{Y}}{=}{{new}{{ArrayRealVector}}{(}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{t}{/}{{(}{{{X}{.}{getRowDimension}{()}}{-}{{X}{.}{getColumnDimension}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{p}{=}{{X}{.}{getColumnDimension}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{qr}{.}{getSolver}{()}}{.}{solve}{(}{Y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newXSampleData}{(}{x}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newSampleData}{(}{data}{,}{nobs}{,}{nvars}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{X}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{x}{=}{{ols.X}{.}{copy}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{length}{=}{{{b}{.}{getDataRef}{()}}{.}{length}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{epsa}{=}{{{(}{{s}{+}{SymmLQ.MACH_PREC}}{)}}{*}{SymmLQ.CBRT_MACH_PREC}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{getRightHandSideVector}{()}{{{}{{return}{{RealVector}{.}{unmodifiableRealVector}{(}{state.b}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{x}}{.}{set}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{x}}{=}{x}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{new}{{ConjugateGradient}}{(}{maxIterations}{,}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{new}{{ConjugateGradient}}{(}{maxIterations}{,}{NUMBER_CONSTANT}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{array}{[]}}}
{AST_ROOT_SC2NF{{{double}{[]}{[]}}{householderMatrix}}}
{AST_ROOT_SC2NF{{{}{{{key}{=}{k}}{;}}{{{value}{=}{v}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{entry}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{k}{,}{v}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{NUMBER_CONSTANT}}{;}}{}}}{else}{{{}{{{ret}{=}{{Gamma}{.}{regularizedGammaP}{(}{alpha}{,}{{x}{/}{beta}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getAlpha}{()}}{*}{{getBeta}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{v}{.}{walkInDefaultOrder}{(}{visitor}{,}{expectedStart}{,}{expectedEnd}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{innerCumulativeProbability}{(}{{domain}{[}{NUMBER_CONSTANT}{]}}{,}{x}{,}{NUMBER_CONSTANT}{,}{populationSize}{,}{numberOfSuccesses}{,}{sampleSize}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recurseBuildBoundary}{(}{tree}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{SimplexOptimizer}}{{optimizer}{=}{{new}{{SimplexOptimizer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{create}{(}{{final}{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{OpenMapRealVector}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{TestVectorImpl}{(}{{{double}{[]}}{values}}{)}{{{}{{{{this}{.}{values}}{=}{values}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{ParametricUnivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{double}{{n1n2prod}{=}{{n1}{*}{n2}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{create}{(}{data1}{)}}{.}{addToEntry}{(}{{-}{NUMBER_CONSTANT}}{,}{{getPreferredEntryValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{create}{(}{data1}{)}}{.}{setEntry}{(}{{-}{NUMBER_CONSTANT}}{,}{{getPreferredEntryValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{createAlien}{(}{{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{RealVectorTestImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{x}{=}{{new}{{TestVectorImpl}}{(}{{v}{.}{clone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{createAlien}{(}{{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{TestVectorImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{create}{(}{{final}{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{TestVectorImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SparseRealVectorTestImpl}}{{v7_i}{=}{{new}{{SparseRealVectorTestImpl}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{RealVector}}{createAlien}{(}{{{double}{[]}}{data}}{)}{{{}{{return}{{new}{{SparseRealVectorTestImpl}}{(}{data}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{STRING_CONSTANT}{+}{i}{+}{STRING_CONSTANT}{+}{j}{+}{STRING_CONSTANT}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{ComplexUtils}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{int}{{n}{=}{{coefficients.length}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{indefinite}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{distinct}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{repeated}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{v}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}{.}{getV}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{symmetric}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{createTestMatrix}{(}{r}{,}{bigValues}{)}}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{{t}{.}{getMainDiagonalRef}{()}}{,}{{t}{.}{getSecondaryDiagonalRef}{()}}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{decomposition}{=}{{new}{{EigenDecomposition}}{(}{mainTridiagonal}{,}{secondaryTridiagonal}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ed}{=}{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{int}{)}{{FastMath}{.}{min}{(}{{randomData}{.}{nextPoisson}{(}{mean}{)}}{,}{Integer.MAX_VALUE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{n}{=}{{randomData}{.}{nextGaussian}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{{FastMath}{.}{exp}{(}{{scale}{+}{{shape}{*}{n}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EigenDecomposition}}{{eig}{=}{{new}{{EigenDecomposition}}{(}{C}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BaseRuleFactory}}{factory}}}
{AST_ROOT_SC2NF{{final}{{GaussIntegrator}}{{g}{=}{{factory}{.}{legendreHighPrecision}{(}{numberOfPoints}{,}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ROW_SEPARATOR}{,}{DEFAULT_COLUMN_SEPARATOR}{,}{format}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{RealMatrixFormat}{()}{{{}{{this}{(}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ROW_SEPARATOR}{,}{DEFAULT_COLUMN_SEPARATOR}{,}{{CompositeFormat}{.}{getDefaultNumberFormat}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{matrix}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DecompositionSolver}}{{es}{=}{{{new}{{EigenDecomposition}}{(}{m}{,}{Precision.SAFE_MIN}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{multiplier}{=}{{tableau}{.}{getEntry}{(}{i}{,}{pivotCol}{)}}}{;}}{{{tableau}{.}{subtractRow}{(}{i}{,}{pivotRow}{,}{multiplier}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{entry}{,}{minValue}{,}{maxUlps}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{p}{,}{NUMBER_CONSTANT}{,}{epsilon}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{{s}{=}{{-}{s}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MathIllegalStateException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{Precision}{.}{equals}{(}{{imagEigenvalues}{[}{i}{]}}{,}{NUMBER_CONSTANT}{,}{epsilon}{)}}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNull}{(}{{STRING_CONSTANT}{+}{source}{+}{STRING_CONSTANT}}{,}{{{new}{{RealMatrixFormat}}{()}}{.}{parse}{(}{source}{,}{pos}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNull}{(}{{STRING_CONSTANT}{+}{source}{+}{STRING_CONSTANT}}{,}{{{new}{{RealMatrixFormat}}{()}}{.}{parse}{(}{source}{,}{pos}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNull}{(}{{STRING_CONSTANT}{+}{source}{+}{STRING_CONSTANT}}{,}{{{new}{{RealMatrixFormat}}{()}}{.}{parse}{(}{source}{,}{pos}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DifferentiableUnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{Expm1Function}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{f}{=}{{new}{{SinFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{secRand}{=}{{SecureRandom}{.}{getInstance}{(}{algorithm}{,}{provider}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{ZipfDistribution}}{(}{numberOfElements}{,}{exponent}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{WeibullDistribution}}{(}{shape}{,}{scale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{TDistribution}}{(}{df}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{PascalDistribution}}{(}{r}{,}{p}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{HypergeometricDistribution}}{(}{populationSize}{,}{numberOfSuccesses}{,}{sampleSize}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{FDistribution}}{(}{numeratorDf}{,}{denominatorDf}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{ChiSquaredDistribution}}{(}{df}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{CauchyDistribution}}{(}{median}{,}{scale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{BinomialDistribution}}{(}{numberOfTrials}{,}{probabilityOfSuccess}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextInversionDeviate}{(}{{new}{{BetaDistribution}}{(}{alpha}{,}{beta}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{nextUniform}{(}{lower}{,}{upper}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{rand}}{=}{rand}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{dotProduct}{=}{{{new}{{LegendreGaussIntegrator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{integrate}{(}{NUMBER_CONSTANT}{,}{f}{,}{a}{,}{b}{)}}}{;}}}
{AST_ROOT_SC2NF{{FastMath}{.}{exp}{(}{{Gamma}{.}{logGamma}{(}{shape}{)}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{throw}{{new}{{UnsupportedOperationException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{randomData}{.}{nextUniform}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fillBinStats}{(}{in}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiable}}{{sPrime}{=}{{new}{{Sqrt}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiable}}{{f}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateDifferentiable}}{{f}{=}{{new}{{Sin}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiable}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiable}}{f}}}
{AST_ROOT_SC2NF{{{UnivariateDifferentiable}}{f}}}
{AST_ROOT_SC2NF{{final}{{UnivariateDifferentiable}}{{q}{=}{{new}{{QuinticFunction}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ENTRY}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ENTRY}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ENTRY}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{final}{{MathArithmeticException}}{e}}{)}{{{}{{throw}{{new}{{MathArithmeticException}}{(}{LocalizedFormats.ENTRY}{,}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{DifferentiableMultivariateVectorFunction}}{{problem}}{;}}}
{AST_ROOT_SC2NF{{public}{CircleScalar}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{Point2D.Double}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{gradient}{=}{{f}{.}{gradient}{()}}}{;}}{{return}{{super}{.}{optimize}{(}{maxEval}{,}{f}{,}{goalType}{,}{startPoint}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DifferentiableMultivariateVectorFunction}}{problem}}}
{AST_ROOT_SC2NF{{public}{CircleVectorial}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{Point2D.Double}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Quaternion}}{{product}{=}{{Quaternion}{.}{product}{(}{inverseQ}{,}{q}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{normSquareRef}{=}{{{Quaternion}{.}{product}{(}{q}{,}{{q}{.}{getConjugate}{()}}{)}}{.}{getScalarPart}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{product}{(}{this}{,}{q}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{optimum}{=}{{new}{{PointValuePair}}{(}{{fitfun}{.}{decode}{(}{{bestArx}{.}{getColumn}{(}{NUMBER_CONSTANT}{)}}{)}}{,}{{isMinimize}{?}{bestFitness}{:}{{-}{bestFitness}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{tmp}{=}{{{wxi}{*}{xi}}{/}{di}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{v}{.}{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{{Entry}}{>}}{{it}{=}{{v}{.}{sparseIterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getStartPoint}{()}{{{}{{return}{{start}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{optimize}{(}{maxEval}{,}{f}{,}{goalType}{,}{startPoint}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getUpperBound}{()}{{{}{{return}{{upperBound}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getLowerBound}{()}{{{}{{return}{{lowerBound}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Math}{.}{max}{(}{NUMBER_CONSTANT}{,}{{NUMBER_CONSTANT}{-}{{dimension}{/}{{(}{{NUMBER_CONSTANT}{+}{{Math}{.}{min}{(}{maxIterations}{,}{{{getMaxEvaluations}{()}}{/}{lambda}}{)}}}{)}}}}{)}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{getDimensions}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{getDimensions}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{getDimensions}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{{out}{=}{{new}{{double}{[}{[}}{sampleSize}{]}{[}{numDimensions}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{random}{=}{rng}}{;}}{{{numDimensions}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{d}{.}{getDimensions}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{dim}{=}{{d}{.}{getDimensions}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{{point}{(}{{DIM}{+}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{insigma}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{f}}}
{AST_ROOT_SC2NF{{{jF}{=}{{new}{{JacobianFunction}}{(}{f}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{distribution}{.}{get}{(}{i}{)}}{.}{reseedRandomGenerator}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MultivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{{MultivariateFunction}}{f}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{d}{=}{{createDiagonalMatrix}{(}{eigenValues}{,}{n}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RealMatrix}}{{m}{=}{{createDiagonalMatrix}{(}{diagonal}{,}{diagonal.length}{,}{diagonal.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{x}{=}{{{list}{.}{remove}{(}{{{list}{.}{size}{()}}{-}{NUMBER_CONSTANT}}{)}}{.}{getLower}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{sigma}{=}{{optim}{.}{getSigma}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{currentPoint}{=}{{getStartPoint}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{{covMatrix}{=}{{optimizer}{.}{getCovariances}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}{[]}}{{covarMatrix}{=}{{optimizer}{.}{getCovariances}{()}}}{;}}}
{AST_ROOT_SC2NF{{{qrDecomposition}{(}{{computeJacobian}{(}{currentPoint}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{j}{=}{{computeJacobian}{(}{params}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{weightedJacobian}{=}{{computeJacobian}{(}{currentPoint}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{testStatistic}{.}{gTestGoodnessOfFit}{(}{expected}{,}{observed}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{OutOfRangeException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{testStatistic}{.}{gTestGoodnessOfFitPValue}{(}{expected}{,}{observed}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NotStrictlyPositiveException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{double}{{residual}{=}{{-}{{currentResiduals}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{testAdd1000}{()}}{;}}{{{Assert}{.}{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{{{(}{{(}{{ResizableDoubleArray}}{)}{da}}{)}}{.}{getInternalLength}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ResizableDoubleArray}}{{other}{=}{{(}{{ResizableDoubleArray}}{)}{object}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ResizableDoubleArray}}{{result}{=}{{new}{{ResizableDoubleArray}}{()}}}{;}}{{{copy}{(}{this}{,}{result}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{{hashData}{[}{NUMBER_CONSTANT}{]}}{=}{expansionMode}}{;}}}
{AST_ROOT_SC2NF{{expansionMode}{==}{MULTIPLICATIVE_MODE}}}
{AST_ROOT_SC2NF{{expansionMode}{==}{MULTIPLICATIVE_MODE}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{initialDoubleArray}{!=}{null}}{)}{{{}{{{eDA}{=}{{new}{{ResizableDoubleArray}}{(}{initialDoubleArray}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{initialDoubleArray}{!=}{null}}{)}{{{}{{{eDA}{=}{{new}{{StatArray}}{(}{initialDoubleArray}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{DEFAULT_INITIAL_CAPACITY}{,}{DEFAULT_EXPANSION_FACTOR}{,}{{NUMBER_CONSTANT}{+}{DEFAULT_EXPANSION_FACTOR}}{,}{ExpansionMode.MULTIPLICATIVE}{,}{initialArray}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{hashData}{[}{NUMBER_CONSTANT}{]}}{=}{{{new}{{Float}}{(}{contractionCriteria}{)}}{.}{hashCode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{result}{&&}{{(}{{other.contractionCriteria}{==}{contractionCriteria}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{dest.contractionCriteria}{=}{source.contractionCriteria}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkContractExpand}{(}{{getContractionCriteria}{()}}{,}{expansionFactor}{)}}{;}}{{synchronized}{(}{this}{)}{{{}{{{{this}{.}{expansionFactor}}{=}{expansionFactor}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkContractExpand}{(}{contractionCriteria}{,}{{getExpansionFactor}{()}}{)}}{;}}{{synchronized}{(}{this}{)}{{{}{{{{this}{.}{contractionCriteria}}{=}{contractionCriteria}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{getContractionCriterion}{()}{{{}{{return}{contractionCriteria}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimpleVectorValueChecker}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimpleValueChecker}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimplePointChecker}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{NaturalRanking}}{{ranking}{=}{{new}{{NaturalRanking}}{(}{TiesStrategy.MINIMUM}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{relativeThreshold}{,}{absoluteThreshold}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{SimpleUnivariateValueChecker}{()}{{{}}}}}
{AST_ROOT_SC2NF{{logBeta}{(}{a}{,}{b}{,}{epsilon}{,}{maxIterations}{)}}}
{AST_ROOT_SC2NF{{{RandomDataImpl}}{randomData}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{new}{{RandomDataImpl}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RandomDataImpl}}{randomData}}}
{AST_ROOT_SC2NF{{{{this}{.}{q0}}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{diagonalOnly}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{updateCovariance}{(}{hsig}{,}{bestArx}{,}{arz}{,}{arindex}{,}{xold}{)}}{;}}{}}}{else}{{{}{{{updateCovarianceDiagonalOnly}{(}{hsig}{,}{bestArz}{,}{xold}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{diagonalOnly}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{updateCovariance}{(}{hsig}{,}{bestArx}{,}{arz}{,}{arindex}{,}{xold}{)}}{;}}{}}}{else}{{{}{{{updateCovarianceDiagonalOnly}{(}{hsig}{,}{bestArz}{,}{xold}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{CodyWaite}}{{cw}{=}{{new}{{CodyWaite}}{(}{xa}{,}{xb}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CodyWaite}}{{cw}{=}{{new}{{CodyWaite}}{(}{xa}{,}{xb}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{CodyWaite}}{{cw}{=}{{new}{{CodyWaite}}{(}{xa}{,}{xb}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{reseedRandomGenerator}{(}{{long}{seed}}{)}{{{}{{{randomData}{.}{reSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{new}{{RandomDataGenerator}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{reseedRandomGenerator}{(}{{long}{seed}}{)}{{{}{{{reSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{(}{{RandomGenerator}}{)}{null}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistribution}{(}{{int}{binCount}}{)}{{{}{{this}{(}{binCount}{,}{{new}{{RandomDataImpl}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{filePointer}{=}{{new}{{BufferedReader}}{(}{{new}{{InputStreamReader}}{(}{{valuesFileURL}{.}{openStream}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{problem}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{circle}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{{function}{.}{getWeight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{Weight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{function}{.}{getWeight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{circle}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{weights}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{w}{)}}}
{AST_ROOT_SC2NF{{new}{{NonCorrelatedWeight}}{(}{{problem}{.}{weight}{()}}{)}}}
{AST_ROOT_SC2NF{{{}{{{data}{=}{{d}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{SimplexSolver}{(}{{final}{double}{epsilon}}{)}{{{}{{this}{(}{epsilon}{,}{DEFAULT_ULPS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{result}{)}}{<}{CUTOFF_THRESHOLD}}{)}{{{}{{{result}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{f}{,}{constraints}{,}{goalType}{,}{restrictToNonNegative}{,}{epsilon}{,}{DEFAULT_ULPS}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{field}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{data}{=}{{buildArray}{(}{field}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{rows}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{data}{=}{{buildArray}{(}{{getField}{()}}{,}{{getRowDimension}{()}}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{blocks}{=}{{buildArray}{(}{{getField}{()}}{,}{{blockRows}{*}{blockColumns}}{,}{{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{data.length}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{out}{=}{{buildArray}{(}{data.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{v1.length}{+}{v2.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{v1.length}{+}{v2.data.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{v1.data.length}{+}{v2.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{v1.data.length}{+}{v2.data.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{v}{.}{getDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{{getColumnDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}}{{out}{=}{{buildArray}{(}{{getField}{()}}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{getField}{()}}{,}{subMatrix.length}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{nCols}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{T}}{[]}{[]}}{{outData}{=}{{buildArray}{(}{{getField}{()}}{,}{rowCount}{,}{columnCount}{)}}}{;}}}
{AST_ROOT_SC2NF{{{data}{=}{{buildArray}{(}{{getField}{()}}{,}{nRows}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{field}{,}{rowDimension}{,}{columnDimension}{)}{;}}{{{data}{=}{{buildArray}{(}{field}{,}{rowDimension}{,}{columnDimension}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{{res}{=}{{buildArray}{(}{virtualSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{exponent}{=}{{(}{int}{)}{{(}{{{y}{.}{log10}{()}}{*}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{value}{%}{a.value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{value}{%}{a}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{ePlus}{.}{add}{(}{eMinus}{)}}{.}{divide}{(}{{ePlus}{.}{subtract}{(}{eMinus}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DerivativeStructure}}{{ref}{=}{{dsX}{.}{subtract}{(}{{x}{-}{{(}{{x}{%}{y}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DerivativeStructure}}{{sAccurate}{=}{{u1}{.}{dotProduct}{(}{u2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{{{r}{.}{getAxis}{()}}{.}{dotProduct}{(}{{reverted}{.}{getAxis}{()}}{)}}{.}{getReal}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{{{r}{.}{getAxis}{()}}{.}{dotProduct}{(}{{reverted}{.}{getAxis}{()}}{)}}{.}{getReal}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{randomData}{=}{{new}{{RandomDataImpl}}{(}{randomGenerator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{tiesStrategy}}{=}{TiesStrategy.RANDOM}}{;}}{{{nanStrategy}{=}{DEFAULT_NAN_STRATEGY}}{;}}{{{randomData}{=}{{new}{{RandomDataImpl}}{(}{randomGenerator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{nanStrategy}}{=}{nanStrategy}}{;}}{{{{this}{.}{tiesStrategy}}{=}{tiesStrategy}}{;}}{{{randomData}{=}{{new}{{RandomDataImpl}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{tiesStrategy}}{=}{tiesStrategy}}{;}}{{{nanStrategy}{=}{DEFAULT_NAN_STRATEGY}}{;}}{{{randomData}{=}{{new}{{RandomDataImpl}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{T}{extends}{{{ExtendedFieldElement}}{<}{{T}}{>}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathUnsupportedOperationException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{{{getRan}{()}}{.}{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{getRan}{()}}{.}{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{generator}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{FDistribution}}{(}{{getRan}{()}}{,}{numeratorDf}{,}{denominatorDf}{,}{FDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{ChiSquaredDistribution}}{(}{{getRan}{()}}{,}{df}{,}{ChiSquaredDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{CauchyDistribution}}{(}{{getRan}{()}}{,}{median}{,}{scale}{,}{CauchyDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{BinomialDistribution}}{(}{{getRan}{()}}{,}{numberOfTrials}{,}{probabilityOfSuccess}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{BetaDistribution}}{(}{{getRan}{()}}{,}{alpha}{,}{beta}{,}{BetaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{ZipfDistribution}}{(}{{getRan}{()}}{,}{numberOfElements}{,}{exponent}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{WeibullDistribution}}{(}{{getRan}{()}}{,}{shape}{,}{scale}{,}{WeibullDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{TDistribution}}{(}{{getRan}{()}}{,}{df}{,}{TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{PascalDistribution}}{(}{{getRan}{()}}{,}{r}{,}{p}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{HypergeometricDistribution}}{(}{{getRan}{()}}{,}{populationSize}{,}{numberOfSuccesses}{,}{sampleSize}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{GammaDistribution}}{(}{{getRan}{()}}{,}{shape}{,}{scale}{,}{GammaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{ExponentialDistribution}}{(}{{getRan}{()}}{,}{mean}{,}{ExponentialDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{sigma}{*}{{{getRan}{()}}{.}{nextGaussian}{()}}}{+}{mu}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{PoissonDistribution}}{(}{{getRan}{()}}{,}{mean}{,}{PoissonDistribution.DEFAULT_EPSILON}{,}{PoissonDistribution.DEFAULT_MAX_ITERATIONS}{)}}{.}{sample}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{ran}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{randomData}{.}{nextGaussian}{(}{{stats}{.}{getMean}{()}}{,}{{stats}{.}{getStandardDeviation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testReciprocalZero}{()}{{{}{{{Assert}{.}{assertEquals}{(}{{Complex.ZERO}{.}{reciprocal}{()}}{,}{Complex.NaN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{(}{{{Float}{.}{floatToIntBits}{(}{f}{)}}{>}{>}{>}{NUMBER_CONSTANT}}{)}}{&}{NUMBER_CONSTANT}}{)}}{-}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{d}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{d}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{abs}{(}{{x}{-}{{Double}{.}{longBitsToDouble}{(}{{{Double}{.}{doubleToLongBits}{(}{x}{)}}{^}{NUMBER_CONSTANT}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{x}{)}}}{;}}{{if}{(}{{bits}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{x}{)}}}{;}}{{if}{(}{{bits}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{inbits}{=}{{Double}{.}{doubleToLongBits}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{xl}{=}{{Double}{.}{doubleToLongBits}{(}{d}{)}}}{;}}}
{AST_ROOT_SC2NF{{{File}}{{file}{=}{{new}{{File}}{(}{{url}{.}{getFile}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Double}{.}{longBitsToDouble}{(}{{Long.MAX_VALUE}{&}{{Double}{.}{doubleToRawLongBits}{(}{x}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Float}{.}{intBitsToFloat}{(}{{Integer.MAX_VALUE}{&}{{Float}{.}{floatToRawIntBits}{(}{x}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}{[]}}{matrix}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{lower}{,}{upper}{,}{DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{fit}{(}{initialMixture}{,}{defaultMaxIterations}{,}{defaultThreshold}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sum}{+=}{{FastMath}{.}{pow}{(}{{distA}{/}{distB}}{,}{{NUMBER_CONSTANT}{/}{{(}{{fuzzyness}{-}{NUMBER_CONSTANT}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{u}{=}{{FastMath}{.}{pow}{(}{{{membershipMatrix}{[}{i}{]}}{[}{j}{]}}{,}{fuzzyness}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{long}{{grayCode}{=}{{i}{^}{{(}{{i}{/}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{count}{=}{{{(}{{samples}{/}{centers}}{)}}{*}{centers}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{{this}{.}{a}}{[}{i}{]}}{[}{j}{]}}{=}{{a}{[}{{i}{+}{{N}{*}{j}}}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{tEnd}{=}{{test}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{tEnd}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{tEnd}{=}{{test}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{tEnd}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{midPoint}{=}{{NUMBER_CONSTANT}{*}{diff}}}{;}}{{return}{{diff}{*}{{computeObjectiveValue}{(}{midPoint}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dist}{=}{{new}{{WeibullDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{dist}{=}{{new}{{WeibullDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{incrementValue}{(}{{entry}{.}{getKey}{()}}{,}{{entry}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{false}{,}{{random}{.}{nextBoolean}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{r}{.}{call}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{uniDimIndex}{=}{{iter}{.}{next}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{value}{,}{NUMBER_CONSTANT}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{value}{,}{NUMBER_CONSTANT}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{NUMBER_CONSTANT}{,}{arguments}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{expected}{[}{index}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{wrong}{[}{index}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{value}{,}{NUMBER_CONSTANT}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotStrictlyPositiveException}{(}{{{Number}}{value}}{)}{{{}{{super}{(}{value}{,}{NUMBER_CONSTANT}{,}{false}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{specific}{,}{wrong}{,}{expected}{)}{;}}{{{dimension}{=}{expected}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{secRand}{=}{{SecureRandom}{.}{getInstance}{(}{algorithm}{,}{provider}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{SecureRandom}}{{secRan}{=}{{getSecRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{withConvergenceChecker}{(}{{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{term}{*=}{{{FastMath}{.}{pow}{(}{{delta}{[}{k}{]}}{,}{{orders}{[}{k}{]}}{)}}{/}{{ArithmeticUtils}{.}{factorial}{(}{{orders}{[}{k}{]}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomDataImpl}}{{randomData}{=}{{new}{{RandomDataImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{ArithmeticUtils}{.}{binomialCoefficient}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{expected}{=}{{ArithmeticUtils}{.}{binomialCoefficient}{(}{{i}{+}{j}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{ArithmeticUtils}{.}{binomialCoefficient}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{refDer}{=}{{{-}{{ArithmeticUtils}{.}{factorial}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{/}{{FastMath}{.}{pow}{(}{{-}{x}}{,}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{ArithmeticUtils}{.}{pow}{(}{{-}{NUMBER_CONSTANT}}{,}{i}{)}}{*}{{ArithmeticUtils}{.}{factorial}{(}{i}{)}}}{/}{{FastMath}{.}{pow}{(}{x}{,}{{i}{+}{NUMBER_CONSTANT}}{)}}}}
{AST_ROOT_SC2NF{{double}{{inv}{=}{{NUMBER_CONSTANT}{/}{{ArithmeticUtils}{.}{factorial}{(}{i}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{AbstractOptimizer}}{other}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Double}{.}{valueOf}{(}{{o}{.}{toString}{()}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{Double}{.}{valueOf}{(}{str}{)}}{.}{doubleValue}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{val}{=}{{{Double}{.}{valueOf}{(}{str}{)}}{.}{doubleValue}{()}}}{;}}{{{sampleStats}{.}{addValue}{(}{val}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{normalized}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Edge}}{>}}{{edges}{=}{{new}{{{ArrayList}}{<}{{Edge}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<}{{Segment}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{EventHandler}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{EventHandler}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{normalized}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{int}{[]}}{>}}{{row}{=}{{new}{{{ArrayList}}{<}{{int}{[]}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<}{{Segment}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{vectorData}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{value}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{f}{.}{getCount}{(}{THREEE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{f}{.}{addValue}{(}{THREEE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{Combinations}}{(}{n}{,}{k}{,}{Combinations.IterationOrder.LEXICOGRAPHIC}{)}}{.}{iterator}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{index}{=}{{getNatural}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{int}{[]}}{{natural}{=}{{MathArrays}{.}{natural}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{natural.length}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{AbstractLeastSquaresOptimizer}}{other}}}
{AST_ROOT_SC2NF{{if}{(}{{a0}{>}{overflow}}{)}{{{}{{throw}{{new}{{FractionConversionException}}{(}{value}{,}{a0}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NUMBER_CONSTANT}{+}{{NUMBER_CONSTANT}{*}{{+}{NUMBER_CONSTANT}}{*}{{MathUtils}{.}{hash}{(}{value}{)}}}}{+}{{NUMBER_CONSTANT}{*}{{derivatives}{.}{hashCode}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mult}{.}{multInPlace}{(}{var1}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{test}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{allowEmpty}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{test}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{test}{(}{values}{,}{begin}{,}{length}{,}{allowEmpty}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MathArrays}{.}{test}{(}{values}{,}{begin}{,}{length}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{w}{=}{{w}{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{num}{=}{{num}{%}{den}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{>}{NUMBER_CONSTANT}}{)}{{{}{{{randInt}{=}{{randInt}{>}{>}{NUMBER_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{T}}{a}}{:}{data}{)}{{{}{{{h}{=}{{h}{^}{{a}{.}{hashCode}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{rhs}{[}{m}{]}}{=}{{{rhs}{[}{m}{]}}{/}{X}}}{;}}}
{AST_ROOT_SC2NF{{{coeff1}{=}{{coeff1}{/}{pc2}}}{;}}}
{AST_ROOT_SC2NF{{{bits}{=}{{bits}{&}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{den}{=}{{den}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{trial}{=}{{trial}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{den}{=}{{den}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{bytes}{[}{{i}{++}}{]}}{=}{{(}{byte}{)}{{(}{{random}{&}{NUMBER_CONSTANT}}{)}}}}{;}}{{{random}{=}{{random}{>}{>}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{NUMBER_CONSTANT}}{)}{{{}{{{result}{=}{{result}{*}{x}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{za}{=}{{za}{*}{ya}}}{;}}}
{AST_ROOT_SC2NF{{{e}{=}{{e}{>}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{z}{=}{{z}{*}{lnb}}}{;}}}
{AST_ROOT_SC2NF{{{xl}{=}{{xl}{&}{MASK_30BITS}}}{;}}}
{AST_ROOT_SC2NF{{{r}{=}{{r}{*}{rnd}}}{;}}}
{AST_ROOT_SC2NF{{{extra}{=}{{extra}{-}{{rh}{*}{RADIX}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{while}{(}{{NUMBER_CONSTANT}{==}{{n}{%}{p}}}{)}{{{}{{{n}{=}{{n}{/}{p}}}{;}}{{{factors}{.}{add}{(}{p}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{n}{=}{{n}{|}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{xx}{=}{{xx}{+}{{NUMBER_CONSTANT}{/}{NUMBER_CONSTANT}}}}{;}}}
{AST_ROOT_SC2NF{{{iter}{=}{{iter}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{{data}{[}{i}{]}}{/}{d}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{{data}{[}{i}{]}}{*}{d}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{{data}{[}{i}{]}}{-}{d}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{data}{[}{i}{]}}{=}{{{data}{[}{i}{]}}{+}{d}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{k}{=}{{k}{+}{m}}}{;}}}
{AST_ROOT_SC2NF{{{coeff1}{=}{{coeff1}{/}{pc2}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{c}{[}{NUMBER_CONSTANT}{]}}{=}{{{c}{[}{NUMBER_CONSTANT}{]}}{+}{NUMBER_CONSTANT}}}{;}}{{return}{ret}{;}}{}}}}
{AST_ROOT_SC2NF{{{coeff1}{=}{{coeff1}{/}{pc2}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{m}{=}{{m}{>}{>}{NUMBER_CONSTANT}}}{;}}{{{++}{k}}{;}}{}}}}
{AST_ROOT_SC2NF{{{e}{=}{{e}{>}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{e}{=}{{e}{>}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{e}{=}{{e}{>}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{v}{=}{{v}{*}{v}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{scale}{*}{{FastMath}{.}{pow}{(}{{-}{{FastMath}{.}{log}{(}{{NUMBER_CONSTANT}{-}{p}}{)}}}{,}{{NUMBER_CONSTANT}{/}{shape}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{(}{{a}{*}{{FastMath}{.}{log}{(}{x}{)}}}{)}}{+}{{(}{{b}{*}{{FastMath}{.}{log}{(}{{NUMBER_CONSTANT}{-}{x}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{FastMath}{.}{exp}{(}{ss}{)}}{-}{NUMBER_CONSTANT}}{)}}{*}{{FastMath}{.}{exp}{(}{{{NUMBER_CONSTANT}{*}{scale}}{+}{ss}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{correct}{(}{{new}{{ArrayRealVector}}{(}{z}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{predict}{(}{{new}{{ArrayRealVector}}{(}{u}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{minadj}{/=}{{(}{{{divisor.mant}{[}{{mant.length}{-}{NUMBER_CONSTANT}}{]}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{Math}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{Math}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{Math}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{Math}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{max}{=}{Math.PI}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FunctionUtils}{.}{sample}{(}{{new}{{Sin}}{()}}{,}{NUMBER_CONSTANT}{,}{Math.PI}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FunctionUtils}{.}{sample}{(}{{new}{{Sin}}{()}}{,}{NUMBER_CONSTANT}{,}{Math.PI}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FunctionUtils}{.}{sample}{(}{{new}{{Sin}}{()}}{,}{Math.PI}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{{Math}{.}{random}{()}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{{-}{NUMBER_CONSTANT}}{/}{{(}{{a}{*}{a}}{)}}}{-}{NUMBER_CONSTANT}}{+}{{Math}{.}{cos}{(}{a}{)}}}}
{AST_ROOT_SC2NF{{{minDiff}{=}{{Math}{.}{min}{(}{minDiff}{,}{{boundDifference}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{minDiff}{=}{{Math}{.}{min}{(}{minDiff}{,}{{boundDifference}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{Math}{.}{sqrt}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{Math}{.}{log}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{diff}{=}{{Math}{.}{abs}{(}{{{x}{[}{i}{]}}{-}{{repaired}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{(}{{NUMBER_CONSTANT}{-}{ccovmu}}{)}}{*}{NUMBER_CONSTANT}{*}{mueff}}{/}{{(}{{{Math}{.}{pow}{(}{{dimension}{+}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{+}{{NUMBER_CONSTANT}{*}{mueff}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{Math}{.}{sqrt}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{Math}{.}{log}{(}{{m}{.}{getEntry}{(}{r}{,}{c}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{diff}{=}{{Math}{.}{abs}{(}{{{x}{[}{i}{]}}{-}{{repaired}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{(}{{NUMBER_CONSTANT}{-}{ccovmu}}{)}}{*}{NUMBER_CONSTANT}{*}{mueff}}{/}{{(}{{{Math}{.}{pow}{(}{{dimension}{+}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{+}{{NUMBER_CONSTANT}{*}{mueff}}}{)}}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{Math}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{Math}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{diff}{=}{{Math}{.}{abs}{(}{{constantValue}{-}{{{filter}{.}{getStateEstimation}{()}}{[}{NUMBER_CONSTANT}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{source}{=}{{{}{Double.NEGATIVE_INFINITY}{,}{{-}{Double.MAX_VALUE}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{Double.MIN_VALUE}{,}{{Math}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{,}{Double.POSITIVE_INFINITY}{}}}}}
{AST_ROOT_SC2NF{{source}{=}{{{}{Double.NEGATIVE_INFINITY}{,}{{-}{Double.MAX_VALUE}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{Double.MIN_VALUE}{,}{{Math}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{,}{Double.POSITIVE_INFINITY}{}}}}}
{AST_ROOT_SC2NF{{source}{=}{{{}{Double.NEGATIVE_INFINITY}{,}{{-}{Double.MAX_VALUE}}{,}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{,}{Double.MIN_VALUE}{,}{{Math}{.}{ulp}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{,}{Double.POSITIVE_INFINITY}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{k}{=}{NUMBER_CONSTANT}}{;}{{k}{<}{DIM}}{;}{{++}{k}}{)}{{{{{basis}{[}{i}{]}}{[}{k}{]}}{/=}{{Math}{.}{sqrt}{(}{sp}{)}}}{;}}}}
{AST_ROOT_SC2NF{{{}{{double}{{f}{=}{{Math}{.}{pow}{(}{{{new}{{DiffPow}}{()}}{.}{value}{(}{x}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}{{return}{f}{;}}{}}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{f}{+=}{{{Math}{.}{pow}{(}{factor}{,}{{i}{/}{{(}{{x.length}{-}{NUMBER_CONSTANT}}{)}}}{)}}{*}{{x}{[}{i}{]}}{*}{{x}{[}{i}{]}}}}{;}}}
{AST_ROOT_SC2NF{{a1}{=}{{{FastMath}{.}{sqrt}{(}{{FastMath.PI}{*}{twolpd}}{)}}{*}{{FastMath}{.}{exp}{(}{{{NUMBER_CONSTANT}{/}{NUMBER_CONSTANT}}{*}{lambda}}{)}}}}}
{AST_ROOT_SC2NF{{{ret}{+=}{{{c}{[}{i}{]}}{*}{{ArithmeticUtils}{.}{pow}{(}{n}{,}{{(}{long}{)}{i}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{length}}{;}{{i}{++}}{)}{{{}{{{{sample}{[}{i}{]}}{=}{{Math}{.}{random}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{seed}{,}{NUMBER_CONSTANT}{,}{v}{,}{NUMBER_CONSTANT}{,}{{Math}{.}{min}{(}{seed.length}{,}{v.length}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{expected}{=}{{{Math}{.}{abs}{(}{period}{)}}{-}{delta}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{shift}{=}{{Math}{.}{min}{(}{aTwos}{,}{bTwos}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{xabs}{=}{{Math}{.}{abs}{(}{{v}{[}{i}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{shift}{=}{{{Math}{.}{max}{(}{{numerator}{.}{bitLength}{()}}{,}{{denominator}{.}{bitLength}{()}}{)}}{-}{{FastMath}{.}{getExponent}{(}{Float.MAX_VALUE}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{shift}{=}{{{Math}{.}{max}{(}{{numerator}{.}{bitLength}{()}}{,}{{denominator}{.}{bitLength}{()}}{)}}{-}{{FastMath}{.}{getExponent}{(}{Double.MAX_VALUE}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{denom}{=}{{{{Math}{.}{abs}{(}{val}{)}}{<}{EPS_MIN}}{?}{{NUMBER_CONSTANT}{*}{EPS_MIN}}{:}{{NUMBER_CONSTANT}{*}{val}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{k}{=}{{(}{int}{)}{{Math}{.}{ceil}{(}{{n}{*}{d}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{k}{=}{{(}{int}{)}{{Math}{.}{ceil}{(}{{n}{*}{d}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{k}{=}{{(}{int}{)}{{Math}{.}{ceil}{(}{{n}{*}{d}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{-}{{NUMBER_CONSTANT}{*}{{Math}{.}{pow}{(}{{NUMBER_CONSTANT}{-}{d}}{,}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{err}{=}{{{Math}{.}{abs}{(}{{actual}{-}{expected}}{)}}{/}{{Math}{.}{ulp}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{double}{{denom}{=}{{{{Math}{.}{abs}{(}{val}{)}}{<}{EPS_MIN}}{?}{{NUMBER_CONSTANT}{*}{EPS_MIN}}{:}{{NUMBER_CONSTANT}{*}{val}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Math}{.}{exp}{(}{x}{)}}{-}{{Math}{.}{pow}{(}{Math.PI}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{Fraction}}{(}{{{(}{{{(}{{{Math}{.}{abs}{(}{w}{)}}{*}{d}}{)}}{+}{n}}{)}}{*}{{MathUtils}{.}{copySign}{(}{NUMBER_CONSTANT}{,}{w}{)}}}{,}{d}{)}}}
{AST_ROOT_SC2NF{{{num}{=}{{Math}{.}{abs}{(}{num}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{h}{+=}{{p_i}{*}{{Math}{.}{log}{(}{p_i}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{h}{+=}{{p_ij}{*}{{Math}{.}{log}{(}{p_ij}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{Math}{.}{abs}{(}{{sumExpected}{-}{sumObserved}}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{ratio}{=}{{sumObserved}{/}{sumExpected}}}{;}}{{{rescale}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{NUMBER_CONSTANT}{*}{{Math}{.}{abs}{(}{expected}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{double}{estimateRegressionStandardError}{()}{{{}{{return}{{Math}{.}{sqrt}{(}{{estimateErrorVariance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{STRING_CONSTANT}{,}{{{Math}{.}{abs}{(}{{v}{-}{{randomData}{.}{nextUniform}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{seed}{,}{NUMBER_CONSTANT}{,}{rsl}{,}{NUMBER_CONSTANT}{,}{{Math}{.}{min}{(}{seedLen}{,}{rslLen}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Math}{.}{sqrt}{(}{{d}{[}{col}{]}}{)}}{<}{{tol}{[}{col}{]}}}}
{AST_ROOT_SC2NF{{{Math}{.}{sqrt}{(}{{d}{[}{i}{]}}{)}}{<}{{tol}{[}{i}{]}}}}
{AST_ROOT_SC2NF{{final}{double}{{result}{=}{{NUMBER_CONSTANT}{*}{{Erf}{.}{erfc}{(}{{{{ref}{[}{i}{]}}{[}{NUMBER_CONSTANT}{]}}{/}{{Math}{.}{sqrt}{(}{NUMBER_CONSTANT}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{originalDelta}{=}{{Math}{.}{random}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{gn}{=}{{factor1}{*}{{Math}{.}{log}{(}{qExp1}{)}}{*}{oneOverN}}}{;}}}
{AST_ROOT_SC2NF{{{}{{public}{double}{value}{(}{{double}{x}}{)}{{{}{{return}{{NUMBER_CONSTANT}{/}{{(}{{NUMBER_CONSTANT}{*}{{Math}{.}{sqrt}{(}{x}{)}}}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{f}{=}{{new}{{UnivariateFunction}}{()}{{{}{{public}{double}{value}{(}{{double}{x}}{)}{{{}{{return}{{Math}{.}{sqrt}{(}{x}{)}}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{minValue}{=}{entry}}{;}}{{{minPos}{=}{i}}{;}}{{if}{(}{{{pivotSelection}{==}{PivotSelectionRule.Bland}}{&&}{{isValidPivotColumn}{(}{tableau}{,}{i}{)}}}{)}{{{}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{pivotSelection}}{=}{PivotSelectionRule.Dantzig}}{;}}}
{AST_ROOT_SC2NF{{solution}{=}{{{new}{{SimplexSolver}}{()}}{.}{optimize}{(}{DEFAULT_MAX_ITER}{,}{f}{,}{{new}{{DeterministicLinearConstraintSet}}{(}{constraints}{)}}{,}{GoalType.MINIMIZE}{,}{{new}{{NonNegativeConstraint}}{(}{true}{)}}{,}{PivotSelectionRule.BLAND}{)}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{f}{,}{constraints}{,}{goalType}{,}{restrictToNonNegative}{,}{epsilon}{,}{SimplexSolver.DEFAULT_ULPS}{,}{SimplexSolver.DEFAULT_CUT_OFF}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Precision}{.}{compareTo}{(}{entry}{,}{NUMBER_CONSTANT}{,}{maxUlps}{)}}{>}{NUMBER_CONSTANT}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean1D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean2D}}{>}}{point}}}
{AST_ROOT_SC2NF{{{{Vector}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean3D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean3D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean1D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean3D}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{{}{{final}{{Vector2D}}{{v2}{=}{{(}{{Vector2D}}{)}{v}}}{;}}{{return}{{{x}{*}{v2.x}}{+}{{y}{*}{v2.y}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{S}}{>}}{barycenter}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{S}}{>}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Vector}}{<}{{Euclidean1D}}{>}}{point}}}
{AST_ROOT_SC2NF{{public}{{ArcsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{ArcsSet}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Vector3D}{.}{angle}{(}{pole}{,}{direction}{)}}{-}{radius}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{SphericalPolygonsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{SphericalPolygonsSet}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{SubCircle}}{wholeHyperplane}{()}{{{}{{return}{{new}{{SubCircle}}{(}{this}{,}{{new}{{ArcsSet}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{circle.pole}{,}{circle.x}{,}{circle.y}{,}{circle.radius}{,}{circle.cos}{,}{circle.sin}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ArcsSet}}{(}{tree}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector1D}}{{x}{=}{{thisLine}{.}{toSubSpace}{(}{crossing}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector1D}}{{x}{=}{{thisLine}{.}{toSubSpace}{(}{crossing}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{offset}{=}{{plane}{.}{getOffset}{(}{point}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Vector}}{<}{{Euclidean2D}}{>}}{p}}}
{AST_ROOT_SC2NF{{{{Vector}}{<}{{Euclidean1D}}{>}}{p}}}
{AST_ROOT_SC2NF{{{{Vector}}{<}{{Euclidean3D}}{>}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{{point}{=}{{line}{.}{toSpace}{(}{Vector1D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{SubChord}}{copySelf}{()}{{{}{{return}{{new}{{SubChord}}{(}{chord}{,}{limits}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{upper}}{=}{{{NUMBER_CONSTANT}{*}{FastMath.PI}}{+}{lower}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Arc}}{{arc}{=}{{new}{{Arc}}{(}{NUMBER_CONSTANT}{,}{{FastMath}{.}{nextAfter}{(}{NUMBER_CONSTANT}{,}{Double.POSITIVE_INFINITY}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{buildNew}{(}{hyperplane}{,}{remainingRegion}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Segment}}{{segment}{=}{{new}{{Segment}}{(}{p1}{,}{p2}{,}{{new}{{Line}}{(}{p1}{,}{p2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{EdgesBuilder}}{{visitor}{=}{{new}{{EdgesBuilder}}{(}{root}{,}{tolerance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{SphericalPolygonsSet}}{(}{tree}{,}{tolerance}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{boundary}{)}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{tree}{)}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{SphericalPolygonsSet}{(}{{final}{double}{tolerance}}{)}{{{}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{getRemainingRegion}{()}}{.}{side}{(}{{new}{{OrientedPoint}}{(}{x}{,}{direct}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{SubLine}}{wholeLine}{()}{{{}{{return}{{new}{{SubLine}}{(}{this}{,}{{new}{{IntervalsSet}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{distance}{(}{p}{)}}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{BSPTree}}{<}{{S}}{>}}{{cell}{=}{{node}{.}{getCell}{(}{point}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PolyhedronsSet}}{(}{tree}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{IntervalsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{IntervalsSet}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{add}{(}{{new}{{NestedLoops}}{(}{bLoop}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{new}{{OrientedPoint}}{(}{newLoc}{,}{{op}{.}{isDirect}{()}}{)}}{.}{wholeHyperplane}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{abs}{(}{{getOffset}{(}{p}{)}}{)}}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{PolygonsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{PolygonsSet}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{SubLine}}{wholeHyperplane}{()}{{{}{{return}{{new}{{SubLine}}{(}{this}{,}{{new}{{IntervalsSet}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{FastMath}{.}{abs}{(}{d}{)}}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PolygonsSet}}{(}{tree}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{line}{==}{null}}{)}{{{}{{{line}{=}{{new}{{Line}}{(}{{start}{.}{getLocation}{()}}{,}{{end}{.}{getLocation}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ArcsSet}}{(}{tree}{,}{tolerance}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{LimitAngle}}{(}{{new}{{S1Point}}{(}{alpha}{)}}{,}{true}{,}{tolerance}{)}}{.}{wholeHyperplane}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{LimitAngle}}{(}{{new}{{S1Point}}{(}{alpha}{)}}{,}{false}{,}{tolerance}{)}}{.}{wholeHyperplane}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{boundary}{)}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{tree}{)}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ArcsSet}{(}{{final}{double}{tolerance}}{)}{{{}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Segment}}{{segment}{=}{{new}{{Segment}}{(}{start}{,}{end}{,}{{new}{{Line}}{(}{start}{,}{end}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{Line}}{(}{start}{,}{end}{)}}{.}{wholeHyperplane}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{PolygonsSet}}{(}{edges}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{BoundaryProjector}}{{projector}{=}{{new}{{BoundaryProjector}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{PolyhedronsSet}}{wholeSpace}{()}{{{}{{return}{{new}{{PolyhedronsSet}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{SubPlane}}{wholeHyperplane}{()}{{{}{{return}{{new}{{SubPlane}}{(}{this}{,}{{new}{{PolygonsSet}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Plane}}{{plane}{=}{{new}{{Plane}}{(}{{origin}{.}{add}{(}{translation}{)}}{,}{w}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolyhedronsSet}}{{tree}{=}{{new}{{PolyhedronsSet}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{IntervalsSet}}{(}{tree}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{boundary}{.}{add}{(}{{{new}{{LimitAngle}}{(}{{new}{{S1Point}}{(}{MathUtils.TWO_PI}{)}}{,}{true}{,}{NUMBER_CONSTANT}{)}}{.}{wholeHyperplane}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{Boolean}}{)}{{{getTree}{(}{false}{)}}{.}{getAttribute}{()}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{projection}{.}{get0riginal}{()}}{==}{v}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{P}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{P}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{points}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GrahamScan2D}}{{generator}{=}{{new}{{GrahamScan2D}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{random}{=}{{new}{{MersenneTwister}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{generator}{=}{{createConvexHullGenerator}{()}}}{;}}{{{random}{=}{{new}{{MersenneTwister}}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{checkConvexHull}{(}{points}{,}{hull}{)}}{;}}}
{AST_ROOT_SC2NF{{{ConvexHullGenerator2D}}{{generator}{=}{{new}{{MonotoneChain}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{Segment}}{[]}}{getLineSegments}{()}{{{}{{return}{{lineSegments}{.}{clone}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{Vector3D.MINUS_I}{)}}{.}{ballOnSupport}{(}{support}{)}}}{;}}}
{AST_ROOT_SC2NF{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{.}{ballOnSupport}{(}{support}{)}}}}
{AST_ROOT_SC2NF{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{{new}{{Vector3D}}{(}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{.}{ballOnSupport}{(}{support}{)}}}}
{AST_ROOT_SC2NF{{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{Vector3D.MINUS_K}{)}}{.}{ballOnSupport}{(}{support}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{{cap}{=}{{{new}{{SphericalCapGenerator}}{(}{Vector3D.MINUS_K}{)}}{.}{ballOnSupport}{(}{support}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EnclosingBall}}{<}{{Sphere2D}}{,}{{S2Point}}{>}}{(}{{new}{{S2Point}}{(}{{outside}{.}{negate}{()}}{)}}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{ConvexHullGenerator2D}}{createConvexHullGenerator}{(}{{boolean}{includeCollinearPoints}}{)}{{{}{{return}{{new}{{GrahamScan}}{(}{includeCollinearPoints}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{getOptimizer}{(}{points}{)}}{.}{optimize}{()}}{.}{getPoint}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{useLU}}}
{AST_ROOT_SC2NF{{{}{{return}{{LevenbergMarquardtOptimizer}{.}{create}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{optimizer}{=}{{{{{{{LevenbergMarquardtOptimizer}{.}{create}{()}}{.}{withInitialStepBoundFactor}{(}{initialStepBoundFactor}{)}}{.}{withCostRelativeTolerance}{(}{costRelativeTolerance}{)}}{.}{withParameterRelativeTolerance}{(}{parRelativeTolerance}{)}}{.}{withOrthoTolerance}{(}{orthoTolerance}{)}}{.}{withRankingThreshold}{(}{Precision.SAFE_MIN}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LeastSquaresProblemImpl}}{(}{maxEvaluations}{,}{maxIterations}{,}{checker}{,}{observed}{,}{model}{,}{jacobian}{,}{start}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{RealMatrix}}{computeJacobian}{()}{{{}{{return}{{MatrixUtils}{.}{createRealMatrix}{(}{{this}{.}{jacobian}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{computeValue}{()}{{{}{{return}{{this}{.}{values}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testGaussNewtonQR}{(}{)}{throws}{{Exception}}{{{}{{{check}{(}{{new}{{GaussNewtonOptimizer}}{(}{false}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testGaussNewtonLU}{(}{)}{throws}{{Exception}}{{{}{{{check}{(}{{new}{{GaussNewtonOptimizer}}{(}{true}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{final}{{{ConvergenceChecker}}{<}{{PointVectorValuePair}}{>}}{checker}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{new}{{LeastSquaresBuilder}}{()}}{.}{checker}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{.}{maxEvaluations}{(}{NUMBER_CONSTANT}{)}}{.}{maxIterations}{(}{{getMaxIterations}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{builder}{(}{circle}{)}}{.}{checker}{(}{{new}{{SimpleVectorValueChecker}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{.}{maxIterations}{(}{Integer.MAX_VALUE}{)}}}
{AST_ROOT_SC2NF{{{function}{.}{checkTheoreticalMinParams}{(}{{optimum}{.}{getPoint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{point}}}
{AST_ROOT_SC2NF{{{double}{[]}}{computeValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{point}}}
{AST_ROOT_SC2NF{{{double}{[]}}{getStart}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{point}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{point}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{start}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{target}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{computeValue}{()}{{{}{{return}{{unweighted}{.}{computeValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NonPositiveDefiniteMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SingularMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SingularMatrixException}}{e}}{)}{{{}{{throw}{{new}{{ConvergenceException}}{(}{LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{{optimum}{.}{computeRMS}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{optimum}{.}{computeRMS}{()}}{,}{TOl}{)}}{;}}}
{AST_ROOT_SC2NF{{{RealVector}}{computeValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{cost}{=}{{{lsp}{.}{evaluate}{(}{params}{)}}{.}{computeCost}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{sigma}{=}{{{lsp}{.}{evaluate}{(}{regress}{)}}{.}{computeSigma}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealVector}}{{sigma}{=}{{{lsp}{.}{evaluate}{(}{init}{)}}{.}{computeSigma}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{function}{.}{checkTheoreticalMinCost}{(}{{optimum}{.}{computeRMS}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{{asymptoticStandardErrorFound}{=}{{{optimum}{.}{computeSigma}{(}{NUMBER_CONSTANT}{)}}{.}{toArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealMatrix}}{{covarMatrix}{=}{{optimum}{.}{computeCovariances}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{actual}{=}{{{lsp}{.}{evaluate}{(}{{lsp}{.}{getStart}{()}}{)}}{.}{computeRMS}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{cost}{=}{{{lsp}{.}{evaluate}{(}{{lsp}{.}{getStart}{()}}{)}}{.}{computeCost}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertArrayEquals}{(}{{{evaluation}{.}{computeResiduals}{()}}{.}{toArray}{()}}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{}}}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotSame}{(}{STRING_CONSTANT}{,}{{v1}{.}{getDataRef}{()}}{,}{{v_copy}{.}{getData}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LeastSquaresProblemImpl}}{(}{model}{,}{observed}{,}{start}{,}{checker}{,}{maxEvaluations}{,}{maxIterations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{TOl}{,}{{optimum}{.}{getValue}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{line}{=}{{new}{{LineSearch}}{(}{lineRel}{,}{lineAbs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{line}{=}{{new}{{LineSearch}}{(}{this}{,}{lineRel}{,}{lineAbs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{updateFormula}{,}{checker}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{new}{{IdentityPreconditioner}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{penalty}{+=}{{diff}{*}{valueRange}}}{;}}}
{AST_ROOT_SC2NF{{public}{FitnessFunction}{()}{{{}{{{valueRange}{=}{NUMBER_CONSTANT}}{;}}{{{isRepairMode}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newSampleData}{(}{data}{,}{nobs}{,}{nvars}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{{getX}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{getResiduals}{()}{{{}{{return}{{this}{.}{residuals}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{RealVector}}{getPoint}{()}{{{}{{return}{{this}{.}{point}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{RealMatrix}}{getJacobian}{()}{{{}{{return}{{this}{.}{jacobian}}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{null}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{RealDistribution}}{getKernel}{(}{{{SummaryStatistics}}{bStats}}{)}{{{}{{return}{{new}{{ConstantDistribution}}{(}{{bStats}{.}{getMean}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{Median}}{()}}{.}{withEstimationtype}{(}{type}{)}}{.}{withNaNStrategy}{(}{strategy}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{{{{new}{{Percentile}}{(}{p}{)}}{.}{withEstimationtype}{(}{e}{)}}{.}{withNaNStrategy}{(}{nanStrategy}{)}}{.}{evaluate}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}{.}{withEstimationtype}{(}{Percentile.EstimationType.LEGACY}{)}}{.}{withNaNStrategy}{(}{null}{)}}{;}}{{{Assert}{.}{fail}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}{.}{withEstimationtype}{(}{Percentile.EstimationType.R_9}{)}}{.}{withNaNStrategy}{(}{NaNStrategy.FAILED}{)}}{.}{evaluate}{(}{specialValues}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{new}{{Percentile}}{(}{quantile}{)}}{.}{withEstimationtype}{(}{type}{)}}{.}{withNaNStrategy}{(}{nanStrategy}{)}}{.}{withPivotingStrategy}{(}{pivotingStrategy}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{BicubicSplineInterpolator}}{{bsi}{=}{{new}{{BicubicSplineInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{BicubicSplineInterpolatingFunction}}{(}{xval}{,}{yval}{,}{fval}{,}{dFdX}{,}{dFdY}{,}{d2FdXdY}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{H}{=}{{this}{.}{createH}{(}{d}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Percentile}}{{p}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Percentile}}{{p}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Percentile}}{{p}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Percentile.EstimationType}}{e}}{:}{{Percentile.EstimationType}{.}{values}{()}}{)}{{{}{{{reset}{(}{quantile}{,}{e}{)}}{;}}{{{testWeightedConsistency}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Percentile.EstimationType}}{e}}{:}{{Percentile.EstimationType}{.}{values}{()}}{)}{{{}{{{reset}{(}{quantile}{,}{e}{)}}{;}}{{{testEvaluateArraySegment}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Percentile.EstimationType}}{e}}{:}{{Percentile.EstimationType}{.}{values}{()}}{)}{{{}{{{reset}{(}{quantile}{,}{e}{)}}{;}}{{{testEvaluateArraySegmentWeighted}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{UnivariateStatistic}}{{percentile}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateStatistic}}{{percentile}{=}{{getUnivariateStatistic}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Percentile}}{{percentile}{=}{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Median}}{(}{{getEstimationType}{()}}{,}{newNaNStrategy}{,}{{getPivotingStrategy}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Median}}{(}{newEstimationType}{,}{{getNaNStrategy}{()}}{,}{{getPivotingStrategy}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{work.length}{==}{NUMBER_CONSTANT}}{?}{Double.NaN}{:}{{estimationType}{.}{evaluate}{(}{work}{,}{pivotsHeap}{,}{p}{,}{pivotingStrategy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{pivotingStrategy}{=}{{original}{.}{getPivotingStrategy}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{Umin}{=}{{{x.length}{*}{y.length}}{-}{Umax}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LazyUnweightedEvaluation}}{(}{model}{,}{target}{,}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{ResizableDoubleArray}}{)}{da}}{)}}{.}{getContractionCriteria}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ResizableDoubleArray}}{{testDa}{=}{{new}{{ResizableDoubleArray}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{ResizableDoubleArray.ADDITIVE_MODE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testDa}{=}{{new}{{ResizableDoubleArray}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{ResizableDoubleArray.ADDITIVE_MODE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ResizableDoubleArray}}{{testDa}{=}{{new}{{ResizableDoubleArray}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{ResizableDoubleArray.ADDITIVE_MODE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomDataImpl}}{{random}{=}{{new}{{RandomDataImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistribution}}{(}{binCount}{,}{randomData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{randomData}}{=}{{new}{{RandomDataImpl}}{(}{generator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{randomData}}{=}{randomData}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{FastMath.PI}{*}{FastMath.PI}}{/}{NUMBER_CONSTANT}}{)}}{*}{{(}{{NUMBER_CONSTANT}{/}{{(}{{s}{*}{s}}{)}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{FDistribution}}{{fdist}{=}{{new}{{FDistribution}}{(}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{{(}{double}{)}{observed1.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BinomialDistribution}}{{distribution}{=}{{new}{{BinomialDistribution}}{(}{numberOfTrials}{,}{probability}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{newXSampleData}{(}{x}{)}}{;}}{{{qr}{=}{{new}{{QRDecomposition}}{(}{{getX}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{t}{.}{insertInTree}{(}{parentTree}{,}{isPlusChild}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{sin}{*}{otherL.sin}}{+}{{cos}{*}{otherL.cos}}}{)}}{>=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{tree}{=}{{{region1}{.}{getTree}{(}{false}{)}}{.}{merge}{(}{{region2}{.}{getTree}{(}{false}{)}}{,}{{new}{{DifferenceMerger}}{()}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{originOffset}{=}{offset}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{if}{(}{{p}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.POSITIVE_INFINITY}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{vals}{=}{{Arrays}{.}{copyOf}{(}{b}{,}{b.length}{)}}}{;}}{{{nVals}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math3.stat.inference.ChiSquareTest}}{{csti}{=}{{new}{{org.apache.commons.math3.stat.inference.ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{org.apache.commons.math3.stat.inference.ChiSquareTest}}{{csti}{=}{{new}{{org.apache.commons.math3.stat.inference.ChiSquareTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{cachedTransform}{=}{{org.apache.commons.math3.geometry.euclidean.twod.Line}{.}{getTransform}{(}{at}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedTransform}{=}{{org.apache.commons.math3.geometry.euclidean.twod.Line}{.}{getTransform}{(}{at}{)}}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{org.apache.commons.math3.linear.SingularMatrixException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{(}{{numIterations}{<}{maximumIterations}}{)}}{&&}{{(}{{{a}{>}{lowerBound}}{||}{{b}{>}{upperBound}}}{)}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well19937c}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well512a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well512a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well44497b}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well1024a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well1024a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well44497a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well44497a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Well19937a}{(}{{long}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Well19937a}{(}{{int}{seed}}{)}{{{}{{super}{(}{K}{,}{M1}{,}{M2}{,}{M3}{,}{seed}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertEquals}{(}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{getData}{()}}{)}}{,}{preMultTest}{)}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{,}{UniformRealDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{lo}{,}{hi}{,}{UniformRealDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{lo}{,}{hi}{,}{UniformRealDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{lo}{,}{hi}{,}{UniformRealDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{,}{UniformRealDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{new}{{UniformRealDistribution}}{(}{rng}{,}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{,}{UniformRealDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{distribution}{.}{cumulativeProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{{getDistribution}{()}}{.}{cumulativeProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{distribution}{.}{cumulativeProbability}{(}{{lower}{[}{i}{]}}{,}{{upper}{[}{i}{]}}{)}}}
{AST_ROOT_SC2NF{{final}{double}{{withinBinKernelMass}{=}{{kernel}{.}{cumulativeProbability}{(}{lower}{,}{upper}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{distribution}{.}{cumulativeProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{(}{{(}{{AbstractRealDistribution}}{)}{distribution}}{)}}{.}{logDensity}{(}{{cumulativeTestPoints}{[}{i}{]}}{)}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}{public}{void}{testNullFunction}{()}{{{}{{{UnivariateSolverUtils}{.}{bracket}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{min}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{max}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{variance}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{variance}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{StatUtils}{.}{mean}{(}{x}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathIllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{MathIllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{tournamentPopulation}{=}{{new}{{ListPopulation}}{(}{{this}{.}{arity}}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{delta}{=}{{{(}{{max}{-}{min}}{)}}{/}{{(}{{(}{double}{)}{binCount}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{reciprocal}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{delta}{=}{{{(}{{max}{-}{min}}{)}}{/}{{(}{binCount}{)}}}}{;}}}
{AST_ROOT_SC2NF{{protected}{double}{getSolverAbsoluteAccuracy}{()}{{{}{{return}{solverAbsoluteAccuracy}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SparseGradient}}{{sgY2}{=}{{sgX}{.}{compose}{(}{{poly}{.}{value}{(}{x}{)}}{,}{{{poly}{.}{derivative}{()}}{.}{value}{(}{x}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{{{f}{.}{polynomialDerivative}{()}}{.}{derivative}{()}}{.}{value}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{tolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{UnivariateFunction}}{{dSpline}{=}{{spline}{.}{derivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{abs}{(}{{getOffset}{(}{p}{)}}{)}}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{direction}{.}{getNorm}{()}}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{{m}{.}{evaluate}{(}{values}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{{test}{(}{values}{,}{begin}{,}{length}{)}}{&&}{{length}{>}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{test}{(}{values}{,}{start}{,}{length}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{{test}{(}{values}{,}{begin}{,}{length}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{weights}{,}{begin}{,}{length}{,}{true}{)}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{values}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{return}{{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ptile}{.}{evaluate}{(}{d}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{weights}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{weights}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{test}{(}{values}{,}{begin}{,}{length}{)}}}
{AST_ROOT_SC2NF{{{m}{.}{evaluate}{(}{values}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{iae}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{stats}{.}{setWindowSize}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{iae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{DummyBinaryChromosome}}{(}{repr}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{iae}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{Hs}{=}{{generalizedHarmonic}{(}{N}{,}{s}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{Hs}{=}{{generalizedHarmonic}{(}{N}{,}{s}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{generalizedHarmonic}{(}{x}{,}{exponent}{)}}{/}{{generalizedHarmonic}{(}{numberOfElements}{,}{exponent}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{-}{{FastMath}{.}{log}{(}{x}{)}}}{*}{exponent}}{-}{{FastMath}{.}{log}{(}{{generalizedHarmonic}{(}{numberOfElements}{,}{exponent}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{!=}{x}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{!=}{x}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{!=}{x}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{!=}{x}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{!=}{x}}{||}{{y}{!=}{y}}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{x}{!=}{x}}{||}{{x}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{!=}{x}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{!=}{x}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{!=}{x}}{)}{{{}{{return}{x}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{LocalizedFormats.UNKNOWN_PARAMETER}{)}{;}}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{exponent}}}
{AST_ROOT_SC2NF{{{MultivariateInterpolator}}{{interpolator}{=}{{new}{{MicrosphereInterpolator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{brightnessExponent}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{BigInteger.ZERO}{.}{compareTo}{(}{numerator}{)}}{<=}{NUMBER_CONSTANT}}{)}}{?}{this}{:}{{negate}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{{numCalls}{=}{{numberOfCalls}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Gaussian}}{{neighbourhoodDecay}{=}{{new}{{Gaussian}}{(}{currentLearning}{,}{NUMBER_CONSTANT}{,}{{NUMBER_CONSTANT}{/}{currentNeighbourhood}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Fraction}}{(}{numerator}{,}{{denominator}{*}{i}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Fraction}}{(}{{numerator}{*}{i}}{,}{denominator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertRelativelyEquals}{(}{expected}{,}{{{ZipfRejectionSampler}{.}{helper2}{(}{testValue}{)}}{*}{testValue}}{,}{tol}{)}}{;}}}
{AST_ROOT_SC2NF{{{evaluations}{.}{setMaximalCount}{(}{maxEvaluations}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{rowOffset}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{int}{{swaps}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{x}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{{}{{return}{{{FastMath}{.}{pow}{(}{{NUMBER_CONSTANT}{-}{probabilityOfSuccess}}{,}{x}{)}}{*}{probabilityOfSuccess}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{SQRT_TWO_PI}{/}{x}}{*}{{FastMath}{.}{pow}{(}{y}{,}{{absX}{+}{NUMBER_CONSTANT}}{)}}}{*}{{FastMath}{.}{exp}{(}{{-}{y}}{)}}}}
{AST_ROOT_SC2NF{{return}{{new}{{CorrelatedRandomVectorGenerator}}{(}{{new}{{double}{[}}{cov.length}{]}}{,}{matrix}{,}{small}{,}{{new}{{GaussianRandomGenerator}}{(}{{new}{{JDKRandomGenerator}}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{BigFractionMatrixConverter}{()}{{{}{{super}{(}{BigFraction.ZERO}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{FractionMatrixConverter}{()}{{{}{{super}{(}{Fraction.ZERO}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{FieldUnivariateFunction}}{<}{{T}}{>}}{f}}}
{AST_ROOT_SC2NF{{final}{{{FieldUnivariateFunction}}{<}{{T}}{>}}{f}}}
{AST_ROOT_SC2NF{{{{FieldUnivariateFunction}}{<}{{Dfp}}{>}}{f}}}
{AST_ROOT_SC2NF{{final}{{EnumeratedRealDistribution}}{{dist}{=}{{new}{{EnumeratedRealDistribution}}{(}{combined}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{JDKRandomGenerator}{(}{{int}{seed}}{)}{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{starter}{.}{addStepHandler}{(}{{new}{{NordsieckInitializer}}{(}{nSteps}{,}{y0.length}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{StepInterpolatorTestUtils}{.}{checkDerivativesConsistency}{(}{integ}{,}{pb}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{evaluations}{.}{incrementCount}{()}}{;}}{{{expandable}{.}{computeDerivatives}{(}{t}{,}{y}{,}{yDot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{evaluations}{.}{resetCount}{()}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InitializationCompletedMarkerException}}{icme}}{)}{{{}{{{{getEvaluationsCounter}{()}}{.}{incrementCount}{(}{{starter}{.}{getEvaluations}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{FieldVector3D}}{<}{{DerivativeStructure}}{>}}{{axis}{=}{{r}{.}{getAxis}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldVector3D}}{<}{{Dfp}}{>}}{{axis}{=}{{r}{.}{getAxis}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{axis}{=}{{r}{.}{getAxis}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{r1}{.}{applyInverseTo}{(}{r2}{)}}{.}{getAngle}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{r1}{.}{applyInverseTo}{(}{r2}{)}}{.}{getAngle}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Rotation}}{{composite}{=}{{r3}{.}{applyTo}{(}{{r2}{.}{applyTo}{(}{r1}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{super}{.}{nextInt}{(}{n}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{throw}{{new}{{NotStrictlyPositiveException}}{(}{n}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{{RandomGeneratorFactory}{.}{convertToLong}{(}{seed}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{{(}{long}{)}{seed}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setSeed}{(}{seed}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ISAACRandom}{(}{{long}{seed}}{)}{{{}{{{setSeed}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{bits}{=}{{(}{{{nextInt}{()}}{>}{>}{>}{NUMBER_CONSTANT}}{)}}}{;}}{{{val}{=}{{bits}{%}{n}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeed}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeed}{(}{{new}{{int}{[]}}{{{}{seed}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{computeInterpolatedStateAndDerivatives}{(}{equations}{,}{theta}{,}{oneMinusThetaH}{)}}{;}}}
{AST_ROOT_SC2NF{{{equations}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{yDotK}{[}{NUMBER_CONSTANT}{]}}{=}{{stepStart}{.}{getDerivative}{()}}}{;}}}
{AST_ROOT_SC2NF{{{mainSetDimension}{=}{{{eqn}{.}{getState}{()}}{.}{length}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldBracketingNthOrderBrentSolver}}{<}{{T}}{>}}{solver}}}
{AST_ROOT_SC2NF{{final}{{{FieldBracketingNthOrderBrentSolver}}{<}{{T}}{>}}{solver}}}
{AST_ROOT_SC2NF{{{{FieldBracketingNthOrderBrentSolver}}{<}{{T}}{>}}{solver}}}
{AST_ROOT_SC2NF{{public}{TestProblem5}{()}{{{}{``;}}{super}{{{setFinalConditions}{(}{{{NUMBER_CONSTANT}{*}{t0}}{-}{t1}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{n}}}
{AST_ROOT_SC2NF{{i}{<}{n}}}
{AST_ROOT_SC2NF{{i}{<}{n}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{n}}{;}{{++}{i}}{)}{{{}{{{{y}{[}{i}{]}}{=}{c}}{;}}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{n}}}
{AST_ROOT_SC2NF{{{currentState}{=}{{y}{.}{clone}{()}}}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{true}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{true}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{false}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{false}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{{{{start}{.}{subtract}{(}{{problem}{.}{getInitialTime}{()}}{)}}{.}{divide}{(}{{integrator}{.}{getCurrentSignedStepsize}{()}}{)}}{.}{abs}{()}}{.}{getReal}{()}}{>}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{field}{)}{;}}{{{setFinalConditions}{(}{{{{getInitialTime}{()}}{.}{multiply}{(}{NUMBER_CONSTANT}{)}}{.}{subtract}{(}{{getFinalTime}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{true}{,}{minStep}{,}{maxStep}{,}{vecAbsoluteTolerance}{,}{vecRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{field}{,}{METHOD_NAME}{,}{true}{,}{minStep}{,}{maxStep}{,}{scalAbsoluteTolerance}{,}{scalRelativeTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{DormandPrince54FieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{GillFieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{T}}{{one}{=}{{{time}{.}{getField}{()}}{.}{getOne}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MidpointFieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{LutherFieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ThreeEighthesFieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{DormandPrince853FieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{finalizeStep}{()}}{;}}{{return}{{doCopy}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{T}}{{coeffDot1}{=}{{{{time}{.}{getField}{()}}{.}{getOne}{()}}{.}{subtract}{(}{coeffDot2}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{T}}{{one}{=}{{{time}{.}{getField}{()}}{.}{getOne}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{HighamHall54FieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{integrator}{.}{getField}{()}}{.}{getOne}{()}}{.}{multiply}{(}{p}{)}}{.}{divide}{(}{q}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{d}{=}{{MathArrays}{.}{buildArray}{(}{{integrator}{.}{getField}{()}}{,}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ClassicalRungeKuttaFieldStepInterpolator}}{<}{{T}}{>}}{(}{this}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{T}}{{two}{=}{{{{getField}{()}}{.}{getOne}{()}}{.}{multiply}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{getField}{()}}{.}{getOne}{()}}{.}{multiply}{(}{p}{)}}{.}{divide}{(}{q}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldStepInterpolator}}{<>}}{(}{field}{,}{forward}{,}{mapper}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mapper}{=}{{new}{{{FieldEquationsMapper}}{<>}}{(}{mapper}{,}{{secondary}{.}{getDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldFirstOrderDifferentialEquations}}{<}{{T}}{>}}{{eqn}{=}{{new}{{{SinCos}}{<>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{integrator}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{problem}{)}}{,}{{problem}{.}{getInitialState}{()}}{,}{{problem}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{equations}{)}}{,}{{new}{{{FieldODEState}}{<}{{T}}{>}}{(}{t0}{,}{y0}{)}}{,}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<>}}{(}{pb}{)}}{,}{{pb}{.}{getInitialState}{()}}{,}{{pb}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{steps}{.}{add}{(}{{interpolator}{.}{copy}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{{FieldStepInterpolator}}{<}{{T}}{>}}{interpolator}}{:}{model.steps}{)}{{{}{{{steps}{.}{add}{(}{{interpolator}{.}{copy}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{{++}{index}}{<}{{getNumberOfEquations}{()}}}{)}{{{}{{{insertEquationData}{(}{index}{,}{{state}{.}{getSecondaryDerivative}{(}{{index}{-}{NUMBER_CONSTANT}}{)}}{,}{yDot}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{{++}{index}}{<}{{getNumberOfEquations}{()}}}{)}{{{}{{{insertEquationData}{(}{index}{,}{{state}{.}{getSecondaryState}{(}{{index}{-}{NUMBER_CONSTANT}}{)}}{,}{y}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{System}{.}{arraycopy}{(}{mapper.start}{,}{NUMBER_CONSTANT}{,}{start}{,}{NUMBER_CONSTANT}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDerivativesConsistency}{()}{{{}{{{doTestDerivativesConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUnstableDerivative}{()}{{{}{{{doTestUnstableDerivative}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testTooLargeFirstStep}{()}{{{}{{{doTestTooLargeFirstStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSingleStep}{()}{{{}{{{doTestSingleStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testStepSize}{()}{{{}{{{doTestStepSize}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testKepler}{()}{{{}{{{doTestKepler}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBackward}{()}{{{}{{{doTestBackward}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBigStep}{()}{{{}{{{doTestBigStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSmallStep}{()}{{{}{{{doTestSmallStep}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testDecreasingSteps}{()}{{{}{{{doTestDecreasingSteps}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testSanityChecks}{()}{{{}{{{doTestSanityChecks}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testMissedEndEvent}{()}{{{}{{{doTestMissedEndEvent}{(}{{Decimal64Field}{.}{getInstance}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testNonFieldIntegratorConsistency}{()}{{{}{{{doTestNonFieldIntegratorConsistency}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{FieldFirstOrderIntegrator}}{<}{{T}}{>}}{integrator}}}
{AST_ROOT_SC2NF{{final}{{{FieldFirstOrderDifferentialEquations}}{<}{{T}}{>}}{eqn}}}
{AST_ROOT_SC2NF{{final}{{{FieldFirstOrderDifferentialEquations}}{<}{{T}}{>}}{eqn}}}
{AST_ROOT_SC2NF{{final}{{{FieldFirstOrderIntegrator}}{<}{{T}}{>}}{integrator}}}
{AST_ROOT_SC2NF{{final}{{{FieldFirstOrderDifferentialEquations}}{<}{{T}}{>}}{equations}}}
{AST_ROOT_SC2NF{{final}{{{FieldFirstOrderDifferentialEquations}}{<}{{T}}{>}}{primary}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MaxCountExceededException}}{.}{class}}}{)}}{public}{void}{exceedMaxEvaluations}{()}{{{}{{{doExceedMaxEvaluations}{(}{{Decimal64Field}{.}{getInstance}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{taylor}{(}{{getPreviousState}{()}}{,}{time}{,}{scalingH}{,}{scaled}{,}{nordsieck}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeedInternal}{(}{{new}{{int}{[]}}{{{}{seed}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{seed}{==}{null}}{)}{{{}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{bits}{=}{{{nextInt}{()}}{>}{>}{>}{NUMBER_CONSTANT}}}{;}}{{{val}{=}{{bits}{%}{n}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mt}{=}{{new}{{int}{[}}{N}{]}}}{;}}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ISAACRandom}{(}{{long}{seed}}{)}{{{}{{{setSeedInternal}{(}{seed}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeedInternal}{(}{{{System}{.}{currentTimeMillis}{()}}{+}{{System}{.}{identityHashCode}{(}{this}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setSeedInternal}{(}{seed}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{timeAndReport}{(}{title}{,}{DEFAULT_REPEAT_CHUNK}{,}{DEFAULT_REPEAT_STAT}{,}{false}{,}{methods}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{sample}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{random}{=}{{new}{{Well44497b}}{(}{seed}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{cityList}{,}{numNeuronsPerCity}{,}{{{new}{{Well44497b}}{()}}{.}{nextLong}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{{(}{double}{)}{observed1.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{{(}{double}{)}{observed1.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{ChiSquaredDistribution}}{{distribution}{=}{{new}{{ChiSquaredDistribution}}{(}{null}{,}{{expected.length}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{double}{{u}{=}{{random}{.}{nextDouble}{()}}}{;}}{{return}{{{u}{*}{upper}}{+}{{{(}{{NUMBER_CONSTANT}{-}{u}}{)}}{*}{lower}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{empiricalDistribution}{.}{getNextValue}{()}}{;}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{=}{{new}{{EmpiricalDistribution}}{(}{binCount}{,}{{randomData}{.}{getRandomGenerator}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{)}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{FDistribution}}{{fdist}{=}{{new}{{FDistribution}}{(}{null}{,}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{FDistribution}}{{fdist}{=}{{new}{{FDistribution}}{(}{null}{,}{a.dfbg}{,}{a.dfwg}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{null}{,}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{null}{,}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TDistribution}}{{distribution}{=}{{new}{{TDistribution}}{(}{null}{,}{{n}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{KolmogorovSmirnovTest}}{{test}{=}{{new}{{KolmogorovSmirnovTest}}{(}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{standardNormal}{=}{{new}{{NormalDistribution}}{(}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{BinomialDistribution}}{{distribution}{=}{{new}{{BinomialDistribution}}{(}{null}{,}{numberOfTrials}{,}{probability}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{randomSource}{=}{RandomSource.WELL_19937_C}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{complexSolver}{.}{solve}{(}{{ComplexUtils}{.}{convertToComplex}{(}{coefficients}{)}}{,}{{new}{{Complex}}{(}{initial}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{complexSolver}{.}{solveAll}{(}{{ComplexUtils}{.}{convertToComplex}{(}{coefficients}{)}}{,}{{new}{{Complex}}{(}{initial}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Complex}}{{c}{[]}{=}{{ComplexUtils}{.}{convertToComplex}{(}{{getCoefficients}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rng}{=}{{new}{{Well19937c}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{dim}}{;}{{i}{++}}{)}{{{}{{{{normalVals}{[}{i}{]}}{=}{{random}{.}{nextGaussian}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{cachedD}{=}{{MatrixUtils}{.}{createRealDiagonalMatrix}{(}{realEigenvalues}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ComplexFormat}}{{cf}{=}{{ComplexFormat}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ComplexFormat}}{{cf}{=}{{ComplexFormat}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{randomGenerator}}}
{AST_ROOT_SC2NF{{public}{NaturalRanking}{(}{{{RandomGenerator}}{randomGenerator}}{)}{{{}{{this}{(}{DEFAULT_NAN_STRATEGY}{,}{TiesStrategy.RANDOM}{,}{randomGenerator}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{nanStrategy}{,}{tiesStrategy}{,}{{new}{{Well19937c}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{DEFAULT_NAN_STRATEGY}{,}{tiesStrategy}{,}{{new}{{Well19937c}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{random}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{random}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{k}{,}{maxIterations}{,}{measure}{,}{{new}{{JDKRandomGenerator}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{random}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{k}{,}{fuzziness}{,}{maxIterations}{,}{measure}{,}{DEFAULT_EPSILON}{,}{{new}{{JDKRandomGenerator}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{random}{=}{{new}{{JDKRandomGenerator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{random}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{randGen}{=}{{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{random}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{d}{[}{r}{]}}{[}{c}{]}}{=}{{random}{.}{nextGaussian}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{size}}{;}{{i}{++}}{)}{{{}{{{{randn}{[}{i}{]}}{=}{{random}{.}{nextGaussian}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{generator}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{random}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{random}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{comp}{=}{{rand}{.}{nextGaussian}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{dimension}{,}{{new}{{MersenneTwister}}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{generator}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{generator}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{field}{=}{{new}{{DfpField}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{generator}{=}{{new}{{MersenneTwister}}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rng}{=}{{new}{{Well19937a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{r}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{r}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Well1024a}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{random}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{rng}{=}{{new}{{Well1024a}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{{PivotingStrategyInterface}}{[]}}{{{}{{new}{{MedianOf3PivotingStrategy}}{()}}{,}{{new}{{CentralPivotingStrategy}}{()}}{,}{{new}{{RandomPivotingStrategy}}{(}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}{)}}{}}}}}
{AST_ROOT_SC2NF{{{kthSelector}{=}{{new}{{KthSelector}}{(}{{new}{{RandomPivotingStrategy}}{(}{{RandomSource}{.}{create}{(}{RandomSource.WELL_1024_A}{,}{NUMBER_CONSTANT}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{rng}{=}{{new}{{MersenneTwister}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{TestUtils}{.}{gTest}{(}{expected}{,}{observed}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{RandomSource}{.}{saveState}{(}{random}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{RandomSource}{.}{saveState}{(}{delegate}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{rng}}{=}{{new}{{Well19937c}}{(}{seed}{)}}}{;}}}
{AST_ROOT_SC2NF{{{rng}{=}{{new}{{Well19937c}}{(}{seed}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomGenerator}}{{random}{=}{{new}{{MersenneTwister}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RandomGenerator}}{{random}{=}{{GeneticAlgorithm}{.}{getRandomGenerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Neuron}}{>}}{{exclude}{=}{{new}{{{ArrayList}}{<}{{Neuron}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayFieldVector}}{<}{{T}}{>}}{{out}{=}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{this}{,}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{FieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{out}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{this}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{components}{=}{{new}{{{ArrayList}}{<}{{ExpandableStatefulODE.SecondaryComponent}}{>}}{()}}}{;}}{{{firstIndex}{=}{{primary}{.}{getDimension}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{components}}{=}{{new}{{{ArrayList}}{<}{{ExpandableStatefulODE.SecondaryComponent}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{{externalList}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{valuesList}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popList}{=}{{new}{{{LinkedList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{SummaryStatistics}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<}{{SummaryStatistics}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{SummaryStatistics}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<}{{SummaryStatistics}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{StatisticalSummary}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<}{{StatisticalSummary}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{SummaryStatistics}}{>}}{{aggregate}{=}{{new}{{{ArrayList}}{<}{{SummaryStatistics}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{y}{,}{yDot}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{interpolator}}{=}{{new}{{{PerfectInterpolator}}{<}{{T}}{>}}{(}{problem}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{circles}}{=}{{new}{{{ArrayList}}{<}{{Circle}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ContinuousOutputFieldModel}}{<}{{T}}{>}}{{otherCm}{=}{{new}{{{ContinuousOutputFieldModel}}{<}{{T}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ContinuousOutputFieldModel}}{<}{{T}}{>}}{{cm}{=}{{new}{{{ContinuousOutputFieldModel}}{<}{{T}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{{SparseFieldMatrix}}{<}{{Fraction}}{>}}{(}{field}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{preMultiply}{(}{{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{.}{toArray}{()}}{)}}{,}{preMultTest}{,}{normTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{testVector}{,}{{{m}{.}{operate}{(}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{testVector}{)}}{)}}{.}{toArray}{()}}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertClose}{(}{STRING_CONSTANT}{,}{{m}{.}{multiply}{(}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{{FractionField}{.}{getInstance}{()}}{,}{testDataInv}{)}}{)}}{,}{identity}{,}{entryTolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Sphere1D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{SubHyperplane}}{<}{{Sphere1D}}{>}}{>}}{{boundary}{=}{{new}{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Sphere1D}}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{{parameters}{=}{{new}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{singletons}{=}{{new}{{{ArrayList}}{<}{{T}}{>}}{(}{{pmf}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{GillFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{{parameters}{=}{{new}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{clusterer}{=}{{new}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{clusterer}{=}{{new}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{DBSCANClusterer}}{<}{{DoublePoint}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{HashSet}}{<}{{Object}}{>}}{{sampSet}{=}{{new}{{{HashSet}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{double}{[]}}{>}}{{coordinatesList}{=}{{new}{{{ArrayList}}{<}{{double}{[]}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Neuron}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Neuron}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{City}}{>}}{{cityList}{=}{{new}{{{ArrayList}}{<}{{City}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{CircleVectorial}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MidpointFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{convexCellsInsidePoints}}{=}{{new}{{{ArrayList}}{<}{{Vector3D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{root}{=}{{new}{{{BSPTree}}{<}{{S}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<}{{Segment}}{>}}{(}{{list}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parametersNames}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}{{{parametersNames}{.}{addAll}{(}{names}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parametersNames}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{d}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{map}{=}{{new}{{{HashMap}}{<}{{{Class}}{<}{?}{>}}{,}{{NumberTransformer}}{>}}{()}}}{;}}{{{defaultTransformer}{=}{{new}{{DefaultTransformer}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{T}}{>}}{{oneSet}{=}{{new}{{{HashSet}}{<}{{T}}{>}}{(}{one}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{T}}{>}}{{neighbors}{=}{{new}{{{ArrayList}}{<}{{T}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{T}}{>}}{{seeds}{=}{{new}{{{ArrayList}}{<}{{T}}{>}}{(}{neighbors}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{segments}{=}{{new}{{{ArrayList}}{<}{{Segment}}{>}}{(}{{list}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Pair}}{<}{{RealMatrix}}{,}{{RealVector}}{>}}{(}{normal}{,}{jTr}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{LinearConstraint}}{>}}{{constraints}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{double}{[]}}{>}}{()}}}{;}}{{{sigma}{=}{error}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Long}}{>}}{{linkEnd}{=}{{new}{{{ArrayList}}{<}{{Long}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{(}{{population}{.}{getChromosomes}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{Comparable}}{<}{?}{>}}{>}}{{modeList}{=}{{new}{{{ArrayList}}{<}{{{Comparable}}{<}{?}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{features}}{=}{{new}{{{AtomicReference}}{<}{{double}{[]}}{>}}{(}{{features}{.}{clone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector3D}}{>}}{{reducedSupport}{=}{{new}{{{ArrayList}}{<}{{Vector3D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector3D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector3D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean3D}}{,}{{Vector3D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<}{{Euclidean3D}}{,}{{Vector3D}}{>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean3D}}{,}{{Vector3D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<}{{Euclidean3D}}{,}{{Vector3D}}{>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{TreeSet}}{<}{{Double}}{>}}{{values}{=}{{new}{{{TreeSet}}{<}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{PairDoubleInteger}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{PairDoubleInteger}}{>}}{(}{len}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{KMeansPlusPlusClusterer}}{<}{{DoublePoint}}{>}}{{transformer}{=}{{new}{{{KMeansPlusPlusClusterer}}{<}{{DoublePoint}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{double}{[]}}{>}}{{paramsAndChi2}{=}{{new}{{{ArrayList}}{<}{{double}{[]}}{>}}{(}{{gridSize}{*}{gridSize}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ThreeEighthesFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{p2}{=}{{new}{{{Pair}}{<}{{String}}{,}{{Integer}}{>}}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popList}{=}{{new}{{{LinkedList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Neuron}}{>}}{{neuronList}{=}{{new}{{{ArrayList}}{<}{{Neuron}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Neuron}}{>}}{{neurons}{=}{{new}{{{ArrayList}}{<}{{Neuron}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{copy.linkMap}{.}{put}{(}{{e}{.}{getKey}{()}}{,}{{new}{{{HashSet}}{<}{{Long}}{>}}{(}{{e}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{Dfp}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{{interpolator}{=}{{new}{{{FieldHermiteInterpolator}}{<}{{BigFraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{WeightedObservedPoint}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{WeightedObservedPoint}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Chromosome}}{>}}{{chromosomes}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{reducedSupport}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{(}{{coordinates.length}{/}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean2D}}{,}{{Vector2D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<}{{Euclidean2D}}{,}{{Vector2D}}{>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{WelzlEncloser}}{<}{{Euclidean2D}}{,}{{Vector2D}}{>}}{{encloser}{=}{{new}{{{WelzlEncloser}}{<}{{Euclidean2D}}{,}{{Vector2D}}{>}}{(}{NUMBER_CONSTANT}{,}{generator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{mapper}{=}{{new}{{{FieldEquationsMapper}}{<}{{T}}{>}}{(}{mapper}{,}{{secondary}{.}{getDimension}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{String}}{>}}{{referenceRules}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{String}}{>}}{{referenceRules}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FirstOrderFieldDifferentialEquations}}{<}{{T}}{>}}{{eqn}{=}{{new}{{{SinCos}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<}{{T}}{>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{setUpInterpolator}{(}{field}{,}{{new}{{{SinCos}}{<}{{T}}{>}}{(}{field}{)}}{,}{NUMBER_CONSTANT}{,}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{,}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{pData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{innerDistribution}{=}{{new}{{{EnumeratedDistribution}}{<}{{Integer}}{>}}{(}{{createDistribution}{(}{singletons}{,}{probabilities}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ClassicalRungeKuttaFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{{FieldLUDecomposition}}{<}{{Fraction}}{>}}{(}{m}{)}}{.}{getDeterminant}{()}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecomposition}}{<}{{Fraction}}{>}}{(}{{createFractionMatrix}{(}{singular}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{solver}{=}{{{new}{{{FieldLUDecomposition}}{<}{{Fraction}}{>}}{(}{{createFractionMatrix}{(}{testData}{)}}{)}}{.}{getSolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popList}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{NPointCrossover}}{<}{{Integer}}{>}}{{npc}{=}{{new}{{{NPointCrossover}}{<}{{Integer}}{>}}{(}{order}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rowDimension}{,}{columnDimension}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{nCols}{,}{nRows}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{outData}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{NUMBER_CONSTANT}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{m.columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BlockFieldMatrix}}{<}{{T}}{>}}{{out}{=}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rows}{,}{columns}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{BlockFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rowDimension}{,}{columnDimension}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{loops}{=}{{new}{{{ArrayList}}{<}{{Vertex}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{factors}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v1}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{Fraction}}{>}}{{v1}{=}{{new}{{{SparseFieldVector}}{<}{{Fraction}}{>}}{(}{field}{,}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{FieldODEState}}{<}{{T}}{>}}{(}{t0}{,}{y0}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Sphere1D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Sphere2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Sphere2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{SubHyperplane}}{<}{{Sphere2D}}{>}}{>}}{{boundary}{=}{{new}{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Sphere2D}}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{SubHyperplane}}{<}{{Sphere2D}}{>}}{>}}{{boundary}{=}{{new}{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Sphere2D}}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Sphere2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Sphere2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Integer}}{>}}{{nonZeroPositions}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{{{{this}{.}{segments}}{=}{{new}{{{ArrayList}}{<}{{ConnectableSegment}}{>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Segment}}{>}}{{loop}{=}{{new}{{{ArrayList}}{<}{{Segment}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{loops}{=}{{new}{{{ArrayList}}{<}{{{List}}{<}{{Segment}}{>}}{>}}{()}}}}
{AST_ROOT_SC2NF{{{{this}{.}{lines}}{=}{{new}{{{ArrayList}}{<}{{Line}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{representation}}{=}{{Collections}{.}{unmodifiableList}{(}{{copyList}{?}{{new}{{{ArrayList}}{<}{{T}}{>}}{(}{representation}{)}}{:}{representation}}{)}}}{;}}}
{AST_ROOT_SC2NF{{newClusters}{=}{{new}{{{ArrayList}}{<}{{{CentroidCluster}}{<}{{T}}{>}}{>}}{(}{k}{)}}}}
{AST_ROOT_SC2NF{{{microsphereData}{=}{{new}{{{ArrayList}}{<}{{FacetData}}{>}}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Neuron}}{>}}{{list}{=}{{new}{{{HashSet}}{<}{{Neuron}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{listeners}}{=}{{new}{{{CopyOnWriteArrayList}}{<}{{IterationListener}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{listeners}}{=}{{new}{{{CopyOnWriteArrayList}}{<}{{IterationListener}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{minRatioPositions}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{innerDistribution}{=}{{new}{{{EnumeratedDistribution}}{<}{{Double}}{>}}{(}{{createDistribution}{(}{singletons}{,}{probabilities}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Interval}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Interval}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{LutherFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{FuzzyKMeansClusterer}}{<}{{DoublePoint}}{>}}{{clusterer}{=}{{new}{{{FuzzyKMeansClusterer}}{<}{{DoublePoint}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{SparseFieldMatrix}}{<}{{T}}{>}}{(}{{getField}{()}}{,}{rowDimension}{,}{columnDimension}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{SparseFieldMatrix}}{<}{{T}}{>}}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{{getField}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{other.entries}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{steps}{=}{{new}{{{ArrayList}}{<}{{StepInterpolator}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{output}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{evaluator}{=}{{new}{{{SumOfClusterVariances}}{<}{{DoublePoint}}{>}}{(}{{new}{{EuclideanDistance}}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Fraction}}{>}}{{generated}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{Fraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Integer}}{>}}{{keysInMap}{=}{{new}{{{HashSet}}{<}{{Integer}}{>}}{(}{{javaMap}{.}{keySet}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{(}{field}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{{map}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{Fraction}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Fraction}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{Fraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{fields}{=}{{new}{{{ArrayList}}{<}{{Field}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Euclidean1D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<}{{WeightedObservedPoint}}{>}}{(}{observations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Neuron}}{,}{{Integer}}{>}}{{hit}{=}{{new}{{{HashMap}}{<}{{Neuron}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{PairNeuronDouble}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{PairNeuronDouble}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{CentroidCluster}}{<}{{T}}{>}}{>}}{{newClusters}{=}{{new}{{{ArrayList}}{<}{{{CentroidCluster}}{<}{{T}}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{Object}}{[]}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{GillFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldRotation}}{<}{{DerivativeStructure}}{>}}{(}{mds}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldRotation}}{<}{{DerivativeStructure}}{>}}{{quat}{=}{{new}{{{FieldRotation}}{<}{{DerivativeStructure}}{>}}{(}{u1}{,}{u2}{,}{v1}{,}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{{v1}{=}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{vec1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldVectorTestImpl}}{<}{{T}}{>}}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{orig}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{hParam}}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{regions}{=}{{new}{{{ArrayList}}{<}{{{Region}}{<}{{T}}{>}}{>}}{(}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{BoundaryProjection}}{<}{{S}}{>}}{(}{original}{,}{projected}{,}{offset}{)}}{;}}}
{AST_ROOT_SC2NF{{{binStats}{=}{{new}{{{ArrayList}}{<}{{SummaryStatistics}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MidpointFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{surrounded}}{=}{{new}{{{ArrayList}}{<}{{NestedLoops}}{>}}{()}}}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{S}}{>}}{(}{time}{,}{estimatedState}{,}{estimatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{nordsieck}}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{{nordsieck}{.}{getData}{()}}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{boundary}{=}{{new}{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Euclidean3D}}{>}}{>}}{()}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{BSPTree}}{<}{{Euclidean3D}}{>}}{(}{Boolean.FALSE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<}{{T}}{>}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{virtualSize}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldMatrix}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{virtualSize}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<}{{T}}{>}}{(}{field}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<}{{T}}{>}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{SparseFieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<}{{T}}{>}}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{SparseFieldVector}}{<}{{T}}{>}}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<}{{T}}{>}}{(}{this}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldVector}}{<}{{T}}{>}}{{res}{=}{{new}{{{SparseFieldVector}}{<}{{T}}{>}}{(}{this}{,}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{{v}{.}{getEntries}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{field}{,}{expectedSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{v.entries}{)}}}{;}}}
{AST_ROOT_SC2NF{{{entries}{=}{{new}{{{OpenIntToFieldHashMap}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ClassicalRungeKuttaFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ListUnivariateImpl}{()}{{{}{{this}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{TestFieldProblem3}}{<}{{T}}{>}}{{pb}{=}{{new}{{{TestFieldProblem3}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{jacobianProviders}}{=}{{new}{{{ArrayList}}{<}{{ParameterJacobianProvider}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{LutherFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Frequency}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<}{{Frequency}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ThreeEighthesFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{newRepr}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{(}{{origChrom}{.}{getRepresentation}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SimplePointChecker}}{<}{{PointValuePair}}{>}}{{checker}{=}{{new}{{{SimplePointChecker}}{<}{{PointValuePair}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{SimplePointChecker}}{<}{{PointValuePair}}{>}}{{checker}{=}{{new}{{{SimplePointChecker}}{<}{{PointValuePair}}{>}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{max}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{SummaryStatistics}}{>}}{{categoryDataSummaryStatistics}{=}{{new}{{{ArrayList}}{<}{{SummaryStatistics}}{>}}{(}{{categoryData}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{String}}{>}}{{lines}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Number}}{>}}{{components}{=}{{new}{{{ArrayList}}{<}{{Number}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{step}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Double}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector3D}}{>}}{{support}{=}{{new}{{{ArrayList}}{<}{{Vector3D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{CircleScalar}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Integer}}{>}}{{seq}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{EventHandler}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{EventHandler}}{>}}{(}{{eventsStates}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{WeightedObservedPoint}}{>}}{{observations}{=}{{new}{{{ArrayList}}{<}{{WeightedObservedPoint}}{>}}{(}{unsorted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{chromosomes}}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{(}{populationLimit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{Fraction}}{>}}{(}{data}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{reference}{)}}{,}{sub}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{subTestData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{BlockFieldMatrix}}{<}{{Fraction}}{>}}{(}{testData}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Sphere1D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Sphere1D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayList}}{<}{{Edge}}{>}}{(}{{edgeToNode}{.}{keySet}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{{stateTmp}{=}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{stepEnd}{,}{yTmp}{,}{yDotTmp}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{{externalList}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{{state0}{=}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{t0}{,}{y0}{,}{y0Dot}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean3D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Euclidean3D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{integrator}{.}{integrate}{(}{{new}{{{FieldExpandableODE}}{<}{{T}}{>}}{(}{problem}{)}}{,}{{problem}{.}{getInitialState}{()}}{,}{{problem}{.}{getFinalTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{points}{=}{{new}{{{ArrayList}}{<}{{double}{[]}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{FieldVector3D}}{<}{{T}}{>}}{(}{NUMBER_CONSTANT}{,}{this}{,}{factor}{,}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Complex}}{>}}{{result}{=}{{new}{{{ArrayList}}{<}{{Complex}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldRotation}}{<}{{Dfp}}{>}}{(}{mds}{,}{threshold}{)}}{;}}}
{AST_ROOT_SC2NF{{{{FieldRotation}}{<}{{Dfp}}{>}}{{quat}{=}{{new}{{{FieldRotation}}{<}{{Dfp}}{>}}{(}{u1}{,}{u2}{,}{v1}{,}{v2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{OnePointCrossover}}{<}{{Integer}}{>}}{{opc}{=}{{new}{{{OnePointCrossover}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{BSPTree}}{<}{{Sphere1D}}{>}}{{tree}{=}{{new}{{{BSPTree}}{<}{{Sphere1D}}{>}}{(}{Boolean.FALSE}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Arc}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Arc}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{newRepr}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{(}{repr}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Double}}{>}}{{generated}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Integer}}{>}}{{keysInMap}{=}{{new}{{{HashSet}}{<}{{Integer}}{>}}{(}{{javaMap}{.}{keySet}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{Integer}}{,}{{Double}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Integer}}{>}}{{usedBasicRows}{=}{{new}{{{HashSet}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Integer}}{>}}{{columnsToDrop}{=}{{new}{{{TreeSet}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LinearConstraint}}{>}}{{normalized}{=}{{new}{{{ArrayList}}{<}{{LinearConstraint}}{>}}{(}{{originalConstraints}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{{parameters}{=}{{new}{{{ArrayList}}{<}{{{Object}}{[]}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Pair}}{<}{{K}}{,}{{V}}{>}}{(}{k}{,}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Cluster}{()}{{{}{{{points}{=}{{new}{{{ArrayList}}{<}{{T}}{>}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{close}{=}{{new}{{{ArrayList}}{<}{{{BSPTree}}{<}{{S}}{>}}{>}}{()}}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{time}{,}{interpolatedState}{,}{interpolatedDerivatives}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Double}}{>}}{{values}{=}{{new}{{{HashSet}}{<}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{{BigFractionField}{.}{getInstance}{()}}{,}{Hdata}{)}}{;}}}
{AST_ROOT_SC2NF{{{{TestFieldProblem3}}{<}{{T}}{>}}{{pb}{=}{{new}{{{TestFieldProblem3}}{<}{{T}}{>}}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BoundarySizeVisitor}}{<}{{S}}{>}}{{visitor}{=}{{new}{{{BoundarySizeVisitor}}{<}{{S}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{BoundaryProjector}}{<}{{S}}{,}{{T}}{>}}{{projector}{=}{{new}{{{BoundaryProjector}}{<}{{S}}{,}{{T}}{>}}{(}{point}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{tree}{=}{{new}{{{BSPTree}}{<}{{S}}{>}}{(}{Boolean.FALSE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tree}}{=}{{new}{{{BSPTree}}{<}{{S}}{>}}{(}{Boolean.TRUE}{)}}}{;}}{{{{this}{.}{tolerance}}{=}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{baseSequence}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{S}}{>}}{{origDataCopy}{=}{{new}{{{ArrayList}}{<}{{S}}{>}}{(}{originalData}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{S}}{>}}{{sortedData}{=}{{new}{{{ArrayList}}{<}{{S}}{>}}{(}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{repr}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{repr}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{(}{l}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Double}}{>}}{{sortedRepr}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{(}{{getRepresentation}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{distribution}{=}{{new}{{{ArrayList}}{<}{{T}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{quadrilateral}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Vector2D}}{>}}{{reducedPoints}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{(}{quadrilateral}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Integer}}{>}}{{rList}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{(}{length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{context}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{support}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{Double}}{>}}{{integrationTestPoints}{=}{{new}{{{ArrayList}}{<}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{edges}{=}{{new}{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Euclidean2D}}{>}}{>}}{()}}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{FieldODEState}}{<}{{T}}{>}}{(}{{state}{.}{getTime}{()}}{,}{y}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Integer}}{>}}{{out}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{Fraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{Fraction}}{>}}{(}{fData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{BigFraction}}{>}}{{m}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{BigFraction}}{>}}{(}{bfData}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldBracketingNthOrderBrentSolver}}{<}{{Dfp}}{>}}{{solver}{=}{{new}{{{FieldBracketingNthOrderBrentSolver}}{<}{{Dfp}}{>}}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{FieldBracketingNthOrderBrentSolver}}{<}{{Dfp}}{>}}{{solver}{=}{{new}{{{FieldBracketingNthOrderBrentSolver}}{<}{{Dfp}}{>}}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{{FieldBracketingNthOrderBrentSolver}}{<}{{Dfp}}{>}}{(}{relativeAccuracy}{,}{absoluteAccuracy}{,}{functionValueAccuracy}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{(}{size}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{{points}{=}{{new}{{{ArrayList}}{<}{{Vector2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Euclidean2D}}{>}}{>}}{{edges}{=}{{new}{{{ArrayList}}{<}{{{SubHyperplane}}{<}{{Euclidean2D}}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{{factory}{=}{{new}{{{RegionFactory}}{<}{{Euclidean2D}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{WeightedObservedPoint}}{>}}{{observations}{=}{{new}{{{ArrayList}}{<}{{WeightedObservedPoint}}{>}}{(}{unsorted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{steps}{=}{{new}{{{ArrayList}}{<}{{{FieldStepInterpolator}}{<}{{T}}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{City}}{>}}{{unique}{=}{{new}{{{HashSet}}{<}{{City}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Future}}{<}{?}{>}}{>}}{{execOutput}{=}{{new}{{{ArrayList}}{<}{{{Future}}{<}{?}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{certifiedValues}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EulerFieldIntegrator}}{<}{{T}}{>}}{(}{field}{,}{{field}{.}{getOne}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{FieldMatrix}}{<}{{T}}{>}}{{identity}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{{ArrayFieldVector}}{<}{{T}}{>}}{(}{field}{,}{bp}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Solver}}{<}{{T}}{>}}{(}{field}{,}{lu}{,}{pivot}{,}{singular}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{cachedP}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedU}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{cachedL}{=}{{new}{{{Array2DRowFieldMatrix}}{<}{{T}}{>}}{(}{field}{,}{m}{,}{m}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Chromosome}}{>}}{{popChr}{=}{{new}{{{ArrayList}}{<}{{Chromosome}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Neuron}}{>}}{{exclude}{=}{{new}{{{HashSet}}{<}{{Neuron}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Neuron}}{>}}{{exclude}{=}{{new}{{{HashSet}}{<}{{Neuron}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{BigFraction}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{BigFraction}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{derivatives}}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{derivatives}}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{Double}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{tasks}{=}{{new}{{{ArrayList}}{<}{{{Callable}}{<}{{Double}}{>}}{>}}{()}}}}
{AST_ROOT_SC2NF{{final}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{{stateTmp}{=}{{new}{{{FieldODEStateAndDerivative}}{<}{{T}}{>}}{(}{stepEnd}{,}{yTmp}{,}{yDotTmp}{)}}}{;}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{chromosomes}{,}{NUMBER_CONSTANT}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{new}{{ListPopulation}}{(}{chromosomes}{,}{NUMBER_CONSTANT}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{new}{{ListPopulation}}{(}{chromosomes}{,}{{-}{NUMBER_CONSTANT}}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{ListPopulation}}{(}{{-}{NUMBER_CONSTANT}}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{population}{=}{{new}{{ListPopulation}}{(}{NUMBER_CONSTANT}{)}{{{}{{public}{{Population}}{nextGeneration}{()}{{{}{{return}{null}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{public}{{StepInterpolator}}{copy}{()}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{public}{{StepInterpolator}}{copy}{()}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p1c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Chromosome}}{{p2c}{=}{{new}{{Chromosome}}{()}{{{}{{public}{double}{fitness}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{val}}{:}{{this}{.}{getRepresentation}{()}}{)}{{{}{{if}{(}{{val}{!=}{NUMBER_CONSTANT}}{)}{{{num}{++}}{;}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{count}{++}}{>}{NUMBER_CONSTANT}}{)}{break;}}}
{AST_ROOT_SC2NF{{if}{(}{{{count}{++}}{>}{NUMBER_CONSTANT}}{)}{break;}}}
{AST_ROOT_SC2NF{{if}{(}{{{counts}{[}{i}{]}}{==}{{-}{NUMBER_CONSTANT}}}{)}{continue;}}}
{AST_ROOT_SC2NF{{{RandomSource}{.}{restoreState}{(}{random}{,}{state}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{RandomSource}{.}{saveState}{(}{random}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RandomSource}{.}{restoreState}{(}{delegate}{,}{state}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{RandomSource}{.}{saveState}{(}{delegate}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{n}{=}{{{upper}{-}{lower}}{+}{NUMBER_CONSTANT}}}{;}}{{return}{{{(}{{{n}{*}{n}}{-}{NUMBER_CONSTANT}}{)}}{/}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{NUMBER_CONSTANT}{*}{{(}{{lower}{+}{upper}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{x}{-}{lower}}{+}{NUMBER_CONSTANT}}{)}}{/}{{(}{{{upper}{-}{lower}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{/}{{(}{{{upper}{-}{lower}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{(}{{(}{{RandomSource.State}}{)}{{delegate}{.}{saveState}{()}}}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{defaultWriteObject}{()}}{;}}{{{out}{.}{writeObject}{(}{{{(}{{(}{{RandomSource.State}}{)}{{random}{.}{saveState}{()}}}{)}}{.}{getState}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{,}{{new}{{JDKRandomAdaptor}}{(}{rng}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{,}{{new}{{JDKRandomAdaptor}}{(}{rng}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{shuffle}{)}{{{}{{{Collections}{.}{shuffle}{(}{points}{,}{{new}{{JDKRandomAdaptor}}{(}{rng}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{{{(}{{(}{{Vector1D}}{)}{point}}{)}}{.}{getX}{()}}{-}{{location}{.}{getX}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector1D}}{location}}}
{AST_ROOT_SC2NF{{{}{{final}{{Circle}}{{otherC}{=}{{(}{{Circle}}{)}{other}}}{;}}{{return}{{{Vector3D}{.}{dotProduct}{(}{pole}{,}{otherC.pole}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{direction}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{pole}}}
{AST_ROOT_SC2NF{{{{Vector3D}}{[]}}{points}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Vector3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{Arrays}{.}{asList}{(}{Vector3D.ZERO}{,}{Vector3D.PLUS_I}{,}{Vector3D.PLUS_J}{,}{Vector3D.PLUS_K}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{ps}{.}{checkPoint}{(}{Vector3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{{tmp}{=}{{loop}{[}{min}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Vector2D}}{[]}}{bLoop}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{axis}}}
{AST_ROOT_SC2NF{{{Vector3D}}{axis}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{oneTwo}{=}{{new}{{Vector2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Vector2D}}{(}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Vector1D}}{{p1}{=}{{(}{{Vector1D}}{)}{vector}}}{;}}{{return}{{format}{(}{toAppendTo}{,}{pos}{,}{{p1}{.}{getX}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{expected}{=}{{new}{{Vector2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{Vector2D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{Vector2D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{Vector2D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{{new}{{Vector2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{{new}{{Vector2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{{new}{{Vector2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{{new}{{Vector2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{c}{=}{{new}{{Vector2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Line}}{(}{{new}{{Vector2D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OrientedPoint}}{(}{{new}{{Vector1D}}{(}{{getNumber}{()}}{)}}{,}{{getBoolean}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Circle}}{(}{{new}{{Vector3D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{u}}}
{AST_ROOT_SC2NF{{{Vector1D}}{v}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{v}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{v}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Space}}{{space}{=}{{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{space}{.}{getDimension}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{{p}{=}{{h}{.}{toSpace}{(}{Vector2D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{{p}{=}{{h}{.}{toSpace}{(}{Vector1D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{{p2}{=}{{(}{{Vector2D}}{)}{vector}}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{c}{=}{Vector3D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{c}{=}{Vector3D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{{c}{=}{Vector3D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{expected}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{Vector1D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{Vector1D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{Vector1D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{{new}{{Vector1D}}{(}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Vector1D}}{{c}{=}{{new}{{Vector1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Vector3D}{.}{angle}{(}{{thisCircle}{.}{getPole}{()}}{,}{{otherCircle}{.}{getPole}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Vector3D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{vector}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{(}{{(}{{Vector3D}}{)}{point}}{)}}{.}{dotProduct}{(}{w}{)}}{+}{originOffset}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Vector3D}{.}{angle}{(}{w}{,}{plane.w}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{{tmp}{=}{u}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{normal}}}
{AST_ROOT_SC2NF{{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Vector3D}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Space}}{{space}{=}{{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{Vector1D}}{)}{{set}{.}{getBarycenter}{()}}}{)}}{.}{getX}{()}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{p}}}
{AST_ROOT_SC2NF{{{Vector2D}}{{p2}{=}{{(}{{Vector2D}}{)}{point}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{p}}}
{AST_ROOT_SC2NF{{TranslationTransform}{(}{{final}{{Vector3D}}{translation}}{)}{{{}{{{{this}{.}{translation}}{=}{translation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{point}}}
{AST_ROOT_SC2NF{{{}{{{setSize}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setBarycenter}{(}{{(}{{{Point}}{<}{{Euclidean3D}}{>}}{)}{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Vector3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Vector3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{{Circle}}{{circle}{=}{{new}{{Circle}}{(}{Vector3D.PLUS_K}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{{Vector2D}}{[]}}{vertices}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{{this}{.}{summedBarycenter}}{=}{Vector3D.ZERO}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Vector2D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{vector}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldVector3D}{.}{angle}{(}{v1}{,}{Vector3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathArithmeticException}}{mae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Vector2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Vector2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{SphericalCoordinates}}{(}{{new}{{Vector3D}}{(}{x}{,}{y}{,}{z}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{point}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{pole}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{p}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Vector3D}{.}{angle}{(}{direction}{,}{line.direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{point}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{{Collections}{.}{<}{{Vector2D}}{>}{emptyList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{x}{=}{{{(}{{(}{{Vector1D}}{)}{point}}{)}}{.}{getX}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{{tmp}{=}{{loop}{[}{min}{]}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Coordinates2D}}{[]}}{bLoop}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{{p2}{=}{{(}{{Coordinates2D}}{)}{vector}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{Coordinates1D}}{)}{{set}{.}{getBarycenter}{()}}}{)}}{.}{getX}{()}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Coordinates3D}}{[]}}{points}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Coordinates3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{Arrays}{.}{asList}{(}{Coordinates3D.ZERO}{,}{Coordinates3D.PLUS_I}{,}{Coordinates3D.PLUS_J}{,}{Coordinates3D.PLUS_K}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{ps}{.}{checkPoint}{(}{Coordinates3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{{p}{=}{{h}{.}{toSpace}{(}{Coordinates2D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{{p}{=}{{h}{.}{toSpace}{(}{Coordinates1D.ZERO}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{expected}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{Coordinates2D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{Coordinates2D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{Coordinates2D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{c}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{x}{=}{{{(}{{(}{{Coordinates1D}}{)}{point}}{)}}{.}{getX}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Coordinates3D}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Space}}{{space}{=}{{{new}{{Coordinates3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Line}}{(}{{new}{{Coordinates2D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OrientedPoint}}{(}{{new}{{Coordinates1D}}{(}{{getNumber}{()}}{)}}{,}{{getBoolean}{()}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Circle}}{(}{{new}{{Coordinates3D}}{(}{{getNumber}{()}}{,}{{getNumber}{()}}{,}{{getNumber}{()}}{)}}{,}{{getNumber}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Circle}}{{circle}{=}{{new}{{Circle}}{(}{Coordinates3D.PLUS_K}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{SphericalCoordinates}}{(}{{new}{{Coordinates3D}}{(}{x}{,}{y}{,}{z}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{{{this}{.}{summedBarycenter}}{=}{Coordinates3D.ZERO}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Coordinates1D}}{{p1}{=}{{(}{{Coordinates1D}}{)}{vector}}}{;}}{{return}{{format}{(}{toAppendTo}{,}{pos}{,}{{p1}{.}{getX}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Coordinates2D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{vector}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{p}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Coordinates3D}{.}{angle}{(}{direction}{,}{line.direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{point}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{{c}{=}{Coordinates3D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{{c}{=}{Coordinates3D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{{c}{=}{Coordinates3D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{expected}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{Coordinates1D.NEGATIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{Coordinates1D.POSITIVE_INFINITY}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{Coordinates1D.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{c}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{axis}}}
{AST_ROOT_SC2NF{{{Coordinates3D}}{axis}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{u}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Coordinates3D}{.}{angle}{(}{{thisCircle}{.}{getPole}{()}}{,}{{otherCircle}{.}{getPole}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Coordinates2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Coordinates2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{(}{{(}{{Coordinates3D}}{)}{point}}{)}}{.}{dotProduct}{(}{w}{)}}{+}{originOffset}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Coordinates3D}{.}{angle}{(}{w}{,}{plane.w}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{{tmp}{=}{u}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{normal}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldVector3D}{.}{angle}{(}{v1}{,}{Coordinates3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathArithmeticException}}{mae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Circle}}{{otherC}{=}{{(}{{Circle}}{)}{other}}}{;}}{{return}{{{Coordinates3D}{.}{dotProduct}{(}{pole}{,}{otherC.pole}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{direction}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{pole}}}
{AST_ROOT_SC2NF{{{}{{return}{{Coordinates3D}{.}{angle}{(}{p1.vector}{,}{p2.vector}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{vector}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Coordinates2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{{Collections}{.}{<}{{Coordinates2D}}{>}{emptyList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{delta}{=}{{{{(}{{(}{{Coordinates1D}}{)}{point}}{)}}{.}{getX}{()}}{-}{{location}{.}{getX}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Coordinates1D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{pole}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{point}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{{Coordinates2D}}{{oneTwo}{=}{{new}{{Coordinates2D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Coordinates2D}}{(}{v}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Coordinates2D}}{[]}}{vertices}}}
{AST_ROOT_SC2NF{{TranslationTransform}{(}{{final}{{Coordinates3D}}{translation}}{)}{{{}{{{{this}{.}{translation}}{=}{translation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{translation}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{center}}}
{AST_ROOT_SC2NF{{final}{{Coordinates3D}}{point}}}
{AST_ROOT_SC2NF{{{}{{{setSize}{(}{NUMBER_CONSTANT}{)}}{;}}{{{setBarycenter}{(}{{(}{{{Point}}{<}{{Euclidean3D}}{>}}{)}{{new}{{Coordinates3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Coordinates3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Coordinates3D}}{>}}{vertices}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{v}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{v}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Coordinates1D}}{{v}{=}{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Space}}{{space}{=}{{{new}{{Coordinates1D}}{(}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{space}{.}{getDimension}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{final}{{Coordinates2D}}{p}}}
{AST_ROOT_SC2NF{{{}{{{{centered}{[}{i}{]}}{=}{{{values}{[}{i}{]}}{-}{{{getMeans}{()}}{[}{i}{]}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{final}{{ContinuousSampler}}{{sampler}{=}{{new}{{BoxMullerLogNormalSampler}}{(}{rng}{,}{scale}{,}{shape}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{final}{{ContinuousSampler}}{{sampler}{=}{{new}{{BoxMullerGaussianSampler}}{(}{rng}{,}{mean}{,}{standardDeviation}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{Plot}{(}{{final}{{{List}}{<}{{Vector2D}}{>}}{points}}{)}{{{}{{{{this}{.}{points}}{=}{points}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Vector2D}}{>}}{{points}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{p}}}
{AST_ROOT_SC2NF{{rings}{=}{{new}{{ChineseRings}}{(}{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{actual}{=}{{vector1DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{actual}{=}{{vector1DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{actual}{=}{{vector1DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian1D}}{{expected}{=}{{new}{{Cartesian1D}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Cartesian1D}}{{p1}{=}{{(}{{Cartesian1D}}{)}{vector}}}{;}}{{return}{{format}{(}{toAppendTo}{,}{pos}{,}{{p1}{.}{getX}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Cartesian2D}}{{p2}{=}{{(}{{Cartesian2D}}{)}{vector}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{actual}{=}{{vector2DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{actual}{=}{{vector2DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian2D}}{{actual}{=}{{vector2DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{{actual}{=}{{vector3DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{{actual}{=}{{vector3DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Cartesian3D}}{{actual}{=}{{vector3DFormat}{.}{parse}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{j}{=}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertFalse}{(}{{STRING_CONSTANT}{+}{level}}{,}{{{{new}{{KolmogorovSmirnovTest}}{(}{RandomSource.JDK}{,}{NUMBER_CONSTANT}{)}}{.}{kolmogorovSmirnovTest}{(}{betaDistribution}{,}{observed}{)}}{<}{level}}{)}}{;}}}
{AST_ROOT_SC2NF{{Assert}{.}{assertEquals}{(}{{test}{.}{exactP}{(}{d}{,}{sampleSize1}{,}{sampleSize2}{,}{strict}{)}}{,}{{test}{.}{monteCarloP}{(}{d}{,}{sampleSize1}{,}{sampleSize2}{,}{strict}{,}{KolmogorovSmirnovTest.MONTE_CARLO_ITERATIONS}{,}{rng}{)}}{,}{tol}{)}}}
{AST_ROOT_SC2NF{{final}{double}{{tol}{=}{KolmogorovSmirnovTestTest.TOLERANCE}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{tol}{=}{KolmogorovSmirnovTestTest.TOLERANCE}}{;}}}
{AST_ROOT_SC2NF{{{Vector3D}}{p}}}
{AST_ROOT_SC2NF{{rings}{=}{{new}{{ChineseRings}}{(}{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldVector3D}{.}{angle}{(}{v1}{,}{Vector3D.ZERO}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{MathArithmeticException}}{mae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{point}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{location}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Vector2D}}{.}{.}{.}{vertices}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{p}}}
{AST_ROOT_SC2NF{{final}{double}{{angle}{=}{{Vector3D}{.}{angle}{(}{direction}{,}{line.direction}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{point}}}
{AST_ROOT_SC2NF{{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Vector3D}}{(}{{new}{{double}{[]}}{{{}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Space}}{{space}{=}{{{new}{{Vector3D}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{getSpace}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Vector2D}}{>}}{points}}}
{AST_ROOT_SC2NF{{{ConvexHull2D}}{{hull}{=}{{generator}{.}{generate}{(}{{Collections}{.}{<}{{Vector2D}}{>}{emptyList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{(}{{(}{{Vector1D}}{)}{{set}{.}{getBarycenter}{()}}}{)}}{.}{getX}{()}}{,}{Precision.EPSILON}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{x}{=}{{{(}{{(}{{Vector1D}}{)}{point}}{)}}{.}{getX}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Vector2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Vector2D}}{p}}{:}{{factory}{.}{generate}{(}{numPoints}{)}}{)}{{{}{{{circle}{.}{addPoint}{(}{{p}{.}{getX}{()}}{,}{{p}{.}{getY}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v1}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v2}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{v}}}
{AST_ROOT_SC2NF{{final}{{Vector3D}}{u}}}
{AST_ROOT_SC2NF{{final}{{{Vector2D}}{[]}}{vertices}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{ret}{=}{NUMBER_CONSTANT}}{;}}{}}}{else}{{{}{{{ret}{=}{{Gamma}{.}{regularizedGammaP}{(}{shape}{,}{{x}{/}{scale}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{Gamma}{.}{logGamma}{(}{{z}{+}{NUMBER_CONSTANT}}{)}}{-}{{{(}{{z}{+}{NUMBER_CONSTANT}}{)}}{*}{{FastMath}{.}{log}{(}{z}{)}}}}{+}{z}}{-}{HALF_LOG_2_PI}}}
{AST_ROOT_SC2NF{{final}{double}{{expected}{=}{{Gamma}{.}{logGamma}{(}{{i}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Gamma}{.}{regularizedGammaP}{(}{mu}{,}{{{mu}{*}{x}{*}{x}}{/}{omega}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NUMBER_CONSTANT}{*}{{FastMath}{.}{pow}{(}{mu}{,}{mu}{)}}}{/}{{(}{{{Gamma}{.}{gamma}{(}{mu}{)}}{*}{{FastMath}{.}{pow}{(}{omega}{,}{mu}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{Gamma}{.}{gamma}{(}{t}{)}}{/}{s}}{,}{tol}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{sc}{*}{sc}}{)}}{*}{{FastMath}{.}{exp}{(}{{Gamma}{.}{logGamma}{(}{{NUMBER_CONSTANT}{+}{{(}{{NUMBER_CONSTANT}{/}{sh}}{)}}}{)}}{)}}}}
{AST_ROOT_SC2NF{{return}{{sc}{*}{{FastMath}{.}{exp}{(}{{Gamma}{.}{logGamma}{(}{{NUMBER_CONSTANT}{+}{{(}{{NUMBER_CONSTANT}{/}{sh}}{)}}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{Gamma}{.}{logGamma}{(}{{n}{+}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{Beta}{.}{regularizedBeta}{(}{probabilityOfSuccess}{,}{numberOfSuccesses}{,}{{x}{+}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{Beta}{.}{logBeta}{(}{nhalf}{,}{mhalf}{)}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{NUMBER_CONSTANT}{-}{{Beta}{.}{regularizedBeta}{(}{probabilityOfSuccess}{,}{{x}{+}{NUMBER_CONSTANT}}{,}{{numberOfTrials}{-}{x}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{x}{>=}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{{}{{return}{{Beta}{.}{regularizedBeta}{(}{x}{,}{alpha}{,}{beta}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{Erf}{.}{erf}{(}{v0}{,}{v1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{+}{{NUMBER_CONSTANT}{*}{{Erf}{.}{erf}{(}{{dev}{/}{{(}{{shape}{*}{SQRT2}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{t}{=}{{Erf}{.}{erfcInv}{(}{p}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{Erf}{.}{erf}{(}{v0}{,}{v1}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{mean}{+}{{standardDeviation}{*}{SQRT2}{*}{{Erf}{.}{erfInv}{(}{{{NUMBER_CONSTANT}{*}{p}}{-}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{*}{{Erf}{.}{erfc}{(}{{{-}{dev}}{/}{{(}{{standardDeviation}{*}{SQRT2}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{term}{*=}{{{FastMath}{.}{pow}{(}{{delta}{[}{k}{]}}{,}{{orders}{[}{k}{]}}{)}}{/}{{CombinatoricsUtils}{.}{factorial}{(}{{orders}{[}{k}{]}}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{refDer}{=}{{{-}{{CombinatoricsUtils}{.}{factorial}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{/}{{FastMath}{.}{pow}{(}{{-}{x}}{,}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{ArithmeticUtils}{.}{pow}{(}{{-}{NUMBER_CONSTANT}}{,}{i}{)}}{*}{{CombinatoricsUtils}{.}{factorial}{(}{i}{)}}}{/}{{FastMath}{.}{pow}{(}{x}{,}{{i}{+}{NUMBER_CONSTANT}}{)}}}}
{AST_ROOT_SC2NF{{CombinatoricsUtils}{.}{binomialCoefficientDouble}{(}{{n}{+}{m}}{,}{m}{)}}}
{AST_ROOT_SC2NF{{double}{{binomial}{=}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{{v}{+}{i}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{numCombinations}{=}{{(}{int}{)}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{arraySize}{,}{numberOfTrueValues}{)}}}}{;}}}
{AST_ROOT_SC2NF{{long}{{expected}{=}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{{i}{+}{j}}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{{coeff}{[}{i}{]}}{[}{j}{]}}{=}{{(}{int}{)}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{i}{,}{j}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{CombinatoricsUtils}{.}{binomialCoefficient}{(}{n}{,}{NUMBER_CONSTANT}{)}}{,}{{CombinatoricsUtils}{.}{stirlingS2}{(}{n}{,}{{n}{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{MathArrays}{.}{linearCombination}{(}{x1}{,}{y1}{,}{{-}{x2}}{,}{y2}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{Cartesian2D}}{{v2}{=}{{(}{{Cartesian2D}}{)}{v}}}{;}}{{return}{{MathArrays}{.}{linearCombination}{(}{x}{,}{v2.x}{,}{y}{,}{v2.y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{n}{=}{{FastMath}{.}{abs}{(}{{MathArrays}{.}{linearCombination}{(}{v1.x}{,}{v2.y}{,}{{-}{v1.y}}{,}{v2.x}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{MathArrays}{.}{linearCombination}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{,}{a3}{,}{b3.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{MathArrays}{.}{linearCombination}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{,}{a3.value}{,}{b3.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{MathArrays}{.}{linearCombination}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{MathArrays}{.}{linearCombination}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{MathArrays}{.}{linearCombination}{(}{a}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{{out.value}{=}{{MathArrays}{.}{linearCombination}{(}{aDouble}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{FastMath}{.}{abs}{(}{{MathArrays}{.}{linearCombination}{(}{sin}{,}{line.cos}{,}{{-}{cos}}{,}{line.sin}{)}}{)}}{<}{tolerance}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{MathArrays}{.}{linearCombination}{(}{sin}{,}{otherL.sin}{,}{cos}{,}{otherL.cos}{)}}{>=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{originOffset}{+}{{(}{{{{MathArrays}{.}{linearCombination}{(}{cos}{,}{line.cos}{,}{sin}{,}{line.sin}{)}}{>}{NUMBER_CONSTANT}}{?}{{-}{line.originOffset}}{:}{line.originOffset}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{accurateValue}{=}{{MathArrays}{.}{linearCombination}{(}{a}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{accurateValue}{=}{{MathArrays}{.}{linearCombination}{(}{aDouble}{,}{bDouble}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{MathArrays}{.}{linearCombination}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{,}{a3}{,}{b3.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{MathArrays}{.}{linearCombination}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{,}{a3.value}{,}{b3.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{MathArrays}{.}{linearCombination}{(}{a1}{,}{b1.value}{,}{a2}{,}{b2.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Decimal64}}{(}{{MathArrays}{.}{linearCombination}{(}{a1.value}{,}{b1.value}{,}{a2.value}{,}{b2.value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Decimal64}}{(}{{MathArrays}{.}{linearCombination}{(}{a}{,}{bDouble}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Decimal64}}{(}{{MathArrays}{.}{linearCombination}{(}{aDouble}{,}{bDouble}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{r}{=}{{MathArrays}{.}{linearCombination}{(}{{coeff}{[}{i}{]}}{,}{pY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{packed}{[}{{i}{+}{NUMBER_CONSTANT}}{]}}{=}{{MathArrays}{.}{linearCombination}{(}{dv}{,}{partials}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{cos}{=}{{MathArrays}{.}{cosAngle}{(}{n}{,}{sampleDirection}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{diffNorm}{=}{{MathArrays}{.}{safeNorm}{(}{diff}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkRelative}{(}{{MathArrays}{.}{linearCombination}{(}{aD}{,}{bD}{)}}{,}{{{bF}{[}{NUMBER_CONSTANT}{]}}{.}{linearCombination}{(}{aD}{,}{bF}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkRelative}{(}{{MathArrays}{.}{linearCombination}{(}{aD}{,}{bD}{)}}{,}{{{aF}{[}{NUMBER_CONSTANT}{]}}{.}{linearCombination}{(}{aF}{,}{bF}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{MathUtils}{.}{normalizeAngle}{(}{alpha}{,}{FastMath.PI}{)}}{,}{{new}{{Cartesian2D}}{(}{{FastMath}{.}{cos}{(}{alpha}{)}}{,}{{FastMath}{.}{sin}{(}{alpha}{)}}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{a1}{.}{getReal}{()}}{,}{{MathUtils}{.}{normalizeAngle}{(}{a2}{,}{{a1}{.}{getReal}{()}}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{double}{{arcRelativeStart}{=}{{{MathUtils}{.}{normalizeAngle}{(}{{arc}{.}{getInf}{()}}{,}{{edgeStart}{+}{FastMath.PI}}{)}}{-}{edgeStart}}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{MathUtils}{.}{normalizeAngle}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{MathUtils}{.}{normalizeAngle}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{MathUtils}{.}{normalizeAngle}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{p}{,}{{MathUtils}{.}{normalizeAngle}{(}{{fitted}{[}{NUMBER_CONSTANT}{]}}{,}{p}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{lB}{=}{{MathUtils}{.}{normalizeAngle}{(}{{limits}{.}{get}{(}{j}{)}}{,}{lA}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{syncedStart}{=}{{{MathUtils}{.}{normalizeAngle}{(}{{a}{[}{NUMBER_CONSTANT}{]}}{,}{reference}{)}}{-}{{arc}{.}{getInf}{()}}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{normalizedLower}{=}{{MathUtils}{.}{normalizeAngle}{(}{lower}{,}{FastMath.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{{a1}{.}{getReal}{()}}{,}{{MathUtils}{.}{normalizeAngle}{(}{a2}{,}{{a1}{.}{getReal}{()}}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{angle}}{=}{{MathUtils}{.}{normalizeAngle}{(}{angle}{,}{FastMath.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{angle}}{=}{{MathUtils}{.}{normalizeAngle}{(}{alpha}{,}{FastMath.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{{angle}{=}{{MathUtils}{.}{normalizeAngle}{(}{line.angle}{,}{FastMath.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{double}{{normalizedPoint}{=}{{MathUtils}{.}{normalizeAngle}{(}{point}{,}{middle}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{lower}}{=}{{MathUtils}{.}{normalizeAngle}{(}{lower}{,}{FastMath.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{knots.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION}{,}{NUMBER_CONSTANT}{,}{knots.length}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{knots.length}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{NumberIsTooSmallException}}{(}{LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION}{,}{NUMBER_CONSTANT}{,}{knots.length}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{g}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{g}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{g}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{g}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{rand}}}
{AST_ROOT_SC2NF{{this}{(}{{new}{{InterpolatingMicrosphere}}{(}{dimension}{,}{elements}{,}{maxDarkFraction}{,}{darkThreshold}{,}{background}{,}{{new}{{UnitSphereRandomVectorGenerator}}{(}{dimension}{)}}{)}}{,}{exponent}{,}{sharedSphere}{,}{noInterpolationTolerance}{)}{;}}}
{AST_ROOT_SC2NF{{{UnitSphereRandomVectorGenerator}}{{sphRandom}{=}{{new}{{UnitSphereRandomVectorGenerator}}{(}{NUMBER_CONSTANT}{,}{random}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sampler}{=}{{{new}{{NormalDistribution}}{()}}{.}{createSampler}{(}{generator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{final}{{ContinuousSampler}}{{sampler}{=}{{new}{{MarsagliaLogNormalSampler}}{(}{rng}{,}{scale}{,}{shape}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealDistribution.Sampler}}{random}}}
{AST_ROOT_SC2NF{{{}{{return}{{randomize}{(}{{{new}{{UniformRealDistribution}}{(}{min}{,}{max}{)}}{.}{createSampler}{(}{rng}{)}}{,}{{function}{(}{{new}{{Constant}}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{IntegerDistribution.Sampler}}{sampler}}}
{AST_ROOT_SC2NF{{final}{{RealDistribution}}{expectedDistribution}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{normalDistribution}{=}{{new}{{NormalDistribution}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{normalDistribution}{=}{{new}{{NormalDistribution}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{NormalDistribution}}{{normalDistribution}{=}{{new}{{NormalDistribution}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RealDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{RealDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{RealDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{RealDistribution}}{distribution}}}
{AST_ROOT_SC2NF{{{RealDistribution.Sampler}}{sampler}}}
{AST_ROOT_SC2NF{{{{this}{.}{random}}{=}{{{new}{{NormalDistribution}}{()}}{.}{createSampler}{(}{rng}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealDistribution}}{{kernel}{=}{{findKernel}{(}{lower}{,}{upper}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{RealDistribution}}{{kernel}{=}{{findKernel}{(}{lower}{,}{upper}{)}}}{;}}}
{AST_ROOT_SC2NF{{{x}{=}{{{new}{{UniformRealDistribution}}{(}{lo}{,}{hi}{)}}{.}{createSampler}{(}{rng}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tP}{=}{{{new}{{UniformRealDistribution}}{(}{NUMBER_CONSTANT}{,}{MathUtils.TWO_PI}{)}}{.}{createSampler}{(}{rng}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{double}{getNumericalMean}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{double}{{offset}{=}{{plane}{.}{getOffset}{(}{{(}{{{Point}}{<}{{Euclidean3D}}{>}}{)}{point}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{x}{,}{{v}{.}{getX}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{false}{,}{{pt}{.}{isDirect}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{true}{,}{{copy}{.}{isDirect}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{true}{,}{{pt}{.}{isDirect}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TestUtils}{.}{assertContains}{(}{result}{,}{expected}{,}{tolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{result}{,}{expected}{,}{tolerance}{)}}{;}}}
{AST_ROOT_SC2NF{{{{y}{[}{i}{]}}{=}{{new}{{Complex}}{(}{yr}{,}{yi}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{data}{[}{i}{]}}{=}{{new}{{Complex}}{(}{re}{,}{im}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Complex}}{cc}}{:}{c}{)}{{{}{{{TestUtils}{.}{assertEquals}{(}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{cc}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{{expected}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{new}{{Complex}}{(}{Double.NEGATIVE_INFINITY}{,}{Double.NEGATIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{new}{{Complex}}{(}{Double.POSITIVE_INFINITY}{,}{Double.POSITIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{new}{{Complex}}{(}{Double.NaN}{,}{Double.NaN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{expected}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{Double.NEGATIVE_INFINITY}{,}{Double.NEGATIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{Double.POSITIVE_INFINITY}{,}{Double.POSITIVE_INFINITY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{Double.NaN}{,}{Double.NaN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Complex}}{{c}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{float}{d}}{:}{imaginary}{)}{{{}{{{{c}{[}{index}{]}}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{d}}{:}{imaginary}{)}{{{}{{{{c}{[}{index}{]}}{=}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{float}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{new}{{Complex}}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{new}{{Complex}}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{{imaginary}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Complex}}{(}{NUMBER_CONSTANT}{,}{{imaginary}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Complex}}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Complex}}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{float}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofCartesian}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{double}{d}}{:}{real}{)}{{{}{{{{c}{[}{index}{]}}{=}{{Complex}{.}{ofCartesian}{(}{d}{)}}}{;}}{{{index}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofCartesian}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Complex}{.}{ofCartesian}{(}{{real}{[}{index}{]}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{x}{[}{i}{]}}{=}{{Complex}{.}{ofCartesian}{(}{{f}{.}{value}{(}{t}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{value}{=}{count}}{;}}{{{increment}{()}}{;}}{{return}{value}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{SimpsonIntegrator}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{expr}{.}{setLineno}{(}{{{{expr}{.}{getLineno}{()}}{+}{templateLineno}}{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{definitionNodeByDefinitionSite}{.}{containsKey}{(}{useSite}{)}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{features}{=}{{{(}{{(}{{JsAst}}{)}{ast}}{)}}{.}{getFeatures}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tags}{==}{FALSY_MASK}}{)}{{{}{{return}{{builder}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{builder}{.}{append}{(}{{STRING_CONSTANT}{+}{tags}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{output.compiledCode}{=}{{compiler}{.}{toSource}{()}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.MISSING_PROVIDE}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ES5_STRICT}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{,}{specializedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6ONoEs6}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.MISSING_PROVIDE}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Node}}{getNext}{()}{{{}{{return}{next}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Token}}{getToken}{()}{{{}{{return}{token}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{type}{==}{null}}{&&}{isConstant}}{)}{{{}{{{type}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{JSType.UNKNOWN}{;}}}
{AST_ROOT_SC2NF{{{@}{Deprecated}}{public}{AssertionFunctionSpec}{(}{{{String}}{functionName}}{)}{{{}{{this}{(}{functionName}{,}{JSType.UNKNOWN}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{STRING}{.}{isSubtypeOf}{(}{this}{)}}{&&}{{{{this}{.}{commonTypes}}{.}{getNumberInstance}{()}}{.}{mayHaveProp}{(}{pname}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{type}{==}{null}}{&&}{isConstant}}{)}{{{}{{{type}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnknown}{()}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isBottom}{()}}{||}{{isUnknown}{()}}{||}{{hasTruthyMask}{()}}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{isUnknown}{()}}{)}{{{}{{return}{TRUTHY}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{globalThisType}{=}{{JSType.TOP_OBJECT}{.}{withLoose}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{function}{.}{getToken}{()}}{==}{Token.FUNCTION}}{)}}{;}}{{{expandedDefinitions}{.}{add}{(}{{functionSideEffectMap}{.}{get}{(}{function}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{&&}{{t}{.}{inGlobalScope}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{varNode}{.}{getChildCount}{()}}{>}{NUMBER_CONSTANT}}{&&}{{varType}{!=}{null}}}{)}{{{}{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{varNode}{,}{ONE_TYPE_FOR_MANY_VARS}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{&&}{{parent}{==}{googScopeBlock}}}}
{AST_ROOT_SC2NF{{{initializer}{.}{isVar}{()}}{&&}{{{initializer}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{&&}{{NodeUtil}{.}{isStatement}{(}{n}{)}}}{)}{{{}{{{processName}{(}{{n}{.}{getFirstChild}{()}}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{currentStatement}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{typeNode}{!=}{null}}{&&}{{{typeNode}{.}{getToken}{()}}{==}{Token.STRING}}}}
{AST_ROOT_SC2NF{{if}{(}{{inputId}{==}{null}}{)}{{{}{{{inputId}{=}{{NodeUtil}{.}{getInputId}{(}{node}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{inputId}{==}{null}}{)}{{{}{{{inputId}{=}{{NodeUtil}{.}{getInputId}{(}{node}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{node}{.}{getQualifiedName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{options.rewritePolyfills}{=}{flags.rewritePolyfills}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{getMaybeTypeFromComment}{(}{jsdoc}{,}{registry}{,}{typeParameters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{builder}{.}{append}{(}{{paramType}{.}{toStringHelper}{(}{forAnnotations}{)}}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{builder}{.}{append}{(}{STRING_CONSTANT}{)}}{.}{append}{(}{{paramType}{.}{toStringHelper}{(}{forAnnotations}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{b}{.}{append}{(}{{{p}{.}{getJSType}{()}}{.}{toStringHelper}{(}{forAnnotations}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{b}{.}{append}{(}{{call.returnType}{.}{toStringHelper}{(}{forAnnotations}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{append}{(}{{{getPropertyType}{(}{property}{)}}{.}{toStringHelper}{(}{forAnnotations}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isFromExterns}{()}}{)}{{{}{{{{this}{.}{allPropertyNames}}{.}{add}{(}{propName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{allPropertyNames}{.}{add}{(}{{{getProp}{.}{getLastChild}{()}}{.}{getString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{NodeUtil}{.}{isPropertyTest}{(}{compiler}{,}{n}{)}}{||}{{isPropertyAbsentTest}{(}{n}{)}}}{)}{{{}{{{allPropertyNames}{.}{add}{(}{{{n}{.}{getLastChild}{()}}{.}{getString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{allPropertyNames}{.}{add}{(}{pname}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setUseTypesForOptimization}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{singleSiteDefinitions}{.}{size}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{FunctionVisitor}}{(}{compiler}{,}{blacklistedPropNames}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{void}{endCaseBody}{()}{{{}{{{super}{.}{endCaseBody}{()}}{;}}{{{indent}{--}}{;}}{{{endStatement}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{compiler}{.}{getErrorCount}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguage}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{objectWithBadKey}{=}{{findObjectWithNonStringifiableKey}{(}{realType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{findMatching}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{currentScript.defaultExportName}{!=}{null}}{)}{{{}{{{{assignNode}{.}{getParent}{()}}{.}{detach}{()}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{nameIsExported}{=}{{name}{.}{equals}{(}{currentScript.defaultExportName}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{J2clCheckPassTest}{()}{{{}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{jsType}}}
{AST_ROOT_SC2NF{{{JSType}}{jsType}}}
{AST_ROOT_SC2NF{{void}{setMask}{(}{{int}{mask}}{)}{{{}{{{bitmask}{|=}{mask}}{;}}{{{checkInvariant}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{info}{.}{isNoSideEffects}{()}}{)}{{{}{{{sideEffectInfo}{.}{setIsPure}{()}}{;}}{}}}{else}{{{}{{{sideEffectInfo}{.}{setTaintsGlobalState}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}{;}}}
{AST_ROOT_SC2NF{{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}{;}}}
{AST_ROOT_SC2NF{{{config.parseTypeSyntax}{&&}{{peek}{(}{TokenType.OPEN_PAREN}{)}}}{||}{{peek}{(}{TokenType.OPEN_ANGLE}{)}}}}
{AST_ROOT_SC2NF{{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSDocInfo}}{{info}{=}{{getJSDocInfoForFunction}{(}{node}{,}{parent}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionInformation}}{{sideEffectInfo}{=}{{new}{{FunctionInformation}}{(}{inExterns}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionInformation}}{{representativeNode}{=}{{new}{{FunctionInformation}}{(}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{modulePath}{==}{null}}{)}{{{}{{{t}{.}{makeError}{(}{typeNode}{,}{LOAD_ERROR}{,}{moduleName}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{modulePath}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{t}{.}{makeError}{(}{require}{,}{LOAD_ERROR}{,}{requireName}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{assertPasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{treeDiff}{=}{{node}{.}{checkTreeEquals}{(}{{getSubject}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{ImmutableMap}}{<}{{String}}{,}{{Stats}}{>}}{getStats}{()}{{{}{{{calcTotalStats}{()}}{;}}{{return}{summaryCopy}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeWarnForInvalidDestructuring}{(}{t}{,}{lhs}{,}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setReportMissingOverride}{(}{{value}{?}{CheckLevel.WARNING}{:}{CheckLevel.OFF}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{output}}{.}{print}{(}{{{Joiner}{.}{on}{(}{STRING_CONSTANT}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{{new}{{Es6RenameReferences}}{(}{renameMap}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{Es6RenameReferences}}{(}{renameMap}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{FunctionInformation}}{>}}{{possibleSideEffects}{=}{{getSideEffectsForCall}{(}{callNode}{,}{definitionProvider}{,}{representativeNodesByName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{IR}{.}{exprResult}{(}{assign}{)}}{.}{useSourceInfoFromForTree}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{Matchers}{.}{functionCall}{(}{STRING_CONSTANT}{)}}{.}{matches}{(}{{child}{.}{getFirstChild}{()}}{,}{metadata}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Matchers}{.}{functionCall}{(}{STRING_CONSTANT}{)}}{.}{matches}{(}{{child}{.}{getFirstChild}{()}}{,}{metadata}{)}}}
{AST_ROOT_SC2NF{{{}{{{eatPredefinedString}{(}{PredefinedName.FROM}{)}}{;}}{{{moduleSpecifier}{=}{{{eat}{(}{TokenType.STRING}{)}}{.}{asLiteral}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testRequireUseStrict1}{()}{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{EXTERNS}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{EXTERNS}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{EXTERNS}{,}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{EXTERNS}{,}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{EXTERNS}{,}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{EXTERNS}{,}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{EXTERNS}{,}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{node}{)}}{;}}{{{{t}{.}{getCompiler}{()}}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Pattern}}{{argPattern}{=}{{Pattern}{.}{compile}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{()}}{)}}}
{AST_ROOT_SC2NF{{new}{{ByteArrayInputStream}}{(}{{inputString}{.}{getBytes}{()}}{)}}}
{AST_ROOT_SC2NF{{{inputSourceMaps}{.}{put}{(}{sourceMapPath}{,}{{new}{{SourceMapInput}}{(}{sourceMap}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{child}{!=}{{n}{.}{getFirstChild}{()}}}{)}{{{}{{{add}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{add}{(}{child}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{member}{.}{isMemberFunctionDef}{()}}{&&}{{{member}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{{hasConstructor}{=}{true}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{Node}}{{extendsClause}{=}{{className}{.}{getNext}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createCompilerOptions}{()}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{member}{.}{isMemberFunctionDef}{()}}{&&}{{{member}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{{hasConstructor}{=}{true}}{;}}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTagAsStrict}{(}{{firstOutput}{&&}{{{options}{.}{getLanguageOut}{()}}{.}{isStrict}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{member}{.}{isMemberFunctionDef}{()}}{&&}{{{member}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{{hasConstructor}{=}{true}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{com.google.javascript.jscomp.parsing.parser.Parser.Config}}{{es6config}{=}{{new}{{com.google.javascript.jscomp.parsing.parser.Parser.Config}}{(}{{mode}{(}{config.languageMode}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{{CodingConvention}}{getCodingConvention}{()}{{{}{{return}{codingConvention}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{codingConvention}{=}{{new}{{GoogleCodingConvention}}{()}}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{config.languageMode}{!=}{LanguageMode.ECMASCRIPT6_TYPED}}{)}{{{}{{{errorReporter}{.}{warning}{(}{{STRING_CONSTANT}{+}{feature}}{,}{sourceName}{,}{{lineno}{(}{node}{)}}{,}{{charno}{(}{node}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{ParserRunner}{.}{createConfig}{(}{mode}{,}{Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}{,}{Config.RunMode.KEEP_GOING}{,}{null}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTagAsStrict}{(}{{firstOutput}{&&}{{options}{.}{isEmitUseStrict}{()}}{&&}{{{options}{.}{getLanguageOut}{()}}{.}{isStrict}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{getLanguageIn}{()}}{.}{isStrict}{()}}{)}{{{}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ES5_STRICT}{,}{CheckLevel.ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setEmitUseStrict}{(}{{flags.emitUseStrict}{&&}{{{options}{.}{getLanguageOut}{()}}{.}{isStrict}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDoWhileLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareDoWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{googRequireNode}{=}{{IR}{.}{var}{(}{{IR}{.}{name}{(}{shortName}{)}}{,}{googRequireNode}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{getTypeJSDoc}{(}{oldJSDoc}{,}{expr}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{hasConstructor}}{)}{{{}{{{addSyntheticConstructor}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{!}{{isCallTo}{(}{value}{,}{STRING_CONSTANT}{)}}}{&&}{{!}{{(}{{{info}{!=}{null}}{&&}{{info}{.}{isConstructorOrInterface}{()}}}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isCallTo}{(}{{destructuringLhsNode}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{{var}{!=}{null}}{&&}{{{var}{.}{getInitialValue}{()}}{!=}{null}}}{&&}{{!}{{isCallTo}{(}{{var}{.}{getInitialValue}{()}}{,}{STRING_CONSTANT}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{aliasVarNodeRhs}{==}{null}}{||}{{!}{{isCallTo}{(}{aliasVarNodeRhs}{,}{STRING_CONSTANT}{)}}}}{)}{{{}{{{t}{.}{report}{(}{call}{,}{INVALID_GET_ALIAS}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{currentScript.declareLegacyNamespace}{?}{currentScript.legacyNamespace}{:}{{currentScript}{.}{getBinaryNamespace}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{rewriteState}{.}{getExportedNamespace}{(}{legacyNamespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{rewriteState}{.}{getExportedNamespace}{(}{legacyNamespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isExportPropertyAssignment}{(}{n}{)}}{)}{{{}{{{recordExportsPropertyAssignment}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}{{{typeCheck}{(}{STRING_CONSTANT}{,}{JSTypeCreatorFromJSDoc.INHERITANCE_CYCLE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{IR}{.}{call}{(}{{IR}{.}{getprop}{(}{{superClass}{.}{cloneTree}{()}}{,}{{IR}{.}{string}{(}{STRING_CONSTANT}{)}}{)}}{,}{{IR}{.}{thisNode}{()}}{,}{{IR}{.}{name}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{LanguageMode}{.}{fromString}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sourceMap}{.}{appendTo}{(}{out}{,}{{sourceMapOutputFile}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isSuper}{()}}{)}{{{}{{{visitSuper}{(}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{add}{(}{last}{,}{Context.PRESERVE_BLOCK}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertValidOrder}{(}{checks}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertValidOrder}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{{CompilerPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeFoldConstants}}{(}{late}{,}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForLocalOptimization}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{{rval}{>=}{NUMBER_CONSTANT}}{&&}{{rval}{<}{NUMBER_CONSTANT}}}{)}}}{)}{{{}{{{report}{(}{SHIFT_AMOUNT_OUT_OF_BOUNDS}{,}{n}{)}}{;}}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{VariableReferenceCheck.EARLY_REFERENCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{declaresFunction}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{DeclaredTypeRegistry}}{getScope}{()}{{{}{{return}{{this}{.}{scope}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{EARLY_REFERENCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{isCallInLoop}{)}{{{}{{{fixUnitializedVarDeclarations}{(}{newBlock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{codingConvention}{=}{{new}{{GoogleCodingConvention}}{()}}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT8}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{targetType}{.}{getGreatestSubtype}{(}{type}{)}}{.}{isBottom}{()}}}{)}{{{}{{{methodPolyfills}{.}{remove}{(}{method}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{PeepholeReplaceKnownMethods}}{(}{late}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeReplaceKnownMethods}}{(}{late}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeReplaceKnownMethods}}{(}{late}{)}}}
{AST_ROOT_SC2NF{{public}{boolean}{isBuiltinObject}{()}{{{}{{return}{{{this}{.}{rawType}}{.}{isBuiltinWithName}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isClassy}{()}{{{}{{return}{{{!}{{isFunction}{()}}}{&&}{{!}{{isBuiltinObject}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{equals}{(}{proto}{)}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isInstanceofObject}{()}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{isUnknown}{()}}{||}{{(}{{{isInstanceofObject}{()}}{&&}{{isLoose}{()}}}{)}}{||}{{(}{{{ft}{!=}{null}}{&&}{{ft}{.}{isTopFunction}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{nt}{.}{isBuiltinObject}{()}}{?}{false}{:}{{nt}{.}{isPropDefinedOnSubtype}{(}{pname}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{name}{.}{equals}{(}{STRING_CONSTANT}{)}}{||}{{name}{.}{equals}{(}{STRING_CONSTANT}{)}}{||}{{name}{.}{equals}{(}{STRING_CONSTANT}{)}}}{,}{STRING_CONSTANT}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{TOP_OBJECT}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{==}{other}}{||}{{other}{.}{isBuiltinWithName}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isBuiltinWithName}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{{{this}{.}{subtypes}}{.}{add}{(}{subtype}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RemoveUnusedPolyfillsTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{Long}{.}{toString}{(}{nonnegativeHash}{,}{NUMBER_CONSTANT}{)}}{.}{toUpperCase}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions.J2clPassMode}}{{j2clPassMode}{=}{{CompilerOptions.J2clPassMode}{.}{valueOf}{(}{{flags.j2clPassMode}{.}{toUpperCase}{()}}{)}}}{;}}{{{options}{.}{setJ2clPass}{(}{j2clPassMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{lowerParam}{=}{{param}{.}{toLowerCase}{()}}}{;}}}
{AST_ROOT_SC2NF{{{compilationLevelParsed}{=}{{COMPILATION_LEVEL_MAP}{.}{get}{(}{{compilationLevel}{.}{toUpperCase}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{addParserWarning}{(}{STRING_CONSTANT}{,}{{{visibility}{.}{toString}{()}}{.}{toLowerCase}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{{result}{.}{toString}{()}}{.}{toUpperCase}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{canonicalizedName}{=}{{{{value}{.}{trim}{()}}{.}{toUpperCase}{()}}{.}{replaceFirst}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{n}{.}{getParent}{()}}}{;}}{{return}{{{wasCast}{(}{n}{)}}{||}{{isAssertionCall}{(}{parent}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{TOP_OBJECT}{;}}}
{AST_ROOT_SC2NF{{{!}{{t}{.}{isSubtypeOf}{(}{{{this}{.}{commonTypes}}{.}{TOP_OBJECT}}{)}}}{&&}{{(}{{{!}{{t}{.}{hasTypeVariable}{()}}}{||}{{t}{.}{hasScalar}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{JSType}}{{objLitType}{=}{commonTypes.TOP_OBJECT}}{;}}}
{AST_ROOT_SC2NF{{{}{{{globalThisType}{=}{{{{this}{.}{commonTypes}}{.}{TOP_OBJECT}}{.}{withLoose}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{==}{other}}{||}{{other.ns}{!=}{null}}}{||}{{!}{{{other}{.}{getNominalType}{()}}{.}{equals}{(}{{{this}{.}{commonTypes}}{.}{getObjectType}{()}}{)}}}}}
{AST_ROOT_SC2NF{{boolean}{isInhabitable}{()}{{{}{{return}{{this}{!=}{{{this}{.}{commonTypes}}{.}{BOTTOM_OBJECT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{objType}{!=}{null}}{&&}{{!}{{{objType}{.}{getNominalType}{()}}{.}{isClassy}{()}}}}{&&}{{!}{{objType}{.}{isLoose}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{nameNode}{==}{null}}{)}{return;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{declaredValue}{.}{toStringTree}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{name}{!=}{null}}{)}{{{}{{{{this}{.}{definitionNodeByDefinitionSite}}{.}{remove}{(}{node}{)}}{;}}{{{{this}{.}{nameDefinitionMultimap}}{.}{remove}{(}{name}{,}{node}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{pattern}{.}{getParent}{()}}{.}{replaceChild}{(}{pattern}{,}{{IR}{.}{name}{(}{tempVarName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{patternParam}{.}{getParent}{()}}{.}{replaceChild}{(}{patternParam}{,}{newParam}{)}}{;}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{{replacement}{.}{useSourceInfoIfMissingFrom}{(}{callNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{candidateDefinition}{.}{getParent}{()}}{.}{replaceChild}{(}{candidateDefinition}{,}{varNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{parent}{.}{getParent}{()}}{.}{replaceChild}{(}{parent}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{first}{.}{getParent}{()}}{.}{replaceChild}{(}{first}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{placeholder}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{n}{.}{getParent}{()}}}{;}}{{{{parent}{.}{getParent}{()}}{.}{replaceChild}{(}{parent}{,}{fncBlock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{call}{)}}{;}}}
{AST_ROOT_SC2NF{{{{msgNode}{.}{getParent}{()}}{.}{replaceChild}{(}{msgNode}{,}{newValue}{)}}{;}}}
{AST_ROOT_SC2NF{{{{statement}{.}{getParent}{()}}{.}{replaceChild}{(}{statement}{,}{newStatement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assignNode}{.}{getParent}{()}}{.}{replaceChild}{(}{assignNode}{,}{rhs}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{enclosing}{!=}{null}}{&&}{{enclosing}{.}{isGeneratorFunction}{()}}}{)}{{{}{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{{IR}{.}{name}{(}{GENERATOR_THIS}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{elem}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{elem}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{lengthNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{newNumber}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}{;}}{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{result}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{newStringNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replacementNode}{!=}{null}}{)}{{{}{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacementNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{replacementNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{originalTypeofNode}{.}{getParent}{()}}{.}{replaceChild}{(}{originalTypeofNode}{,}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{newNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{subtree}{.}{getParent}{()}}{.}{replaceChild}{(}{subtree}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{subtree}{.}{getParent}{()}}{.}{replaceChild}{(}{subtree}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{parent}{.}{getParent}{()}}{.}{replaceChild}{(}{parent}{,}{{IR}{.}{empty}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{grandparent}{.}{getParent}{()}}{.}{replaceChild}{(}{grandparent}{,}{functionNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{target}{.}{getParent}{()}}{.}{replaceChild}{(}{target}{,}{{value}{.}{cloneTree}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{node}{.}{getParent}{()}}{.}{replaceChild}{(}{node}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{stringNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{objNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{original}{.}{getParent}{()}}{.}{replaceChild}{(}{original}{,}{replacement}{)}}{;}}{{return}{replacement}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{replaceParent}{)}{{{}{{{{parent}{.}{getParent}{()}}{.}{replaceChild}{(}{parent}{,}{replacement}{)}}{;}}{}}}{else}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{superCall}{.}{getParent}{()}}{.}{replaceChild}{(}{superCall}{,}{superErrorExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{{obj}{.}{getParent}{()}}{.}{replaceChild}{(}{obj}{,}{result}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{attachTypeExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{{loadModuleStatement}{.}{getParent}{()}}{.}{replaceChild}{(}{loadModuleStatement}{,}{moduleBlockNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{legacyQname}{)}}{;}}}
{AST_ROOT_SC2NF{{{{exprResultNode}{.}{getParent}{()}}{.}{replaceChild}{(}{exprResultNode}{,}{exportsObjectCreationNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{call}{.}{getParent}{()}}{.}{replaceChild}{(}{call}{,}{exportedNamespaceName}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{aliasReference}{.}{getParent}{()}}{.}{replaceChild}{(}{aliasReference}{,}{replacement}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{expressionWithScopeCall}{.}{getParent}{()}}{.}{replaceChild}{(}{expressionWithScopeCall}{,}{scopeClosureBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newValue}{.}{useSourceInfoIfMissingFromForTree}{(}{msgNode}{)}}{;}}{{{{msgNode}{.}{getParent}{()}}{.}{replaceChild}{(}{msgNode}{,}{newValue}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{{replacementNode}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{member}{.}{getParent}{()}}{.}{replaceChild}{(}{member}{,}{memberVariable}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{forCondition}{.}{getParent}{()}}{.}{replaceChild}{(}{forCondition}{,}{{IR}{.}{empty}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{whileNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{condition}{.}{getParent}{()}}{.}{replaceChild}{(}{condition}{,}{replacementConditionNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{{caseBlock}{.}{detach}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{result}{.}{getParent}{()}}{!=}{null}}{)}{{{}{{{result}{.}{detach}{()}}{;}}{}}}}{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{subtree}{.}{getParent}{()}}{.}{replaceChild}{(}{subtree}{,}{{right}{.}{detach}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{oldRoot}{.}{getParent}{()}}{.}{replaceChild}{(}{oldRoot}{,}{newRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{call}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{not}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{newLiteralNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{{enclosingCall}{.}{getParent}{()}}{.}{replaceChild}{(}{enclosingCall}{,}{baseCall}{)}}{;}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{replacement}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNgInjectSetVisibility}{(}{)}{throws}{{Exception}}{{{}{{{compareJsDoc}{=}{true}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{scopeMethodCall}{=}{{findScopeMethodCall}{(}{{{t}{.}{getScope}{()}}{.}{getRootNode}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{n}{=}{{{t}{.}{getScope}{()}}{.}{getRootNode}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{list}{;}}}
{AST_ROOT_SC2NF{{return}{{{list}{.}{isEmpty}{()}}{?}{null}{:}{list}}{;}}}
{AST_ROOT_SC2NF{{abstract}{{Node}}{getRoot}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getContent}{(}{)}{throws}{{ServiceException}}{;}}}
{AST_ROOT_SC2NF{{{String}}{getName}{(}{)}{throws}{{ServiceException}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{CachingTranspiler}}{(}{delegate}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{CachingTranspiler}}{(}{delegate}{,}{{CacheBuilder}{.}{newBuilder}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Strings}{.}{nullToEmpty}{(}{{sourceMapCache}{.}{get}{(}{path}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{output}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getChildCount}{()}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{castType}{.}{isSubtype}{(}{exprType}{)}}{||}{{expr}{.}{isObjectLit}{()}}}{)}{{{}{{{expr}{.}{setJSType}{(}{castType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{CachingTranspiler}}{(}{delegate}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT5_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RawNominalType}}{(}{commonTypes}{,}{defSite}{,}{name}{,}{typeParameters}{,}{Kind.RECORD}{,}{objKind}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{RawNominalType}}{(}{commonTypes}{,}{defSite}{,}{name}{,}{typeParameters}{,}{Kind.INTERFACE}{,}{objKind}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableCollection}}{<}{{Node}}{>}}{exports}}}
{AST_ROOT_SC2NF{{if}{(}{{{isUnknownType}{()}}{||}{{implicitPrototypeChainIsUnknown}{()}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{list}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{hasConstructor}}{)}{{{}{{{addSyntheticConstructor}{(}{t}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{IR}{.}{comma}{(}{{IR}{.}{comma}{(}{{IR}{.}{comma}{(}{getTmpError}{,}{copyMessage}{)}}{,}{setStack}{)}}{,}{{IR}{.}{name}{(}{TMP_ERROR}{)}}{)}}{.}{useSourceInfoIfMissingFromForTree}{(}{superCall}{)}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{constructor}{,}{CANNOT_CONVERT_YET}{,}{{STRING_CONSTANT}{+}{superClassQName}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{implementedInterfaces}}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{script}{.}{addChildToFront}{(}{{googProvide}{.}{copyInformationFromForTree}{(}{script}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{require}{.}{copyInformationFromForTree}{(}{importDecl}{)}}{;}}}
{AST_ROOT_SC2NF{{{newChild}{.}{copyInformationFrom}{(}{child}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{node}{.}{copyInformationFromForTree}{(}{basisNode}{)}}{;}}{{{node}{.}{setOriginalName}{(}{originalName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{newNode}{.}{copyInformationFromForTree}{(}{sourceInfoNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{expr}{.}{copyInformationFromForTree}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{newChild}{.}{useSourceInfoWithoutLengthIfMissingFrom}{(}{child}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{if}{(}{strictMismatch}{)}{{{}{{{implicitStructuralInterfaceUses}{.}{add}{(}{{new}{{TypeMismatch}}{(}{found}{,}{required}{,}{error}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argType}{.}{isSubtypeWithoutStructuralTyping}{(}{paramType}{)}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{argType}{,}{paramType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{recordStructuralInterfaceUses}{(}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{strictMismatch}{)}{{{}{{{mismatches}{.}{add}{(}{{new}{{TypeMismatch}}{(}{found}{,}{required}{,}{error}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argType}{.}{isSubtypeWithoutStructuralTyping}{(}{paramType}{)}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{argType}{,}{paramType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{{Iterable}}{<}{{TypeMismatch}}{>}}{getImplicitInterfaceUses}{()}{{{}{{return}{{{getTypeValidator}{()}}{.}{getImplicitStructuralInterfaceUses}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{strictMismatch}{)}{{{}{{{implicitStructuralInterfaceUses}{.}{add}{(}{{new}{{TypeMismatch}}{(}{found}{,}{required}{,}{error}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argType}{.}{isSubtypeWithoutStructuralTyping}{(}{paramType}{)}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{argType}{,}{paramType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}}}{)}{{{}{{{recordStructuralInterfaceUses}{(}{rightType}{,}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{recordStructuralInterfaceUses}{(}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options.tracer}{.}{isOn}{()}}{&&}{{tracker}{!=}{null}}}{)}{{{}{{{tracker}{.}{recordPassStop}{(}{passName}{,}{result}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options.tracer}{.}{isOn}{()}}{&&}{{tracker}{!=}{null}}}{)}{{{}{{{tracker}{.}{recordPassStart}{(}{passName}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{compilerExecutor}{.}{runInCompilerThread}{(}{callable}{,}{{{options}{!=}{null}}{&&}{{options.tracer}{.}{isOn}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options.tracer}{=}{config.tracerMode}}{;}}}
{AST_ROOT_SC2NF{{{testEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testExport5}{()}{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Reference}}{ref}}{:}{refCollection}{)}{{{}{{{processReference}{(}{collector}{,}{ref}{,}{info}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{DependencyInfo}}{>}}{{parsedFiles}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{DependencyInfo}}{>}}{{depsFiles}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{DependencyInfo}}{>}}{{providesMap}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{(}{{{!}{{NodeUtil}{.}{isPropertyTest}{(}{compiler}{,}{n}{)}}}{||}{{objectType}{.}{isStruct}{()}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{canCreate}{)}{{{}{{{createName}{(}{name}{)}}{;}}{}}}}{{return}{{allNames}{.}{get}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{Double}{.}{isNaN}{(}{d}{)}}}{)}{{{}{{{cc}{.}{addNumber}{(}{d}{)}}{;}}{}}}{else}{{{}{{{addJsString}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result.sourceMap}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{REPORT_PATH_IO_ERROR}{,}{reportPath}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{REPORT_PATH_IO_ERROR}{,}{reportPath}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{current}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{static}{boolean}{isEnhancedFor}{(}{{{Node}}{n}}{)}{{{}{{return}{{{n}{.}{isForOf}{()}}{||}{{isForIn}{(}{n}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{newNode}{(}{Token.FOR}{,}{initializer}{,}{{transform}{(}{loopNode.collection}{)}}{,}{{transformBlock}{(}{loopNode.body}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Node}}{(}{Token.FOR}{,}{target}{,}{cond}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateNodeType}{(}{Token.BLOCK}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateNodeType}{(}{Token.BLOCK}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{path}}}
{AST_ROOT_SC2NF{{{String}}{path}}}
{AST_ROOT_SC2NF{{{TranspileResult}}{transpile}{(}{{{String}}{path}}{,}{{{String}}{code}}{)}{;}}}
{AST_ROOT_SC2NF{{{TranspileResult}}{{result}{=}{{transpiler}{.}{transpile}{(}{path}{,}{s}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{path}}}
{AST_ROOT_SC2NF{{{BaseTranspiler.CompileResult}}{{result}{=}{{compiler}{.}{compile}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BaseTranspiler.CompileResult}}{{result}{=}{{compiler}{.}{compile}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{path}}}
{AST_ROOT_SC2NF{{{String}}{path}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}{)}{{{}{{return}{{n}{!=}{{parent}{.}{getFirstChild}{()}}}{;}}{}}}{else}{{{}{{return}{{{NodeUtil}{.}{getConditionExpression}{(}{parent}{)}}{!=}{n}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{source}{)}}}
{AST_ROOT_SC2NF{{(}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isForOf}{()}}{||}{{NodeUtil}{.}{isForIn}{(}{n}{)}}}{)}{{{}{{return}{{n}{.}{getSecondChild}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}{)}{{{}{{return}{parent}{;}}{}}}{else}{{{}{{return}{{{parent}{.}{getSecondChild}{()}}{.}{getNext}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isVanillaFor}{(}{cur}{)}}{)}{{{}{{{iter}{=}{{cur}{.}{getChildAtIndex}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isForIn}{(}{forNode}{)}}{||}{{forNode}{.}{isForOf}{()}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{c}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isForIn}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{{parent}{.}{isFor}{()}}{&&}{{!}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}}{&&}{{child}{==}{{parent}{.}{getFirstChild}{()}}}}{)}{{{}{{return}{parent}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{lhsOfForInLoop}{=}{{{NodeUtil}{.}{isForIn}{(}{gp}{)}}{&&}{{{gp}{.}{getFirstFirstChild}{()}}{==}{declNode}}}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isVanillaFor}{(}{loopNode}{)}}}
{AST_ROOT_SC2NF{{{srcDeclaration}{.}{isConst}{()}}{&&}{{!}{{(}{{{NodeUtil}{.}{isForIn}{(}{srcParent}{)}}{&&}{{srcDeclaration}{==}{{srcParent}{.}{getFirstChild}{()}}}}{)}}}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isForIn}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{nextSibling}{)}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isForIn}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{enclosingFunc}{==}{null}}{||}{{!}{{enclosingFunc}{.}{isGeneratorFunction}{()}}}}{||}{{NodeUtil}{.}{isForIn}{(}{n}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isForIn}{(}{currentStatement}{)}}{)}{{{}{{{visitForIn}{()}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{NodeUtil}{.}{isForIn}{(}{parent}{)}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isForIn}{(}{expr}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isForIn}{(}{{expr}{.}{getParent}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isForIn}{(}{{lvalue}{.}{getParent}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{Node}}{{expr}{=}{{{NodeUtil}{.}{isForIn}{(}{n}{)}}{?}{{n}{.}{getFirstChild}{()}}{:}{{NodeUtil}{.}{getConditionExpression}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isForIn}{(}{n}{)}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{NodeUtil}{.}{isForIn}{(}{node}{)}}}{)}{{{}{{{tryJoinForCondition}{(}{node}{)}}{;}}{{{tryMinimizeCondition}{(}{{NodeUtil}{.}{getConditionExpression}{(}{node}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{parent}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}}{)}{{{}{{return}{{(}{{{parent}{.}{getSecondChild}{()}}{==}{expr}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{(}{{{isForIn}{(}{parent}{)}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{)}}}
{AST_ROOT_SC2NF{{return}{{{NodeUtil}{.}{isForIn}{(}{n}{)}}{?}{null}{:}{{n}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{(}{{{isForIn}{(}{parent}{)}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{)}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isForIn}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{control}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isForIn}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{parent}{.}{isFor}{()}}{&&}{{!}{{NodeUtil}{.}{isForIn}{(}{parent}{)}}}{&&}{{{NodeUtil}{.}{getConditionExpression}{(}{parent}{)}}{!=}{n}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{NodeUtil}{.}{isForIn}{(}{n}{)}}}{)}{{{}{{{tryRemoveAssignment}{(}{t}{,}{{NodeUtil}{.}{getConditionExpression}{(}{n}{)}}{,}{state}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{var}{.}{getParentNode}{()}}{.}{isVar}{()}}{&&}{{!}{{NodeUtil}{.}{isForIn}{(}{{{var}{.}{getParentNode}{()}}{.}{getParent}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{parent}{.}{isFor}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{currentStatement}{.}{isFor}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{isAssign}{()}}{&&}{{!}{{parent}{.}{isFor}{()}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isAssign}{()}}{&&}{{(}{{{parent}{.}{isExprResult}{()}}{||}{{parent}{.}{isFor}{()}}{||}{{parent}{.}{isReturn}{()}}}{)}}}}
{AST_ROOT_SC2NF{{(}{{{{declaration}{.}{getParent}{()}}{.}{isVar}{()}}{&&}{{!}{{{declaration}{.}{getGrandparent}{()}}{.}{isFor}{()}}}}{)}}}
{AST_ROOT_SC2NF{{{nextSibling}{.}{isFor}{()}}{&&}{{{nextSibling}{.}{getFirstChild}{()}}{.}{isEmpty}{()}}}}
{AST_ROOT_SC2NF{{{Node}}{{initializer}{=}{{{n}{.}{isFor}{()}}{?}{{n}{.}{getFirstChild}{()}}{:}{{IR}{.}{empty}{()}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{parent}{.}{isFor}{()}}}{)}{{{}{{{assign}{=}{{NodeUtil}{.}{newExpr}{(}{assign}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{grandparent}{.}{isFor}{()}}}
{AST_ROOT_SC2NF{{{}{{{appendField}{(}{out}{,}{name}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{preserveBlock}{=}{{{n}{.}{isBlock}{()}}{&&}{{!}{{n}{.}{isSyntheticBlock}{()}}}}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{isBlock}{()}}{||}{{NodeUtil}{.}{isAnyFor}{(}{parent}{)}}{||}{{parent}{.}{isScript}{()}}{||}{{parent}{.}{isModuleBody}{()}}{||}{{parent}{.}{isLabel}{()}}}}
{AST_ROOT_SC2NF{{boolean}{{scanInnerBlocks}{=}{{{n}{.}{isSyntheticBlock}{()}}{||}{{NodeUtil}{.}{isFunctionBlock}{(}{n}{)}}{||}{{n}{.}{isModuleBody}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{TypedScope}}{{s}{=}{{{new}{{TypedScopeCreator}}{(}{compiler}{,}{{CodingConventions}{.}{getDefault}{()}}{)}}{.}{createInitialScope}{(}{{new}{{Node}}{(}{Token.BLOCK}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testMissingRequireCall}{(}{js}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testMissingRequireCall}{(}{js}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testMissingRequireCall}{(}{js}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckRequiresForConstructors}}{(}{compiler}{,}{CheckRequiresForConstructors.Mode.FULL_COMPILE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{optimizePropertyIndex}}{&&}{{isObjectLiteralThatCanBeSkipped}{(}{type}{)}}}{)}{{{}{{{type}{=}{{this}{.}{sentinelObjectLiteral}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypesForOptimization}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{true}{,}{false}{)}}{,}{{new}{{PeepholeFoldConstants}}{(}{true}{,}{false}{)}}{)}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{)}}}
{AST_ROOT_SC2NF{{invalidationMap}{.}{get}{(}{t}{)}}}
{AST_ROOT_SC2NF{{throw}{{Throwables}{.}{propagate}{(}{cause}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{exception}{[}{NUMBER_CONSTANT}{]}}{!=}{null}}{)}{{{}{{{Throwables}{.}{propagate}{(}{{exception}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{TextFormat}{.}{merge}{(}{textProto}{,}{builder}{)}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{Throwables}{.}{propagate}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{initialize}{(}{{metadata}{.}{getCompiler}{()}}{)}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{Throwables}{.}{propagate}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getOptions}{()}}}{;}}{{if}{(}{enableUnusedLocalAssignmentCheck}{)}{{{}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}{}}}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{getInvalidationsErrors}{()}}{.}{get}{(}{t}{)}}}
{AST_ROOT_SC2NF{{private}{{String}}{getNewName}{()}{{{}{{return}{{paramPredix}{+}{{uniqueId}{++}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}}{;}}{{{{this}{.}{paramPredix}}{=}{{Preconditions}{.}{checkNotNull}{(}{paramPrefix}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypes}{,}{assumeAccurateNullUndefinedTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{true}{,}{false}{,}{false}{)}}{,}{{new}{{PeepholeFoldConstants}}{(}{true}{,}{false}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypesForOptimization}{,}{options.assumeAccurateNullUndefinedTypes}{)}}}
{AST_ROOT_SC2NF{{{{(}{{new}{{NodeTraversal}}{(}{compiler}{,}{this}{)}}{)}}{.}{traverseAtScope}{(}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{addLibrary}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{setLanguage}{(}{ES6}{,}{ES5}{)}}{;}}{{{testInjects}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addLibrary}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{setLanguage}{(}{ES6}{,}{ES5}{)}}{;}}{{{testInjects}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateSyntheticBlock}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateNodeType}{(}{Token.DEFAULT_CASE}{,}{n}{)}}{;}}{{{validateChildCount}{(}{n}{)}}{;}}{{{validateSyntheticBlock}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}{{{body}{.}{putBooleanProp}{(}{Node.SYNTHETIC_BLOCK_PROP}{,}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{body}{.}{putBooleanProp}{(}{Node.SYNTHETIC_BLOCK_PROP}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{block}{.}{putBooleanProp}{(}{Node.SYNTHETIC_BLOCK_PROP}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{block}{.}{putBooleanProp}{(}{Node.SYNTHETIC_BLOCK_PROP}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEmpty}{()}{{{}{{{{this}{.}{instrumentationPb}}{=}{STRING_CONSTANT}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSwitchCase}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemoveDo}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{src}{,}{src}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testForIn}{()}{{{}{{{inFunction}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{inFunction}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testDivision}{()}{{{}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{js}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testNgInjectToArrowFunctions}{()}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testReturnType}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRestParameter}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testLocal}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{testLocal}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testLocal}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWithInversion}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{fullJsCode}{,}{fullJsCode}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isClinitMethod}{(}{node}{)}}}{)}{{{}{return;}{}}}}{{{trySubstituteEmptyFunction}{(}{node}{,}{{t}{.}{getCompiler}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{tryRemovingClinit}{(}{t}{,}{node}{,}{parent}{)}}{;}}{{if}{(}{{isNewControlBranch}{(}{parent}{)}}{)}{{{}{{{clinitsCalledAtBranch}{=}{clinitsCalledAtBranch.parent}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{FunctionInformation}}{>}}{{possibleSideEffects}{=}{{getSideEffectsForCall}{(}{callNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{ArrayListMultimap}{.}{create}{()}}}{;}}}
{AST_ROOT_SC2NF{{{PropertyType}}{{pt}{=}{{getPropTypeHelper}{(}{jsdoc}{,}{initializer}{,}{rawType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{lint}{(}{{Paths}{.}{get}{(}{filename}{)}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{VariableReferenceCheck.EARLY_REFERENCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{options.protectHiddenSideEffects}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{{outOfBandTraversal}{=}{{new}{{NodeTraversal}}{(}{compiler}{,}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.EXPR_RESULT}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{root}{=}{{compiler}{.}{parseTestCode}{(}{js}{)}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{compiler}{.}{getErrorCount}{()}}{)}}{;}}{{return}{root}{;}}{}}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{scopeCreator}{=}{{SyntacticScopeCreator}{.}{makeUntypedWithRedeclHandler}{(}{compiler}{,}{{new}{{DuplicateDeclarationHandler}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isConstructor}{(}{n}{)}}{)}{{{}{{{processConstructor}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{{new}{{RemoveCode}}{(}{compiler}{)}}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{handleTypedefDefinition}{(}{t}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{memberType}{=}{{parseTypeExpressionList}{(}{{next}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{memberType}{=}{{parseTypeExpressionList}{(}{typeName}{,}{{next}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lastIndex}{=}{{{replacement}{.}{getStartPosition}{()}}{+}{{replacement}{.}{getLength}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{compilerExecutor}{.}{runInCompilerThread}{(}{callable}{,}{{{options}{!=}{null}}{&&}{{{options}{.}{getTracerMode}{()}}{.}{isOn}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{FunctionInformation}}{>}}{{possibleSideEffects}{=}{{getSideEffectsForCall}{(}{callNode}{,}{definitionProvider}{,}{representativeNodesByName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{token}{==}{Token.BLOCK}}{)}}{;}}{{{putBooleanProp}{(}{SYNTHETIC_BLOCK_PROP}{,}{val}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setTypeI}{(}{{{TypeI}}{type}}{)}{{{}{{{{this}{.}{typei}}{=}{type}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TypeI}}{getTypeI}{()}{{{}{{return}{typei}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setJSType}{(}{{{JSType}}{jsType}}{)}{{{}{{{{this}{.}{typei}}{=}{jsType}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{target}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{parent}{!=}{null}}{)}}{;}}{{{parent}{.}{removeChild}{(}{this}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{AncestorIterable}}{getAncestors}{()}{{{}{{return}{{new}{{AncestorIterable}}{(}{{this}{.}{getParent}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Node}}{getParent}{()}{{{}{{return}{parent}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{setPropListHead}{(}{{{PropListItem}}{propListHead}}{)}{{{}{{{{this}{.}{propListHead}}{=}{propListHead}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PropListItem}}{getPropListHeadForTesting}{()}{{{}{{return}{propListHead}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setStaticSourceFile}{(}{{{StaticSourceFile}}{file}}{)}{{{}{{{this}{.}{putProp}{(}{STATIC_SOURCE_FILE}{,}{file}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{propListHead}}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{propListHead}}{=}{other.propListHead}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{target}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{prevChild.next}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{{replaceChild}{(}{prevChild.next}{,}{newChild}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{child.parent}{==}{null}}{)}}{;}}{{{child.parent}{=}{this}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Node}}{getSecondChild}{()}{{{}{{return}{first.next}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Node}}{getFirstChild}{()}{{{}{{return}{first}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{abstract}{{PropListItem}}{chain}{(}{{{PropListItem}}{next}}{)}{;}}}
{AST_ROOT_SC2NF{{{PropListItem}}{next}}}
{AST_ROOT_SC2NF{{{PropListItem}}{chain}{(}{{{PropListItem}}{next}}{)}{;}}}
{AST_ROOT_SC2NF{{{PropListItem}}{getNext}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{memberType}{=}{{parseTypeExpressionList}{(}{{next}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{condition}{.}{isCall}{()}}{&&}{{{condition}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{node}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{callName}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{boolean}{{isDeprecatedCall}{=}{{{{callNode}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{&&}{{callName}{.}{isGetProp}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{left}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{node}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{createSourceMap}{)}{{{}{{{mcp}{.}{generateSourceMap}{(}{sourceMap}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setReferencedType}{(}{{registry}{.}{getNativeObjectType}{(}{JSTypeNative.NO_RESOLVED_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fieldType}{=}{{createFromTypeNodesInternal}{(}{{fieldTypeNode}{.}{getLastChild}{()}}{,}{sourceName}{,}{scope}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{templateTypes}{)}}{.}{hasSize}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{namespace}{.}{substring}{(}{{{namespace}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{namespace}{.}{substring}{(}{{{namespace}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{namespaceToRequire}{.}{substring}{(}{{{namespaceToRequire}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fieldType}{=}{{createFromTypeNodesInternal}{(}{{fieldTypeNode}{.}{getLastChild}{()}}{,}{sourceName}{,}{scope}{,}{true}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setReferencedType}{(}{{new}{{NoResolvedType}}{(}{registry}{,}{{getReferenceName}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{rightmostName}{.}{toUpperCase}{()}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isAnalyzableObjectDefinePropertiesDefinition}{(}{n}{)}}{)}}{;}}{{return}{{ImmutableList}{.}{of}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{parent}{.}{isVanillaFor}{()}}{,}{STRING_CONSTANT}{,}{{parent}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{reportPath}{)}}{;}}}
{AST_ROOT_SC2NF{{{NameInformation}}{referring}}}
{AST_ROOT_SC2NF{{{NameInformation}}{referring}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{ns}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{name}{)}}{;}}{{{scopes}{.}{put}{(}{node}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{node}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{name}{,}{node}{)}{;}}{{{Preconditions}{.}{checkState}{(}{{node}{.}{isCall}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{name}{,}{{parent}{.}{getFirstChild}{()}}{)}{;}}{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isAssign}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkLocalityOfMarkedCalls}{(}{source}{,}{expected}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{checkLocalityOfMarkedCalls}{(}{source}{,}{expected}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{{templateSrc}{.}{replace}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{NO_PURE_CALLS}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{recvType}{=}{{simpleInferExprType}{(}{recv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{simpleInferExprType}{(}{argNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{name}{=}{{NodeUtil}{.}{getName}{(}{n}{)}}}{;}}{{{noSideEffectExterns}{.}{put}{(}{name}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{qname}{!=}{null}}{&&}{{noSideEffectExterns}{.}{containsKey}{(}{qname}{)}}}{&&}{{!}{isDefinedInSrc}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{ParamGroup}}{,}{{{CompilationParam}}{[]}}{>}}{{compilationParamsByGroup}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{functionA}{.}{getBodyNode}{()}}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{mainFunction}{.}{getAstNode}{()}}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{mainFunction}{.}{getBodyNode}{()}}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isBlock}{()}}{&&}{{n}{.}{hasChildren}{()}}{&&}{{isReturnTypeNullable}{(}{{n}{.}{getParent}{()}}{)}}{&&}{{!}{{hasSingleThrow}{(}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{statement}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getFirstChild}{()}}{.}{isBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{markNameProcessed}{(}{{nameNode}{.}{getQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{root}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{originalBody}{.}{isBlock}{()}}}{)}{{{}{{{originalBody}{=}{{{IR}{.}{block}{(}{{IR}{.}{returnNode}{(}{originalBody}{)}}{)}}{.}{useSourceInfoFromForTree}{(}{originalBody}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{body}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{{body}{.}{getNext}{()}}{==}{null}}{&&}{{body}{.}{isBlock}{()}}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isBlock}{()}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isExprResult}{()}}{||}{{n}{.}{isBlock}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{block}{.}{isBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{node}{.}{isFunction}{()}}{&&}{{!}{{{NodeUtil}{.}{getFunctionBody}{(}{node}{)}}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{body}{.}{isBlock}{()}}{)}{{{}{{{validateBlock}{(}{body}{)}}{;}}{}}}{else}{{{}{{{validateExpression}{(}{body}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{newChild}{.}{isBlock}{()}}{)}{{{}{{{NodeUtil}{.}{tryMergeBlock}{(}{newChild}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isScript}{()}}}{&&}{{!}{{n}{.}{isBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{parent}{.}{isScript}{()}}{||}{{(}{{{parent}{.}{isBlock}{()}}{&&}{{{parent}{.}{getParent}{()}}{.}{isFunction}{()}}}{)}}}}
{AST_ROOT_SC2NF{{c}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{c}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{caseBody}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{labeledStatement}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{last}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{currentStatement}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{favorsCommaOverSemiColon}}{&&}{{!}{{block}{.}{isBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parent}{!=}{null}}{&&}{{(}{{{parent}{.}{isBlock}{()}}{||}{{parent}{.}{isScript}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{s}{.}{isFunctionScope}{()}}{&&}{{{{s}{.}{getRootNode}{()}}{.}{getLastChild}{()}}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{{node}{.}{children}{()}}{)}{{{}{{if}{(}{{child}{.}{isBlock}{()}}{)}{{{}{{{blocks}{.}{add}{(}{child}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{!}{{{target}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{target}{.}{getParent}{()}}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{{!}{{{n}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{n}{.}{getParent}{()}}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{boolean}{{isVar}{=}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{&&}{{{parent}{.}{getParent}{()}}{.}{isBlock}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{isGoogScopeFunctionBody}{(}{enclosingFunctionBody}{)}}{&&}{{scopeRoot}{.}{isBlock}{()}}{&&}{{!}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isControlStructureCodeBlock}{(}{n}{,}{c}{)}}{&&}{{!}{{c}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{{!}{{setFunction}{.}{hasChildren}{()}}}{||}{{!}{{{setFunction}{.}{getLastChild}{()}}{.}{isBlock}{()}}}{||}{{!}{{{setFunction}{.}{getSecondChild}{()}}{.}{isParamList}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{getFunction}{.}{hasChildren}{()}}}{||}{{!}{{{getFunction}{.}{getLastChild}{()}}{.}{isBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isFunction}{()}}}{||}{{!}{{{n}{.}{getLastChild}{()}}{.}{isBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{umdPattern.activeBranch}{.}{isBlock}{()}}{&&}{{{umdPattern.activeBranch}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isEmpty}{()}}{||}{{(}{{{n}{.}{isBlock}{()}}{&&}{{!}{{n}{.}{hasChildren}{()}}}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{next}{!=}{null}}{&&}{{next}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{body}{.}{isBlock}{()}}}{||}{{!}{{body}{.}{hasOneChild}{()}}}{||}{{!}{{{body}{.}{getFirstChild}{()}}{.}{isReturn}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{blockNode}{.}{isBlock}{()}}{)}}{;}}{{if}{(}{{blockNode}{.}{hasChildren}{()}}{)}{{{}{{{markAllPropsRead}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isBlock}{()}}{)}{{{}{{{visitBlock}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isBlock}{()}}{)}}{;}}{{return}{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{addingRoot}{.}{isBlock}{()}}{||}{{addingRoot}{.}{isModuleBody}{()}}{||}{{addingRoot}{.}{isScript}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{n}{.}{isBlock}{()}}{&&}{{{n}{.}{getParent}{()}}{!=}{null}}}{&&}{{{n}{.}{getParent}{()}}{.}{isFunction}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{for}{(}{;}{{{!}{{currentParent}{.}{isScript}{()}}}{&&}{{!}{{currentParent}{.}{isBlock}{()}}}}{;}{{current}{=}{currentParent}}{,}{{currentParent}{=}{{currentParent}{.}{getParent}{()}}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{{parent}{.}{isScript}{()}}{||}{{{{grandparent}{!=}{null}}{&&}{{grandparent}{.}{isFunction}{()}}}{&&}{{parent}{.}{isBlock}{()}}}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{body}{.}{isBlock}{()}}{&&}{{!}{{body}{.}{hasChildren}{()}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{n}{.}{isBlock}{()}}{&&}{{n}{.}{isSyntheticBlock}{()}}}{)}}{||}{{n}{.}{isScript}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{expectedBlock}{.}{isBlock}{()}}{?}{expectedBlock}{:}{null}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{subtree}{.}{isScript}{()}}}{&&}{{!}{{subtree}{.}{isBlock}{()}}}}{)}{{{}{{return}{subtree}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{maybeAssign}{.}{isBlock}{()}}{||}{{maybeAssign}{.}{isScript}{()}}{||}{{NodeUtil}{.}{isStatement}{(}{maybeAssign}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isBlock}{()}}{&&}{{!}{{loneBlocks}{.}{isEmpty}{()}}}{&&}{{{loneBlocks}{.}{peek}{()}}{==}{n}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{finallyBody}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{tryBody}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{then}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{body}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{!}{isArrow}}{&&}{{!}{isSignature}}{&&}{{!}{{bodyNode}{.}{isBlock}{()}}}}}
{AST_ROOT_SC2NF{{!}{{irNode}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isBlock}{()}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{collectionRoot}{.}{isScript}{()}}{||}{{collectionRoot}{.}{isBlock}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{externs}{.}{isBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{{mainRoot}{.}{isBlock}{()}}{&&}{{!}{{mainRoot}{.}{hasChildren}{()}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{functionA}{.}{getBodyNode}{()}}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{mainFunction}{.}{getAstNode}{()}}{.}{isRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{mainFunction}{.}{getBodyNode}{()}}{.}{isRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{ImmutableList}{.}{of}{(}{bang}{,}{qmark}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{scopeRoot}{.}{isBlock}{()}}{&&}{{{scopeRoot}{.}{getParent}{()}}{!=}{null}}}{&&}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{isBlock}{()}}}
{AST_ROOT_SC2NF{{(}{{{parent}{.}{isScript}{()}}{||}{{(}{{{parent}{.}{isBlock}{()}}{&&}{{!}{{parent}{.}{isSyntheticBlock}{()}}}{&&}{{!}{{parent}{.}{isAddedBlock}{()}}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{block}{.}{isBlock}{()}}{&&}{{{block}{.}{getParent}{()}}{.}{isTry}{()}}{&&}{{{{block}{.}{getParent}{()}}{.}{getFirstChild}{()}}{==}{block}}}}
{AST_ROOT_SC2NF{{{{{node}{.}{isBlock}{()}}{&&}{{parent}{!=}{null}}}{&&}{{parent}{.}{isTry}{()}}}{&&}{{{NodeUtil}{.}{getCatchBlock}{(}{parent}{)}}{==}{node}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}{||}{{!}{{isGoogModuleCall}{(}{{n}{.}{getFirstChild}{()}}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{block}{.}{isBlock}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{node}{.}{isBlock}{()}}{)}{{{}{{{node}{.}{setToken}{(}{Token.SCRIPT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{needsSemicolon}{=}{{{parent}{!=}{null}}{&&}{{(}{{{parent}{.}{isExprResult}{()}}{||}{{parent}{.}{isBlock}{()}}{||}{{parent}{.}{isScript}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{deleteWhitespaceBefore}{&&}{{parent}{!=}{null}}}{&&}{{(}{{{parent}{.}{isScript}{()}}{||}{{parent}{.}{isBlock}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parentNode}{.}{isBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{()}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{()}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{()}}{;}}}
{AST_ROOT_SC2NF{{{endPass}{()}}{;}}}
{AST_ROOT_SC2NF{{{!}{{currentScope}{.}{hasThis}{()}}}{&&}{{NodeUtil}{.}{referencesSuper}{(}{fn}{)}}}}
{AST_ROOT_SC2NF{{{Renamer}}{forChildScope}{(}{{boolean}{hoisted}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{renamer}{=}{{{nameStack}{.}{peek}{()}}{.}{forChildScope}{(}{{!}{{NodeUtil}{.}{createsBlockScope}{(}{declarationRoot}{)}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isInferrableConst}{(}{jsdoc}{,}{name}{)}}{)}{{{}{{{jsdoc}{=}{{pullJsdocTypeFromAst}{(}{compiler}{,}{jsdoc}{,}{name}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isInferrableConst}{(}{jsdoc}{,}{nameNode}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{propAccessNode}{,}{ABSTRACT_METHOD_NOT_CALLABLE}{,}{funName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{languageIn}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{language}}{;}}{{{{this}{.}{languageOut}}{=}{language}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{argList}{=}{{getFunctionArgList}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{argList}{=}{{getFunctionArgList}{(}{function}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{MalformedException}}{(}{{STRING_CONSTANT}{+}{{node}{.}{getToken}{()}}}{,}{fnChild}{)}}{;}}}
{AST_ROOT_SC2NF{{{findDeclaredNames}{(}{functionBody}{,}{null}{,}{renamer}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{declarationRoot}{.}{isFunction}{()}}}{)}{{{}{{{findDeclaredNames}{(}{declarationRoot}{,}{null}{,}{renamer}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{isCallInLoop}{)}{{{}{{{fixUnitializedVarDeclarations}{(}{newBlock}{,}{newBlock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{declaration}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{clear}{()}{{{}{{{prefixNames}{.}{clear}{()}}{;}}{{{seenNames}{.}{clear}{()}}{;}}{{{constructorsToProcess}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{prefix}}{:}{{Iterables}{.}{concat}{(}{seenNames}{,}{prefixNames}{)}}{)}{{{}{{if}{(}{{fullyQualifiedName}{.}{startsWith}{(}{prefix}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{instrumentationData}{.}{get}{(}{fileName}{)}}{!=}{null}}{)}{{{}{{{node}{.}{addChildToFront}{(}{{newHeaderNode}{(}{traversal}{,}{node}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{node}{.}{addChildToFront}{(}{{newHeaderNode}{(}{traversal}{,}{node}{)}}{)}}{;}}{{{instrumentBranchCoverage}{(}{traversal}{,}{{instrumentationData}{.}{get}{(}{fileName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isUnionType}{()}}{?}{{{this}{.}{toMaybeUnionType}{()}}{.}{getAlternates}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{getType}{(}{typeObj}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{getType}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{BOTTOM_OBJECT}}{=}{{{{this}{.}{registry}}{.}{getNativeType}{(}{JSTypeNative.NO_OBJECT_TYPE}{)}}{.}{toObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{}{{{objectType}{=}{{FunctionType}{.}{getTopDefiningInterface}{(}{objectType}{,}{propName}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isInterface}{()}}{)}{{{}{{return}{{getTopDefiningInterface}{(}{{getInstanceType}{()}}{,}{propertyName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lvalueType}{.}{isEnumElement}{()}}{)}{{{}{{{lvalueType}{=}{{lvalueType}{.}{getEnumeratedType}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{enumeratedType}{=}{{{requiredType}{.}{getProp}{(}{{new}{{QualifiedName}}{(}{pname}{)}}{)}}{.}{getEnumeratedType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{enumeratedType}{=}{{{requiredType}{.}{getProp}{(}{{new}{{QualifiedName}}{(}{pname}{)}}{)}}{.}{getEnumeratedType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{tmp}{=}{{NominalType}{.}{pickSuperclass}{(}{n1}{,}{n2}{)}}}{;}}{{if}{(}{{tmp}{!=}{null}}{)}{{{}{{return}{{tmp}{.}{getInstanceAsJSType}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NominalType}}{{nominal}{=}{{NominalType}{.}{pickSuperclass}{(}{nt1}{,}{nt2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{ClosureOptimizePrimitives}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}{{{n}{.}{removeChild}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parent}{.}{removeChild}{(}{{parent}{.}{getFirstChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{!}{currentScript.declareLegacyNamespace}}{&&}{{currentScript.defaultExportRhs}{==}{null}}}{&&}{{namedExport}{.}{hasInlinableName}{()}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{o}{instanceof}{{JSType}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{expected}{,}{null}{,}{warning}{,}{description}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{BaseJSTypeTestCase.ALL_NATIVE_EXTERN_TYPES}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{testSets}{(}{BaseJSTypeTestCase.ALL_NATIVE_EXTERN_TYPES}{,}{js}{,}{output}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{super}{.}{enableNormalize}{()}}{;}}{{{super}{.}{enableTypeCheck}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{DisambiguatePropertiesTest}{()}{{{}{{{parseTypeInfo}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{t}{.}{inGlobalHoistScope}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{{e}{.}{getType}{()}}{,}{type}{)}}{;}}{{{assertEquals}{(}{e.lineNumber}{,}{lineNumber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{result.errors}{[}{NUMBER_CONSTANT}{]}}{.}{getType}{()}}{,}{errorType}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{result.success}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{compiler}{.}{getResult}{()}}{.}{success}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkShortGoogRequireCall}{(}{t}{,}{callNode}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setPolymerPass}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{polymerPass}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.deadAssignmentElimination}{)}{{{}{{{passes}{.}{add}{(}{deadAssignmentsElimination}{)}}{;}}{{if}{(}{{!}{options.polymerPass}}{)}{{{}{{{passes}{.}{add}{(}{deadPropertyAssignmentElimination}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{options.polymerPass}{)}{{{}{{{checks}{.}{add}{(}{polymerPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setPolymerPass}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{other}{.}{isGeneric}{()}}{)}{{{}{{{other}{=}{{instantiateGenericsWithUnknown}{(}{other}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{this}{.}{equals}{(}{other}{)}}{)}{{{}{{return}{true}{;}}{}}}}{{return}{{{instantiateGenericsWithUnknown}{(}{this}{)}}{.}{isSubtypeOfHelper}{(}{other}{,}{checkThisType}{,}{subSuperMap}{,}{boxedInfo}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isGeneric}{()}}{)}{{{}{{return}{{{instantiateGenericsWithUnknown}{(}{this}{)}}{.}{transformByApplyProperty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{rootNode}{!=}{parent.rootNode}}{,}{STRING_CONSTANT}{,}{rootNode}{,}{parent.rootNode}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDontCrashCtorAliasWithEnum}{()}{{{}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{compareJsDoc}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testGlobalObjectDeclaredToPreserveItsPreviousValue2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjLitAssignmentDepth2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{compareJsDoc}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isConstDeclaration}{()}{{{}{{return}{{{getParent}{()}}{.}{isConst}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isVarDeclaration}{()}{{{}{{return}{{{getParent}{()}}{.}{isVar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{traverseClass}{(}{n}{,}{parent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{{Joiner}{.}{on}{(}{CHAR_CONS}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{{Joiner}{.}{on}{(}{CHAR_CONS}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options.prettyPrint}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{prettyPrint}}{=}{options.prettyPrint}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{zipEntryPath}{=}{{STRING_CONSTANT}{+}{absoluteZipPath}{+}{STRING_CONSTANT}{+}{entryPath}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setPrettyPrint}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{prettyPrint}}{=}{{options}{.}{isPrettyPrint}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testJqueryExpandedEachExpansionEs6ComputedProp}{()}{{{}{{{testErrorEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{ExpandJqueryAliases.JQUERY_UNABLE_TO_EXPAND_INVALID_NAME}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options.prettyPrint}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{prettyPrint}}{=}{options.prettyPrint}}{;}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setPolymerPass}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{fix}{.}{getReplacements}{()}}{.}{keys}{()}}}
{AST_ROOT_SC2NF{{nameDefinitionMultimap}{.}{keys}{()}}}
{AST_ROOT_SC2NF{{nameDefinitionMultimap}{.}{keySet}{()}}}
{AST_ROOT_SC2NF{{nameDefinitionMultimap}{.}{keys}{()}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{{Joiner}{.}{on}{(}{CHAR_CONS}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{{Joiner}{.}{on}{(}{CHAR_CONS}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{{Joiner}{.}{on}{(}{CHAR_CONS}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{{Joiner}{.}{on}{(}{CHAR_CONS}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{{Joiner}{.}{on}{(}{CHAR_CONS}{)}}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{STRING_CONSTANT}{,}{VarCheck.VAR_ARGUMENTS_SHADOWED_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{scope}{.}{getParent}{()}}{==}{null}}{)}}{;}}{{{scanVars}{(}{n}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{createCompilerOptions}{()}}}{;}}{{{options}{.}{setCheckTypes}{(}{true}{)}}{;}}{{{test}{(}{options}{,}{STRING_CONSTANT}{,}{RhinoErrorReporter.TYPE_PARSE_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testTypeParsingOnWithVerbose}{()}{{{}{{{args}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.TYPE_PARSE_ERROR}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.TYPE_PARSE_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{,}{RhinoErrorReporter.TYPE_PARSE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.TYPE_PARSE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.TYPE_PARSE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{markConstAndCopyJsDoc}{(}{assignNode}{,}{jsdocNode}{,}{rhs}{)}}{;}}}
{AST_ROOT_SC2NF{{{markConstAndCopyJsDoc}{(}{target}{,}{target}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{markConstAndCopyJsDoc}{(}{jsdocNode}{,}{jsdocNode}{,}{{parent}{.}{getLastChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{list}{.}{get}{(}{{{list}{.}{size}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{super}{.}{setCode}{(}{cachedCode}{,}{{{this}{.}{getCharset}{()}}{==}{StandardCharsets.UTF_8}}{)}}{;}}}
{AST_ROOT_SC2NF{{{super}{.}{setCode}{(}{cachedCode}{,}{{{this}{.}{getCharset}{()}}{==}{StandardCharsets.UTF_8}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{ns}}{!=}{null}}{)}{{{}{{{builder}{.}{append}{(}{{{this}{.}{ns}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{inheritedPropDef.methodType}{!=}{null}}{)}{{{}{{{propMethodTypesToProcess}{.}{put}{(}{pname}{,}{{inheritedPropDef.methodType}{.}{substituteNominalGenerics}{(}{superType}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFinalized}{()}}{)}}{;}}{{return}{{{{this}{.}{rawType}}{.}{getCtorPropDeclaredType}{(}{STRING_CONSTANT}{)}}{.}{substituteGenerics}{(}{typeMap}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{inGeneratorContext}}{.}{add}{(}{initialGeneratorContext}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{namespaceArg}{=}{{crDefineCallNode}{.}{getChildAtIndex}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{pathArg}{=}{{crExportPathNode}{.}{getChildAtIndex}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{target}{=}{{{call}{.}{getChildAtIndex}{(}{NUMBER_CONSTANT}{)}}{.}{getQualifiedName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{{BASE64_DECODE_MAP}{[}{c}{]}}}{;}}{{assert}{{(}{{result}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{:}{STRING_CONSTANT}{;}}{{return}{{BASE64_DECODE_MAP}{[}{c}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParseTree}}{{arrowFunctionBody}{=}{{parseArrowFunctionBody}{(}{expressionIn}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ParseTree}}{{arrowFunctionBody}{=}{{parseArrowFunctionBody}{(}{expressionIn}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parseGeneratorFunctionTail}{(}{builder}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{isGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{isGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseFunctionTail}{(}{builder}{,}{isGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{recvType}{=}{{recvType}{.}{removeType}{(}{commonTypes.NULL}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isCallTo}{(}{{destructuringLhsNode}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{aliasVarNodeRhs}{==}{null}}{||}{{!}{{NodeUtil}{.}{isCallTo}{(}{aliasVarNodeRhs}{,}{STRING_CONSTANT}{)}}}}{)}{{{}{{{t}{.}{report}{(}{call}{,}{INVALID_GET_ALIAS}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{call}{!=}{null}}{&&}{{NodeUtil}{.}{isCallTo}{(}{call}{,}{STRING_CONSTANT}{)}}}{&&}{{{call}{.}{getLastChild}{()}}{.}{isFunction}{()}}}{;}}}
{AST_ROOT_SC2NF{{{nameGenerator}{.}{reset}{(}{reservedNames}{,}{STRING_CONSTANT}{,}{reservedCharacters}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{generatePseudoNames}{,}{prevUsedPropertyMap}{,}{null}{,}{nameGenerator}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{generatePseudoNames}{,}{null}{,}{null}{,}{nameGenerator}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{NameGenerator}}{{nameGen}{=}{{new}{{DefaultNameGenerator}}{(}{{reservedNames}{.}{build}{()}}{,}{STRING_CONSTANT}{,}{reservedCharacters}{)}}}{;}}}
{AST_ROOT_SC2NF{{{reset}{(}{reservedNames}{,}{prefix}{,}{reservedCharacters}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{AmbiguateProperties}}{(}{compiler}{,}{{options.anonymousFunctionNaming}{.}{getReservedCharacters}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isBottom}{()}}{||}{{isUnknown}{()}}{||}{{hasTruthyMask}{()}}}{)}{{{}{{return}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{hasFalsyMask}{()}{{{}{{return}{{FALSY_MASK}{==}{{getMask}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{hasTruthyMask}{()}{{{}{{return}{{TRUTHY_MASK}{==}{{getMask}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFinalized}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isInstanceofObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isInstanceofObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isLiteralObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isLiteralObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{argType}{,}{paramType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{{{TypeMismatch}{.}{recordImplicitUseOfNativeObject}{(}{{this}{.}{mismatches}}{,}{n}{,}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{{{recordImplicitUseOfNativeObject}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isInstanceofObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{createdFromGoogProvide}{=}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isInstanceofObject}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{getOptions}{(}{options}{)}}{;}}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Var}}{v}}{:}{{globalExternsScope}{.}{getAllSymbols}{()}}{)}{{{}{{{considerVar}{(}{v}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{scope}{.}{getAllSymbols}{()}}}
{AST_ROOT_SC2NF{{for}{(}{{{TypedScope}}{s}}{:}{{scopes}{.}{values}{()}}{)}{{{}{{{Iterables}{.}{addAll}{(}{vars}{,}{{s}{.}{getAllSymbols}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Var}}{v}}{:}{{globalExternsScope}{.}{getVarIterable}{()}}{)}{{{}{{{considerVar}{(}{v}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{scope}{.}{getVarIterable}{()}}}
{AST_ROOT_SC2NF{{for}{(}{{{TypedScope}}{s}}{:}{{scopes}{.}{values}{()}}{)}{{{}{{{Iterables}{.}{addAll}{(}{vars}{,}{{s}{.}{getVarIterable}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isContinueStructure}{(}{target}{)}}{&&}{{matchLabel}{(}{{target}{.}{getParent}{()}}{,}{label}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{leftOfArrow.type}{==}{ParseTreeType.CALL_EXPRESSION}}{)}{{{}{{return}{{completeAssignmentExpressionParseAtArrow}{(}{{leftOfArrow}{.}{asCallExpression}{()}}{,}{expressionIn}{)}}{;}}{}}}{else}{{{}{{return}{{completeArrowFunctionParseAtArrow}{(}{leftOfArrow}{,}{expressionIn}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{sourceType}{.}{isSubtypeWithoutStructuralTyping}{(}{targetType}{)}}}{)}{{{}{{{recordImplicitInterfaceUses}{(}{n}{,}{sourceType}{,}{targetType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{recordImplicitInterfaceUses}{(}{n}{,}{argType}{,}{paramType}{)}}{;}}}
{AST_ROOT_SC2NF{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}}
{AST_ROOT_SC2NF{{{recordImplicitInterfaceUses}{(}{n}{,}{rightType}{,}{leftType}{)}}{;}}}
{AST_ROOT_SC2NF{{{recordImplicitInterfaceUses}{(}{n}{,}{caseType}{,}{switchType}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{topInterface}{!=}{null}}{&&}{{{topInterface}{.}{getConstructor}{()}}{!=}{null}}}{)}{{{}{{{foundType}{=}{{{topInterface}{.}{getConstructor}{()}}{.}{getPrototypeProperty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isPrototypeObject}{()}}{)}{{{}{{return}{{{builder}{.}{append}{(}{{{getOwnerFunction}{()}}{.}{getInstanceTypeOfCtor}{()}}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ObjectType}}{{obj}{=}{{getObjTypeIfSingletonObj}{()}}}{;}}{{return}{{{obj}{!=}{null}}{&&}{{obj}{.}{hasOwnPropery}{(}{{new}{{QualifiedName}}{(}{propertyName}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{equals}{(}{proto}{)}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isUnknownObject}{()}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSets}{(}{js}{,}{output}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{isVar}{()}}{&&}{{{n}{.}{getFirstFirstChild}{()}}{!=}{null}}}{&&}{{{n}{.}{getFirstFirstChild}{()}}{.}{isFunction}{()}}}}
{AST_ROOT_SC2NF{{return}{{{{{builder}{()}}{.}{withCharset}{(}{inputCharset}{)}}{.}{withOriginalPath}{(}{{originalZipPath}{+}{STRING_CONSTANT}{+}{entryPath}}{)}}{.}{buildFromUrl}{(}{zipEntryUrl}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{isVar}{()}}{||}{{parent}{.}{isExprResult}{()}}}}
{AST_ROOT_SC2NF{{{println}{(}{{STRING_CONSTANT}{+}{funType}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{FindExportableNodes.EXPORT_ANNOTATION_NOT_ALLOWED}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendPlaceholderReference}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{registerMessage}{(}{{{{new}{{JsMessage.Builder}}{(}{STRING_CONSTANT}{)}}{.}{appendStringPart}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{style}{=}{RELAX}}{;}}{{{compareJsDoc}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{compareJsDoc}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{options}{==}{null}}{)}{{{}{{{initOptions}{(}{{newCompilerOptions}{()}}{)}}{;}}{}}}}{{return}{errorManager}{;}}{}}}}
{AST_ROOT_SC2NF{{{inputsById}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{errorManager}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{options}{==}{null}}{)}{{{}{{{initOptions}{(}{{new}{{CompilerOptions}}{()}}{)}}{;}}{}}}}{{return}{errorManager}{;}}{}}}}
{AST_ROOT_SC2NF{{{inputsById}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{{new}{{ThreadSafeDelegatingErrorManager}}{(}{errorManager}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{areSubtypes}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{ch}{)}{{}{{case}{CHAR_CONS}{:}}{{case}{CHAR_CONS}{:}}{{return}{true}{;}}{default:}{{return}{{Character}{.}{isLetter}{(}{ch}{)}}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{options}{==}{null}}{)}{{{}{{{initOptions}{(}{{newCompilerOptions}{()}}{)}}{;}}{}}}}{{return}{errorManager}{;}}{}}}}
{AST_ROOT_SC2NF{{{inputsById}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{errorManager}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{callNode}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{getOptions}{(}{options}{)}}{;}}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{{compiler}{.}{getRoot}{()}}{.}{getLastChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{assertThat}{(}{aggregateWarnings}{)}}{.}{isEmpty}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCodeMotionDoesntBreakFunctionHoisting}{(}{)}{throws}{{Exception}}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{testSameEs6Strict}{(}{{{String}}{js}}{)}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}{{{test}{(}{js}{,}{js}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConst}{()}{{{}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLet}{()}{{{}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testRewriteWarning}{(}{code}{,}{expected}{,}{warning}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testRewriteWarning}{(}{code}{,}{expected}{,}{warning}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testRewriteError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testRewriteError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testRewrite}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testRewrite}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{allowExternsChanges}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT8}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT8}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testAsyncArrowFunction}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT8}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT8}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testMemberGeneratorYield1}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNewTarget}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParametersWithRestParameters}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRestParameters}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParameters}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOctalNumericKey}{()}{{{}{{{allowWarnings}{=}{true}}{;}}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testComputedPropertiesClassMethods}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrinter_defaultValue}{(}{)}{throws}{{Exception}}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrinter_arrow}{(}{)}{throws}{{Exception}}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDestructuringForOfLoops2}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintDestructuringInRestParam}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintMixedDestructuring}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrintObjectPattern}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintNestedObjectPattern}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testPrettyPrintArrayPattern}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrettyPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testPrintBlockScopedFunctions}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT6}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{assertPrint}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExponentiationAssignmentOperator}{()}{{{}{{{languageMode}{=}{LanguageMode.ECMASCRIPT7}}{;}}{{{assertPrintSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{LanguageMode.ECMASCRIPT7}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{compiler}{=}{{createCompiler}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testWhileLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDoWhileLoopMultiLineBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareDoWhileLoopMultiLineBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareDoWhileLoopMultiLineBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDoWhileLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareDoWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareDoWhileLoopBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForLoopBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareForLoopBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareForLoopBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIfElseBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareIfElseBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareIfElseBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIfBranch}{(}{)}{throws}{{Exception}}{{{}{{{compareIfBranch}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareIfBranch}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunction}{(}{)}{throws}{{Exception}}{{{}{{{compareFunctionOneMode}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{compareFunctionOneMode}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{languageOutIsAtLeast}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{,}{CompilerOptions.LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{js}{,}{expected}{,}{warning}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{testWarning}{(}{js}{,}{warning}{,}{warningMessage}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{testWarning}{(}{js}{,}{warning}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{testWarning}{(}{js}{,}{warning}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{js}{,}{error}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{es6Error}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{es5Error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{error}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{testError}{(}{js}{,}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{externs}{,}{js}{,}{diag}{,}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{testSame}{(}{externs}{,}{js}{,}{warning}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{js}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{js}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{js}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{js}{,}{expected}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{js}{,}{expected}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{expected}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{super}{.}{test}{(}{js}{,}{expected}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{anchorUnusedVars}{=}{false}}{;}}{{{canRemoveExterns}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{allowExternsChanges}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getOptions}{()}}}{;}}{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_TYPED}{)}}{;}}{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{compilerOptions}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{VarCheck.VIOLATED_MODULE_DEP_ERROR}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{VarCheck.VIOLATED_MODULE_DEP_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{VarCheck.MISSING_MODULE_DEP_ERROR}{)}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{VarCheck.MISSING_MODULE_DEP_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testLegalConstReferenceBetweenModules}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLegalLetReferenceBetweenModules}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testObjLit}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testForLoopsEs6}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{CheckUnusedPrivatePropertiesTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguageInAndOut}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionNonMovement1}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{{createModuleStar}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{disableTypeCheck}{()}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidVariableInScope}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_INVALID_VARIABLE}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_INVALID_VARIABLE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNonAliasLocal}{()}{{{}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testJSDocCopiedForClasses}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralMethods}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralShorthand}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParameter}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition3}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition2}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition1}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNonTopLevelDestructuring}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError2}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError1}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDestructuringError}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testYieldExpression}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testScopedNoChanges}{(}{aliases}{,}{code}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testScopedNoChanges}{(}{aliases}{,}{code}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testScoped}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{testScoped}{(}{code}{,}{expected}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testAsyncFunction}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT8}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{CANNOT_CONVERT_YET}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{CANNOT_CONVERT_YET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExponentiationAssignmentOperator}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT7}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExponentiationOperator}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT7}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT8}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT8}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT8}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testValidRestParameter}{()}{{{}{{{setLanguage}{(}{LanguageMode.ECMASCRIPT6}{,}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{{valid}{(}{STRING_CONSTANT}{)}}{;}}{{{valid}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguage}{(}{LanguageMode.ECMASCRIPT8}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{CompilerOptions.LanguageMode.ECMASCRIPT6_STRICT}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{languageIn}}{=}{CompilerOptions.LanguageMode.ECMASCRIPT6}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguage}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setLanguage}{(}{LanguageMode.ECMASCRIPT6_STRICT}{,}{LanguageMode.ECMASCRIPT5_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testError}{(}{{createFunction}{(}{body}{)}}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testError}{(}{{createShorthandFunctionInObjLit}{(}{body}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testOk}{(}{{createFunction}{(}{body}{)}}{)}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testOk}{(}{{createShorthandFunctionInObjLit}{(}{body}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6EnhancedObjLiteralsPropertyShorthand}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6EnhancedObjLiteralsComputedValuesNotRemoved}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testES6ClassComputedProperty}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6GettersWithoutTranspilation}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{languageOut}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{disableTypeCheck}{()}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{disableTypeCheck}{()}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{{createShorthandFunctionInObjLit}{(}{returnType}{,}{body}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{String}}{{js}{=}{{createShorthandFunctionInObjLit}{(}{returnType}{,}{body}{)}}}{;}}{{{testWarning}{(}{js}{,}{CheckMissingReturn.MISSING_RETURN_STATEMENT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{{{compareJsDoc}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNoMoveDeepFunctionDeclarations}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineEmptyFunction6}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_STRICT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction4}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testFailure}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction3}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testFailure}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction2}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testFailure}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction1}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testFailure}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{{{propertyRenaming}{=}{PropertyRenamingPolicy.ALL_UNQUOTED}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT8}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTaggedTemplateError}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{ObjectPropertyStringPreprocess.STRING_LITERAL_EXPECTED_ERROR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineIntoNestedNonHoistedNamedFunctions}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteIfNotInGlobalScope1}{(}{)}{throws}{{Exception}}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT6}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{NoRewriteIfNotInGlobalScopeTestInput.INPUT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT6}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{{{compareJsDoc}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{replaceSymbol}{(}{n}{,}{name}{,}{{t}{.}{getInput}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{com.google.javascript.jscomp.newtypes.FunctionType}}{{ctorType}{=}{{functionType}{.}{getFunTypeIfSingletonObj}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{denormalizePass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}{{{newInitializer}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{n}{.}{removeChild}{(}{newInitializer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{replaceSymbol}{(}{t}{,}{n}{,}{name}{,}{{t}{.}{getInput}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{findDeclaredNames}{(}{functionBody}{,}{renamer}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{declarationRoot}{.}{isFunction}{()}}}{)}{{{}{{{findDeclaredNames}{(}{declarationRoot}{,}{renamer}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{denormalizePass}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{,}{STRING_CONSTANT}{,}{child}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}{{{newInitializer}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{n}{.}{removeChild}{(}{newInitializer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}{{{newInitializer}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{n}{.}{removeChild}{(}{newInitializer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFinalized}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}{{{super}{.}{addUndeclaredProperty}{(}{pname}{,}{defSite}{,}{{{this}{.}{commonTypes}}{.}{UNKNOWN}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}{{{super}{.}{addProperty}{(}{pname}{,}{defSite}{,}{type}{,}{isConstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFinalized}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{this}{.}{isFinalized}}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isStruct}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{{isFinalized}{()}}{||}{{isClass}{()}}}{)}}{;}}{{return}{{{this}{.}{objectKind}}{.}{isStruct}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isFinalized}{&&}{{externs}{.}{containsKey}{(}{name}{)}}}{)}{{{}{{{type}{=}{{externs}{.}{get}{(}{name}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{isFinalized}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFinalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFinalized}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{getCtorPropDeclaredType}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFinalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{RawNominalType}}{getRawNominalType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{{this}{.}{rawType}}{.}{isFinalized}{()}}}{)}}{;}}{{return}{{this}{.}{rawType}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nominalType}{.}{isFinalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nominalType}{.}{isFinalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{thisNode}{.}{isEquivalentToShallow}{(}{thatNode}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{ScopedChangeHandler}{()}{{{}{{{{this}{.}{lastCodeChangeQuery}}{=}{timestamp}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeSanityCheck}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{code}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{denormalizePass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{nameGenerator}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InlineVariablesConstantsTest}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{useGoogleCodingConvention}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{globalScope}{=}{{TypedScope}{.}{createGlobalScope}{(}{blockNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fieldType}{=}{{createFromTypeNodesInternal}{(}{{fieldTypeNode}{.}{getLastChild}{()}}{,}{sourceName}{,}{scope}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{setReferencedType}{(}{{registry}{.}{getNativeObjectType}{(}{JSTypeNative.NO_RESOLVED_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{denormalizePass}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{code}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{grandparent}{=}{{parent}{.}{getParent}{()}}}{;}}{{{replaceWithEmpty}{(}{parent}{,}{grandparent}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isUnresolved}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSTypes}}{getCommonTypes}{()}{{{}{{return}{{this}{.}{commonTypes}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newBlockNode}{.}{useSourceInfoIfMissingFromForTree}{(}{oldBlockNode}{)}}{;}}{{{functionNode}{.}{replaceChild}{(}{oldBlockNode}{,}{newBlockNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{origValueNode}{.}{getString}{()}}{.}{equals}{(}{newString}{)}}}{)}{{{}{{{origValueNode}{.}{setString}{(}{newString}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{newValue}{!=}{msgNode}}{)}{{{}{{{newValue}{.}{useSourceInfoIfMissingFromForTree}{(}{msgNode}{)}}{;}}{{{msgNode}{.}{replaceWith}{(}{newValue}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_boxedNumberVsZero}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_allType}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_unknownType}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{retValue}{=}{{returnedValue}{.}{cloneTree}{()}}}{;}}{{{parent}{.}{replaceChild}{(}{call}{,}{retValue}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{p.newName}{.}{equals}{(}{oldName}{)}}}{)}{{{}{{{n}{.}{setString}{(}{p.newName}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{collapses}{.}{isEmpty}{()}}}{)}{{{}{{{applyCollapses}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{callTarget}{.}{getLastChild}{()}}{.}{setString}{(}{STRING_CONSTANT}{)}}{;}}{{{{firstArg}{.}{getNext}{()}}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{newNode}{.}{isEquivalentTo}{(}{n}{)}}}{)}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{newNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{newNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rhs}{.}{isChanged}{()}}{)}{{{}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{placeholder}{,}{{{mNode}{.}{getNode}{()}}{.}{removeFirstChild}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{follow}{==}{null}}{||}{{areMatchingExits}{(}{n}{,}{follow}{)}}}{)}{{{}{{{n}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{newLiteralNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{canFoldStandardConstructors}{(}{n}{)}}{)}{{{}{{{n}{.}{setToken}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{n}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{{functions}{.}{put}{(}{{t}{.}{getModule}{()}}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{codeChanged}{)}{{{}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{{t}{.}{getCompiler}{()}}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}{;}}{{{n}{.}{replaceWith}{(}{result}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{detachChildren}{()}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{result}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replacementNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{replacementNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{replacementNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{child}{,}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{node}{.}{getParent}{()}}{.}{removeChild}{(}{node}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{childToRemove}}{:}{nodesToRemove}{)}{{{}{{{node}{.}{removeChild}{(}{childToRemove}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{void}{apply}{()}{{{}{{{parent}{.}{replaceChild}{(}{oldChild}{,}{newChild}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{useGoogleCodingConvention}{=}{true}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setString}{(}{newName}{)}}{;}}{{{{t}{.}{getCompiler}{()}}{.}{reportCodeChange}{()}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{public}{InlineVariablesConstantsTest}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setString}{(}{{prop}{+}{fileid}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{node}{!=}{null}}{)}{{{}{{{n}{.}{setDeclaredTypeExpression}{(}{node}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{attachTypeExpr}{=}{{IR}{.}{rest}{(}{{n}{.}{getString}{()}}{)}}}{;}}{{{n}{.}{replaceWith}{(}{attachTypeExpr}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{NodeUtil}{.}{getPureBooleanValue}{(}{forCondition}{)}}{==}{TernaryValue.TRUE}}{)}{{{}{{{forCondition}{.}{replaceWith}{(}{{IR}{.}{empty}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{removeChild}{(}{right}{)}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{right}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeUtil}{.}{redeclareVarsInsideBranch}{(}{caseNode}{)}}{;}}{{{switchNode}{.}{removeChild}{(}{caseNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maybeBreak}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{replaceWith}{(}{{right}{.}{detach}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{()}{{{}{{{super}{.}{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{closureRequire}}{:}{requiresToBeRemoved}{)}{{{}{{{closureRequire}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyOfRemoval}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{node}{)}}{;}}{{{notifyOfRemoval}{(}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{functionBody}{.}{removeChild}{(}{current}{)}}{;}}{{{insertAfter}{=}{{addToFront}{(}{functionBody}{,}{current}{,}{insertAfter}{)}}}{;}}{{{reportCodeChange}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{code}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{denormalizePass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{scope}{.}{isLocal}{()}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{maybeNormalizeFunctionDeclaration}{(}{n}{)}}{)}{{{}{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{TypeInformationGatherer}}{(}{compiler}{,}{{new}{{DevirtualizePrototypeMethods}}{(}{compiler}{)}}{,}{typeInformation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{modules}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{{n}{.}{getParent}{()}}{.}{isVar}{()}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{{Arrays}{.}{asList}{(}{modules}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setScope}{(}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInputId}{(}{null}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInputId}{(}{{NodeUtil}{.}{getInputId}{(}{scopeRoot}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{setInputId}{(}{{NodeUtil}{.}{getInputId}{(}{root}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{c}{.}{setQuotedString}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{super}{.}{enableLineNumberCheck}{(}{false}{)}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{dollarChildProp}{=}{{n}{.}{getGrandparent}{()}}}{;}}{{{dollarChildProp}{.}{setToken}{(}{Token.GETELEM}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{{{declaringNode}{.}{getFirstFirstChild}{()}}{.}{cloneTree}{()}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isUtilGetDefineCall}{(}{n}{)}}{)}{{{}{{{substituteUtilGetDefine}{(}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{t}{.}{getCompiler}{()}}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{{t}{.}{getCompiler}{()}}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isGoogLoadModuleStatement}{(}{n}{)}}{)}{{{}{{{updateGoogLoadModuleLate}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{putBooleanProp}{(}{Node.GOOG_MODULE}{,}{true}{)}}{;}}{{{inlineModuleIntoGlobal}{(}{n}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{{checkAndSetStrictModeDirective}{(}{t}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{newJsdoc}{!=}{null}}{)}{{{}{{{jsdocNode}{.}{setJSDocInfo}{(}{newJsdoc}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isDestructuringDeclaration}{(}{n}{)}}{)}{{{}{{{splitDeclaration}{(}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{node}{.}{getParent}{()}}{.}{removeChild}{(}{node}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{childToRemove}}{:}{nodesToRemove}{)}{{{}{{{node}{.}{removeChild}{(}{childToRemove}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{visitArrowFunction}{(}{n}{,}{{checkNotNull}{(}{thisContext}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{newNode}{.}{isEquivalentTo}{(}{n}{)}}}{)}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{newNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{newNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rhs}{.}{isChanged}{()}}{)}{{{}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{placeholder}{,}{{{mNode}{.}{getNode}{()}}{.}{removeFirstChild}{()}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{follow}{==}{null}}{||}{{areMatchingExits}{(}{n}{,}{follow}{)}}}{)}{{{}{{{n}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tryReplaceArguments}{(}{{traversal}{.}{getScope}{()}}{)}}{)}{{{}{{{{traversal}{.}{getCompiler}{()}}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{newLiteralNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{canFoldStandardConstructors}{(}{n}{)}}{)}{{{}{{{n}{.}{setToken}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{visitClass}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitRestParam}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{NodeUtil}{.}{getPureBooleanValue}{(}{forCondition}{)}}{==}{TernaryValue.TRUE}}{)}{{{}{{{forCondition}{.}{replaceWith}{(}{{IR}{.}{empty}{()}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{removeChild}{(}{right}{)}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{right}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeUtil}{.}{redeclareVarsInsideBranch}{(}{caseNode}{)}}{;}}{{{switchNode}{.}{removeChild}{(}{caseNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maybeBreak}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{replaceWith}{(}{{right}{.}{detach}{()}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{callTarget}{.}{getLastChild}{()}}{.}{setString}{(}{STRING_CONSTANT}{)}}{;}}{{{{firstArg}{.}{getNext}{()}}{.}{detach}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeExpression}}{{typeExpr}{=}{{{getTypeFromGetterOrSetter}{(}{member}{)}}{.}{clone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expr}{!=}{null}}{)}{{{}{{return}{{cloneTypeNodes}{?}{{expr}{.}{clone}{()}}{:}{expr}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{foundObj}{.}{isGeneric}{()}}{)}{{{}{{{foundType}{=}{{foundObj}{.}{getRawType}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ImmutableMap}}{<}{{String}}{,}{{JSType}}{>}}{typeVars}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{!=}{null}}{&&}{{obj}{.}{isGeneric}{()}}}{)}{{{}{{return}{{obj}{.}{instantiateGenericsWithUnknown}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{foundType}{!=}{null}}{&&}{{foundType}{.}{isGeneric}{()}}}{)}{{{}{{{foundType}{=}{{foundType}{.}{getRawType}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{PropagateConstJsdoc}}{(}{compiler}{)}}{)}}{;}}{{{{new}{{RemoveCode}}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{enableNormalize}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{extractionInfo}{.}{shouldExtract}{()}}{)}{{{}{{{doExtraction}{(}{extractionInfo}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{{getKey}{.}{getParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{logger}{.}{isLoggable}{(}{Level.FINE}{)}}{)}{{{}{{{logger}{.}{fine}{(}{{STRING_CONSTANT}{+}{callName}}{)}}{;}}{}}}}{{{inlineEmptyMethod}{(}{parent}{,}{callNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{validateAstChangeMarking}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Definition}}{def}}{:}{definitionsGatherer.definitions}{)}{{{}{{{def}{.}{remove}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{codeChanged}{)}{{{}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}{;}}{{{n}{.}{replaceWith}{(}{result}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{detachChildren}{()}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{result}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replacementNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{replacementNode}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{{return}{replacementNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{child}{,}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{precheck}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getNumRepetitions}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{Keywords}{.}{isKeyword}{(}{idToken.value}{)}}{&&}{{!}{{Keywords}{.}{isTypeScriptSpecificKeyword}{(}{idToken.value}{)}}}}{)}{{{}{{{reportError}{(}{{STRING_CONSTANT}{+}{name}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{phaseopt}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{tracker}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{phaseopt}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{optimizer}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PhaseOptimizer}}{{phaseopt}{=}{{new}{{PhaseOptimizer}}{(}{compiler}{,}{null}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{typeWithBannedProp}{.}{isSubtypeOf}{(}{foundType}{)}}{)}{{{}{{if}{(}{{matchesPrototype}{(}{typeWithBannedProp}{,}{foundType}{)}}{)}{{{}{{return}{ConformanceResult.VIOLATION}{;}}{}}}{else}{{if}{(}{reportLooseTypeViolations}{)}{{{}{{return}{ConformanceResult.POSSIBLE_VIOLATION_DUE_TO_LOOSE_TYPES}{;}}{}}}}}{}}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{modules}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{clazz}{.}{replaceChild}{(}{{clazz}{.}{getFirstChild}{()}}{,}{{{IR}{.}{empty}{()}}{.}{useSourceInfoFrom}{(}{{clazz}{.}{getFirstChild}{()}}{)}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getLineno}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{{n}{.}{setCharno}{(}{{{n}{.}{getCharno}{()}}{-}{NUMBER_CONSTANT}}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Compiler}}{compiler}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isMethodOrCtorCallThatTriggersRemoval}{(}{t}{,}{n}{,}{parent}{)}}{)}{{{}{{{replaceHighestNestedCallWithNull}{(}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{parent}{.}{getFirstChild}{()}}{==}{n}}{&&}{{isReferenceToRemovedVar}{(}{t}{,}{n}{)}}}{)}{{{}{{{replaceHighestNestedCallWithNull}{(}{parent}{,}{{parent}{.}{getParent}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setString}{(}{newName}{)}}{;}}{{{{t}{.}{getCompiler}{()}}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{{maybeRewriteClassDefinition}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{inlineFunctionsInFile}{(}{root}{,}{STRING_CONSTANT}{,}{{ImmutableSet}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{InliningMode.DIRECT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{PeepholeFoldConstantsTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{CodeReplacement}{.}{create}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{CodeReplacement}}{>}}{{replacements}{=}{{ImmutableList}{.}{of}{(}{{new}{{CodeReplacement}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setLanguage}{(}{ECMASCRIPT_NEXT}{,}{ECMASCRIPT_NEXT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{{Arrays}{.}{asList}{(}{modules}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{tightenTypeAndDontWarn}{(}{varName}{,}{expr}{,}{declType}{,}{inferredType}{,}{requiredType}{)}}}
{AST_ROOT_SC2NF{{{inlineFunctionsInFile}{(}{root}{,}{STRING_CONSTANT}{,}{{ImmutableSet}{.}{of}{(}{STRING_CONSTANT}{)}}{,}{InliningMode.DIRECT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{JSModule}}{>}}{getAllModules}{()}{{{}{{return}{modules}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{currentCompiler}{,}{currentCompiler.jsRoot}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{currentLocationAbstractionIdentifier}{=}{locationAbstractionIdentifier}}{;}}{{{testSame}{(}{SHARED_EXTERNS}{,}{js}{,}{null}{)}}{;}}{{{currentJsRoot}{=}{currentCompiler.jsRoot}}{;}}{{return}{currentAnalysis}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{TypeMismatch}}{>}}{{actual}{=}{{ImmutableList}{.}{copyOf}{(}{{compiler}{.}{getTypeMismatches}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{{registry}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{{registry}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSTypeRegistry}}{{registry}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{lastCompiler}{,}{lastCompiler.jsRoot}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{lastCompiler}{,}{lastCompiler.jsRoot}{,}{findFunction}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{lastCompiler}{,}{lastCompiler.jsRoot}{,}{findParameter}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isCompoundAssignementOp}{(}{n}{)}}{||}{{n}{.}{isInc}{()}}{||}{{n}{.}{isDec}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isCompoundAssignementOp}{(}{n}{)}}{)}{{{}{{{normalizeAssignShorthand}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{bundler}{.}{appendTo}{(}{out}{,}{input}{,}{{{input}{.}{getSourceFile}{()}}{.}{getCodeCharSource}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sourceMapOriginalSources}{.}{putIfAbsent}{(}{path}{,}{{originalSourcesLoader}{.}{apply}{(}{path}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Function}}{<}{{String}}{,}{{SourceFile}}{>}}{originalSourcesLoader}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{{Charset}{.}{forName}{(}{inputCharset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{{c}{.}{name}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{file}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{{builder}{()}}{.}{buildFromFile}{(}{fileName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{inputCharset}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{c}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{{file}{.}{toPath}{()}}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{fromFile}{(}{fileName}{,}{UTF_8}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{read}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ensureRequirementIsMutable}{()}}{;}}{{{super}{.}{addAll}{(}{values}{,}{requirement_}{)}}{;}}{{{onChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{com.google.protobuf.InvalidProtocolBufferException}}{e}}{)}{{{}{{{parsedMessage}{=}{{(}{{com.google.javascript.jscomp.ConformanceConfig}}{)}{{e}{.}{getUnfinishedMessage}{()}}}}{;}}{{throw}{e}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{maybeForceBuilderInitialization}{()}{{{}{{if}{(}{com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders}{)}{{{}{{{getRequirementFieldBuilder}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{private}{Builder}{(}{{{com.google.protobuf.GeneratedMessage.BuilderParent}}{parent}}{)}{{{}{{super}{(}{parent}{)}{;}}{{{maybeForceBuilderInitialization}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{com.google.protobuf.GeneratedMessage.BuilderParent}}{parent}}}
{AST_ROOT_SC2NF{{{}{{return}{{PARSER}{.}{parseFrom}{(}{input}{,}{extensionRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{PARSER}{.}{parseDelimitedFrom}{(}{input}{,}{extensionRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{PARSER}{.}{parseFrom}{(}{input}{,}{extensionRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineInFunction}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isAsyncFunction}{()}}{)}{{{}{{{cannotConvertYet}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{inlineFunctionsInFile}{(}{root}{,}{STRING_CONSTANT}{,}{{ImmutableSet}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{InliningMode.DIRECT}{)}}{;}}}
{AST_ROOT_SC2NF{{{declaration}{.}{isVar}{()}}{&&}{{declaredVarOrProp}{.}{isName}{()}}}}
{AST_ROOT_SC2NF{{{testGetFunctionName}{(}{{parent}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getFirstFirstChild}{()}}}{;}}{{{testGetFunctionName}{(}{{parent}{.}{getFirstChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getFirstFirstChild}{()}}}{;}}{{{testGetFunctionName}{(}{{parent}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getFirstFirstChild}{()}}}{;}}{{{testGetFunctionName}{(}{{parent}{.}{getFirstChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{parent}{=}{{parse}{(}{STRING_CONSTANT}{)}}}{;}}{{{testGetFunctionName}{(}{{parent}{.}{getFirstChild}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{sanityCheck}{!=}{null}}{)}{{{}{{{setSanityCheckState}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{sanityCheck}{.}{create}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{{{NodeUtil}{.}{verifyScopeChanges}{(}{passName}{,}{mtoc}{,}{jsRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getFirstChild}{()}}{.}{matchesQualifiedName}{(}{Es6ToEs3Converter.INHERITS}{)}}{)}{{{}{{{inheritsCalls}{.}{add}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{parent}{.}{replaceChild}{(}{node}{,}{{{Node}{.}{newNumber}{(}{NUMBER_CONSTANT}{)}}{.}{useSourceInfoIfMissingFrom}{(}{node}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{optimize}{()}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{{searchIt}{.}{currentParent}{()}}{.}{isVar}{()}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{(}{{{{declaration}{.}{getParent}{()}}{.}{isVar}{()}}{&&}{{!}{{NodeUtil}{.}{isLoopStructure}{(}{{declaration}{.}{getGrandparent}{()}}{)}}}}{)}}}
{AST_ROOT_SC2NF{{public}{HierarchicalSet}{(}{{{HierarchicalSet}}{parent}}{)}{{{}{{{{this}{.}{parent}}{=}{parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clinitsCalledAtBranch}{=}{{new}{{HierarchicalSet}}{(}{clinitsCalledAtBranch}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declType}{=}{{currentScope}{.}{getDeclaredTypeOf}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NTIScope}}{{innerScope}{=}{{currentScope}{.}{getScope}{(}{fnName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lhs}{.}{isName}{()}}{&&}{{currentScope}{.}{isConstVar}{(}{{lhs}{.}{getString}{()}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScope}{.}{hasThis}{()}}}{)}{{{}{{return}{{new}{{EnvTypePair}}{(}{inEnv}{,}{UNKNOWN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{expr}{.}{isNew}{()}}{||}{{(}{{{expr}{.}{isCall}{()}}{&&}{{currentScope}{.}{isConstructor}{()}}{&&}{{{expr}{.}{getFirstChild}{()}}{.}{isSuper}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declType}{=}{{currentScope}{.}{getDeclaredTypeOf}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declRetType}{=}{{{currentScope}{.}{getDeclaredFunctionType}{()}}{.}{getReturnType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{guardA}{.}{addGuard}{(}{accessControlsOff}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{val}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{object}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parent}{.}{getFirstChild}{()}}{==}{name}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{val}{.}{isObjectLit}{()}}{,}{val}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{object}{.}{isObjectLit}{()}}{,}{object}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{parent}{.}{getFirstChild}{()}}{==}{name}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{val}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{object}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parent}{.}{getFirstChild}{()}}{==}{name}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{getScope}{()}}{!=}{{t}{.}{getClosestHoistScope}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{public}{InlineVariablesTest}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{{Charset}{.}{forName}{(}{inputCharset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{{c}{.}{name}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{file}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{{builder}{()}}{.}{buildFromFile}{(}{fileName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{void}{reportChangeToEnclosingScope}{(}{{{Node}}{n}}{)}{{{}{{{recordChange}{(}{{getEnclosingChangeScope}{(}{n}{)}}{)}}{;}}{{{notifyChangeHandlers}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NodeUtil}{.}{precedence}{(}{{n}{.}{getToken}{()}}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{precedence}{(}{n}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{invalidatingPropRef}{=}{{!}{{maybeCandidateDefinition}{(}{t}{,}{n}{,}{parent}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{inputCharset}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{c}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{{file}{.}{toPath}{()}}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{fromFile}{(}{fileName}{,}{UTF_8}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{child.parent}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{assertTrue}{(}{{{e}{.}{getMessage}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{maybeDecl}{.}{isInitializingDeclaration}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{references}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{isDeclaration}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{deepestModule}{=}{{graph}{.}{getDeepestCommonDependencyInclusive}{(}{m}{,}{deepestModule}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NodeUtil}{.}{precedence}{(}{{n}{.}{getToken}{()}}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{collectionRoot}{.}{isScript}{()}}{||}{{collectionRoot}{.}{isRoot}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{options}{)}}{;}}{{return}{{warningsGuard}{.}{level}{(}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{changeScopeRoot}{.}{isScript}{()}}{||}{{changeScopeRoot}{.}{isFunction}{()}}}{)}}{;}}{{{recordChange}{(}{changeScopeRoot}{)}}{;}}{{{notifyChangeHandlers}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentChangeScope}{!=}{null}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{{currentChangeScope}{.}{isScript}{()}}{||}{{currentChangeScope}{.}{isFunction}{()}}}{)}}{;}}{{{recordChange}{(}{currentChangeScope}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{passes}{instanceof}{{DefaultPassConfig}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{input}{.}{isExtern}{()}}{,}{STRING_CONSTANT}{,}{{input}{.}{getName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentTracer}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentTracer}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{errorManager}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorManager}}{=}{{new}{{ThreadSafeDelegatingErrorManager}}{(}{errorManager}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{checkAndTranspileAndOptimize}{()}}{;}}{{{compiler}{.}{completeCompilation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{checkAndTranspileAndOptimize}{()}}{;}}{{{compiler}{.}{completeCompilation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{blockStack}{.}{get}{(}{i}{)}}{.}{root}}{==}{{containingScope}{.}{getRootNode}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{clone}{==}{null}}{)}{{{}{{{verifyNewNode}{(}{n}{)}}{;}}{}}}{else}{{{}{{{verifyNodeChange}{(}{passNameMsg}{,}{n}{,}{clone}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{grandparent}{==}{null}}{||}{{(}{{{!}{{isPrototypePropertyDeclaration}{(}{grandparent}{)}}}{&&}{{!}{{isClassPropertyDeclaration}{(}{{parent}{.}{getFirstChild}{()}}{,}{currentScope}{)}}}}{)}}}}
{AST_ROOT_SC2NF{{{ReferenceCollectingCallback.Reference}}{{aliasRef}{=}{{aliasRefs.references}{.}{get}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ReferenceCollectingCallback.Reference}}{ref}}}
{AST_ROOT_SC2NF{{{compiler}{.}{reportChangeToEnclosingScope}{(}{expr}{)}}{;}}}
{AST_ROOT_SC2NF{{name}{.}{equals}{(}{{node}{.}{getQualifiedName}{()}}{)}}}
{AST_ROOT_SC2NF{{{String}}{newName}}}
{AST_ROOT_SC2NF{{public}{InlineObjectLiteralsTest}{()}{{{}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Charset}}{getCharset}{()}{{{}{{return}{{Charset}{.}{forName}{(}{inputCharset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{inputCharset}{=}{{c}{.}{name}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{OnDisk}}{(}{file}{,}{originalPath}{,}{charset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{GwtIncompatible}{(}{STRING_CONSTANT}{)}}{public}{static}{{SourceFile}}{fromFile}{(}{{{String}}{fileName}}{)}{{{}{{return}{{{builder}{()}}{.}{buildFromFile}{(}{fileName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{builder}{()}}{.}{buildFromFile}{(}{file}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{qNameRoot}{!=}{null}}{&&}{{EXPORTS}{.}{equals}{(}{{qNameRoot}{.}{getQualifiedName}{()}}{)}}}{&&}{{NodeUtil}{.}{isLValue}{(}{qNameRoot}{)}}}}
{AST_ROOT_SC2NF{{{{callbackBlock}{.}{getParent}{()}}{.}{removeChild}{(}{callbackBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{{onlyExport}{.}{getParent}{()}}{.}{removeChild}{(}{onlyExport}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isPropertyTestFunction}{(}{{{Node}}{call}}{)}{{{}{{return}{{STRING_CONSTANT}{.}{equals}{(}{{{call}{.}{getFirstChild}{()}}{.}{getQualifiedName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{isInClass}{=}{{{{n}{.}{getParent}{()}}{.}{getToken}{()}}{==}{Token.CLASS_MEMBERS}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{n}{.}{getParent}{()}}{.}{removeChild}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{alreadyRemoved}{(}{n}{)}}{)}{{{}{continue;}{}}}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{{{{n}{.}{getParent}{()}}{.}{removeChild}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{defined}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{{vnode}{.}{getParent}{()}}{)}}{;}}{{{{vnode}{.}{getParent}{()}}{.}{removeChild}{(}{vnode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assignmentParent}{.}{getParent}{()}}{.}{removeChild}{(}{assignmentParent}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{parent}{!=}{null}}{&&}{{{parent}{.}{getToken}{()}}{==}{Token.ASSIGN}}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{removeChild}{(}{n}{)}}{;}}{{if}{(}{{!}{{parent}{.}{hasChildren}{()}}}{)}{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{enclosingNode}{!=}{null}}{&&}{{{enclosingNode}{.}{getToken}{()}}{!=}{Token.FUNCTION}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{name}{.}{equals}{(}{{{anc}{.}{getFirstChild}{()}}{.}{getQualifiedName}{()}}{)}}}{)}{{{}{{return}{Ref.Type.ALIASING_GET}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{block}{=}{{{t}{.}{getScope}{()}}{.}{getRootNode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{isASTNormalized}{()}}{&&}{{Token.NAME}{==}{{constructorNameNode}{.}{getToken}{()}}}}}
{AST_ROOT_SC2NF{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNamespacePlaceholder}{(}{parent}{)}}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{parent}{)}}{;}}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{Callback}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{name}{.}{equals}{(}{ARGUMENTS}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{idPrefix}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}{{{n}{.}{setString}{(}{newName}{)}}{;}}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{currentScript.isModule}{)}{{{}{{{rewriteShortObjectKey}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testWarning}{(}{js}{,}{warning}{,}{LanguageMode.ECMASCRIPT6}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{shouldRemove}{(}{nameNode}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{isInferrableConst}{(}{jsdoc}{,}{name}{,}{false}{)}}{)}{{{}{{{jsdoc}{=}{{pullJsdocTypeFromAst}{(}{compiler}{,}{jsdoc}{,}{name}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReferenceCollectingCallback}}{collector}}}
{AST_ROOT_SC2NF{{{ReferenceCollectingCallback}}{collector}}}
{AST_ROOT_SC2NF{{{ReferenceCollectingCallback}}{collector}}}
{AST_ROOT_SC2NF{{public}{void}{testNgInjectAddsInjectToClassConstructor}{(}{)}{throws}{{Exception}}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{null}{==}{str}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{str}}{=}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{quoteKeywordProperties}}{=}{options.quoteKeywordProperties}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{{options}{.}{getLanguageIn}{()}}{==}{LanguageMode.ECMASCRIPT5_STRICT}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{shouldAmbiguateProperties}{()}}{&&}{{(}{{options.propertyRenaming}{==}{PropertyRenamingPolicy.ALL_UNQUOTED}}{)}}}{)}{{{}{{{passes}{.}{add}{(}{ambiguateProperties}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{CrossModuleReferenceCollector}}{{collector}{=}{{new}{{CrossModuleReferenceCollector}}{(}{compiler}{,}{CrossModuleReferenceCollector.DO_NOTHING_BEHAVIOR}{,}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{setLanguage}{(}{ECMASCRIPT_NEXT}{,}{ECMASCRIPT_NEXT}{)}}{;}}{{{behavior}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{CompilerOptions}}{setEmitUseStrict}{(}{{boolean}{emitUseStrict}}{)}{{{}{{{{this}{.}{emitUseStrict}}{=}{emitUseStrict}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTagAsStrict}{(}{{firstOutput}{&&}{{shouldEmitUseStrict}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{{t}{=}{{new}{{NodeTraversal}}{(}{compiler}{,}{finder}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{{t}{=}{{new}{{NodeTraversal}}{(}{compiler}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{reference}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{unusedAssignment}{!=}{null}}{&&}{{!}{isRead}}}{&&}{{!}{hasErrors}}}{)}{{{}{{{checkForUnusedLocalVar}{(}{v}{,}{unusedAssignment}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{{options}{.}{getLanguageIn}{()}}{==}{ECMASCRIPT5_STRICT}}}}
{AST_ROOT_SC2NF{{{ObjectsBuilder}}{{newObjs}{=}{{new}{{ObjectsBuilder}}{(}{ResolveConflictsBy.MEET}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{RemoveSuperMethodsPassTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{while}{(}{{s.parent}{!=}{null}}{)}{{{}{{if}{(}{{isDefinedLocally}{(}{varName}{,}{false}{)}}{)}{{{}{{return}{false}{;}}{}}}}{{{s}{=}{s.parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MaxIterationsExceededException}}{e}}{)}{{{}{{{assertEquals}{(}{{e}{.}{getMessage}{()}}{,}{{STRING_CONSTANT}{+}{MAX_STEP}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{assertEquals}{(}{{e}{.}{getMessage}{()}}{,}{FixedPointGraphTraversal.NON_HALTING_ERROR_MSG}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{handleConstructorAnnotation}{(}{functionName}{,}{funNode}{,}{constructorType}{,}{parentClass}{,}{implementedIntfs}{,}{registry}{,}{builder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{options}{.}{isStrictModeInput}{()}}}}
{AST_ROOT_SC2NF{{{}{{{handleConstructorAnnotation}{(}{functionName}{,}{funNode}{,}{constructorType}{,}{parentClass}{,}{implementedIntfs}{,}{builder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{COULD_NOT_DESERIALIZE_AST}{,}{filename}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{assumeStrictThis}{()}}{||}{{{options}{.}{getLanguageIn}{()}}{==}{ECMASCRIPT5_STRICT}}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isValidQualifiedName}{(}{{compiler}{.}{getLanguageMode}{()}}{,}{name}{)}}}}
{AST_ROOT_SC2NF{{{key}{.}{isStringKey}{()}}{&&}{{!}{{key}{.}{isQuotedString}{()}}}{&&}{{NodeUtil}{.}{isValidPropertyName}{(}{{compiler}{.}{getLanguageMode}{()}}{,}{{key}{.}{getString}{()}}{)}}}}
{AST_ROOT_SC2NF{{public}{{CompilerOptions}}{setStrictModeInput}{(}{{boolean}{isStrictModeInput}}{)}{{{}{{{{this}{.}{isStrictModeInput}}{=}{isStrictModeInput}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Config.StrictMode}}{{strictMode}{=}{{{expectStrictModeInput}{()}}{?}{Config.StrictMode.STRICT}{:}{Config.StrictMode.SLOPPY}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{expectStrictModeInput}{()}}{)}{{{}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ES5_STRICT}{,}{CheckLevel.ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{InlineFunctions}}{(}{compiler}{,}{{compiler}{.}{getUniqueNameIdSupplier}{()}}{,}{options.inlineFunctions}{,}{options.inlineLocalFunctions}{,}{true}{,}{{{options}{.}{assumeStrictThis}{()}}{||}{{options}{.}{isStrictModeInput}{()}}}{,}{options.assumeClosuresOnlyCaptureReferences}{,}{options.maxFunctionSizeAfterInlining}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isValidQualifiedName}{(}{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{,}{name}{)}}}}
{AST_ROOT_SC2NF{{Pattern}{.}{compile}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isValidQualifiedName}{(}{{compiler}{.}{getLanguageMode}{()}}{,}{name}{)}}}}
{AST_ROOT_SC2NF{{{key}{.}{isStringKey}{()}}{&&}{{!}{{key}{.}{isQuotedString}{()}}}{&&}{{NodeUtil}{.}{isValidPropertyName}{(}{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{,}{{key}{.}{getString}{()}}{)}}}}
{AST_ROOT_SC2NF{{{String}}{{finalMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{message}}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{number}{+}{{(}{{unsupported}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}}{+}{{(}{{es6Modules}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}}{+}{{(}{{typeScript}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{)}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{{(}{{(}{{FeatureSet}}{)}{other}}{)}}{.}{unsupported}}{==}{unsupported}}}
{AST_ROOT_SC2NF{{{{this}{.}{number}}{>=}{other.number}}{&&}{{(}{{{this}{.}{unsupported}}{||}{{!}{other.unsupported}}}{)}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{mockToString}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{parent}{.}{replaceChild}{(}{assignNode}{,}{{{assignNode}{.}{getLastChild}{()}}{.}{detach}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{append}{(}{CHAR_CONS}{)}}{;}}}
{AST_ROOT_SC2NF{{{MemoizedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{{MemoizedScopeCreator}}{getTypedScopeCreator}{()}{{{}{{return}{typedScopeCreator}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typedScopeCreator}{=}{{new}{{MemoizedScopeCreator}}{(}{internalScopeCreator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{scopeCreator}{=}{{new}{{MemoizedScopeCreator}}{(}{{new}{{TypedScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MemoizedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{{MemoizedScopeCreator}}{{typedScopeCreator}{=}{{getTypedScopeCreator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{foundNodes}{.}{put}{(}{name}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{names}}{=}{names}}{;}}{{{foundNodes}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{inputs.length}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{externsInputs}{=}{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{externs}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{compiler}{,}{expected}{,}{error}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{RuntimeTypeCheckTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{validateEs6TypedFeature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateEs6TypedFeature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{{{validateNodeType}{(}{Token.DECLARE}{,}{n}{)}}{;}}{{{validateAmbientDeclarationHelper}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validateEs6TypedFeature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{{{validateNodeType}{(}{Token.TYPE_ALIAS}{,}{n}{)}}{;}}{{{validateChildCount}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateEs6Feature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateEs6Feature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateEs6TypedFeature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateEs6Feature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateEs6Feature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateEs6Feature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateEs6Feature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}{{{validateNodeType}{(}{Token.AWAIT}{,}{n}{)}}{;}}{{{validateWithinAsyncFunction}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateEs6Feature}{(}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{languageMode}{=}{{options}{.}{getLanguageIn}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{languageMode}}{=}{{options}{.}{getLanguageIn}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Compiler}}{{compiler}{=}{{new}{{Compiler}}{()}}}{;}}{{{compiler}{.}{setLanguageMode}{(}{acceptedLanguage}{)}}{;}}{{return}{compiler}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{options.skipNonTranspilationPasses}{)}{{{}{{{whitespaceOnlyPasses}{()}}{;}}{{if}{(}{{options}{.}{lowerFromEs6}{()}}{)}{{{}{{{transpileAndDontCheck}{()}}{;}}{}}}}{}}}{else}{{{}{{{check}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{compiler}{.}{getOptions}{()}}{.}{lowerFromEs6}{()}}}
{AST_ROOT_SC2NF{{{compiler}{.}{getOptions}{()}}{.}{lowerFromEs6}{()}}}
{AST_ROOT_SC2NF{{{Node}}{{root2}{=}{{compiler}{.}{parseSyntheticCode}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options.dartPass}{&&}{{!}{{{options}{.}{getLanguageOut}{()}}{.}{isEs6OrHigher}{()}}}}{)}{{{}{{{checks}{.}{add}{(}{dartSuperAccessorsPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options.rewritePolyfills}{=}{{flags.rewritePolyfills}{&&}{{{options}{.}{getLanguageIn}{()}}{.}{isEs6OrHigher}{()}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{replaceNode}{(}{{minCond}{.}{getPlaceholder}{()}}{,}{{minCond}{.}{getMinimized}{(}{MinimizationStyle.PREFER_UNNEGATED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{precedence}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.DESTRUCTURING}{,}{Feature.REST_PARAMETERS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}{{if}{(}{{TranspilationPasses}{.}{isScriptEs6ImplOrHigher}{(}{script}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{isScriptEs6ImplOrHigher}{(}{scriptRoot}{)}}}
{AST_ROOT_SC2NF{{isScriptEs6ImplOrHigher}{(}{singleRoot}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isScriptEs6ImplOrHigher}{(}{scriptRoot}{)}}{)}{{{}{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{callback}{)}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isScriptEs6ImplOrHigher}{(}{singleRoot}{)}}{)}{{{}{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{singleRoot}{,}{callback}{)}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{!}{forTranspileOnly}}{||}{{(}{{{{{{compiler}{.}{getOptions}{()}}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES6}{)}}{&&}{{TranspilationPasses}{.}{isScriptEs6ImplOrHigher}{(}{scriptRoot}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Node}}{singleRoot}}{:}{{root}{.}{children}{()}}{)}{{{}{{if}{(}{{TranspilationPasses}{.}{isScriptEs6ImplOrHigher}{(}{singleRoot}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{isConst}{&&}{{!}{{hasAnnotatedType}{(}{jsdoc}{)}}}{&&}{{!}{{NodeUtil}{.}{isNamespaceDecl}{(}{nameNode}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{rhs}{.}{replaceWith}{(}{{{IR}{.}{cast}{(}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{,}{{getQmarkTypeJSDoc}{()}}{)}}{.}{srcrefTree}{(}{rhs}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{ProcessEs6Modules}}{(}{this}{)}}{.}{processFile}{(}{root}{,}{forceRewrite}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{stage1Passes}{()}}{;}}{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{stage2Passes}{()}}{;}}{}}}}{{{compiler}{.}{completeCompilation}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{restoreState}{(}{serializedInputStream}{)}}{;}}{{if}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}{{{}{{{compiler}{.}{stage2Passes}{()}}{;}}{}}}}{{{compiler}{.}{completeCompilation}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{completeCompilation}{()}}{;}}}
{AST_ROOT_SC2NF{{{completeCompilation}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{{compiler}{.}{getFeatureSet}{()}}{.}{contains}{(}{feature}{)}}}{)}{{{}{{{violation}{(}{{STRING_CONSTANT}{+}{feature}}{,}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{{factory}{.}{getFeatures}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{LanguageMode}}{mode}}{:}{{LanguageMode}{.}{values}{()}}{)}{{{}{{if}{(}{{mode.featureSet}{.}{contains}{(}{feature}{)}}{)}{{{}{{return}{mode}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{require}{(}{FeatureSet.TYPESCRIPT}{)}}}{;}}{{return}{{{nextToken}{()}}{.}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.DESTRUCTURING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.DESTRUCTURING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ARRAY_PATTERN_REST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.DESTRUCTURING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.NEW_TARGET}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.EXPONENT_OP}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{{features}{.}{require}{(}{Feature.ARROW_FUNCTIONS}{)}}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ARROW_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{TokenType.STAR_STAR_EQUAL}{.}{equals}{(}{operator.type}{)}}{)}{{{}{{{features}{=}{{features}{.}{require}{(}{Feature.EXPONENT_OP}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{require}{(}{Feature.TRAILING_COMMA}{)}}}{;}}{{if}{(}{config.warnTrailingCommas}{)}{{{}{{{errorReporter}{.}{reportWarning}{(}{commaToken.location.start}{,}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.REST_PARAMETERS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.DEFAULT_PARAMETERS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.ASYNC_FUNCTIONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Keywords}{.}{isKeyword}{(}{name.value}{)}}{)}{{{}{{{features}{=}{{features}{.}{require}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expectedFeatures}{!=}{null}}{)}{{{}{{{{assertThat}{(}{result.features}{)}}{.}{isEqualTo}{(}{expectedFeatures}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expectedFeatures}{!=}{null}}{)}{{{}{{{{assertThat}{(}{result.features}{)}}{.}{isEqualTo}{(}{expectedFeatures}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.DESTRUCTURING}{,}{Feature.LET_DECLARATIONS}{)}}{;}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.CLASSES}{,}{Feature.CONST_DECLARATIONS}{)}}{;}}}
{AST_ROOT_SC2NF{{m.featureSet}{.}{contains}{(}{Feature.ASYNC_FUNCTIONS}{)}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.DESTRUCTURING}{)}}{;}}}
{AST_ROOT_SC2NF{{{expectFeatures}{(}{Feature.EXTENDED_OBJECT_LITERALS}{)}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{featureSet}{.}{toLanguageModeString}{()}}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.STRING_CONTINUATION}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{feature}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{feature}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.SETTER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.GETTER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{require}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isValidSimpleName}{(}{name}{)}}{)}{{{}{{return}{true}{;}}{}}}{else}{{{}{{return}{{{mode}{.}{contains}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}{&&}{{TokenStream}{.}{isKeyword}{(}{name}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{features}{.}{hasEs6Modules}{()}}}
{AST_ROOT_SC2NF{{{setFeatureSet}{(}{{featureSet}{.}{withoutModules}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{JSModule}}{>}}{modules}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{hasConditionalAncestor}{(}{{parent}{.}{getParent}{()}}{)}}{)}{{{}{{{info.allowMove}{=}{false}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{parse}{(}{{{String}}{js}}{)}{{{}{{return}{{parse}{(}{js}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{root}{.}{isRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPrettyPrintSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{parts}{=}{{path}{.}{split}{(}{{Pattern}{.}{quote}{(}{MODULE_SLASH}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testConstTarget}{()}{{{}{{{disableTypeCheck}{()}}{;}}{{{testErrorEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{POLYMER_INVALID_DECLARATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testEs6}{(}{{wrapInFunction}{(}{original}{)}}{,}{{wrapInFunction}{(}{expected}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testGoogScopeClassOutput}{()}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExportEs6ArrowFunction}{()}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExportConst}{()}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExportLet}{()}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISPLACED_ANNOTATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testExtractableExport4}{()}{{{}{{{testEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExtractableExport3}{()}{{{}{{{testEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6Class_testMethod}{()}{{{}{{{testEs6}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertNoWarningEs6}{(}{{{String}}{js}}{)}{{{}{{{testSameEs6}{(}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertAmbiguousEs6}{(}{{{String}}{js}}{)}{{{}{{{testSameEs6}{(}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAliasInModule}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{testSameEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{injectNamespace}{=}{false}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDuplicate_destructuring}{()}{{{}{{{testWarningEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{DUPLICATE_REQUIRE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDuplicate_shorthand}{()}{{{}{{{testWarningEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{DUPLICATE_REQUIRE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarningEs6}{(}{STRING_CONSTANT}{,}{UNUSED_LABEL}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSameEs6}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testErrorEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{ReplaceIdGenerators.CONDITIONAL_ID_GENERATOR_CALL}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testClass}{()}{{{}{{{testSameEs6}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{ReplaceIdGenerators.INVALID_GENERATOR_PARAMETER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPassModule}{()}{{{}{{{testSameEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{mode}{=}{CheckRequiresForConstructors.Mode.FULL_COMPILE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGoogModuleWithEmptyDestructuringRequire}{()}{{{}{{{testErrorEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{EXTRA_REQUIRE_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemovalMultipleAssignment3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemovalMultipleAssignment2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemoveRepeatedProperties}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRemoveUnnecessaryBodies}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testEs6}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstPropagationPrivateProperties2}{()}{{{}{{{testEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorAlias4}{()}{{{}{{{testSameEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorAlias3}{()}{{{}{{{testSameEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPathologicalCaseThatsOkAnyway}{()}{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAME_DEFINED_LATE_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNullUndefined}{()}{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}{{{assertMismatches}{(}{{Collections}{.}{<}{{TypeMismatch}}{>}{emptyList}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{,}{TYPE_MISMATCH_WARNING}{)}}{;}}{{{assertMismatches}{(}{{ImmutableList}{.}{of}{(}{{fromNatives}{(}{STRING_TYPE}{,}{NUMBER_TYPE}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{params}{+}{STRING_CONSTANT}{+}{arguments}{+}{STRING_CONSTANT}}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{fooDfn}{+}{STRING_CONSTANT}}{,}{WRONG_ARGUMENT_COUNT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{declarations}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{findNameType}{(}{STRING_CONSTANT}{,}{globalScope}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{findNameType}{(}{STRING_CONSTANT}{,}{globalScope}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testBadObjectLiteralCast1}{()}{{{}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ClosureCodingConvention.OBJECTLIT_EXPECTED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{found}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{typedefExterns}{,}{code}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{{value}{(}{STRING_CONSTANT}{)}}{)}}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCustomBanUnknownThisProp2}{()}{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCustomRestrictThrow2}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{allowSourcelessWarnings}{()}}{;}}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{EXTERNS}{+}{STRING_CONSTANT}}{,}{{code}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{code}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testConformance}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{CheckConformance.CONFORMANCE_VIOLATION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{input}{,}{input}{,}{null}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testViolationWhitelisted2}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testViolationWhitelisted1}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNotViolation2}{()}{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{NodeTraversal}}{t}}}
{AST_ROOT_SC2NF{{{Node}}{{export}{=}{{n}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testObjLit}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{assertUnreachable}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{needsTranspilationFrom}{(}{FeatureSet.ES6}{)}}{&&}{{!}{options.skipTranspilationAndCrash}}}{)}{{{}{{{checks}{.}{add}{(}{convertStaticInheritance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{report}{(}{{JSError}{.}{make}{(}{AbstractCompiler.READ_ERROR}{,}{{input}{.}{getName}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{defUse}{=}{{new}{{MustBeReachingVariableDef}}{(}{cfg}{,}{scope}{,}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{useDef}{=}{{new}{{MaybeReachingVariableUse}}{(}{cfg}{,}{scope}{,}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{liveness}{=}{{new}{{LiveVariablesAnalysis}}{(}{cfg}{,}{functionScope}{,}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LiveVariablesAnalysis}}{{liveness}{=}{{new}{{LiveVariablesAnalysis}}{(}{cfg}{,}{scope}{,}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringDefaultValsDoesntCrash}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringAssignNewVarNamesDoesntCrash}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringAssignWithoutDeclarationDoesntCrash}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDestructuringBasicAssignDoesntCrash}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayDestructuringVarAssignDoesntCrash}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayDestructuringSwapDoesntCrash}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{{GraphReachability}}{<>}}{(}{controlFlowGraph}{,}{{new}{{ReachablePredicate}}{()}}{)}}{.}{compute}{(}{{{controlFlowGraph}{.}{getEntry}{()}}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{inheritsCall}{.}{useSourceInfoIfMissingFromForTree}{(}{classNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{lp}{=}{{{scope}{.}{getRootNode}{()}}{.}{getSecondChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expected}{,}{cssNames}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expected}{,}{cssNames}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expected}{,}{cssNames}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{COULD_NOT_DESERIALIZE_AST}{,}{filename}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RuntimeTypeCheckTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{enableTypeCheck}{()}}{;}}{{{disableMultistageCompilation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArguments}{()}{{{}{{{testConsts}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{peepholePass}{.}{setRetraverseOnChange}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue}{()}{{{}{{{super}{.}{allowExternsChanges}{(}{true}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RemoveUnusedClassPropertiesTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{{{enableGatherExternProperties}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testProvideInExterns}{()}{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{runTypeCheckAfterProcessing}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{runTypeCheckAfterProcessing}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{runTypeCheckAfterProcessing}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{runTypeCheckAfterProcessing}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{runTypeCheckAfterProcessing}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{runTypeCheckAfterProcessing}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{transpileEnabled}{&&}{transpileExpected}{&&}{{!}{{compiler}{.}{hasErrors}{()}}}}{)}{{{}{{{transpileToEs5}{(}{compiler}{,}{externsRoot}{,}{mainRoot}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFilename}{()}{{{}{{return}{filename}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{J2clCheckPassTest}{()}{{{}{{super}{(}{DEFAULT_EXTERNS}{)}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableCheckAccessControls}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{enableCheckAccessControls}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{GatherRawExportsTest}{()}{{{}{{super}{(}{EXTERNS}{)}{;}}{{{super}{.}{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{runTypeCheckAfterProcessing}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{compareJsDoc}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{useGoogleCodingConvention}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{RemoveUnusedVarsTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6ONoEs6}{()}{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Es6ExternsCheckTest}{()}{{{}{{super}{(}{EXTERNS_BASE}{)}{;}}{{{allowSourcelessWarnings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{POSSIBLE_INEXISTENT_PROPERTY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{declarationCheck}{=}{{!}{sanityCheck}}}{;}}{{{this}{.}{enableCompareAsTree}{(}{false}{)}}{;}}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{super}{.}{allowExternsChanges}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{ProcessDefinesTest}{()}{{{}{{super}{(}{{DEFAULT_EXTERNS}{+}{STRING_CONSTANT}}{)}{;}}{{{allowSourcelessWarnings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{runSmartNameRemoval}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allowExternsChanges}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{allowExternsChanges}{(}{true}{)}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{code}{)}}{;}}{{{testExternChanges}{(}{code}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{this}{.}{enableCompareAsTree}{(}{false}{)}}{;}}{{{super}{.}{testExternChanges}{(}{input}{,}{expectedExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateAstChangeMarking}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{RuntimeTypeCheckTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{value}{=}{{{key}{.}{getFirstChild}{()}}{.}{detachFromParent}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{assign}{=}{{IR}{.}{assign}{(}{windowPropAccess}{,}{{{nameNode}{.}{getFirstChild}{()}}{.}{detachFromParent}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{{FeatureSet}{.}{latest}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{binaryNamespaceName}{.}{putProp}{(}{Node.ORIGINALNAME_PROP}{,}{currentScript.legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{binaryNamespaceName}{.}{putProp}{(}{Node.ORIGINALNAME_PROP}{,}{currentScript.legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNamespaceName}{.}{putProp}{(}{Node.ORIGINALNAME_PROP}{,}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{binaryNamespaceName}{.}{putProp}{(}{Node.ORIGINALNAME_PROP}{,}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{initializer}{=}{{{n}{.}{getFirstChild}{()}}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{extern}{=}{{{externs}{.}{getFirstChild}{()}}{.}{detach}{()}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{FeatureSet.ES5}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2016}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testModules}{(}{this}{,}{input}{,}{{STRING_CONSTANT}{+}{expected}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isArrayPattern}{()}}{)}{{{}{{{validateArrayPattern}{(}{Token.CATCH}{,}{caught}{)}}{;}}{}}}{else}{{{}{{{validateObjectPattern}{(}{Token.CATCH}{,}{caught}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{source}{,}{ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNotStringLiteralConstantArgument3}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNotStringLiteralConstantArgument2}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNotStringLiteralConstantArgument1}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNotConstantArgument}{()}{{{}{{{testError}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{ConstParamCheck.CONST_NOT_ASSIGNED_STRING_LITERAL_ERROR}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{shadowedVar}{!=}{null}}{&&}{{shadowedVar}{.}{isLocal}{()}}}}
{AST_ROOT_SC2NF{{{shadowedVar}{!=}{null}}{&&}{{!}{{{shadowedVar}{.}{getScope}{()}}{.}{isModuleScope}{()}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{redeclarationHandler}}{=}{{new}{{DefaultRedeclarationHandler}}{()}}}{;}}}
{AST_ROOT_SC2NF{{ScopeScanner}{(}{{{AbstractCompiler}}{compiler}}{,}{{{Scope}}{scope}}{)}{{{}{{this}{(}{compiler}{,}{SyntacticScopeCreator.DEFAULT_REDECLARATION_HANDLER}{,}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Es6SyntacticScopeCreator}{(}{{{AbstractCompiler}}{compiler}}{,}{{{ScopeFactory}}{scopeFactory}}{)}{{{}{{this}{(}{compiler}{,}{SyntacticScopeCreator.DEFAULT_REDECLARATION_HANDLER}{,}{scopeFactory}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{count}{=}{{RandomNameGenerator.FIRST_CHAR.length}{*}{{(}{{RandomNameGenerator.NONFIRST_CHAR.length}{+}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{count}{=}{{RandomNameGenerator.FIRST_CHAR.length}{*}{{(}{{RandomNameGenerator.NONFIRST_CHAR.length}{+}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{random}}{=}{random}}{;}}{{{reset}{(}{{new}{{{HashSet}}{<}{{String}}{>}}{()}}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{var}{.}{getParentNode}{()}}{.}{isVar}{()}}{&&}{{!}{{{{var}{.}{getParentNode}{()}}{.}{getParent}{()}}{.}{isForIn}{()}}}}}
{AST_ROOT_SC2NF{{{Scope}}{{scope}{=}{{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}{.}{createScope}{(}{root}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{RemoveNonDeclarations}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Assign}}{assign}}{:}{{assignsByVar}{.}{get}{(}{var}{)}}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{assign.assignNode}{)}}{;}}{{{assign}{.}{remove}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{changeProxy}}{=}{{new}{{AstChangeProxy}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{map}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{externsRoot}{!=}{null}}{&&}{{n}{==}{externsRoot}}}{)}{{{}{{{externsScope}{=}{{t}{.}{getScope}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{{FeatureSet}{.}{latest}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options.chromePass}{=}{flags.chromePass}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.chromePass}{)}{{{}{{{checks}{.}{add}{(}{chromePass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{FeatureSet.ES5}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2016}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isFunction}{()}}{)}{{{}{{{NormalizeStatements}{.}{maybeNormalizeFunctionDeclaration}{(}{n}{,}{compiler}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{maybeNormalizeFunctionDeclaration}{(}{n}{,}{compiler}{)}}{)}{{{}{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{Es6TypedToEs6Converter.CANNOT_CONVERT_BOUNDED_GENERICS}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{modules}{,}{expected}{,}{null}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{js}{,}{js}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{modules}{,}{expected}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{js}{,}{null}{,}{null}{,}{warning}{,}{description}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{js}{,}{expected}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{{(}{{String}}{)}{null}}{,}{null}{,}{ConstCheck.CONST_REASSIGNED_VALUE_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{kExterns}{+}{extraExterns}}{,}{source}{,}{null}{)}}{;}}{{{assertEquals}{(}{expected}{,}{noSideEffectCalls}{)}}{;}}{{{noSideEffectCalls}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue2508576_1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testExternFunction}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLitExtern}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testJSDocDescInExterns}{()}{{{}{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_MSG_ANNOTATION}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testEnum}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testErrorExterns}{(}{{jsdoc}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testProvideInExterns}{()}{{{}{{{allowExternsChanges}{()}}{;}}{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createModuleStar}{(}{moduleInputs}{)}}{,}{expected}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}{{{assertEquals}{(}{fieldTypes}{,}{{mapToString}{(}{{lastPass}{.}{getRenamedTypesForTesting}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{DEFAULT_EXTERNS}{+}{externs}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSkipNativeFunctionMethod}{()}{{{}{{{String}}{{js}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testSame}{(}{js}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{code}{,}{{addLibraries}{(}{code}{,}{libraries}{)}}{,}{null}{,}{warning}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testGlobalAliasWithProperties5}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{.}{test}{(}{inputs}{,}{null}{,}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{currentLocationAbstractionIdentifier}{=}{locationAbstractionIdentifier}}{;}}{{{testSame}{(}{SHARED_EXTERNS}{,}{js}{,}{null}{)}}{;}}{{{currentJsRoot}{=}{{{getLastCompiler}{()}}{.}{jsRoot}}}{;}}{{return}{currentAnalysis}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{js}{,}{null}{,}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{,}{null}{,}{message}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{js}{,}{null}{,}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{,}{null}{,}{message}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{code}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{String}}{{code}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{code}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{{{assertEquals}{(}{{ImmutableSet}{.}{copyOf}{(}{properties}{)}}{,}{{{getLastCompiler}{()}}{.}{getExternProperties}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{tester}{.}{testSame}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{js}{,}{js}{,}{null}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{ALL_NATIVE_EXTERN_TYPES}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{METHOD_DEFS}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{OBJECT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{OBJECT_EXTERNS}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{externs}{,}{source}{,}{null}{)}}{;}}{{{assertEquals}{(}{expected}{,}{found}{)}}{;}}{{{found}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setAcceptedLanguage}{(}{lang}{)}}{;}}{{{test}{(}{code}{,}{expected}{,}{null}{,}{warning}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{googModule}{,}{null}{,}{MISSING_MODULE_OR_PROVIDE}{,}{null}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testRenameWithExterns1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{js}{,}{js}{,}{null}{,}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{js}{,}{js}{,}{null}{,}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{js}{,}{js}{,}{null}{,}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{input}{,}{expected}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testRenameWithExterns2}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRenameWithExterns1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{test}{(}{externs}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{overrides}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{Node}}{(}{Token.TRUE}{)}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{ProcessDefines.UNKNOWN_DEFINE_WARNING}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{overrides}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{Node}}{(}{Token.TRUE}{)}}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{ProcessDefines.UNKNOWN_DEFINE_WARNING}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testNamespaceResetInLocalScope2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNamespaceResetInLocalScope1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNamespaceResetInGlobalScope1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{NAMESPACE_REDEFINED_WARNING}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{CompilerTestCase.ACTIVE_X_OBJECT_DEF}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{findNameType}{(}{STRING_CONSTANT}{,}{globalScope}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{CompilerTypeTestCase.DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{externs}{,}{code}{,}{code}{,}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Es6RewriteModules}{.}{isEs6ModuleRoot}{(}{root}{)}}{)}{{{}{{{moduleRewriter}{.}{processFile}{(}{root}{,}{forceRewrite}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{exportsNameNode}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{importNode}{.}{getFirstChild}{()}}{.}{isDestructuringLhs}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentScript.defaultExportRhs}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isStringKey}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{scriptRoot}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{c}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testES6AliasClassDeclarationWithoutNew}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6AliasClassDeclarationWithNew}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{{FeatureSet}{.}{latest}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isForIn}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSimpleConstAliasInCode01}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{error.node}{.}{getParent}{()}}{.}{isStringKey}{()}}{)}}{;}}{{{fix}{.}{delete}{(}{{error.node}{.}{getParent}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{regexMatcher}{.}{matches}{()}}{,}{STRING_CONSTANT}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{regexMatcher}{.}{matches}{()}}{,}{STRING_CONSTANT}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{fullNameMatcher}{.}{matches}{()}}{,}{error.description}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{name}{.}{isName}{()}}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{mayWarnAboutGlobalThis}{(}{expr}{,}{currentScope}{)}}{;}}}
{AST_ROOT_SC2NF{{{mayWarnAboutGlobalThis}{(}{expr}{,}{currentScope}{)}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{HierarchicalSet}{(}{{{{HierarchicalSet}}{<}{{T}}{>}}{parent}}{)}{{{}{{{{this}{.}{parent}}{=}{parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isObjectLit}{()}}{&&}{{{n}{.}{getParent}{()}}{.}{isArrowFunction}{()}}}{)}{{{}{{return}{true}{;}}{}}}{else}{{{}{{return}{{{precedence}{(}{n}{)}}{<}{minPrecedence}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Var}}{var}}{:}{{{computeLiveness}{(}{src}{)}}{.}{getEscapedLocals}{()}}{)}{{{}{{{assertFalse}{(}{{var.name}{.}{equals}{(}{name}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{visitCallSite}{(}{{{NodeTraversal}}{t}}{,}{{{Node}}{callNode}}{,}{{{FunctionState}}{fs}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{child}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{parent}{.}{getFirstChild}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{Node}}{>}}{{map}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{MemoizedScopeCreator}}{(}{{SyntacticScopeCreator}{.}{makeUntyped}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{MemoizedScopeCreator}}{(}{{SyntacticScopeCreator}{.}{makeUntyped}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createModuleStar}{(}{moduleInputs}{)}}{,}{{expected}{(}{expected}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{expected}{==}{null}}{)}}{;}}{{{expected}{=}{{expected}{(}{{{(}{{(}{{Sources}}{)}{part}}{)}}{.}{sources}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{{Sources}}{srcs}{(}{{{{List}}{<}{{SourceFile}}{>}}{files}}{)}{{{}{{return}{{new}{{Sources}}{(}{files}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Sources}}{srcs}{(}{{{{String}}{[]}}{srcTexts}}{)}{{{}{{return}{{new}{{Sources}}{(}{{createSources}{(}{STRING_CONSTANT}{,}{srcTexts}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{Sources}}{srcs}{(}{{{String}}{srcText}}{)}{{{}{{return}{{new}{{Sources}}{(}{{maybeCreateSources}{(}{filename}{,}{srcText}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{modules}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{modules}{,}{{expected}{(}{expected}{)}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTypeRegistry}{(}{{this}{.}{typeRegistry}}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{Es6RewriteModules}{(}{{{Compiler}}{compiler}}{)}{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{Es6RewriteModules.NAMESPACE_IMPORT_CANNOT_USE_STAR}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES7}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES6}{;}}{}}}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{if}{(}{forAnnotations}{)}{{{}{{return}{{sb}{.}{append}{(}{{this}{.}{primitiveType}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{{{type}{.}{toMaybeObjectType}{()}}{.}{getElementsType}{()}}{.}{toNonNullAnnotationString}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{getElementsType}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypeI}}{getElementsType}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{sum}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{s}{instanceof}{{TypedScope}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{curNode}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{s}{.}{isGlobal}{()}}{||}{{s}{.}{isModuleScope}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{type}{=}{Name.Type.CLASS}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{compilerOptions}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT6_TYPED}{)}}{;}}{{{compilerOptions}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{functionScope}{.}{isDeclared}{(}{name}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{current}{.}{isDeclared}{(}{oldName}{,}{false}{)}}{)}{{{}{return;}{}}}{else}{{{}{{{current}{=}{{current}{.}{getParent}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isName}{()}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{ARGUMENT_ARRAY_ALIAS}{)}}{&&}{{!}{{jsScope}{.}{isDeclared}{(}{ARGUMENT_ARRAY_ALIAS}{,}{false}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{jsScope}{.}{isDeclared}{(}{name}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{warningsGuard}}{=}{{new}{{ComposeWarningsGuard}}{(}{{new}{{SuppressDocWarningsGuard}}{(}{{{getDiagnosticGroups}{()}}{.}{getRegisteredGroups}{()}}{)}}{,}{warningsGuard}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Es6SyntacticScopeCreator}}{createInternalScopeCreator}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{,}{{new}{{PersistentScopeFactory}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{ScopeScanner}{(}{{{AbstractCompiler}}{compiler}}{,}{{{Scope}}{scope}}{)}{{{}{{this}{(}{compiler}{,}{DEFAULT_REDECLARATION_HANDLER}{,}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{ScopeScanner}}{(}{compiler}{,}{redeclarationHandler}{,}{scope}{)}}{.}{populate}{()}}{;}}}
{AST_ROOT_SC2NF{{{vars}{.}{remove}{(}{var.name}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isEnhancedFor}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{}{{{logger}{.}{warning}{(}{{STRING_CONSTANT}{+}{scopeRoot}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{static}{{CompilerPass}}{getContextualRenameInverter}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{ContextualRenameInverter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MakeDeclaredNamesUnique}{()}{{{}{{this}{(}{{new}{{ContextualRenamer}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{RenameLabels}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{this}{(}{compiler}{,}{{new}{{DefaultNameSupplier}}{()}}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{functionNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isStatement}{(}{statement}{)}}{,}{statement}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{functionBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{paramList}{.}{isParamList}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{processRequire}{(}{expr}{)}}{;}}{}}}{else}{{{}{{{Preconditions}{.}{checkState}{(}{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{markConstructorToProcess}{(}{{{Node}}{ctorNode}}{)}{{{}{{{Preconditions}{.}{checkArgument}{(}{{ctorNode}{.}{isFunction}{()}}{)}}{;}}{{{constructorsToProcess}{.}{add}{(}{ctorNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{getMaxArguments}{(}{)}{;}}}
{AST_ROOT_SC2NF{{int}{getMinArguments}{(}{)}{;}}}
{AST_ROOT_SC2NF{{index}{<}{{funType}{.}{getMaxArguments}{()}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{currentType}{.}{getMaxArguments}{()}}{<=}{{expectedType}{.}{getMaxArguments}{()}}}{)}{{{}{{return}{expectedType}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{res}{,}{{new}{{Number}}{(}{op1}{)}}{,}{o}{,}{op2}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{res}{,}{op1}{,}{o}{,}{{new}{{Number}}{(}{op2}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{members}{.}{isEmpty}{()}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nt}{.}{isGeneric}{()}}{,}{nt}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{nameNode}{.}{getParent}{()}}{.}{isVar}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{funNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{isOr}{()}}{||}{{n}{.}{isAnd}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isGetElem}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{Preconditions}{.}{checkNotNull}{(}{funType}{)}}{.}{toFunctionType}{()}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{declNode}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{lendsName}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{qnameNode}{.}{isName}{()}}{||}{{qnameNode}{.}{isGetProp}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{qnameNode}{.}{isName}{()}}{||}{{qnameNode}{.}{isGetProp}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{fnName}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{qnameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{qnameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{maybeAssign}{.}{isAssign}{()}}{)}{{{}{{{maybeAssign}{.}{putBooleanProp}{(}{Node.ANALYZED_DURING_GTI}{,}{true}{)}}{;}}{}}}{else}{{{}{{{Preconditions}{.}{checkState}{(}{{maybeAssign}{.}{isExprResult}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{currentScope}{.}{isNamespace}{(}{qname}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PropertyDef}}{{propdef}{=}{{Preconditions}{.}{checkNotNull}{(}{{getPropDefFromClass}{(}{superType}{,}{pname}{)}}{)}}}{;}}{{{inheritedPropDefs}{=}{{ImmutableSet}{.}{of}{(}{propdef}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{t}{=}{{castTypes}{.}{get}{(}{n}{)}}}{;}}{{{Preconditions}{.}{checkNotNull}{(}{t}{)}}{;}}{{return}{t}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{part}{,}{STRING_CONSTANT}{)}}{;}}{{{parts}{.}{add}{(}{part}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{name}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{passName}{.}{equals}{(}{logStats.pass}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{mode}{!=}{TracerMode.OFF}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{qualifiedName}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{lastLink.nextLink}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{token}{==}{JsDocToken.PIPE}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{token}{==}{JsDocToken.LEFT_CURLY}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{token}{==}{JsDocToken.LEFT_CURLY}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{annotation}{==}{Annotation.IMPLEMENTS}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{other}{instanceof}{{NominalType}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{getSubtypesWithProperty}{(}{{pname}{.}{getLeftmostName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{isPropDefinedOnSubtype}{(}{{pname}{.}{getLeftmostName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{nt1.rawType}{.}{equals}{(}{nt2.rawType}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{equals}{(}{other.rawType}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{inheritsFromIObjectReflexive}{()}}{&&}{{other}{.}{inheritsFromIObjectReflexive}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{other}{.}{isStructuralInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{typeMap}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}{{return}{{{this}{.}{rawType}}{.}{getCtorPropDeclaredType}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{rawType}}{.}{isFrozen}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isUninstantiatedGenericType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{types}{.}{size}{()}}{==}{{typeParams}{.}{size}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{RawNominalType}}{getRawNominalType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{{this}{.}{rawType}}{.}{isFrozen}{()}}}{)}}{;}}{{return}{{this}{.}{rawType}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{value}{.}{isInterface}{()}}{)}}{;}}{{return}{{new}{{SubtypeCache}}{(}{{{this}{.}{m}}{.}{with}{(}{key}{,}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{node}{.}{isSuper}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{(}{{scope}{instanceof}{{TypedScope}}}{)}}}{)}}{;}}{{return}{{new}{{Arguments}}{(}{scope}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{registry}{,}{null}{,}{null}{,}{isNativeType}{,}{{constructor}{.}{getTemplateTypeMap}{()}}{)}{;}}{{{Preconditions}{.}{checkNotNull}{(}{constructor}{)}}{;}}{{{{this}{.}{constructor}}{=}{constructor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{m}{==}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{line}{<}{nextLine}}{||}{{col}{<=}{nextCol}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{variableNode}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{n}{.}{getChildCount}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{isDisposalStack}{)}}{;}}{{if}{(}{{!}{{isDisposalStack}{.}{isEmpty}{()}}}{)}{{{}{{return}{{isDisposalStack}{.}{peek}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{isConstructorStack}{)}}{;}}{{if}{(}{{!}{{isDisposalStack}{.}{isEmpty}{()}}}{)}{{{}{{return}{{isConstructorStack}{.}{peek}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{checkingPolicy}{!=}{DisposalCheckingPolicy.OFF}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isStatementBlock}{(}{parent}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{ret}{.}{isReturn}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{classByAlias}{.}{containsKey}{(}{original}{)}}{)}}{;}}{{{classByAlias}{.}{put}{(}{alias}{,}{{classByAlias}{.}{get}{(}{original}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{subclassMember}{.}{isAssign}{()}}{,}{subclassMember}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{staticGetProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}{{{n}{.}{removeFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{root}{.}{isRoot}{()}}{)}}{;}}{{if}{(}{{{root}{.}{getChangeTime}{()}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isCast}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{first}{.}{getParent}{()}}{==}{{last}{.}{getParent}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getParent}{()}}{.}{isGetProp}{()}}{,}{n}{)}}{;}}{{{nodeToRename}{=}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parentNode}{.}{isNormalBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{node}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isLive}{(}{{{Var}}{v}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{v}{)}}{;}}{{return}{{liveSet}{.}{get}{(}{v.index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{other}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{other}{)}}{;}}{{{{this}{.}{liveSet}}{=}{{(}{{BitSet}}{)}{{other.liveSet}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{mode}{!=}{TypeInferenceMode.BOTH}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{subns.namespaceType}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{prop}{.}{isOptional}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{defSite}}{=}{{Preconditions}{.}{checkNotNull}{(}{defSite}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{clinitName}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{hasProcessBeenRun}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{symbolName}{,}{value}{)}{;}}{{{{this}{.}{exportPath}}{=}{{Preconditions}{.}{checkNotNull}{(}{exportPath}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{pathDefinition}{.}{isVar}{()}}{)}}{;}}{{{pathDefinition}{.}{setJSDocInfo}{(}{jsdoc}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{valueToExport}{.}{isObjectLit}{()}}{)}}{;}}{{{initializer}{=}{{createExternObjectLit}{(}{valueToExport}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{before}{.}{isExprResult}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{keyValPairs.length}{%}{NUMBER_CONSTANT}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isNamespacePlaceholder}{(}{decl}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isNamespacePlaceholder}{(}{decl}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{newModule}{==}{minimumModule}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{explicitNode}{!=}{node}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{providedModule}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isRegistered}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isCorrectRegisterFunction}{(}{{{TweakFunction}}{registerFunction}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{registerFunction}{)}}{;}}{{return}{{{this}{.}{registerFunction}}{==}{registerFunction}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{scriptNodeCount}{==}{NUMBER_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{moduleNode}{.}{isModuleBody}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{parent}{.}{isModuleBody}{()}}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{parent}{.}{isModuleBody}{()}}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{isEs6ModuleRoot}{(}{root}{)}}{,}{root}{)}}{;}}{{{clearState}{()}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{subtree}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{subtree}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}{{{visit}{(}{script}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{member}{.}{isStaticMember}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{constructor}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{object}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{frozen}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{fnNode}{.}{isFunction}{()}}{||}{{type}{.}{isFunctionType}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{registry}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{envs}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{n}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{typeMap}{.}{get}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{typeMap}{.}{size}{()}}{>=}{SIZE_THRESHOLD}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{meaning}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{n}{.}{isCall}{()}}{||}{{n}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isCall}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{NodeUtil}{.}{isAssociative}{(}{{n}{.}{getToken}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{{groupIndex}{>=}{NUMBER_CONSTANT}}{&&}{{groupIndex}{<=}{NUMBER_CONSTANT}}}{)}}{;}}{{{{this}{.}{groupIndex}}{=}{groupIndex}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isGetProp}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{typei}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{callSite}{.}{isCall}{()}}{||}{{callSite}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{callType}{==}{Token.CALL}}{||}{{callType}{==}{Token.NEW}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{{node}{.}{getParent}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{sideEffectInfo}{)}}{;}}{{{updateSideEffectsForNode}{(}{sideEffectInfo}{,}{traversal}{,}{node}{,}{enclosingFunction}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{functionInfo}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{cacheCall}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{=}{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{initialization}{.}{getGrandparent}{()}}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{value}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{varNode}{)}}{,}{varNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{scriptRoot}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{Time}{(}{{{String}}{name}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{name}{)}}{;}}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Event}{(}{{{T}}{value}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{value}{)}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{exportDefinition}{.}{hasInlinableName}{(}{{currentScript.exportsToInline}{.}{keySet}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isScript}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentScript.willCreateExportsObject}{||}{currentScript.hasCreatedExportObject}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{importNode}{.}{getFirstChild}{()}}{.}{isDestructuringLhs}{()}}{,}{importNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentScript.defaultExportRhs}{==}{null}}{,}{currentScript.defaultExportRhs}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isStringKey}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{scriptRoot}{.}{isScript}{()}}{,}{scriptRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{c}{.}{isScript}{()}}{,}{c}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{returnNode}{.}{isReturn}{()}}{,}{returnNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{containsModule}{(}{legacyNamespace}{)}}{)}}{;}}{{return}{{{scriptDescriptionsByGoogModuleNamespace}{.}{get}{(}{legacyNamespace}{)}}{.}{declareLegacyNamespace}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isInterface}{()}}{)}}{;}}{{{isStructuralInterface}{=}{flag}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{isConstructor}{()}}{||}{{isInterface}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{that}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{interfaceType}{.}{isInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{msgBuilder}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{STRING_CONSTANT}{.}{equals}{(}{projectId}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{classNode}{.}{isClass}{()}}{)}}{;}}{{return}{{{{classNode}{.}{getFirstChild}{()}}{.}{isName}{()}}{&&}{{parent}{.}{isName}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{rootNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{typeMap}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getRestFormalsType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{restFormals}{!=}{null}}{)}}{;}}{{return}{restFormals}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{propertyName}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{superSet}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{objectLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSTypeExpression}}{getTypeExprForErrorReporting}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{state}{==}{State.DURING_RESOLUTION}}{)}}{;}}{{return}{typeExpr}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{state}{!=}{State.RESOLVED}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{state}{==}{State.RESOLVED}}{)}}{;}}{{return}{type}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{typeExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{renameStrategy}{==}{RenameStrategy.MAPPED}}{)}}{;}}{{return}{{new}{{MappedNameSupplier}}{(}{mappings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{grandparent}{.}{isLabel}{()}}{)}}{;}}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{functionBody}{.}{getParent}{()}}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isLabel}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isFunction}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{Iterables}{.}{isEmpty}{(}{options}{)}}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{oldName}{.}{equals}{(}{p.oldName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{String}}{>}}{getRenamingMap}{()}{{{}{{{Preconditions}{.}{checkNotNull}{(}{renamingMap}{)}}{;}}{{return}{renamingMap}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{refNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{invalidatingPropRef}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{propName}{)}}{;}}{{{invalidateProperty}{(}{propName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{token}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.SPREAD}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{value}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{expr}{.}{isString}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.REGEXP}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{expr}}{:}{exprs}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpressionOrEmpty}{(}{expr}{)}}{)}}{;}}{{{arraylit}{.}{addChildToBack}{(}{expr}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{target}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{arg}}{:}{args}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{arg}{)}}{)}}{;}}{{{newcall}{.}{addChildToBack}{(}{arg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{arg}}{:}{args}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{arg}{)}}{,}{arg}{)}}{;}}{{{call}{.}{addChildToBack}{(}{arg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{name}{.}{isLabelName}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.CONTINUE}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{name}{.}{isLabelName}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.BREAK}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{finallyBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{name}{.}{isEmpty}{()}}}{)}}{;}}{{return}{{Node}{.}{newString}{(}{Token.LABEL_NAME}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{,}{expr}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.EXPR_RESULT}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeExpression}{(}{expr}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.RETURN}{,}{expr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeStatementNoReturn}{(}{stmt}{)}}{)}}{;}}{{{paramList}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeStatementNoReturn}{(}{stmt}{)}}{)}}{;}}{{{block}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{)}}{;}}{{{paramList}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{stmt}}{:}{stmts}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{)}}{;}}{{{block}{.}{addChildToBack}{(}{stmt}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{)}}{;}}{{{Node}}{{block}{=}{{new}{{Node}}{(}{Token.BLOCK}{,}{stmt}{)}}}{;}}{{return}{block}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{param}{.}{isName}{()}}{||}{{param}{.}{isRest}{()}}}{)}}{;}}{{{paramList}{.}{addChildToBack}{(}{param}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{param}{.}{isName}{()}}{||}{{param}{.}{isRest}{()}}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.PARAM_LIST}{,}{param}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{NodeUtil}{.}{isVarDeclaration}{(}{node}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{IR}{.}{getprop}{(}{{IR}{.}{objectlit}{()}}{,}{{name}{.}{cloneNode}{()}}{)}}{,}{true}{)}{;}}{{{Preconditions}{.}{checkArgument}{(}{{name}{.}{isString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{)}{;}}{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isAssign}{()}}{)}}{;}}{{{assignment}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{node}{,}{inExterns}{)}{;}}{{{Preconditions}{.}{checkArgument}{(}{{NodeUtil}{.}{isFunctionExpression}{(}{node}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{)}{;}}{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isFunction}{()}}{)}}{;}}{{{function}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{lValue}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{fileName}{.}{equals}{(}{{file}{.}{getName}{()}}{)}}{)}}{;}}{{{sourceFile}{=}{file}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{parent}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{NodeUtil}{.}{isObjectLitKey}{(}{n}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{expressionRoot}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{notAlreadyOutstanding}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{Thread}{.}{currentThread}{()}}{==}{startThread}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{noCycles}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{parentClass}{.}{isInterface}{()}}{)}}{;}}{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{funNode}{,}{CONFLICTING_EXTENDED_TYPE}{,}{STRING_CONSTANT}{,}{functionName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{thisRoot}{.}{getToken}{()}}{==}{Token.BANG}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{params}{!=}{null}}{||}{{jsdoc}{!=}{null}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getFirstChild}{()}}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getFirstChild}{()}}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{e}{!=}{null}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{td}{!=}{null}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{commonTypes}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{options.sourceMapDetailLevel}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{line}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{sourceMapDetailLevel}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{getCfg}{()}}{.}{hasNode}{(}{useNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{ownerFunction}{==}{null}}{||}{{type}{==}{null}}}{)}}{;}}{{{ownerFunction}{=}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{templateType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{index}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{values}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{scope}{.}{isFunctionScope}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{o}{instanceof}{{ObjectType}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{qname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{qname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{qname}{.}{isIdentifier}{()}}{)}}{;}}{{{Property}}{{p}{=}{{getLeftmostProp}{(}{qname}{)}}}{;}}{{return}{{p}{!=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{p}{!=}{null}}{)}}{;}}{{return}{{{p}{.}{getType}{()}}{.}{getProp}{(}{{qname}{.}{getAllButLeftmost}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{{this}{.}{ns}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isLoose}{||}{other.isLoose}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{pname}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{boxedInfo.length}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{resultNominalType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{nominalType}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ObjectType}}{(}{commonTypes}{,}{{commonTypes}{.}{getObjectType}{()}}{,}{{Preconditions}{.}{checkNotNull}{(}{commonTypes.BOTTOM_PROPERTY_MAP}{)}}{,}{null}{,}{null}{,}{false}{,}{ObjectKind.UNRESTRICTED}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{reference}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{node}{.}{isName}{()}}{,}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isLive}{(}{{{Var}}{v}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{v}{)}}{;}}{{return}{{liveSet}{.}{get}{(}{v.index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{other}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{other}{)}}{;}}{{{{this}{.}{liveSet}}{=}{{(}{{BitSet}}{)}{{other.liveSet}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{first}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{ctorType}{.}{isConstructor}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isFunction}{()}}{)}}{;}}{{{parent}{.}{setJSType}{(}{varType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isGetElem}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{preservedNamespaces}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{isDefined}{(}{qnameNode}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{s}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{fnName}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{{getScopeHelper}{(}{{new}{{QualifiedName}}{(}{fnName}{)}}{)}}{!=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{qnameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isTopLevel}{()}}{)}}{;}}{{{{this}{.}{unknownTypeNames}}{=}{{ImmutableSet}{.}{copyOf}{(}{names}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{isPrototypeMethod}{()}{{{}{{{Preconditions}{.}{checkArgument}{(}{{root}{!=}{null}}{)}}{;}}{{return}{{NodeUtil}{.}{isPrototypeMethod}{(}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{declaredType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{getBody}{()}{{{}{{{Preconditions}{.}{checkArgument}{(}{{root}{.}{isFunction}{()}}{)}}{;}}{{return}{{NodeUtil}{.}{getFunctionBody}{(}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{commonTypes}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{NodeUtil}{.}{isGet}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{left}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isGetElem}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isNew}{()}}{)}}{;}}{{if}{(}{{inForcedStringContext}{(}{n}{)}}{)}{{{}{{return}{{tryFoldInForcedStringContext}{(}{n}{)}}{;}}{}}}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isAdd}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isInstanceOf}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{originalTypeofNode}{.}{isTypeOf}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ConstParamCheck}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{{{this}{.}{compiler}}{=}{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{options.propertyRenaming}{==}{PropertyRenamingPolicy.ALL_UNQUOTED}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{callbacks}{.}{isEmpty}{()}}}{)}}{;}}{{return}{{new}{{CombinedCompilerPass}}{(}{compiler}{,}{callbacks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{checks}{.}{contains}{(}{closureGoogScopeAliases}{)}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{checks}{.}{contains}{(}{checkVariableReferences}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{pass1Index}{!=}{{-}{NUMBER_CONSTANT}}}{&&}{{pass2Index}{!=}{{-}{NUMBER_CONSTANT}}}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{pass1Index}{<}{pass2Index}}{,}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{PassFactory}}{pass}}{:}{passes}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{pass}{.}{isOneTimePass}{()}}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{PassFactory}}{pass}}{:}{passes}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{pass}{.}{isOneTimePass}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{compiler}{.}{hasErrors}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parametersList}{.}{isParamList}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{usingNameNode}{.}{isName}{()}}{)}}{;}}{{return}{{referencesByNameNode}{.}{get}{(}{usingNameNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{otherLocation}{instanceof}{{VisibilityBasedEffectLocation}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{otherLocation}{instanceof}{{VisibilityBasedEffectLocation}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{isStorageNode}{(}{node}{)}}{)}}{;}}{{return}{{NodeUtil}{.}{isLValue}{(}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{isStorageNode}{(}{node}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{variableReference}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isGetProp}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{caseBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{first}{.}{getString}{()}}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{token.type}{==}{TokenType.STRING}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{config.keepGoing}{==}{Config.RunMode.KEEP_GOING}}{)}}{;}}{{{bodyNode}{=}{{IR}{.}{block}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{ret}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{work}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{isZipEntry}{(}{zipURL}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{arrowFunction}{.}{isArrowFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{templateJs}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{templateJs}}{=}{refasterJsTemplate}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{templateJs}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSModule}}{{module}{=}{{input}{.}{getModule}{()}}}{;}}{{{Preconditions}{.}{checkNotNull}{(}{module}{)}}{;}}{{{entryPointInputsPerModule}{.}{put}{(}{module}{,}{input}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isCall}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{child}{.}{getParent}{()}}{==}{n}}{)}}{;}}{{{normalizeNodeTypes}{(}{child}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{thisType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{moduleSpecifier}{.}{isString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{{ref}{.}{getTwin}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isObjKey}{||}{isQName}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{ref.node}{.}{getParent}{()}}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{child}{.}{hasOneChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{cycleCount}{!=}{maxIterations}}{,}{NON_HALTING_ERROR_MSG}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getArgIndex}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{argIndex}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{{return}{{this}{.}{argIndex}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getExpectedType}{()}{{{}{{return}{{Preconditions}{.}{checkNotNull}{(}{{this}{.}{expected}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getFoundType}{()}{{{}{{return}{{Preconditions}{.}{checkNotNull}{(}{{this}{.}{found}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getPropName}{()}{{{}{{return}{{Preconditions}{.}{checkNotNull}{(}{{this}{.}{propName}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{firstScript}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{namespace}{.}{hasExternsRoot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{namespace}{.}{hasExternsRoot}{()}}{)}}{;}}{{{{this}{.}{namespace}}{=}{namespace}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{{prevUsedRenameMap}{.}{getNewNameToOriginalNameMap}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{newName}}{==}{null}}{)}}{;}}{{{{this}{.}{newName}}{=}{newName}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{nameNode}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{n}{.}{isAnd}{()}}{||}{{n}{.}{isOr}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{replacementFnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{resultType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{objectType}{.}{isUnknownType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{errorRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{knownConstants}}{.}{isEmpty}{()}}{)}}{;}}{{{{this}{.}{knownConstants}}{=}{knownConstants}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{NodeUtil}{.}{isFunctionObjectApply}{(}{callNode}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{callSiteType}{!=}{CallSiteType.UNSUPPORTED}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{==}{DecompositionType.DECOMPOSABLE}}{)}{{{}{{return}{CallSiteType.DECOMPOSABLE_EXPRESSION}{;}}{}}}{else}{{{}{{{Preconditions}{.}{checkState}{(}{{type}{==}{DecompositionType.UNDECOMPOSABLE}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{!=}{callSiteType}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{!=}{callSiteType}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{fnRecursionName}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isDo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isVanillaFor}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isWhile}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isExprConditional}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isSimpleAssignment}{(}{n}{)}}{)}}{;}}{{return}{{{n}{.}{getFirstChild}{()}}{.}{getLastChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isSimpleAssignment}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isSwitch}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{subtree}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isTry}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{builtinObj}{=}{{Preconditions}{.}{checkNotNull}{(}{{{this}{.}{commonTypes}}{.}{getObjectType}{()}}{,}{STRING_CONSTANT}{)}}}{;}}{{{protoNT}{=}{builtinObj}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}{{{super}{.}{addProperty}{(}{pname}{,}{defSite}{,}{type}{,}{isConstant}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isClass}{()}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{name}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{{getAllPropsOfClass}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isClass}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{ancestor}{.}{isInterface}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{ancestor}{.}{isClass}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFrozen}}}{)}}{;}}{{{{this}{.}{ctorFn}}{=}{ctorFn}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isStruct}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{{isFrozen}{()}}{||}{{isClass}{()}}}{)}}{;}}{{return}{{{this}{.}{objectKind}}{.}{isStruct}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{getPrototypeObject}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFrozen}}{)}}{;}}{{return}{{this}{.}{protoObject}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{objectKind}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{commonTypes}{)}{;}}{{{{this}{.}{objs}}{=}{{Preconditions}{.}{checkNotNull}{(}{objs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{commonTypes}{)}{;}}{{{{this}{.}{objs}}{=}{{Preconditions}{.}{checkNotNull}{(}{objs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{{ImmutableSet}}{<}{{EnumType}}{>}}{getEnums}{()}{{{}{{return}{{Preconditions}{.}{checkNotNull}{(}{enums}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{{ImmutableSet}}{<}{{ObjectType}}{>}}{getObjs}{()}{{{}{{return}{{Preconditions}{.}{checkNotNull}{(}{objs}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{final}{{{Iterable}}{<}{{TypeI}}{>}}{getParameterTypes}{()}{{{}{{return}{{{Preconditions}{.}{checkNotNull}{(}{{getFunType}{()}}{)}}{.}{getParameterTypes}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getNominalTypeIfSingletonObj}{()}}{.}{isClassy}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getObjTypeIfSingletonObj}{()}}{.}{getPropertyDefSite}{(}{propertyName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getObjTypeIfSingletonObj}{()}}{.}{getOwnPropertyDefSite}{(}{propertyName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{getFunTypeIfSingletonObj}{()}}{.}{getReturnType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{this}{.}{getFunTypeIfSingletonObj}{()}}{.}{getMinArity}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{getFunTypeIfSingletonObj}{()}}{.}{getThisType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}{{return}{{{{getFunTypeIfSingletonObj}{()}}{.}{getInstanceTypeOfCtor}{()}}{!=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isFunctionType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{{getObjs}{()}}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{type}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{arrayType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{getObjs}{()}}{.}{isEmpty}{()}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{{getEnums}{()}}{.}{isEmpty}{()}}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{areSubtypes}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{{getObjs}{()}}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{JSType}{(}{{{JSTypes}}{commonTypes}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{commonTypes}{)}}{;}}{{{{this}{.}{commonTypes}}{=}{commonTypes}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{newExpr}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{newExpr}{.}{isNew}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{NodeUtil}{.}{isCallOrNew}{(}{call}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{function}{.}{isFunction}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{value}{.}{getParent}{()}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{DefinitionUseSiteFinder}{.}{isCallOrNewSite}{(}{site}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{==}{LifeCycleStage.NORMALIZED}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{isIdentifier}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{isIdentifier}{()}}}{)}}{;}}{{return}{{new}{{QualifiedName}}{(}{{parts}{.}{subList}{(}{NUMBER_CONSTANT}{,}{{parts}{.}{size}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{fnNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{unsafe}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{NodeUtil}{.}{isFunctionObjectApply}{(}{callNode}{)}}}{)}}{;}}{{{argMap}{.}{put}{(}{THIS_MARKER}{,}{{NodeUtil}{.}{newUndefinedNode}{(}{callNode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{lValue}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{setIn}{(}{{{L}}{in}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{in}{)}}{;}}{{{{this}{.}{in}}{=}{in}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{outBefore}{.}{size}{()}}{==}{{state.out}{.}{size}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{setOut}{(}{{{L}}{out}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{out}{)}}{;}}{{{{this}{.}{out}}{=}{out}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{setIn}{(}{{{L}}{in}}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{in}{)}}{;}}{{{{this}{.}{in}}{=}{in}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{dep}{)}}{;}}{{{Preconditions}{.}{checkState}{(}{{dep}{!=}{this}}{,}{STRING_CONSTANT}{,}{this}{)}}{;}}{{{deps}{.}{add}{(}{dep}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{inputs}{.}{contains}{(}{other}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isSwitch}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{allCatchNodes}{.}{hasOneChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{type}{instanceof}{{TypeDeclarationNode}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{reader}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{whitelist}{)}}{;}}{{{{this}{.}{whitelist}}{=}{{normalizeWhitelist}{(}{whitelist}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{JSTypeExpression}}{getTypeExprForErrorReporting}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{state}}{==}{State.DURING_RESOLUTION}}{)}}{;}}{{return}{typeExpr}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{state}}{!=}{State.RESOLVED}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getPropType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{state}}{==}{State.RESOLVED}}{)}}{;}}{{return}{enumPropType}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getEnumeratedType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{state}}{==}{State.RESOLVED}}{)}}{;}}{{return}{declaredType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{typeExpr}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isVarBlock}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isReturnExpressBlock}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isFoldableExpressBlock}{(}{n}{)}}{)}}{;}}{{return}{{n}{.}{getFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isNot}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{objLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{declaration}{.}{isName}{()}}{||}{{declaration}{.}{isStringKey}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isCallOrNew}{(}{call}{)}}{)}}{;}}{{return}{{getNthSibling}{(}{{call}{.}{getSecondChild}{()}}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}{{return}{{getNthSibling}{(}{{{function}{.}{getSecondChild}{()}}{.}{getFirstChild}{()}}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{fnNode}{.}{isFunction}{()}}{)}}{;}}{{return}{{fnNode}{.}{getSecondChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isNormalBlock}{()}}{)}}{;}}{{return}{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isTry}{()}}{)}}{;}}{{return}{{n}{.}{getSecondChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isTry}{()}}{)}}{;}}{{return}{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{NodeUtil}{.}{isObjectDefinePropertiesDefinition}{(}{definePropertiesCall}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isLValue}{(}{n}{)}}{)}}{;}}{{{lhsNodes}{.}{add}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{function}{.}{isFunction}{()}}{)}}{;}}{{return}{{isNameReferenced}{(}{{function}{.}{getLastChild}{()}}{,}{STRING_CONSTANT}{,}{MATCH_NOT_THIS_BINDING}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{fn}{.}{isFunction}{()}}{,}{fn}{)}}{;}}{{return}{{fn}{.}{getLastChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{tryNode}{.}{isTry}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{objlit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{isObjectLit}{()}}{||}{{n}{.}{isClassMembers}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{isNew}{()}}{,}{n}{)}}{;}}{{return}{{n}{.}{isOnlyModifiesThisCall}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{isCall}{()}}{,}{n}{)}}{;}}{{return}{{{(}{{{n}{.}{getSideEffectFlags}{()}}{&}{Node.FLAG_LOCAL_RESULTS}}{)}}{>}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{node}{.}{hasTwoChildren}{()}}{,}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isClass}{()}}{)}}{;}}{{return}{{n}{.}{getLastChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{isFunction}{()}}{||}{{n}{.}{isClass}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{isFunction}{()}}{||}{{n}{.}{isClass}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{descriptor}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isAssignmentOp}{(}{assignNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isAssignmentOp}{(}{assignNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{var}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{function}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{modifyCallSites}{)}{{{}{{{Preconditions}{.}{checkNotNull}{(}{defFinder}{)}}{;}}{{{callSiteOptimizer}{=}{{new}{{CallSiteOptimizer}}{(}{compiler}{,}{defFinder}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{fn}}{==}{null}}{)}}{;}}{{{{this}{.}{fn}}{=}{fn}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{changed}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{functionState}{.}{hasExistingFunctionDefinition}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{name}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{isGet}{(}{child}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{fn}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{hasProcessBeenRun}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{definitionNodeByDefinitionSite}{.}{values}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{site}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{hasProcessBeenRun}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{colorToNodeMap}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{exitCodeValue}{=}{{Preconditions}{.}{checkNotNull}{(}{exitCode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{entryPoints}{)}}{;}}{{{{this}{.}{entryPoints}}{=}{entryPoints}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{NUMBER_CONSTANT}{==}{{Iterables}{.}{size}{(}{inputs}{)}}}{)}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{{compiler}{.}{getOptions}{()}}{.}{outputJs}}{==}{OutputJs.NORMAL}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{specs}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{zipEntryName}{.}{contains}{(}{filename}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{input}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{exitCodeReceiver}}{=}{{Preconditions}{.}{checkNotNull}{(}{newExitCodeReceiver}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{inputsSupplier}{==}{null}}{^}{{modulesSupplier}{==}{null}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentInfo}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compilerOptions}}{=}{{Preconditions}{.}{checkNotNull}{(}{compilerOptions}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{c}{.}{isScript}{()}}{)}}{;}}{{{hotSwapScript}{(}{c}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{sourceString}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{js.length}{==}{NUMBER_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{nameNode}{.}{isQualifiedName}{()}}{)}}{;}}{{return}{{{{nameNode}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{TokenStream}{.}{isJSIdentifier}{(}{tempVarName}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{newSourceInd}{<}{{sources}{.}{size}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{result}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{isNew}{()}}{||}{{n}{.}{isCall}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{==}{LifeCycleStage.NORMALIZED}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{null}{==}{{m}{.}{put}{(}{type}{,}{top}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Integer}}{{priority}{=}{{priorities}{.}{get}{(}{n}{)}}}{;}}{{{Preconditions}{.}{checkNotNull}{(}{priority}{)}}{;}}{{return}{priority}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{handler}{.}{isTry}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{cur}{.}{getParent}{()}}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{next}{.}{isCase}{()}}{)}}{;}}{{{createEdge}{(}{node}{,}{Branch.ON_FALSE}{,}{next}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{exceptionHandler}{.}{peek}{()}}{==}{parent}}{)}}{;}}{{{exceptionHandler}{.}{pop}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{aliasExpanded}{=}{{Preconditions}{.}{checkNotNull}{(}{{aliasDefinition}{.}{getQualifiedName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{aliasReference}{.}{hasChildren}{()}}}{)}}{;}}{{{aliasReference}{.}{addChildToFront}{(}{replacement}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{matches}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{,}{matches}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentStatement}{.}{isDo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{parent}{==}{{scope}{.}{getParent}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{nameNode}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{ancestors.length}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{int}{getMaskForBitIndex}{(}{{int}{bitIndex}}{)}{{{}{{{Preconditions}{.}{checkArgument}{(}{{bitIndex}{>=}{NUMBER_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{NUMBER_CONSTANT}{<}{<}{bitIndex}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{t}{.}{getScope}{()}}{.}{isFunctionBlockScope}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{edgeAnnotationStack}{,}{STRING_CONSTANT}{)}}{;}}{{{popAnnotations}{(}{edgeAnnotationStack}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{nodeAnnotationStack}{,}{STRING_CONSTANT}{)}}{;}}{{{popAnnotations}{(}{nodeAnnotationStack}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{call}{.}{isCall}{()}}{)}}{;}}{{{call}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{return}{call}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isCall}{()}}{)}}{;}}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{parent}{,}{GOOG_CLASS_DESCRIPTOR_NOT_VALID}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{call}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isVar}{()}}{)}}{;}}{{{parent}{.}{removeChild}{(}{nameNode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{NodeUtil}{.}{createsBlockScope}{(}{root}{)}}{,}{scope}{)}}{;}}{{{symbolStack}{.}{push}{(}{{new}{{NameContext}}{(}{anonymousNode}{,}{scope}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isGeneric}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{isGeneric}{()}}{)}}{;}}{{return}{{substituteParametricGenerics}{(}{typeMap}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{String}}{typeParam}}{:}{{this}{.}{typeParameters}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{typeMap}{.}{containsKey}{(}{typeParam}{)}}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{isLoose}{()}}{||}{{f2}{.}{isLoose}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{boxedInfo.length}{==}{NUMBER_CONSTANT}}{)}}{;}}{{{f1}{.}{isSubtypeOfHelper}{(}{f2}{,}{true}{,}{subSuperMap}{,}{boxedInfo}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{f1}{.}{isLoose}{()}}{||}{{f2}{.}{isLoose}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}{{return}{{requiredFormals}{.}{size}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}{{return}{{outerVarPreconditions}{.}{get}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{isTopFunction}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getRestFormalsType}{()}{{{}{{{Preconditions}{.}{checkNotNull}{(}{restFormals}{)}}{;}}{{return}{restFormals}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isUniqueConstructor}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{commonTypes}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{o}{instanceof}{{DeferredCheck}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{pname}{.}{isIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{insideQualifiedName}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{pname}{==}{null}}{||}{{pname}{.}{isIdentifier}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{varName}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{env}{.}{putType}{(}{varName}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{pname}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{env}{.}{getType}{(}{pname}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{expr}{.}{isNew}{()}}{||}{{expr}{.}{isCall}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{callNode}{.}{isCall}{()}}{||}{{callNode}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{thisExpr}{.}{isThis}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{propAccessNode}{.}{isGetProp}{()}}{||}{{propAccessNode}{.}{isGetElem}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{getProp}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{propAccessNode}{.}{isGetProp}{()}}{||}{{propAccessNode}{.}{isGetElem}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{funType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{receiver}{==}{null}}{||}{isFwd}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{formalType}{.}{isBottom}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{call}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{logicalOp}{==}{Token.AND}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeEnv}}{{outEnv}{=}{{Preconditions}{.}{checkNotNull}{(}{{getOutEnv}{(}{dn}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{fnType}{.}{getFunType}{()}}{==}{null}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{fnType}{.}{isUnknown}{()}}{)}}{;}}{{return}{{{this}{.}{commonTypes}}{.}{qmarkFunction}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{qnameRoot}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{original}{)}}{;}}{{return}{{{original}{!=}{{this}{.}{node}}}{||}{{this}{.}{isChanged}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isNot}{()}}{)}}{;}}{{return}{{{(}{{{normalizeChildren}{(}{node}{,}{children}{)}}{[}{NUMBER_CONSTANT}{]}}{)}}{.}{change}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{{n}{.}{getParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getParent}{()}}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{dNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{dNode}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{doSanityChecks}{&&}{{sourceFile}{!=}{null}}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{sourceFile}{.}{equals}{(}{{n}{.}{getSourceFileName}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{declaration}}{==}{null}}{)}}{;}}{{{{this}{.}{declaration}}{=}{ref}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{otherScopeParent}{==}{null}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{globalScope}{==}{null}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{declNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{fn}{.}{isConstructor}{()}}{||}{{fn}{.}{isInterface}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{fn}{.}{isConstructor}{()}}{||}{{fn}{.}{isInterface}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{destructuringLhs}{.}{isDestructuringLhs}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{lhs}{.}{isName}{()}}{)}}{;}}{{{checkShortName}{(}{t}{,}{lhs}{,}{{{callNode}{.}{getLastChild}{()}}{.}{getString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{callNode}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{currentModule}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}}{)}}{;}}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{languageIn}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{languageIn}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{language}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{language}}{;}}{{{{this}{.}{languageOut}}{=}{language}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{entryPoints}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{funAstSize}{>}{NUMBER_CONSTANT}}{)}}{;}}{{{{this}{.}{maxFunctionSizeAfterInlining}}{=}{funAstSize}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{value}{instanceof}{{String}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{script}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{hasReferenceName}{()}}{)}}{;}}{{return}{{{getReferenceName}{()}}{.}{hashCode}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{{n}{.}{getParent}{()}}{.}{getFirstChild}{()}}{==}{n}}{)}}{;}}{{return}{{{{n}{.}{getParent}{()}}{.}{cloneTree}{()}}{.}{getFirstChild}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isScript}{()}}{)}{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{script}}{==}{null}}{)}}{;}}{{{{this}{.}{script}}{=}{n}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{newReachable}{.}{getAnnotation}{()}}{!=}{REACHABLE}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{source}{)}{;}}{{{Preconditions}{.}{checkNotNull}{(}{source}{)}}{;}}{{{{this}{.}{excerpt}}{=}{excerpt}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{paramType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{isAssign}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{boolean}{isASTNormalized}{()}{{{}{{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}{;}}{{return}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{compiler}{)}}{;}}{{return}{{compiler}{.}{areNodesEqualForInlining}{(}{n1}{,}{n2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{typeParameters}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{{this}{.}{nominalType}}{==}{null}}{)}}{;}}{{{{this}{.}{nominalType}}{=}{t}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{returnType}{==}{null}}{)}}{;}}{{{returnType}{=}{t}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{restFormals}{==}{null}}{)}}{;}}{{{restFormals}{=}{t}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{t}{.}{isBottom}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{FunctionTypeBuilder}{(}{{{JSTypes}}{commonTypes}}{)}{{{}{{{{this}{.}{commonTypes}}{=}{{Preconditions}{.}{checkNotNull}{(}{commonTypes}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{qName}{!=}{null}}{&&}{{ownerName}{!=}{null}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{!}{{variableName}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{inputId}{)}}{;}}{{{sourceName}{=}{{NodeUtil}{.}{getSourceName}{(}{n}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{o}{instanceof}{{Property}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{inferredType}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{registry}{,}{templateTypeMap}{)}{;}}{{{setReferencedType}{(}{{Preconditions}{.}{checkNotNull}{(}{referencedType}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{DEFAULT_EXTERNS}{.}{length}{()}}{!=}{{externs}{.}{length}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{behaviorObjLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{behaviorObjLit}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{keys}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{namedType}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{name}{)}}{;}}{{{nonNullableTypeNames}{.}{add}{(}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{source}{==}{null}}{||}{{source}{.}{isFunction}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{source}{.}{isFunction}{()}}{,}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{namesToTypes}{.}{containsKey}{(}{name}{)}}{)}}{;}}{{{register}{(}{t}{,}{name}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{,}{STRING_CONSTANT}{)}}{;}}{{{namesToTypes}{.}{put}{(}{name}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{TemplateType}}{getObjectIndexKey}{()}{{{}{{{Preconditions}{.}{checkNotNull}{(}{iObjectIndexTemplateKey}{)}}{;}}{{return}{{this}{.}{iObjectIndexTemplateKey}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{inputId}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{n}{.}{hasOneChild}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{realSource}{)}}{;}}{{{{this}{.}{realSource}}{=}{realSource}}{;}}{{{{this}{.}{reportParseErrors}}{=}{reportParseErrors}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{declaration}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isClassMembers}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{parent}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{obj}{instanceof}{{AstChange}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{functionName}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{parameterName}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{labeledVariable}{.}{isVar}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{nameProp}{=}{{Preconditions}{.}{checkNotNull}{(}{{getOrCreateProperty}{(}{n}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{blockNode}{.}{isNormalBlock}{()}}{)}}{;}}{{if}{(}{{blockNode}{.}{hasChildren}{()}}{)}{{{}{{{markAllPropsRead}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{assignedAt}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkArgument}{(}{{lhs}{.}{isQualifiedName}{()}}{)}}{;}}{{{writes}{.}{addLast}{(}{{new}{{PropertyWrite}}{(}{lhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{obj}{.}{isObjectLit}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkNotNull}{(}{internalScopeCreator}{)}}{;}}{{{internalScopeCreator}{.}{patchGlobalScope}{(}{topScope}{,}{scriptRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{defParent}{.}{isExprResult}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{use}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{t}{.}{getScopeRoot}{()}}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{callOrNew}{.}{isCall}{()}}{||}{{callOrNew}{.}{isNew}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{parts.length}{==}{NUMBER_CONSTANT}}{||}{{parts.length}{==}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{userOrderedInputs}{.}{containsAll}{(}{rootInputs}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{nameNode}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{name}{.}{isEmpty}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{!}{{current.renameMap}{.}{containsKey}{(}{name}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{fnNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{callNode}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{ORDER_CODE_REPLACEMENTS}{.}{isOrdered}{(}{replacements}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{ORDER_CODE_REPLACEMENTS}{.}{isOrdered}{(}{replacements}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{n}{.}{isFunction}{()}}{,}{n}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{this}{.}{namespaceType}}{==}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{interfaceType}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{root}{,}{changedScopeNodes}{,}{this}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{(}{markChanges}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{RenameLabels}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{this}{(}{compiler}{,}{{new}{{DefaultNameSupplier}}{()}}{,}{true}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{,}{{compiler}{.}{getChangedScopeNodesForPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{,}{{compiler}{.}{getChangedScopeNodesForPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{static}{{CompilerPass}}{getContextualRenameInverter}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{ContextualRenameInverter}}{(}{compiler}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MakeDeclaredNamesUnique}{()}{{{}{{this}{(}{{new}{{ContextualRenamer}}{()}}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprFwd}{(}{prop}{,}{recvLvalue.env}{,}{{{indexType}{.}{isBottom}{()}}{?}{UNKNOWN}{:}{indexType}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{put}{(}{typeParam}{,}{{{t}{.}{isBottom}{()}}{?}{UNKNOWN}{:}{t}}{)}}{;}}}
{AST_ROOT_SC2NF{{{pair}{=}{{analyzeExprFwd}{(}{index}{,}{pair.env}{,}{{{indexType}{.}{isBottom}{()}}{?}{UNKNOWN}{:}{indexType}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{builder}{.}{addRetType}{(}{{{actualRetType}{.}{isBottom}{()}}{?}{TOP}{:}{actualRetType}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{moduleResolutionMode}{=}{ModuleLoader.ResolutionMode.LEGACY}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6ThisWithImportModule}{()}{{{}{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{Es6CheckModule.ES6_MODULE_REFERENCES_THIS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{result}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{result}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{forAnnotations}{)}{{{}{{return}{{sb}{.}{append}{(}{{getReferenceName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{,}{removeNoOpStatements}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{,}{true}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{static}{{CompilerPass}}{getContextualRenameInverter}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{ContextualRenameInverter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MakeDeclaredNamesUnique}{()}{{{}{{this}{(}{{new}{{ContextualRenamer}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{RenameLabels}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{this}{(}{compiler}{,}{{new}{{DefaultNameSupplier}}{()}}{,}{true}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{config}{,}{errorReporter}{,}{source}{,}{offset}{,}{false}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{ParseResult}}{(}{root}{,}{comments}{,}{features}{,}{{p}{.}{getInlineSourceMap}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{objectLit}{=}{{{{n}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{MustDef}}{createEntryLattice}{()}{{{}{{return}{{new}{{MustDef}}{(}{{jsScope}{.}{getVarIterable}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{JSType}{.}{fromObjectType}{(}{{ObjectType}{.}{fromNominalType}{(}{{tmp}{.}{instantiateGenerics}{(}{typeMap}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{nominal}{==}{null}}{?}{null}{:}{{{nominal}{.}{instantiateGenerics}{(}{{{this}{.}{commonTypes}}{.}{MAP_TO_UNKNOWN}}{)}}{.}{getInstanceAsJSType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interf}{.}{inheritsFromIObjectReflexive}{()}}{)}{{{}{{{result}{.}{add}{(}{{interf}{.}{instantiateGenerics}{(}{typeMap}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{NominalType}}{interf}}{:}{{{this}{.}{rawType}}{.}{getInterfaces}{()}}{)}{{{}{{{result}{.}{add}{(}{{interf}{.}{instantiateGenerics}{(}{typeMap}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{this}{.}{rawType}}{.}{getSuperClass}{()}}{.}{instantiateGenerics}{(}{typeMap}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{handleConstructorAnnotation}{(}{functionName}{,}{funNode}{,}{constructorType}{,}{parentClass}{,}{implementedIntfs}{,}{registry}{,}{builder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{!}{{isInvalidatingType}{(}{dest}{)}}}}
{AST_ROOT_SC2NF{{{!}{{props}{.}{containsKey}{(}{propName}{)}}}{&&}{{!}{{isInvalidatingType}{(}{type}{)}}}{&&}{{NodeUtil}{.}{isImmutableValue}{(}{value}{)}}{&&}{{NodeUtil}{.}{isExecutedExactlyOnce}{(}{value}{)}}}}
{AST_ROOT_SC2NF{{{}{{{fn}{=}{{{fn}{==}{null}}{?}{null}{:}{{fn}{.}{withLoose}{()}}}}{;}}{{{props}{=}{{joinPropsLoosely}{(}{commonTypes}{,}{obj1.props}{,}{obj2.props}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{props}{=}{{joinPropsLoosely}{(}{commonTypes}{,}{obj1.props}{,}{obj2.props}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{doSlicing}{)}{{{}{{{pair.env}{=}{{envPutType}{(}{pair.env}{,}{name}{,}{{{declType}{!=}{null}}{?}{declType}{:}{UNKNOWN}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preciseType}{=}{{{declType}{==}{null}}{?}{requiredType}{:}{declType}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{result}{=}{{ft}{.}{getSuperPrototype}{()}}}{;}}{{{pair.type}{=}{{{result}{!=}{null}}{?}{result}{:}{UNDEFINED}}}{;}}{{return}{pair}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{tmp}{=}{{t}{.}{getIndexedType}{()}}}{;}}{{return}{{{tmp}{==}{null}}{?}{UNKNOWN}{:}{tmp}}{;}}{}}}}
{AST_ROOT_SC2NF{{{declRetType}{=}{{{declRetType}{==}{null}}{?}{UNKNOWN}{:}{declRetType}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{InstrumentFunctions}}{(}{compiler}{,}{functionNames}{,}{options.instrumentationTemplate}{,}{options.appNameStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{variableMap}{=}{{runVariableRenaming}{(}{compiler}{,}{prevVariableMap}{,}{externs}{,}{root}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{propertyMap}{=}{{rprop}{.}{getPropertyMap}{()}}}{;}}}
{AST_ROOT_SC2NF{{{anonymousFunctionNameMap}{=}{{naf}{.}{getFunctionMap}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleMethodMotion}}{(}{compiler}{,}{crossModuleIdGenerator}{,}{options.removeUnusedPrototypePropertiesInExterns}{,}{options.crossModuleCodeMotionNoStubMethods}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{stringMap}{=}{{pass}{.}{getStringMap}{()}}}{;}}}
{AST_ROOT_SC2NF{{{idGeneratorMap}{=}{{pass}{.}{getSerializedIdMappings}{()}}}{;}}}
{AST_ROOT_SC2NF{{{functionNames}{=}{{pass}{.}{getFunctionNames}{()}}}{;}}}
{AST_ROOT_SC2NF{{{cssNames}{=}{newCssNames}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleMethodMotion}}{(}{compiler}{,}{{new}{{CrossModuleMethodMotion.IdGenerator}}{()}}{,}{canMoveExterns}{,}{noStubs}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{{this}{.}{preserveGoogProvidesAndRequires}}{||}{{this}{.}{shouldGenerateTypedExterns}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preserveGoogProvidesAndRequires}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{Matcher}}{googModuleOrProvide}{()}{{{}{{return}{{anyOf}{(}{{functionCall}{(}{STRING_CONSTANT}{)}}{,}{{functionCall}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{parse}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{skipStringLiteralEscapeSequence}{()}}{;}}}
{AST_ROOT_SC2NF{{private}{boolean}{skipStringLiteralChar}{()}{{{}{{if}{(}{{peek}{(}{CHAR_CONS}{)}}{)}{{{}{{return}{{skipStringLiteralEscapeSequence}{()}}{;}}{}}}}{{{nextChar}{()}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{isUnknown}{()}}{||}{{(}{{{isUnknownObject}{()}}{&&}{{isLoose}{()}}}{)}}{||}{{(}{{{ft}{!=}{null}}{&&}{{ft}{.}{isTopFunction}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{{objType}{==}{null}}{||}{{types}{.}{contains}{(}{objType}{)}}}{||}{{objType}{.}{isUnknownObject}{()}}}{||}{{objType}{.}{isUnknownType}{()}}}{||}{{objType}{.}{isBottom}{()}}}}
{AST_ROOT_SC2NF{{return}{{{objType}{.}{isUnknownObject}{()}}{||}{{(}{{{{ft}{!=}{null}}{&&}{{ft}{.}{isConstructor}{()}}}{&&}{{isInvalidatingType}{(}{{ft}{.}{getInstanceType}{()}}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{{JSType}}{type}}}
{AST_ROOT_SC2NF{{boolean}{mustReplaceThisAndArguments}{()}{{{}{{return}{{thisAndArgumentsContext}{.}{isAsyncContext}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{parent}{.}{getParent}{()}}{.}{isCall}{()}}{&&}{{NodeUtil}{.}{isCallOrNewTarget}{(}{parent}{)}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{expr}{.}{isCall}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{n}{.}{isFunction}{()}}{||}{{(}{{{n}{.}{isName}{()}}{&&}{{NodeUtil}{.}{isCallOrNewTarget}{(}{n}{)}}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{analyzeCallNodeArgsFwdWhenError}{(}{call}{,}{inEnv}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{pname}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}}{;}}{{return}{{env}{.}{getType}{(}{pname}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{FunctionTypeI}}{impl}}{:}{{constructor}{.}{getSubTypes}{()}}{)}{{{}{{{list}{.}{add}{(}{{impl}{.}{getInstanceType}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{constructor}{!=}{null}}{)}{{{}{{for}{(}{{{FunctionTypeI}}{subType}}{:}{{constructor}{.}{getSubTypes}{()}}{)}{{{}{{{addRelatedInstance}{(}{subType}{,}{related}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{{this}{.}{preserveClosurePrimitives}}{||}{{this}{.}{shouldGenerateTypedExterns}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preserveClosurePrimitives}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.TEMPLATE_ARGUMENT_MISMATCH}{,}{NewTypeInference.WRONG_ARGUMENT_COUNT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{TEST_EXTERNS}{+}{externs}}{,}{STRING_CONSTANT}{,}{GlobalTypeInfo.REDECLARED_PROPERTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{TEST_EXTERNS}{+}{externs}}{,}{STRING_CONSTANT}{,}{GlobalTypeInfo.REDECLARED_PROPERTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{js}{,}{GlobalTypeInfo.CTOR_IN_DIFFERENT_SCOPE}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{js}{,}{GlobalTypeInfo.ANONYMOUS_NOMINAL_TYPE}{,}{GlobalTypeInfo.ANONYMOUS_NOMINAL_TYPE}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfo.INEXISTENT_PARAM}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{GlobalTypeInfo.WRONG_PARAMETER_COUNT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testUnknownTypeReferenceDoesntCrash}{()}{{{}{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfo.INEXISTENT_PARAM}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testVarDecls}{()}{{{}{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfo.ONE_TYPE_FOR_MANY_VARS}{)}}{;}}{{{typeCheck}{(}{STRING_CONSTANT}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}{{{typeCheck}{(}{STRING_CONSTANT}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{,}{GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{symbolTable}}{=}{{(}{{GlobalTypeInfo}}{)}{{compiler}{.}{getSymbolTable}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{{makePassFactory}{(}{STRING_CONSTANT}{,}{{compiler}{.}{getSymbolTable}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{STRING_CONSTANT}{,}{GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{compiler}{.}{getSymbolTable}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{symbolTable}{=}{compilerState.symbolTable}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{symbolTable}}{=}{compiler.symbolTable}}{;}}}
{AST_ROOT_SC2NF{{return}{{{getSymbolTable}{()}}{.}{getImplicitInterfaceUses}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{getSymbolTable}{()}}{.}{getMismatches}{()}}{;}}}
{AST_ROOT_SC2NF{{{symbolTable}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{GlobalTypeInfo.INVALID_PROP_OVERRIDE}{)}}{;}}}
{AST_ROOT_SC2NF{{{ignoreWarnings}{(}{GlobalTypeInfo.INTERFACE_METHOD_NOT_IMPLEMENTED}{,}{TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{TRAILING_COMMA_MESSAGE}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{TRAILING_COMMA_MESSAGE}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{js}{,}{warning}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{ast}}}
{AST_ROOT_SC2NF{{{features}{=}{{features}{.}{union}{(}{{factory}{.}{getFeatures}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ImmutableMap}{.}{<}{{Pattern}}{,}{{DiagnosticType}}{>}{builder}{()}}{.}{put}{(}{{Pattern}{.}{compile}{(}{STRING_CONSTANT}{)}}{,}{TRAILING_COMMA}{)}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{union}{(}{FeatureSet.TYPESCRIPT}{)}}}{;}}{{return}{{{nextToken}{()}}{.}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{,}{{getRequiresEs6Message}{(}{Feature.ARRAY_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEs6Message}{(}{Feature.DESTRUCTURING}{)}}{,}{{getRequiresEs6Message}{(}{Feature.ARRAY_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{requiresLanguageModeMessage}{(}{LanguageMode.ECMASCRIPT5}{,}{Feature.TRAILING_COMMA}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{requiresLanguageModeMessage}{(}{LanguageMode.ECMASCRIPT5}{,}{Feature.TRAILING_COMMA}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{js}{,}{warning}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{Node}}{ast}}}
{AST_ROOT_SC2NF{{{features}{=}{{factory}{.}{getFeatures}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ImmutableMap}{.}{<}{{Pattern}}{,}{{DiagnosticType}}{>}{builder}{()}}{.}{put}{(}{{Pattern}{.}{compile}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{,}{TRAILING_COMMA}{)}}}
{AST_ROOT_SC2NF{{{}{{{features}{=}{{features}{.}{with}{(}{Feature.ACCESSIBILITY_MODIFIER}{)}}}{;}}{{return}{{{nextToken}{()}}{.}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{CheckRequiresForConstructors}}{(}{compiler}{,}{CheckRequiresForConstructors.Mode.SINGLE_FILE}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckRequiresForConstructors}}{(}{compiler}{,}{CheckRequiresForConstructors.Mode.FULL_COMPILE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckRequiresForConstructors}}{(}{compiler}{,}{CheckRequiresForConstructors.Mode.SINGLE_FILE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckRequiresForConstructors}}{(}{compiler}{,}{CheckRequiresForConstructors.Mode.FULL_COMPILE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFailGoogArray}{()}{{{}{{{mode}{=}{CheckRequiresForConstructors.Mode.SINGLE_FILE}}{;}}{{{testMissingRequireStrict}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFailConstant}{()}{{{}{{{mode}{=}{CheckRequiresForConstructors.Mode.SINGLE_FILE}}{;}}{{{testMissingRequireStrict}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testMissingRequireStrict}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckRequiresForConstructors}}{(}{compiler}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{mode}{=}{CheckRequiresForConstructors.Mode.FULL_COMPILE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{ARGUMENT_ARRAY_ALIAS}{)}}{&&}{{(}{{{!}{{jsScope}{.}{isDeclaredSloppy}{(}{ARGUMENT_ARRAY_ALIAS}{,}{false}{)}}}{||}{{!}{childDeclared}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isName}{()}}{&&}{{{n}{.}{getString}{()}}{.}{equals}{(}{ARGUMENT_ARRAY_ALIAS}{)}}{&&}{{!}{{jsScope}{.}{isDeclaredSloppy}{(}{ARGUMENT_ARRAY_ALIAS}{,}{false}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{jsScope}{.}{isDeclaredSloppy}{(}{name}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fBlockScope}{.}{isDeclaredSloppy}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fBlockScope}{.}{isDeclaredSloppy}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fBlockScope}{.}{isDeclaredSloppy}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{functionBlockScope}{.}{isDeclaredSloppy}{(}{name}{,}{false}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{current}{.}{isDeclaredSloppy}{(}{oldName}{,}{false}{)}}{)}{{{}{return;}{}}}{else}{{{}{{{current}{=}{{current}{.}{getParent}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCode}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{{this}{.}{preserveGoogProvidesAndRequires}}{||}{{this}{.}{shouldGenerateTypedExterns}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{preserveGoogProvidesAndRequires}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{Matcher}}{googModuleOrProvide}{()}{{{}{{return}{{anyOf}{(}{{functionCall}{(}{STRING_CONSTANT}{)}}{,}{{functionCall}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeProcessAccessibilityModifier}{(}{member}{,}{tree.access}{)}}{;}}}
{AST_ROOT_SC2NF{{{maybeProcessAccessibilityModifier}{(}{n}{,}{tree.access}{)}}{;}}}
{AST_ROOT_SC2NF{{{maybeProcessAccessibilityModifier}{(}{member}{,}{functionTree.access}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{env}{=}{{{analyzeExprBwd}{(}{{prop}{.}{getFirstChild}{()}}{,}{env}{,}{enumeratedType}{)}}{.}{env}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprBwd}{(}{{prop}{.}{getFirstChild}{()}}{,}{env}{,}{reqPtype}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprFwd}{(}{{prop}{.}{getFirstChild}{()}}{,}{env}{,}{enumeratedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{pair}{=}{{analyzeExprFwd}{(}{{prop}{.}{getFirstChild}{()}}{,}{env}{,}{reqPtype}{,}{specPtype}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PropertyDef}}{{propdef}{=}{{checkNotNull}{(}{{getPropDefFromClass}{(}{superType}{,}{pname}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{state}{.}{getIn}{()}}{.}{reachingDef}}{.}{get}{(}{{jsScope}{.}{getVar}{(}{name}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Var}}{{dep}{=}{{jsScope}{.}{getVar}{(}{{n}{.}{getString}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{MustDef}}{createEntryLattice}{()}{{{}{{return}{{new}{{MustDef}}{(}{{returnAllVars}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{?}{extends}{{Var}}}{>}}{vars}}}
{AST_ROOT_SC2NF{{return}{{{{state}{.}{getOut}{()}}{.}{mayUseMap}}{.}{get}{(}{{jsScope}{.}{getVar}{(}{name}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Pattern}}{{pattern}{=}{{new}{{Pattern}}{()}}}{;}}{{{pattern.regExp}{=}{{RegExp}{.}{compile}{(}{string}{)}}}{;}}{{return}{pattern}{;}}{}}}}
{AST_ROOT_SC2NF{{{node}{=}{{new}{{{Node}}{<>}}{(}{e}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{{Node}}{<}{{E}}{>}}{,}{{{ImmutableSet.Builder}}{<}{{E}}{>}}{>}}{{groupsTmp}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{E}}{e}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{add}{(}{{{E}}{e}}{)}{{{}{{{union}{(}{e}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{E}}{elem}}{:}{{other}{.}{elements}{()}}{)}{{{}{{{union}{(}{elem}{,}{{other}{.}{find}{(}{elem}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedLocalConst_withES6Modules}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnusedEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedLocalConst}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnusedEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedLocalLet_withES6Modules}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnusedEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUnused}{(}{STRING_CONSTANT}{)}}{;}}{{{assertUnusedEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertUnusedEs6}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParam_withES6Modules}{()}{{{}{{{assertEarlyReferenceError}{(}{STRING_CONSTANT}{)}}{;}}{{{assertNoWarningEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6Module_destructuring}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertNoWarningEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnusedCompoundAssign_withES6Modules}{()}{{{}{{{assertNoWarningEs6}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUsedInShorthandObjLit_withES6Modules}{()}{{{}{{{enableUnusedLocalAssignmentCheck}{=}{true}}{;}}{{{assertUndeclaredEs6}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertUndeclaredEs6}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf}{()}{{{}{{{assertEarlyReferenceError}{(}{STRING_CONSTANT}{)}}{;}}{{{assertNoWarningEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testRedeclare_withES6Modules}{()}{{{}{{{assertRedeclare}{(}{STRING_CONSTANT}{)}}{;}}{{{assertNoWarningEs6}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNoWarningEs6}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{{Pattern}}{includeFilePattern}}}
{AST_ROOT_SC2NF{{{{{new}{{ProcessDefines}}{(}{compiler}{,}{{ImmutableMap}{.}{copyOf}{(}{replacements}{)}}{)}}{.}{injectNamespace}{(}{namespaceForChecks}{)}}{.}{process}{(}{externs}{,}{jsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{String}}{>}}{{defines}{=}{{{{new}{{ProcessDefines}}{(}{compiler}{,}{null}{)}}{.}{collectDefines}{(}{root}{)}}{.}{keySet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{overrideDefines}{(}{{collectDefines}{(}{root}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.ES3}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EnumSet}{.}{of}{(}{TokenType.IDENTIFIER}{,}{TokenType.TYPE}{,}{TokenType.DECLARE}{,}{TokenType.MODULE}{,}{TokenType.NAMESPACE}{)}}{.}{contains}{(}{type}{)}}}
{AST_ROOT_SC2NF{{{!}{{peekId}{()}}}{&&}{{!}{{{EnumSet}{.}{of}{(}{TokenType.VOID}{,}{TokenType.OPEN_PAREN}{,}{TokenType.OPEN_CURLY}{,}{TokenType.TYPEOF}{)}}{.}{contains}{(}{{peekType}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.BARE_MINIMUM}}{;}}{}}}}
{AST_ROOT_SC2NF{{{recordPropertyName}{(}{{{getProp}{.}{getLastChild}{()}}{.}{getString}{()}}{,}{getProp}{)}}{;}}}
{AST_ROOT_SC2NF{{{recordPropertyName}{(}{pname}{,}{qnameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Function}}{<}{{String}}{,}{{Void}}{>}}{recordPropertyName}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.ES3}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{new}{{ProcessDefines}}{(}{compiler}{,}{overrides}{,}{false}{)}}{.}{injectNamespace}{(}{namespace}{)}}{.}{process}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{{{new}{{ProcessDefines}}{(}{compiler}{,}{{ImmutableMap}{.}{copyOf}{(}{replacements}{)}}{,}{options.checksOnly}{)}}{.}{injectNamespace}{(}{namespaceForChecks}{)}}{.}{process}{(}{externs}{,}{jsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{String}}{>}}{{defines}{=}{{{{new}{{ProcessDefines}}{(}{compiler}{,}{null}{,}{false}{)}}{.}{collectDefines}{(}{externs}{,}{root}{)}}{.}{keySet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{n}{.}{isName}{()}}{)}}{&&}{{isDeclaration}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isAsyncFunction}{()}{{{}{{return}{{getBooleanProp}{(}{ASYNC_FN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isArrowFunction}{()}{{{}{{return}{{getBooleanProp}{(}{ARROW_FN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{key}{.}{isEmpty}{()}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{isInvalidatingType}{(}{recvType}{)}}{||}{{isStructuralInterfacePrototype}{(}{recv}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isInvalidatingType}{(}{type}{)}}{)}{{{}{{{invalidate}{()}}{;}}{{return}{false}{;}}{}}}}{{{rootTypesByNode}{.}{put}{(}{node}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isInvalidatingType}{(}{top}{)}}{)}{{{}{{{invalidate}{()}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{PolymerPassStaticUtils}{.}{extractProperties}{(}{behaviorValue}{,}{compiler}{)}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MemberDefinition}}{>}}{{properties}{=}{{PolymerPassStaticUtils}{.}{extractProperties}{(}{behaviorValue}{,}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{PolymerPass}}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{PolymerPass}}{(}{compiler}{)}}{.}{process}{(}{externsRoot}{,}{mainRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDef}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDef}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDef}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDef}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getProp}{(}{pname}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getPropFromClass}{(}{pname}{)}}}{;}}}
{AST_ROOT_SC2NF{{{rhs}{.}{matchesQualifiedName}{(}{ABSTRACT_METHOD_NAME}{)}}{||}{{(}{{{GlobalTypeInfo}{.}{isCtorDefinedByCall}{(}{lhs}{)}}{&&}{{!}{{isFunctionBind}{(}{{rhs}{.}{getFirstChild}{()}}{,}{inEnv}{,}{true}{)}}}}{)}}}}
{AST_ROOT_SC2NF{{(}{{{GlobalTypeInfo}{.}{isCtorDefinedByCall}{(}{nameNode}{)}}{&&}{{!}{{isFunctionBind}{(}{{rhs}{.}{getFirstChild}{()}}{,}{inEnv}{,}{true}{)}}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{maybeWin}{!=}{null}}{)}{{{}{{return}{{maybeWin}{.}{getProp}{(}{pname}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{nominalType}}{.}{getProp}{(}{pname}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{nom}{!=}{null}}{)}{{{}{{return}{{nom}{.}{getProp}{(}{pname}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{{this}{.}{rawType}}{.}{getProp}{(}{pname}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{{this}{.}{rawType}}{.}{getOwnProp}{(}{pname}{)}}}{;}}}
{AST_ROOT_SC2NF{{(}{{{{ns}{.}{hasProp}{(}{pname}{)}}{&&}{{previousPropType}{!=}{null}}}{&&}{{!}{{suppressDupPropWarning}{(}{jsdoc}{,}{propDeclType}{,}{previousPropType}{)}}}}{)}}}
{AST_ROOT_SC2NF{{GlobalTypeInfo}{.}{isCtorDefinedByCall}{(}{getProp}{)}}}
{AST_ROOT_SC2NF{{{{classType}{.}{hasCtorProp}{(}{pname}{)}}{&&}{{previousPropType}{!=}{null}}}{&&}{{!}{{suppressDupPropWarning}{(}{jsdoc}{,}{propDeclType}{,}{previousPropType}{)}}}}}
{AST_ROOT_SC2NF{{GlobalTypeInfo}{.}{isCtorDefinedByCall}{(}{nameNode}{)}}}
{AST_ROOT_SC2NF{{final}{{CompilerPass}}{{simplifier}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeSimplifyRegExp}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{ExploitAssigns}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{ReorderConstantExpression}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeCollectPropertyAssignments}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeSubstituteAlternateSyntax}}{(}{late}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{StatementFusion}}{(}{favorsCommas}{)}}{)}}}{;}}{{return}{peepholePass}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{ExploitAssigns}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{createPeepholeOptimizationsPass}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{createPeepholeOptimizationsPass}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{computeEscaped}{(}{{jsScope}{.}{getParent}{()}}{,}{jsScope}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscaped}{(}{{jsScope}{.}{getParent}{()}}{,}{jsScope}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscaped}{(}{jsScope}{,}{jsScopeChild}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{isObjLit}{)}{{{}{{{declareVarsForObjLitValues}{(}{n}{,}{alias}{,}{rvalue}{,}{varNode}{,}{{varNode}{.}{getPrevious}{()}}{,}{varParent}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{inExterns}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{isExtern}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{)}{;}}{{{checkArgument}{(}{{node}{.}{isAssign}{()}}{)}}{;}}{{{assignment}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{)}{;}}{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isClass}{()}}{)}}{;}}{{{c}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{inExterns}{)}{;}}{{{checkArgument}{(}{{node}{.}{isFunction}{()}}{)}}{;}}{{{function}{=}{node}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{inExterns}{)}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{{this}{.}{rawType}}{.}{getProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{superType}{.}{isInterface}{()}}{&&}{{current}{.}{isClass}{()}}{&&}{{!}{{isCtorDefinedByCall}{(}{current}{)}}}{&&}{{!}{{current}{.}{mayHaveProp}{(}{pname}{)}}}}}
{AST_ROOT_SC2NF{{{superClass}{.}{isAbstractClass}{()}}{&&}{{superClass}{.}{hasAbstractMethod}{(}{pname}{)}}{&&}{{!}{{rawType}{.}{isAbstractClass}{()}}}{&&}{{!}{{rawType}{.}{mayHaveOwnProp}{(}{pname}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{maybeWin}{!=}{null}}{)}{{{}{{return}{{maybeWin}{.}{getProp}{(}{pname}{,}{PropAccess.INCLUDE_STRAY_PROPS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{{isFunctionDeclaration}{(}{n}{)}}{||}{{n}{.}{isVar}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{parent}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{callNode}{,}{parent}{)}}}}
{AST_ROOT_SC2NF{{!}{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{name}{,}{{name}{.}{getParent}{()}}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{parent}{,}{grandparent}{)}}{)}{{{}{{{validProperties}{.}{add}{(}{propName}{)}}{;}}{}}}{else}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}{)}{{{}{{if}{(}{{referring}{!=}{null}}{)}{{{}{{{recordReference}{(}{referringName}{,}{name}{,}{RefType.REGULAR}{)}}{;}}{}}}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{nextParent}{==}{null}}{||}{{!}{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{nextNode}{,}{nextParent}{)}}}}{)}{{{}{{{readsState}{=}{true}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{n}{,}{{n}{.}{getParent}{()}}{)}}}
{AST_ROOT_SC2NF{{{dest}{.}{isString}{()}}{&&}{{NodeUtil}{.}{isExprAssign}{(}{grandParent}{)}}{&&}{{NodeUtil}{.}{isVarOrSimpleAssignLhs}{(}{n}{,}{parent}{)}}}}
{AST_ROOT_SC2NF{{public}{void}{testEs6EnhancedObjLiteralsPropertyShorthand}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6ClassComputedProperty}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{prop}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{public}{void}{putBooleanProp}{(}{{int}{propType}}{,}{{boolean}{value}}{)}{{{}{{{putIntProp}{(}{propType}{,}{{value}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{public}{boolean}{getBooleanProp}{(}{{int}{propType}}{)}{{{}{{return}{{{getIntProp}{(}{propType}{)}}{!=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{getType}{()}{{{}{{return}{propType}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{int}{propType}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Var}}{>}}{escaped}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{N}}{>}}{{entrySet}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{N}}{>}}{{nodes}{=}{{new}{{{HashSet}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{lValueName}{=}{{NodeUtil}{.}{getBestLValueName}{(}{{NodeUtil}{.}{getBestLValue}{(}{rValue}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{isStatementBlock}{(}{parent}{)}}{||}{{isSwitchCase}{(}{node}{)}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{computeEscapedLocals}{(}{STRING_CONSTANT}{)}}{)}}{.}{isEmpty}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCount}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateChildCount}{(}{n}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{void}{validateUnaryOp}{(}{{{Node}}{n}}{)}{{{}{{{validateChildCount}{(}{n}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{ReorderConstantExpression}}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{parent}{.}{isParamList}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{return}{{n}{.}{hasChildren}{()}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Scope}}{>}}{{allScopes}{=}{{liveness}{.}{getScopeStack}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{{statements}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{isMovableDeclaration}{()}}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{parent}{.}{isParamList}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{)}{{{}{{return}{{n}{.}{hasChildren}{()}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{thisProps}{=}{{{{!}{{thisNt}{.}{isBuiltinObject}{()}}}{&&}{{thisNt}{.}{isStructuralInterface}{()}}}{?}{{thisNt}{.}{getAllPropsOfInterface}{()}}{:}{{{this}{.}{props}}{.}{keySet}{()}}}}}
{AST_ROOT_SC2NF{{{}{{{otherPropNames}{=}{{otherNt}{.}{getAllPropsOfInterface}{()}}}{;}}{{if}{(}{{otherPropNames}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{QualifiedName}}{{setterPname}{=}{{new}{{QualifiedName}}{(}{{JSType}{.}{createSetterPropName}{(}{{pname}{.}{getLeftmostName}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{QualifiedName}}{{getterPname}{=}{{new}{{QualifiedName}}{(}{{JSType}{.}{createGetterPropName}{(}{pname}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{scopeRoots}{.}{push}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateChildCount}{(}{n}{)}}{;}}{{{validateAssignmentTarget}{(}{{n}{.}{getFirstChild}{()}}{)}}{;}}{{{validateExpression}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validateAssignmentTarget}{(}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation5}{(}{)}{throws}{{Exception}}{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation4}{(}{)}{throws}{{Exception}}{{{}{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{t}{.}{getScope}{()}}{.}{isHoistScope}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{t}{.}{getScope}{()}}{.}{isHoistScope}{()}}{)}{{{}{{{pop}{(}{blockStack}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{getScope}{()}}{.}{isHoistScope}{()}}{)}{{{}{{{blockStack}{.}{add}{(}{{new}{{BasicBlock}}{(}{parent}{,}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{getScope}{()}}{.}{isHoistScope}{()}}{)}{{{}{{{pop}{(}{blockStack}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{getScope}{()}}{.}{isHoistScope}{()}}{)}{{{}{{{blockStack}{.}{add}{(}{{new}{{BasicBlock}}{(}{parent}{,}{n}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{hoistRoot}{=}{{{t}{.}{getClosestHoistScope}{()}}{.}{getRootNode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{isVar}{()}}{&&}{{{t}{.}{getScope}{()}}{!=}{{t}{.}{getClosestHoistScope}{()}}}}{)}{{{}{{{hoistVarIfNeeded}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{scopeType}{==}{ScopeType.EXEC_CONTEXT}}{)}{{{}{{return}{{{{t}{.}{getClosestHoistScope}{()}}{.}{getRootNode}{()}}{==}{currentScript.rootNode}}{;}}{}}}{else}{{{}{{return}{{{n}{.}{getParent}{()}}{==}{currentScript.rootNode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{scopeRoot}{=}{{{t}{.}{getClosestHoistScope}{()}}{.}{getRootNode}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{n}{.}{hasChildren}{()}}}{)}{{{}{{{rewriteEs6ObjectLiteralShorthandPropertySyntax}{(}{n}{,}{compiler}{)}}{;}}{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{yield}{.}{setYieldFor}{(}{tree.isYieldFor}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isYieldFor}{()}}{)}{{{}{{{checkNotNull}{(}{first}{)}}{;}}{{{add}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isGlobal}{()}}{||}{{isModuleScope}{()}}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{this}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{ClosureOptimizePrimitives}}{(}{compiler}{,}{propertyRenamingEnabled}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DiagnosticType}}{warning}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{disableTypeCheck}{()}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.TOO_MANY_TEMPLATE_PARAMS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testWarning}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.TOO_MANY_TEMPLATE_PARAMS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{parent}{.}{isParamList}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{return}{{n}{.}{hasChildren}{()}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{hasParamWithNumberObjectLit}{(}{fnNode}{)}}{)}{{{}{{{functionState}{.}{setInline}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{moduleBody}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newChild}{.}{isNormalBlock}{()}}{)}{{{}{{{NodeUtil}{.}{tryMergeBlock}{(}{newChild}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{scopeClosureBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{callbackBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{tryMergeBlock}{(}{n}{)}}{)}{{{}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{tryMergeBlock}{(}{moduleBody}{)}}{;}}}
{AST_ROOT_SC2NF{{{Exception}}{cause}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{unexpectedException}}{)}{{{}{{{throwUnexpectedException}{(}{unexpectedException}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Exception}}{unexpectedException}}}
{AST_ROOT_SC2NF{{abstract}{void}{throwInternalError}{(}{{{String}}{msg}}{,}{{{Exception}}{cause}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{nt}{=}{{getNominalTypeIfSingletonObj}{()}}}{;}}{{return}{{{nt}{.}{isGeneric}{()}}{?}{{{nt}{.}{getRawNominalTypeAfterTypeChecking}{()}}{.}{getInstanceAsJSType}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{init}{.}{isEmpty}{()}}}{&&}{{!}{{init}{.}{isVar}{()}}}}{)}{{{}{{{init}{=}{{trySimplifyUnusedResult}{(}{init}{,}{false}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isVar}{()}}{&&}{{n}{.}{hasOneChild}{()}}{&&}{{{n}{.}{getFirstFirstChild}{()}}{!=}{null}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{globalScope}{.}{getType}{(}{typeName}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declRetType}{=}{{{{this}{.}{currentScope}}{.}{getDeclaredFunctionType}{()}}{.}{getReturnType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{declRetType}{=}{{{{this}{.}{currentScope}}{.}{getDeclaredFunctionType}{()}}{.}{getReturnType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DeclaredFunctionType}}{{dft}{=}{{{this}{.}{currentScope}}{.}{getDeclaredFunctionType}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{registry}}{.}{evaluateTypeExpression}{(}{expr}{,}{typeEnv}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{typeEnv}{.}{getType}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{mapFunctionBody}{=}{{getFunctionBody}{(}{mapFunction}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{names}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{nt}{=}{{getNominalTypeIfSingletonObj}{()}}}{;}}{{return}{{{nt}{.}{isGeneric}{()}}{?}{{{nt}{.}{getRawNominalType}{()}}{.}{getInstanceAsJSType}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TemplatizedType}}{{t}{=}{{toMaybeTemplatizedType}{()}}}{;}}{{return}{{{t}{==}{null}}{?}{null}{:}{{t}{.}{getReferencedType}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{STRING_CONSTANT}{.}{equals}{(}{name}{)}}{)}{{{}{{if}{(}{{!}{{hasThis}{()}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{getDeclaredFunctionType}{()}}{.}{getThisType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ImmutableSet}{.}{of}{(}{TokenType.IDENTIFIER}{,}{TokenType.TYPE}{,}{TokenType.DECLARE}{,}{TokenType.MODULE}{,}{TokenType.NAMESPACE}{)}}{.}{contains}{(}{type}{)}}}
{AST_ROOT_SC2NF{{{!}{{peekId}{()}}}{&&}{{!}{{{ImmutableSet}{.}{of}{(}{TokenType.VOID}{,}{TokenType.OPEN_PAREN}{,}{TokenType.OPEN_CURLY}{,}{TokenType.TYPEOF}{)}}{.}{contains}{(}{{peekType}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{compiler}{=}{{multistageSerializeAndDeserialize}{(}{compiler}{,}{inputs}{,}{recentChange}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{functionBody}{.}{removeChild}{(}{current}{)}}{;}}{{{insertAfter}{=}{{addToFront}{(}{functionBody}{,}{current}{,}{insertAfter}{)}}}{;}}{{{reportCodeChange}{(}{functionBody}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{(}{n}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{hasUnfilledTemplateKeys}{()}{{{}{{return}{{{numUnfilledTemplateKeys}{()}}{>}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setStrictModeInput}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{getObjectValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{addToDebugLog}{(}{{STRING_CONSTANT}{+}{defineName}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{addToDebugLog}{(}{{STRING_CONSTANT}{+}{var.name}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{addToDebugLog}{(}{{STRING_CONSTANT}{+}{name}{+}{STRING_CONSTANT}{+}{newName}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{t}{.}{getCompiler}{()}}{.}{addToDebugLog}{(}{{STRING_CONSTANT}{+}{{fn}{.}{getName}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{IntPropListItem}}{(}{{getType}{()}}{,}{intValue}{,}{next}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ObjectPropListItem}}{(}{{getType}{()}}{,}{objectValue}{,}{next}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testRestParam}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{var}{.}{setStaticSourceFile}{(}{{input}{.}{getSourceFile}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertPassOrder}{(}{checks}{,}{chromePass}{,}{checkJsDoc}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{EarlyEs6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{typeParameters}}}
{AST_ROOT_SC2NF{{public}{{{List}}{<}{{String}}{>}}{getTypeParameters}{()}{{{}{{return}{typeParameters}{;}}{}}}}}
{AST_ROOT_SC2NF{{{builder}{.}{addTypeParameters}{(}{{nt}{.}{getTypeParameters}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeParameters}}{=}{{ImmutableList}{.}{of}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{typeParameters}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{typeParameters}}}
{AST_ROOT_SC2NF{{public}{boolean}{isDeleted}{()}{{{}{{return}{{getBooleanProp}{(}{DELETED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{PropListItem}}{getPropListHeadForTesting}{()}{{{}{{return}{propListHead}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getSourcePosition}{()}{{{}{{return}{sourcePosition}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getCharno}{()}{{{}{{return}{{extractCharno}{(}{sourcePosition}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getLineno}{()}{{{}{{return}{{extractLineno}{(}{sourcePosition}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getLength}{()}{{{}{{return}{{this}{.}{length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasProps}{()}{{{}{{return}{{propListHead}{!=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasChildren}{()}{{{}{{return}{{first}{!=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{validateExpression}{(}{{n}{.}{getLastChild}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{super}{.}{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{parent}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{public}{void}{toStringIsEqualTo}{(}{{{String}}{typeString}}{)}{{{}{{{assertEquals}{(}{{{actual}{()}}{.}{toString}{()}}{,}{typeString}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isParamList}{()}}{)}{{{}{{{requiresTypes}{=}{true}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{passName}{.}{equals}{(}{Compiler.PARSING_PASS_NAME}{)}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{PassNames.AFTER_STANDARD_CHECKS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{passName}{.}{equals}{(}{PassNames.PARSE_INPUTS}{)}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{isVar}{()}}{&&}{{n}{.}{isName}{()}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{e}{!=}{null}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Typedef}}{{td}{=}{{Typedef}{.}{make}{(}{{jsdoc}{.}{getTypedefType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{typeEnv}{.}{getNamespaceType}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setPackageJsonEntryNames}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{CompilerOptions.PACKAGE_JSON_MAIN}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{packageJsonEntryNames}{=}{{ImmutableList}{.}{of}{(}{CompilerOptions.PACKAGE_JSON_MAIN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{passName}{.}{equals}{(}{Compiler.PARSING_PASS_NAME}{)}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{nameNode}{=}{{n}{.}{getFirstChild}{()}}}{;}}{{{renamer}{.}{addDeclaredName}{(}{{nameNode}{.}{getString}{()}}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{this}{.}{classProps}}{.}{containsKey}{(}{pname}{)}}{||}{{{this}{.}{protoProps}}{.}{containsKey}{(}{pname}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{allProps}}{=}{{{{builder}{.}{addAll}{(}{{classProps}{.}{keySet}{()}}{)}}{.}{addAll}{(}{{protoProps}{.}{keySet}{()}}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getOwnProp}{(}{pname}{,}{propAccess}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Property}}{{p}{=}{{getOwnProp}{(}{pname}{,}{propAccess}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ObjectType}}{{obj}{=}{{getObjTypeIfSingletonObj}{()}}}{;}}{{return}{{{obj}{!=}{null}}{&&}{{obj}{.}{hasOwnProperty}{(}{{new}{{QualifiedName}}{(}{propertyName}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getObjTypeIfSingletonObj}{()}}{.}{getOwnPropertyDefSite}{(}{propertyName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{classType}{.}{mayHaveOwnProp}{(}{pname}{)}}{&&}{{previousPropType}{!=}{null}}}{&&}{{!}{{suppressDupPropWarning}{(}{jsdoc}{,}{typeInJsdoc}{,}{previousPropType}{)}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{externs}}{=}{{makeCompilerInput}{(}{externs}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Var}}{var}}{:}{{scriptToVarMap}{.}{get}{(}{script}{)}}{)}{{{}{{{super}{.}{undeclareInteral}{(}{var}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{visitForOf}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{ensureLibraryInjected}{(}{{STRING_CONSTANT}{+}{{function}{.}{toLowerCase}{(}{Locale.US}{)}}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{CompilerInput}}{{newInput}{=}{{(}{{CompilerInput}}{)}{{deserialize}{(}{{serialize}{(}{input}{)}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES8}{;}}{}}}}}
{AST_ROOT_SC2NF{{{madeChange}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{preloadEs6RuntimeFunction}{(}{compiler}{,}{function}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitForOf}{(}{t}{,}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES8_MODULES}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{EarlyEs6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Util.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{this}{.}{globalScope}}{.}{getInstanceType}{(}{typeName}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{getInstanceType}{(}{typeName}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testTypeTransformationNoneType}{()}{{{}{{{inFunction}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{verify}{(}{STRING_CONSTANT}{,}{JSTypeNative.NO_TYPE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{tmpEnv}{=}{{collectTypesForFreeVarsFwd}{(}{callee}{,}{tmpEnv}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeEnv}}{{outEnv}{=}{{collectTypesForFreeVarsFwd}{(}{expr}{,}{inEnv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeEnv}}{{exitEnv}{=}{{getInEnv}{(}{{{this}{.}{cfg}}{.}{getImplicitReturn}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{export}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{controlCanExit}{(}{{n}{.}{getFirstChild}{()}}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{currentStatement}{.}{hasChildren}{()}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{loop}{==}{null}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{currentStatement}{,}{Es6ToEs3Converter.CANNOT_CONVERT_YET}{,}{STRING_CONSTANT}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{handleGet}{(}{module}{,}{scope}{,}{n}{,}{parent}{,}{prefix}{,}{Ref.Type.PROTOTYPE_GET}{)}}{;}}}
{AST_ROOT_SC2NF{{{handleGet}{(}{module}{,}{scope}{,}{n}{,}{parent}{,}{name}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{isEmpty}{()}}{&&}{{parent}{.}{isClassMembers}{()}}}{)}{{{}{{{compiler}{.}{reportChangeToEnclosingScope}{(}{n}{)}}{;}}{{{n}{.}{detach}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{RemoveEmptyClassMembers}}{(}{compiler}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{ensureLibraryInjected}{(}{{STRING_CONSTANT}{+}{{function}{.}{toLowerCase}{(}{Locale.US}{)}}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitForOf}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{builder}{.}{addRetType}{(}{{firstNonBottom}{(}{actualRetType}{,}{TOP}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{ObjectTypeI}}{interfaceType}}{:}{{funType}{.}{getAncestorInterfaces}{()}}{)}{{{}{{{interfaces}{.}{add}{(}{{interfaceType}{.}{toAnnotationString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{record}{.}{toAnnotationString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{record}{.}{toAnnotationString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{runOptimizeCalls}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedVars}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{{createEmptyPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getChildCount}{()}}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{statementNode}{=}{{{rhsNode}{.}{getParent}{()}}{.}{getParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{call}{.}{getChildCount}{()}}{!=}{NUMBER_CONSTANT}}{||}{{!}{{legacyNamespaceNode}{.}{isString}{()}}}}{)}{{{}{{{t}{.}{report}{(}{legacyNamespaceNode}{,}{INVALID_GET_NAMESPACE}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{call}{.}{getChildCount}{()}}{!=}{NUMBER_CONSTANT}}{||}{{!}{{namespaceNode}{.}{isString}{()}}}}{)}{{{}{{{t}{.}{report}{(}{namespaceNode}{,}{INVALID_FORWARD_DECLARE_NAMESPACE}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{{grandparent}{.}{isStringKey}{()}}{&&}{{NodeUtil}{.}{isObjectDefinePropertiesDefinition}{(}{{{grandparent}{.}{getParent}{()}}{.}{getParent}{()}}{)}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{{fnName}{.}{getParent}{()}}{.}{getParent}{()}}{,}{uniquifier}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{entry}{.}{isObjectLit}{()}}{)}{{{}{{{checkState}{(}{{entryName}{==}{STRING_CONSTANT}}{)}}{;}}{{{processBrowserFieldAdvancedUsage}{(}{dirName}{,}{entry}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{this}{.}{setUpRan}}{,}{STRING_CONSTANT}{)}}{;}}{{{ignoredWarnings}{.}{addAll}{(}{{Arrays}{.}{asList}{(}{warnings}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{name}{.}{equals}{(}{{n}{.}{getQualifiedName}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{expected}}{)}{{{}{{{assertTrue}{(}{{{expected}{.}{getMessage}{()}}{.}{contains}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{classNode}{=}{{{{root}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{fNode}{=}{{{{root}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{js}{=}{{renameFunctionDefinition}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{js}{=}{{renameFunctionDefinition}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{js}{=}{{renameFunctionDefinition}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{assertEquals}{(}{FixedPointGraphTraversal.NON_HALTING_ERROR_MSG}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{kExterns}{+}{extraExterns}}{,}{source}{)}}{;}}{{{assertEquals}{(}{expected}{,}{noSideEffectCalls}{)}}{;}}{{{noSideEffectCalls}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{fNode}{=}{{{root}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{noInline}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isVar}{()}}{)}{{{}{{{{parent}{.}{getParent}{()}}{.}{removeChild}{(}{parent}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{node}{.}{getParent}{()}}{.}{removeChild}{(}{node}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{line}{.}{indexOf}{(}{CHAR_CONS}{)}}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{line}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testImportedNameCollision}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{checkSynthesizedExtern}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isName}{()}}{||}{{n}{.}{isStringKey}{()}}}{,}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES8_MODULES}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isTry}{()}}{)}}{;}}{{return}{{{n}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{typeInfoCheckAndGetRoot}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{iterableType}{=}{{{iterable}{.}{getTypeI}{()}}{.}{toMaybeObjectType}{()}}}{;}}{{{typeParam}{=}{{{iterableType}{.}{getTemplateTypes}{()}}{.}{get}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{allowExternsChanges}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{tryRemovingClinit}{(}{node}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{tryRemovingClinit}{(}{node}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{tryRemovingClinit}{(}{node}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{newEmptyClinitMethod}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{getNewTypeInference}{()}}{&&}{{options}{.}{getRunOTIafterNTI}{()}}}{)}{{{}{{{addOldTypeCheckerPasses}{(}{checks}{,}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Renamer}}{{renamer}{=}{{nameStack}{.}{peek}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isFunctionBlock}{(}{{t}{.}{getScopeRoot}{()}}{)}}{)}{{{}{return;}{}}}}{{if}{(}{{!}{{t}{.}{inGlobalScope}{()}}}{)}{{{}{{{nameStack}{.}{pop}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{new}{{PureFunctionIdentifier.Driver}}{(}{compiler}{,}{null}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{PureFunctionIdentifier.DriverInJ2cl}}{(}{compiler}{,}{null}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{returnType}{!=}{null}}{)}{{{}{{{builder}{.}{append}{(}{CHAR_CONS}{)}}{;}}{{{returnType}{.}{appendTo}{(}{builder}{,}{ctx}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{options}{.}{getNewTypeInference}{()}}{&&}{{options}{.}{getRunOTIafterNTI}{()}}{&&}{{!}{options.checksOnly}}}{)}{{{}{{{addOldTypeCheckerPasses}{(}{checks}{,}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{lit}{.}{setJSType}{(}{{exportedObjectLit}{.}{getJSType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{allowExternsChanges}{()}}{;}}{{{enableTypeCheck}{()}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{{{enableParseTypeInfo}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{disableTypeCheck}{()}}{;}}{{{assertExternProperties}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{tagAsStrict}{()}{{{}{{{add}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties6}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties5}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties4}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty2}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty1}{()}{{{}{{{enableTypeCheck}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{v}{!=}{null}}{||}{{isShadowingDisallowed}{(}{name}{,}{s}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.j2clPassMode}{.}{shouldAddJ2clPasses}{()}}{)}{{{}{{{passes}{.}{add}{(}{j2clConstantHoisterPass}{)}}{;}}{{{passes}{.}{add}{(}{j2clOptBundlePass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{shouldPrintExterns}{()}{{{}{{return}{{this}{.}{printExterns}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{TypeSubject}}{(}{THROW_ASSERTION_ERROR}{,}{actualPropType}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{inGlobalScope}{()}}{&&}{{isDeclaration}{(}{n}{)}}{&&}{{!}{{n}{.}{getBooleanProp}{(}{Node.IS_NAMESPACE}{)}}}{&&}{{!}{{isWhitelisted}{(}{n}{)}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{NodeUtil}{.}{isFunctionDeclaration}{(}{{getFunctionNode}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{warning}{(}{TYPE_MISMATCH_WARNING}{)}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{disableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{enableTypeCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{curNode}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{isFunctionExpression}{=}{{{(}{{parent}{!=}{null}}{)}}{&&}{{NodeUtil}{.}{isFunctionExpression}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{s}{.}{isGlobal}{()}}{||}{{s}{.}{isModuleScope}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{child.parent}{==}{null}}{,}{STRING_CONSTANT}{,}{child}{,}{parent}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{{createEmptyPass}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testJSDocCopiedForClasses}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralMethods}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLiteralShorthand}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParameter}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition3}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition2}{()}{{{}{{{testScoped}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassDefinition1}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunction}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNonTopLevelDestructuring}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError2}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDescructuringError1}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDestructuringError}{()}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testScopedError}{(}{STRING_CONSTANT}{,}{ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testYieldExpression}{()}{{{}{{{testScoped}{(}{STRING_CONSTANT}{,}{{SCOPE_NAMESPACE}{+}{STRING_CONSTANT}}{,}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineEmptyFunction6}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{null}{,}{{Lists}{.}{newArrayList}{(}{fooFunction}{,}{barFunction}{,}{bazFunction}{)}}{,}{callback}{,}{callback}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testMakeLocalNamesUniqueWithContext10}{()}{{{}{{{{this}{.}{useDefaultRenamer}}{=}{true}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMakeLocalNamesUniqueWithContext9}{()}{{{}{{{{this}{.}{useDefaultRenamer}}{=}{true}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isBleedingFunctionName}{(}{n}{)}}{)}{{{}{{{renameBleedingFunctionName}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{newNode}{=}{{IR}{.}{assign}{(}{getprop}{,}{{rhs}{.}{cloneNode}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FunctionType}}{{getterType}{=}{{typeRegistry}{.}{createFunctionType}{(}{objectType}{)}}}{;}}{{{codingConvention}{.}{applySingletonGetterOld}{(}{functionType}{,}{getterType}{,}{objectType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{superCtor}{!=}{null}}{&&}{{subCtor}{!=}{null}}}{)}{{{}{{{codingConvention}{.}{applySubclassRelationship}{(}{superCtor}{,}{subCtor}{,}{relationship.type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mockCompiler}{.}{compile}{(}{FOO_JS}{,}{STRING_CONSTANT}{)}}{)}}{.}{thenReturn}{(}{{new}{{BaseTranspiler.CompileResult}}{(}{STRING_CONSTANT}{,}{NO_ERRORS}{,}{false}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mockCompiler}{.}{compile}{(}{FOO_JS}{,}{STRING_CONSTANT}{)}}{)}}{.}{thenReturn}{(}{{new}{{BaseTranspiler.CompileResult}}{(}{STRING_CONSTANT}{,}{NO_ERRORS}{,}{true}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{inFunction}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{replacement}{=}{{replacement}{.}{useSourceInfoIfMissingFrom}{(}{node}{)}}}{;}}{{{node}{.}{replaceWith}{(}{replacement}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{replacement}{=}{{measuredNodeReplacement}{.}{applyTo}{(}{original}{)}}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{replacement}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{removeChild}{(}{right}{)}}{;}}{{{parent}{.}{replaceChild}{(}{n}{,}{right}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeUtil}{.}{redeclareVarsInsideBranch}{(}{caseNode}{)}}{;}}{{{switchNode}{.}{removeChild}{(}{caseNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maybeBreak}{.}{detach}{()}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{replaceWith}{(}{{right}{.}{detach}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{replaceChild}{(}{child}{,}{{IR}{.}{number}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{codeChanged}{)}{{{}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLiteralNode}{!=}{null}}{)}{{{}{{{n}{.}{replaceWith}{(}{newLiteralNode}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{newLiteralNode}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{setToken}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{reportCodeChange}{()}}{;}}}
{AST_ROOT_SC2NF{{{compileFilesError}{(}{SourceFile.DUPLICATE_ZIP_CONTENTS}{,}{zipFile1}{,}{zipFile2}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options.j2clPassMode}{.}{equals}{(}{CompilerOptions.J2clPassMode.AUTO}{)}}{)}{{{}{{{checks}{.}{add}{(}{j2clSourceFileChecker}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{j2clPassMode}{=}{J2clPassMode.OFF}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{,}{STRING_CONSTANT}{,}{child}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{child.parent}{==}{this}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result.transpiled}{)}}{.}{isFalse}{()}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result.transpiled}{)}}{.}{isTrue}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{{{transpiler}{=}{{new}{{Transpiler}}{(}{mockCompiler}{,}{STRING_CONSTANT}{)}}}{;}}{{{compiler}{=}{{new}{{Transpiler.CompilerSupplier}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{Charsets.UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{Charsets.UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{Charsets.UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Files}{.}{asCharSink}{(}{jsFile}{,}{Charsets.UTF_8}{)}}{.}{write}{(}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{def}}{=}{def}}{;}}{{{{this}{.}{use}}{=}{use}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rewriteState}{.}{containsModule}{(}{legacyNamespace}{)}}}{)}{{{}{{{unrecognizedRequires}{.}{add}{(}{{new}{{UnrecognizedRequire}}{(}{call}{,}{legacyNamespace}{,}{false}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{inFunction}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{AnalyzePrototypeProperties}}{{analyzer}{=}{{new}{{AnalyzePrototypeProperties}}{(}{compiler}{,}{null}{,}{canModifyExterns}{,}{anchorUnusedVars}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{analyzer}}{=}{{new}{{AnalyzePrototypeProperties}}{(}{compiler}{,}{moduleGraph}{,}{canModifyExterns}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{compilationLevelParsed}{=}{{COMPILATION_LEVEL_MAP}{.}{get}{(}{{Ascii}{.}{toUpperCase}{(}{compilationLevel}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{cacheEntry.input}{==}{null}}{)}{{{}{{{cacheEntry.input}{=}{{new}{{CompilerInput}}{(}{source}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{transformed}{=}{{!}{{result.transpiledFiles}{.}{isEmpty}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES8}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInlineIntoNestedNonHoistedNamedFunctions}{()}{{{}{{{setAcceptedLanguage}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{jsDoc}{!=}{null}}{&&}{{jsDoc}{.}{isConstant}{()}}}{&&}{{{jsDoc}{.}{getType}{()}}{==}{null}}}}
{AST_ROOT_SC2NF{{{newNode}{.}{useSourceInfoWithoutLengthIfMissingFromForTree}{(}{sourceInfoNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{expr}{.}{useSourceInfoWithoutLengthIfMissingFromForTree}{(}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isFunction}{()}}{||}{{n}{.}{isClass}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{shouldAmbiguateProperties}{()}{{{}{{return}{{this}{.}{ambiguateProperties}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{shouldDisambiguateProperties}{()}{{{}{{return}{{this}{.}{disambiguateProperties}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{shouldInlineProperties}{()}{{{}{{return}{inlineProperties}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Es6RewriteClass}}{(}{compiler}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{decl}{.}{maybeRemoveRhs}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFor}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{isForIn}{()}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.NULLABLE_DEREFERENCE}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{CLOSURE_DEFS}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{CLOSURE_BASE}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{replacements}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{appendTo}{(}{{new}{{StringBuilder}}{()}}{)}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{hasReferenceName}{()}}{)}{{{}{{return}{{sb}{.}{append}{(}{{getReferenceName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{isPrettyPrint}{()}}}{||}{{this}{==}{{registry}{.}{getNativeType}{(}{JSTypeNative.FUNCTION_INSTANCE_TYPE}{)}}}}{)}{{{}{{return}{{sb}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{qnameNode}{.}{isQualifiedName}{()}}{)}}{;}}{{{declarations}{.}{add}{(}{{PotentialDeclaration}{.}{from}{(}{qnameNode}{,}{scope}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{isImport}{=}{{{rhs}{!=}{null}}{&&}{{isImportRhs}{(}{rhs}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits6}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits4}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits3}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInherits2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLoggerOnObject3b}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{!}{{callClassType}{.}{isBottom}{()}}}{&&}{{!}{{callClassType}{.}{isUnknownType}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{doSanityChecks}{&&}{{sourceFile}{!=}{null}}}{)}{{{}{{{checkState}{(}{{sourceFile}{.}{equals}{(}{{n}{.}{getSourceFileName}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{devMode}{)}{{{}{{{runSanityCheck}{()}}{;}}{{if}{(}{{hasErrors}{()}}{)}{{{}{{return}{null}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{maybeSanityCheck}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{SanityCheck}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.devMode}{==}{DevMode.EVERY_PASS}}{)}{{{}{{{phaseOptimizer}{.}{setSanityCheck}{(}{sanityCheck}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.devMode}{==}{DevMode.START_AND_END}}{)}{{{}{{{runSanityCheck}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{sanityCheck}}}
{AST_ROOT_SC2NF{{{}{{{declarationCheck}{=}{{!}{sanityCheck}}}{;}}{{{disableCompareAsTree}{()}}{;}}{{{testExternChanges}{(}{extern}{,}{input}{,}{expectedExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sanityCheck}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testViolatedModuleDependencyNonStrictNotPromoted}{()}{{{}{{{sanityCheck}{=}{true}}{;}}{{{strictModuleDepErrorLevel}{=}{CheckLevel.ERROR}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingModuleDependencySkipNonStrictNotPromoted}{()}{{{}{{{sanityCheck}{=}{true}}{;}}{{{strictModuleDepErrorLevel}{=}{CheckLevel.ERROR}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testViolatedModuleDependencySkipNonStrict}{()}{{{}{{{sanityCheck}{=}{true}}{;}}{{{testDependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingModuleDependencySkipNonStrict}{()}{{{}{{{sanityCheck}{=}{true}}{;}}{{{testIndependentModules}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{sanityCheck}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ObjectBuilder}}{prototype}{()}{{{}{{return}{prototype}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ObjectBuilder}}{instance}{()}{{{}{{return}{instance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{ObjectBuilder}}{constructor}{()}{{{}{{return}{constructor}{;}}{}}}}}
{AST_ROOT_SC2NF{{{convention}{.}{applySingletonGetter}{(}{{new}{{NominalTypeBuilderNti}}{(}{lateProps}{,}{rawType}{)}}{,}{getInstanceType}{)}}{;}}}
{AST_ROOT_SC2NF{{{new}{{FunctionTypeBuilder}}{(}{{getCommonTypes}{()}}{)}}{.}{addReqFormal}{(}{{{getCommonTypes}{()}}{.}{getNativeType}{(}{U2U_CONSTRUCTOR_TYPE}{)}}{)}}}
{AST_ROOT_SC2NF{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportBadGoogBaseUse}{(}{t}{,}{n}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{node}{,}{INVALID_SUPER_CALL}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{initializer}{!=}{null}}{)}{{{}{{{inferredType}{=}{{simpleInferExprType}{(}{initializer}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{bindComponents.thisValue}{==}{null}}{?}{null}{:}{{simpleInferExprType}{(}{bindComponents.thisValue}{)}}}{;}}}
{AST_ROOT_SC2NF{{currentScope}{.}{isConstructor}{()}}}
{AST_ROOT_SC2NF{{{JSType}}{{rhsType}{=}{{simpleInferExprType}{(}{rhs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{newPropType}{=}{{{rhs}{==}{null}}{?}{null}{:}{{simpleInferExprType}{(}{rhs}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{recvType}{=}{{simpleInferExprType}{(}{recv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{{initializer}{==}{null}}{?}{null}{:}{{simpleInferExprType}{(}{initializer}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{initializer}{!=}{null}}{)}{{{}{{{inferredType}{=}{{simpleInferExprType}{(}{initializer}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{t}{=}{{simpleInferExprType}{(}{{prop}{.}{getFirstChild}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{requireName}{=}{{{require}{.}{getSecondChild}{()}}{.}{getString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{options.processCommonJSModules}{)}{{{}{{{ProcessCommonJSModules}}{{cjs}{=}{{new}{{ProcessCommonJSModules}}{(}{this}{,}{true}{)}}}{;}}{{{cjs}{.}{process}{(}{null}{,}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationOf}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationOf}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{options.processCommonJSModules}{)}{{{}{{{ProcessCommonJSModules}}{{cjs}{=}{{new}{{ProcessCommonJSModules}}{(}{this}{)}}}{;}}{{{cjs}{.}{process}{(}{null}{,}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{String}}{{requireName}{=}{{ProcessCommonJSModules}{.}{getCommonJsImportPath}{(}{require}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{STRING_CONSTANT}{.}{equals}{(}{{type}{.}{getDisplayName}{()}}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{case}{REMOVE_RHS}{:}}}
{AST_ROOT_SC2NF{{void}{markProvided}{(}{{{String}}{providedName}}{)}{{{}{{{providedNamespaces}{.}{add}{(}{providedName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{markNameProcessed}{(}{{{String}}{fullyQualifiedName}}{)}{{{}{{{seenNames}{.}{add}{(}{fullyQualifiedName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ObjectLiteralPropertyDefinition}}{(}{parent}{,}{n}{,}{{n}{.}{getFirstChild}{()}}{,}{isExtern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT3}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{}}}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.processCommonJSModules}{)}{{{}{{{ProcessCommonJSModules}}{{cjs}{=}{{new}{{ProcessCommonJSModules}}{(}{this}{,}{true}{)}}}{;}}{{{cjs}{.}{process}{(}{null}{,}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{String}}{{requireName}{=}{{{require}{.}{getSecondChild}{()}}{.}{getString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testDontPreserveUnknownTypeDeclarations}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{CheckConformance.CONFORMANCE_VIOLATION}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{FORWARD_DECLARATION_DEFINITIONS}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnknown}{()}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{nameNode}{.}{isQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationOf}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationOf}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{needsTranspilationFrom}{(}{FeatureSet.ES6_MODULES}{)}}{||}{options.transformAMDToCJSModules}{||}{options.processCommonJSModules}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_expression}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_booleanResult0}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PeepholeOptimizationsPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TernaryValue}}{{result}{=}{{evaluateComparison}{(}{{n}{.}{getToken}{()}}{,}{left}{,}{right}{,}{shouldUseTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{rightValObj}{=}{{NodeUtil}{.}{getNumberValue}{(}{right}{,}{shouldUseTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{result}{=}{{NodeUtil}{.}{getNumberValue}{(}{n}{,}{shouldUseTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{false}{)}}}
{AST_ROOT_SC2NF{{{caseMatches}{=}{{PeepholeFoldConstants}{.}{evaluateComparison}{(}{Token.SHEQ}{,}{cond}{,}{caseLabel}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{getName}{()}}{,}{{new}{{PeepholeRemoveDeadCode}}{()}}{,}{{new}{{PeepholeMinimizeConditions}}{(}{true}{,}{false}{)}}{,}{{new}{{PeepholeFoldConstants}}{(}{true}{,}{false}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypesForOptimization}{)}}}
{AST_ROOT_SC2NF{{{optimizations}{.}{add}{(}{{new}{{PeepholeMinimizeConditions}}{(}{late}{,}{useTypesForOptimization}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{n}{=}{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setJSType}{(}{{call}{.}{getJSType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{boxedInfo.length}{==}{NUMBER_CONSTANT}}{)}}{;}}{{{f1}{.}{isSubtypeOfHelper}{(}{f2}{,}{true}{,}{subSuperMap}{,}{boxedInfo}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isSubtypeOfHelper}{(}{other}{,}{true}{,}{subSuperMap}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isSubtypeOfHelper}{(}{other}{,}{false}{,}{{SubtypeCache}{.}{create}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionArgRemoval_defaultValue3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCallOrApply}{(}{)}{throws}{{Exception}}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteArrLit}{(}{)}{throws}{{Exception}}{{{}{{{String}}{{source}{=}{{newlineJoin}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{process}{(}{{{Node}}{externs}}{,}{{{Node}}{root}}{,}{{{DefinitionUseSiteFinder}}{definitions}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{disableCompareAsTree}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{process}{(}{{{Node}}{externs}}{,}{{{Node}}{root}}{,}{{{ReferenceMap}}{references}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionArgRemoval_defaultValue3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCallOrApply}{(}{)}{throws}{{Exception}}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteArrLit}{(}{)}{throws}{{Exception}}{{{}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setEmitUseStrict}{(}{emitUseStrict}{)}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}{{{addInlineVariables}{()}}{;}}{{{addPeephole}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}{{{addDeadCodeElimination}{()}}{;}}{{{addInlineVariables}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{passes}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}{{{addInlineVariables}{()}}{;}}{{{addPeephole}{()}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{messages}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}{{{mode}{=}{JsMessage.Style.LEGACY}}{;}}{{{compilerOptions}{=}{null}}{;}}{{{renameMessages}{=}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{getTopObject}{()}}{.}{getNominalTypeIfSingletonObj}{()}}{.}{getPrototypePropertyOfCtor}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{superClass}{==}{null}}{?}{null}{:}{{superClass}{.}{getPrototypePropertyOfCtor}{()}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{proto}{=}{{{getNominalTypeIfSingletonObj}{()}}{.}{getPrototypePropertyOfCtor}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isCall}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{ref.scope}{.}{isGlobal}{()}}}
{AST_ROOT_SC2NF{{{ref.scope}{.}{getClosestHoistScope}{()}}{.}{isGlobal}{()}}}
{AST_ROOT_SC2NF{{try}{{{}{{{compiler}{.}{compile}{(}{EXTERNS}{,}{inputs}{,}{options}{)}}{;}}{}}}{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{compiler}{.}{compile}{(}{EXTERNS}{,}{inputs}{,}{options}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{compiler}{.}{compile}{(}{EXTERNS}{,}{inputs}{,}{options}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{compiler}{.}{compile}{(}{EXTERNS}{,}{inputs}{,}{options}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{type}{=}{{type}{.}{substring}{(}{NUMBER_CONSTANT}{,}{{type}{.}{lastIndexOf}{(}{STRING_CONSTANT}{)}}{)}}}{;}}{}}}{else}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{{parent}{.}{getQualifiedName}{()}}{.}{substring}{(}{{{{parent}{.}{getQualifiedName}{()}}{.}{lastIndexOf}{(}{STRING_CONSTANT}{)}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{suffixes}{.}{add}{(}{{polyfillName}{.}{substring}{(}{{{polyfillName}{.}{lastIndexOf}{(}{STRING_CONSTANT}{)}}{+}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{{cls.target}{.}{getQualifiedName}{()}}{.}{replaceAll}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{{Node}}{<}{{E}}{>}}{,}{{{ImmutableSet.Builder}}{<}{{E}}{>}}{>}}{{groupsTmp}{=}{{Maps}{.}{newLinkedHashMap}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{Maps}{.}{newHashMap}{()}}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{n}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{n}{)}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{decl}{)}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{Node}}{>}}{{allVars}{=}{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{names}{=}{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{c}{)}}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{paramList}{)}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkNotNull}{(}{sideEffectInfo}{,}{STRING_CONSTANT}{,}{function}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{varNode}{)}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Node}}{lhs}}{:}{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{n}{)}}{)}{{{}{{{declareVar}{(}{s}{,}{lhs}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{declaration}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{{NodeUtil}{.}{getLhsNodesOfDeclaration}{(}{nameDecl}{)}}{.}{size}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{ref.scope}{.}{isGlobal}{()}}}
{AST_ROOT_SC2NF{{public}{void}{failing_testLocalAliasWithLet3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{failing_testLocalAliasWithLet2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT3}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{arrayFoldedChildren}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Deque}}{<}{{ScriptDescription}}{>}}{{scriptDescriptions}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{newVars}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{orderedVars}}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{orderedVars}}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Var}}{>}}{{orderedVars}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{orderedVars}}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT_2017}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCallOrApply}{(}{)}{throws}{{Exception}}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoRewriteArrLit}{(}{)}{throws}{{Exception}}{{{}{{{String}}{{source}{=}{{newlineJoin}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{testSame}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionArgRemoval_defaultValue3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{process}{(}{{{Node}}{externs}}{,}{{{Node}}{root}}{,}{{{DefinitionUseSiteFinder}}{definitions}}{)}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT3}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testConst}{()}{{{}{{{inFunction}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT_2017}}{;}}}
{AST_ROOT_SC2NF{{{varify}{()}}{;}}}
{AST_ROOT_SC2NF{{{varify}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{varName}}}
{AST_ROOT_SC2NF{{{checkLocalityOfMarkedCalls}{(}{source}{,}{{ImmutableList}{.}{<}{{String}}{>}{of}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkLocalityOfMarkedCalls}{(}{source}{,}{{ImmutableList}{.}{<}{{String}}{>}{of}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{NodeUtil}{.}{evaluatesToLocalValue}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT3}}{;}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT_2017}}{;}}}
{AST_ROOT_SC2NF{{return}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{sourceName}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{fullExportedName}{=}{{{currentScript}{.}{getBinaryNamespace}{()}}{+}{{exportDefinition}{.}{getExportPostfix}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{binaryNamespaceName}{=}{{IR}{.}{name}{(}{{currentScript}{.}{getBinaryNamespace}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.isModule}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.isModule}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.isModule}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{rewriteState}{.}{getExportedNamespaceOrScript}{(}{legacyNamespace}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{currentScript.isModule}{,}{currentScript}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{currentScript.isModule}}{||}{{!}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{||}{{!}{{isAssignTarget}{(}{n}{)}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{languageIn}{=}{LanguageMode.ECMASCRIPT3}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{et}{!=}{null}}{&&}{{et}{.}{enumLiteralHasKey}{(}{pname}{)}}}{)}{{{}{{return}{{et}{.}{getEnumeratedType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{locals}{.}{get}{(}{name}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{locals}{.}{put}{(}{name}{,}{newDeclType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{fullExportedName}{=}{{{{currentScript}{.}{getBinaryNamespace}{()}}{.}{get}{()}}{+}{{exportDefinition}{.}{getExportPostfix}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{binaryNamespaceName}{=}{{IR}{.}{name}{(}{{{currentScript}{.}{getBinaryNamespace}{()}}{.}{get}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScript}{.}{isModule}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScript}{.}{isModule}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScript}{.}{isModule}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{exportedNamespace}{=}{{{rewriteState}{.}{getExportedNamespaceOrScript}{(}{legacyNamespace}{)}}{.}{get}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{currentScript}{.}{isModule}{()}}{,}{currentScript}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{currentScript}{.}{isModule}{()}}}{||}{{!}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{||}{{!}{{isAssignTarget}{(}{n}{)}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isName}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{finder}{.}{visitTree}{(}{{getAstRoot}{(}{compiler}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{{cls.target}{.}{getQualifiedName}{()}}{.}{replace}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{statementNode}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{declNode}{.}{isGetProp}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{getGlobalScope}{()}}{.}{addNamespaceLit}{(}{qnameNode}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setPreserveGoogProvidesAndRequires}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setPreserveGoogProvidesAndRequires}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{keyNode}{.}{isStringKey}{()}}{||}{{keyNode}{.}{isMemberFunctionDef}{()}}}}
{AST_ROOT_SC2NF{{{Node}}{{externsRoot}{=}{{parse}{(}{compiler}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{externsRoot}{=}{{parse}{(}{compiler}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{helperExposeExpression}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{{{helperExposeExpression}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{jsdocType}{=}{{symbolTable}{.}{getPropDeclaredType}{(}{prop}{)}}}{;}}}
{AST_ROOT_SC2NF{{{pair.type}{=}{{symbolTable}{.}{getCastType}{(}{expr}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{jsdocType}{=}{{symbolTable}{.}{getPropDeclaredType}{(}{prop}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{toType}{=}{{symbolTable}{.}{getCastType}{(}{expr}{)}}}{;}}}
{AST_ROOT_SC2NF{{{visitNamespacePropertyDeclaration}{(}{getProp}{,}{recv}{,}{pname}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{propDeclType}{=}{{{getDeclaredObjLitProps}{()}}{.}{get}{(}{prop}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{this}{.}{gti}}{.}{getCastTypes}{()}}{.}{get}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{getOptions}{(}{options}{)}}{;}}{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ANALYZER_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{js}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{fileoverview}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testFunctionNamesAndIds}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testFunctionNamesAndIds}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testFunctionNamesAndIds}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSets}{(}{STRING_CONSTANT}{,}{js}{,}{output}{,}{STRING_CONSTANT}{,}{NewTypeInference.MISTYPED_ASSIGN_RHS}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEarlyReferenceError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEarlyReferenceError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{{assertThat}{(}{{{getLastCompiler}{()}}{.}{injected}}{)}}{.}{isEmpty}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{script}{=}{{compiler}{.}{parseSyntheticCode}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{modules}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{test}{(}{{createModuleChain}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}{)}}}
{AST_ROOT_SC2NF{{{test}{(}{{createModuleStar}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{modules}{,}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{VarCheck.UNDEFINED_VAR_ERROR}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertPureCallsMarked}{(}{source}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{source}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{LINE_JOINER}{.}{join}{(}{DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{config}{(}{{rule}{(}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{configuration}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{testNoWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISSING_RETURN_JSDOC}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISSING_RETURN_JSDOC}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{MISSING_RETURN_JSDOC}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{localVar}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PolymerClassDefinition}}{{def}{=}{{parseAndExtractClassDefFromCall}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{body}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{body}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testReference}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{googModule}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{googModule}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{googModule}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{legacyScript}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{t}{.}{inGlobalHoistScope}{()}}{&&}{{!}{{NodeUtil}{.}{isFunctionExpression}{(}{n}{)}}}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isFunctionExpression}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{checkForNewObjects}{||}{{!}{{isFunctionExpression}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isEs6ModuleRoot}{(}{root}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{FindModuleDependencies}{.}{isEs6ModuleRoot}{(}{root}{)}}{)}{{{}{{{moduleType}{=}{ModuleType.ES6}}{;}}{}}}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isFunctionExpression}{(}{parent}{)}}{)}{{{}{break;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{FindStaticMembers}}{{findStaticMembers}{=}{{new}{{FindStaticMembers}}{()}}}{;}}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{scriptRoot}{,}{findStaticMembers}{)}}{;}}{{{processInherits}{(}{findStaticMembers.inheritsCalls}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{processInherits}{(}{findStaticMembers.inheritsCalls}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertChangesRecorded}{(}{code}{,}{{new}{{NameChangingCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertChangesRecorded}{(}{code}{,}{{new}{{NameChangingCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{code}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{{LINE_JOINER}{.}{join}{(}{lines}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{{LINE_JOINER}{.}{join}{(}{lines}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{fn}{.}{isFromExterns}{()}}}{)}{{{}{{{{getScopes}{()}}{.}{add}{(}{fnScope}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.NULLABLE_DEREFERENCE}{)}}{;}}}
{AST_ROOT_SC2NF{{{node}{.}{useSourceInfoWithoutLengthIfMissingFromForTree}{(}{basisNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{JSErrorSubject}}{(}{THROW_ASSERTION_ERROR}{,}{error}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{NodeSubject}}{(}{THROW_ASSERTION_ERROR}{,}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{scriptRoot}{,}{findStaticMembers}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{externs}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{,}{{new}{{SelfReferenceRewriter}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{this}{,}{{new}{{SelfReferenceRewriter}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapCheck}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{maybeExternMethod}{(}{first}{)}}{)}{{{}{{return}{DecompositionType.UNDECOMPOSABLE}{;}}{}}}{else}{{{}{{return}{DecompositionType.DECOMPOSABLE}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{allowObjectCallDecomposing}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{name}{=}{{NodeUtil}{.}{newQName}{(}{compiler}{,}{{prototypeAlias}{+}{STRING_CONSTANT}{+}{declar.memberName}}{,}{declar.node}{,}{declar.memberName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{{NodeUtil}{.}{newVarNode}{(}{prototypeAlias}{,}{null}{)}}{.}{useSourceInfoIfMissingFromForTree}{(}{injectionPoint}{)}}}{;}}}
{AST_ROOT_SC2NF{{declNode}{.}{isAssign}{()}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{nt}{=}{{getNominalTypeIfSingletonObj}{()}}}{;}}{{return}{{{nt}{.}{isLiteralObject}{()}}{||}{{nt}{.}{isBuiltinObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{isPropertyRemovable}{(}{{{String}}{propertyName}}{)}{{{}{{return}{{isEntirelyRemovable}{||}{{unreferencedPropertiesMayBeRemoved}{&&}{{!}{{referencedPropertyNames}{.}{contains}{(}{propertyName}{)}}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{resultPair}{=}{{analyzeCastFwd}{(}{expr}{,}{inEnv}{,}{specializedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Name}}{{superclassNameObj}{=}{{getOrCreateName}{(}{superclassName}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{abstract}{void}{verify}{(}{{{Compiler}}{compiler}}{)}{;}}}
{AST_ROOT_SC2NF{{{currentArgumentsAccess}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MemberDefinition}}{>}}{{allProperties}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{files}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{files}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{SourceFile}}{>}}{{files}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{entryPoints}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{cur}{=}{{{instance.declarations}{.}{getLast}{()}}{.}{node}}}{;}}}
{AST_ROOT_SC2NF{{{PrototypeMemberDeclaration}}{{first}{=}{{instance.declarations}{.}{getFirst}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{lValue}{.}{isRest}{()}}{)}{{{}{{{lValue}{=}{{lValue}{.}{getFirstChild}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{getVarInfo}{(}{{classScope}{.}{getVar}{(}{{classNameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{VarInfo}}{{varInfo}{=}{{getVarInfo}{(}{var}{)}}}{;}}{{{varInfo}{.}{addRemovable}{(}{{{new}{{RemovableBuilder}}{()}}{.}{buildDestructuringAssign}{(}{c}{,}{c}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{getVarInfo}{(}{var}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{getVarInfo}{(}{var}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{getVarInfo}{(}{{checkNotNull}{(}{{scope}{.}{getVar}{(}{{nameNode}{.}{getString}{()}}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{getVarInfo}{(}{{scope}{.}{getVar}{(}{{nameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{exceptionVarInfo}{=}{{getVarInfo}{(}{{scope}{.}{getVar}{(}{{exceptionNameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{VarInfo}}{{varInfo}{=}{{getVarInfo}{(}{var}{)}}}{;}}{{{varInfo}{.}{addRemovable}{(}{{{new}{{RemovableBuilder}}{()}}{.}{buildDestructuringAssign}{(}{restNode}{,}{target}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{classVarInfo}{=}{{getVarInfo}{(}{classVar}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isCallOrNew}{(}{invocation}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Scope}}{scope}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{current}{.}{isGetProp}{()}}{,}{STRING_CONSTANT}{,}{current}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{current}{.}{isLabel}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{isControlStructure}{(}{parent}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{isClassMembers}{()}}{||}{{n}{.}{isObjectLit}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{n}{.}{isClassMembers}{()}}{||}{{n}{.}{isObjectLit}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{callNode}{.}{isNew}{()}}{,}{STRING_CONSTANT}{,}{{callNode}{.}{getToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{!}{{NodeUtil}{.}{isObjectLitKey}{(}{n}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{isMarkedConst}{=}{{{n}{.}{isConst}{()}}{||}{{(}{{{jsdoc}{!=}{null}}{&&}{{jsdoc}{.}{isConstant}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{Queue}}{<}{{Property}}{>}}{{propertyQueue}{=}{{new}{{{LinkedList}}{<>}}{(}{propertiesSet}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isFunction}{()}}{)}{{{}{break;}{}}}}{{{{this}{.}{ancestors}}{.}{add}{(}{NUMBER_CONSTANT}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertPureCallsMarked}{(}{source}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Var}}{v}}}
{AST_ROOT_SC2NF{{{Node}}{definitionRValue}}}
{AST_ROOT_SC2NF{{isStaticCtorProp}{(}{getProp}{,}{currentScope}{)}}}
{AST_ROOT_SC2NF{{{JSModule}}{module}}}
{AST_ROOT_SC2NF{{{JSModule}}{module}}}
{AST_ROOT_SC2NF{{{DefinitionProvider}}{definitionProvider}}}
{AST_ROOT_SC2NF{{if}{(}{{defs}{==}{null}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{@}{VisibleForTesting}}{{{Multimap}}{<}{{String}}{,}{{UseSite}}{>}}{getUseSitesByName}{()}{{{}{{return}{{LinkedHashMultimap}{.}{create}{(}{useSitesByName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{inExterns}{)}{{{}{{{visitExterns}{(}{traversal}{,}{node}{,}{parent}{)}}{;}}{}}}{else}{{{}{{{visitCode}{(}{traversal}{,}{node}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testAnnotationInExterns_new5}{(}{)}{throws}{{Exception}}{{{}{{{assertPureCallsMarked}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{false}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{true}{,}{false}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{removeGlobal}{,}{preserveFunctionExpressionNames}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{{!}{removeOnlyLocals}}{,}{preserveAnonymousFunctionNames}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{visitScript}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{packageJsonMainEntries}{)}}{.}{containsEntry}{(}{STRING_CONSTANT}{,}{NodeModuleResolver.JSC_BROWSER_BLACKLISTED_MARKER}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{fnNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{LinkedHashMap}}{<}{{String}}{,}{{Node}}{>}}{{actualMap}{=}{{FunctionArgumentInjector}{.}{getFunctionCallParameterMap}{(}{fn}{,}{call}{,}{{getNameSupplier}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters12}{()}{{{}{{{{assertThat}{(}{{FunctionArgumentInjector}{.}{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters2}{()}{{{}{{{{assertThat}{(}{{FunctionArgumentInjector}{.}{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters1}{()}{{{}{{{{assertThat}{(}{{FunctionArgumentInjector}{.}{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFindModifiedParameters0}{()}{{{}{{{{assertThat}{(}{{FunctionArgumentInjector}{.}{findModifiedParameters}{(}{{parseFunction}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{isEmpty}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Boolean}}{{replaceParent}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{tracer}{=}{{new}{{Tracer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{edgeAnnotationStack}{==}{null}}{)}{{{}{{{edgeAnnotationStack}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}{}}}}{{{pushAnnotations}{(}{edgeAnnotationStack}{,}{{getEdges}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{nodeAnnotationStack}{==}{null}}{)}{{{}{{{nodeAnnotationStack}{=}{{new}{{{LinkedList}}{<>}}{()}}}{;}}{}}}}{{{pushAnnotations}{(}{nodeAnnotationStack}{,}{{getNodes}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}{<}{{{blockScope}{.}{getVarCount}{()}}{+}{{functionScope}{.}{getVarCount}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}{<}{{{t}{.}{getScope}{()}}{.}{getVarCount}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{{LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE}{+}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{if}{(}{{{var}{.}{getParentNode}{()}}{.}{isParamList}{()}}{)}{{{}{{{varInfo.propertyAssignmentsWillPreventRemoval}{=}{true}}{;}}{{{varInfo.unreferencedPropertiesMayBeRemoved}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{exceptionVarInfo}{.}{setCannotRemoveAnything}{()}}{;}}}
{AST_ROOT_SC2NF{{{canonicalTotallyUnremovableVarInfo}{.}{setCannotRemoveAnything}{()}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{String}}{>}}{namesToAlias}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{String}}{>}}{needAliases}}}
{AST_ROOT_SC2NF{{{{LinkedHashMap}}{<}{{String}}{,}{{Node}}{>}}{argMap}}}
{AST_ROOT_SC2NF{{return}{{LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}{>}{{orderedVars}{.}{size}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}{<}{{{t}{.}{getScope}{()}}{.}{getVarCount}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{{LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE}{+}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{n}{.}{isVar}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{parent}{.}{isVar}{()}}{&&}{{nameNode}{.}{hasOneChild}{()}}}}
{AST_ROOT_SC2NF{{parent}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{removeUnusedProperties}{&&}{{r}{.}{isNamedPropertyAssignment}{()}}{&&}{{!}{{referencedPropertyNames}{.}{contains}{(}{{r}{.}{getPropertyName}{()}}{)}}}}}
{AST_ROOT_SC2NF{{removeUnusedProperties}{&&}{{removable}{.}{isNamedPropertyAssignment}{()}}{&&}{{!}{{referencedPropertyNames}{.}{contains}{(}{{removable}{.}{getPropertyName}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{!}{{n}{.}{isString}{()}}}{&&}{{!}{{isConstantNameNode}{(}{n}{,}{knownConstants}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{rValue}{==}{null}}{||}{{!}{{rValue}{.}{isFunction}{()}}}}{||}{{NodeUtil}{.}{isVarArgsFunction}{(}{rValue}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isVarArgsFunction}{(}{fnc}{)}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{computeEscapedEs6}{(}{{jsScope}{.}{getParent}{()}}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscapedEs6}{(}{jsScope}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{{computeEscapedEs6}{(}{{jsScope}{.}{getParent}{()}}{,}{escaped}{,}{compiler}{,}{scopeCreator}{)}}{;}}}
{AST_ROOT_SC2NF{{isConstructorCall}{(}{expr}{)}}}
{AST_ROOT_SC2NF{{private}{{Scope}}{newScope}{()}{{{}{{return}{{Scope}{.}{createGlobalScope}{(}{{new}{{Node}}{(}{Token.SCRIPT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{()}{{{}{{{allowMethodCallDecomposing}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{createCompilerOptions}{()}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{testModules}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{public}{void}{testES6Modules}{()}{{{}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testB3473189}{()}{{{}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BlackHoleErrorManager}{.}{silence}{(}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{classAndItsMethodAliasedAsExtern}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{getPropertyName}{()}{{{}{{{checkState}{(}{{isNamedPropertyAssignment}{()}}{)}}{;}}{{return}{{checkNotNull}{(}{propertyName}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{toRemove}{.}{isParamList}{()}}{)}{{{}}}{else}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{options.collapseProperties}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{options.collapseProperties}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{options.collapseProperties}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{options.collapseProperties}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isApplied}{(}{{{CompilerOptions}}{options}}{)}{{{}{{return}{options.collapseProperties}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FeatureSet}}{featureSet}{()}{{{}{{return}{ES5}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{!}{{{n}{.}{getFirstChild}{()}}{.}{isVar}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNoGlobalSchopeChanges}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{RemoveUnusedVars}}{(}{compiler}{,}{{!}{removeOnlyLocals}}{,}{preserveAnonymousFunctionNames}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{{getTypeDeprecationInfo}{(}{{{t}{.}{getTypedScope}{()}}{.}{getTypeOfThis}{()}}{)}}{!=}{null}}{)}}}
{AST_ROOT_SC2NF{{{TypedVar}}{var}}}
{AST_ROOT_SC2NF{{{TypedVar}}{var}}}
{AST_ROOT_SC2NF{{{@}{Override}}{boolean}{isMethodDeclaration}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isIndependentlyRemovableNamedProperty}{()}{{{}{{return}{{{isPrototypeObjectNamedPropertyAssignment}{()}}{||}{{isMethodDeclaration}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isMethodDeclaration}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{isGlobal}{&&}{{!}{removeGlobals}}{&&}{{!}{removeUnusedProperties}}}}
{AST_ROOT_SC2NF{{removeUnusedProperties}{&&}{{removable}{.}{isNamedProperty}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{removeUnusedProperties}{)}{{{}{{{removeUnreferencedProperties}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedVars}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{passes}{.}{add}{(}{flowSensitiveInlineVariables}{)}}{;}}{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{lastRemoveUnusedVars}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{{{new}{{RemoveUnusedVars.Builder}}{(}{compiler}{)}}{.}{removeGlobals}{(}{true}{)}}{.}{build}{()}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedCode}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{RewriteGlobalFunctionStatementsToVarAssignmentsCallback}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{{{{new}{{SimpleDependencyInfo.Builder}}{(}{closureRelativePath}{,}{filePath}{)}}{.}{setProvides}{(}{provides}{)}}{.}{setRequires}{(}{requires}{)}}{.}{setWeakRequires}{(}{weakRequires}{)}}{.}{setLoadFlags}{(}{loadFlags}{)}}{.}{build}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedCode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{atLeast8}{=}{{mode}{==}{Mode.ES8_OR_GREATER}}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableCollection}}{<}{{String}}{>}}{getWeakRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{getProvides}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParam_argIsUnknown}{()}{{{}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testDefaultParam_argIsUndefined}{()}{{{}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{disabled_testArrayPatternParam}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{visitParamList}{(}{t}{,}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{Annotation}}{{annotation}{=}{{annotationNames}{.}{get}{(}{annotationName}{)}}}{;}}}
{AST_ROOT_SC2NF{{config.languageMode}{!=}{LanguageMode.TYPESCRIPT}}}
{AST_ROOT_SC2NF{{if}{(}{{config.languageMode}{==}{LanguageMode.ECMASCRIPT3}}{)}{{{}{{{errorReporter}{.}{error}{(}{SETTER_ERROR_MESSAGE}{,}{sourceName}{,}{{lineno}{(}{node}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{config.languageMode}{==}{LanguageMode.ECMASCRIPT3}}{)}{{{}{{{errorReporter}{.}{error}{(}{GETTER_ERROR_MESSAGE}{,}{sourceName}{,}{{lineno}{(}{node}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{config.languageMode}{==}{LanguageMode.ECMASCRIPT3}}{)}{{{}{{{errorReporter}{.}{warning}{(}{INVALID_ES3_PROP_NAME}{,}{sourceName}{,}{{node}{.}{getLineno}{()}}{,}{{node}{.}{getCharno}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{config.keepGoing}{==}{Config.RunMode.KEEP_GOING}}{)}}{;}}{{{bodyNode}{=}{{IR}{.}{block}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{RemoveUnusedCode.Builder}}{(}{compiler}{)}}{.}{build}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{options.removeUnusedPrototypeProperties}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedPrototypeProperties}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{CollapseProperties}}{{collapseProperties}{=}{{new}{{CollapseProperties}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{CollapseProperties}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CollapseProperties}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{apply}{(}{{{CompilerOptions}}{options}}{,}{{boolean}{value}}{)}{{{}{{{options}{.}{setCollapseProperties}{(}{value}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{p}{!=}{null}}{&&}{{!}{{p}{.}{canCollapse}{()}}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{canCollapseChildNames}}{||}{{!}{{n}{.}{canCollapse}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{canCollapseChildNames}}{||}{{!}{{n}{.}{canCollapse}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{isObjLit}{&&}{{n}{.}{canEliminate}{()}}}}
{AST_ROOT_SC2NF{{isObjLit}{&&}{{n}{.}{canEliminate}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{canCollapse}{()}}{)}{{{}{{{updateGlobalNameDeclaration}{(}{n}{,}{alias}{,}{canCollapseChildNames}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{CollapseProperties}}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{CollapseProperties}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setCollapseProperties}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{collapseProperties}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{shouldRunRemoveUnusedCode}{()}}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedCode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{RemoveUnusedCode.Builder}}{(}{compiler}{)}}{.}{removeLocalVars}{(}{true}{)}}{.}{build}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{parent}{.}{isVar}{()}}{||}{{parent}{.}{isFunction}{()}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{RemoveUnusedCode.Builder}}{(}{compiler}{)}}{.}{build}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{options.removeUnusedPrototypeProperties}{)}{{{}{{{passes}{.}{add}{(}{removeUnusedPrototypeProperties}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setCollapsePropertiesLevel}{(}{PropertyCollapseLevel.ALL}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{filename}}{:}{files}{)}{{{}{{if}{(}{fix}{)}{{{}{{{fix}{(}{filename}{)}}{;}}{}}}{else}{{{}{{{lint}{(}{filename}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{extraSmartNamePass}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{qualifiedName}{=}{{{aliasVar}{.}{getInitialValue}{()}}{.}{getQualifiedName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{aliasExpanded}{=}{{checkNotNull}{(}{{aliasDefinition}{.}{getQualifiedName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{allowGlobalFunctionInlining}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalFunctionInliningOnly4}{()}{{{}{{{{this}{.}{allowGlobalFunctionInlining}}{=}{false}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalFunctionInliningOnly3}{()}{{{}{{{{this}{.}{allowGlobalFunctionInlining}}{=}{false}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLocalFunctionInliningOnly2}{()}{{{}{{{{this}{.}{allowGlobalFunctionInlining}}{=}{false}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{allowGlobalFunctionInlining}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{}{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_NEXT}{)}}{;}}{{{options}{.}{setLanguageOut}{(}{{value}{?}{CompilerOptions.LanguageMode.ECMASCRIPT5}{:}{CompilerOptions.LanguageMode.NO_TRANSPILE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{includesGlobals}{()}{{{}{{return}{{this}{==}{ALL}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{addToDebugLog}{(}{{STRING_CONSTANT}{+}{{file}{.}{getName}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{NodeUtil}{.}{isAssignmentOp}{(}{assignNode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{superClassNameNode}{=}{{{NodeUtil}{.}{newQName}{(}{compiler}{,}{superClassString}{)}}{.}{useSourceInfoIfMissingFrom}{(}{metadata.superClassNameNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{{classScope}{.}{getVar}{(}{{classNameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{{scope}{.}{getVar}{(}{{classNameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{{checkNotNull}{(}{{scope}{.}{getVar}{(}{{nameNode}{.}{getString}{()}}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{varInfo}{=}{{traverseVar}{(}{{scope}{.}{getVar}{(}{{nameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VarInfo}}{{exceptionVarInfo}{=}{{traverseVar}{(}{{scope}{.}{getVar}{(}{{exceptionNameNode}{.}{getString}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue618_2}{()}{{{}{{{{this}{.}{removeGlobal}}{=}{false}}{;}}{{{testSame}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{rhs}{==}{null}}{||}{{isTypedRhs}{(}{rhs}{)}}}{||}{{NodeUtil}{.}{isCallTo}{(}{rhs}{,}{STRING_CONSTANT}{)}}}{||}{{isImportRhs}{(}{rhs}{)}}}}
{AST_ROOT_SC2NF{{getAllSymbolsSorted}{()}}}
{AST_ROOT_SC2NF{{public}{{{Iterable}}{<}{{Symbol}}{>}}{getAllSymbols}{()}{{{}{{return}{{Collections}{.}{unmodifiableCollection}{(}{{symbols}{.}{values}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{foldSame}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{getAllSymbolsSorted}{()}}}
{AST_ROOT_SC2NF{{getAllSymbolsSorted}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{key}{.}{hasChildren}{()}}}{)}{{{}{{{maybeWarn}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{isStringKey}{()}}{&&}{{!}{{node}{.}{hasChildren}{()}}}}{)}{{{}{{{t}{.}{report}{(}{node}{,}{SHORTHAND_ASSIGNMENT_IN_ENUM}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isObjectPattern}{()}}{)}{{{}{{return}{{!}{{(}{{{n}{.}{isStringKey}{()}}{&&}{{n}{.}{hasChildren}{()}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{validateObjectLitStringKey}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{removeUnusedCodeOnce}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setInlineFunctions}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{inlineFunctions}}{=}{inlineFunctions}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Iterables}{.}{addAll}{(}{allSymbols}{,}{{table}{.}{getAllSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isIndependentlyRemovableNamedProperty}{()}{{{}{{return}{{{isPrototypeObjectNamedPropertyAssignment}{()}}{||}{{isClassOrPrototypeNamedProperty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isClassMemberFunction}{(}{functionNode}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{.}{equals}{(}{{{functionNode}{.}{getParent}{()}}{.}{getString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{isClassMemberFunction}{(}{functionNode}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{isImport}{)}{{{}{{{currentFile}{.}{recordImport}{(}{{name}{.}{getString}{()}}{)}}{;}}{}}}{else}{{{}{{{currentFile}{.}{recordDeclaration}{(}{name}{,}{{t}{.}{getScope}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{ConvertToTypedInterface}{.}{getPrototypeNameOfMethod}{(}{functionNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{isConstructor}{(}{n}{)}}{&&}{{{n}{.}{getLastChild}{()}}{.}{hasChildren}{()}}}{)}{{{}{{{currentFile}{.}{markConstructorToProcess}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{newJsdoc}{==}{null}}{&&}{{isThisProp}{(}{nameNode}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{isClassMethod}{(}{n}{)}}{)}{{{}{{{currentFile}{.}{recordMethod}{(}{n}{,}{{t}{.}{getScope}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{isConstructor}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isTypeCompatible}{(}{receiverType}{,}{method.type}{)}}{)}{{{}{{{unusedMethodPolyfills}{.}{remove}{(}{method}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{functionNode}{.}{isFunction}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{boolean}{isAssignmentToPrototype}{(}{{{Node}}{n}}{)}{{{}{{return}{{{n}{.}{isAssign}{()}}{&&}{{isPrototypeGetProp}{(}{{n}{.}{getFirstChild}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{long}{{nodeCount}{=}{{{graph}{.}{getNodes}{()}}{.}{size}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{n}{.}{isName}{()}}{||}{{n}{.}{isStringKey}{()}}{||}{{n}{.}{isImportStar}{()}}}{,}{STRING_CONSTANT}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isAssignmentTarget}{(}{n}{)}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isAssignmentTarget}{(}{n}{)}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isAssignmentTarget}{(}{n}{)}}{)}{{{}{{return}{n}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{isPrototypeProperty}{()}{{{}{{return}{{{isPrototypeObjectNamedPropertyAssignment}{()}}{||}{{isClassOrPrototypeNamedProperty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{removeUnusedThisProperties}{&&}{{removable}{.}{isThisNamedPropertyAssignment}{()}}}}
{AST_ROOT_SC2NF{{{RemovableBuilder}}{{builder}{=}{{{new}{{RemovableBuilder}}{()}}{.}{setIsThisNamedPropertyAssignment}{(}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fsCalled}{.}{setRemove}{(}{false}{)}}{;}}{{if}{(}{{!}{{minimizeCost}{(}{fsCalled}{)}}}{)}{{{}{{{fsCalled}{.}{setInline}{(}{false}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{rootNode}{=}{{scopeRoots}{.}{get}{(}{{i}{-}{NUMBER_CONSTANT}}{)}}}{;}}{{if}{(}{{Scope}{.}{isHoistScopeRootNode}{(}{rootNode}{)}}{)}{{{}{{return}{rootNode}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isHoistScope}{()}{{{}{{return}{{Scope}{.}{isHoistScopeRootNode}{(}{{getScopeRoot}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{(}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{&&}{{var.scope}{.}{isGlobal}{()}}}{)}}{||}{{NodeUtil}{.}{isFunctionDeclaration}{(}{parent}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{aliasVar}{!=}{null}}{)}{{{}{{return}{{aliasVar.scope}{.}{isGlobal}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{name}{=}{{importSpec}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCountIn}{(}{n}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateChildCountIn}{(}{n}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Builder}}{removeUnusedConstructorProperties}{(}{{boolean}{value}}{)}{{{}{{{{this}{.}{removeUnusedConstructorProperties}}{=}{value}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{removeUnusedConstructorProperties}}{=}{builder.removeUnusedConstructorProperties}}{;}}}
{AST_ROOT_SC2NF{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{Scope}}{{s}{=}{{getScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{refinedScope}{!=}{null}}{&&}{{{getScope}{()}}{!=}{refinedScope}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{name}{!=}{null}}{&&}{{!}{{name}{.}{isEmpty}{()}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{ClassUtil}{.}{getPrototypeNameOfMethod}{(}{functionNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{deleteNode}{(}{{getStatement}{()}}{,}{compiler}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{oldStatement}{=}{{getStatement}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{getStatement}{()}{{{}{{return}{{NodeUtil}{.}{getEnclosingStatement}{(}{lhs}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{hasReferenceName}{()}{{{}{{return}{{{referencedObjType}{==}{null}}{?}{null}{:}{{referencedObjType}{.}{hasReferenceName}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{extraSmartNamePass}{)}}{;}}}
{AST_ROOT_SC2NF{{{testModules}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{CompilerTestCase.LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{}}}}}
{AST_ROOT_SC2NF{{new}{{{String}}{[]}}{{{}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{mayHaveSideEffects}{(}{objExpression}{)}}{)}{{{}{{{replaceExpressionWith}{(}{incOrDecNode}{,}{{objExpression}{.}{detach}{()}}{)}}{;}}{}}}{else}{{{}{{{removeExpressionCompletely}{(}{incOrDecNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{mayHaveSideEffects}{(}{objExpression}{)}}{)}{{{}{{{replaceExpressionWith}{(}{referenceNode}{,}{{objExpression}{.}{detach}{()}}{)}}{;}}{}}}{else}{{{}{{{removeExpressionCompletely}{(}{referenceNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{Arguments}{(}{{{Scope}}{scope}}{)}{{{}{{super}{(}{STRING_CONSTANT}{,}{null}{,}{scope}{,}{{-}{NUMBER_CONSTANT}}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypedScope}}{getScope}{(}{{{TypedVar}}{var}}{)}{{{}{{return}{var.scope}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{creator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{scope}{.}{declare}{(}{name}{,}{n}{,}{input}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Scope}}{s}}}
{AST_ROOT_SC2NF{{private}{void}{pushScope}{(}{{{Scope}}{s}}{)}{{{}{{{pushScope}{(}{s}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Scope}}{refinedScope}}}
{AST_ROOT_SC2NF{{{Scope}}{scope}}}
{AST_ROOT_SC2NF{{{Scope}}{s}}}
{AST_ROOT_SC2NF{{{Scope}}{{hoistedScope}{=}{{t}{.}{getClosestHoistScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{scopeCreator}{=}{{new}{{Es6SyntacticScopeCreator}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Var}}{{var}{=}{{new}{{Var}}{(}{name}{,}{nameNode}{,}{this}{,}{{vars}{.}{size}{()}}{,}{input}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Scope}}{parent}}}
{AST_ROOT_SC2NF{{{ScopeCreator}}{{scopeCreator}{=}{{createScopeCreator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Scope}}{parent}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{FeatureSet}}{(}{{Sets}{.}{union}{(}{features}{,}{other.features}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{FeatureSet}}{withoutTypes}{()}{{{}{{return}{{new}{{FeatureSet}}{(}{{Sets}{.}{difference}{(}{features}{,}{{LangVersion.TYPESCRIPT}{.}{features}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{FeatureSet}{(}{{{{Set}}{<}{{Feature}}{>}}{features}}{)}{{{}{{{{this}{.}{features}}{=}{{ImmutableSet}{.}{copyOf}{(}{features}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{!}{{scope}{.}{isDeclared}{(}{name}{,}{false}{)}}}{&&}{{!}{{(}{{{scope}{.}{isLocal}{()}}{&&}{{name}{.}{equals}{(}{ARGUMENTS}{)}}}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{STRING_CONSTANT}{.}{equals}{(}{name}{)}}{&&}{{NodeUtil}{.}{isVanillaFunction}{(}{{scope}{.}{getRootNode}{()}}{)}}}{)}{{{}{{return}{{scope}{.}{getArgumentsVar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{S}}{getScope}{()}{{{}{{return}{scope}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{isFunctionScope}{()}}}{||}{{rootNode}{.}{isArrowFunction}{()}}}{)}{{{}{{return}{{parent}{.}{getArgumentsVar}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypedScope}}{getScope}{(}{{{TypedVar}}{var}}{)}{{{}{{return}{{(}{{TypedScope}}{)}{var.scope}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{optimizations}{.}{add}{(}{{new}{{MinimizeExitPoints}}{(}{compiler}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{null}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{null}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{STRING_CONSTANT}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{externs}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertChanges}{(}{STRING_CONSTANT}{,}{originalCode}{,}{expectedCode}{,}{template}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clearTemplates}{()}{{{}{{{templates}{=}{null}}{;}}{{{matchedTemplate}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkNotNull}{(}{funType}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ProcessCommonJSModules}{.}{isCommonJsImport}{(}{n}{)}}{)}{{{}{{{visitRequireCall}{(}{t}{,}{n}{,}{parent}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{moduleLoader}}{=}{{new}{{ModuleLoader}}{(}{null}{,}{options.moduleRoots}{,}{inputs}{,}{ModuleLoader.PathResolver.RELATIVE}{,}{options.moduleResolutionMode}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setModuleResolutionMode}{(}{ModuleLoader.ResolutionMode.NODE}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{JsonFileSpec}{(}{{{String}}{src}}{,}{{{String}}{path}}{)}{{{}{{this}{(}{src}{,}{path}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{var}{.}{getParentNode}{()}}{.}{isParamList}{()}}{)}{{{}{{{varInfo.propertyAssignmentsWillPreventRemoval}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{preventsRemovalOfVariableWithNonLocalOrNonLiteralValueOrPrototype}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fold}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNewOperatior3}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNewOperatior2}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNewOperatior1}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{getLeastSupertype}{(}{this}{,}{that}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{hasOneChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newDeclaration}{=}{{{IR}{.}{declaration}{(}{{lhsToSplit}{.}{detach}{()}}{,}{rhs}{,}{{n}{.}{getToken}{()}}{)}}{.}{srcref}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{TypeI}}{>}}{{props}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{mayBeStatement}{(}{stmt}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NameDeclarationStatement}}{{removable}{=}{{{builder}{.}{setAssignedValue}{(}{valueNode}{)}}{.}{buildNameDeclarationStatement}{(}{declarationStatement}{)}}}{;}}}
{AST_ROOT_SC2NF{{(}{{parent}{.}{isForIn}{()}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{grandparent}{!=}{null}}{&&}{{grandparent}{.}{isVar}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testLoggerMethodCallByVariableType}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ParseTree}}{{right}{=}{{parseUnaryExpression}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{findModifiedParameters}{(}{{fnNode}{.}{getLastChild}{()}}{,}{null}{,}{names}{,}{unsafeNames}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testDirectPrototypeAssignment2}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testPropertyInference6}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getErrorManager}{()}}{.}{report}{(}{CheckLevel.ERROR}{,}{{JSError}{.}{make}{(}{AbstractCompiler.READ_ERROR}{,}{{getName}{()}}{)}}{)}}{;}}{{return}{SimpleDependencyInfo.EMPTY}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{AbstractCompiler.READ_ERROR}{,}{{sourceFile}{.}{getName}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{allowDupe}{=}{{VarCheck}{.}{hasDuplicateDeclarationSuppression}{(}{referenceNode}{,}{v}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testClosureTypesMultipleWarnings}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{ImmutableList}{.}{of}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty30}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TemplateAstMatcher}}{{astMatcher}{=}{{new}{{TemplateAstMatcher}}{(}{{compiler}{.}{getTypeIRegistry}{()}}{,}{templateRoot}{,}{TypeMatchingStrategy.LOOSE}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{fnThisType}{.}{isUnknownType}{()}}{?}{null}{:}{{fnThisType}{.}{toObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{IR}{.}{string}{(}{{modulePath}{.}{toString}{()}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{CheckMissingSuper}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checks}{.}{add}{(}{checkMissingSuper}{)}}{;}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkMissingSuper}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{visitInterfaceGetprop}{(}{t}{,}{assign}{,}{object}{,}{pname}{,}{lvalue}{,}{rvalue}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{visitGetProp}{(}{t}{,}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{enclosingNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{n}{,}{loopPredicate}{)}}}{;}}{{return}{{{enclosingNode}{!=}{null}}{&&}{{!}{{enclosingNode}{.}{isFunction}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Es6RewriteClass}}{(}{compiler}{,}{{!}{{{compiler}{.}{getOptions}{()}}{.}{inIncrementalCheckMode}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{JSTypeNative.BOOLEAN_TYPE}{)}}{,}{{typeRegistry}{.}{getType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{suppressors}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{DiagnosticGroupWarningsGuard}}{(}{{new}{{DiagnosticGroup}}{(}{DiagnosticGroups.CHECK_TYPES}{,}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{)}}{,}{CheckLevel.OFF}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{rewriteState}{.}{containsModule}{(}{legacyNamespace}{)}}}{)}{{{}{{{unrecognizedRequires}{.}{add}{(}{{new}{{UnrecognizedRequire}}{(}{call}{,}{legacyNamespace}{,}{false}{,}{false}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{inIncrementalCheckMode}{()}{{{}{{return}{{incrementalCheckMode}{!=}{IncrementalCheckMode.OFF}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{originalFunction}{=}{{functionContext.function}{.}{get}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{PotentialDeclaration}}{decl}}{:}{{{currentFile}{.}{getDeclarations}{()}}{.}{get}{(}{name}{)}}{)}{{{}{{{processDeclaration}{(}{decl}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{getRhs}{()}}{==}{null}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isConstToBeInferred}{(}{originalJsdoc}{,}{nameNode}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{isImport}{=}{{isImportRhs}{(}{rhs}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lhsToSplit}{.}{isDestructuringLhs}{()}}{&&}{{!}{{isImportRhs}{(}{{lhsToSplit}{.}{getLastChild}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{isConstToBeInferred}{(}{jsdoc}{,}{nameNode}{)}}{&&}{{!}{{nameNode}{.}{isFromExterns}{()}}}{&&}{{!}{{JsdocUtil}{.}{isPrivate}{(}{jsdoc}{)}}}}}
{AST_ROOT_SC2NF{{{{jsdoc}{==}{null}}{||}{{!}{{jsdoc}{.}{containsDeclaration}{()}}}}{||}{{ConvertToTypedInterface}{.}{isConstToBeInferred}{(}{jsdoc}{,}{jsdocNode}{)}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{caseBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{first}{.}{getString}{()}}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue2508576_1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassExtern}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLitExtern2}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectLitExtern1}{()}{{{}{{{String}}{{externs}{=}{STRING_CONSTANT}}{;}}{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{CompilerTypeTestCase.DEFAULT_EXTERNS}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{SHARED_EXTERNS}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{METHOD_DEFS}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{externs}{,}{source}{)}}{;}}{{{assertEquals}{(}{expected}{,}{found}{)}}{;}}{{{found}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{tester}{.}{testSame}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{ALL_NATIVE_EXTERN_TYPES}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{js}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{externs}{,}{code}{)}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{EXTERNS}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{testSameEs6Strict}{(}{{{String}}{js}}{)}{{{}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{testSame}{(}{js}{,}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testTypes}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{DEFAULT_EXTERNS}{.}{replace}{(}{STRING_CONSTANT}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{{StaticTypedSlot}}{<}{{JSType}}{>}}{>}}{{slots}{=}{{new}{{{LinkedHashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{declNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{coalescedName}{.}{getParentNode}{()}}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}{{{declNode}{.}{setToken}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{name}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{nameDecl}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{v}{.}{getNode}{()}}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{declNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{coalescedName}{.}{getParentNode}{()}}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}{{{declNode}{.}{setToken}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{name}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{nameDecl}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{v}{.}{getNode}{()}}{,}{{NodeUtil}{:}{:}{isNameDeclaration}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{add}{(}{{first}{.}{getNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFindExpressionRoot5}{()}{{{}{{{{assertThat}{(}{{findExpressionRoot}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{.}{isNull}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{isStringifiable}{(}{{{templatizedType}{.}{getTemplateTypes}{()}}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{that}{.}{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}{)}}{)}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}{else}{{{}{{return}{FALSE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{registerMismatchAndReport}{(}{n}{,}{INVALID_OPERAND_TYPE}{,}{msg}{,}{type}{,}{{getNativeType}{(}{NUMBER_TYPE}{)}}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{allValueTypes}}{=}{{typeRegistry}{.}{createUnionType}{(}{STRING_TYPE}{,}{NUMBER_TYPE}{,}{BOOLEAN_TYPE}{,}{NULL_TYPE}{,}{VOID_TYPE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{allDeps}{.}{addAll}{(}{{input}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{input}{.}{getKnownRequires}{()}}}
{AST_ROOT_SC2NF{{{writeJsArray}{(}{out}{,}{{info}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{input}{.}{addOrderedRequire}{(}{require}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Builder}}{setRequires}{(}{{{{Collection}}{<}{{String}}{>}}{requires}}{)}{;}}}
{AST_ROOT_SC2NF{{{{SimpleDependencyInfo}{.}{builder}{(}{CLOSURE_PATH}{,}{SRC_PATH}{)}}{.}{setProvides}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{.}{setRequires}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{public}{void}{addRequire}{(}{{{String}}{require}}{)}{{{}{{{extraRequires}{.}{add}{(}{require}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{require}}}
{AST_ROOT_SC2NF{{rootInput}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{userOrderedInput}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{{requires}{.}{addAll}{(}{{deps}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{require}}{:}{{dependency}{.}{getRequires}{()}}{)}{{{}{{{addDependency}{(}{require}{,}{seen}{,}{list}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGithubIssue2818}{()}{{{}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{{{inline}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{error}{(}{BAD_PRIVATE_PROPERTY_ACCESS}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{error}{(}{BAD_PRIVATE_PROPERTY_ACCESS}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{error}{(}{BAD_PRIVATE_PROPERTY_ACCESS}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_REQUIRE_FOR_GOOG_SCOPE}{,}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_REQUIRE_WARNING}{,}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_REQUIRE_WARNING}{,}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_REQUIRE_STRICT_WARNING}{,}{warningText}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{error}{(}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{,}{message}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testError}{(}{{srcs}{(}{js}{)}}{,}{{error}{(}{VarCheck.VAR_MULTIPLY_DECLARED_ERROR}{,}{message}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{{DEFAULT_EXTERNS}{+}{externs}}{)}}{,}{{srcs}{(}{js}{)}}{,}{{expected}{(}{expected}{)}}{,}{{warning}{(}{warning}{,}{description}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{expected}{(}{STRING_CONSTANT}{)}}{,}{{warning}{(}{e}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{{externs}{(}{externs}{)}}{,}{{srcs}{(}{js}{)}}{,}{{warning}{(}{warning}{,}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{{srcs}{(}{inputs}{)}}{,}{{warning}{(}{warning}{,}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{warning}{)}}{;}}{{{test}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{warning}{,}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{error}{)}}{;}}{{{test}{(}{{srcs}{(}{inputs}{)}}{,}{{error}{(}{error}{,}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{error}{)}}{;}}{{{test}{(}{{srcs}{(}{js}{)}}{,}{{error}{(}{error}{,}{description}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{srcs}{(}{js}{)}}{,}{{warning}{(}{MISSING_PROVIDE_WARNING}{,}{warning}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Builder}}{setRequires}{(}{{{{Collection}}{<}{{Require}}{>}}{requires}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{addRequire}{(}{{{Require}}{require}}{)}{{{}{{{extraRequires}{.}{add}{(}{require}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Require}}{require}}}
{AST_ROOT_SC2NF{{{allDeps}{.}{addAll}{(}{{input}{.}{getRequiredSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{input}{.}{getKnownRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{rootInput}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{{requires}{.}{addAll}{(}{{deps}{.}{getRequiredSymbols}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{require}}{:}{{dependency}{.}{getRequiredSymbols}{()}}{)}{{{}{{{addDependency}{(}{require}{,}{seen}{,}{list}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{SimpleDependencyInfo}{.}{builder}{(}{CLOSURE_PATH}{,}{SRC_PATH}{)}}{.}{setProvides}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{.}{setRequires}{(}{{ImmutableList}{.}{of}{(}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{,}{{googRequireSymbol}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{writeJsArray}{(}{out}{,}{{Require}{.}{asSymbolList}{(}{{info}{.}{getRequires}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{Require}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{userOrderedInput}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getRequiredSymbols}{()}}}
{AST_ROOT_SC2NF{{{}{{{input}{.}{addOrderedRequire}{(}{{Require}{.}{compilerModule}{(}{require}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{FeatureSet.Feature.MODULES}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{passes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{putBooleanProp}{(}{Node.GOOG_MODULE_ALIAS}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6ModulePass}{(}{factories}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{inline}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{inline}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{TemplateType}}{ignore}}{:}{{{obj}{.}{getTemplateTypeMap}{()}}{.}{getTemplateKeys}{()}}{)}{{{}{{{unknowns}{.}{add}{(}{{getNativeType}{(}{UNKNOWN_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue70b}{()}{{{}{{{args}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.ES6_FEATURE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue70a}{()}{{{}{{{args}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.ES6_FEATURE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{{rewriteGeneratorBody}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{hasChildren}{()}}{&&}{{{node}{.}{getLastChild}{()}}{.}{isString}{()}}}{)}{{{}{{{info.importedModules}{.}{add}{(}{{{node}{.}{getLastChild}{()}}{.}{getString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{{typedScopeCreator}{=}{{getTypedScopeCreator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{scopeCreator}{=}{{new}{{MemoizedTypedScopeCreator}}{(}{{new}{{TypedScopeCreator}}{(}{compiler}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{getTypedScopeCreator}{()}{{{}{{return}{typedScopeCreator}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MemoizedTypedScopeCreator}}{scopeCreator}}}
{AST_ROOT_SC2NF{{public}{abstract}{{Builder}}{setRequires}{(}{{{{Collection}}{<}{{String}}{>}}{requires}}{)}{;}}}
{AST_ROOT_SC2NF{{{{SimpleDependencyInfo}{.}{builder}{(}{CLOSURE_PATH}{,}{SRC_PATH}{)}}{.}{setProvides}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}{.}{setRequires}{(}{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{userOrderedInput}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{rootInput}{.}{getRequires}{()}}}
{AST_ROOT_SC2NF{{{requires}{.}{addAll}{(}{{deps}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{require}}{:}{{dependency}{.}{getRequires}{()}}{)}{{{}{{{addDependency}{(}{require}{,}{seen}{,}{list}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{writeJsArray}{(}{out}{,}{{info}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{String}}{>}}{getRequires}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{addRequire}{(}{{{String}}{require}}{)}{{{}{{{extraRequires}{.}{add}{(}{require}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{require}}}
{AST_ROOT_SC2NF{{{}{{{input}{.}{addOrderedRequire}{(}{require}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{allDeps}{.}{addAll}{(}{{input}{.}{getRequires}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{input}{.}{getKnownRequires}{()}}}
{AST_ROOT_SC2NF{{public}{boolean}{shouldPreservesGoogProvidesAndRequires}{()}{{{}{{return}{{{this}{.}{preserveClosurePrimitives}}{||}{{this}{.}{shouldGenerateTypedExterns}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{inline}{(}{{lines}{(}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNoInlineGetEle}{()}{{{}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testNoInlineGetProp}{()}{{{}{{{noInline}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{{StaticTypedScope}}{<}{{JSType}}{>}}{getParentScope}{()}{{{}{{return}{{{getFunctionScope}{()}}{.}{getParentScope}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Scope}}{usageScope}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{provides}{=}{{Lists}{.}{newArrayList}{(}{{depInfo}{.}{getProvides}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{nullOrUndefined}}{=}{{typeRegistry}{.}{createUnionType}{(}{NULL_TYPE}{,}{VOID_TYPE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{testForEquality}{(}{that}{)}}{.}{equals}{(}{UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.OFF}{)}}{;}}}
{AST_ROOT_SC2NF{{{rewriteGeneratorBodyWithVars}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{context}{.}{writeGeneratedNode}{(}{{{IR}{.}{ifNode}{(}{condition}{,}{{context}{.}{createJumpToBlock}{(}{startCase}{,}{n}{)}}{)}}{.}{useSourceInfoFrom}{(}{n}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{IR}{.}{ifNode}{(}{{{IR}{.}{not}{(}{condition}{)}}{.}{useSourceInfoFrom}{(}{condition}{)}}{,}{{context}{.}{createJumpToBlock}{(}{endCase}{,}{n}{)}}{)}}{.}{useSourceInfoFrom}{(}{n}{)}}}
{AST_ROOT_SC2NF{{{IR}{.}{ifNode}{(}{{{IR}{.}{not}{(}{condition}{)}}{.}{useSourceInfoFrom}{(}{condition}{)}}{,}{{context}{.}{createJumpToBlock}{(}{endCase}{,}{n}{)}}{)}}{.}{useSourceInfoFrom}{(}{n}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES_NEXT}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs2018Passes}{(}{passes}{)}}{;}}{{{passes}{.}{add}{(}{{setFeatureSet}{(}{ES8}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEsNextMessage}{(}{Feature.OBJECT_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{parseWarning}{(}{STRING_CONSTANT}{,}{{getRequiresEsNextMessage}{(}{Feature.OBJECT_PATTERN_REST}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES_NEXT}{)}}{)}{{{}{{{TranspilationPasses}{.}{addEs2018Passes}{(}{checks}{)}}{;}}{{{checks}{.}{add}{(}{{setFeatureSet}{(}{ES8}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{rhs}{.}{isQualifiedName}{()}}{||}{{NodeUtil}{.}{isCallTo}{(}{rhs}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replacements}{.}{isEmpty}{()}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{allJsDocParams}{=}{{{(}{{info}{==}{null}}{)}}{?}{{new}{{{HashSet}}{<}{{String}}{>}}{()}}{:}{{new}{{{HashSet}}{<>}}{(}{{info}{.}{getParameterNames}{()}}{)}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{typeRegistry}{.}{getType}{(}{dottedName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{metadata}{.}{getCompiler}{()}}{.}{getTypeRegistry}{()}}{.}{getType}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{mathType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{registry}{.}{getType}{(}{typeName}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{domHelperType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{compiler}{,}{requirement}{)}{;}}{{{errorObjType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getType}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{methodClassType}{=}{{registry}{.}{getType}{(}{r.type}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{typeWithBannedProp}{=}{{registry}{.}{getType}{(}{prop.type}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TypeI}}{{type}{=}{{registry}{.}{getType}{(}{typeName}{)}}}{;}}{{if}{(}{{type}{!=}{null}}{)}{{{}{{{types}{.}{add}{(}{type}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{methodClassType}{=}{{registry}{.}{getType}{(}{className}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Scope}}{{scope}{=}{{t}{.}{getScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6Passes}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{{{ImmutableList.Builder}}{<}{{Callback}}{>}}{{callbacks}{=}{{ImmutableList}{.}{<}{{Callback}}{>}{builder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{parent}{.}{isAssign}{()}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{getProp}}}{&&}{{{{{parent}{.}{getFirstChild}{()}}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{{parent}{.}{isAssign}{()}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{getProp}}}{&&}{{{{getProp}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{declNode}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{coalescedName}{.}{getParentNode}{()}}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}{{{declNode}{.}{setToken}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{var}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{name}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{nameDecl}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{{v}{.}{getNode}{()}}{,}{NodeUtil.isNameDeclaration}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StreamSupport}{.}{stream}{(}{{fixChoices}{.}{spliterator}{()}}{,}{false}{)}}{.}{map}{(}{{{choices}}{-}{>}{{{choices}{.}{getAlternatives}{()}}{.}{get}{(}{choiceIndex}{)}}}{)}}}
{AST_ROOT_SC2NF{{{StreamSupport}{.}{stream}{(}{{fixChoices}{.}{spliterator}{()}}{,}{false}{)}}{.}{map}{(}{{{f}}{-}{>}{{{f}{.}{getAlternatives}{()}}{.}{size}{()}}}{)}}}
{AST_ROOT_SC2NF{{{newVar}{=}{{scopeToDeclareIn}{.}{declare}{(}{variableName}{,}{n}{,}{type}{,}{input}{,}{inferred}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{Keywords}{.}{isKeyword}{(}{importedName.value}{)}}{)}{{{}{{{reportError}{(}{importedName}{,}{STRING_CONSTANT}{,}{importedName.value}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Keywords}{.}{isKeyword}{(}{importedName.value}{)}}{)}{{{}{{{reportExpectedError}{(}{null}{,}{PredefinedName.AS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{scanner}}{=}{{new}{{Scanner}}{(}{errorReporter}{,}{commentRecorder}{,}{source}{,}{offset}{)}}}{;}}}
{AST_ROOT_SC2NF{{{testNotEs6Typed}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNotEs6Typed}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{testNotEs6Typed}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{parse}{(}{STRING_CONSTANT}{)}}{;}}{{{expectErrors}{(}{STRING_CONSTANT}{)}}{;}}{{{parse}{(}{STRING_CONSTANT}{)}}{;}}{{{testNotEs6Typed}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{nameNode}{.}{isName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Case}}{currentCase}}{:}{allCases}{)}{{{}{{{switchNode}{.}{addChildToBack}{(}{currentCase.caseNode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{currentCase.embedInto}{.}{replaceWith}{(}{{currentCase.caseBlock}{.}{detach}{()}}{)}}{;}}{{{it}{.}{remove}{()}}{;}}{continue;}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{context}}{=}{{new}{{TranspilationContext}}{(}{originalGeneratorBody}{)}}}{;}}}
{AST_ROOT_SC2NF{{ImmutableSortedSet}{.}{copyOf}{(}{ENTRY_COMPARATOR}{,}{{map}{.}{entrySet}{()}}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{modulePaths}}{=}{{resolvePaths}{(}{{Iterables}{.}{transform}{(}{{Iterables}{.}{transform}{(}{inputs}{,}{UNWRAP_DEPENDENCY_INFO}{)}}{,}{pathResolver}{)}}{,}{moduleRootPaths}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{cache}}{=}{{builder}{.}{build}{(}{{CacheLoader}{.}{from}{(}{{{source}}{-}{>}{{delegate}{.}{transform}{(}{source}{)}}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{x}}{-}{>}{{transform}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{x}}{-}{>}{{function}{.}{apply}{(}{x}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{Predicates}{.}{<}{{{DiGraphEdge}}{<}{{Node}}{,}{{ControlFlowGraph.Branch}}{>}}{>}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{return}{{NodeUtil}{.}{has}{(}{node}{,}{pred}{,}{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{compiler}{,}{behavior}{,}{creator}{,}{{Predicates}{.}{<}{{Var}}{>}{alwaysTrue}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{NodeUtil}{.}{has}{(}{callNode}{,}{hasSpreadCallArgumentPredicate}{,}{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{!}{referencesArguments}}{&&}{{!}{{NodeUtil}{.}{has}{(}{block}{,}{p}{,}{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{result}{==}{null}}{?}{{ImmutableList}{.}{<}{{Symbol}}{>}{of}{()}}{:}{{ImmutableList}{.}{of}{(}{result}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{customPasses}{==}{null}}{)}{{{}{{{customPasses}{=}{{LinkedHashMultimap}{.}{<}{{CustomPassExecutionTime}}{,}{{CompilerPass}}{>}{create}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{typeNode}}{:}{{info}{.}{getTypeNodes}{()}}{)}{{{}{{{NodeUtil}{.}{visitPreOrder}{(}{typeNode}{,}{fixJsdocTypeNodes}{,}{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{maybeAddUsage}{(}{t}{,}{n}{,}{typeNode}{,}{false}{,}{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{{}{{return}{{eval}{(}{ttlAst}{,}{typeVars}{,}{{ImmutableMap}{.}{<}{{String}}{,}{{String}}{>}{of}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Ref}}{>}}{getRefs}{()}{{{}{{return}{{{refs}{==}{null}}{?}{{ImmutableList}{.}{<}{{Ref}}{>}{of}{()}}{:}{refs}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{chars}{==}{null}}{?}{{ImmutableSet}{.}{<}{{Character}}{>}{of}{()}}{:}{{ImmutableSet}{.}{copyOf}{(}{{Chars}{.}{asList}{(}{chars}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{reserved}{=}{{{previousMap}{!=}{null}}{?}{{{previousMap}{.}{getNewNameToOriginalNameMap}{()}}{.}{keySet}{()}}{:}{{Collections}{.}{<}{{String}}{>}{emptySet}{()}}}}}
{AST_ROOT_SC2NF{{return}{{{invocation}{.}{hasOneChild}{()}}{?}{{ImmutableList}{.}{<}{{Node}}{>}{of}{()}}{:}{{{invocation}{.}{getSecondChild}{()}}{.}{siblings}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{node}{,}{{new}{{MatchNameNode}}{(}{name}{)}}{,}{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}}
{AST_ROOT_SC2NF{{{Arrays}{.}{sort}{(}{arr}{,}{{Ordering}{.}{<}{{String}}{>}{natural}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{typeNode}}{:}{{info}{.}{getTypeNodes}{()}}{)}{{{}{{{NodeUtil}{.}{visitPreOrder}{(}{typeNode}{,}{replaceJsDocRefs}{,}{{Predicates}{.}{<}{{Node}}{>}{alwaysTrue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{ImmutableSet}{.}{<}{{String}}{>}{of}{()}}}
{AST_ROOT_SC2NF{{invalidations}{=}{{{{FluentIterable}{.}{from}{(}{{invalidationMap}{.}{get}{(}{t}{)}}{)}}{.}{transform}{(}{{Suppliers}{.}{<}{{JSError}}{>}{supplierFunction}{()}}{)}}{.}{limit}{(}{MAX_INVALIDATION_WARNINGS_PER_PROPERTY}{)}}}}
{AST_ROOT_SC2NF{{{{this}{.}{invalidationMap}}{=}{{{propertiesToErrorFor}{.}{isEmpty}{()}}{?}{null}{:}{{LinkedHashMultimap}{.}{<}{{TypeI}}{,}{{{Supplier}}{<}{{JSError}}{>}}{>}{create}{()}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{JSTypeExpression}}{(}{typeNode}{,}{PolymerPass.VIRTUAL_FILE}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{registry}{.}{getType}{(}{{{target}{.}{getFirstFirstChild}{()}}{.}{getQualifiedName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{JSType}}{{voidType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getNativeType}{(}{JSTypeNative.VOID_TYPE}{)}}}{;}}{{return}{{voidType}{.}{isSubtype}{(}{returnType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isTheObjectType}{()}}{||}{{isStringObjectType}{()}}{||}{{isDateType}{()}}{||}{{isRegexpType}{()}}{||}{{isArrayType}{()}}{||}{{isNumberObjectType}{()}}{||}{{isBooleanObjectType}{()}}{||}{{hasOverridenNativeProperty}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{matchesNumberContext}{()}{{{}{{return}{{{isNumberObjectType}{()}}{||}{{isDateType}{()}}{||}{{isBooleanObjectType}{()}}{||}{{isStringObjectType}{()}}{||}{{hasOverridenNativeProperty}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getType}{(}{typeName}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty33}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty22}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty21}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty18}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty15}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty12}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty11}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty10}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testMissingProperty9}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSTypeExpression}}{{expr}{=}{{new}{{JSTypeExpression}}{(}{{getCallArgument}{(}{ttlAst}{,}{NUMBER_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES6}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES6}{)}}{)}{{{}{{{passes}{.}{add}{(}{optimizeToEs6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.dartPass}{&&}{{!}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES6}{)}}}}{)}{{{}{{{checks}{.}{add}{(}{dartSuperAccessorsPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getDefaultOptions}{()}}}{;}}{{{options}{.}{setLanguageIn}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{options}{.}{setLanguageOut}{(}{LanguageMode.ECMASCRIPT5}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{{nameNode}{.}{getFirstChild}{()}}{!=}{null}}{||}{{isLhsOfEnhancedForExpression}{(}{nameNode}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{pos}{>=}{{js}{.}{length}{()}}}{)}{{{}{{return}{null}{;}}{}}}{else}{{{}{{return}{{js}{.}{substring}{(}{pos}{,}{{js}{.}{length}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{isQuotedString}{()}}{||}{{{node}{.}{getFirstChild}{()}}{==}{null}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{Collections}{.}{sort}{(}{declList}{,}{DECLARATIONS_FIRST}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{newType}{=}{{{objType}{.}{getTemplateTypes}{()}}{.}{get}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{redeclareSimpleVar}{(}{informed}{,}{item}{,}{newType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{t}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{t}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{abstract}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{t}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{;}}}
{AST_ROOT_SC2NF{{{ErrorReporter}}{t}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{JSType}}{resolveInternal}{(}{{{ErrorReporter}}{t}}{,}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModulesToCommonJsModules}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{String}}{transpileEs6Module}{(}{{{String}}{s}}{)}{{{}{{return}{{transpile}{(}{{transpile}{(}{s}{,}{es6ModuleTranspiler}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{that}{.}{isUnknownType}{()}}{||}{{that}{.}{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}{)}}{)}}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{isUnknownType}{()}}{||}{{t}{.}{isNoResolvedType}{()}}{||}{{!}{{t}{.}{isSubtype}{(}{type}{)}}}}{)}{{{}{{{restricted}{.}{addAlternate}{(}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{alternate}{.}{isUnknownType}{()}}}{&&}{{that}{.}{isSubtype}{(}{alternate}{)}}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isStructural}{&&}{{!}{thisUnresolved}}{&&}{{!}{thatUnresolved}}}{)}{{{}{{return}{{rightType}{.}{isSubtype}{(}{leftType}{)}}{;}}{}}}{else}{{{}{{return}{{rightType}{.}{isSubtypeWithoutStructuralTyping}{(}{leftType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{.}{isSubtype}{(}{{getNativeType}{(}{ARRAY_TYPE}{)}}{)}}{?}{null}{:}{type}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{arrayType}{=}{{getNativeType}{(}{ARRAY_TYPE}{)}}}{;}}{{return}{{{arrayType}{.}{isSubtype}{(}{type}{)}}{?}{arrayType}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{resultEqualsValue}{)}{{{}{{return}{{ctorType}{.}{getGreatestSubtype}{(}{type}{)}}{;}}{}}}{else}{{{}{{return}{{{type}{.}{isSubtype}{(}{ctorType}{)}}{?}{null}{:}{type}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{x}{.}{isSubtype}{(}{{windowCtor}{.}{getInstanceType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{x}{.}{isSubtype}{(}{{windowCtor}{.}{getInstanceType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{y}{.}{isSubtype}{(}{{getNativeType}{(}{STRING_TYPE}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{this}{.}{isSubtype}{(}{rawThat}{)}}{)}{{{}{{return}{this}{;}}{}}}{else}{{if}{(}{{rawThat}{.}{isSubtype}{(}{this}{)}}{)}{{{}{{return}{{filterNoResolvedType}{(}{rawThat}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{unknown}{.}{isSubtype}{(}{STRING_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{NULL_TYPE}{.}{isSubtype}{(}{nullOrUnknown}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{argType}{.}{isSubtype}{(}{paramType}{)}}}}
{AST_ROOT_SC2NF{{!}{{rightType}{.}{isSubtype}{(}{leftType}{)}}}}
{AST_ROOT_SC2NF{{{!}{{leftType}{.}{isNoType}{()}}}{&&}{{!}{{rightType}{.}{isSubtype}{(}{leftType}{)}}}}}
{AST_ROOT_SC2NF{{{!}{{switchType}{.}{canTestForShallowEqualityWith}{(}{caseType}{)}}}{&&}{{(}{{{{caseType}{.}{autoboxesTo}{()}}{==}{null}}{||}{{!}{{{caseType}{.}{autoboxesTo}{()}}{.}{isSubtype}{(}{switchType}{)}}}}{)}}}}
{AST_ROOT_SC2NF{{{!}{{type}{.}{isNoType}{()}}}{&&}{{!}{{type}{.}{isUnknownType}{()}}}{&&}{{type}{.}{isSubtype}{(}{nullOrUndefined}{)}}{&&}{{!}{{containsForwardDeclaredUnresolvedName}{(}{type}{)}}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtype}{(}{{getNativeType}{(}{NUMBER_STRING_SYMBOL}{)}}{)}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtype}{(}{{getNativeType}{(}{NUMBER_STRING}{)}}{)}}}}
{AST_ROOT_SC2NF{{{!}{{type}{.}{matchesNumberContext}{()}}}{&&}{{!}{{type}{.}{isSubtype}{(}{allBitwisableValueTypes}{)}}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtype}{(}{{getNativeType}{(}{NUMBER_TYPE}{)}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{anyObjectType}{.}{isSubtype}{(}{type}{)}}}{&&}{{!}{{type}{.}{isEmptyType}{()}}}}{)}{{{}{{{mismatch}{(}{t}{,}{n}{,}{msg}{,}{type}{,}{anyObjectType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{funcTarget}{.}{hasInstanceType}{()}}{)}{{{}{{if}{(}{{type}{.}{isSubtype}{(}{{funcTarget}{.}{getInstanceType}{()}}{)}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{type}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{objType}{.}{isNoType}{()}}}{&&}{{!}{{objType}{.}{isUnknownType}{()}}}{&&}{{objType}{.}{isSubtype}{(}{{getNativeType}{(}{NULL_VOID}{)}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{castType}{.}{restrictByNotNullOrUndefined}{()}}{.}{isSubtype}{(}{exprType}{)}}{||}{{expr}{.}{isObjectLit}{()}}}{)}{{{}{{{expr}{.}{setJSType}{(}{castType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmptyType}{()}}{||}{{that}{.}{isEmptyType}{()}}}{)}{{{}{{return}{{{isSubtype}{(}{that}{)}}{||}{{that}{.}{isSubtype}{(}{this}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{alternate}{=}{{alternatesList}{.}{get}{(}{i}{)}}}{;}}{{if}{(}{{alternate}{.}{isSubtype}{(}{arrayType}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isSymbol}{()}{{{}{{return}{{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.SYMBOL_VALUE_OR_OBJECT_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isNumber}{()}{{{}{{return}{{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isString}{()}{{{}{{return}{{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{that}{.}{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN_SYMBOL}{)}}{)}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{type}{.}{isSubtype}{(}{{typeRegistry}{.}{getNativeType}{(}{OBJECT_TYPE}{)}}{)}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{STRING_CONSTANT}{+}{varType}{+}{STRING_CONSTANT}{+}{name}{+}{STRING_CONSTANT}{+}{type}{+}{STRING_CONSTANT}}{,}{{varType}{.}{isSubtype}{(}{type}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{BooleanOutcomePair}}{(}{{jsType}{.}{getPossibleToBooleanOutcomes}{()}}{,}{{{{registry}{.}{getNativeType}{(}{BOOLEAN_TYPE}{)}}{.}{isSubtype}{(}{jsType}{)}}{?}{BooleanLiteralSet.BOTH}{:}{BooleanLiteralSet.EMPTY}}{,}{flowScope}{,}{flowScope}{)}}{;}}}
{AST_ROOT_SC2NF{{{outcome.booleanValues}{==}{BooleanLiteralSet.EMPTY}}{&&}{{{getNativeType}{(}{BOOLEAN_TYPE}{)}}{.}{isSubtype}{(}{type}{)}}}}
{AST_ROOT_SC2NF{{argObjectType}{.}{isSubtype}{(}{referencedParamType}{)}}}
{AST_ROOT_SC2NF{{{!}{{jsType}{.}{isUnknownType}{()}}}{&&}{{!}{{jsType}{.}{isAllType}{()}}}{&&}{{jsType}{.}{isSubtype}{(}{providedJsType}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{that}{.}{isUnknownType}{()}}{||}{{that}{.}{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN}{)}}{)}}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{JSType}}{{voidType}{=}{{{compiler}{.}{getTypeRegistry}{()}}{.}{getNativeType}{(}{JSTypeNative.VOID_TYPE}{)}}}{;}}{{return}{{voidType}{.}{isSubtype}{(}{returnType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{that}{.}{isUnknownType}{()}}{||}{{that}{.}{isSubtype}{(}{{getNativeType}{(}{JSTypeNative.NUMBER_STRING_BOOLEAN}{)}}{)}}{||}{{that}{.}{isObject}{()}}}{)}{{{}{{return}{UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{arrayOfString}{.}{isSubtype}{(}{{createUnionType}{(}{arrayOfNumber}{,}{NULL_VOID}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isSubtype}{(}{{{JSType}}{that}}{)}{{{}{{return}{{isSubtype}{(}{that}{,}{{ImplCache}{.}{create}{()}}{,}{SubtypingMode.NORMAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{thisType}{.}{isSubtype}{(}{thatType}{)}}{||}{{thatType}{.}{isSubtype}{(}{thisType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{thisType}{.}{isFunctionType}{()}}{)}{{{}{{return}{true}{;}}{}}}{else}{{{}{{return}{{{thisType}{.}{isSubtype}{(}{functionType}{)}}{||}{{functionType}{.}{isSubtype}{(}{thisType}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{options}{.}{setLanguageIn}{(}{CompilerOptions.LanguageMode.ECMASCRIPT_2015}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{isConstToBeInferred}{()}{{{}{{return}{{isConstToBeInferred}{(}{{getJsDoc}{()}}{,}{{getLhs}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{maybeWarnForConstWithoutExplicitType}{(}{compiler}{,}{jsdoc}{,}{nameNode}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{astValidationEnabled}{)}{{{}{{{{(}{{new}{{AstValidator}}{(}{compiler}{)}}{)}}{.}{validateRoot}{(}{root}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{PureFunctionIdentifier.DriverInJ2cl}}{(}{compiler}{,}{null}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNameToLocalQName}{.}{put}{(}{name}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNameToLocalQName}{.}{put}{(}{name}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{exportedNameToLocalQName}{.}{put}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Map.Entry}}{<}{{String}}{,}{{String}}{>}}{entry}}}
{AST_ROOT_SC2NF{{{functionNames}{=}{compilerState.functioNames}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functioNames}}{=}{compiler.functionNames}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{moduleScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{moduleScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{blockScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fooScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{forOfScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{functionBlockScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{functionScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{functionBlockScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{FlagUsageException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessage}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{s}{!=}{null}}{?}{s}{:}{{createScope}{(}{n}{,}{{createScope}{(}{{NodeUtil}{.}{getEnclosingScopeRoot}{(}{{n}{.}{getParent}{()}}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeInference}}{{dfa}{=}{{new}{{TypeInference}}{(}{compiler}{,}{cfg}{,}{rai}{,}{assumedScope}{,}{ASSERTION_FUNCTION_MAP}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{{v}{!=}{null}}{&&}{{v}{.}{isLocal}{()}}}{&&}{{v}{.}{isMarkedEscaped}{()}}}{&&}{{{v}{.}{getScope}{()}}{==}{syntacticScope}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnflowable}{(}{{syntacticScope}{.}{getVar}{(}{varName}{)}}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{isLocallyInferred}{=}{{(}{{var}{!=}{{syntacticScope}{.}{getSlot}{(}{qualifiedName}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ttlObj}{=}{{new}{{TypeTransformation}}{(}{compiler}{,}{syntacticScope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{syntacticScope}{.}{getVar}{(}{qKeyName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{syntacticScope}{.}{getVar}{(}{qName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{syntacticScope}{.}{getVar}{(}{varName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{{info}{.}{getType}{()}}{.}{evaluate}{(}{syntacticScope}{,}{registry}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{info}{!=}{null}}{&&}{{info}{.}{hasType}{()}}}{)}{{{}{{{n}{.}{setJSType}{(}{{{info}{.}{getType}{()}}{.}{evaluate}{(}{syntacticScope}{,}{registry}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{rename}{)}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{js}{,}{{new}{{Renamer}}{(}{compiler}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{registry}{.}{createNullableType}{(}{{registry}{.}{getType}{(}{STRING_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{registry}{,}{reference}{,}{sourceName}{,}{lineno}{,}{charno}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{resolvedNamedTypes}{.}{putAll}{(}{scope}{,}{{unresolvedNamedTypes}{.}{removeAll}{(}{scope}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clearNamedTypes}{()}{{{}{{{resolvedNamedTypes}{.}{clear}{()}}{;}}{{{unresolvedNamedTypes}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{!}{{name}{.}{contains}{(}{STRING_CONSTANT}{)}}}{,}{STRING_CONSTANT}{)}}{;}}{{{namesToTypes}{.}{put}{(}{name}{,}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{findNameType}{(}{STRING_CONSTANT}{,}{lastLocalScope}{)}}{.}{isEquivalentTo}{(}{{registry}{.}{getType}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{{jsdoc}{.}{getImplementedInterfaces}{()}}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{types}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{interfaces}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{jsdoc}{.}{getBaseType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{{parse}{(}{STRING_CONSTANT}{)}}{.}{getBaseType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{interfaces}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{createNullableType}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createNamedType}{(}{STRING_CONSTANT}{,}{null}{,}{{-}{NUMBER_CONSTANT}}{,}{{-}{NUMBER_CONSTANT}}{)}}{,}{{info}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{newType}{.}{isEquivalentTo}{(}{varType}{)}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{expected}{,}{{resolve}{(}{actual}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{checkEquivalenceHelper}{(}{that}{,}{EquivalenceMethod.DATA_FLOW}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{constructorI}{.}{checkEquivalenceHelper}{(}{constructorJ}{,}{EquivalenceMethod.IDENTITY}{)}}{)}{{{}{{{shouldCheck}{=}{false}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{Functions}{.}{<}{{String}}{>}{identity}{()}}{,}{errorManager}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{ast}{=}{{parseSyntheticCode}{(}{{STRING_CONSTANT}{+}{resourceName}{+}{STRING_CONSTANT}}{,}{originalCode}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{scope}{.}{isDeclared}{(}{NodeUtil.JSC_PROPERTY_NAME_FN}{,}{true}{)}}}{)}{{{}{{{scope}{.}{declare}{(}{NodeUtil.JSC_PROPERTY_NAME_FN}{,}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{scope}{.}{isDeclared}{(}{qName}{,}{false}{)}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{!}{{scope}{.}{isDeclared}{(}{qName}{,}{false}{)}}}{&&}{{n}{.}{isUnscopedQualifiedName}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{name}{.}{isEmpty}{()}}}{&&}{{!}{{usageScope}{.}{isDeclared}{(}{name}{,}{true}{)}}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{t}{.}{getScope}{()}}{.}{isDeclared}{(}{alias}{,}{true}{)}}{)}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{n}{,}{TYPE_ALIAS_ALREADY_DECLARED}{,}{alias}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isName}{()}}{&&}{{!}{{{t}{.}{getScope}{()}}{.}{isDeclared}{(}{{n}{.}{getString}{()}}{,}{true}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{current}{.}{isDeclared}{(}{oldName}{,}{false}{)}}{)}{{{}{return;}{}}}{else}{{{}{{{current}{=}{{current}{.}{getParent}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{fooScope}{.}{isDeclared}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{getRootNode}{()}}{.}{isFunction}{()}}}{)}{{{}{{return}{{{getClosestNonBlockScope}{()}}{.}{getTypeOfThis}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{{v}{!=}{null}}{&&}{{v}{.}{isLocal}{()}}}{&&}{{v}{.}{isMarkedEscaped}{()}}}{&&}{{{{v}{.}{getScope}{()}}{.}{getClosestNonBlockScope}{()}}{==}{cfgRootScope}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{cfgRootScope}}{=}{syntacticScope}}{;}}}
{AST_ROOT_SC2NF{{while}{(}{{{t}{.}{getScope}{()}}{.}{isDeclared}{(}{pseudoName}{,}{true}{)}}{)}{{{}{{{pseudoName}{+=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{varsInFunctionBody}{.}{contains}{(}{refName}{)}}{&&}{{!}{{scope}{.}{isDeclared}{(}{refName}{,}{true}{)}}}}}
{AST_ROOT_SC2NF{{curScope}{.}{isDeclared}{(}{assignment.oldName}{,}{true}{)}}}
{AST_ROOT_SC2NF{{{{AbstractVar}}{<}{?}{,}{?}{>}}{{var}{=}{{{getSubject}{()}}{.}{getVar}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{AbstractVar}}{<}{?}{,}{?}{>}}{{var}{=}{{{getSubject}{()}}{.}{getVar}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isUnflowable}{(}{{currentScope}{.}{getVar}{(}{varName}{)}}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{isLocallyInferred}{=}{{(}{{var}{!=}{{currentScope}{.}{getSlot}{(}{qualifiedName}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{backwardsInferenceFromCallSite}{(}{n}{,}{ct}{)}}{;}}}
{AST_ROOT_SC2NF{{{backwardsInferenceFromCallSite}{(}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{var}{=}{{currentScope}{.}{getVar}{(}{qKeyName}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{unflowable}{=}{{isInferred}{&&}{{isUnflowable}{(}{{currentScope}{.}{getVar}{(}{varName}{)}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{{info}{.}{getType}{()}}{.}{evaluate}{(}{currentScope}{,}{registry}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{MODULE_EXPORTS_PREFIX}{+}{{{this}{.}{legacyNamespace}}{.}{replace}{(}{CHAR_CONS}{,}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{t}{.}{inModuleHoistScope}{()}}}{)}{{{}{{{t}{.}{report}{(}{n}{,}{GOOG_MODULE_USES_GOOG_MODULE_GET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{,}{null}{,}{false}{,}{ResolutionMode.BROWSER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{t}{.}{inModuleHoistScope}{()}}}{)}{{{}{{{t}{.}{report}{(}{n}{,}{MODULE_USES_GOOG_MODULE_GET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{getBinaryModuleNamespace}{(}{legacyNamespace}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{{DEFAULT_EXTERNS}{+}{externs}}{)}}{,}{{srcs}{(}{js}{)}}{,}{{{error}{(}{DisambiguateProperties.Warnings.INVALIDATION_ON_TYPE}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{{externs}{(}{{DEFAULT_EXTERNS}{+}{externs}}{)}}{,}{{srcs}{(}{js}{)}}{,}{{{error}{(}{DisambiguateProperties.Warnings.INVALIDATION_ON_TYPE}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{{error}{(}{DisambiguateProperties.Warnings.INVALIDATION}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{test}{(}{{srcs}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{{error}{(}{DisambiguateProperties.Warnings.INVALIDATION}{)}}{.}{withMessageContaining}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{fnVar}{=}{{scope}{.}{getVar}{(}{fnName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{rootNode}{=}{{scope}{.}{getRootNode}{()}}}{;}}}
{AST_ROOT_SC2NF{{private}{GlobalScopeBuilder}{(}{{{TypedScope}}{scope}}{)}{{{}{{super}{(}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{scope}{.}{hasOwnSlot}{(}{qName}{)}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{ownerVar}{=}{{scope}{.}{getVar}{(}{slotName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypedVar}}{{slot}{=}{{scope}{.}{getVar}{(}{name}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{rValueInfo}{.}{getType}{()}}{.}{evaluate}{(}{scope}{,}{typeRegistry}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{createEnumTypeFromNodes}{(}{rValue}{,}{{lValue}{.}{getQualifiedName}{()}}{,}{info}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{scope}{.}{isGlobal}{()}}{||}{{!}{{type}{.}{isReturnTypeInferred}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{{{parent}{==}{null}}{||}{{!}{{parent}{.}{isFunction}{()}}}}{||}{{n}{==}{{parent}{.}{getFirstChild}{()}}}}{||}{{parent}{==}{{scope}{.}{getRootNode}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{getFunctionScope}{()}}{!=}{{that}{.}{getFunctionScope}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{slot}{!=}{null}}{?}{slot}{:}{{{getFunctionScope}{()}}{.}{getSlot}{(}{{var}{.}{getName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getSlot}{(}{{getVarFromFunctionScope}{(}{name}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ScopedName}}{{var}{=}{{getVarFromFunctionScope}{(}{symbol}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{LinkedFlowScope}}{(}{{new}{{FlatFlowScopeCache}}{(}{scope}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{!=}{null}}{)}{{{}{{{type}{=}{{type}{.}{resolve}{(}{errorReporter}{,}{scope}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{{TemplateType}}{getObjectIndexKey}{()}{{{}{{{checkNotNull}{(}{iObjectIndexTemplateKey}{)}}{;}}{{return}{{this}{.}{iObjectIndexTemplateKey}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TemplateType}}{getObjectElementKey}{()}{{{}{{return}{{this}{.}{iObjectElementTemplateKey}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{new}{{InvalidatingTypes.Builder}}{(}{registry}{)}}{.}{recordInvalidations}{(}{{this}{.}{invalidationMap}}{)}}{.}{addTypesInvalidForPropertyRenaming}{()}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getTypeMismatches}{()}}{)}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{NodeUtil}{.}{getEnclosingNode}{(}{n}{,}{{TypeInference}{:}{:}{createsContainerScope}}{)}}}{;}}}
{AST_ROOT_SC2NF{{AbstractScope}{(}{{{Node}}{rootNode}}{)}{{{}{{{{this}{.}{rootNode}}{=}{rootNode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{&&}{{t}{.}{inModuleHoistScope}{()}}}{)}{{{}{{{t}{.}{report}{(}{n}{,}{GOOG_MODULE_USES_GOOG_MODULE_GET}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteModules}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{MODULE_EXPORTS_PREFIX}{+}{{{this}{.}{legacyNamespace}}{.}{replace}{(}{CHAR_CONS}{,}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{moduleType}{==}{ModuleType.GOOG_MODULE}}{)}{{{}{{{moduleType}{=}{ModuleType.LEGACY_GOOG_MODULE}}{;}}{}}}{else}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{declaresNamespace}{,}{DECLARE_LEGACY_NAMESPACE_OUTSIDE_GOOG_MODULE}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{Keywords}{.}{isKeyword}{(}{name.value}{)}}{)}{{{}{{{features}{=}{{features}{.}{with}{(}{Feature.KEYWORDS_AS_PROPERTIES}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{moduleType}{==}{ModuleType.GOOG_MODULE}}{)}{{{}{{{moduleType}{=}{ModuleType.LEGACY_GOOG_MODULE}}{;}}{}}}{else}{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{declaresLegacyNamespace}{,}{DECLARE_LEGACY_NAMESPACE_OUTSIDE_GOOG_MODULE}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isVar}{()}}{)}{{{}{{return}{{n}{.}{getFirstChild}{()}}{;}}{}}}{else}{{if}{(}{{NodeUtil}{.}{isExprAssign}{(}{n}{)}}{)}{{{}{{return}{{n}{.}{getFirstFirstChild}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{child}{.}{isVar}{()}}}{&&}{{!}{{NodeUtil}{.}{isExprAssign}{(}{child}{)}}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{parent}{!=}{null}}{&&}{{parent}{.}{isVar}{()}}}}
{AST_ROOT_SC2NF{{{Node}}{{node}{=}{{withType}{(}{{{IR}{.}{number}{(}{id}{)}}{.}{useSourceInfoFrom}{(}{sourceNode}{)}}{,}{numberType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{sourceNode}{.}{replaceWith}{(}{{IR}{.}{breakNode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{IR}{.}{block}{(}{{callContextMethodResult}{(}{sourceNode}{,}{STRING_CONSTANT}{,}{{section}{.}{getNumber}{(}{sourceNode}{)}}{)}}{,}{{{IR}{.}{breakNode}{()}}{.}{useSourceInfoFrom}{(}{sourceNode}{)}}{)}}{.}{useSourceInfoFrom}{(}{sourceNode}{)}}}
{AST_ROOT_SC2NF{{{}{{{writeGeneratedNode}{(}{n}{)}}{;}}{{{writeGeneratedNode}{(}{{{IR}{.}{breakNode}{()}}{.}{useSourceInfoFrom}{(}{n}{)}}{)}}{;}}{{{currentCase.mayFallThrough}{=}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{var}{!=}{null}}{&&}{{{var}{.}{getScope}{()}}{==}{{getSubject}{()}}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{scope}{!=}{{getSubject}{()}}}{,}{STRING_CONSTANT}{)}}{;}}{{{expectScope}{(}{STRING_CONSTANT}{,}{scope}{,}{scope}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{DeclarationSubject}{(}{{{{AbstractVar}}{<}{?}{,}{?}{>}}{var}}{)}{{{}{{{{this}{.}{var}}{=}{var}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{ImmutableList}}{<}{{{AbstractVar}}{<}{?}{,}{?}{>}}{>}}{{declared}{=}{{ImmutableList}{.}{copyOf}{(}{{{getSubject}{()}}{.}{getAllAccessibleVariables}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{replace}{.}{isVar}{()}}{)}{{{}{{{replace}{.}{replaceWith}{(}{{NodeUtil}{.}{newExpr}{(}{replacement}{)}}{)}}{;}}{}}}{else}{{{}{{{replace}{.}{replaceWith}{(}{replacement}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ref}{.}{getParent}{()}}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{isVar}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{parent}{.}{isFunction}{()}}{||}{{parent}{.}{isVar}{()}}{||}{{parent}{.}{isNew}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{n}{.}{isVar}{()}}{||}{{n}{.}{isFunction}{()}}}{)}}{&&}{{isWhitelistedName}{(}{{{n}{.}{getFirstChild}{()}}{.}{getString}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{returnNode}{.}{isReturn}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{!}{{isValidIndex}{(}{{index}{+}{offset}}{)}}}{?}{CHAR_CONS}{:}{{source.contents}{.}{charAt}{(}{{index}{+}{offset}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{char}{nextChar}{()}{{{}{{if}{(}{{isAtEnd}{()}}{)}{{{}{{return}{CHAR_CONS}{;}}{}}}}{{return}{{source.contents}{.}{charAt}{(}{{index}{++}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{value}{=}{{{{this}{.}{source}}{.}{contents}}{.}{substring}{(}{startOffset}{,}{index}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessLabels}}{(}{markChanges}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{collector}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{extractionInfo}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{Callback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{externs}{,}{this}{)}}{;}}{{{addWindowProperties}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{body}{,}{updater}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{symbolMap}{=}{{getCssRenamingMap}{()}}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{Traversal}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{traverser}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{renamer}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{checkNotNull}{(}{root}{)}}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{scriptRoot}{.}{putBooleanProp}{(}{Node.TRANSPILED}{,}{true}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{callback}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Callback}}{callback}}{:}{callbacks}{)}{{{}{{{singleRoot}{.}{putBooleanProp}{(}{Node.TRANSPILED}{,}{true}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{singleRoot}{,}{callback}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{do}{{{}{{{codeChanged}{=}{false}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{EliminationPass}}{(}{cfg}{)}}{)}}{;}}{}}}{while}{(}{codeChanged}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkNotNull}{(}{root}{)}}{;}}{{{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{Es6RewriteModules}{.}{isEs6ModuleRoot}{(}{script}{)}}{)}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{script}{,}{{new}{{Rewriter}}{(}{compiler}{,}{script}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{block}{,}{{new}{{UnmarkedNodeTranspiler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{YieldFinder}}{{yieldFinder}{=}{{new}{{YieldFinder}}{()}}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{n}{,}{yieldFinder}{)}}{;}}{{return}{{yieldFinder}{.}{getYieldNode}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{wrapper}{,}{{context}{.}{new}{{UnmarkedNodeTranspiler}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{originalGeneratorBody}{,}{{new}{{YieldNodeMarker}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{LabelFinder}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{namingCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{pass}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{originalRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{externs}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{externs}{,}{findExternsCallback}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{js}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{renameMessages}{)}{{{}{{{RenameMessagesVisitor}}{{renameMessagesVisitor}{=}{{new}{{RenameMessagesVisitor}}{()}}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{renameMessagesVisitor}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{namingCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{originalRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{function}{.}{getLastChild}{()}}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{NodeUtil}{.}{getLoopCodeBlock}{(}{loopNode}{)}}{,}{continueStatementUpdater}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{superSet}{.}{getLastChild}{()}}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{normalizePass}{)}}{;}}{{{denormalizePass}{.}{process}{(}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{CheckProvidesCallback}}{{callback}{=}{{new}{{CheckProvidesCallback}}{(}{codingConvention}{)}}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{callback}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{cfgNode}{,}{gatherCb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{n}{,}{gatherCb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{cfgNode}{,}{gatherCb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{t}{.}{getScopeRoot}{()}}{,}{{new}{{GatherCandidates}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{InferConsts}}{(}{compiler}{)}}{.}{process}{(}{externs}{,}{root}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{constFinder}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{this}{,}{n}{,}{sia}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{{NodeUtil}{.}{getFunctionBody}{(}{constructor}{)}}{,}{finder}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{externs}{,}{this}{)}}{;}}{{{compiler}{.}{setExternProperties}{(}{{ImmutableSet}{.}{copyOf}{(}{externProperties}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{tree}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{tree}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{Callback}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{externs}{,}{externsCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{originalRoot}{,}{cb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessProperties}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{GatherCollapses}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{{compiler}{.}{getLifeCycleStage}{()}}{.}{isNormalized}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{root}{,}{changedScopes}{,}{{new}{{EmptyClinitPruner}}{()}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{script}{,}{test}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{isEs6ModuleRoot}{(}{root}{)}}{,}{root}{)}}{;}}{{{clearState}{()}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEs6ModuleRoot}{(}{scriptNode}{)}}{)}{{{}{{{processFile}{(}{scriptNode}{)}}{;}}{}}}{else}{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptNode}{,}{{new}{{RewriteRequiresForEs6Modules}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{callbacks}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{Strip}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{findFunction}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{findParameter}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ExportTestFunctionsNodes}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{externs}{,}{findExternsCallback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{callback}{,}{{new}{{RenameCallback}}{(}{aliasName}{,}{renamed}{)}}{)}}{;}}{{{aliasName}{=}{renamed}}{;}}{break;}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{callbackBlock}{,}{{new}{{DefineCallbackReturnCallback}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{TransformAMDModulesCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{script}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{googRoot}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{scriptNode}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptNode}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{rules}{.}{isEmpty}{()}}}{)}{{{}{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{tree}{,}{cb}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{root}{.}{isScript}{()}}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{js}{,}{{new}{{Normalize.NormalizeStatements}}{(}{compiler}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessVars}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{null}{,}{changedScopeRoots}{,}{{new}{{UseSiteGatheringCallback}}{()}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{process}{(}{externs}{,}{source}{)}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{source}{,}{{new}{{UseSiteGatheringCallback}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{getLastCompiler}{()}}{,}{{{getLastCompiler}{()}}{.}{jsRoot}}{,}{s}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{requiresLineNumbers}{=}{false}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{constructorBody}{,}{replaceThisWithSuperThis}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{functionBody}{,}{checkForDefinedReturnValue}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{enclosingFunction}{,}{checkAssigns}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{findExportableNodes}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{parsed.ast}{,}{{new}{{Traverser}}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FindPrimitives}}{{pass}{=}{{new}{{FindPrimitives}}{()}}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{pass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{pass}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{body}{,}{traversal}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{getterSetterCollector}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{body}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{null}{,}{changedScopeRoots}{,}{cb}{,}{cb}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{requiresTypes}{=}{false}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{J2clSourceFileChecker}{.}{shouldRunJ2clPasses}{(}{compiler}{)}}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mode}{=}{Mode.SINGLE_FILE}}{;}}{{{reset}{()}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reset}{()}}{;}}{{{NodeTraversal}{.}{traverseRootsEs6}{(}{compiler}{,}{this}{,}{externs}{,}{root}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{definitionsGatherer}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6ScopeRoots}{(}{compiler}{,}{root}{,}{changedScopeNodes}{,}{{new}{{PeepCallback}}{()}}{,}{false}{)}}{;}}{{if}{(}{{!}{retraverseOnChange}}{)}{{{}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ReductionGatherer}}{(}{reducers}{,}{reductionMap}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{js}{,}{{new}{{DeadAssignmentsElimination}}{(}{compiler}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{ProcessProperties}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{SourceInformationAnnotator}}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{PolymerPassSuppressBehaviors}}{{suppressBehaviorsCallback}{=}{{new}{{PolymerPassSuppressBehaviors}}{(}{compiler}{)}}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{suppressBehaviorsCallback}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{IdentifierToken}}{(}{{getTokenRange}{(}{beginToken}{)}}{,}{{value}{.}{intern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{script}{,}{cb}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{rootNode}{,}{callback}{)}}{;}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{{metadata}{.}{getCompiler}{()}}{,}{script}{,}{callback}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{x}{.}{getType}{()}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{bar}{.}{getType}{()}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{f}{.}{getPropertyType}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{item}{.}{isVar}{()}}{)}{{{}{{{item}{=}{{item}{.}{getFirstChild}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{{parent}{.}{isFunction}{()}}{||}{{parent}{.}{isVar}{()}}{||}{{parent}{.}{isParamList}{()}}{||}{{parent}{.}{isCatch}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseTyped}{(}{compiler}{,}{root}{,}{{new}{{DiscoverEnumsAndTypedefs}}{(}{typeRegistry}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTranspile}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{IdentifyGlobalEnumsAndTypedefsAsNonNullable}}{(}{typeRegistry}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ReferenceCollectingCallback}}{{refCollector}{=}{{new}{{ReferenceCollectingCallback}}{(}{this}{,}{ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR}{,}{{SyntacticScopeCreator}{.}{makeUntyped}{(}{this}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{{TypeCheckResult}}{parseAndTypeCheckWithScope}{(}{{{String}}{js}}{)}{{{}{{return}{{parseAndTypeCheckWithScope}{(}{DEFAULT_EXTERNS}{,}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Node}}{parseAndTypeCheck}{(}{{{String}}{js}}{)}{{{}{{return}{{parseAndTypeCheck}{(}{DEFAULT_EXTERNS}{,}{js}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{{DEFAULT_EXTERNS}{+}{STRING_CONSTANT}{+}{externs}}{,}{js}{,}{diag}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{externs}{,}{js}{,}{{(}{{String}}{)}{null}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{DEFAULT_EXTERNS}{,}{js}{,}{description}{,}{isError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCovariantIThenable3}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSymbol2}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSymbol1}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch6}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch5}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch4}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch3}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch2}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeStructuralMatch1}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeCovariant2}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIArrayLikeCovariant1}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{js1Node}{=}{{parseAndTypeCheck}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{js1Node}{=}{{parseAndTypeCheck}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TypeCheckResult}}{{p}{=}{{parseAndTypeCheckWithScope}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}{{{testAddingMethodsUsingPrototypeIdiomComplexNamespace}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TypeCheckResult}}{{p}{=}{{parseAndTypeCheckWithScope}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}{{{testAddingMethodsUsingPrototypeIdiomComplexNamespace}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{js1Node}{=}{{parseAndTypeCheck}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind5}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind4}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind3}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind2}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionBind1}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall8}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall7}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall6}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall5}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall3}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall2}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testFunctionCall1}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall13}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall12}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall10}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall8}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall7}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall5}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall3}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractMethodCall1}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testIssue1201b}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testThis14}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess9}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess8}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess7}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess6}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess4}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess3}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess2}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayAccess1}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGetelemStruct_noErrorForGettingWellKnownSymbol}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGetelemStruct_noErrorForSettingWellKnownSymbol}{()}{{{}{{{testTypes}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf8}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf6}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf5}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf4}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{number}{=}{{createUntypedNumber}{(}{n}{)}}}{;}}{{{number}{.}{setJSType}{(}{NUMBER_TYPE}{)}}{;}}{{return}{number}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{new}{{Node}}{(}{Token.NULL}{)}}}{;}}{{{n}{.}{setJSType}{(}{NULL_TYPE}{)}}{;}}{{return}{n}{;}}{}}}}
{AST_ROOT_SC2NF{{{child}{.}{inferSlotType}{(}{STRING_CONSTANT}{,}{NUMBER_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithUnionInMaprecord}{()}{{{}{{{testTTL}{(}{UNKNOWN_TYPE}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithInvalidMaprecord}{()}{{{}{{{testTTL}{(}{UNKNOWN_TYPE}{,}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithInvalidNestedMapunion}{()}{{{}{{{testTTL}{(}{UNKNOWN_TYPE}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithNestedMapunionInMapFunctionBody}{()}{{{}{{{testTTL}{(}{STRING_TYPE}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithNestedExpressionInBooleanSecondParam}{()}{{{}{{{testTTL}{(}{STRING_TYPE}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTransformationWithNestedExpressionInBooleanFirstParam}{()}{{{}{{{testTTL}{(}{STRING_TYPE}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{type}{,}{OBJECT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{parseAndTypeCheck}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertTypeEquals}{(}{ERROR_TYPE}{,}{{{n}{.}{getFirstFirstChild}{()}}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{NUMBER_TYPE}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{NUMBER_TYPE}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{STRING_CONSTANT}{,}{NUMBER_TYPE}{,}{{googFooGetprop2ObjectType}{.}{getPropertyType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testName5}{()}{{{}{{{assertTypeEquals}{(}{REGEXP_FUNCTION_TYPE}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName4}{()}{{{}{{{assertTypeEquals}{(}{DATE_FUNCTION_TYPE}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName3}{()}{{{}{{{assertTypeEquals}{(}{ARRAY_FUNCTION_TYPE}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName2}{()}{{{}{{{assertTypeEquals}{(}{OBJECT_FUNCTION_TYPE}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testName1}{()}{{{}{{{assertTypeEquals}{(}{VOID_TYPE}{,}{{testNameNode}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{ARRAY_TYPE}{,}{{a}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{VOID_TYPE}{,}{{n}{.}{getJSType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{falseNode}{=}{{typeCheck}{(}{{new}{{Node}}{(}{Token.FALSE}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{BOOLEAN_TYPE}{,}{{falseNode}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{trueNode}{=}{{typeCheck}{(}{{new}{{Node}}{(}{Token.TRUE}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{BOOLEAN_TYPE}{,}{{trueNode}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{typeCheck}{(}{{Node}{.}{newString}{(}{STRING_CONSTANT}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{STRING_TYPE}{,}{{n}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{n}{=}{{typeCheck}{(}{{Node}{.}{newNumber}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}{{{assertTypeEquals}{(}{NUMBER_TYPE}{,}{{n}{.}{getJSType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TypeCheckResult}}{{p}{=}{{parseAndTypeCheckWithScope}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertTypeEquals}{(}{NUMBER_TYPE}{,}{{{p.scope}{.}{getVar}{(}{STRING_CONSTANT}{)}}{.}{getType}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSDocInfo}}{{jsDoc}{=}{{{{node}{.}{getParent}{()}}{.}{isVar}{()}}{?}{{{node}{.}{getParent}{()}}{.}{getJSDocInfo}{()}}{:}{{node}{.}{getJSDocInfo}{()}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES6}{)}}{)}{{{}{{{checks}{.}{add}{(}{es6ExternsCheck}{)}}{;}}{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{factories}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{shouldAddTypes}{?}{{{this}{.}{contextType}}{.}{getPropertyType}{(}{fieldName}{)}}{:}{null}}}
{AST_ROOT_SC2NF{{{String}}{{embedded}{=}{{transpiled}{+}{STRING_CONSTANT}{+}{{URLEncoder}{.}{encode}{(}{sourceMap}{)}}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{{{var}{.}{getParentNode}{()}}{!=}{null}}{&&}{{{var}{.}{getType}{()}}{==}{null}}}{&&}{{{var}{.}{getParentNode}{()}}{.}{isVar}{()}}}}
{AST_ROOT_SC2NF{{{options}{.}{setPreserveGoogProvidesAndRequires}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{ObjectType}}{{regType}{=}{{ObjectType}{.}{cast}{(}{{registry}{.}{getType}{(}{qualifiedName}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{windowType}{=}{{getType}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{registerGlobalType}{(}{{{JSType}}{type}}{)}{{{}{{{registerGlobalType}{(}{type}{,}{{type}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{typesIndexedByProperty}{.}{clear}{()}}{;}}{{{eachRefTypeIndexedByProperty}{.}{clear}{()}}{;}}{{{initializeBuiltInTypes}{()}}{;}}{{{namesToTypes}{.}{clear}{()}}{;}}{{{initializeRegistry}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{GENERATOR_TYPE}{)}}{,}{{typeRegistry}{.}{getType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{ITERATOR_TYPE}{)}}{,}{{typeRegistry}{.}{getType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{typeRegistry}{.}{getNativeType}{(}{ITERABLE_TYPE}{)}}{,}{{typeRegistry}{.}{getType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{warnImplicitlyNullable}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{{{noWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{type}{=}{{registry}{.}{getType}{(}{reference}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{factories}{,}{{compiler}{.}{getOptions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{,}{{compiler}{.}{getOptions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES6}{)}}{)}{{{}{{{checks}{.}{add}{(}{es6ExternsCheck}{)}}{;}}{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{checks}{,}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{,}{options}{)}}{;}}}
{AST_ROOT_SC2NF{{NodeUtil}{.}{isLoopStructure}{(}{{s}{.}{getRootNode}{()}}{)}}}
{AST_ROOT_SC2NF{{{actualYieldType}{=}{{{{actualYieldType}{.}{dereference}{()}}{.}{getTemplateTypeMap}{()}}{.}{getResolvedTemplateType}{(}{{typeRegistry}{.}{getIterableTemplate}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{var}{.}{getParentNode}{()}}{!=}{null}}{&&}{{{var}{.}{getType}{()}}{==}{null}}}{&&}{{NodeUtil}{.}{isNameDeclaration}{(}{{var}{.}{getParentNode}{()}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NTI_ONLY}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{false}}{;}}{{{useTypes}{=}{true}}{;}}{{{numRepetitions}{=}{NUMBER_CONSTANT}}{;}}{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{warningOtiNti}{(}{TYPE_MISMATCH_WARNING}{,}{MISTYPED_ASSIGN_RHS}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{parse}{(}{{{String}}{js}}{)}{{{}{{return}{{parse}{(}{js}{,}{TypeInferenceMode.NEITHER}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{CodePrinter.Builder}}{(}{{parse}{(}{js}{,}{TypeInferenceMode.OTI_ONLY}{)}}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{String}}{{source}{=}{STRING_CONSTANT}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{disable_testClassMethodUnused2}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassMethodUnused1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassPropUnused1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassWithEmptyMembers}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{StrictModeCheck.DUPLICATE_CLASS_METHODS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticSetterWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticGetterWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticMethodWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testComputedPropInClass}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testArguments6}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnknownVariable4}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{true}}{;}}{{{useTypes}{=}{true}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefinePropertiesQuotesPreventRemoval}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties6}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties5}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_boxedNumberVsZero}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_allType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_unknownType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_while}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_expression}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_booleanResult0}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{true}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{ignoreWarnings}{(}{DiagnosticGroups.NEW_CHECK_TYPES_EXTRA_CHECKS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.OTI_ONLY}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{}}}}}
{AST_ROOT_SC2NF{{testSame}{(}{{externs}{(}{{lines}{(}{MINIMAL_EXTERNS}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{srcs}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{,}{{warningOtiNti}{(}{TypeValidator.TYPE_MISMATCH_WARNING}{,}{NewTypeInference.INVALID_ARGUMENT_TYPE}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{test}{(}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{warningOtiNti}{(}{TOO_MANY_TEMPLATE_PARAMS}{,}{INVALID_GENERICS_INSTANTIATION}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{{srcs}{(}{STRING_CONSTANT}{)}}{,}{{warningOtiNti}{(}{TOO_MANY_TEMPLATE_PARAMS}{,}{INVALID_GENERICS_INSTANTIATION}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.BOTH}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.NEITHER}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{NamedType}}{type}}{:}{{unresolvedNamedTypes}{.}{get}{(}{scope}{)}}{)}{{{}{{{type}{.}{resolve}{(}{reporter}{,}{scope}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{activeXObject}{.}{resolve}{(}{null}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{namedA}{.}{resolve}{(}{null}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{!=}{null}}{)}{{{}{{{{this}{.}{type}}{=}{{type}{.}{resolve}{(}{errorReporter}{,}{scope}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{a}{.}{resolve}{(}{null}{,}{EMPTY_SCOPE}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{DeferredSetType}}{deferred}}{:}{deferredSetTypes}{)}{{{}{{{deferred}{.}{resolve}{(}{currentScope}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{factories}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{ES6}{)}}{)}{{{}{{{checks}{.}{add}{(}{es6ExternsCheck}{)}}{;}}{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{checks}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{addEs6PreTypecheckPasses}{(}{passes}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testAbstractClass}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{warning}{(}{INSTANTIATE_ABSTRACT_CLASS}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{parse}{(}{{{String}}{js}}{)}{{{}{{return}{{parse}{(}{js}{,}{TypeInferenceMode.DISABLED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefinePropertiesQuotesPreventRemoval}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties6}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties5}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testObjectDefineProperties1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6StaticProperty2}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testES6StaticProperty}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty2}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testConstructorProperty1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{{{enableGatherExternProperties}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2017}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{ignoreWarnings}{(}{DiagnosticGroups.NEW_CHECK_TYPES_EXTRA_CHECKS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTranspile}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassWithEmptyMembers}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testError}{(}{STRING_CONSTANT}{,}{StrictModeCheck.DUPLICATE_CLASS_METHODS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticSetterWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticGetterWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testStaticAndNonstaticMethodWithSameName}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testComputedPropInClass}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testArguments6}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testUnknownVariable4}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{{{testSameEs6Strict}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{foldStringTypes}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{late}{=}{true}}{;}}{{{useTypes}{=}{true}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{disable_testClassMethodUnused2}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassMethodUnused1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassPropUnused1}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{setAcceptedLanguage}{(}{LanguageMode.ECMASCRIPT_2015}{)}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableNormalize}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{STRING_CONSTANT}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{String}}{{source}{=}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}{{{assertNoPureCalls}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{mode}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{ignoreWarnings}{(}{NewTypeInference.GLOBAL_THIS}{,}{NewTypeInference.INEXISTENT_PROPERTY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testRewrite}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}{{{enableRunTypeCheckAfterProcessing}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{CodePrinter.Builder}}{(}{{parse}{(}{js}{,}{TypeInferenceMode.CHECKED}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_boxedNumberVsZero}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_allType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_unknownType}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_while}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_expression}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testCoercionSubstitution_booleanResult0}{()}{{{}{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.CHECKED}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{enableTranspile}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mode}}{=}{TypeInferenceMode.DISABLED}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.NTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isTypecheckingEnabled}{()}{{{}{{return}{{{this}{.}{checkTypes}}{||}{{this}{.}{useNewTypeInference}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.NTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.NTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{options}{.}{getNewTypeInference}{()}}{?}{{getGlobalTypeInfo}{()}}{:}{{getTypeRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.NTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ignoreWarnings}{(}{GlobalTypeInfoCollector.INTERFACE_METHOD_NOT_IMPLEMENTED}{,}{TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testTypeMismatch}{()}{{{}{{{ignoreWarnings}{(}{NewTypeInference.MISTYPED_ASSIGN_RHS}{,}{TypeValidator.TYPE_MISMATCH_WARNING}{)}}{;}}{{{testSame}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DiagnosticGroup}}{{ignored}{=}{{new}{{DiagnosticGroup}}{(}{TypeCheck.INEXISTENT_PROPERTY}{,}{NewTypeInference.GLOBAL_THIS}{,}{NewTypeInference.INEXISTENT_PROPERTY}{,}{NewTypeInference.INVALID_ARGUMENT_TYPE}{,}{TypeValidator.TYPE_MISMATCH_WARNING}{)}}}{;}}}
{AST_ROOT_SC2NF{{{validator}{.}{expectCanAssignTo}{(}{t}{,}{loopVarNode}{,}{declaredType}{,}{actualType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{setKey}{.}{isSetterDef}{()}}{,}{setKey}{)}}{;}}}
{AST_ROOT_SC2NF{{{newGeneratorBody}{.}{addChildBefore}{(}{varStatement}{,}{{newGeneratorBody}{.}{getLastChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{newGeneratorBody}{.}{addChildBefore}{(}{n}{,}{{newGeneratorBody}{.}{getLastChild}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isStringLiteralValue}{(}{ast}{)}}{)}{{{}{{{paramNodeMatches}{.}{set}{(}{paramIndex}{,}{ast}{)}}{;}}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{NodeUtil}{.}{isStringLiteralValue}{(}{ast}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isCompileTimeConstant}{(}{{traversal}{.}{getScope}{()}}{,}{argument}{)}}}{)}{{{}{{{compiler}{.}{report}{(}{{traversal}{.}{makeError}{(}{argument}{,}{CONST_NOT_STRING_LITERAL_ERROR}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{prop}{!=}{null}}{)}{{{}{{if}{(}{{NodeUtil}{.}{isStringLiteralValue}{(}{prop}{)}}{)}{{{}{continue;}{}}}}{{return}{violation}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isLhsOfAssign}{(}{propAccess}{)}}{&&}{{(}{{{NodeUtil}{.}{isLiteralValue}{(}{{propAccess}{.}{getNext}{()}}{,}{false}{)}}{||}{{NodeUtil}{.}{isStringLiteralValue}{(}{{propAccess}{.}{getNext}{()}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{String}}{{lastPart}{=}{{typeString}{.}{substring}{(}{{{typeString}{.}{lastIndexOf}{(}{STRING_CONSTANT}{)}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{name}{.}{indexOf}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{{setKey}{==}{null}}{||}{{setKey}{.}{isSetterDef}{()}}}{,}{setKey}{)}}{;}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{public}{void}{setSourceMapLocationMappings}{(}{{{{List}}{<}{{SourceMap.LocationMapping}}{>}}{sourceMapLocationMappings}}{)}{{{}{{{{this}{.}{sourceMapLocationMappings}}{=}{sourceMapLocationMappings}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{locationMappings}{.}{add}{(}{{new}{{SourceMap.LocationMapping}}{(}{{mapping}{.}{getKey}{()}}{,}{{mapping}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LocationMapping}}{>}}{sourceMapLocationMappings}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getToken}{()}}{)}{{}{{case}{FOR_OF}{:}}{{{visitForOf}{(}{t}{,}{n}{,}{parent}{)}}{;}}{break;}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeIRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{actual}{=}{{{{{{new}{{CodePrinter.Builder}}{(}{script}{)}}{.}{setCompilerOptions}{(}{options}{)}}{.}{setTypeRegistry}{(}{{compiler}{.}{getTypeIRegistry}{()}}{)}}{.}{build}{()}}{.}{trim}{()}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{fnNode}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isPrototypeObject}{()}{{{}{{return}{{isFunctionPrototypeType}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{srcObj}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{attrsType}{=}{{attrs}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{srcObj}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ObjectTypeI}}{{targetType}{=}{{{target}{.}{getTypeI}{()}}{.}{toMaybeObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{typeName}{=}{{{{n}{.}{getFirstChild}{()}}{.}{getTypeI}{()}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{{n}{.}{getTypeI}{()}}{!=}{null}}{&&}{{isKnown}{(}{n}{)}}}{&&}{{invalidDeref}{(}{n}{)}}}{&&}{{!}{{isWhitelistedType}{(}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{thrown}{=}{{{n}{.}{getFirstChild}{()}}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{compiler}{,}{requirement}{)}{;}}{{{errorObjType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getGlobalType}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TemplateAstMatcher}}{{astMatcher}{=}{{new}{{TemplateAstMatcher}}{(}{{compiler}{.}{getTypeIRegistry}{()}}{,}{templateRoot}{,}{typeMatchingStrategy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FunctionTypeI}}{restrictedCallType}}}
{AST_ROOT_SC2NF{{{FunctionTypeI}}{restrictedCallType}}}
{AST_ROOT_SC2NF{{{FunctionTypeI}}{functionType}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isAssertionCall}{(}{{n}{.}{getParent}{()}}{)}}{||}{{{n}{.}{getTypeIBeforeCast}{()}}{!=}{null}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}{{return}{{(}{{{type}{==}{null}}{||}{{type}{.}{isSomeUnknownType}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}{{return}{{(}{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}{{return}{{{type}{!=}{null}}{&&}{{type}{.}{isTop}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{nativeObjectType}{=}{{{compiler}{.}{getTypeIRegistry}{()}}{.}{getNativeType}{(}{JSTypeNative.OBJECT_TYPE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{setTypeI}{(}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{FunctionTypeI}}{getterType}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{typeRegistry}}}
{AST_ROOT_SC2NF{{public}{TypeSubject}{(}{{{FailureMetadata}}{failureMetadata}}{,}{{{TypeI}}{type}}{)}{{{}{{super}{(}{failureMetadata}{,}{type}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{FunctionTypeI}}{getterType}}}
{AST_ROOT_SC2NF{{{builder}{.}{setTypeRegistry}{(}{{getTypeIRegistry}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{?}{extends}{{TypeI}}}{>}}{scope}}}
{AST_ROOT_SC2NF{{private}{{String}}{formatTypeVar}{(}{{{TypeI}}{var}}{)}{{{}{{return}{{var}{.}{toAnnotationString}{(}{Nullability.IMPLICIT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{TypeI}}{{typeI}{=}{{getPropLhs}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{getTypeI}{()}}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{n}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{Builder}{(}{{{TypeIRegistry}}{registry}}{)}{{{}{{{{this}{.}{registry}}{=}{registry}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectTypeI}}{objectType}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{ObjectTypeI}}{referenceType}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{name}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{typeRegistry}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{JSType}}{getReturnType}{()}{{{}{{return}{call.returnType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{{{{new}{{InvalidatingTypes.Builder}}{(}{{compiler}{.}{getTypeIRegistry}{()}}{)}}{.}{addTypesInvalidForPropertyRenaming}{()}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getTypeMismatches}{()}}{)}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getImplicitInterfaceUses}{()}}{)}}{.}{build}{()}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{registry}}}
{AST_ROOT_SC2NF{{public}{void}{applySingletonGetter}{(}{{{NominalTypeBuilder}}{classType}}{,}{{{FunctionTypeI}}{getterType}}{)}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{assign}{=}{{{withType}{(}{{IR}{.}{assign}{(}{copiedVarName}{,}{{varName}{.}{removeFirstChild}{()}}{)}}{,}{{varName}{.}{getTypeI}{()}}{)}}{.}{useSourceInfoFrom}{(}{varName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newThis}{=}{{withType}{(}{{context}{.}{getScopedName}{(}{GENERATOR_THIS}{)}}{,}{{n}{.}{getTypeI}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{IR}{.}{returnNode}{(}{{withType}{(}{{IR}{.}{call}{(}{createGenerator}{,}{{withType}{(}{{genFuncName}{.}{cloneNode}{()}}{,}{{generatorFunction}{.}{getTypeI}{()}}{)}}{,}{program}{)}}{,}{originalGenReturnType}{)}}{)}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{typeRegistry}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{FunctionTypeI}}{getterType}}}
{AST_ROOT_SC2NF{{{Node}}{{stringKey}{=}{{withType}{(}{{IR}{.}{stringKey}{(}{name}{,}{{{n}{.}{getFirstChild}{()}}{.}{detach}{()}}{)}}{,}{{n}{.}{getTypeI}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeIRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ImmutableMap}}{<}{{String}}{,}{{TypeI}}{>}}{typeVars}}}
{AST_ROOT_SC2NF{{{TypeIRegistry}}{registry}}}
{AST_ROOT_SC2NF{{{}{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}{{return}{{(}{{{type}{!=}{null}}{&&}{{type}{.}{isFunctionType}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TypeI}}{jsType}}}
{AST_ROOT_SC2NF{{{TypeI}}{jsType}}}
{AST_ROOT_SC2NF{{{CodePrinter.Builder}}{{builder}{=}{{{{{new}{{CodePrinter.Builder}}{(}{externsRoot}{)}}{.}{setPrettyPrint}{(}{true}{)}}{.}{setOutputTypes}{(}{true}{)}}{.}{setTypeRegistry}{(}{{compiler}{.}{getTypeIRegistry}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{lit}{.}{setTypeI}{(}{{exportedObjectLit}{.}{getTypeI}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TemplateAstMatcher}}{{matcher}{=}{{new}{{TemplateAstMatcher}}{(}{{lastCompiler}{.}{getTypeIRegistry}{()}}{,}{{templateRoot}{.}{getFirstChild}{()}}{,}{typeMatchingStrategy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setTypeI}{(}{{call}{.}{getTypeI}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{expr}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{mathDotPowCall}{=}{{{withType}{(}{{IR}{.}{call}{(}{{{mathPow}{.}{get}{()}}{.}{cloneTree}{()}}{,}{left}{,}{right}{)}}{,}{{n}{.}{getTypeI}{()}}{)}}{.}{useSourceInfoIfMissingFromForTree}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{lastCompiler}{.}{getTypeIRegistry}{()}}}
{AST_ROOT_SC2NF{{lastCompiler}{.}{getTypeIRegistry}{()}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{{{{new}{{InvalidatingTypes.Builder}}{(}{{compiler}{.}{getTypeIRegistry}{()}}{)}}{.}{disallowGlobalThis}{()}}{.}{addTypesInvalidForPropertyRenaming}{()}}{.}{addAllTypeMismatches}{(}{{compiler}{.}{getTypeMismatches}{()}}{)}}{.}{build}{()}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{{receiverType}{=}{{determineReceiverType}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{registry}}{=}{{compiler}{.}{getTypeIRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setTypeI}{(}{{getNativeStringType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{newName}{.}{setTypeI}{(}{{child}{.}{getTypeI}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypeI}}{getType}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Builder}}{setTypeRegistry}{(}{{{TypeIRegistry}}{registry}}{)}{{{}{{{{this}{.}{registry}}{=}{registry}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectTypeI}}{prototypeOrInstance}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{declarePrototypeProperty}{(}{{{String}}{name}}{,}{{{TypeI}}{type}}{,}{{{Node}}{defSite}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{declareInstanceProperty}{(}{{{String}}{name}}{,}{{{TypeI}}{type}}{,}{{{Node}}{defSite}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{declareConstructorProperty}{(}{{{String}}{name}}{,}{{{TypeI}}{type}}{,}{{{Node}}{defSite}}{)}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{getType}{(}{typeObj}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{getType}{(}{obj}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{objlitType}{=}{{getType}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{getType}{(}{{n}{.}{getFirstChild}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{n}{.}{isGetProp}{()}}{&&}{{{{n}{.}{getLastChild}{()}}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{&&}{{{{n}{.}{getFirstChild}{()}}{.}{getTypeI}{()}}{.}{isStructuralInterface}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{{recvType}{=}{{getType}{(}{recv}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{TypeI}}{type}}}
{AST_ROOT_SC2NF{{{ObjectTypeI}}{objectType}}}
{AST_ROOT_SC2NF{{{ObjectTypeI}}{objectType}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{n}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeRegistry}}{=}{{compiler}{.}{getTypeIRegistry}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{n}}{:}{nodeList}{)}{{{}{{{n.typei}{=}{{(}{{TypeI}}{)}{{in}{.}{readObject}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{n}}{:}{nodeList}{)}{{{}{{{out}{.}{writeObject}{(}{n.typei}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{dst}{.}{setTypeI}{(}{{this}{.}{typei}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{public}{final}{{JSType}}{getJSTypeBeforeCast}{()}{{{}{{return}{{(}{{JSType}}{)}{{getTypeIBeforeCast}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{FunctionType}}{getOwnerFunction}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeI}}{{type}{=}{{firstArg}{.}{getTypeI}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{TypeI}}{typeI}}}
{AST_ROOT_SC2NF{{{n}{.}{getTypeI}{()}}{==}{null}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{extends}{{LocationMapping}}}{>}}{sourceMapLocationMappings}}}
{AST_ROOT_SC2NF{{{}{{{locationMappings}{.}{add}{(}{{new}{{SourceMap.PrefixLocationMapping}}{(}{{mapping}{.}{getKey}{()}}{,}{{mapping}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{{URI}}{path}}}
{AST_ROOT_SC2NF{{public}{void}{setSourceMapLocationMappings}{(}{{{{List}}{<}{{?}{extends}{{SourceMap.LocationMapping}}}{>}}{sourceMapLocationMappings}}{)}{{{}{{{{this}{.}{sourceMapLocationMappings}}{=}{sourceMapLocationMappings}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{c}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{windowInExterns}{=}{true}}{;}}{continue;}{}}}}}
{AST_ROOT_SC2NF{{abstract}{{MostRecentTypechecker}}{getMostRecentTypechecker}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{.}{setMostRecentTypechecker}{(}{MostRecentTypechecker.OTI}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setMostRecentTypechecker}{(}{MostRecentTypechecker.OTI}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mostRecentTypechecker}{=}{compilerState.mostRecentTypeChecker}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{mostRecentTypeChecker}}{=}{compiler.mostRecentTypechecker}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{setMostRecentTypechecker}{(}{MostRecentTypechecker.OTI}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{addTypes}}{=}{{MostRecentTypechecker.OTI}{.}{equals}{(}{{compiler}{.}{getMostRecentTypechecker}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{c}{.}{getString}{()}}{.}{equals}{(}{WINDOW_NAME}{)}}{)}{{{}{{{windowInExterns}{=}{true}}{;}}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.MISSING_OVERRIDE}{,}{CheckLevel.WARNING}{)}}{;}}{{{{compiler}{.}{getOptions}{()}}{.}{setWarningLevel}{(}{DiagnosticGroups.STRICT_MISSING_PROPERTIES}{,}{CheckLevel.WARNING}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{prevUsedRenameMap}{!=}{null}}{)}{{{}{{{reusePreviouslyUsedVariableMap}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{validator}{.}{expectIterable}{(}{t}{,}{n}{,}{actualYieldType}{,}{STRING_CONSTANT}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolTable}}{{table}{=}{{createSymbolTable}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{c}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{windowInExterns}{=}{true}}{;}}{continue;}{}}}}}
{AST_ROOT_SC2NF{{public}{{ModuleLoader.ResolutionMode}}{getModuleResolutionMode}{()}{{{}{{return}{{this}{.}{moduleResolutionMode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{objectType}}}
{AST_ROOT_SC2NF{{{ObjectType}}{objectType}}}
{AST_ROOT_SC2NF{{if}{(}{{iterableType}{!=}{null}}{)}{{{}{{{typeParam}{=}{{{iterableType}{.}{getTemplateTypeMap}{()}}{.}{getResolvedTemplateType}{(}{{registry}{.}{getIterableTemplate}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{newType}{=}{{{objType}{.}{getTemplateTypeMap}{()}}{.}{getResolvedTemplateType}{(}{{registry}{.}{getIterableTemplate}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{defineSlot}{(}{astParameter}{,}{functionNode}{,}{paramType}{,}{inferred}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{defineSlot}{(}{fnNameNode}{,}{fnNode}{,}{{fnNode}{.}{getJSType}{()}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{candidate}{.}{isGetProp}{()}}{)}{{{}{{{defineSlot}{(}{candidate}{,}{{candidate}{.}{getParent}{()}}{,}{{getNativeType}{(}{NO_TYPE}{)}}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{defineSlot}{(}{n}{,}{parent}{,}{valueType}{,}{inferred}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isFunctionDeclaration}{(}{n}{)}}{)}{{{}{{{defineSlot}{(}{{n}{.}{getFirstChild}{()}}{,}{n}{,}{functionType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{boolean}{{inferred}{=}{{keyType}{==}{null}}}{;}}{{{defineSlot}{(}{keyNode}{,}{objLit}{,}{qualifiedName}{,}{keyType}{,}{inferred}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{!}{{type}{.}{matchesNumberContext}{()}}}{&&}{{!}{{type}{.}{matchesStringContext}{()}}}{&&}{{!}{{type}{.}{matchesStringContext}{()}}}}}
{AST_ROOT_SC2NF{{{FunctionType}}{{makeIteratorType}{=}{{registry}{.}{createFunctionType}{(}{{(}{{JSType}}{)}{iteratorType}}{,}{{paramBuilder}{.}{build}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{isSubtype}{(}{{(}{{JSType}}{)}{that}}{,}{{ImplCache}{.}{createWithoutStructuralTyping}{()}}{,}{SubtypingMode.NORMAL}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{LocationMapping}}{>}}{sourceMapLocationMappings}}}
{AST_ROOT_SC2NF{{public}{void}{setSourceMapLocationMappings}{(}{{{{List}}{<}{{SourceMap.LocationMapping}}{>}}{sourceMapLocationMappings}}{)}{{{}{{{{this}{.}{sourceMapLocationMappings}}{=}{sourceMapLocationMappings}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{}{{{locationMappings}{.}{add}{(}{{new}{{SourceMap.LocationMapping}}{(}{{mapping}{.}{getKey}{()}}{,}{{mapping}{.}{getValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{Path}}{path}}}
{AST_ROOT_SC2NF{{{visitImport}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{EvalMode}}{{newMode}{=}{{useEval}{?}{EvalMode.EVAL}{:}{EvalMode.NORMAL}}}{;}}{{return}{{new}{{ClosureBundler}}{(}{transpiler}{,}{newMode}{,}{sourceUrl}{,}{path}{,}{sourceMapCache}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{dereferencePointer}{(}{{n}{.}{getFirstChild}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{tightenTypeAfterDereference}{(}{{n}{.}{getFirstChild}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{{DEFAULT_EXTERNS}{+}{STRING_CONSTANT}{+}{externs}}{,}{js}{,}{description}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{DEFAULT_EXTERNS}{,}{js}{,}{diagnosticType}{,}{isError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testTypes}{(}{DEFAULT_EXTERNS}{,}{js}{,}{description}{,}{isError}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_yieldAll_string}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_yieldAll1}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_return2}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_noDeclaredReturnType3}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_returnsIterator2}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator_returnsIterable2}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGenerator3}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{,}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_StringObject2}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_StringObject1}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_string1}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_array3}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_wrongLoopVarType6a}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_wrongLoopVarType5}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testForOf_wrongLoopVarType4a}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrayLitSpread}{()}{{{}{{{testTypes}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{getTypeOfThis}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sym}{instanceof}{{StaticTypedSlot}}}{)}{{{}{{return}{{{(}{{(}{{{StaticTypedSlot}}{<}{{JSType}}{>}}{)}{sym}}{)}}{.}{isTypeInferred}{()}}{;}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{instanceof}{{StaticTypedScope}}}{)}{{{}{{return}{{{(}{{(}{{{StaticTypedScope}}{<}{{JSType}}{>}}{)}{s}}{)}}{.}{getTypeOfThis}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sym}{instanceof}{{StaticTypedSlot}}}{)}{{{}{{return}{{{(}{{(}{{{StaticTypedSlot}}{<}{{JSType}}{>}}{)}{sym}}{)}}{.}{getType}{()}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{typeEnv}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{getDeclarationScope}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{createChildFlowScope}{(}{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{T}}{getTypeOfThis}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{{StaticTypedSlot}}{<}{{JSType}}{>}}{slot}}}
{AST_ROOT_SC2NF{{{{StaticTypedScope}}{<}{{JSType}}{>}}{scope}}}
{AST_ROOT_SC2NF{{{@}{Override}}{{{StaticTypedScope}}{<}{{T}}{>}}{getScope}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isAssignAdd}{()}}{)}{{{}{{{updateScopeForTypeChange}{(}{scope}{,}{left}{,}{leftType}{,}{type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{visitParameterList}{(}{t}{,}{n}{,}{functionType}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitParameterList}{(}{t}{,}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{while}{(}{{{current.parent}{!=}{null}}{&&}{{current.lastSlot}{==}{current.parent.lastSlot}}}{)}{{{}{{{current}{=}{current.parent}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isCall}{()}}{||}{{n}{.}{isYield}{()}}}}
{AST_ROOT_SC2NF{{return}{{dereferencePointer}{(}{{n}{.}{getFirstChild}{()}}{,}{scope}{)}}{;}}}
{AST_ROOT_SC2NF{{{updateTypeOfParameters}{(}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{updateTypeOfArguments}{(}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{EarlyEs6ToEs3Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{updateTypeOfParameters}{(}{n}{,}{fnType}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{options.checksOnly}}{)}{{{}{{{passes}{.}{add}{(}{es6ForOf}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isAliasDefinition}{(}{decl}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{{lines}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{ConvertToTypedInterface.CONSTANT_WITHOUT_EXPLICIT_TYPE}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isAssignAdd}{()}}{)}{{{}{{{updateScopeForAssignment}{(}{scope}{,}{left}{,}{leftType}{,}{type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{flowScope}{.}{inferSlotType}{(}{STRING_CONSTANT}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{blind}{=}{{newScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{child}{.}{inferSlotType}{(}{STRING_CONSTANT}{,}{{getNativeNumberType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{optimizesToSameScope}{(}{that}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{output}{=}{{input}{.}{createChildFlowScope}{(}{{scopeCreator}{.}{createScope}{(}{root}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{informed}{=}{{blindScope}{.}{createChildFlowScope}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assign}{.}{useSourceInfoIfMissingFromForTree}{(}{member}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{scope}{=}{{traverse}{(}{{name}{.}{getFirstChild}{()}}{,}{scope}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{parentModuleCanSeeSymbolsDeclaredInChildren}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{moduleNameRegexList}{=}{options.modulesToPrintAfterEachPassRegexList}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleMethodMotion}}{(}{compiler}{,}{{compiler}{.}{getCrossModuleIdGenerator}{()}}{,}{options.removeUnusedPrototypePropertiesInExterns}{,}{options.crossModuleCodeMotionNoStubMethods}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{CrossModuleCodeMotion}}{(}{compiler}{,}{{compiler}{.}{getModuleGraph}{()}}{,}{options.parentModuleCanSeeSymbolsDeclaredInChildren}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{RescopeGlobalSymbols}}{(}{compiler}{,}{options.renamePrefixNamespace}{,}{options.renamePrefixNamespaceAssumeCrossModuleNames}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{REGEXP_TYPE}{.}{canBeCalled}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{obj}{!=}{null}}{&&}{{obj}{.}{isPrototypeObject}{()}}}}
{AST_ROOT_SC2NF{{return}{{subtype}{.}{isBottom}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isVoidable}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isNullable}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isNoObjectType}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{type}{.}{isEnumElement}{()}}}
{AST_ROOT_SC2NF{{type}{.}{isPrototypeObject}{()}}}
{AST_ROOT_SC2NF{{{!}{{callClassType}{.}{isBottom}{()}}}{&&}{{!}{{callClassType}{.}{isSomeUnknownType}{()}}}}}
{AST_ROOT_SC2NF{{{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{||}{{type}{.}{isUnresolved}{()}}}{||}{{type}{.}{isTop}{()}}}}
{AST_ROOT_SC2NF{{return}{{{!}{{type}{.}{isTop}{()}}}{&&}{{(}{{{type}{.}{isNullable}{()}}{||}{{type}{.}{isVoidable}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{targetType}{.}{isUnknownType}{()}}{||}{{targetType}{.}{isUnresolved}{()}}{||}{{targetType}{.}{isTop}{()}}{||}{{targetType}{.}{isEquivalentTo}{(}{{registry}{.}{getNativeType}{(}{JSTypeNative.OBJECT_TYPE}{)}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{{n}{.}{getJSType}{()}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}{{return}{{type}{.}{isBottom}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{type}{=}{{n}{.}{getJSType}{()}}}{;}}{{return}{{{type}{!=}{null}}{&&}{{type}{.}{isTop}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{ft}{!=}{null}}{)}{{{}{{{functionNode}{.}{setJSType}{(}{{ft}{.}{convertMethodToFunction}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{body}{.}{isBottom}{()}}{||}{{body}{.}{isEquivalentTo}{(}{{getObjectType}{()}}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{result}{.}{isBottom}{()}}{?}{{getUnknownType}{()}}{:}{result}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{.}{isEnumElement}{()}}{)}{{{}{{return}{{type}{.}{getEnumeratedTypeOfEnumElement}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{type}{!=}{null}}{&&}{{type}{.}{containsArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{objType}{.}{isPrototypeObject}{()}}{)}{{{}{{{constructor}{=}{{objType}{.}{getOwnerFunction}{()}}}{;}}{}}}{else}{{{}{{{constructor}{=}{{objType}{.}{getConstructor}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{type}{.}{isEnumElement}{()}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{.}{isEnumObject}{()}}{||}{{type}{.}{isBoxableScalar}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{.}{isEnumElement}{()}}{)}{{{}{{return}{{getTypesToSkipForType}{(}{{type}{.}{getEnumeratedTypeOfEnumElement}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{t}{.}{isObjectType}{()}}}{||}{{t}{.}{isTop}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{type}{.}{isTop}{()}}{||}{{type}{.}{isUnknownType}{()}}}}
{AST_ROOT_SC2NF{{{type}{.}{isTop}{()}}{||}{{type}{.}{isUnknownType}{()}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isAbstract}{()}{{{}{{return}{isAbstract}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{treatThisTypesAsCovariant}{(}{other}{,}{implicitImplCache}{)}}{&&}{{{this}{.}{call}}{.}{isSubtype}{(}{other.call}{,}{implicitImplCache}{,}{subtypingMode}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{ObjectType}}{getPrototypeProperty}{()}{{{}{{return}{{getPrototype}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isReturnTypeInferred}{()}{{{}{{return}{call.returnTypeInferred}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getReturnType}{()}{{{}{{return}{call.returnType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{canBeCalled}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setDict}{()}{{{}{{{propAccess}{=}{PropAccess.DICT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setStruct}{()}{{{}{{{propAccess}{=}{PropAccess.STRUCT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{restricted}{.}{isBottom}{()}}{?}{type}{:}{restricted}}{;}}}
{AST_ROOT_SC2NF{{{{retType}{!=}{null}}{&&}{{!}{{retType}{.}{isBottom}{()}}}}{&&}{{!}{{funType}{.}{isInterface}{()}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{getReferencedObjTypeInternal}{()}{{{}{{return}{referencedObjType}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{getReferencedTypeInternal}{()}{{{}{{return}{referencedType}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{receiverType}{.}{meetWith}{(}{type}{)}}{.}{isBottom}{()}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{matchesSymbolContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{matchesStringContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{matchesObjectContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{matchesNumberContext}{()}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isConstructor}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{||}{{type}{.}{isTop}{()}}}{)}{{{}{{return}{{allowLooseMatches}{?}{MatchResult.LOOSE_MATCH}{:}{MatchResult.NO_MATCH}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{==}{null}}{?}{null}{:}{{type}{.}{autoboxAndGetObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{propdef}{.}{setJSType}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{visitImport}{(}{{{t}{.}{getInput}{()}}{.}{getPath}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isApplied}{(}{{{CompilerOptions}}{options}}{)}{{{}{{return}{options.crossModuleMethodMotion}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isApplied}{(}{{{CompilerOptions}}{options}}{)}{{{}{{return}{options.crossModuleCodeMotion}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{t}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ensureTyped}{(}{t}{,}{name}{,}{valueType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{t}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{t}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{t}{,}{n}{,}{type}{)}}{;}}}
{AST_ROOT_SC2NF{{{ensureTyped}{(}{t}{,}{iterableNode}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{options.checksOnly}}{)}{{{}{{{passes}{.}{add}{(}{lateConvertEs6ToEs3}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{recordUnresolvedTypes}{)}{{{}{{{unresolvedNamedTypes}{.}{put}{(}{scope}{,}{namedType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{topScope}{==}{null}}{)}{{{}{{{regenerateGlobalTypedScope}{(}{compiler}{,}{{root}{.}{getParent}{()}}{)}}{;}}{}}}{else}{{{}{{{{compiler}{.}{getTypeRegistry}{()}}{.}{resolveTypesInScope}{(}{topScope}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{whitespaceOnlyPasses}{()}}{;}}{{if}{(}{{options}{.}{needsTranspilationFrom}{(}{FeatureSet.ES6}{)}}{)}{{{}{{{transpileAndDontCheck}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{features}{=}{{(}{{FeatureSet}}{)}{{script}{.}{getProp}{(}{Node.FEATURE_SET}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{body}{.}{isNormalBlock}{()}}{&&}{{!}{{body}{.}{hasChildren}{()}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{n}{.}{isNormalBlock}{()}}{&&}{{n}{.}{isSyntheticBlock}{()}}}{)}}{||}{{n}{.}{isScript}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{block}{.}{isNormalBlock}{()}}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{stmt}{.}{isEmpty}{()}}{||}{{(}{{{stmt}{.}{isNormalBlock}{()}}{&&}{{!}{{stmt}{.}{hasChildren}{()}}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{expr}{.}{isName}{()}}{)}}{;}}{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.CATCH}{,}{expr}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{finallyBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{tryBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}{{{body}{.}{setIsAddedBlock}{(}{true}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DEFAULT_CASE}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}{{{checkState}{(}{{mayBeExpression}{(}{cond}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.WHILE}{,}{cond}{,}{body}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}{{{checkState}{(}{{mayBeExpression}{(}{cond}{)}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.DO}{,}{body}{,}{cond}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{mayBeExpression}{(}{cond}{)}}{)}}{;}}{{{checkState}{(}{{then}{.}{isNormalBlock}{()}}{)}}{;}}{{return}{{new}{{Node}}{(}{Token.IF}{,}{cond}{,}{then}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{body}{.}{isNormalBlock}{()}}{||}{{mayBeExpression}{(}{body}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isExprResult}{()}}{||}{{n}{.}{isNormalBlock}{()}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{favorsCommaOverSemiColon}}{&&}{{!}{{block}{.}{isNormalBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{n}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{blockNode}{.}{isNormalBlock}{()}}{)}}{;}}{{if}{(}{{blockNode}{.}{hasChildren}{()}}{)}{{{}{{{markAllPropsRead}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{n}{.}{isNormalBlock}{()}}{)}{{{}{{{visitBlock}{(}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{{!}{{{target}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{target}{.}{getParent}{()}}{.}{isNormalBlock}{()}}}{&&}{{!}{{{target}{.}{getParent}{()}}{.}{isModuleBody}{()}}}}}
{AST_ROOT_SC2NF{{boolean}{{isVar}{=}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{&&}{{{parent}{.}{getParent}{()}}{.}{isNormalBlock}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{isGoogScopeFunctionBody}{(}{enclosingFunctionBody}{)}}{&&}{{scopeRoot}{.}{isNormalBlock}{()}}{&&}{{!}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isNormalBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}{||}{{!}{{isGoogModuleCall}{(}{{n}{.}{getFirstChild}{()}}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkArgument}{(}{{n}{.}{isNormalBlock}{()}}{)}}{;}}{{return}{{{n}{.}{hasChildren}{()}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{addingRoot}{.}{isNormalBlock}{()}}{||}{{addingRoot}{.}{isModuleBody}{()}}{||}{{addingRoot}{.}{isScript}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{n}{.}{isNormalBlock}{()}}{&&}{{{n}{.}{getParent}{()}}{!=}{null}}}{&&}{{{n}{.}{getParent}{()}}{.}{isFunction}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isRoot}{()}}{||}{{n}{.}{isScript}{()}}{||}{{n}{.}{isNormalBlock}{()}}{||}{{n}{.}{isModuleBody}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{block}{.}{isNormalBlock}{()}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NodeUtil}{.}{isControlStructureCodeBlock}{(}{n}{,}{c}{)}}{&&}{{!}{{c}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{{body}{.}{getNext}{()}}{==}{null}}{&&}{{body}{.}{isNormalBlock}{()}}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isFunction}{()}}}{||}{{!}{{{n}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{subtree}{.}{isScript}{()}}}{&&}{{!}{{subtree}{.}{isNormalBlock}{()}}}}{)}{{{}{{return}{subtree}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{n}{.}{isNormalBlock}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{statement}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isNormalBlock}{()}}}{||}{{!}{{n}{.}{hasChildren}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{block}{.}{isNormalBlock}{()}}{&&}{{{block}{.}{getParent}{()}}{.}{isTry}{()}}{&&}{{{{block}{.}{getParent}{()}}{.}{getFirstChild}{()}}{==}{block}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{{parent}{.}{getParent}{()}}{!=}{null}}{&&}{{{parent}{.}{getParent}{()}}{.}{isArrowFunction}{()}}}{&&}{{!}{{parent}{.}{isNormalBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{getRootNode}{()}}{.}{isNormalBlock}{()}}{&&}{{{getRootNode}{()}}{.}{hasOneChild}{()}}{&&}{{{{getRootNode}{()}}{.}{getFirstChild}{()}}{.}{isCatch}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{{node}{.}{children}{()}}{)}{{{}{{if}{(}{{child}{.}{isNormalBlock}{()}}{)}{{{}{{{blocks}{.}{add}{(}{child}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{n}{.}{isNormalBlock}{()}}{&&}{{!}{{loneBlocks}{.}{isEmpty}{()}}}{&&}{{{loneBlocks}{.}{peek}{()}}{==}{n}}}}
{AST_ROOT_SC2NF{{(}{{{parent}{.}{isScript}{()}}{||}{{(}{{{parent}{.}{isNormalBlock}{()}}{&&}{{!}{{parent}{.}{isSyntheticBlock}{()}}}{&&}{{!}{{parent}{.}{isAddedBlock}{()}}}}{)}}}{)}}}
{AST_ROOT_SC2NF{{{scopeRoot}{.}{isNormalBlock}{()}}{&&}{{{scopeRoot}{.}{getParent}{()}}{.}{isFunction}{()}}}}
{AST_ROOT_SC2NF{{{!}{{setFunction}{.}{hasChildren}{()}}}{||}{{!}{{{setFunction}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}{||}{{!}{{{setFunction}{.}{getSecondChild}{()}}{.}{isParamList}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{getFunction}{.}{hasChildren}{()}}}{||}{{!}{{{getFunction}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{;}{{{!}{{currentParent}{.}{isScript}{()}}}{&&}{{!}{{currentParent}{.}{isNormalBlock}{()}}}}{;}{{current}{=}{currentParent}}{,}{{currentParent}{=}{{currentParent}{.}{getParent}{()}}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{{{n}{.}{isFunction}{()}}{&&}{{parent}{!=}{null}}}{&&}{{parent}{.}{isNormalBlock}{()}}}{&&}{{!}{{{parent}{.}{getParent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{{!}{{{n}{.}{getParent}{()}}{.}{isScript}{()}}}{&&}{{!}{{{n}{.}{getParent}{()}}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{body}{.}{isNormalBlock}{()}}{)}{{{}{{{validateBlock}{(}{body}{)}}{;}}{}}}{else}{{{}{{{validateExpression}{(}{body}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{n}{.}{isNormalBlock}{()}}{&&}{{n}{.}{hasChildren}{()}}{&&}{{isReturnTypeNullable}{(}{{n}{.}{getParent}{()}}{)}}{&&}{{!}{{hasSingleThrow}{(}{n}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{n}{.}{isEmpty}{()}}{||}{{(}{{{n}{.}{isNormalBlock}{()}}{&&}{{!}{{n}{.}{hasChildren}{()}}}}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{next}{!=}{null}}{&&}{{next}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{checkArgument}{(}{{node}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{node}{.}{isFunction}{()}}{&&}{{!}{{{NodeUtil}{.}{getFunctionBody}{(}{node}{)}}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{!}{{originalBody}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{block}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{body}{.}{isNormalBlock}{()}}{,}{body}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{jumpBlock}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{catchBody}{.}{isNormalBlock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{context}{.}{transpileUnmarkedBlock}{(}{{{{n}{.}{isNormalBlock}{()}}{||}{{n}{.}{isAddedBlock}{()}}}{?}{n}{:}{{IR}{.}{block}{(}{n}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{newGeneratorHoistBlock}{.}{isNormalBlock}{()}}{,}{newGeneratorHoistBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{node}{.}{getParent}{()}}{.}{isExprResult}{()}}{&&}{{{node}{.}{getGrandparent}{()}}{.}{isNormalBlock}{()}}{&&}{{isClinitMethod}{(}{{{node}{.}{getGrandparent}{()}}{.}{getParent}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{!}{{(}{{{parent}{.}{isScript}{()}}{||}{{(}{{{{grandparent}{!=}{null}}{&&}{{grandparent}{.}{isFunction}{()}}}{&&}{{parent}{.}{isNormalBlock}{()}}}{)}}}{)}}}}
{AST_ROOT_SC2NF{{{!}{{body}{.}{isNormalBlock}{()}}}{||}{{body}{.}{hasChildren}{()}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{body}{.}{isNormalBlock}{()}}}{||}{{!}{{body}{.}{hasOneChild}{()}}}{||}{{!}{{{body}{.}{getFirstChild}{()}}{.}{isReturn}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{!}{isArrow}}{&&}{{!}{isSignature}}{&&}{{!}{{bodyNode}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{!}{{irNode}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{n}{.}{isFunction}{()}}{&&}{{{n}{.}{getParent}{()}}{.}{isNormalBlock}{()}}{&&}{{!}{{{n}{.}{getGrandparent}{()}}{.}{isFunction}{()}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{ifBlock}{.}{isNormalBlock}{()}}{,}{ifBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{innerBlock}{.}{isNormalBlock}{()}}{,}{innerBlock}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{block}{.}{isNormalBlock}{()}}{,}{block}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{functionBody}{=}{{NodeUtil}{.}{getFunctionBody}{(}{n}{)}}}{;}}{{if}{(}{{!}{{functionBody}{.}{isNormalBlock}{()}}}{)}{{{}{return;}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{node}{.}{isNormalBlock}{()}}{)}{{{}{{{node}{.}{setToken}{(}{Token.SCRIPT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{deleteWhitespaceBefore}{&&}{{parent}{!=}{null}}}{&&}{{(}{{{parent}{.}{isScript}{()}}{||}{{parent}{.}{isNormalBlock}{()}}}{)}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{parentNode}{.}{isNormalBlock}{()}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{parent}{!=}{null}}{&&}{{(}{{{parent}{.}{isNormalBlock}{()}}{||}{{parent}{.}{isScript}{()}}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{n}{.}{isScript}{()}}}{&&}{{!}{{n}{.}{isNormalBlock}{()}}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{!}{{body}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{!}{{body}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{s}{.}{isFunctionScope}{()}}{&&}{{{{s}{.}{getRootNode}{()}}{.}{getLastChild}{()}}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{{n}{.}{isFunction}{()}}{&&}{{!}{{{NodeUtil}{.}{getFunctionBody}{(}{n}{)}}{.}{isNormalBlock}{()}}}}}
{AST_ROOT_SC2NF{{c}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{c}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{caseBody}{.}{isNormalBlock}{()}}{,}{caseBody}{)}}{;}}}
{AST_ROOT_SC2NF{{!}{{labeledStatement}{.}{isNormalBlock}{()}}}}
{AST_ROOT_SC2NF{{last}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{n}{.}{isNormalBlock}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{newChild}{.}{isNormalBlock}{()}}{)}{{{}{{{NodeUtil}{.}{tryMergeBlock}{(}{newChild}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{calleeTypeI}{=}{{checkNotNull}{(}{{callee}{.}{getJSType}{()}}{,}{callNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{numbers}{.}{isSubtype}{(}{EVAL_ERROR_TYPE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{languageOutIsAtLeast}{(}{polyfill.polyfillVersion}{)}}}{)}{{{}{{{traversal}{.}{report}{(}{node}{,}{INSUFFICIENT_OUTPUT_VERSION_ERROR}{,}{name}{,}{{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{ES6}{)}}{)}{{{}{{{passes}{.}{add}{(}{optimizeToEs6}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{options.dartPass}{&&}{{!}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{ES6}{)}}}}{)}{{{}{{{checks}{.}{add}{(}{dartSuperAccessorsPass}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES5}{)}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{languageOutFeatures}{=}{{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{FeatureSet}}{{languageOutFeatures}{=}{{{{compiler}{.}{getOptions}{()}}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{{options}{.}{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{FeatureSet.ES5}{)}}}{)}{{{}{{throw}{{new}{{InvalidOptionsException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{incrementalCheckMode}{==}{IncrementalCheckMode.GENERATE_IJS}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{this}{.}{quoteKeywordProperties}}{||}{{languageOut}{==}{LanguageMode.ECMASCRIPT3}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{feature}{)}}{&&}{{!}{{{{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{has}{(}{feature}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{{getLanguageIn}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{languageLevel}{)}}{&&}{{!}{{{{getLanguageOut}{()}}{.}{toFeatureSet}{()}}{.}{contains}{(}{languageLevel}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checkState}{(}{{language}{!=}{LanguageMode.NO_TRANSPILE}}{)}}{;}}{{{{this}{.}{languageIn}}{=}{language}}{;}}{{{{this}{.}{languageOut}}{=}{language}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{outputTypes}{)}{{{}{{return}{Format.TYPED}{;}}{}}}}{{if}{(}{{prettyPrint}{||}{{{options}{.}{getLanguageOut}{()}}{==}{LanguageMode.ECMASCRIPT6_TYPED}}}{)}{{{}{{return}{Format.PRETTY}{;}}{}}}}{{return}{Format.COMPACT}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowception}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testArrowFunctionInObject}{()}{{{}{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{{{{this}{.}{thisContextStack}}{=}{{new}{{{ArrayDeque}}{<>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{LocalScopeBuilder}{(}{{{TypedScope}}{scope}}{)}{{{}{{super}{(}{scope}{)}{;}}{{{thisTypeForProperties}{=}{{getThisTypeForCollectingProperties}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{compiler}{.}{hasErrors}{()}}{)}}{.}{isFalse}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{inTypeSummary}{(}{error}{)}}{)}{{{}{{return}{CheckLevel.WARNING}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{outputFeatureSet}}{=}{featureSet}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{JsOverlay}}{public}{final}{{{List}}{<}{{T}}{>}}{asList}{()}{{{}{{return}{{new}{{{JsArrayList}}{<}{{T}}{>}}{(}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{objectSet}{(}{this}{,}{key}{,}{value}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{final}{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es7ToEs6Converter}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{GlobalScopeBuilder}{(}{{{TypedScope}}{scope}}{)}{{{}{{super}{(}{scope}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{GlobalScopeBuilder}}{{scopeBuilder}{=}{{new}{{GlobalScopeBuilder}}{(}{globalScope}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ModulePath}}{(}{{normalize}{(}{{ModuleNames}{.}{escapePath}{(}{{pathResolver}{.}{apply}{(}{path}{)}}{)}}{,}{moduleRootPaths}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{visitImport}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{path}{=}{{ModuleNames}{.}{escapePath}{(}{moduleAddress}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{path}{=}{{ModuleNames}{.}{escapePath}{(}{moduleAddress}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{skipOctalDigits}{()}{{{}{{while}{(}{{isOctalDigit}{(}{{peekChar}{()}}{)}}{)}{{{}{{{nextChar}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentInfo}{.}{isConstant}{()}}}{)}{{{}{{{currentInfo}{.}{setConstant}{(}{true}{)}}{;}}{{{populated}{=}{true}}{;}}{{return}{true}{;}}{}}}{else}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{jsdoc}{.}{isConstant}{()}}{)}}{.}{isFalse}{()}}{;}}}
{AST_ROOT_SC2NF{{isConst}{=}{{{{nameNode}{.}{getParent}{()}}{.}{isConst}{()}}{||}{{isExportLhs}{(}{nameNode}{)}}{||}{{(}{{{jsdoc}{!=}{null}}{&&}{{jsdoc}{.}{hasConstAnnotation}{()}}}{)}}}}}
{AST_ROOT_SC2NF{{final}{{Token}}{type}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{return}{{{parent}{==}{null}}{||}{{!}{{NodeUtil}{.}{createsScope}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{ownerType}}}
{AST_ROOT_SC2NF{{{}{{{currentModule}{.}{setModuleType}{(}{ModuleType.COMMON_JS}{,}{t}{,}{n}{)}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{getGoogNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{getGoogNamespaces}{()}}{)}}{.}{isEmpty}{()}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{getGoogNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{getGoogNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{getGoogNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{m}{.}{getGoogNamespaces}{()}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Nullable}}{{JSType}}{ownerType}}}
{AST_ROOT_SC2NF{{return}{{shouldDescend}{(}{n}{,}{parent}{)}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{type}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{assertTypeEquals}{(}{{registry}{.}{createOptionalType}{(}{STRING_TYPE}{)}}{,}{{info}{.}{getParameterType}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSDocInfo}}{{info}{=}{{parse}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertTypeEquals}{(}{{registry}{.}{createOptionalType}{(}{NUMBER_TYPE}{)}}{,}{{info}{.}{getParameterType}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{expandObjectLitAssignment}{(}{t}{,}{root}{,}{export.scope}{)}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{@}{JsMethod}{(}{{name}{=}{STRING_CONSTANT}}{,}{{namespace}{=}{STRING_CONSTANT}}{)}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{expectStringOrNumber}{(}{t}{,}{n}{,}{leftType}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{parent}{==}{null}}{||}{{!}{{NodeUtil}{.}{createsScope}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Token}}{type}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{{JSType}}{ownerType}}}
{AST_ROOT_SC2NF{{@}{JsMethod}{(}{{namespace}{=}{STRING_CONSTANT}}{)}}}
{AST_ROOT_SC2NF{{@}{JsMethod}{(}{{name}{=}{STRING_CONSTANT}}{,}{{namespace}{=}{STRING_CONSTANT}}{)}}}
{AST_ROOT_SC2NF{{{}{{{EvalMode}}{{newMode}{=}{{useEval}{?}{EvalMode.EVAL}{:}{EvalMode.NORMAL}}}{;}}{{return}{{new}{{ClosureBundler}}{(}{transpiler}{,}{es6ModuleTranspiler}{,}{newMode}{,}{sourceUrl}{,}{path}{,}{sourceMapCache}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{EvalMode}}{{newMode}{=}{{useEval}{?}{EvalMode.EVAL}{:}{EvalMode.NORMAL}}}{;}}{{return}{{new}{{ClosureBundler}}{(}{transpiler}{,}{newMode}{,}{sourceUrl}{,}{path}{,}{sourceMapCache}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{restRhs}{=}{{newName}{(}{{this}{.}{rhsResultName}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{baseHash}{=}{{super}{.}{hashCode}{()}}}{;}}{{if}{(}{{templateTypes}{.}{isEmpty}{()}}{)}{{{}{{return}{baseHash}{;}}{}}}}{{return}{{Objects}{.}{hash}{(}{templateTypes}{,}{baseHash}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverse}{(}{compiler}{,}{rootNode}{,}{{new}{{CoverageInstrumentationCallback}}{(}{compiler}{,}{instrumentationData}{,}{reach}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{abstract}{{{ImmutableSet.Builder}}{<}{{String}}{>}}{es6ImportSpecifiersBuilder}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{{{ImmutableSet.Builder}}{<}{{String}}{>}}{requiredTypesBuilder}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{{{ImmutableSet.Builder}}{<}{{String}}{>}}{googNamespacesBuilder}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testSettersForbidden2}{()}{{{}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGettersForbidden4}{()}{{{}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGettersForbidden3}{()}{{{}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testGettersForbidden2}{()}{{{}{{{parseError}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setUp}{()}}{;}}{{{mode}{=}{LanguageMode.ECMASCRIPT3}}{;}}{{{strictMode}{=}{SLOPPY}}{;}}{{{isIdeMode}{=}{false}}{;}}{{{expectedFeatures}{=}{FeatureSet.BARE_MINIMUM}}{;}}{}}}}
{AST_ROOT_SC2NF{{{testWarning}{(}{STRING_CONSTANT}{,}{MISPLACED_ANNOTATION}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateDefaultValue}{(}{n}{,}{info}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setTranspileEs6ModulesToCjsModules}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isVarArgsParameter}{(}{{{Node}}{parameter}}{)}{{{}{{return}{{parameter}{.}{isVarArgs}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isParsed}{()}}}{)}{{{}{{{parse}{(}{compiler}{)}}{;}}{{{root}{.}{setInputId}{(}{inputId}{)}}{;}}{}}}}{{return}{root}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{root}}{=}{root}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{originalRoot}{=}{{input}{.}{getAstRoot}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{input}{.}{getAstRoot}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{findDeps}{.}{process}{(}{{input}{.}{getAstRoot}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{root}{=}{{input}{.}{getAstRoot}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{root}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{options.checksOnly}}{)}{{{}{{{passes}{.}{add}{(}{es6RewriteRestAndSpread}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{matchedNodeInfo}{=}{{MatchedNodeInfo}{.}{create}{(}{node}{,}{{isInClosurizedFile}{(}{node}{,}{{new}{{NodeMetadata}}{(}{compiler}{)}}{)}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateRest}{(}{type}{,}{c}{)}}{;}}}
{AST_ROOT_SC2NF{{{validateRest}{(}{type}{,}{c}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateRest}{(}{Token.PARAM_LIST}{,}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{disabled_testForOf4}{()}{{{}{{{testTypes}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{AbstractCommandLineRunner}{()}{{{}{{this}{(}{System.in}{,}{System.out}{,}{System.err}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{shouldDeclareOnGlobalThis}{=}{{isGlobalVar}{&&}{{(}{{{NodeUtil}{.}{isNameDeclaration}{(}{parent}{)}}{||}{{parent}{.}{isFunction}{()}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{maybeThisType}{=}{{{{info}{.}{getThisType}{()}}{.}{evaluate}{(}{scope}{,}{typeRegistry}{)}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnTypeExpr}{!=}{null}}{)}{{{}{{{returnType}{=}{{returnTypeExpr}{.}{evaluate}{(}{scope}{,}{typeRegistry}{)}}}{;}}{{{returnTypeInferred}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{maybeThisType}{=}{{{{info}{.}{getThisType}{()}}{.}{evaluate}{(}{templateScope}{,}{typeRegistry}{)}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnTypeExpr}{!=}{null}}{)}{{{}{{{returnType}{=}{{returnTypeExpr}{.}{evaluate}{(}{templateScope}{,}{typeRegistry}{)}}}{;}}{{{returnTypeInferred}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{{new}{{GeneratorFunctionsTranspiler}}{()}}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processTranspile}{(}{compiler}{,}{root}{,}{transpiledFeatures}{,}{{new}{{GeneratorFunctionsTranspiler}}{()}}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{transpiledFeatures}{,}{this}{)}}{;}}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{transpiledFeatures}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{compiler}{.}{hasHaltingErrors}{()}}}{)}{{{}{{{TranspilationPasses}{.}{markFeaturesAsTranspiledAway}{(}{compiler}{,}{features}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{checkState}{(}{{source}{.}{isFunction}{()}}{,}{source}{)}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{returnType}{=}{{explicitReturnExpected}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteImportPaths}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{case}{RESOLVE_IMPORT_PATHS}{:}}}
{AST_ROOT_SC2NF{{{SourceFile}}{{expectedEs6}{=}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{HotSwapCompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{Es6RewriteClass}}{(}{compiler}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testSpreadLibInjection}{()}{{{}{{{testSame}{(}{STRING_CONSTANT}{)}}{;}}{{{{assertThat}{(}{{{getLastCompiler}{()}}{.}{injected}}{)}}{.}{containsExactly}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{referencedType}{=}{{getReferencedType}{()}}}{;}}{{if}{(}{{referencedType}{==}{this}}{)}{{{}{{{handleTypeCycle}{(}{reporter}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{==}{that}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isGlobalThisType}{()}{{{}{{return}{{this}{==}{{registry}{.}{getNativeType}{(}{JSTypeNative.GLOBAL_THIS}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{boolean}{isUnresolvedOrResolvedUnknown}{()}{{{}{{return}{{{isNoResolvedType}{()}}{||}{{{isNamedType}{()}}{&&}{{isUnknownType}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{objectType}{.}{getImplicitPrototype}{()}}{==}{OBJECT_TYPE}}{)}}{;}}}
{AST_ROOT_SC2NF{{{defineVar}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{defineVars}{(}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{context}{.}{isAsyncContext}{()}}{)}{{{}{{{convertAsyncFunction}{(}{context}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{maybeThisType}{=}{{{{info}{.}{getThisType}{()}}{.}{evaluate}{(}{scope}{,}{typeRegistry}{)}}{.}{restrictByNotNullOrUndefined}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnTypeExpr}{!=}{null}}{)}{{{}{{{returnType}{=}{{returnTypeExpr}{.}{evaluate}{(}{scope}{,}{typeRegistry}{)}}}{;}}{{{returnTypeInferred}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerifyingRecorderTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrows}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{state}{.}{verifyingStarted}{(}{{VerifyingMode}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{VerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{return}{{verify}{(}{mock}{,}{{VerifyingMode}{.}{times}{(}{wantedNumberOfInvocations}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrows}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrows}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerifyingModeTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{andThrows}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{andThrows}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrows}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrows}{(}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{reader}{.}{read}{()}}{)}}{.}{andThrows}{(}{ioException}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrows}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.mockitoState}{.}{pullControlToBeStubbed}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{<}{{T}}{>}{{T}}{verify}{(}{{{T}}{mock}}{,}{{{VerifyingMode}}{verifyingMode}}{)}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.mockitoState}{.}{pullStubable}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoStateImpl}}{{state}{=}{{new}{{MockitoStateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoStateImplTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{mockitoState}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{addReturnValue}{(}{{{Object}}{value}}{)}{{{}{{{mockitoState}{.}{stubbingCompleted}{()}}{;}}{{{addResult}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{state}{=}{{new}{{MockitoStateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MockControl}}{<}{{T}}{>}}{{control}{=}{{MockUtil}{.}{getControl}{(}{mock}{)}}}{;}}{{{mockitoState}{.}{stubbingStarted}{()}}{;}}{{return}{control}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockitoState}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockitoState}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{mockitoState}{.}{verifyingStarted}{(}{mode}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MockControl}}{<}{{T}}{>}}{{mockControl}{=}{{new}{{{MockControl}}{<}{{T}}{>}}{(}{mockitoState}{,}{{new}{{MatchersBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{.}{recordInvocation}{(}{invocationMatcher}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{=}{{new}{{{VerifyingRecorder}}{<}{{T}}{>}}{(}{{new}{{AllInvocationsFinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionIsExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{setCauseStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{remove}{()}}{;}}{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionIsExactlyInOrder}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionIsExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionIsExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionIsExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{RegisteredInvocations}}{registeredInvocations}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{OngoingVerifyingMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{oneArg}{(}{true}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberOfInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberOfInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{()}}}{;}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{=}{{new}{{{VerifyingRecorder}}{<}{{T}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator}{=}{{new}{{InvocationsCalculatorImpl}}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{differentMethod}{=}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{differentMethod}{=}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{simpleMethod}{=}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingModeTest}}{.}{class}}}
{AST_ROOT_SC2NF{{<}{{T}}{>}{{T}}{verify}{(}{{{T}}{mock}}{,}{{{OngoingVerifyingMode}}{ongoingVerifyingMode}}{)}{;}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator1}{=}{{new}{{InvocationsCalculator}}{(}{{getInvocationsForEvaluation}{(}{{OngoingVerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator1}{=}{{new}{{InvocationsCalculator}}{(}{{getInvocationsForEvaluation}{(}{{OngoingVerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{{mode}{=}{{OngoingVerifyingMode}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{{mode}{=}{{OngoingVerifyingMode}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{ongoingVerifyingMode}{=}{null}}{;}}{{{invocationSequenceNumber}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{InvocationsCalculator}}{calculator}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{OngoingVerifyingMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{return}{{verify}{(}{mock}{,}{{OngoingVerifyingMode}{.}{times}{(}{wantedNumberOfInvocations}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{OngoingVerifyingMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{OngoingVerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{OngoingVerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{OngoingVerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{calculator}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{OngoingVerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mode}{.}{orderOfInvocationsMatters}{()}}{)}{{{}{{return}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{{mode}{.}{getAllMocksToBeVerifiedInSequence}{()}}{)}}{;}}{}}}{else}{{{}{{return}{registeredInvocations}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{orderOfInvocationsMatters}{()}{{{}{{return}{{!}{{mocksToBeVerifiedInSequence}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{.}{isVerifiedInOrder}{()}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Object}}{mock}}{:}{mocks}{)}{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{strictOrderVerifier}{.}{addMockToBeVerifiedInOrder}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Verifier}}{>}}{{verifiers}{=}{{Arrays}{.}{asList}{(}{{new}{{MissingInvocationVerifier}}{()}}{,}{{new}{{NumberOfInvocationsVerifier}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{Exceptions}{.}{zeroInteractionsWanted}{(}{{unverified}{.}{toString}{()}}{,}{{unverified}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{Exceptions}{.}{noMoreInteractionsWanted}{(}{{unverified}{.}{toString}{()}}{,}{{unverified}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mocksToBeVerifiedSrictly}{.}{contains}{(}{mock}{)}}}{)}{{{}{{{Exceptions}{.}{strictlyRequiresFamiliarMock}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mocks.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{{Exceptions}{.}{mocksHaveToBePassedWhenCreatingStrictly}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubable}{==}{null}}{)}{{{}{{{Exceptions}{.}{missingMethodInvocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{StubbedInvocationMatcher}}{s}}{:}{stubbed}{)}{{{}{{if}{(}{{s}{.}{matches}{(}{wanted}{)}}{)}{{{}{{return}{{{s}{.}{getResult}{()}}{.}{answer}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{InvocationsCalculator}}{{calculator1}{=}{{new}{{InvocationsCalculator}}{(}{{getInvocationsForEvaluation}{(}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Result}}{result}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{chunk}{,}{{collectionHasExactlyInOrder}{(}{simpleMethodInvocation}{,}{simpleMethodInvocationTwo}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationMode}{.}{strict}{(}{NUMBER_CONSTANT}{,}{{Arrays}{.}{<}{{Object}}{>}{asList}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{strictly}{.}{verify}{(}{two}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{two}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{varargsObject}{(}{NUMBER_CONSTANT}{,}{textOne}{,}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{varargsObject}{(}{NUMBER_CONSTANT}{,}{textOne}{,}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{textOne}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{mock}{,}{NUMBER_CONSTANT}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{Mockito}{.}{verify}{(}{mock}{,}{NUMBER_CONSTANT}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{list}{,}{NUMBER_CONSTANT}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{,}{NUMBER_CONSTANT}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{map}{,}{NUMBER_CONSTANT}{)}}{.}{put}{(}{{anyObject}{()}}{,}{{anyObject}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{,}{NUMBER_CONSTANT}{)}}{.}{oneArg}{(}{two}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{VerificationMode}}{(}{wantedNumberOfInvocations}{,}{mocksToBeVerifiedStrictly}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{STRING_CONSTANT}{,}{verifier.calculator}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{STRING_CONSTANT}{,}{verifierStub.calculator}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{verifierStub.calculator}{.}{getInvocations}{()}}{,}{{collectionHasExactlyInOrder}{(}{{differentMethod}{.}{getInvocation}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{verifierStub.calculator}{.}{getInvocations}{()}}{,}{{collectionHasExactlyInOrder}{(}{simpleMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{calculatorStub}{,}{wanted}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{calculatorStub}{,}{wanted}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{InvocationsCalculator}}{calculator}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{VerificationMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{verifiers}{=}{{Arrays}{.}{asList}{(}{{new}{{MissingInvocationVerifier}}{()}}{,}{{new}{{NumberOfInvocationsVerifier}}{(}{{new}{{Reporter}}{()}}{)}}{,}{{new}{{NoMoreInvocationsVerifier}}{()}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{invocations}}{=}{invocations}}{;}}{{return}{returnedByCalculator}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{returnedByCalculator}{=}{null}}{;}}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationMode}{.}{noMoreInteractions}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{VerificationMode}{.}{times}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{numberOfInvocationsMode}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{isStrict}{()}}{)}{{{}{{{markVerifiedStrictly}{(}{invocations}{)}}{;}}{}}}{else}{{{}{{{markVerified}{(}{wanted}{,}{invocations}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mode}{.}{isStrict}{()}}{)}{{{}{{return}{{chunker}{.}{getFirstUnverifiedInvocationChunk}{(}{{mode}{.}{getAllMocksToBeVerifiedInSequence}{()}}{)}}{;}}{}}}{else}{{{}{{return}{registeredInvocations}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{isExplicit}{()}}{)}{{{}{{{marker}{.}{markInvocationsAsVerified}{(}{invocations}{,}{wanted}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{isExplicit}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{exactNumberOfInvocationsMode}{()}{{{}{{return}{{{!}{{atLeastOnceMode}{()}}}{&&}{{isExplicit}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{missingMethodMode}{()}{{{}{{return}{{{isExplicit}{()}}{&&}{{(}{{{atLeastOnceMode}{()}}{||}{{wantedInvocationCount}{==}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isExplicit}{()}{{{}{{return}{{verification}{==}{Verification.EXPLICIT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isStrict}{()}{{{}{{return}{{!}{{mocksToBeVerifiedInSequence}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{atLeastOnceMode}{()}{{{}{{return}{{wantedInvocationCount}{==}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.mockingProgress}{.}{pullStubable}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mocks.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{{reporter}{.}{mocksHaveToBePassedWhenCreatingStrictly}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{MockControl}}{<}{{T}}{>}}{{control}{=}{{MockUtil}{.}{getControl}{(}{mock}{)}}}{;}}{{{mockingProgress}{.}{stubbingStarted}{()}}{;}}{{return}{control}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{mockingProgress}{.}{verificationStarted}{(}{mode}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MockControl}}{<}{{T}}{>}}{{mockControl}{=}{{new}{{{MockControl}}{<}{{T}}{>}}{(}{mockingProgress}{,}{{new}{{MatchersBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{say}{(}{{{String}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{say}{(}{{{Object}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{withBooleanVarargs}{(}{{int}{value}}{,}{{boolean}{.}{.}{.}{b}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{throwsError}{(}{{int}{count}}{)}{throws}{{Error}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{throwsIOException}{(}{{int}{count}}{)}{throws}{{IOException}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{throwsNothing}{(}{{boolean}{value}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockControlTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{shouldScreamWhenNullPassed}{()}{{{}{{{getControl}{(}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{NotAMockException}}{.}{class}}}{)}}{public}{void}{shouldScreamWhenNotAMockPassed}{()}{{{}{{{getControl}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{getControl}{(}{o}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{{List}}{<}{{Invocation}}{>}}{{invocationsOfSingleMock}{=}{{{MockUtil}{.}{getControl}{(}{mock}{)}}{.}{getRegisteredInvocations}{()}}}{;}}{{{allInvocations}{.}{addAll}{(}{invocationsOfSingleMock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Object}}{mock}}{:}{mocks}{)}{{{}{{{{MockUtil}{.}{getControl}{(}{mock}{)}}{.}{verifyNoMoreInteractions}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{VerificationError}}{e}}}
{AST_ROOT_SC2NF{{{VerificationError}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{UndesiredInvocation}}{{cause}{=}{{buildUndesiredInvocationCause}{(}{actualInvocationStackTrace}{,}{STRING_CONSTANT}{,}{undesired}{)}}}{;}}{{throw}{{new}{{VerificationError}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actual}{=}{{calculator}{.}{findActualInvocation}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{actualCount}{=}{{calculator}{.}{countActual}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsCalculator}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{calculator}{.}{getFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{NoMoreInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsCalculator}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{{{assertSame}{(}{wanted}{,}{calculatorStub.wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldPassBecauseActualInvocationFound}{()}{{{}{{{calculatorStub.actualCountToReturn}{=}{NUMBER_CONSTANT}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{atLeastOnce}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{calculator.invocationToReturn}{=}{null}}{;}}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationMode}{.}{noMoreInteractions}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{InvocationsCalculator}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{actualbyName}{!=}{null}}{?}{actualbyName}{:}{{getFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{analyzer}{.}{getFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{sub}{)}}{.}{say}{(}{{CrazyMatchers}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportStubable}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{OngoingStubbing}}{pullStubable}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{reportStubable}{(}{{{OngoingStubbing}}{ongoingStubbing}}{)}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{state}{.}{verificationStarted}{(}{{VerificationMode}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{verificationMode}{=}{{mockingProgress}{.}{pullVerificationMode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{strict}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{strict}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{void}{verify}{(}{{{VerificationMode}}{mode}}{)}{{{}{{{verify}{(}{null}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{{List}}{<}{{Invocation}}{>}}{invocations}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{VerificationMode}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationMode}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationMode}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{null}{,}{{VerificationMode}{.}{noMoreInteractions}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationMode}{.}{times}{(}{wantedNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationMode}{.}{atLeastOnce}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{analyzer}{.}{findFirstUndesiredInvocationTrace}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{{VerificationMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{}{{{VerificationMode}}{{mode}{=}{{VerificationMode}{.}{noMoreInteractions}{()}}}{;}}{{{recorder}{.}{verify}{(}{mode}{)}}{;}}{{{assertNull}{(}{markerStub.mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{strict}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationMode}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationMode}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{setCauseStackTrace}{(}{STRING_CONSTANT}{)}}{;}}{{{remove}{()}}{;}}{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{three}{.}{simpleMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{{VerificationModeImpl}}{strict}{()}{{{}{{return}{{VerificationModeImpl}{.}{strict}{(}{null}{,}{{Arrays}{.}{asList}{(}{{new}{{Object}}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{verifierStub.mode}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{InvocationsAnalyzer}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{analyzerStub.actualCountToReturn}{=}{NUMBER_CONSTANT}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{atLeastOnce}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{StackTrackeFilteringTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{{Mockito}{.}{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setup}{()}{{{}{{{mock}{=}{{Mockito}{.}{mock}{(}{{{LinkedList}}{.}{class}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{VerificationError}}{e}}}
{AST_ROOT_SC2NF{{{TooManyActualInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{{TooLittleActualInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{oneArg}{(}{{same}{(}{three}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{VerificationError}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockTwo}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockTwo}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooManyActualInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationError}}{error}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{clear}{()}}{;}}{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{NoInteractionsWantedError}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{String}}{wanted}}{)}{{{}{{throw}{{new}{{VerificationError}}{(}{{join}{(}{STRING_CONSTANT}{,}{wanted}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{VerificationError}}{(}{{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{wanted}{)}}{,}{cause}{)}}{;}}}
{AST_ROOT_SC2NF{{wantedInvocation}{.}{matchesMockArgsAndMethodNameButMethodNotEqual}{(}{actualInvocation}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailVerification}{(}{)}{throws}{{Exception}}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoInteractionsWantedError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{TooLittleActualInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{{TooManyActualInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{{TooManyActualInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{{VerificationError}}{e}}}
{AST_ROOT_SC2NF{{{VerificationError}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NoInteractionsWantedError}}{e}}}
{AST_ROOT_SC2NF{{{NoInteractionsWantedError}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationError}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{Collections}{.}{<}{{Integer}}{>}{emptyList}{()}}{,}{{new}{{EqualitySeer}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualitySeer}}{()}}{)}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{ObjectsChunk}}{<}{{Integer}}{>}}{>}}{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualitySeer}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualitySeer}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualitySeer}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualitySeer}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualitySeer}}{()}}{)}}}}
{AST_ROOT_SC2NF{{chunked}{=}{{chunker}{.}{chunk}{(}{{asList}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{EqualitySeer}}{()}}{)}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooLittleActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooLittleActualInvocations}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{TooManyActualInvocations}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{ActualInvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{strictMode}{()}{{{}{{return}{{!}{{mocksToBeVerifiedStrictly}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{analyzer}{.}{findFirstUnverified}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{NoMoreInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Invocation}}{{similar}{=}{{analyzer}{.}{findSimilarInvocation}{(}{invocations}{,}{wanted}{,}{mode}{)}}}{;}}{{{reportMissingInvocationError}{(}{wanted}{,}{similar}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{InvocationsAnalyzer}}{()}}{,}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findFirstStrictlyUnverified}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findFirstStrictlyUnverified}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{analyzer.invocationToReturn}{=}{null}}{;}}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationModeImpl}{.}{noMoreInteractions}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{analyzerStub.similarToReturn}{=}{actualInvocation}}{;}}}
{AST_ROOT_SC2NF{{{analyzerStub.similarToReturn}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}{{{assertSame}{(}{invocations}{,}{analyzerStub.invocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{finderStub}{=}{{new}{{ActualInvocationsFinderStub}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ActualInvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ActualInvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{StrictlyNumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ActualInvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{StrictlyMissingInvocationVerifier}{()}{{{}{{this}{(}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{strictMode}{()}}{)}{{{}{{{invocations}{=}{{invocationsFinder}{.}{getAllInvocations}{(}{{mode}{.}{getMocksToBeVerifiedStrictly}{()}}{)}}}{;}}{}}}{else}{{{}{{{invocations}{=}{registeredInvocations}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ActualInvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{NoMoreInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{ActualInvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ActualInvocationsFinder}}{finder}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsVerifier}{()}{{{}{{this}{(}{{new}{{Reporter}}{()}}{,}{{new}{{ActualInvocationsFinder}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{finderStub}{=}{{new}{{ActualInvocationsFinderStub}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{finder}{=}{{new}{{ActualInvocationsFinderStub}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{mocksToBeVerifiedStrictly}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{mocksToBeVerifiedStrictly}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{lastInvocation}{=}{{getLastSafely}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{lastInvocation}{=}{{getLastSafely}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{anyString}{()}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportStubbable}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrow}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{booleanReturningMethod}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{andReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{OngoingStubbing}}{pullStubbable}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{reportStubbable}{(}{{{OngoingStubbing}}{ongoingStubbing}}{)}{;}}}
{AST_ROOT_SC2NF{{return}{handler}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{andThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andReturn}{(}{Boolean.FALSE}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{andThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{andThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrow}{(}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{reader}{.}{read}{()}}{)}}{.}{andThrow}{(}{ioException}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrow}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{)}}}{;}}{{{strictly}{.}{verify}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{createStrictOrderVerifier}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{)}}}{;}}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{shouldNotCreateStrictlyWithoutMocks}{()}{{{}{{{createStrictOrderVerifier}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockDatabase}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{one}{,}{two}{,}{three}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{argument}}}
{AST_ROOT_SC2NF{{{Object}}{actual}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{IArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{IArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{IArgumentMatcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{IArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{IArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{IArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{public}{void}{reportMatcher}{(}{{{IArgumentMatcher}}{matcher}}{)}{{{}{{{matcherStack}{.}{push}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{IArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{IArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{return}{{findFirstUnverified}{(}{invocations}{,}{{{wanted}{.}{getInvocation}{()}}{.}{getMock}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{matcher}{)}}{.}{<}{{T}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{.}{<}{{String}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{anyString}{()}{{{}{{{isA}{(}{{{String}}{.}{class}}{)}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{<}{{T}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{double}{doubleThat}{(}{{{{CustomMatcher}}{<}{{Double}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{doubleValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{float}{floatThat}{(}{{{{CustomMatcher}}{<}{{Float}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{floatValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{long}{longThat}{(}{{{{CustomMatcher}}{<}{{Long}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{longValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{int}{intThat}{(}{{{{CustomMatcher}}{<}{{Integer}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{intValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{short}{shortThat}{(}{{{{CustomMatcher}}{<}{{Short}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{shortValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{byte}{byteThat}{(}{{{{CustomMatcher}}{<}{{Byte}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{byteValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{booleanThat}{(}{{{{CustomMatcher}}{<}{{Boolean}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{booleanValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{char}{charThat}{(}{{{{CustomMatcher}}{<}{{Character}}{>}}{matcher}}{)}{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{charValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{.}{<}{{String}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{.}{<}{{String}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{.}{<}{{String}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{.}{<}{{String}}{>}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{notNull}{()}{{{}{{return}{{{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{.}{nullValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{isNull}{()}{{{}{{return}{{{reportMatcher}{(}{Null.NULL}{)}}{.}{nullValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Same}}{(}{value}{)}}{)}}{.}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{shortValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{longValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{intValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{floatValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{charValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{byteValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{booleanValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{.}{nullValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{anyObject}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{nullValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{short}{anyShort}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{shortValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{double}{anyDouble}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{doubleValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{float}{anyFloat}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{floatValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{long}{anyLong}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{longValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{int}{anyInt}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{intValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{char}{anyChar}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{charValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{byte}{anyByte}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{byteValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{anyBoolean}{()}{{{}{{return}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{booleanValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{booleanValue}{()}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{<}{{T}}{>}{{T}}{nullValue}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{short}{shortValue}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{byte}{byteValue}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{first}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{first}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Same}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnStrictVerify}}{()}}{,}{{{UnfinishedVerificationException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnStrictVerify}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnStrictVerify}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{{strict}{(}{NUMBER_CONSTANT}{,}{{asList}{(}{{new}{{Object}}{()}}{)}}{)}}{.}{exactNumberOfInvocationsMode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{unverified}{=}{{ListUtil}{.}{filter}{(}{invocations}{,}{{new}{{RemoveVerifiedStrictly}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictly}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{inOrder}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{String}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{finderStub.firstUnverifiedChunkToReturn}{.}{add}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{finderStub.firstUnverifiedChunkToReturn}{.}{addAll}{(}{{asList}{(}{first}{,}{second}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{finderStub.firstUnverifiedChunkToReturn}{.}{addAll}{(}{{asList}{(}{first}{,}{second}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{finderStub.firstUnverifiedChunkToReturn}{.}{add}{(}{differentMethod}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{finderStub.firstUnverifiedChunkToReturn}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodWanted}{()}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{Object}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{wanted}{.}{toString}{()}}{,}{reporterStub.wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{reporter}{.}{wantedButNotInvoked}{(}{{wanted}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{Object}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{wanted}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findValidMatchingChunk}{(}{invocations}{,}{wanted}{,}{mode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{Object}}{wanted}}{)}{{{}{{throw}{{new}{{WantedButNotInvoked}}{(}{{join}{(}{STRING_CONSTANT}{,}{{wanted}{.}{toString}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{previous}}}
{AST_ROOT_SC2NF{{{String}}{undesired}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{firstUnverified}{.}{toString}{()}}{,}{reporterStub.undesired}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{reporter}{.}{noMoreInteractionsWanted}{(}{{unverified}{.}{toString}{()}}{,}{{unverified}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{wanted}}}
{AST_ROOT_SC2NF{{{String}}{wanted}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{wanted}{.}{toString}{()}}{,}{reporterStub.wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{wanted}{.}{toString}{()}}{,}{reporterStub.wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{previous}}}
{AST_ROOT_SC2NF{{{Invocation}}{{previousInOrder}{=}{{finder}{.}{findPreviousInOrder}{(}{invocations}{,}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailed}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailed}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{printActual}{()}{{{}{{return}{actual}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{printWanted}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mockCalculator}{.}{countArticlesInPolish}{(}{STRING_CONSTANT}{)}}{)}}{.}{toReturn}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{mocks}{==}{null}}{||}{{mocks.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{{REPORTER}{.}{mocksHaveToBePassedAsArguments}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{T}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{ArgumentMatcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{ArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{actual}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{ArgumentMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{ArgumentMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{ReturnValues}}{reportMatcher}{(}{{{{ArgumentMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{LastArguments}{.}{instance}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Double}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Float}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Long}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Integer}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Short}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Byte}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Boolean}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{CustomMatcher}}{<}{{Character}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{public}{{ReturnValues}}{reportMatcher}{(}{{{ArgumentMatcher}}{matcher}}{)}{{{}{{{matcherStack}{.}{push}{(}{matcher}{)}}{;}}{{return}{{new}{{ReturnValues}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{TooManyActualInvocations}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{mode}{.}{wantedCountIsZero}{()}}{&&}{noMatchFound}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{InvocationDiffersFromActual}}{e}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvocationDiffersFromActual}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{InvocationDiffersFromActual}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvocationDiffersFromActual}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{IncorectBindingPuzzleFixedTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{Printable}}{undesired}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{Printable}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{Printable}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Printable}}{undesired}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{{Printable}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{Printable}}{wanted}}{)}{{{}{{throw}{{new}{{WantedButNotInvoked}}{(}{{join}{(}{STRING_CONSTANT}{,}{{wanted}{.}{toString}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{matchers}{==}{null}}{)}{{{}{{{{this}{.}{matchers}}{=}{{buildMatchers}{(}{invocation}{)}}}{;}}{}}}{else}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mock}{.}{simpleMethod}{(}{null}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{argumentsMatch}{(}{{actual}{.}{getArguments}{()}}{)}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferentException}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{ArgumentsAreDifferentException}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{ArgumentsAreDifferentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferentException}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferentException}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferentException}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferentException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferentException}}{e}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{invocation}{.}{isSimilarTo}{(}{overloadedInvocation}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{invocation}{.}{isSimilarTo}{(}{overloadedInvocation}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{simpleMethod}{.}{isSimilarTo}{(}{onDifferentMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{simpleMethod}{.}{isSimilarTo}{(}{verified}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{STRING_CONSTANT}{+}{{value}{.}{getMessage}{()}}{+}{STRING_CONSTANT}{+}{text}}{,}{{{cause}{.}{getMessage}{()}}{.}{contains}{(}{text}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{invocation}{.}{getMock}{()}}{.}{equals}{(}{{actual}{.}{getMock}{()}}{)}}{&&}{{{invocation}{.}{getMethod}{()}}{.}{equals}{(}{{actual}{.}{getMethod}{()}}{)}}{&&}{{argumentsMatch}{(}{actual}{)}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{STRING_CONSTANT}{+}{{value}{.}{getMessage}{()}}{+}{STRING_CONSTANT}{+}{text}}{,}{{{{(}{{(}{{Throwable}}{)}{value}}{)}}{.}{getMessage}{()}}{.}{contains}{(}{text}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{equalTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{equalTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{verificationMode}{!=}{null}}{)}{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{EmptyReturnValues}{.}{emptyValueFor}{(}{{method}{.}{getReturnType}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{inOrderMode}{()}}{)}{{{}{{{invocations}{=}{{globalInvocationsFinder}{.}{getAllInvocations}{(}{{mode}{.}{getMocksToBeVerifiedInOrder}{()}}{)}}}{;}}{}}}{else}{{{}{{{invocations}{=}{registeredInvocations}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{EmptyReturnValuesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{if}{(}{{verificationMode}{!=}{null}}{)}{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{{MockitoConfiguration}{.}{emptyValues}{()}}{.}{valueFor}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{MockitoConfiguration}{.}{emptyValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoSampleTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{resetDefaultReturnValues}{()}{{{}{{{MockitoConfiguration}{.}{resetCustomReturnValues}{()}}{;}}{{{myDefaultReturnValues}{.}{clearSmartStubs}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{MockitoConfiguration}{.}{defaultReturnValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{configureDefaultReturnValues}{()}{{{}{{{MockitoConfiguration}{.}{setCustomReturnValues}{(}{{new}{{MyDefaultReturnValues}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{{MockitoConfiguration}{.}{defaultReturnValues}{()}}{.}{valueFor}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{configureDefaultReturnValues}{()}{{{}{{{myDefaultReturnValues}{=}{{new}{{MyDefaultReturnValues}}{()}}}{;}}{{{MockitoConfiguration}{.}{setCustomReturnValues}{(}{myDefaultReturnValues}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{invocation}{.}{isToString}{()}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{return}{{emptyValueFor}{(}{returnType}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{CHAR_CONS}{,}{{mock}{.}{charReturningMethod}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FakeReturnValues}}{{fakeReturnValues}{=}{{getFakeReturnValues}{()}}}{;}}{{{fakeReturnValues}{.}{configure}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{mockDescription}{=}{{STRING_CONSTANT}{+}{{MockNamer}{.}{nameForMock}{(}{mock}{)}}{+}{STRING_CONSTANT}{+}{{mock}{.}{hashCode}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockUtil}{.}{createMock}{(}{classToMock}{,}{MOCKING_PROGRESS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{m}{.}{getMatchers}{()}}{,}{{collectionHasExactlyInOrder}{(}{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{STRING_CONSTANT}{,}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{verifierStub.invocations}{,}{{collectionHasExactlyInOrder}{(}{simpleMethod}{,}{{differentMethod}{.}{getInvocation}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{verifierStub.invocations}{,}{{collectionHasExactlyInOrder}{(}{simpleMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{handler}{=}{{new}{{MockHandler}}{(}{state}{,}{{new}{{ExceptionThrowingBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{invocation}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{invocation}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{invocation}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{invocation}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{invocation}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{f}{.}{set}{(}{testClass}{,}{{Mockito}{.}{mock}{(}{{f}{.}{getType}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{not}{(}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{and}{(}{{contains}{(}{STRING_CONSTANT}{)}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{getMockHandler}{(}{o}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{List}}{{mock}{=}{{Mockito}{.}{mock}{(}{{{List}}{.}{class}}{)}}}{;}}{{{assertNotNull}{(}{{getMockHandler}{(}{mock}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mock}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{methodsOnTraceAfterRemoving}{,}{{collectionHasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{inOrderMode}{()}}{)}{{{}{{{invocations}{=}{{globalInvocationsFinder}{.}{getAllInvocations}{(}{{mode}{.}{getMocksToBeVerifiedInOrder}{()}}{)}}}{;}}{}}}{else}{{{}{{{invocations}{=}{{getRegisteredInvocations}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Modifier}{.}{isFinal}{(}{{clazz}{.}{getModifiers}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mocksReturningFakes}{.}{contains}{(}{{invocation}{.}{getMock}{()}}{)}}{)}{{{}{{return}{{returnFake}{(}{invocation}{)}}{;}}{}}}{else}{{{}{{return}{{defaultValueFor}{(}{invocation}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{run}{(}{notifier}{)}}{;}}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{resetReturnValues}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Object}}{{test}{=}{{super}{.}{createTest}{()}}}{;}}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{setReturnValues}{(}{{new}{{FriendlyReturnValues}}{()}}{)}}{;}}{{return}{test}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{verify}{(}{invocationMatcher}{,}{verificationMode}{)}}{;}}{{return}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{getReturnValues}{()}}{.}{valueFor}{(}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{MockitoConfiguration}{.}{instance}{()}}{.}{getReturnValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoConfiguration}}{{config}{=}{{MockitoConfiguration}{.}{instance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{invocation}{.}{getInvocation}{()}}{,}{{invocation}{.}{getMatchers}{()}}{)}{;}}{{{{this}{.}{result}}{=}{result}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{Result}{(}{{{IAnswer}}{value}}{)}{{{}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addConsecutiveReturnValue}{(}{{{Object}}{value}}{)}{{{}{{{{stubbed}{.}{getFirst}{()}}{.}{addResult}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ResultTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{{stubbed}{.}{getFirst}{()}}{.}{addAnswer}{(}{{Result}{.}{createThrowResult}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Result}}{result}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Answer}}{{result}{=}{{AnswerFactory}{.}{createThrowResult}{(}{{new}{{RuntimeException}}{()}}{,}{filterStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{AnswerFactory}{.}{createThrowResult}{(}{{new}{{RuntimeException}}{()}}{,}{{new}{{StackTraceFilter}}{()}}{)}}{.}{answer}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Answer}}{{result}{=}{{AnswerFactory}{.}{createReturnResult}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{result}{.}{answer}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{{stubbed}{.}{getFirst}{()}}{.}{addAnswer}{(}{{AnswerFactory}{.}{createThrowResult}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{AnswerFactory}{.}{createThrowResult}{(}{throwable}{,}{{new}{{StackTraceFilter}}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{mock}{.}{oneArg}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{mock}{.}{oneArg}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{toString}{(}{{argumentsToMatchers}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Answer}}{{result}{=}{{AnswerFactory}{.}{createReturningAnswer}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{result}{.}{answer}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isA}{(}{{{String}}{.}{class}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Answer}}{{answer}{=}{{AnswerFactory}{.}{createReturningAnswer}{(}{value}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{StubbedInvocationMatcher}}{s}}{:}{stubbed}{)}{{{}{{if}{(}{{s}{.}{matches}{(}{invocation}{)}}{)}{{{}{{return}{{s}{.}{answer}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{answer}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{factory}{.}{createThrowingAnswer}{(}{{new}{{RuntimeException}}{()}}{,}{null}{)}}{.}{answer}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Answer}}{{result}{=}{{factory}{.}{createReturningAnswer}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{result}{.}{answer}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{not}{(}{{notNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{{T}}{>}}{answer}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{{T}}{>}}{answer}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{{T}}{>}}{answer}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addConsecutiveThrowable}{(}{throwable}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addConsecutiveReturnValue}{(}{value}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Answer}}{<}{{T}}{>}}{answer}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addThrowable}{(}{throwable}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addReturnValue}{(}{value}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addThrowableForVoidMethod}{(}{throwable}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{stubber}{.}{addThrowable}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{stubber}{.}{addReturnValue}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{state}{.}{stubbingStarted}{()}}{;}}{{{stubber}{.}{addReturnValue}{(}{STRING_CONSTANT}{)}}{;}}{{{state}{.}{validateState}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addThrowable}{(}{{new}{{Exception}}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setMock}{(}{{{Object}}{mock}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{ClassWithDodgyConstructor}}{{mock}{=}{{factory}{.}{createMock}{(}{{{ClassWithDodgyConstructor}}{.}{class}}{,}{{new}{{MockAwareStub}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ClassWithoutConstructor}}{{proxy}{=}{{factory}{.}{createMock}{(}{{{ClassWithoutConstructor}}{.}{class}}{,}{{new}{{MockAwareStub}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SomeInterface}}{{proxy}{=}{{factory}{.}{createMock}{(}{{{SomeInterface}}{.}{class}}{,}{{new}{{MockAwareStub}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockUtil}{.}{createMock}{(}{classToMock}{,}{null}{,}{MOCKING_PROGRESS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{delegate}{.}{intercept}{(}{proxy}{,}{method}{,}{args}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{stubber}{.}{resultFor}{(}{simpleMethod}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MyException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{stubber}{=}{{new}{{Stubber}}{(}{mockingProgress}{)}}}{;}}}
{AST_ROOT_SC2NF{{void}{setMock}{(}{{{T}}{mock}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{StateResetter}{.}{reset}{()}}{;}}{{{mock}{=}{{Mockito}{.}{mock}{(}{{{IMethods}}{.}{class}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{StateResetter}{.}{reset}{()}}{;}}{{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}{{return}{{new}{{MethodSelectorImpl}}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}{{return}{{new}{{MethodSelectorImpl}}{(}{toBeReturned}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{doReturn}{(}{STRING_CONSTANT}{)}}{.}{when}{(}{null}{)}}{.}{toString}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addConsecutiveAnswer}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addConsecutiveAnswer}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addConsecutiveAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{stubber}{.}{addAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addAnswerForVoidMethod}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{VoidMethodStubbable}}{<}{{T}}{>}}{toReturn}{()}{{{}{{{stubber}{.}{addAnswerForVoidMethod}{(}{{new}{{Returns}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stubber}{.}{addAnswerForVoidMethod}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stubber}}{=}{{new}{{Stubber}}{(}{mockingProgress}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{handler}{.}{voidMethodStubbable}{()}}{;}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{Answer}}{>}}{answers}}{)}{{{}{{{mockitoStubber}{.}{addAnswersForVoidMethod}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mockitoStubber}{.}{addVoidMethodForStubbing}{(}{{new}{{InvocationMatcher}}{(}{simpleMethod}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{mockitoStubber}{.}{addVoidMethodForStubbing}{(}{{new}{{InvocationMatcher}}{(}{simpleMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockUtil}{.}{createMock}{(}{classToMock}{,}{name}{,}{MOCKING_PROGRESS}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{validate}{(}{{new}{{ReturnsVoid}}{()}}{,}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{validate}{(}{{new}{{ReturnsVoid}}{()}}{,}{{{{new}{{InvocationBuilder}}{()}}{.}{simpleMethod}{()}}{.}{toInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ReturnsVoid}}{answer}}}
{AST_ROOT_SC2NF{{{{{{{doReturn}{()}}{.}{doReturn}{()}}{.}{doThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{.}{when}{(}{mock}{)}}{.}{voidMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{{Stubber}}{doReturn}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{answer}{instanceof}{{DoesNothing}}}{)}{{{}{{{validateVoidReturn}{(}{{(}{{DoesNothing}}{)}{answer}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnDoReturn}}{()}}{,}{{{UnfinishedVerificationException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnDoReturn}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{detects}{(}{{new}{{OnDoReturn}}{()}}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{enhancer}{.}{setClassLoader}{(}{{{{MockFactory}}{.}{class}}{.}{getClassLoader}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{AtLeastOnceVerificationTest}}{.}{class}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mockitoStubber}{.}{getResultFor}{(}{simpleMethod}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MyException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportOngoingStubbing}{(}{{new}{{OngoingStubbingImpl}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mode}{.}{atLeastOnceMode}{()}}{||}{{!}{{mode}{.}{matchesActualCount}{(}{{firstChunk}{.}{size}{()}}{)}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{neverWanted}{()}{{{}{{return}{{{!}{{atLeastOnceMode}{()}}}{&&}{{wantedInvocationCount}{==}{NUMBER_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooManyActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{!}{{atLeastOnceMode}{()}}}{&&}{{wantedInvocationCount}{<}{actualCount}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooLittleActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{!}{{atLeastOnceMode}{()}}}{&&}{{wantedInvocationCount}{>}{actualCount}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{missingMethodMode}{()}{{{}{{return}{{{explicitMode}{()}}{&&}{{(}{{{atLeastOnceMode}{()}}{||}{{wantedInvocationCount}{>}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{!}{{mocksToBeVerifiedInOrder}{.}{isEmpty}{()}}}{;}}{{return}{{new}{{VerificationModeImpl}}{(}{wantedNumberOfInvocations}{,}{mocksToBeVerifiedInOrder}{,}{Verification.EXPLICIT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{size}{()}}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toThrow}{(}{error}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{reader}{.}{read}{()}}{)}}{.}{toThrow}{(}{ioException}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toThrow}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mockTwo}{.}{toString}{()}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{booleanReturningMethod}{()}}{)}}{.}{toReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toReturn}{(}{Boolean.FALSE}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{toThrow}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{toThrow}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{toReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{simpleMethod}{()}}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{DeprecatedConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{reportOngoingStubbing}{(}{{new}{{DeprecatedOngoingStubbingImpl}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{anyString}{()}}{)}}{)}}{.}{toReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArgumentsAreDifferent}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{ArgumentsAreDifferent}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{HasStackTrace}}{{lastInvocation}{=}{{finder}{.}{getLastStackTrace}{(}{actualInvocations}{)}}}{;}}{{{reporter}{.}{tooLittleActualInvocationsInAtLeastMode}{(}{{mode}{.}{minimumCount}{()}}{,}{actualCount}{,}{wanted}{,}{lastInvocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{explicitMode}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{atLeast}{=}{{{atLeastMode}{()}}{&&}{{actualCount}{>=}{minInvocationCount}}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{exactNumberOfInvocationsMode}{()}{{{}{{return}{{{!}{{inOrderMode}{()}}}{&&}{{explicitMode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{VerificationModeImpl}}{noMoreInteractions}{()}{{{}{{return}{{new}{{VerificationModeImpl}}{(}{null}{,}{null}{,}{{Collections}{.}{emptyList}{()}}{,}{Verification.NO_MORE_WANTED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockFactoryTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldNeverVerifyWhenVerificationIsInAtLeastMode}{(}{)}{throws}{{Exception}}{{{}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldNeverVerifyWhenVerificationIsExplicit}{(}{)}{throws}{{Exception}}{{{}{{{verifier}{.}{verify}{(}{null}{,}{null}{,}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{mode}{.}{atLeastMode}{()}}}
{AST_ROOT_SC2NF{{mode}{.}{inOrderMode}{()}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{public}{void}{verify}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{{verify}{(}{null}{,}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{verificationMode}{=}{{mockingProgress}{.}{pullVerificationMode}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{atLeastOnceInOrder}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{VerificationModeDecoder}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{{{this}{.}{mode}}{=}{mode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{void}{verify}{(}{{{{List}}{<}{{Invocation}}{>}}{invocations}}{,}{{{InvocationMatcher}}{wanted}}{,}{{{VerificationModeImpl}}{mode}}{)}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{missingMethodMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{missingMethodInOrderMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{inOrderMode}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{VerificationModeImpl}{.}{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{{mode}{=}{{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{private}{{VerificationModeDecoder}}{decode}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{return}{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{inOrderMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{public}{boolean}{appliesTo}{(}{{{VerificationModeImpl}}{mode}}{)}{{{}{{return}{{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{.}{exactNumberOfInvocationsMode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImpl}}{mode}}}
{AST_ROOT_SC2NF{{{}{{assert}{{!}{{mocksToBeVerifiedInOrder}{.}{isEmpty}{()}}}{;}}{{return}{{new}{{VerificationModeImpl}}{(}{minNumberOfInvocations}{,}{mocksToBeVerifiedInOrder}{,}{Verification.AT_LEAST}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{!}{{mocksToBeVerifiedInOrder}{.}{isEmpty}{()}}}{;}}{{return}{{new}{{VerificationModeImpl}}{(}{wantedNumberOfInvocations}{,}{mocksToBeVerifiedInOrder}{,}{Verification.EXPLICIT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{=}{{createRecorder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{state}{.}{verificationStarted}{(}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{atLeastOnceInOrder}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{finder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedDifferentMethod}{)}}{,}{{atLeastOnce}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{finder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedSimpleMethod}{)}}{,}{{atLeastOnce}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{atLeastOnce}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{atLeastOnce}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{VerificationModeImpl}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{VerificationModeDecoder}{(}{{{VerificationMode}}{mode}}{)}{{{}{{{{this}{.}{mode}}{=}{mode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{{mode}{=}{{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{VerificationModeImplTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeImpl}{.}{atLeast}{(}{minNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeImpl}{.}{atLeastOnce}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{VerificationModeImpl}{.}{times}{(}{wantedNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{{VerificationModeDecoder}}{decode}{(}{{{VerificationMode}}{mode}}{)}{{{}{{return}{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mode}{.}{verify}{(}{{getRegisteredInvocations}{()}}{,}{wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{InvocationMatcher}}{getWanted}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{Collection}}{)}{{anyObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{Map}}{)}{{anyObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{List}}{)}{{anyObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{String}}{)}{{anyObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{VerificationModeFactory}{.}{atLeastOnce}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{missingInvocation}{.}{verify}{(}{{data}{.}{getAllInvocations}{()}}{,}{{data}{.}{getWanted}{()}}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{STRING_CONSTANT}{+}{{wantedCount}{()}}{+}{STRING_CONSTANT}{+}{mocksToBeVerifiedInOrder}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{AtLeastXVerificationTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyingRecorder}{.}{eraseLastInvocation}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{ConsecutiveStubbing}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifyingRecorder}{=}{{new}{{VerifyingRecorder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{{registeredInvocations}{.}{getVerifiableInvocations}{()}}{,}{null}{)}}}{;}}{{{{VerificationModeFactory}{.}{noMoreInteractions}{()}}{.}{verify}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{{registeredInvocations}{.}{getVerifiableInvocations}{()}}{,}{invocationMatcher}{)}}}{;}}{{{verificationMode}{.}{verify}{(}{data}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerifyingRecorderTest}}{.}{class}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{mode}{instanceof}{{VerificationInOrderMode}}}{)}}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{neverWanted}{()}{{{}{{return}{{{!}{{atLeastMode}{()}}}{&&}{{{mode}{.}{wantedCount}{()}}{==}{NUMBER_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooManyActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{!}{{atLeastMode}{()}}}{&&}{{{mode}{.}{wantedCount}{()}}{<}{actualCount}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{tooLittleActualInvocations}{(}{{int}{actualCount}}{)}{{{}{{return}{{{!}{{atLeastMode}{()}}}{&&}{{{mode}{.}{wantedCount}{()}}{>}{actualCount}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{MockitoVerificationMode}}{times}{(}{{int}{wantedNumberOfInvocations}}{)}{{{}{{return}{{new}{{MockitoVerificationMode}}{(}{wantedNumberOfInvocations}{,}{Verification.EXPLICIT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{public}{VerificationModeDecoder}{(}{{{MockitoVerificationMode}}{mode}}{)}{{{}{{{{this}{.}{mode}}{=}{mode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoVerificationModeTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{mode}{=}{{VerificationModeFactory}{.}{times}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{private}{{VerificationModeDecoder}}{decode}{(}{{{MockitoVerificationMode}}{mode}}{)}{{{}{{return}{{new}{{VerificationModeDecoder}}{(}{mode}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{{atLeastOnceInOrder}{=}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoVerificationMode}}{mode}}}
{AST_ROOT_SC2NF{{return}{{Mockito}{.}{verify}{(}{mock}{,}{{new}{{InOrderVerificationModeWrapper}}{(}{{(}{{VerificationInOrderMode}}{)}{mode}}{,}{mocksToBeVerifiedInOrder}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Times}}{mode}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{wanted}{,}{mode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{wantedNumberOfInvocations}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wantedInvocationCount}}{=}{wantedNumberOfInvocations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{wantedNumberOfInvocations}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wantedInvocationCount}}{=}{wantedNumberOfInvocations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{numberOfCalls}{.}{verify}{(}{allInvocations}{,}{wanted}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{wantedCount}{()}}{>}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.actualToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{assertNull}{(}{reporterStub.stackTrace}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.validMatchingChunkToReturn}{.}{add}{(}{{wanted}{.}{getInvocation}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.validMatchingChunkToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{verifier}{.}{verify}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{wantedCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{{missingInvocation}{.}{verify}{(}{allInvocations}{,}{wanted}{,}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{wantedCount}{==}{NUMBER_CONSTANT}}{)}{{{}{{{missingInvocation}{.}{verify}{(}{{data}{.}{getAllInvocations}{()}}{,}{{data}{.}{getWanted}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.validMatchingChunkToReturn}{.}{add}{(}{{wanted}{.}{getInvocation}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.validMatchingChunkToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{=}{{new}{{NumberOfInvocationsInOrderChecker}}{(}{finderStub}{,}{reporter}{)}}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.actualToReturn}{.}{add}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{=}{{new}{{MissingInvocationChecker}}{(}{finderStub}{,}{reporterStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{{{new}{{VerificationModeBuilder}}{()}}{.}{inOrder}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{=}{{new}{{MissingInvocationInOrderChecker}}{(}{finderStub}{,}{reporterStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.actualToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{assertNull}{(}{reporterStub.stackTrace}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{verifier}{=}{{new}{{NumberOfInvocationsChecker}}{(}{reporterStub}{,}{finderStub}{)}}}{;}}}
{AST_ROOT_SC2NF{{{numberOfCalls}{.}{verify}{(}{allInvocations}{,}{wanted}{,}{wantedCount}{)}}{;}}}
{AST_ROOT_SC2NF{{{numberOfInvocations}{.}{verify}{(}{{data}{.}{getAllInvocations}{()}}{,}{{data}{.}{getWanted}{()}}{,}{wantedCount}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbing}{==}{null}}{)}{{{}{{{REPORTER}{.}{missingMethodInvocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{public}{{{DeprecatedOngoingStubbing}}{<}{{T}}{>}}{toReturn}{(}{{{Object}}{value}}{)}{{{}{{return}{{toAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{NewOngoingStubbing}}{<}{{T}}{>}}{thenReturn}{(}{{{Object}}{value}}{)}{{{}{{return}{{thenAnswer}{(}{{new}{{Returns}}{(}{value}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{handler}{=}{{new}{{MockHandler}}{(}{null}{,}{state}{,}{{new}{{ExceptionThrowingBinder}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{Configuration}{.}{instance}{()}}{.}{getReturnValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockUtil}{.}{createMock}{(}{classToMock}{,}{MOCKING_PROGRESS}{,}{name}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{mockedType}{.}{getSigners}{()}}{!=}{null}}{)}{{{}{{{enhancer}{.}{setNamingPolicy}{(}{NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES}{)}}{;}}{}}}{else}{{{}{{{enhancer}{.}{setNamingPolicy}{(}{MOCKITO_NAMING_POLICY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockingProgressImpl}}{{state}{=}{{new}{{MockingProgressImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{verificationMode}{=}{null}}{;}}{{{{LastArguments}{.}{instance}{()}}{.}{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{LastArguments}{.}{instance}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportNot}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{LastArguments}{.}{instance}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{LastArguments}}{lastArguments}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportNot}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getLastArguments}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{verificationMode}{=}{null}}{;}}{{{{getLastArguments}{()}}{.}{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{getLastArguments}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{stubbedInvocations}{.}{add}{(}{invocation}{)}}{;}}{{{stubbingInProgress}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExperimentalMockitoJUnitRunner}{(}{{{{Class}}{<}{?}{>}}{klass}}{)}{throws}{{InitializationError}}{{{}{{super}{(}{klass}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{shouldPrint}{()}{{{}{{return}{{!}{{unusedStubs}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{byte}{[]}}{naughtyMethodUnderTestWhichDoesNotFailBecauseItReturnsAValue}{(}{{{String}}{filename}}{)}{{{}{{return}{{{this}{.}{reader}}{.}{readFromFile}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addUnstubbedInvocation}{(}{{{Invocation}}{invocation}}{)}{{{}{{{unstubbedInvocations}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{invocation}{.}{isVoid}{()}}}{&&}{{answer}{==}{null}}}{)}{{{}{{{{mockingProgress}{.}{getDebuggingHelper}{()}}{.}{addUnstubbedInvocation}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{invocation}{.}{isVoid}{()}}}{&&}{{answer}{==}{null}}}{)}{{{}{{{{mockingProgress}{.}{getDebuggingHelper}{()}}{.}{addPotentiallyUnstubbed}{(}{invocationMatcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{print}{(}{{{Object}}{what}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{debuggingHelper}{.}{addStubbedInvocation}{(}{invocation}{)}}{;}}{{{stubbingInProgress}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{print}{()}{{{}{{{System.out}{.}{println}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExperimentalMockitoJUnitRunner}{(}{{{{Class}}{<}{?}{>}}{klass}}{)}{throws}{{InitializationError}}{{{}{{super}{(}{klass}{)}{;}}{{{logger}{=}{{new}{{MockitoLoggerImpl}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{println}{(}{{{Object}}{what}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{hasData}{()}}{)}{{{}{{{WarningsPrinter}}{{warningsPrinter}{=}{{new}{{WarningsPrinter}}{(}{stubbedInvocations}{,}{potentiallyUnstubbedInvocations}{)}}}{;}}{{{warningsPrinter}{.}{print}{(}{logger}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{addPotentiallyUnstubbed}{(}{{{InvocationMatcher}}{invocationMatcher}}{)}{{{}{{if}{(}{{!}{collectingData}}{)}{{{}{return;}{}}}}{{{potentiallyUnstubbedInvocations}{.}{add}{(}{invocationMatcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExperimentalMockitoJUnitRunnerPMStub}{(}{)}{throws}{{InitializationError}}{{{}{{super}{(}{{{ExperimentalMockitoJUnitRunnerPMTest}}{.}{class}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{logger}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{logger}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{logger}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loggedInfo}{=}{{logger}{.}{getLoggedInfo}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{log}{(}{{{Object}}{what}}{)}{{{}{{{loggedInfo}{.}{append}{(}{what}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoProperties.DEFAULT_RETURN_VALUES}{.}{valueFor}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{unusedStubbingThatQualifiesForWarning}{()}}{;}}{{{notifier}{.}{fireTestFailure}{(}{null}{)}}{;}}{{{assertTrue}{(}{{debuggingInfo}{.}{hasData}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DefaultReturnValuesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{EmptyReturnValues}}{reportMatcher}{(}{{{Matcher}}{matcher}}{)}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{mock}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{SMART_NULLS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{mock}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{SMART_NULLS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setup}{()}{{{}{{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{Mockito.SMART_NULLS}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{name}{,}{null}{,}{USING_GLOBAL_CONFIG}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{null}{,}{null}{,}{USING_GLOBAL_CONFIG}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{mockName}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{verify}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateState}{()}}{;}}{{{resetOngoingStubbing}{()}}{;}}{{{verificationMode}{=}{{(}{{VerificationMode}}{)}{verify}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{unfinishedVerificationHere}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{unfinishedVerificationHere}{()}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stackTrace}}{=}{{filter}{.}{filterStackTrace}{(}{stackTrace}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{callback}{instanceof}{{MethodInterceptorFilter}}}{)}{{{}{{return}{{(}{{MethodInterceptorFilter}}{)}{callback}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{causeMessageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StackTrackeChangingTest}}{.}{class}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{actualCount}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{{matcherStack}{.}{push}{(}{matcher}{)}}{;}}{{return}{{new}{{HandyReturnValues}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expectedMessage}{,}{actualMessage}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocations}{(}{wantedCount}{,}{actualCount}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocationsInAtLeastMode}{(}{wantedCount}{,}{actualCount}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocationsInOrder}{(}{wantedCount}{,}{actualCount}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{pluralize}{(}{wantedCount}{)}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{reporter}{.}{tooLittleActualInvocationsInOrderInAtLeastMode}{(}{wantedCount}{,}{actualCount}{,}{wanted}{,}{lastInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SmartNullPointerException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getCause}{()}}{,}{{hasMethodInStackTraceAt}{(}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{spy}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{f}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockTwo}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{differentMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerifcationInOrderFailure}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{VerifcationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{{VerifcationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{{VerifcationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{{VerifcationInOrderFailure}}{e}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{,}{{atLeastOnce}{()}}{)}}{.}{simpleMethod}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerifcationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{message}{=}{{createTooLittleInvocationsMessage}{(}{discrepancy}{,}{wanted}{,}{lastActualStackTrace}{)}}}{;}}{{throw}{{new}{{VerifcationInOrderFailure}}{(}{{join}{(}{{STRING_CONSTANT}{+}{message}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{VerifcationInOrderFailure}}{(}{{join}{(}{{STRING_CONSTANT}{+}{message}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{stubbingInProgress}{)}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{reporter}{.}{unfinishedStubbing}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expectedMessage}{,}{actualMessage}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{misplacedArgumentMatcher}{()}{{{}{{{anyString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mockitoStubber}{.}{setInvocationForPotentialStubbing}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocationMatcher}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{VoidMethodStubbableImpl}}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{VoidMethodStubbableImpl}}{<}{{T}}{>}}{(}{mock}{,}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{stubbingInProgress}{)}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{reporter}{.}{unfinishedStubbing}{(}{{debuggingInfo}{.}{getLastInvocationLocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mockitoStubber}{.}{setInvocationForPotentialStubbing}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocationMatcher}{()}}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{stubbingInProgress}{=}{false}}{;}}{{{verificationMode}{=}{null}}{;}}{{{{getArgumentMatcherStorage}{()}}{.}{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{debuggingInfo}{.}{addStubbedInvocation}{(}{invocation}{)}}{;}}{{{stubbingInProgress}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Throwable}}{{filtered}{=}{{throwable}{.}{fillInStackTrace}{()}}}{;}}{{{filter}{.}{filterStackTrace}{(}{{new}{{HasStackTraceThrowableWrapper}}{(}{filtered}{)}}{)}}{;}}{{throw}{filtered}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{invocation}{.}{getStackTrace}{()}}{,}{reporterStub.stackTrace}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{third}{.}{getStackTrace}{()}}{,}{reporterStub.stackTrace}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.actualToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{assertNull}{(}{reporterStub.stackTrace}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{second}{.}{getStackTrace}{()}}{,}{reporterStub.stackTrace}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{previousInOrder}{==}{null}}{)}{{{}{{{reporter}{.}{wantedButNotInvoked}{(}{wanted}{)}}{;}}{}}}{else}{{{}{{{reporter}{.}{wantedButNotInvokedInOrder}{(}{wanted}{,}{previousInOrder}{,}{{previousInOrder}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{hasStackTrace}}}
{AST_ROOT_SC2NF{{{reporter}{.}{argumentsAreDifferent}{(}{{syncingPrinter}{.}{getWanted}{()}}{,}{{syncingPrinter}{.}{getActual}{()}}{,}{{similar}{.}{getStackTrace}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{noMoreInteractionsWanted}{(}{unverified}{,}{{unverified}{.}{getStackTrace}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{previous}{.}{getStackTrace}{()}}{,}{reporterStub.previousStackTrace}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{actualInvocation}{.}{getStackTrace}{()}}{,}{reporterStub.actualInvocationStackTrace}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{reporterStub.actualInvocationStackTrace}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{overloadedButSameArgs}{=}{{{!}{methodEquals}}{&&}{{argumentsMatch}{(}{candidate}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{expectedMatchersSize}{=}{{{invocation}{.}{getArguments}{()}}{.}{length}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastStackTrace}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastStackTrace}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastInvocation}{=}{{finder}{.}{getLastStackTrace}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastInvocation}{=}{{finder}{.}{getLastStackTrace}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{previousInOrder}{==}{null}}{)}{{{}{{{reporter}{.}{wantedButNotInvoked}{(}{wanted}{)}}{;}}{}}}{else}{{{}{{{reporter}{.}{wantedButNotInvokedInOrder}{(}{wanted}{,}{previousInOrder}{,}{{previousInOrder}{.}{getLocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{noMoreInteractionsWanted}{(}{unverified}{,}{{unverified}{.}{getLocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{toString}{()}{{{}{{return}{{{this}{.}{firstTraceElement}}{.}{toString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{matcherStack}{.}{isEmpty}{()}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{Mockito.MOCKING_PROGRESS}{.}{pullOngoingStubbing}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ret}{.}{getClass}{()}}{.}{isArray}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{doAnswer}{(}{{new}{{Returns}}{(}{toBeReturned}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{doAnswer}{(}{{new}{{DoesNothing}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{doAnswer}{(}{{new}{{ThrowsException}}{(}{toBeThrown}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyNoMoreInteractions}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{null}{,}{{(}{{T}}{)}{null}}{,}{returnValues}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{name}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{MockitoCore}{.}{mock}{(}{{(}{{Class}}{)}{class1}}{,}{null}{,}{null}{,}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{inOrder}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{doAnswer}{(}{{new}{{Returns}}{(}{toBeReturned}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{doAnswer}{(}{{new}{{DoesNothing}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{doAnswer}{(}{answer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{doAnswer}{(}{{new}{{ThrowsException}}{(}{toBeThrown}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{stubVoid}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoCore}{.}{verifyNoMoreInteractions}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoCore}{.}{verifyNoMoreInteractions}{(}{mocks}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{verify}{(}{mock}{,}{mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoCore}{.}{reset}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{verify}{(}{mock}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{when}{(}{methodCall}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{stub}{(}{methodCall}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{mock}{(}{classToMock}{,}{null}{,}{{(}{{T}}{)}{null}}{,}{returnValues}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{mock}{(}{classToMock}{,}{name}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockitoCore}{.}{mock}{(}{classToMock}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{MockUtil}{.}{resetMock}{(}{m}{,}{MOCKING_PROGRESS}{,}{Mockito.RETURNS_DEFAULTS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{mocks}{==}{null}}{||}{{mocks.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{{REPORTER}{.}{mocksHaveToBePassedToVerifyNoMoreInteractions}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}{{return}{{(}{{NewOngoingStubbing}}{)}{{stub}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MOCKING_PROGRESS}{.}{stubbingStarted}{()}}{;}}{{return}{{(}{{DeprecatedOngoingStubbing}}{)}{{stub}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideCleansStackTrace}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideCleansStackTrace}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{Mockito.RETURNS_SMART_NULLS}{)}}}{;}}{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideCleansStackTrace}{(}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideCleansStackTrace}{(}{true}{)}}{;}}{{{first}{()}}{;}}{{{second}{()}}{;}}{{{third}{()}}{;}}{{{fourth}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{init}{()}{{{}{{{StateMaster}{.}{validate}{()}}{;}}{{{MockitoAnnotations}{.}{initMocks}{(}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StateMaster}{.}{validate}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{isA}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{filter}{.}{filterStackTrace}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{unfilteredStackTrace}{=}{{getStackTrace}{()}}}{;}}{{{StackTraceFilter}}{{filter}{=}{{new}{{StackTraceFilter}}{()}}}{;}}{{{filter}{.}{filterStackTrace}{(}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{filter}{.}{filterStackTrace}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{filter}{.}{filterStackTrace}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{firstTraceElement}}{=}{{{filter}{.}{filterStackTrace}{(}{stackTrace}{)}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{cleanStackTraces}{()}{{{}{{{super}{.}{makeStackTracesClean}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{filter}{.}{filterConditionally}{(}{t}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidUseOfMatchersException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mockTwo}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{mock}{.}{toString}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertThat}{(}{{e}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{overloadedButSameArgs}{=}{{{!}{methodEquals}}{&&}{{argumentsMatch}{(}{{candidate}{.}{getArguments}{()}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{anyObject}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{method}{,}{args}{,}{sequenceNumber}{)}}}{;}}}
{AST_ROOT_SC2NF{{{UnderTest}}{{mock}{=}{{mock}{(}{{{UnderTest}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{Person}{(}{{int}{age}}{)}{{{}{{{{this}{.}{age}}{=}{age}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{arguments}{.}{isEmpty}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{argumentValueNotYetCaptured}{()}}{;}}{}}}{else}{{{}{{return}{{(}{{T}}{)}{{arguments}{.}{getLast}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{anyObject}{()}}{;}}{{try}{{{}{{{MockitoTroubleshooter}{.}{validateFrameworkState}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{InvalidUseOfMatchersException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MockitoTroubleshooter}{.}{validateFrameworkState}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedStubbingException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{verify}{(}{mock}{)}}{;}}{{try}{{{}{{{MockitoTroubleshooter}{.}{validateFrameworkState}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{List}}{)}{arguments}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{this}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{notifier}{.}{addListener}{(}{{new}{{FrameworkUsageValidator}}{(}{notifier}{)}}{)}}{;}}{{{super}{.}{run}{(}{notifier}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{classProvider}{.}{hasJUnit45OrHigher}{()}}{)}{{{}{{return}{{classProvider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}{else}{{{}{{return}{{classProvider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{RunnerFactory}{(}{{{ClassProvider}}{classProvider}}{)}{{{}{{{{this}{.}{classProvider}}{=}{classProvider}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{klass}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{runTest}{(}{notifier}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{MockUtil}{.}{isMock}{(}{instance}{)}}{)}{{{}{{return}{{returnValues}{.}{valueFor}{(}{invocation}{)}}{;}}{}}}{else}{{{}{{return}{{methodProxy}{.}{invoke}{(}{instance}{,}{args}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{{new}{{ShallowCopyTool}}{()}}{.}{copy}{(}{optionalInstance}{,}{mock}{)}}{;}}{}}}{{catch}{(}{{{UnableToCopyFieldValue}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldCallRealMethdsEvenDelegatedToOtherSelfMethod}{()}{{{}{{{String}}{{name}{=}{{mock}{.}{getName}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{{String}}{guessName}{()}{{{}{{return}{defaultName}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getName}{()}{{{}{{return}{{guessName}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{VoidMethodStubbableImpl}}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{name}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{null}{,}{null}{,}{null}{,}{RETURNS_DEFAULTS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{MockUtil}{.}{isMock}{(}{classMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{MockUtil}{.}{isMock}{(}{interfaceMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{MockUtil}{.}{isMock}{(}{throwable}{)}}{)}{{{}{{throw}{throwable}{;}}{}}}}}
{AST_ROOT_SC2NF{{MockUtil}{.}{isMock}{(}{instance}{)}}}
{AST_ROOT_SC2NF{{{MockUtil}{.}{getMockHandler}{(}{withFinal}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockName}}{{name}{=}{{MockUtil}{.}{getMockName}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{MockUtil}{.}{getMockHandler}{(}{o}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{List}}{{mock}{=}{{Mockito}{.}{mock}{(}{{{List}}{.}{class}}{)}}}{;}}{{{assertNotNull}{(}{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{fromSingleMock}{=}{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{getRegisteredInvocations}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandler}}{<}{{T}}{>}}{{handler}{=}{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mock}{==}{null}}{)}{{{}{{{reporter}{.}{nullPassedWhenCreatingInOrder}{()}}{;}}{}}}{else}{{if}{(}{{!}{{MockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{{reporter}{.}{notAMockPassedWhenCreatingInOrder}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mock}{==}{null}}{)}{{{}{{{reporter}{.}{nullPassedToVerifyNoMoreInteractions}{()}}{;}}{}}}}{{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{verifyNoMoreInteractions}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{MockUtil}{.}{resetMock}{(}{m}{,}{mockingProgress}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mock}{==}{null}}{)}{{{}{{{reporter}{.}{nullPassedToVerify}{()}}{;}}{}}}{else}{{if}{(}{{!}{{MockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{{reporter}{.}{notAMockPassedToVerify}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{validateState}{()}}{;}}{{{mockingProgress}{.}{resetOngoingStubbing}{()}}{;}}{{return}{{MockUtil}{.}{createMock}{(}{classToMock}{,}{mockingProgress}{,}{{(}{{MockSettingsImpl}}{)}{mockSettings}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{{IMethods}}{.}{class}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{{Foo}}{.}{class}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{Foo}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{{IFoo}}{.}{class}}{,}{null}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Foo}}{{mock}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{{IFoo}}{.}{class}}{,}{{{IBar}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{MOCKITO_CORE}{.}{mock}{(}{{(}{{{Class}}{<}{{T}}{>}}{)}{{object}{.}{getClass}{()}}}{,}{{{{configureWith}{()}}{.}{spiedInstance}{(}{object}{)}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{configureWith}{()}}{.}{defaultBehavior}{(}{returnValues}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{{configureWith}{()}}{.}{name}{(}{name}{)}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{configureWith}{()}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldScreamWhenExtraIsTheSame}{()}{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{{IMethods}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldScreamWhenNonInterfacePassed}{()}{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{{LinkedList}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{configureWith}{()}}{.}{extraInterfaces}{(}{{{List}}{.}{class}}{,}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultBehavior}{(}{returnValues}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockSettingsImpl}}{{settings}{=}{{(}{{MockSettingsImpl}}{)}{{Mockito}{.}{withSettings}{()}}}}{;}}{{{assertEquals}{(}{Mockito.RETURNS_DEFAULTS}{,}{{settings}{.}{getReturnValues}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{defaultBehavior}{(}{RETURNS_SMART_NULLS}{)}}{.}{name}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{mockSettings}{.}{getReturnValues}{()}}{.}{valueFor}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{values}{.}{valueFor}{(}{{invocationOf}{(}{{{StringMethods}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{ret}{=}{{(}{{{String}}{[]}}{)}{{values}{.}{valueFor}{(}{{invocationOf}{(}{{{StringMethods}}{.}{class}}{,}{STRING_CONSTANT}{)}}{)}}}}}
{AST_ROOT_SC2NF{{public}{static}{{MockSettings}}{withSettings}{()}{{{}{{return}{{{new}{{MockSettingsImpl}}{()}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{CallsRealMethod}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{MOCKITO_CORE}{.}{mock}{(}{{(}{{{Class}}{<}{{T}}{>}}{)}{{object}{.}{getClass}{()}}}{,}{{{{withSettings}{()}}{.}{spiedInstance}{(}{object}{)}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{{{withSettings}{()}}{.}{name}{(}{name}{)}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultBehavior}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{EmptyReturnValuesTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideCleansStackTrace}{(}{false}{)}}{;}}{{{{ConfigurationAccess}{.}{getConfig}{()}}{.}{overrideReturnValues}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{runner}{=}{{new}{{VerboseMockitoJUnitRunner}}{(}{{{DummyTest}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Object}}{answer}{(}{{{InvocationOnMock}}{invocation}}{)}{throws}{{Throwable}}{{{}{{return}{{invocation}{.}{invokeSuper}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MOCKITO_CORE}{.}{mock}{(}{{(}{{{Class}}{<}{{T}}{>}}{)}{{object}{.}{getClass}{()}}}{,}{{{{withSettings}{()}}{.}{spiedInstance}{(}{object}{)}}{.}{defaultAnswer}{(}{RETURNS_DEFAULTS}{)}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{{{new}{{ConditionalStackTraceFilter}}{()}}{.}{filter}{(}{t}{)}}{;}}{{throw}{t}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{firstTraceElement}}{=}{{{filter}{.}{filter}{(}{stackTrace}{)}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{firstTraceElement}}{=}{{{filter}{.}{filter}{(}{stackTrace}{,}{NUMBER_CONSTANT}{)}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{{throwable}{.}{getStackTrace}{()}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{{new}{{{StackTraceElement}}{[}}{NUMBER_CONSTANT}{]}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{StackTraceElement}}{[]}}{{filtered}{=}{{filter}{.}{filter}{(}{t}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{line}{=}{{printer}{.}{getArgumentsLine}{(}{{(}{{List}}{)}{{Arrays}{.}{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{NotNull.NOT_NULL}{)}}}{,}{{PrintSettings}{.}{verboseArgs}{()}}{)}}}}
{AST_ROOT_SC2NF{{printer}{.}{getArgumentsBlock}{(}{{(}{{List}}{)}{{Arrays}{.}{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{)}}}{,}{{PrintSettings}{.}{verboseArgs}{()}}{)}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getVerboseVariant}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getVerboseVariant}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{setMatchersToBePrintedVerbosely}{(}{{{{Matcher}}{[]}}{toBePrintedVerbosely}}{)}{{{}{{{{this}{.}{verboseMatchers}}{=}{{Arrays}{.}{asList}{(}{toBePrintedVerbosely}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Matcher}}{.}{.}{.}{verboselyPrinted}}}
{AST_ROOT_SC2NF{{{Matcher}}{.}{.}{.}{toBePrintedVerbosely}}}
{AST_ROOT_SC2NF{{{}{{{withPrintSettings}{.}{add}{(}{{{(}{{(}{{CanPrintArgumentVerbosely}}{)}{matcher}}{)}}{.}{getVerboseSelfDescribing}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{SelfDescribing}}{getVerboseSelfDescribing}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getVerboseSelfDescribing}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getVerboseSelfDescribing}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CanDescribeVerbosely}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{StringDescription}{.}{toString}{(}{{m}{.}{withExtraTypeInfo}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{withFinal}{)}}{.}{finalMethod}{(}{{anyObject}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{public}{BDDOngoingStubbingImpl}{(}{{{{NewOngoingStubbing}}{<}{{T}}{>}}{ongoingStubbing}}{)}{{{}{{{{this}{.}{mockitoOngoingStubbing}}{=}{ongoingStubbing}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Field}}{{createInfoField}{=}{{{methodProxy}{.}{getClass}{()}}{.}{getDeclaredField}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getInterceptor}{(}{mock}{)}}{.}{getDelegate}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{capturingMatcher}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{String}}{>}}{{captor}{=}{{new}{{{ArgumentCaptor}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{Person}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{String}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{Person}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{Person}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{person}{=}{{new}{{{ArgumentCaptor}}{<}{{Person}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{Person}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{Person}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{capturingMatcher}{)}}{;}}{{return}{{{new}{{HandyReturnValues}}{()}}{.}{returnFor}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{String}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{newMessage}{+=}{{STRING_CONSTANT}{+}{{debuggingInfo}{.}{getWarnings}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{newMessage}{+=}{{STRING_CONSTANT}{+}{{debuggingInfo}{.}{getWarnings}{()}}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{private}{{String}}{thisStubWasNotUsed}{(}{{{Invocation}}{i}}{)}{{{}{{return}{{join}{(}{STRING_CONSTANT}{,}{i}{,}{{i}{.}{getLocation}{()}}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{unusedStubs}{,}{unstubbedInvocations}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{invocationMarker}{.}{markVerified}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{wantedNumberOfInvocations}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{{this}{.}{wantedCount}}{=}{wantedNumberOfInvocations}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{int}{hashCodeForMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{new}{{Integer}}{(}{{System}{.}{identityHashCode}{(}{mock}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getInterceptor}{(}{mock}{)}}{.}{getMockHandler}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{mockUtil}{.}{resetMock}{(}{m}{,}{mockingProgress}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{isToString}{(}{{{InvocationOnMock}}{invocation}}{)}{{{}{{return}{{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Invocation}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{equalsMethod}{.}{equals}{(}{method}{)}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{newFilter}{=}{{new}{{MethodInterceptorFilter}}{(}{{{Object}}{.}{class}}{,}{newMockHandler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{classToMock}{,}{mockHandler}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{hashCodeMethod}{.}{equals}{(}{method}{)}}{)}{{{}{{return}{{hashCodeForMock}{(}{proxy}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ObjectMethodsGuru}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{isToString}{(}{{{InvocationOnMock}}{invocation}}{)}{{{}{{return}{{ObjectMethodsGuru}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{markFirstOccurence}{(}{chunk}{,}{wantedMatcher}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{argumentsMatch}{(}{actualArgs}{)}}{;}}{}}}{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{false}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{Arrays}{.}{asList}{(}{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{,}{capturingMatcher}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{proxy}{.}{setCallbacks}{(}{{new}{{{Callback}}{[]}}{{{}{interceptor}{,}{NoOp.INSTANCE}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{methodProxy}{.}{invokeSuper}{(}{target}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{CGLIBProxyRealMethod}{(}{{{MethodProxy}}{methodProxy}}{)}{{{}{{{{this}{.}{methodProxy}}{=}{methodProxy}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{FilteredCGLIBProxyRealMethod}{(}{{{MethodProxy}}{methodProxy}}{)}{{{}{{this}{(}{{new}{{CGLIBProxyRealMethod}}{(}{methodProxy}{)}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Any}}{{mock}{=}{{mock}{(}{{{Any}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{methodProxy}{.}{getMethodProxy}{()}}{.}{invokeSuper}{(}{target}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Method}}{getMethod}{()}{{{}{{return}{{invocation}{.}{getMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Method}}{method}}}
{AST_ROOT_SC2NF{{{Method}}{getMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{{new}{{DelegatingMockitoMethod}}{(}{method}{)}}{,}{args}{,}{sequenceNumber}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{ObjectOutputStream}}{(}{{new}{{ByteArrayOutputStream}}{()}}{)}}{.}{writeObject}{(}{{new}{{MethodInterceptorFilter}}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{mockHandler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{{new}{{SerializableMockitoMethod}}{(}{testBaseToStringMethod}{)}}{.}{equals}{(}{mockMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockMethod}{=}{{new}{{SerializableMockitoMethod}}{(}{toStringMethod}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{getReturnType}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{MockitoMethod}}{{mockitoMethod}{=}{{new}{{SerializableMockitoMethod}}{(}{method}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{{new}{{SerializableMockitoMethod}}{(}{method}{)}}{,}{args}{,}{sequenceNumber}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{{new}{{MockitoMethod}}{(}{testBaseToStringMethod}{)}}{.}{equals}{(}{mockMethod}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockMethod}{=}{{new}{{MockitoMethod}}{(}{toStringMethod}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{MockitoMethod}}{getMethod}{()}{{{}{{return}{{invocation}{.}{getMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoMethod}}{getMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{MockitoMethod}}{method}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{new}{{Invocation}}{(}{mock}{,}{{new}{{MockitoMethod}}{(}{method}{)}}{,}{args}{,}{sequenceNumber}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SerializableMethod}}{getMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{SerializableMethod}}{getMethod}{()}{{{}{{return}{{invocation}{.}{getMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{getMethod}{()}}{.}{isDeclaredOnInterface}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotCallRealMethodOnInterface}{()}}{;}}{}}}}{{return}{{realMethod}{.}{invoke}{(}{mock}{,}{rawArguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{invocation}{.}{getMethod}{()}}{.}{isDeclaredOnInterface}{()}}{)}{{{}{{{reporter}{.}{cannotCallRealMethodOnInterface}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{SerializableMethod}}{method}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isPrimitiveWrapper}{(}{clazz}{)}}{)}{{{}{{return}{{primitiveWrapperOf}{(}{clazz}{)}}{;}}{}}}}{{return}{{primitiveValueFor}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{MethodProxy}}{getMethodProxy}{()}{{{}{{return}{methodProxy}{;}}{}}}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IMethods}}{{mock}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{{withSettings}{()}}{.}{extraInterfaces}{(}{{{Serializable}}{.}{class}}{)}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{allInvocations}{=}{{{ongoingStubbing}{.}{getRegisteredInvocations}{()}}{.}{getAll}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{{ConsecutiveStubbing}}{<}{{T}}{>}}{(}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{answer}{)}}{;}}{{return}{{new}{{{ConsecutiveStubbing}}{<}{{T}}{>}}{(}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{OngoingStubbingImpl}}{<}{{T}}{>}}{{ongoingStubbing}{=}{{new}{{{OngoingStubbingImpl}}{<}{{T}}{>}}{(}{mockitoStubber}{,}{{mockitoStubber}{.}{getRegisteredInvocations}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{addAnswer}{(}{{{Answer}}{answer}}{)}{{{}{{{addAnswer}{(}{answer}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MockHandler}{(}{{{{MockHandler}}{<}{{T}}{>}}{oldMockHandler}}{)}{{{}{{this}{(}{oldMockHandler.mockName}{,}{oldMockHandler.mockingProgress}{,}{oldMockHandler.matchersBinder}{,}{oldMockHandler.mockSettings}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{mockHandler}{.}{handle}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{MockHandler}}{)}{{{getInterceptor}{(}{mock}{)}}{.}{getMockHandler}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{mockHanlder}{,}{{(}{{MockSettingsImpl}}{)}{{withSettings}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MethodInterceptorFilter}}{{filter}{=}{{new}{{MethodInterceptorFilter}}{(}{mockHanlder}{,}{{(}{{MockSettingsImpl}}{)}{{withSettings}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{mockHanlder}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{mockHanlder}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{validateState}{()}}{;}}{{{mockingProgress}{.}{resetOngoingStubbing}{()}}{;}}{{return}{{mockUtil}{.}{createMock}{(}{classToMock}{,}{mockingProgress}{,}{{(}{{MockSettingsImpl}}{)}{mockSettings}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MockName}}{getMockName}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{getMockHandler}{(}{mock}{)}}{.}{getMockName}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{MockHandler}{()}{{{}{{this}{(}{{new}{{ThreadSafeMockingProgress}}{()}}{,}{{new}{{MatchersBinder}}{()}}{,}{{new}{{MockSettingsImpl}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addAnswerForVoidMethod}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{VoidMethodStubbable}}{<}{{T}}{>}}{toReturn}{()}{{{}{{{mockitoStubber}{.}{addAnswerForVoidMethod}{(}{{new}{{DoesNothing}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addAnswerForVoidMethod}{(}{{new}{{ThrowsException}}{(}{throwable}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{mockitoStubber}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{null}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{state}{.}{stubbingStarted}{()}}{;}}{{{mockitoStubber}{.}{addAnswer}{(}{{new}{{Returns}}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{{state}{.}{validateState}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addAnswer}{(}{{new}{{ThrowsException}}{(}{{new}{{Exception}}{()}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addConsecutiveAnswer}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoStubber}{.}{addConsecutiveAnswer}{(}{answer}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{Answer}}{>}}{answers}}{)}{{{}{{{mockitoStubber}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{VoidMethodStubbableImpl}}{<}{{T}}{>}}{(}{mock}{,}{mockitoStubber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{{mockitoStubber}{.}{getInvocations}{()}}{,}{null}{)}}}{;}}{{{{VerificationModeFactory}{.}{noMoreInteractions}{()}}{.}{verify}{(}{data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{mockitoStubber}}{=}{{new}{{MockitoStubber}}{(}{mockingProgress}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{i}{.}{stubInfo}{()}}{!=}{null}}{)}{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{{{i}{.}{stubInfo}{()}}{.}{stubbingLocation}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{printInvocations}{(}{{{Object}}{.}{.}{.}{mocks}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{mock}{(}{classToMock}{,}{mockSettings}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{void}{varargs}{(}{{{String}}{.}{.}{.}{string}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{varargs}{(}{{{Object}}{.}{.}{.}{object}}{)}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{allInvocations}{=}{{{new}{{AllInvocationsFinder}}{()}}{.}{getAllInvocations}{(}{mocksToBeVerifiedInOrder}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{finder}{.}{getAllInvocations}{(}{{asList}{(}{mockOne}{,}{mockOne}{,}{mockOne}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{finder}{.}{getAllInvocations}{(}{{asList}{(}{mockOne}{,}{mockTwo}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{log}{(}{{{Object}}{what}}{)}{{{}{{{System.out}{.}{println}{(}{{what}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{debuggingInfo}{.}{addStubbedInvocation}{(}{invocation}{)}}{;}}{{{stubbingInProgress}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{InvocationMatcher}}{i}}{:}{allInvocations}{)}{{{}{{{findingsListener}{.}{foundUstubbed}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{listener}{,}{{only}{()}}{)}}{.}{foundUstubbed}{(}{unstubbedInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{foundUstubbed}{(}{{{InvocationMatcher}}{unstubbed}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{MockitoLoggerImpl}}{()}}{,}{{{new}{{RunnerFactory}}{()}}{.}{create}{(}{klass}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{cleanStackTraces}{()}{{{}{{{super}{.}{makeStackTracesClean}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MockUtil}{(}{{{CreationValidator}}{creationValidator}}{)}{{{}{{{{this}{.}{creationValidator}}{=}{creationValidator}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{isEmpty}{(}{{{String}}{warnings}}{)}{{{}{{return}{{{warnings}{==}{null}}{||}{{warnings}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SimpleTest}}{{test}{=}{{new}{{SimpleTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleTest}}{{test}{=}{{new}{{SimpleTest}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{WantedButNotInvoked}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsWanted}{()}{{{}{{{{inOrder}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{instance}{==}{null}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{field}{.}{getName}{()}}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{log}{=}{{{Mockito}{.}{debug}{()}}{.}{printInvocations}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{log}{=}{{{Mockito}{.}{debug}{()}}{.}{printInvocations}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{log}{=}{{{Mockito}{.}{debug}{()}}{.}{printInvocations}{(}{mock}{,}{mockTwo}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMock}}{{Object}}{{iAmNull}{=}{null}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMock}}{{@}{Captor}}{{ArgumentCaptor}}{{captor}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMock}}{{@}{Mock}}{{List}}{{mock}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{{new}{{Object}}{()}{{{}{{{@}{InjectMock}}{{@}{Spy}}{{List}}{{mock}}{;}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{null}{!=}{{field}{.}{getAnnotation}{(}{{{InjectMock}}{.}{class}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{field}{.}{isAnnotationPresent}{(}{annotation}{)}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{unsupportedCombinationOfAnnotations}{(}{{annotation}{.}{getSimpleName}{()}}{,}{{{{InjectMock}}{.}{class}}{.}{getSimpleName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{field}{.}{isAnnotationPresent}{(}{{{InjectMock}}{.}{class}}{)}}}
{AST_ROOT_SC2NF{{{}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{finderStub.validMatchingChunkToReturn}{.}{add}{(}{{wanted}{.}{getInvocation}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{finderStub.validMatchingChunkToReturn}{.}{isEmpty}{()}}{)}}{;}}{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{mockitoCore}{.}{verify}{(}{mock}{,}{{new}{{InOrderWrapper}}{(}{{(}{{VerificationInOrderMode}}{)}{mode}}{,}{mocksToBeVerifiedInOrder}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{invocation}{.}{isVoid}{()}}{)}{{{}{{{reporter}{.}{cannotStubVoidMethodWithAReturnValue}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{{invocationContainerImpl}{.}{getInvocations}{()}}{,}{invocationMatcher}{)}}}{;}}{{{verificationMode}{.}{verify}{(}{data}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{Thread}{.}{sleep}{(}{sleep}{)}}{;}}{}}}{{catch}{(}{{{InterruptedException}}{ie}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{t}{.}{verify}{(}{data}{)}}{;}}{}}}{{catch}{(}{{{MockitoAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{InvocationMatcher}}{getWanted}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{InOrderContext}}{getOrderingContext}{()}{{{}{{return}{inOrder}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{join}{(}{{STRING_CONSTANT}{+}{methodName}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{anyObject}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{{instance}{=}{{field}{.}{get}{(}{testClass}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{field}{.}{getName}{()}}{+}{STRING_CONSTANT}{+}{{field}{.}{getType}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{field}{.}{getName}{()}}{+}{STRING_CONSTANT}{+}{{field}{.}{getType}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{field}{.}{getName}{()}}{+}{STRING_CONSTANT}{+}{{field}{.}{getType}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{field}{.}{getName}{()}}{+}{STRING_CONSTANT}{+}{{field}{.}{getType}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{NestedClassWithNoArgConstructor}{(}{{{String}}{_1arg}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{{reporter}{.}{notAMockPassedToVerify}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{Invocation}{.}{isToString}{(}{invocation}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{Reporter}}{()}}{.}{smartNullPointerException}{(}{obj}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{method}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{formatMethodCall}{()}}{+}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{null}{!=}{{field}{.}{getAnnotation}{(}{{{Mock}}{.}{class}}{)}}}}
{AST_ROOT_SC2NF{{{Object}}{testClass}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{filter}{.}{accept}{(}{actualMethod}{)}}}{;}}}
{AST_ROOT_SC2NF{{{notifyInvocationListener}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockHandler}}{handler}}}
{AST_ROOT_SC2NF{{{}{{{{given}{(}{{{handler}{.}{getMockSettings}{()}}{.}{getDefaultAnswer}{()}}{)}}{.}{willReturn}{(}{SOME_ANSWER}{)}}{;}}{{{stubOrdinaryInvocationWithReturnValue}{(}{handler}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{doThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{.}{when}{(}{throwingListener}{)}}}
{AST_ROOT_SC2NF{{public}{{OngoingMockInjection}}{tryPropertyOrFieldInjection}{()}{{{}{{{appendStrategy}{(}{{new}{{PropertyAndSetterInjection}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{OngoingMockInjection}}{tryConstructorInjection}{()}{{{}{{{appendStrategy}{(}{{new}{{ConstructorInjection}}{()}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{nextStrategy}{!=}{null}}{&&}{{nextStrategy}{.}{processInjection}{(}{field}{,}{fieldOwner}{,}{mockCandidates}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{wasAccessible}{!=}{null}}{;}}{{try}{{{}{{{accessibleObject}{.}{setAccessible}{(}{wasAccessible}{)}}{;}}{}}}{{catch}{(}{{{Throwable}}{t}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{AllInvocationsFinder}}{{finder}{=}{{new}{{AllInvocationsFinder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{InvocationListener}}{listener}}{:}{{mockSettings}{.}{getInvocationListener}{()}}{)}{{{}{{{notifyListenerOfInvocationWithException}{(}{invocation}{,}{exception}{,}{listener}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{InvocationListener}}{listener}}{:}{{mockSettings}{.}{getInvocationListener}{()}}{)}{{{}{{{notifyListenerOfInvocationWithReturnValue}{(}{invocation}{,}{returnValue}{,}{listener}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{given}{(}{{{handler}{.}{getMockSettings}{()}}{.}{getInvocationListener}{()}}{)}}{.}{willReturn}{(}{{Arrays}{.}{asList}{(}{listener}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{shouldThrowCorrectExceptionForNullInvocationListener}{(}{)}{throws}{{Exception}}{{{}{{{{new}{{Reporter}}{()}}{.}{nullInvocationListenerAdded}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{{withSettings}{()}}{.}{callback}{(}{listener1}{)}}{.}{callback}{(}{listener2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{callback}{(}{listener}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{{withSettings}{()}}{.}{callback}{(}{listener1}{)}}{.}{callback}{(}{listener2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Foo}}{{foo}{=}{{mock}{(}{{{Foo}}{.}{class}}{,}{{{withSettings}{()}}{.}{callback}{(}{listener}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertFalse}{(}{{mockSettingsImpl}{.}{hasInvocationListeners}{()}}{)}}{;}}{{{mockSettingsImpl}{.}{verboseLogging}{()}}{;}}{{{assertContainsType}{(}{{mockSettingsImpl}{.}{getInvocationListeners}{()}}{,}{{{LogInvocationsToStdOutListener}}{.}{class}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MethodCallReport}}{mcr}}}
{AST_ROOT_SC2NF{{public}{void}{invocationListenersRequiresAtLeastOneListener}{()}{{{}{{throw}{{new}{{MockitoException}}{(}{{join}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{invocationListenerDoesNotAcceptNullParameters}{()}{{{}{{throw}{{new}{{MockitoException}}{(}{{join}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{notifier}{.}{handle}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{notifier}{.}{handle}{(}{invocation}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockSettingsImpl}{.}{invocationListeners}{(}{invocationListener}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockSettingsImpl}{.}{invocationListeners}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mapOngoingStubbing}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{{URL}}{[]}}{{{}{{obtainClassPath}{(}{{{SimplePerRealmReloadingClassLoader}}{.}{class}}{)}}{}}}}{,}{parentClassLoader}{)}{;}}{{{{this}{.}{reloadClassPredicate}}{=}{reloadClassPredicate}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{{URL}}{[]}}{{{}{{obtainClassPath}{(}{{{SimplePerRealmReloadingClassLoader}}{.}{class}}{)}}{}}}}{)}{;}}{{{{this}{.}{reloadClassPredicate}}{=}{reloadClassPredicate}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{report}{.}{fieldWasInitialized}{()}}{;}}}
{AST_ROOT_SC2NF{{{mocks}{.}{addAll}{(}{{scanMocks}{(}{testClassInstance}{,}{clazz}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{inject_mocks_even_in_declared_spy}{(}{)}{throws}{{Exception}}{{{}{{{assertNotNull}{(}{spiedReceiver.antena}{)}}{;}}{{{assertNotNull}{(}{spiedReceiver.tuner}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{InjectMocksScanner}}{(}{testClassInstance}{,}{clazz}{)}}{.}{addTo}{(}{mockDependentFields}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{MockHandlerInterface}}{)}{{{getInterceptor}{(}{mock}{)}}{.}{getHandler}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{canThrowException}{(}{)}{throws}{{ChangedCharSetException}}{,}{{CharacterCodingException}}{;}}}
{AST_ROOT_SC2NF{{{MockSettingsImpl}}{mockSettings}}}
{AST_ROOT_SC2NF{{{MockSettingsImpl}}{settings}}}
{AST_ROOT_SC2NF{{{MockSettingsImpl}}{settings}}}
{AST_ROOT_SC2NF{{{MockSettingsImpl}}{settings}}}
{AST_ROOT_SC2NF{{public}{void}{setTheField}{(}{{final}{{File}}{theField}}{)}{{{}{{{setTheFieldWasUsed}{=}{true}}{;}}{{{{this}{.}{theField}}{=}{theField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{{configClass}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{private}{void}{misplacedBooleanArgumentMatcher}{()}{{{}{{{anyBoolean}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{misplacedIntArgumentMatcher}{()}{{{}{{{anyInt}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{misplacedArgumentMatcher}{()}{{{}{{{anyObject}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Matcher}}{>}}{pullMatchers}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Object}}{>}}{{mocks}{=}{{new}{{{HashSet}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Object}}{>}}{{mocks}{=}{{new}{{{HashSet}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{delegatedInstance}}{=}{delegatedInstance}}{;}}{{return}{{defaultAnswer}{(}{{new}{{ReturnsDelegate}}{(}{{this}{.}{delegatedInstance}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Integer}}{getSequenceNumber}{()}{{{}{{return}{sequenceNumber}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{expectedMatchersSize}{=}{{invocation}{.}{getArgumentsCount}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isDeclaredOnInterface}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotCallRealMethodOnInterface}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{List}}{{matchers}{=}{{i}{.}{argumentsToMatchers}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{invocation}{.}{toString}{(}{matchers}{,}{{new}{{PrintSettings}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{matchers}}{=}{{invocation}{.}{argumentsToMatchers}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{matchers}}{=}{{Invocation}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{print}{(}{{Invocation}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{{new}{{PrintSettings}}{()}}{.}{print}{(}{{argumentsToMatchers}{(}{{getArguments}{()}}{)}}{,}{this}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arguments}}{=}{{expandVarArgs}{(}{{mockitoMethod}{.}{isVarArgs}{()}}{,}{args}{)}}}{;}}}
{AST_ROOT_SC2NF{{{List}}{{matchers}{=}{{Invocation}{.}{argumentsToMatchers}{(}{{i}{.}{getArguments}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{NoInteractionsWanted}}{(}{{join}{(}{STRING_CONSTANT}{,}{{new}{{Location}}{()}}{,}{STRING_CONSTANT}{,}{{undesired}{.}{getLocation}{()}}{,}{scenario}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{Location}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{wanted}{.}{toString}{()}}{,}{{new}{{Location}}{()}}{,}{STRING_CONSTANT}{,}{{previous}{.}{toString}{()}}{,}{{previous}{.}{getLocation}{()}}{,}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{new}{{Location}}{()}}}
{AST_ROOT_SC2NF{{{Location}}{location}}}
{AST_ROOT_SC2NF{{{Location}}{location}}}
{AST_ROOT_SC2NF{{public}{Localized}{(}{{{T}}{object}}{)}{{{}{{{{this}{.}{object}}{=}{object}}{;}}{{{location}{=}{{new}{{Location}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{actualLocation}}}
{AST_ROOT_SC2NF{{public}{{Location}}{getLocation}{()}{{{}{{return}{{invocation}{.}{getLocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Location}}{{last}{=}{{finder}{.}{getLastLocation}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{location}}{=}{{new}{{Location}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{loc}{=}{{{new}{{Location}}{(}{filterReturningEmptyArray}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{actualMatcher}}{=}{actualMatcher}}{;}}{{{{this}{.}{location}}{=}{{new}{{Location}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Location}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Location}}{actualLocation}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{Location}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{}{{{Location}}{{location}{=}{{verificationMode}{.}{getLocation}{()}}}{;}}{{{verificationMode}{=}{null}}{;}}{{{reporter}{.}{unfinishedVerificationException}{(}{location}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbingInProgress}{!=}{null}}{)}{{{}{{{Location}}{{temp}{=}{stubbingInProgress}}{;}}{{{stubbingInProgress}{=}{null}}{;}}{{{reporter}{.}{unfinishedStubbing}{(}{temp}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{invocation}{.}{markStubbed}{(}{{new}{{StubInfo}}{(}{stubbedInvocation}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{out}{+=}{{line}{(}{{STRING_CONSTANT}{+}{{{i}{.}{stubInfo}{()}}{.}{stubbedAt}{()}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{s}{.}{markStubUsed}{(}{invocation}{)}}{;}}{{{invocation}{.}{markStubbed}{(}{{new}{{StubInfo}}{(}{s}{)}}{)}}{;}}{{return}{s}{;}}{}}}}
{AST_ROOT_SC2NF{{{isMultiline}{()}}{||}{{(}{{{!}{{matchers}{.}{isEmpty}{()}}}{&&}{{{invocationString}{.}{length}{()}}{>}{Invocation.MAX_LINE_LENGTH}}}{)}}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{Invocation}}{invocation}}{)}{{{}{{{{threadSafely}{()}}{.}{stubbingCompleted}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{undesired}}}
{AST_ROOT_SC2NF{{{Invocation}}{undesired}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{handler}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{handler}{,}{{never}{()}}{)}}{.}{handle}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{foundUnusedStub}{(}{{{Invocation}}{unused}}{)}{{{}{{{logger}{.}{log}{(}{{STRING_CONSTANT}{+}{{unused}{.}{getLocation}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{unused}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{Invocation}}{i}}{)}{{{}{{{verified}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{verified}{.}{contains}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocationOnInterface}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{previous}{=}{{finder}{.}{findPreviousVerifiedInOrder}{(}{invocations}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{finder}{.}{getLastLocation}{(}{{Collections}{.}{<}{{Invocation}}{>}{emptyList}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocationOnClass}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{i}}}
{AST_ROOT_SC2NF{{{Invocation}}{candidate}}}
{AST_ROOT_SC2NF{{{Invocation}}{candidate}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{public}{{Invocation}}{getInvocation}{()}{{{}{{return}{{this}{.}{invocation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InvocationMatcher}{(}{{{Invocation}}{invocation}}{)}{{{}{{this}{(}{invocation}{,}{{Collections}{.}{<}{{Matcher}}{>}{emptyList}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{WarningsFinder}}{{finder}{=}{{new}{{WarningsFinder}}{(}{{Arrays}{.}{<}{{Invocation}}{>}{asList}{()}}{,}{{Arrays}{.}{<}{{InvocationMatcher}}{>}{asList}{(}{unstubbedInvocation}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{!}{{orderingContext}{.}{isVerified}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{!}{{wanted}{.}{matches}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{add}{(}{{{Invocation}}{invocation}}{)}{{{}{{{invocations}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{ExposedInvocation}{(}{{{Invocation}}{toBeExposed}}{)}{{{}{{{methodProxy}{=}{{{(}{{(}{{HasCGLIBMethodProxy}}{)}{toBeExposed.realMethod}}{)}}{.}{getMethodProxy}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{Invocation}}{i}}{)}{{{}{{{inOrderContext}{.}{markVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{Invocation}}{i}}{)}{{{}{{return}{{inOrderContext}{.}{isVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{getInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{allInvocations}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{{given}{(}{{handler.invocationContainerImpl}{.}{findAnswerFor}{(}{{any}{(}{{{Invocation}}{.}{class}}{)}}{)}}{)}}{.}{willReturn}{(}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{previous}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actual}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{print}{(}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Object}}{answerTo}{(}{{{Invocation}}{invocation}}{)}{throws}{{Throwable}}{{{}{{return}{{{findAnswerFor}{(}{invocation}{)}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{invocationForStubbing}{.}{getInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actualInvocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{{Invocation}}{actual}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{Invocation}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{Invocation}}{nullDereference}}}
{AST_ROOT_SC2NF{{{Invocation}}{{compareTo}{=}{{this}{.}{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{MethodInfo}{(}{{{PublicInvocation}}{theInvocation}}{)}{{{}{{{{this}{.}{method}}{=}{{theInvocation}{.}{getMethod}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PublicInvocation}}{theInvocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{compareTo}{=}{{this}{.}{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{allInvocations}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{previous}{=}{{finder}{.}{findPreviousVerifiedInOrder}{(}{invocations}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{actual}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{getAllInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{print}{(}{{ArgumentsProcessor}{.}{argumentsToMatchers}{(}{{invocation}{.}{getArguments}{()}}{)}}{,}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{i}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{candidate}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{candidate}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{public}{{InvocationImpl}}{getInvocation}{()}{{{}{{return}{{this}{.}{invocation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InvocationMatcher}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{this}{(}{invocation}{,}{{Collections}{.}{<}{{Matcher}}{>}{emptyList}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{invocations}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{stubbingCompleted}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{{{threadSafely}{()}}{.}{stubbingCompleted}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{InvocationImpl}}{i}}{)}{{{}{{{inOrderContext}{.}{markVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{InvocationImpl}}{i}}{)}{{{}{{return}{{inOrderContext}{.}{isVerified}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{foundUnusedStub}{(}{{{InvocationImpl}}{unused}}{)}{{{}{{{logger}{.}{log}{(}{{STRING_CONSTANT}{+}{{unused}{.}{getLocation}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{unused}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{getInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocationOnInterface}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{}{{public}{{InvocationMatcher}}{bindMatchers}{(}{{{ArgumentMatcherStorage}}{argumentMatcherStorage}}{,}{{{InvocationImpl}}{invocation}}{)}{{{}{{throw}{{new}{{InvalidUseOfMatchersException}}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{!}{{orderingContext}{.}{isVerified}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{!}{{wanted}{.}{matches}{(}{invocation}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{undesired}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{undesired}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{chunk}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationImpl}}{>}}{unusedStubs}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocationOnClass}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{add}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{{invocations}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markVerified}{(}{{{InvocationImpl}}{i}}{)}{{{}{{{verified}{.}{add}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isVerified}{(}{{{InvocationImpl}}{invocation}}{)}{{{}{{return}{{verified}{.}{contains}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{actualInvocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{invocationForStubbing}{.}{getInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{actual}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{i}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{LocationImpl}}{getLocation}{()}{{{}{{return}{{invocation}{.}{getLocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{chunk}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{lastLocation}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{actualLocation}}}
{AST_ROOT_SC2NF{{{}{{{LocationImpl}}{{location}{=}{{verificationMode}{.}{getLocation}{()}}}{;}}{{{verificationMode}{=}{null}}{;}}{{{reporter}{.}{unfinishedVerificationException}{(}{location}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbingInProgress}{!=}{null}}{)}{{{}{{{LocationImpl}}{{temp}{=}{stubbingInProgress}}{;}}{{{stubbingInProgress}{=}{null}}{;}}{{{reporter}{.}{unfinishedStubbing}{(}{temp}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{lastLocation}{=}{{finder}{.}{getLastLocation}{(}{actualInvocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{location}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{lastActualLocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{lastActualInvocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{firstUndesired}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{actualLocation}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{location}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{location}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{{last}{=}{{finder}{.}{getLastLocation}{(}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LocationImpl}}{actualLocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{invocation}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{for}{(}{{{InvocationImpl}}{i}}{:}{unusedStubs}{)}{{{}{{{findingsListener}{.}{foundUnusedStub}{(}{i}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{previousInOrder}{=}{{finder}{.}{findPreviousVerifiedInOrder}{(}{invocations}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{Object}}{answerTo}{(}{{{InvocationImpl}}{invocation}}{)}{throws}{{Throwable}}{{{}{{return}{{{findAnswerFor}{(}{invocation}{)}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{nullDereference}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{{previous}{=}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{{}{{{markVerified}{(}{chunk}{,}{wanted}{)}}{;}}{{for}{(}{{{InvocationImpl}}{i}}{:}{chunk}{)}{{{}{{{context}{.}{markVerified}{(}{i}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{InvocationImpl}}{invocation}}}
{AST_ROOT_SC2NF{{return}{{new}{{{LinkedList}}{<}{{InvocationImpl}}{>}}{(}{invocationsInOrder}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{finder}{.}{getLastLocation}{(}{{Collections}{.}{<}{{InvocationImpl}}{>}{emptyList}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{synchronized}{(}{invocations}{)}{{{}{{{copiedList}{=}{{new}{{{LinkedList}}{<}{{InvocationImpl}}{>}}{(}{invocations}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{WarningsFinder}}{{finder}{=}{{new}{{WarningsFinder}}{(}{{Arrays}{.}{<}{{InvocationImpl}}{>}{asList}{(}{stub}{)}}{,}{{Arrays}{.}{<}{{InvocationMatcher}}{>}{asList}{(}{wrongArg}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{WarningsFinder}}{{finder}{=}{{new}{{WarningsFinder}}{(}{{Arrays}{.}{<}{{InvocationImpl}}{>}{asList}{()}}{,}{{Arrays}{.}{<}{{InvocationMatcher}}{>}{asList}{(}{unstubbedInvocation}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{Reporter}}{()}}{.}{tooLittleActualInvocations}{(}{{new}{{Discrepancy}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{{Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{{Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{{Discrepancy}}{discrepancy}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{Pluralizer}{.}{pluralize}{(}{wantedCount}{)}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{wantedButNotInvoked}{(}{{{PrintableInvocation}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{public}{StubInfoImpl}{(}{{{PrintableInvocation}}{stubbedAt}}{)}{{{}{{{{this}{.}{stubbedAt}}{=}{stubbedAt}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markStubUsed}{(}{{{PrintableInvocation}}{usedAt}}{)}{{{}{{{{this}{.}{usedAt}}{=}{usedAt}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{PrintableInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{wantedButNotInvoked}{(}{{{PrintableInvocation}}{wanted}}{)}{{{}{{throw}{{new}{{WantedButNotInvoked}}{(}{{createWantedButNotInvokedMessage}{(}{wanted}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MockingDetails}}{(}{toInspect}{,}{{new}{{MockUtil}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocationOnClass}{=}{{getLastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{MockitoAnnotations.Mock}}{annotation}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Answer}}{<}{{T}}{>}}{)}{{new}{{ReturnsIdentity}}{(}{position}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{ReturnsIdentity}}{(}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{{validator}{.}{validate}{(}{{new}{{ReturnsIdentity}}{(}{ReturnsIdentity.LAST_ARGUMENT}{)}}{,}{{{{new}{{InvocationBuilder}}{()}}{.}{simpleMethod}{()}}{.}{toInvocation}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validator}{.}{validate}{(}{{new}{{ReturnsIdentity}}{(}{NUMBER_CONSTANT}{)}}{,}{{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{arg}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{Factory}}{)}{mock}}{)}}{.}{setCallback}{(}{NUMBER_CONSTANT}{,}{{new}{{MethodInterceptorFilter}}{(}{newHandler}{,}{settings}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockitoInvocationHandler}}{handler}}}
{AST_ROOT_SC2NF{{{InvocationNotifierHandler}}{{oldHandler}{=}{{(}{{InvocationNotifierHandler}}{)}{{mockMaker}{.}{getHandler}{(}{mock}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{public}{{MockSettingsImpl}}{getMockSettings}{()}{{{}{{return}{{mockHandler}{.}{getMockSettings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockSettingsImpl}}{settings}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{if}{(}{{isMockOrSpy}{(}{instance}{)}}{)}{{{}{{{mockUtil}{.}{redefineMockNameIfSurrogate}{(}{instance}{,}{{field}{.}{getName}{()}}{)}}{;}}{{return}{instance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockSettingsImpl}}{{settings}{=}{{oldHandler}{.}{getMockSettings}{()}}}{;}}}
{AST_ROOT_SC2NF{{{mockUtil}{.}{redefineMockNameIfSurrogate}{(}{mock}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{mockUtil}{.}{redefineMockNameIfSurrogate}{(}{mock}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{validateExtraInterfaces}{(}{{{Class}}{classToMock}}{,}{{{Class}}{.}{.}{.}{interfaces}}{)}{{{}{{{extraInterfacesValidated}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockSettingsImpl}}{mockSettings}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{{{MockHandler}}{<}{?}{>}}{{handler}{=}{{new}{{MockHandler}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{{mock}{=}{{mockUtil}{.}{createMock}{(}{classToMock}{,}{{(}{{MockSettingsImpl}}{)}{mockSettings}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{.}{.}{.}{extraInterfaces}}}
{AST_ROOT_SC2NF{{name}{.}{isSurrogate}{()}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{mockName}}{=}{{toInstanceName}{(}{classToMock}{)}}}{;}}{{{{this}{.}{surrogate}}{=}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{getMockName}{(}{mock}{)}}{.}{isSurrogate}{()}}{)}{{{}{{{{{getMockHandler}{(}{mock}{)}}{.}{getMockSettings}{()}}{.}{redefineMockName}{(}{newName}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{IMethods}}{{methods}{=}{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{forwardTo}{(}{{new}{{MethodsImpl}}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{mockedList}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{{withSettings}{()}}{.}{forwardTo}{(}{delegatedList}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{{withSettings}{()}}{.}{forwardTo}{(}{delegatedList}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{{withSettings}{()}}{.}{forwardTo}{(}{delegatedList}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{{settings}{=}{{oldHandler}{.}{getMockSettings}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{mockSettings}}}
{AST_ROOT_SC2NF{{public}{{MockSettingsInfo}}{getMockSettings}{()}{{{}{{return}{{mockHandler}{.}{getMockSettings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{settings}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{settings}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{settings}}}
{AST_ROOT_SC2NF{{{MockSettingsInfo}}{mockSettings}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{setListener}{(}{null}{)}}{;}}{{{mockingProgress}{.}{mockingStarted}{(}{null}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{mockingStarted}{(}{mock}{,}{typeToMock}{,}{settings}{)}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandler}}{<}{{T}}{>}}{mockHandler}}}
{AST_ROOT_SC2NF{{{MockHandlerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{newHandler}{=}{{new}{{{InvocationNotifierHandler}}{<}{{T}}{>}}{(}{{new}{{{MockHandler}}{<}{{T}}{>}}{(}{settings}{)}}{,}{settings}{)}}}}
{AST_ROOT_SC2NF{{{MockHandlerInterface}}{{mockitoHandler}{=}{{cast}{(}{handler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockHandlerInterface}}{handler}}}
{AST_ROOT_SC2NF{{{MockitoInvocationHandler}}{newHandler}}}
{AST_ROOT_SC2NF{{{MockitoInvocationHandler}}{handler}}}
{AST_ROOT_SC2NF{{{MockitoInvocationHandler}}{newHandler}}}
{AST_ROOT_SC2NF{{{{given}{(}{{iMethods}{.}{varargsObject}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{anyVararg}{()}}{)}}{)}}{.}{will}{(}{{returnsArgAtPosition}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{MockHandlerImpl}}{<}{{T}}{>}}{mockHandler}}}
{AST_ROOT_SC2NF{{{}{{return}{{primitiveOf}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{(}{{{onClass}{!=}{null}}{?}{{onClass}{.}{hashCode}{()}}{:}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{registerTypeVariablesOn}{(}{clazz}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{typeVariable}{.}{equals}{(}{{{(}{{(}{{BoundedType}}{)}{o}}{)}}{.}{typeVariable}}{)}}{;}}}
{AST_ROOT_SC2NF{{<}{{O}{extends}{{K}}}{>}{{O}}{typeVarWithTypeParams}{(}{)}{;}}}
{AST_ROOT_SC2NF{{<}{{S}}{,}{{T}{extends}{{S}}}{>}{{T}}{twoTypeParams}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{super}{{Integer}}}{>}}{returningWildcard}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setMockitoGenericMetadata}{(}{{{MockitoGenericMetadata}}{mockitoGenericMetadata}}{)}{{{}{{{{this}{.}{mockitoGenericMetadata}}{=}{mockitoGenericMetadata}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MockSettings}}{parameterizedInfo}{(}{{{MockitoGenericMetadata}}{mockitoGenericMetadata}}{)}{{{}{{{{this}{.}{mockitoGenericMetadata}}{=}{mockitoGenericMetadata}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoGenericMetadata}}{returnTypeGenericMetadata}}}
{AST_ROOT_SC2NF{{{}{{{VerificationDataImpl}}{{data}{=}{{new}{{VerificationDataImpl}}{(}{invocationContainerImpl}{,}{invocationMatcher}{)}}}{;}}{{{verificationMode}{.}{verify}{(}{data}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{invocationContainerImpl}}{=}{{new}{{InvocationContainerImpl}}{(}{mockingProgress}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RegisteredInvocationsTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{RegisteredInvocationsAllTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{}{{return}{{{mockSettings}{.}{isStubOnly}{()}}{?}{{new}{{RegisteredInvocationsStubOnly}}{()}}{:}{{new}{{RegisteredInvocationsAll}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{mockSettings}{.}{isStubOnly}{()}}{?}{{new}{{RegisteredInvocationsStubOnly}}{()}}{:}{{new}{{DefaultRegisteredInvocations}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{yesIKnowSomeMatchersAreMisplaced}{()}{{{}{{{resetState}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TestNG}}{{testNG}{=}{{new_TestNG_with_failure_recorder_for}{(}{{{FailingBecauseWrongStubbingSyntaxInConfigurationMethod}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestNG}}{{testNG}{=}{{new_TestNG_with_failure_recorder_for}{(}{{{FailingBecauseIncorrectStubbingSyntax}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestNG}}{{testNG}{=}{{new_TestNG_with_failure_recorder_for}{(}{{{FailingBecauseIncorrectAnnotationUsage}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mockitoGenericMetadata}{==}{null}}{)}{{{}{{{{this}{.}{mockitoGenericMetadata}}{=}{{GenericMetadataSupport}{.}{from}{(}{typeToMock}{)}}}{;}}{}}}}{{return}{mockitoGenericMetadata}{;}}{}}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{from}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{from}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{from}{(}{{{StringBuilder}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{StringBuilder}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{from}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GenericMetadataSupport}}{{genericMetadata}{=}{{{from}{(}{{{GenericsNest}}{.}{class}}{)}}{.}{resolveGenericReturnType}{(}{{firstNamedMethod}{(}{STRING_CONSTANT}{,}{{{GenericsNest}}{.}{class}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{{new}{{ReturnsGenericDeepStubs}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{{new}{{ReturnsGenericDeepStubs}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{{new}{{ReturnsGenericDeepStubs}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{{new}{{ReturnsGenericDeepStubs}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{{new}{{ReturnsGenericDeepStubs}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{GenericsNest}}{<}{?}{>}}{{mock}{=}{{mock}{(}{{{GenericsNest}}{.}{class}}{,}{{new}{{ReturnsGenericDeepStubs}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{recordDeepStubMock}{(}{{returnTypeGenericMetadata}{.}{toMock}{(}{this}{)}}{,}{container}{)}}{;}}}
{AST_ROOT_SC2NF{{static}{{MockMaker}}{findPlatformMockMaker}{()}{{{}{{return}{{findPluginImplementation}{(}{{{MockMaker}}{.}{class}}{,}{{new}{{CglibMockMaker}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ClassImposterizer.INSTANCE}{.}{canImposterise}{(}{clazz}{)}}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{isTypeMockable}{(}{classToMock}{)}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotMockFinalClass}{(}{classToMock}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{{returnTypeGenericMetadata}{.}{rawType}{()}}{,}{{withSettingsUsing}{(}{returnTypeGenericMetadata}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{new}{{MockCreationValidator}}{()}}{.}{isTypeMockable}{(}{rawType}{)}}}{)}{{{}{{return}{{delegate}{.}{returnValueFor}{(}{rawType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{pluginType}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{NotSerializableToBeMocked}{(}{{{Observable}}{o}}{)}{{{}{{super}{(}{o}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{{mockSettings}{=}{{{{new}{{MockUtil}}{()}}{.}{getMockHandler}{(}{mockitoMock}{)}}{.}{getMockSettings}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSpy}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{mock}{instanceof}{{MockitoSpy}}}{&&}{{isMock}{(}{mock}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{Factory}}{.}{class}}{.}{isAssignableFrom}{(}{cl}{)}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}{else}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{STRING_CONSTANT}{.}{equals}{(}{marker}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{mock}{instanceof}{{MockitoMock}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSpy}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{mock}{instanceof}{{MockitoSpy}}}{&&}{{isMock}{(}{mock}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{mock}{!=}{null}}{&&}{{isMockitoMock}{(}{mock}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ObjectStreamException}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{SimpleSerializationUtil}{.}{serializeAndBack}{(}{mockWithPrivateConstructor}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{AClassToBeMockedInThisTestOnlyAndInCallablesOnly}}{{mock}{=}{{Mockito}{.}{mock}{(}{{{AClassToBeMockedInThisTestOnlyAndInCallablesOnly}}{.}{class}}{,}{{{Mockito}{.}{withSettings}{()}}{.}{serializable}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{serializable}}{=}{copy.serializable}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mockUtil}{.}{isMock}{(}{cl}{)}}{)}{{{}{{return}{MOCKITO_PROXY_MARKER}{;}}{}}}{else}{{{}{{return}{NOTHING}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{{mock}{instanceof}{{MockitoMock}}}{&&}{{isMockitoMock}{(}{mock}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{,}{{{timeout}{(}{NUMBER_CONSTANT}{)}}{.}{never}{()}}{)}}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{public}{{VerificationMode}}{never}{()}{{{}{{{{new}{{Reporter}}{()}}{.}{atMostShouldNotBeUsedWithTimeout}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{Reporter}}{()}}{.}{atMostShouldNotBeUsedWithTimeout}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{target}{,}{{{timeout}{(}{TEST_MILLIS}{)}}{.}{times}{(}{{TIMES}{*}{nThreads}}{)}}{)}}{.}{targetMethod}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getTreshhold}{()}{{{}{{return}{pollingPeriod}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{After}}{(}{{wrappedVerification}{.}{getDelay}{()}}{,}{verificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Timeout}}{(}{{wrappedVerification}{.}{getPollingPeriod}{()}}{,}{{wrappedVerification}{.}{getTimeout}{()}}{,}{newVerificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{VerificationWithTimeoutImpl}}{(}{pollingPeriod}{,}{millis}{,}{delegate}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{After}}{(}{{wrappedVerification}{.}{getPollingPeriod}{()}}{,}{{wrappedVerification}{.}{getDelay}{()}}{,}{verificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{VerificationAfterDelayImpl}}{(}{pollingPeriod}{,}{delayMillis}{,}{verificationMode}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expectedTimeout}{,}{{{{(}{{(}{{Timeout}}{)}{t}}{)}}{.}{wrappedVerification}}{.}{getTimeout}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{canRecoverFromFailure}{(}{delegate}{)}}{)}{{{}{{{error}{=}{e}}{;}}{{{sleep}{(}{pollingPeriod}{)}}{;}}{}}}{else}{{{}{{throw}{e}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{ClassLoader}}{{cl}{=}{{{{{{isolatedClassLoader}{()}}{.}{withCurrentCodeSourceUrls}{()}}{.}{withPrivateCopyOf}{(}{STRING_CONSTANT}{)}}{.}{withPrivateCopyOf}{(}{STRING_CONSTANT}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{cl}{.}{loadClass}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{cl}{.}{loadClass}{(}{CLASS_NAME_USING_INTERFACE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{cl}{.}{loadClass}{(}{CLASS_NAME_USING_INTERFACE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TypeVarBoundedType}{(}{{{TypeVariable}}{typeVariable}}{)}{{{}{{{{this}{.}{typeVariable}}{=}{typeVariable}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Type}}{{actualType}{=}{{getActualTypeArgumentFor}{(}{typeParameter}{)}}}{;}}{{{actualTypeArguments}{.}{put}{(}{typeParameter}{,}{actualType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{wildCardBoundedType}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{TypeVarBoundedType}}{(}{typeParameter}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{TypeVariable}}{typeParameter}}{:}{typeParameters}{)}{{{}{{{contextualActualTypeParameters}{.}{put}{(}{typeParameter}{,}{{boundsOf}{(}{typeParameter}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{TypeVarBoundedType}{(}{{{TypeVariable}}{typeVariable}}{)}{{{}{{{{this}{.}{typeVariable}}{=}{{new}{{SerializableTypeVariable}}{(}{typeVariable}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Type}}{{actualType}{=}{{getActualTypeArgumentFor}{(}{typeParameter}{)}}}{;}}{{{actualTypeArguments}{.}{put}{(}{{new}{{SerializableTypeVariable}}{(}{typeParameter}{)}}{,}{actualType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{SerializableBoundedType}}{(}{wildCardBoundedType}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{SerializableBoundedType}}{(}{{new}{{TypeVarBoundedType}}{(}{typeParameter}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{mockitoCore}{.}{mock}{(}{{returnTypeGenericMetadata}{.}{rawType}{()}}{,}{{withSettingsUsing}{(}{returnTypeGenericMetadata}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{{ReturnsDeepStubs}}{returnsDeepStubsAnswerUsing}{(}{{final}{{GenericMetadataSupport}}{returnTypeGenericMetadata}}{)}{{{}{{return}{{new}{{NotSerializableGenericsAwareReturnsDeepStubs}}{(}{returnTypeGenericMetadata}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{makeDeepMock}{(}{invocation}{,}{returnTypeGenericMetadata}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{verify}{(}{mock}{,}{mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{T}}{should}{()}{{{}{{return}{{verify}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Mockito}{.}{verify}{(}{mock}{,}{mode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{T}}{should}{()}{{{}{{return}{{Mockito}{.}{verify}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Float}{.}{floatToIntBits}{(}{lhs}{)}}{,}{{Float}{.}{floatToIntBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Double}{.}{doubleToLongBits}{(}{lhs}{)}}{,}{{Double}{.}{doubleToLongBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{primitiveOrWrapperDefaultValues}{.}{get}{(}{primitiveOrWrapperType}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{primitiveOrWrapperDefaultValues}{.}{containsKey}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{clazz}{.}{isPrimitive}{()}}{)}{{{}{{return}{clazz}{;}}{}}}}{{return}{{(}{{{Class}}{<}{{T}}{>}}{)}{{primitiveTypes}{.}{get}{(}{clazz}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{mockingProgress}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{cleaner}{.}{isOut}{(}{{unfilteredStackTrace}{.}{get}{(}{i}{)}}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{T}{extends}{{Object}}}}
{AST_ROOT_SC2NF{{int}{delayMillis}}}
{AST_ROOT_SC2NF{{int}{millis}}}
{AST_ROOT_SC2NF{{int}{millis}}}
{AST_ROOT_SC2NF{{public}{int}{getDuration}{()}{{{}{{return}{durationMillis}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getPollingPeriod}{()}{{{}{{return}{pollingPeriodMillis}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{sleep}}}
{AST_ROOT_SC2NF{{{}{{{verifyNoMoreInteractions}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyNoMoreInteractions}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{inOrder}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCause}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{expectedCause}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{return}{{{method}{!=}{null}}{?}{{method}{.}{hashCode}{()}}{:}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{durationChecker}{.}{isVerificationStillInProgress}{(}{startTime}{)}}}
{AST_ROOT_SC2NF{{{{this}{.}{durationChecker}}{=}{{new}{{DurationCheckerImpl}}{(}{durationMillis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{timer}{.}{isUp}{(}{{anyLong}{()}}{)}}{)}}{.}{thenReturn}{(}{true}{,}{true}{,}{true}{,}{true}{,}{true}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reset}{()}{{{}{{{mockingProgress}{.}{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{when}{(}{{clazzMock}{.}{isValid}{()}}{)}}{.}{thenReturn}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{MockitoLimitations.NON_PUBLIC_PARENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{type}{==}{null}}{?}{STRING_CONSTANT}{:}{{{type}{.}{getCanonicalName}{()}}{+}{STRING_CONSTANT}{+}{{type}{.}{getClassLoader}{()}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ClassImposterizer}}{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{new}{{CachingObjenesisInstanceFactory}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{new}{{ClassImposterizer}}{(}{{new}{{CachingObjenesisInstanceFactory}}{()}}{)}}{.}{imposterise}{(}{{new}{{MethodInterceptorFilter}}{(}{mockitoHandler}{,}{settings}{)}}{,}{{settings}{.}{getTypeToMock}{()}}{,}{{settings}{.}{getExtraInterfaces}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{new}{{ConstructorInstanceFactory}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Factory}}{{proxy}{=}{{instanceFactory}{.}{newInstance}{(}{proxyClass}{)}}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{{instanceFactory}{.}{getClass}{()}}{.}{getSimpleName}{()}}}}
{AST_ROOT_SC2NF{{new}{{ClassImposterizer}}{(}{{new}{{CachingObjenesisInstantiator}}{()}}{)}}}
{AST_ROOT_SC2NF{{{ClassImposterizer}}{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{new}{{CachingObjenesisInstantiator}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{ClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{DefaultClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{new}{{DefaultClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{CglibClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{new}{{CglibClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{cglibHacker}{.}{setMockitoNamingPolicy}{(}{mockitoMethodProxy}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{methodProxy}{.}{invokeSuper}{(}{target}{,}{arguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{FilteredCGLIBProxyRealMethod}}{{realMethod}{=}{{new}{{FilteredCGLIBProxyRealMethod}}{(}{mockitoMethodProxy}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{sourceJarComparator}{.}{addPair}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{jars}{=}{{sourceJarComparator}{.}{areEqual}{()}}}{;}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeListWithWrongMethods}}{<>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeListWithWrongMethods}}{<>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeList}}{<>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeList}}{<>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{mock}{=}{{mock}{(}{{{List}}{.}{class}}{,}{{delegatesTo}{(}{{new}{{{FakeList}}{<>}}{()}}{)}}{)}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<>}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ArrayList}}{<>}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{BinaryComparator.Result}}{{result}{=}{{binaryComparator}{.}{compareFiles}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{binaryComparator}{.}{setPair}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ClassImposterizer}}{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{ClassImposterizer}}{(}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{()}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{settings}{.}{isUsingConstructor}{()}}{)}{{{}{{return}{{new}{{ConstructorInstantiator}}{()}}{;}}{}}}{else}{{{}{{return}{INSTANCE}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{imposterizer}{=}{{new}{{ClassImposterizer}}{(}{{new}{{ConstructorInstantiator}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InstantationException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{author}{+}{STRING_CONSTANT}{+}{{commits}{.}{size}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{email}{=}{{commit}{.}{getEmail}{()}}}{;}}{{{author}{=}{{commit}{.}{getAuthor}{()}}}{;}}{{{commits}{.}{add}{(}{commit}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getEmail}{()}{{{}{{return}{email}{;}}{}}}}}
{AST_ROOT_SC2NF{{{GitCommit}}{commit}}}
{AST_ROOT_SC2NF{{{GitCommit}}{commit}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{GitContributionsProvider}}{(}{runner}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{GitContributionsProvider}}{(}{{new}{{GitLogProvider}}{(}{runner}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DefaultContributionSet}}{{contributions}{=}{{new}{{DefaultContributionSet}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{commit}{.}{getMessage}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{{Map.Entry}}{<}{{String}}{,}{{DefaultContribution}}{>}}{entry}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{m}{.}{matches}{()}}}{)}{{{}{{throw}{{new}{{ReleaseNotesException}}{(}{{STRING_CONSTANT}{+}{releaseNotesContent}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{out}{==}{null}}{)}{{{}{{throw}{{new}{{ReleaseNotesException}}{(}{{STRING_CONSTANT}{+}{envVariableName}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{id}}}
{AST_ROOT_SC2NF{{public}{GitHubImprovementsProvider}{(}{{{GitHubAuthToken}}{authToken}}{)}{{{}{{{{this}{.}{authToken}}{=}{authToken}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Modifier}{.}{isAbstract}{(}{{{invocation}{.}{getMethod}{()}}{.}{getModifiers}{()}}{)}}{)}{{{}{{return}{{{new}{{GloballyConfiguredAnswer}}{()}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{Modifier}{.}{isAbstract}{(}{{{invocation}{.}{getMethod}{()}}{.}{getModifiers}{()}}{)}}{)}{{{}{{return}{{{Answers.CALLS_REAL_METHODS}{.}{get}{()}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{content}{=}{{IOUtil}{.}{readStream}{(}{response}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{noDefaultConstructor}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{type}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Then}}{<}{{T}}{>}}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{closeable}{.}{close}{()}}{;}}{}}}{{catch}{(}{{{IOException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{closeable}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{reader}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{output}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{asList}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{IOUtil}{.}{readLines}{(}{{new}{{FileReader}}{(}{file}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{pluginSwitcher}{.}{isEnabled}{(}{pluginClassName}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{foundPluginClass}{=}{{{new}{{PluginFinder}}{(}{pluginSwitcher}{)}}{.}{findPluginClass}{(}{{Iterables}{.}{toIterable}{(}{resources}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{LinkedList}}{<}{{ReleaseStep}}{>}}{{targets}{=}{{new}{{{LinkedList}}{<}{{ReleaseStep}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{jUnitRule}{.}{apply}{(}{{new}{{ExceptionStatement}}{()}}{,}{Description.EMPTY}{)}}{.}{evaluate}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{injectTestCase}{=}{{new}{{InjectTestCase}}{()}}}{;}}{{{jUnitRule}{=}{{new}{{JUnitRule}}{(}{injectTestCase}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{Modifier}{.}{isAbstract}{(}{{{invocation}{.}{getMethod}{()}}{.}{getModifiers}{()}}{)}}{)}{{{}{{return}{{{Answers.RETURNS_DEFAULTS}{.}{get}{()}}{.}{answer}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mockSettings}{.}{defaultAnswer}{(}{{{annotation}{.}{answer}{()}}{.}{get}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Operation}}{getStep}{(}{{int}{stepNumber}}{)}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DefaultGitAuthor}}{(}{currentLocalUser}{,}{currentLocalEmail}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{.}{returnFor}{(}{clazz}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Object}}{.}{class}}{)}}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{VersionTool}}{getVersionTool}{()}{{{}{{return}{{new}{{DefaultVersionTool}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{millis}}}
{AST_ROOT_SC2NF{{public}{{ClassLoader}}{build}{()}{{{}{{return}{{new}{{InMemoryClassLoader}}{(}{inMemoryClassObjects}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{error}{=}{{handleVerifyException}{(}{e}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{paramsMatch}{(}{types}{,}{params}{)}}{)}{{{}{{return}{{(}{{T}}{)}{{constructor}{.}{newInstance}{(}{params}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InstantationException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{proxyClass}{.}{getSuperclass}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{mockType}{.}{hashCode}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mockType}{.}{equals}{(}{mockKey.mockType}{)}}}{)}{{return}{false}{;}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{mockedType}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Class}}{<}{{?}{extends}{{T}}}{>}}{)}{{previousClasses}{.}{get}{(}{mockKey}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Origin}}{{Method}}{method}}}
{AST_ROOT_SC2NF{{{@}{Origin}}{{Method}}{method}}}
{AST_ROOT_SC2NF{{{@}{Origin}}{{Method}}{method}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{proxyClass}{=}{{{new}{{ByteBuddyMockMaker}}{()}}{.}{getOrMakeMock}{(}{typeToMock}{,}{extraInterfaces}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{Class}}{<}{{?}{extends}{{T}}}{>}}{)}{{PREVIOUS_CLASSES}{.}{get}{(}{mockKey}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{PREVIOUS_CLASSES}{.}{put}{(}{mockKey}{,}{mockType}{)}}{;}}}
{AST_ROOT_SC2NF{{{T}}{{mock}{=}{{silentConstructor}{.}{instantiate}{(}{mockedType}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{(}{{handler}{instanceof}{{InternalMockHandler}}}{)}}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{proxyClass}{=}{{{new}{{ByteBuddyMockMaker}}{()}}{.}{getOrMakeMock}{(}{typeToMock}{,}{extraInterfaces}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{proxyClass}{=}{{{new}{{CachingBytecodeGenerator}}{()}}{.}{get}{(}{typeToMock}{,}{extraInterfaces}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{cache}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{cachingMockBytecodeGenerator.avoidingClassLeakageCache}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{byteBuddy}{.}{subclass}{(}{mockedType}{,}{ConstructorStrategy.Default.NO_CONSTRUCTORS}{)}}{.}{name}{(}{{nameFor}{(}{mockedType}{)}}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{thiz}{.}{getMockitoInterceptor}{()}}{.}{getAcrossJVMSerializationFeature}{()}}{.}{writeReplace}{(}{thiz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{handler}}{=}{handler}}{;}}{{{{this}{.}{mockCreationSettings}}{=}{mockCreationSettings}}{;}}{{{acrossJVMSerializationFeature}{=}{{new}{{AcrossJVMSerializationFeature}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ClassImposterizerTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{Collections}{.}{sort}{(}{unsortedFields}{,}{{new}{{PropertyAndSetterInjection.FieldTypeAndNameComparator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Collections}{.}{sort}{(}{unsortedFields}{,}{{new}{{PropertyAndSetterInjection.FieldTypeAndNameComparator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Collections}{.}{sort}{(}{unsortedFields}{,}{cmp}{)}}{;}}}
{AST_ROOT_SC2NF{{{Collections}{.}{sort}{(}{declaredFields}{,}{superTypesLast}{)}}{;}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Improvement}}{>}}{{pagedImprovements}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{mockMethod}{+}{STRING_CONSTANT}{+}{{{new}{{MockUtil}}{()}}{.}{getMockName}{(}{mock}{)}}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{mockMethod}{+}{STRING_CONSTANT}{+}{{{new}{{MockUtil}}{()}}{.}{getMockName}{(}{mock}{)}}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{{new}{{MockUtil}}{()}}{.}{getMockName}{(}{{invocation}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{STRING_CONSTANT}{+}{{{new}{{MockUtil}}{()}}{.}{getMockName}{(}{{invocation}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}{+}{STRING_CONSTANT}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setup}{()}{{{}{{{mock}{=}{{Mockito}{.}{mock}{(}{{{IMethods}}{.}{class}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{validator}{.}{validate}{(}{{new}{{CallsRealMethods}}{()}}{,}{invocationOnInterface}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{Thread}{.}{sleep}{(}{sleep}{)}}{;}}{}}}{{catch}{(}{{{InterruptedException}}{ie}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{pollingPeriodMillis}{,}{durationMillis}{,}{delegate}{,}{returnOnSuccess}{,}{{new}{{Timer}}{(}{durationMillis}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{After}}{(}{{wrappedVerification}{.}{getPollingPeriod}{()}}{,}{{wrappedVerification}{.}{getDuration}{()}}{,}{verificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Timeout}}{(}{{wrappedVerification}{.}{getPollingPeriod}{()}}{,}{{wrappedVerification}{.}{getDuration}{()}}{,}{newVerificationMode}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{VerificationOverTimeImpl}}{(}{pollingPeriodMillis}{,}{millis}{,}{delegate}{,}{true}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cacheMethod}{=}{true}}{)}}{{Method}}{invokedMethod}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cacheMethod}{=}{true}}{)}}{{Method}}{invokedMethod}}}
{AST_ROOT_SC2NF{{{@}{Origin}{(}{{cacheMethod}{=}{true}}{)}}{{Method}}{invokedMethod}}}
{AST_ROOT_SC2NF{{{{ArrayList}}{<}{{Improvement}}{>}}{{pagedImprovements}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{argument}{.}{getValue}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{CapturesArgumensFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{CapturesArgumensFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{CapturesArgumensFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{{Mockito}{.}{verify}{(}{c.invocationMarker}{)}}{.}{markVerified}{(}{{eq}{(}{{asList}{(}{invocation}{)}}{)}}{,}{{any}{(}{{{CapturesArgumensFromInvocation}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{injectionOccurred}{|=}{{injectMockCandidates}{(}{fieldClass}{,}{{newMockSafeHashSet}{(}{mockCandidates}{)}}{,}{fieldInstanceNeedingInjection}{)}}}{;}}{{{fieldClass}{=}{{fieldClass}{.}{getSuperclass}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{MockMethodInterceptor.MockAccess}}{)}{mock}}{)}}{.}{setMockitoInterceptor}{(}{{new}{{MockMethodInterceptor}}{(}{{asInternalMockHandler}{(}{newHandler}{)}}{,}{settings}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockMethodInterceptor.MockAccess}}{{mockAccess}{=}{{(}{{MockMethodInterceptor.MockAccess}}{)}{mockInstance}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{interceptor}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{StringDescription}{.}{toString}{(}{m}{)}}{.}{equals}{(}{{{arg}{==}{null}}{?}{STRING_CONSTANT}{:}{{arg}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ContainsExtraTypeInformation}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ContainsExtraTypeInformation}}{{equals}{=}{{new}{{Equals}}{(}{null}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsExtraTypeInformation}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{withExtraTypeInfo}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{withExtraTypeInfo}{()}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LocalizedMatcher}}{{m}{=}{{new}{{LocalizedMatcher}}{(}{Any.ANY}{)}}}{;}}{{{assertSame}{(}{m}{,}{{m}{.}{withExtraTypeInfo}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsExtraTypeInformation}}{{equals10}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{new}{{MatchersPrinter}}{()}}{.}{print}{(}{m}{)}}{.}{equals}{(}{{{arg}{==}{null}}{?}{STRING_CONSTANT}{:}{{arg}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{the_mock_type}{=}{{cachingMockBytecodeGenerator}{.}{get}{(}{{withMockFeatures}{(}{{classloader_with_life_shorter_than_cache}{.}{loadClass}{(}{STRING_CONSTANT}{)}}{,}{{Collections}{.}{<}{{Class}}{>}{emptySet}{()}}{,}{false}{)}}{)}}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{interfaces}}}
{AST_ROOT_SC2NF{{{{Set}}{<}{{Class}}{>}}{extraInterfaces}}}
{AST_ROOT_SC2NF{{{}{{{byteBuddy}{=}{{{{new}{{ByteBuddy}}{(}{ClassFileVersion.JAVA_V5}{)}}{.}{withDefaultMethodAttributeAppender}{(}{MethodAttributeAppender.ForInstrumentedMethod.INSTANCE}{)}}{.}{withAttribute}{(}{TypeAttributeAppender.ForSuperType.INSTANCE}{)}}}{;}}{{{random}{=}{{new}{{Random}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Matcher}}{m}}}
{AST_ROOT_SC2NF{{{Matcher}}{{m}{=}{{matchers}{.}{get}{(}{position}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Matcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{Matcher}}{m}}}
{AST_ROOT_SC2NF{{{}{{{LocalizedMatcher}}{{m}{=}{{new}{{LocalizedMatcher}}{(}{Any.ANY}{)}}}{;}}{{{assertEquals}{(}{{describe}{(}{m}{)}}{,}{{m}{.}{getTypedDescription}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{actualMatcher}{instanceof}{{ContainsTypedDescription}}}{)}{{{}{{return}{{{(}{{(}{{ContainsTypedDescription}}{)}{actualMatcher}}{)}}{.}{getTypedDescription}{()}}{;}}{}}}{else}{{{}{{return}{{HamcrestPrinter}{.}{print}{(}{actualMatcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Matcher}}{actualMatcher}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Matcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Matcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{Matcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationWithMatchers}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{{List}}{<}{{Matcher}}{>}}{)}{{(}{{List}}{)}{lastMatchers}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Matcher}}{matcher}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Matcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{Matcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{ArgumentMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{Matcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Double}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Float}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Long}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Integer}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Short}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Byte}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Boolean}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{Matcher}}{<}{{Character}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{name}{+}{STRING_CONSTANT}}{,}{{describe}{(}{compareTo}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{Matcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{new}{{Equals}}{(}{null}{)}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{new}{{Equals}}{(}{CHAR_CONS}{)}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{describe}{(}{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{matchesToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Matches}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{findToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Find}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{containsToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Contains}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{endsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{EndsWith}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{startsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{StartsWith}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{notToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Not}}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Equals}}{(}{o}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Equals}}{(}{CHAR_CONS}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Same}}{(}{o}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Same}}{(}{CHAR_CONS}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{describe}{(}{{new}{{Same}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{describe}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{describe}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{LocalizedMatcher}}{{m}{=}{{new}{{LocalizedMatcher}}{(}{Any.ANY}{)}}}{;}}{{{assertEquals}{(}{{m}{.}{describe}{()}}{,}{{m}{.}{getTypedDescription}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsTypedDescription}}{{equals10}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ContainsTypedDescription}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{null}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ContainsTypedDescription}}{{equals}{=}{{new}{{Equals}}{(}{null}{)}}}{;}}{{{assertFalse}{(}{{equals}{.}{typeMatches}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContainsTypedDescription}}{{equals}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{null}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{CHAR_CONS}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{getTypedDescription}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getTypedDescription}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{descStr}{=}{{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{.}{getTypedDescription}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{descStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Equals}}{{matcherWithBadDescription}{=}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}{{{}{{public}{{String}}{describe}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{.}{<}{{String}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{describe}{()}{{{}{{return}{{describe}{(}{wanted}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{name}{+}{STRING_CONSTANT}}{,}{{compareTo}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{matchesToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Matches}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{findToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Find}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{containsToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Contains}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{endsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{EndsWith}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{startsWithToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{StartsWith}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{And}}{(}{matchers}{)}}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{notToString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Not}}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Or}}{(}{matchers}{)}}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{o}{)}}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{CHAR_CONS}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{equalsToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Equals}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{o}{)}}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithChar}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{CHAR_CONS}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{sameToStringWithString}{()}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{Same}}{(}{STRING_CONSTANT}{)}}{.}{describe}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{m}{.}{describe}{()}}{.}{equals}{(}{{{arg}{==}{null}}{?}{STRING_CONSTANT}{:}{{arg}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{describe}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{describe}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{out}{.}{append}{(}{{{new}{{Equals}}{(}{{array}{[}{i}{]}}{)}}{.}{describe}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{describe}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{describe}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{add}{(}{{new}{{FormattedText}}{(}{{matcher}{.}{toString}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{MockitoMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{matcher}{.}{matches}{(}{actual}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{Or}{(}{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{m}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{m}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{MockitoMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Double}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Float}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Long}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Integer}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Short}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Byte}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Boolean}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{{MockitoMatcher}}{<}{{Character}}{>}}{matcher}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{m}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{{m}{=}{{matchers}{.}{get}{(}{position}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{private}{static}{{HandyReturnValues}}{reportMatcher}{(}{{{{MockitoMatcher}}{<}{?}{>}}{matcher}}{)}{{{}{{return}{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{matcher}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{MockitoMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{Arrays}{.}{<}{{MockitoMatcher}}{>}{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{m}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{MockitoMatcher}}{matcher}}{:}{matchers}{)}{{{}{{if}{(}{{!}{{matcher}{.}{matches}{(}{actual}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{And}{(}{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}{)}{{{}{{{{this}{.}{matchers}}{=}{matchers}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{MockitoMatcher}}{>}}{matchers}}}
{AST_ROOT_SC2NF{{public}{Not}{(}{{{MockitoMatcher}}{first}}{)}{{{}{{{{this}{.}{first}}{=}{first}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{After}}{public}{void}{resetState}{()}{{{}{{{super}{.}{resetState}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{Returns}}{(}{toBeReturned}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{DoesNothing}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{answer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MOCKITO_CORE}{.}{doAnswer}{(}{{new}{{CallsRealMethods}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{throwables}{==}{null}}{)}{{{}{{{thenThrow}{(}{{(}{{Throwable}}{)}{null}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{expectedMock}{,}{returnedMock}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{dog}{.}{bark}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{dog}{.}{bark}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{ThrowsExceptionClass}{(}{{{{Class}}{<}{{?}{extends}{{Throwable}}}{>}}{throwableClass}}{)}{{{}{{{{this}{.}{throwableClass}}{=}{throwableClass}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{)}}{.}{simpleMethod}{(}{{anyObject}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{oneArg}{(}{{anyObject}{()}}{)}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{oneArg}{(}{{anyObject}{()}}{)}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{mock}{.}{oneArg}{(}{{any}{()}}{)}}{)}}{.}{thenReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Instantiator}}{{instantiator}{=}{{{new}{{InstantiatorProvider}}{()}}{.}{getInstantiator}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{byteBuddy}{=}{{{{new}{{ByteBuddy}}{()}}{.}{withDefaultMethodAttributeAppender}{(}{{new}{{MethodAttributeAppender.ForInstrumentedMethod}}{(}{AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE}{)}}{)}}{.}{withAttribute}{(}{{new}{{TypeAttributeAppender.ForSuperType}}{(}{AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{AllTestsRunner}}{t}}{:}{threads}{)}{{{}{{{t}{.}{join}{()}}{;}}{{{failed}{=}{{failed}{?}{true}{:}{{t}{.}{isFailed}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{pomComparator}{.}{setPair}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ContributionsProvider}}{{contributionsProvider}{=}{{Vcs}{.}{getGitProvider}{(}{{Exec}{.}{getProcessRunner}{(}{workDir}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ContributionsProvider}}{{contributionsProvider}{=}{{Vcs}{.}{getGitProvider}{(}{{Exec.INSTANCE}{.}{getProcessRunner}{(}{workDir}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{MockBytecodeGenerator}{()}{{{}{{{byteBuddy}{=}{{new}{{ByteBuddy}}{()}}}{;}}{{{random}{=}{{new}{{Random}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{runner}{.}{addListener}{(}{{new}{{TextListener}}{(}{System.out}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{invocation}{.}{getMock}{()}}{==}{{{invocation}{.}{getArguments}{()}}{[}{NUMBER_CONSTANT}{]}}}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{arg}{=}{{(}{{String}}{)}{{{invocation}{.}{getArguments}{()}}{[}{NUMBER_CONSTANT}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{CapturesArguments}}{)}{m}}{)}}{.}{captureFrom}{(}{{invocation}{.}{getArgumentAt}{(}{position}{,}{{{Object}}{.}{class}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{secondArgument}{=}{{invocationOnInterface}{.}{getArgumentAt}{(}{NUMBER_CONSTANT}{,}{{int}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{validateIndexWithinInvocationRange}{(}{invocation}{)}}{;}}{{return}{{{invocation}{.}{getArguments}{()}}{[}{{actualArgumentPosition}{(}{invocation}{)}}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ImportLogBean}}{{bean}{=}{{(}{{ImportLogBean}}{)}{{{invocation}{.}{getArguments}{()}}{[}{NUMBER_CONSTANT}{]}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{String}}{)}{{{invocation}{.}{getArguments}{()}}{[}{NUMBER_CONSTANT}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{String}}{)}{{{invocation}{.}{getArguments}{()}}{[}{NUMBER_CONSTANT}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{String}}{)}{{{invocation}{.}{getArguments}{()}}{[}{NUMBER_CONSTANT}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{runner}{=}{{new}{{MockitoJUnit44Runner}}{(}{{{DummyTest}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{ArgumentCaptor}}{<}{{Person}}{>}}{{argument}{=}{{new}{{{ArgumentCaptor}}{<}{{Person}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{new}{{ReturnsElementsOf}}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockitoException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{jUnitRule}}{=}{{new}{{JUnitRule}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{{{assertTrue}{(}{{{logger}{.}{getLoggedInfo}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{listener}{.}{getStubbingInfo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{CapturesArguments}}{)}{m}}{)}}{.}{captureFrom}{(}{{invocation}{.}{getArgumentAt}{(}{position}{,}{{{Object}}{.}{class}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{mock}{,}{{is}{(}{{{List}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{CoreMatchers}{.}{is}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{runner}{,}{{is}{(}{{{JUnit45AndHigherRunnerImpl}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{runner}{,}{{is}{(}{{{JUnit44RunnerImpl}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{result}{.}{wasSuccessful}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{runnerProvider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{FrameworkUsageValidator}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{FrameworkUsageValidator}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{FrameworkUsageValidator}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{reportOngoingStubbing}{(}{{{IOngoingStubbing}}{iOngoingStubbing}}{)}{{{}{{{{threadSafely}{()}}{.}{reportOngoingStubbing}{(}{iOngoingStubbing}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{{stubVoid}{(}{mock}{)}}{.}{toAnswer}{(}{recordCall}{)}}{.}{on}{()}}{.}{voidMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{{stubVoid}{(}{mock}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{.}{on}{()}}{.}{clone}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{{stubVoid}{(}{mock}{)}}{.}{toThrow}{(}{{new}{{RuntimeException}}{()}}{)}}{.}{on}{()}}{.}{clone}{()}}{;}}}
{AST_ROOT_SC2NF{{{{{{stubVoid}{(}{mock}{)}}{.}{toThrow}{(}{expected}{)}}{.}{on}{()}}{.}{clear}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{CoreMatchers}{.}{isA}{(}{{(}{{Class}}{)}{type}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{jUnitRule}{.}{apply}{(}{{new}{{UnfinishedStubbingStatement}}{()}}{,}{injectTestCase}{)}}{.}{evaluate}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{jUnitRule}{.}{apply}{(}{{new}{{ExceptionStatement}}{()}}{,}{injectTestCase}{)}}{.}{evaluate}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{jUnitRule}{.}{apply}{(}{{new}{{DummyStatement}}{()}}{,}{injectTestCase}{)}}{.}{evaluate}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{MockitoJUnitRule}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{VerificationCollectorImpl}{()}{{{}{{{this}{.}{resetBuilder}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{collector}{.}{verify}{(}{methods}{)}}{.}{simpleMethod}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{IMethods}}{{methods}{=}{{mock}{(}{{{IMethods}}{.}{class}}{)}}}{;}}{{{{collector}{.}{verify}{(}{methods}{)}}{.}{simpleMethod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{newHandler}{=}{{{new}{{MockHandlerFactory}}{()}}{.}{create}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockHandler}}{{mockHandler}{=}{{{new}{{MockHandlerFactory}}{()}}{.}{create}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{FieldSetter}}{(}{testClass}{,}{field}{)}}{.}{set}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{new}{{FieldSetter}}{(}{descInstance}{,}{classNameField}{)}}{.}{set}{(}{{proxyClass}{.}{getCanonicalName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{FieldSetter}}{(}{instance}{,}{field}{)}}{.}{set}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{FieldSetter}}{(}{testInstance}{,}{field}{)}}{.}{set}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{new}{{FieldSetter}}{(}{testClass}{,}{field}{)}}{.}{set}{(}{newFieldInstance}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{FieldSetter}}{(}{testClass}{,}{field}{)}}{.}{set}{(}{newFieldInstance}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{new}{{BeanPropertySetter}}{(}{injectee}{,}{candidateFieldToBeInjected}{)}}{.}{set}{(}{matchingMock}{)}}}{)}{{{}{{{{new}{{FieldSetter}}{(}{injectee}{,}{candidateFieldToBeInjected}{)}}{.}{set}{(}{matchingMock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InternalMockHandler}}{{handler}{=}{{{new}{{MockHandlerFactory}}{()}}{.}{create}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InternalMockHandler}}{{handler}{=}{{{new}{{MockHandlerFactory}}{()}}{.}{create}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{listenerThrowable}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{invocationListenerThrewException}{(}{listener}{,}{listenerThrowable}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{listenerThrowable}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{invocationListenerThrewException}{(}{listener}{,}{listenerThrowable}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsInOrderChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{expectedMatchersSize}{!=}{recordedMatchersSize}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{invalidUseOfMatchers}{(}{expectedMatchersSize}{,}{lastMatchers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{superMethod}{.}{isInvokable}{()}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotCallAbstractRealMethod}{()}}{;}}{}}}}{{return}{{superMethod}{.}{invoke}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{argumentPosition}{!=}{LAST_ARGUMENT}}{&&}{{argumentPosition}{<}{NUMBER_CONSTANT}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{invalidArgumentRangeAtIdentityAnswerCreationTime}{()}}{;}}{}}}}{{return}{argumentPosition}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{noMoreInteractionsWantedInOrder}{(}{unverified}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NonGreedyNumberOfInvocationsInOrderChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{,}{{new}{{InvocationMarker}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{mocks}{==}{null}}{||}{{mocks.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{{reporter}{.}{mocksHaveToBePassedToVerifyNoMoreInteractions}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{stubbing}{==}{null}}{)}{{{}{{{mockingProgress}{.}{reset}{()}}{;}}{{{reporter}{.}{missingMethodInvocation}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{defaultAnswer}}{=}{defaultAnswer}}{;}}{{if}{(}{{defaultAnswer}{==}{null}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{defaultAnswerDoesNotAcceptNullParameter}{()}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{alreadyAssigned}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{moreThanOneAnnotationNotAllowed}{(}{{field}{.}{getName}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{o}{.}{isToString}{(}{{wanted}{.}{getMethod}{()}}{)}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotVerifyToString}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotInjectDependency}{(}{candidateFieldToBeInjected}{,}{matchingMock}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{alreadyAssigned}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{moreThanOneAnnotationNotAllowed}{(}{{field}{.}{getName}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{usingConstructor}{&&}{{mode}{==}{SerializableMode.ACROSS_CLASSLOADERS}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{usingConstructorWithFancySerializable}{(}{mode}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{delegatedInstance}{.}{getClass}{()}}{.}{isAssignableFrom}{(}{classToMock}{)}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{mockedTypeIsInconsistentWithDelegatedInstanceType}{(}{classToMock}{,}{delegatedInstance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{classToMock}{.}{equals}{(}{{spiedInstance}{.}{getClass}{()}}{)}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{mockedTypeIsInconsistentWithSpiedInstanceType}{(}{classToMock}{,}{spiedInstance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Class}}{i}}{:}{extraInterfaces}{)}{{{}{{if}{(}{{classToMock}{==}{i}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{extraInterfacesCannotContainMockedType}{(}{classToMock}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mockSettings}{.}{isStubOnly}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{stubPassedToVerify}{()}}{;}}{}}}}{{return}{{new}{{VerificationDataImpl}}{(}{invocationContainerImpl}{,}{invocationMatcher}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{invocationContainerImpl}{.}{hasInvocationForPotentialStubbing}{()}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{incorrectUseOfApi}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{methodInfo}{.}{isVoid}{()}}}{)}{{{}{{{reporter}{.}{onlyVoidMethodsCanBeSetToDoNothing}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{methodInfo}{.}{isAbstract}{()}}{)}{{{}{{{reporter}{.}{cannotCallAbstractRealMethod}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{foundSize}{>}{maxNumberOfInvocations}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{wantedAtMostX}{(}{maxNumberOfInvocations}{,}{foundSize}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{method}{.}{isAbstract}{()}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{cannotCallAbstractRealMethod}{()}}{;}}{}}}}{{return}{{realMethod}{.}{invoke}{(}{mock}{,}{rawArguments}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MissingInvocationChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{Reporter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{throwableClass}{==}{null}}{||}{{!}{{{{Throwable}}{.}{class}}{.}{isAssignableFrom}{(}{throwableClass}{)}}}}{)}{{{}{{{{new}{{Reporter}}{()}}{.}{notAnException}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{should_throw_correct_exception_for_null_invocation_listener}{(}{)}{throws}{{Exception}}{{{}{{{{new}{{Reporter}}{()}}{.}{invocationListenerDoesNotAcceptNullParameters}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{StackTraceElement}}{element}}{:}{target}{)}{{{}{{if}{(}{{CLEANER}{.}{apply}{(}{element}{)}}{)}{{{}{{{filtered}{.}{add}{(}{element}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{{assertThat}{(}{{cleaner}{.}{apply}{(}{{type}{(}{className}{)}}{)}}{)}}{.}{describedAs}{(}{STRING_CONSTANT}{,}{className}{)}}{.}{isFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{assertThat}{(}{{cleaner}{.}{apply}{(}{{type}{(}{className}{)}}{)}}{)}}{.}{describedAs}{(}{STRING_CONSTANT}{,}{className}{)}}{.}{isTrue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{invocationMarker}{.}{markVerified}{(}{actualInvocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{marker}{.}{markVerified}{(}{next}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NonGreedyNumberOfInvocationsInOrderChecker}{()}{{{}{{this}{(}{{new}{{InvocationsFinder}}{()}}{,}{{new}{{InvocationMarker}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{marker}{.}{markVerified}{(}{{chunk}{.}{get}{(}{NUMBER_CONSTANT}{)}}{,}{wantedMatcher}{)}}{;}}}
{AST_ROOT_SC2NF{{{invocationMarker}{.}{markVerifiedInOrder}{(}{chunk}{,}{wanted}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{invocationMarker}{.}{markVerifiedInOrder}{(}{chunk}{,}{wanted}{,}{orderingContext}{)}}{;}}}
{AST_ROOT_SC2NF{{{invocationMarker}{.}{markVerified}{(}{actualInvocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{invocationMarker}{.}{markVerified}{(}{found}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HandyReturnValues}}{reportMatcher}{(}{{{ArgumentMatcher}}{matcher}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{matcher}{)}}{.}{<}{{T}}{>}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{.}{returnString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{Null.NULL}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{Null.NULL}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{AnyVararg.ANY_VARARG}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{{reportMatcher}{(}{Any.ANY}{)}}{.}{returnNull}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Mockito}{.}{argThat}{(}{capturingMatcher}{)}}{;}}{{return}{{handyReturnValues}{.}{returnFor}{(}{clazz}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Primitives}{.}{defaultValueForPrimitiveOrWrapper}{(}{type}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{{new}{{ThreadSafeMockingProgress}}{()}}{.}{pullOngoingStubbing}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnChar}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnZero}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{.}{returnFalse}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{.}{returnNull}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ENABLED}{&&}{{{candidate}{.}{getMethodName}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{defaultCleaner}{.}{isOut}{(}{candidate}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{argument}}}
{AST_ROOT_SC2NF{{{Object}}{argument}}}
{AST_ROOT_SC2NF{{new}{{{ArgumentMatcher}}{<}{{String}}{>}}{()}{{{}{{public}{boolean}{matches}{(}{{{Object}}{argument}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{Answer}}{>}}{answers}}{)}{{{}{{{answersForStubbing}{.}{addAll}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{public}{InOrderImpl}{(}{{{{List}}{<}{{Object}}{>}}{mocksToBeVerifiedInOrder}}{)}{{{}{{{{this}{.}{mocksToBeVerifiedInOrder}}{.}{addAll}{(}{mocksToBeVerifiedInOrder}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Map}}{map}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LinkedList}}{linkedList}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{List}}{list}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Answer}}{>}}{answers}}}
{AST_ROOT_SC2NF{{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{Answer}}{>}}{answers}}{)}{{{}{{{mockHandler}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{settings}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{(}{{Double}}{)}{NUMBER_CONSTANT}}{,}{{captor}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Long}}{{longPretendingAnInt}{=}{{new}{{Long}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{{new}{{HamcrestArgumentMatcher}}{(}{matcher}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{mockUtil}{.}{isSpy}{(}{{(}{{Class}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{Answer}}{>}}{answers}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{compareTo}{(}{{{HasCompare}}{redHerring}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{foo}{(}{{{HasCompare}}{other}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{compareTo}{(}{{{HasCompareToButDoesNotImplementComparable}}{other}}{)}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotNull}{(}{readObject}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{NullResultGuardian}{(}{{{InternalMockHandler}}{delegate}}{)}{{{}{{{{this}{.}{delegate}}{=}{delegate}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{)}}{.}{simpleMethod}{(}{{(}{{Object}}{)}{{anyObject}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{pluginType}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{int}{{secondArgument}{=}{{invocationOnInterface}{.}{getArgument}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{void}{reportMatcher}{(}{{{ArgumentMatcher}}{matcher}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{mockingStarted}{(}{{{Object}}{mock}}{,}{{{Class}}{classToMock}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{mockingStarted}{(}{{{Object}}{mock}}{,}{{{Class}}{classToMock}}{)}{;}}}
{AST_ROOT_SC2NF{{{OngoingStubbing}}{pullOngoingStubbing}{(}{)}{;}}}
{AST_ROOT_SC2NF{{void}{reportOngoingStubbing}{(}{{{OngoingStubbing}}{ongoingStubbing}}{)}{;}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{public}{void}{reportOngoingStubbing}{(}{{{OngoingStubbing}}{iOngoingStubbing}}{)}{{{}{{{{threadSafely}{()}}{.}{reportOngoingStubbing}{(}{iOngoingStubbing}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{ArgumentMatcher}}{getMatcher}{()}{{{}{{return}{matcher}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ArgumentMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{createdMocks}{=}{{new}{{LinkedList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{mockingStarted}{(}{{{Object}}{mock}}{,}{{{Class}}{classToMock}}{)}{{{}{{{toBeFilled}{.}{add}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CollectCreatedMocks}{(}{{{List}}{toBeFilled}}{)}{{{}{{{{this}{.}{toBeFilled}}{=}{toBeFilled}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{expected}}}
{AST_ROOT_SC2NF{{{}{{{copy}{(}{from}{,}{to}{,}{{from}{.}{getClass}{()}}{,}{{to}{.}{getClass}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Class}}{actualType}}}
{AST_ROOT_SC2NF{{{Class}}{{lhsClass}{=}{{lhs}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{Class}}{typeToMock}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{String}}{>}}{lines}}}
{AST_ROOT_SC2NF{{new}{{SerializableMethod}}{(}{{type}{.}{getMethod}{(}{methodName}{,}{{new}{{{Class}}{[}}{NUMBER_CONSTANT}{]}}{)}}{)}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{{Class}}{mockedType}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{{Class}}{[]}}{argTypes}}}
{AST_ROOT_SC2NF{{{}{{{mock}{(}{{{IMethods}}{.}{class}}{,}{{{withSettings}{()}}{.}{extraInterfaces}{(}{{(}{{{Class}}{[]}}{)}{null}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Class}}{anInterface}}{:}{interfaces}{)}{{{}{{{types}{.}{add}{(}{{anInterface}{.}{getName}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Class}}{i}}{:}{extraInterfaces}{)}{{{}{{if}{(}{{classToMock}{==}{i}}{)}{{{}{{throw}{{extraInterfacesCannotContainMockedType}{(}{classToMock}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{{currentExploredClass}{=}{clazz}}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{add}{(}{{String}{.}{valueOf}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Answer}}{answer}}}
{AST_ROOT_SC2NF{{{Answer}}{answer}}}
{AST_ROOT_SC2NF{{public}{{BDDStubber}}{will}{(}{{{Answer}}{answer}}{)}{{{}{{return}{{new}{{BDDStubberImpl}}{(}{{mockitoStubber}{.}{doAnswer}{(}{answer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{BDDStubber}}{willAnswer}{(}{{{Answer}}{answer}}{)}{{{}{{return}{{new}{{BDDStubberImpl}}{(}{{mockitoStubber}{.}{doAnswer}{(}{answer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Answer}}{answer}}}
{AST_ROOT_SC2NF{{{Answer}}{answer}}}
{AST_ROOT_SC2NF{{return}{{(}{{List}}{)}{matchers}}{;}}}
{AST_ROOT_SC2NF{{HoldingAReference}{(}{{{{WeakReference}}{<}{{Class}}{>}}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{.}{.}{.}{extraInterfaces}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{chunk}{=}{{finder}{.}{findMatchingChunk}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{simpleMethodInvocation}{)}}{,}{NUMBER_CONSTANT}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{finder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedDifferentMethod}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{found}{=}{{finder}{.}{findSimilarInvocation}{(}{invocations}{,}{{new}{{InvocationMatcher}}{(}{overloadedSimpleMethod}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{{new}{{InvocationsFinder}}{()}}{.}{findFirstUnverifiedInOrder}{(}{{data}{.}{getOrderingContext}{()}}{,}{invocations}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{unverified}{=}{{{new}{{InvocationsFinder}}{()}}{.}{findFirstUnverified}{(}{{data}{.}{getAllInvocations}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{next}{=}{{finder}{.}{findFirstMatchingUnverifiedInvocation}{(}{invocations}{,}{wanted}{,}{context}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{size}{(}{{{Collection}}{collection}}{)}{{{}{{return}{{collection}{.}{size}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{size}{(}{{{Map}}{map}}{)}{{{}{{return}{{map}{.}{size}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{verify}{(}{{(}{{Iterable}}{)}{iterable}}{)}}{.}{iterator}{()}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotNull}{(}{{{(}{{(}{{Iterable}}{)}{iterable}}{)}}{.}{iterator}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifier}{.}{setAnswersForStubbing}{(}{{new}{{{ArrayList}}{<}{{Answer}}{>}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{FailingConstructor}{(}{{{Set}}{set}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Set}}{getHistogram2}{()}{{{}{{return}{histogram2}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Set}}{getHistogram1}{()}{{{}{{return}{histogram1}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TreeSet}}{getSearchTree}{()}{{{}{{return}{searchTree}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{List}}{getAList}{()}{{{}{{return}{aList}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ConstructorInjection.SimpleArgumentResolver}}{{resolver}{=}{{new}{{ConstructorInjection.SimpleArgumentResolver}}{(}{{newSetOf}{(}{{new}{{HashSet}}{()}}{,}{{new}{{ByteArrayOutputStream}}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{some_class_with_parametered_constructor}{(}{{{List}}{collaborator}}{)}{{{}{{{constructor_instantiation}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ByteBuddyMockMaker}{()}{{{}{{{cachingMockBytecodeGenerator}{=}{{new}{{CachingMockBytecodeGenerator}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{LessThan}{(}{{{{Comparable}}{<}{{T}}{>}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{LessOrEqual}{(}{{{{Comparable}}{<}{{T}}{>}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{GreaterOrEqual}{(}{{{{Comparable}}{<}{{T}}{>}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{{T}}{>}}{value}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{{T}}{>}}{value}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{{T}}{>}}{value}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{{T}}{>}}{value}}}
{AST_ROOT_SC2NF{{{{Comparable}}{<}{{T}}{>}}{value}}}
{AST_ROOT_SC2NF{{public}{CompareTo}{(}{{{{Comparable}}{<}{{T}}{>}}{value}}{)}{{{}{{{{this}{.}{wanted}}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{GreaterThan}{(}{{{{Comparable}}{<}{{T}}{>}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CompareEqual}{(}{{{{Comparable}}{<}{{T}}{>}}{value}}{)}{{{}{{super}{(}{value}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnmockableHashCodeAndEquals}}{{mock}{=}{{mock}{(}{{{UnmockableHashCodeAndEquals}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{MethodTransformer.Simple}{.}{withModifiers}{(}{SynchronizationState.PLAIN}{)}}}
{AST_ROOT_SC2NF{{public}{{VerificationMode}}{only}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{VerificationMode}}{atLeastOnce}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{VerificationMode}}{never}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{initialize_dependencies}{()}{{{}{{{underTest}{=}{{new}{{ConstructorInjection}}{(}{resolver}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Method}}{getJavaMethod}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{{{Class}}{<}{?}{>}}{[]}}{getExceptionTypes}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{{{Class}}{<}{?}{>}}{[]}}{getParameterTypes}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{{Class}}{<}{?}{>}}{getReturnType}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{getName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{o1}{==}{null}}{&&}{{o2}{==}{null}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{writeReplace}{(}{)}{throws}{{ObjectStreamException}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportMatcher}{(}{{new}{{{HamcrestArgumentMatcher}}{<}{{T}}{>}}{(}{matcher}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{mockingStarted}{(}{mock}{,}{typeToMock}{)}}{;}}}
{AST_ROOT_SC2NF{{{ThreadSafeMockingProgress}}{{p}{=}{{new}{{ThreadSafeMockingProgress}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportNot}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportOr}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MOCKING_PROGRESS}{.}{getArgumentMatcherStorage}{()}}{.}{reportAnd}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{{new}{{ThreadSafeMockingProgress}}{()}}{.}{pullOngoingStubbing}{()}}{)}}{.}{isNull}{()}}{;}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{stubbingCompleted}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationContainerImpl}}{{invocations}{=}{{new}{{InvocationContainerImpl}}{(}{{new}{{ThreadSafeMockingProgress}}{()}}{,}{{new}{{MockSettingsImpl}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{setVerificationStrategy}{(}{{MockingProgressImpl}{.}{getDefaultVerificationStrategy}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mockingProgress}{.}{setVerificationStrategy}{(}{{MockingProgressImpl}{.}{getDefaultVerificationStrategy}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{AnyVararg.ANY_VARARG}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{{new}{{Equals}}{(}{null}{)}}{,}{AnyVararg.ANY_VARARG}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{AnyVararg.ANY_VARARG}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{invocationMatcher}{=}{{new}{{InvocationMatcher}}{(}{invocation}{,}{{(}{{List}}{)}{{asList}{(}{{new}{{Equals}}{(}{NUMBER_CONSTANT}{)}}{,}{AnyVararg.ANY_VARARG}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{filterRequested}{=}{true}}{;}}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoJUnitListener}}{{listener}{=}{{new}{{MockitoJUnitListener}}{(}{notifier}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{result}{.}{wasSuccessful}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{runnerProvider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{klass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifier}{.}{fireTestFailure}{(}{{new}{{Failure}}{(}{unnecessaryStubbings}{,}{{{new}{{Reporter}}{()}}{.}{formatUnncessaryStubbingException}{(}{testClass}{,}{{stubbings}{.}{values}{()}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{FrameworkUsageValidator}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{FrameworkUsageValidator}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{notifier.addedListeners}{,}{{contains}{(}{{clazz}{(}{{{FrameworkUsageValidator}}{.}{class}}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{filter}{(}{{{Filter}}{filter}}{)}{throws}{{NoTestsRemainException}}{{{}{{{filterRequested}{=}{true}}{;}}{{{runner}{.}{filter}{(}{filter}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoJUnitListener}}{{listener}{=}{{new}{{MockitoJUnitListener}}{(}{notifier}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{match}{=}{{comparator}{.}{argumentsMatch}{(}{invocationMatcher}{,}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{{new}{{ArgumentsComparator}}{()}}{.}{argumentsMatch}{(}{this}{,}{actualArgs}{)}}{;}}{}}}{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{false}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{invocation}{.}{getMock}{()}}{.}{equals}{(}{{actual}{.}{getMock}{()}}{)}}{&&}{{hasSameMethod}{(}{actual}{)}}{&&}{{{new}{{ArgumentsComparator}}{()}}{.}{argumentsMatch}{(}{this}{,}{actual}{)}}}{;}}}
{AST_ROOT_SC2NF{{!}{{{new}{{TestMethodsFinder}}{()}}{.}{hasTestMethods}{(}{klass}{)}}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{?}{>}}{settings}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{mockSettings}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Collection}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{LinkedList}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Map}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{HashMap}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Set}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{HashSet}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{List}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{LinkedList}}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{invocation}{.}{toString}{()}}{,}{{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{chunk}{,}{{hasExactlyInOrder}{(}{simpleMethodInvocation}{,}{simpleMethodInvocationTwo}{,}{simpleMethodInvocationThree}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{chunk}{,}{{hasExactlyInOrder}{(}{simpleMethodInvocation}{,}{simpleMethodInvocationTwo}{,}{simpleMethodInvocationThree}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{chunk}{,}{{hasExactlyInOrder}{(}{simpleMethodInvocation}{,}{simpleMethodInvocationTwo}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{MyAssertionError}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{UnnecessaryStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{hasOnlyThoseClasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{hasOnlyThoseClasses}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{hasOnlyThoseClasses}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{hasOnlyThoseClasses}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{hasOnlyThoseClasses}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{TooLittleActualInvocations}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Result}}{{result}{=}{{runner}{.}{run}{(}{{{SomeFeature}}{.}{class}}{)}}}{;}}{{{{assertThat}{(}{result}{)}}{.}{isSuccessful}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{hasFirstMethodInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{t}{,}{{hasOnlyThoseClassesInStackTrace}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{t}{,}{{hasOnlyThoseClassesInStackTrace}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{filtered}{,}{{hasExactlyInOrder}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{timer}{.}{isCounting}{()}}{,}{{is}{(}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{timer}{.}{isCounting}{()}}{,}{{is}{(}{true}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Iterable}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Collection}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Map}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{HashMap}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Set}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{HashSet}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{List}}{.}{class}}{)}}{)}}{;}}{{return}{{new}{{ArrayList}}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{String}}{.}{class}}{)}}{)}}{;}}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Short}}{.}{class}}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Double}}{.}{class}}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Float}}{.}{class}}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Long}}{.}{class}}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Integer}}{.}{class}}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Character}}{.}{class}}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Byte}}{.}{class}}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reportMatcher}{(}{{new}{{InstanceOf}}{(}{{{Boolean}}{.}{class}}{)}}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{save}{(}{{{Person}}{capture}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{targetMethod}{(}{{{String}}{arg}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{Integer}}{getValue}{(}{{{Integer}}{param}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{Object}}{otherMethod}{(}{{{Object}}{param}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{Object}}{someMethod}{(}{{{Object}}{param}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{{MyIterator}}{<}{{T}}{>}}{iterator}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setSpy}{(}{{{List}}{spy}}{)}{{{}{{{{this}{.}{spy}}{=}{spy}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{List}}{getList}{()}{{{}{{return}{list}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContainsIgnoringCase}{(}{STRING_CONSTANT}{,}{log}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertNotContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{assertNotContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{AssertionError}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{org.mockito.exceptions.verification.junit.ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{expected}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{assertContains}{(}{expected}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoInteractionsWanted}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{{{{{e}{.}{getCause}{()}}{.}{getMessage}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationInOrderFailure}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{name}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NeverWantedButInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InvalidUseOfMatchersException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SmartNullPointerException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{mockTwo}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InstantiationException}}{e}}{)}{{{}{{{assertContains}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{WantedButNotInvoked}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArgumentsAreDifferent}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{{failure}{.}{getException}{()}}{.}{getMessage}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{STRING_CONSTANT}{+}{mockTwo}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertContains}{(}{STRING_CONSTANT}{,}{{mockTwo}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertContains}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{{mockUtil}{.}{getMockSettings}{(}{mock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotNull}{(}{{mockUtil}{.}{getMockHandler}{(}{mock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{throwable}{)}}{)}{{{}{{throw}{throwable}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{notInitializedSpy}{)}}{;}}{{{assertNotNull}{(}{{notInitializedSpy}{.}{getAList}{()}}{)}}{;}}{{{assertTrue}{(}{{mockUtil}{.}{isMock}{(}{notInitializedSpy}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{should_inject_mocks_in_spy}{()}{{{}{{{assertNotNull}{(}{{initializedSpy}{.}{getAList}{()}}{)}}{;}}{{{assertTrue}{(}{{mockUtil}{.}{isMock}{(}{initializedSpy}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{{mockType}{=}{{{{mockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{getMockSettings}{()}}{.}{getTypeToMock}{()}}}{;}}}
{AST_ROOT_SC2NF{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{instance}{)}}}
{AST_ROOT_SC2NF{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{instance}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{isMockOrSpy}{(}{instance}{)}}{)}{{{}{{{mockUtil}{.}{maybeRedefineMockName}{(}{instance}{,}{{field}{.}{getName}{()}}{)}}{;}}{{return}{instance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{?}{>}}{{mockSettings}{=}{{{new}{{MockUtil}}{()}}{.}{getMockSettings}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockCreationSettings}}{{parentMockSettings}{=}{{{new}{{MockUtil}}{()}}{.}{getMockSettings}{(}{parentMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{Object}}{>}}{{handler}{=}{{{new}{{MockUtil}}{()}}{.}{getMockHandler}{(}{{invocation}{.}{getMock}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{isMock}{(}{subClass.list}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{classMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{new}{{MockUtil}}{()}}{.}{isMock}{(}{interfaceMock}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{Object}}{>}}{{handler}{=}{{{new}{{MockUtil}}{()}}{.}{getMockHandler}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{MockingDetails}}{mockingDetails}{(}{{{Object}}{toInspect}}{)}{{{}{{return}{{new}{{DefaultMockingDetails}}{(}{toInspect}{,}{{new}{{MockUtil}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationContainer}}{{invocationContainer}{=}{{{{new}{{MockUtil}}{()}}{.}{getMockHandler}{(}{m}{)}}{.}{getInvocationContainer}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mock}{==}{null}}{)}{{{}{{throw}{{nullPassedWhenCreatingInOrder}{()}}{;}}{}}}}{{if}{(}{{!}{{mockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{throw}{{notAMockPassedWhenCreatingInOrder}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{InvocationContainer}}{{invocations}{=}{{{mockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{getInvocationContainer}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{{{mockUtil}{.}{getMockHandler}{(}{m}{)}}{.}{getInvocationContainer}{()}}{.}{clearInvocations}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{mockUtil}{.}{resetMock}{(}{m}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{mockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{throw}{{notAMockPassedToVerify}{(}{{mock}{.}{getClass}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{{mock}{=}{{mockUtil}{.}{createMock}{(}{creationSettings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{Object}}{>}}{{handler}{=}{{{new}{{MockUtil}}{()}}{.}{getMockHandler}{(}{mock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TypeMockability}}{{typeMockability}{=}{{mockUtil}{.}{typeMockabilityOf}{(}{classToMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{mockUtil}{.}{typeMockabilityOf}{(}{aClass}{)}}{.}{mockable}{()}}{)}{{{}{{{constructorMockableParamsSize}{++}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{mockName}{=}{{{mockUtil}{.}{getMockName}{(}{{{mocks}{.}{iterator}{()}}{.}{next}{()}}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{candidateFieldToBeInjected}{.}{getName}{()}}{.}{equals}{(}{{{mockUtil}{.}{getMockName}{(}{mock}{)}}{.}{toString}{()}}{)}}{)}{{{}{{{mockNameMatches}{.}{add}{(}{mock}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{qualifiedName}{=}{{{{new}{{MockUtil}}{()}}{.}{getMockName}{(}{{invocation}{.}{getMock}{()}}{)}}{+}{STRING_CONSTANT}{+}{{{invocation}{.}{getMethod}{()}}{.}{getName}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{finder}{.}{find}{(}{{asList}{(}{mockOne}{,}{mockOne}{,}{mockOne}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{finder}{.}{find}{(}{{asList}{(}{mockOne}{,}{mockTwo}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{all}{=}{{{new}{{AllInvocationsFinder}}{()}}{.}{find}{(}{createdMocks}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{{new}{{VerifiableInvocationsFinder}}{()}}{.}{find}{(}{{inOrder}{.}{getMocksToBeVerifiedInOrder}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Invocation}}{>}}{{invocations}{=}{{allInvocationsFinder}{.}{find}{(}{{asList}{(}{mocks}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{forCurrentJavaVersion}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{forCurrentJavaVersion}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mockHandler}{)}}{.}{setAnswersForStubbing}{(}{{anyList}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{when}{(}{{sorter}{.}{sort}{(}{{anyList}{()}}{)}}{)}}{.}{thenReturn}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{results}{.}{add}{(}{{{new}{{SuperTypesLastSorter}}{()}}{.}{sort}{(}{{Arrays}{.}{asList}{(}{o}{)}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Field}}{>}}{{sortedFields}{=}{{{new}{{SuperTypesLastSorter}}{()}}{.}{sort}{(}{unsortedFields}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Field}}{>}}{{l}{=}{{{new}{{SuperTypesLastSorter}}{()}}{.}{sort}{(}{{Arrays}{.}{asList}{(}{o1}{,}{o2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{new}{{SuperTypesLastSorter}}{()}}{.}{sort}{(}{declaredFields}{)}}{;}}}
{AST_ROOT_SC2NF{{{new}{{ArrayUtils}}{()}}{.}{isEmpty}{(}{args}{)}}}
{AST_ROOT_SC2NF{{public}{{InvocationMatcher}}{getWanted}{()}{{{}{{return}{wanted}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOut}{(}{{{Invocation}}{invocation}}{)}{{{}{{return}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{invocation}{.}{getMethod}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{new}{{ObjectMethodsGuru}}{()}}{.}{isToString}{(}{{currentInvocation}{.}{getMethod}{()}}{)}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{unstubbedInvocation}{.}{toString}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{filterRequested}}{&&}{{listener}{.}{isSussessful}{()}}}{)}{{{}{{{reporter}{.}{report}{(}{testClass}{,}{notifier}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{mockingStarted}{(}{mock}{,}{typeToMock}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldNotifyListenerSafely}{(}{)}{throws}{{Exception}}{{{}{{{mockingProgress}{.}{setListener}{(}{null}{)}}{;}}{{{mockingProgress}{.}{mockingStarted}{(}{null}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{?}{>}}{mocks}}}
{AST_ROOT_SC2NF{{throw}{{cannotInitializeForInjectMocksAnnotation}{(}{{field}{.}{getName}{()}}{,}{e}{)}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullPointerException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullPointerException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullPointerException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NullPointerException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{==}{null}}{)}{{{}{{throw}{{new}{{NullPointerException}}{(}{{checkedValue}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}{{return}{value}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{TypeVariable}}{typeVariable}{()}{{{}{{return}{typeVariable}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TypeVarBoundedType}{(}{{{TypeVariable}}{typeVariable}}{)}{{{}{{{{this}{.}{typeVariable}}{=}{typeVariable}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{TypeVariable}}{[]}}{typeParameters}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{instanceof}{{TypeVariable}}}{)}{{{}{{return}{{new}{{TypeVariableReturnType}}{(}{this}{,}{{method}{.}{getTypeParameters}{()}}{,}{{(}{{TypeVariable}}{)}{type}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{wildCardBoundedType}{.}{firstBound}{()}}{instanceof}{{TypeVariable}}}{)}{{{}{{return}{{boundsOf}{(}{{(}{{TypeVariable}}{)}{{wildCardBoundedType}{.}{firstBound}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeVariable}}{typeVariable}}}
{AST_ROOT_SC2NF{{{assertNotEquals}{(}{NUMBER_CONSTANT}{,}{to.privateTransientField}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNotEquals}{(}{NUMBER_CONSTANT}{,}{to.finalField}{)}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{classToMock}}}
{AST_ROOT_SC2NF{{int}{size}{()}{{{}{{return}{{unused}{.}{size}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{forThisVm}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assumeTrue}{(}{{{ClassFileVersion}{.}{forThisVm}{()}}{.}{isAtLeast}{(}{ClassFileVersion.JAVA_V8}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{getAuthor}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{String}}{getAuthorId}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toText}{()}{{{}{{return}{{{commits}{.}{size}{()}}{+}{STRING_CONSTANT}{+}{author}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAuthor}{()}{{{}{{return}{author}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getAuthorId}{()}{{{}{{return}{email}{;}}{}}}}}
{AST_ROOT_SC2NF{{UnusedStubbings}{(}{{{{Collection}}{<}{{Stubbing}}{>}}{unused}}{)}{{{}{{{{this}{.}{unused}}{=}{unused}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{type}{instanceof}{{Class}}}{)}{{{}{{return}{{new}{{NotGenericReturnTypeSupport}}{(}{type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DelayedExecution}}{{delayedExecution}{=}{{new}{{DelayedExecution}}{(}{executor}{,}{mock}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DelayedExecution}}{{delayedExecution}{=}{{new}{{DelayedExecution}}{(}{executor}{,}{mock}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DelayedExecution}}{{delayedExecution}{=}{{new}{{DelayedExecution}}{(}{executor}{,}{mock}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{generatedMockClass}{=}{{generate}{(}{features}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{shouldRunInMultipleThreads}{(}{)}{throws}{{Exception}}{{{}{{{assertFalse}{(}{STRING_CONSTANT}{,}{{runInMultipleThreads}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{?}{extends}{{T}}}{>}}{{mockedProxyType}{=}{{createProxyClass}{(}{{mockWithFeaturesFrom}{(}{settings}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{?}{extends}{{T}}}{>}}{{type}{=}{{bytecodeGenerator}{.}{mockClass}{(}{{mockWithFeaturesFrom}{(}{settings}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{dispatcher}{==}{null}}{||}{{!}{{dispatcher}{.}{isMocked}{(}{mock}{)}}}}}
{AST_ROOT_SC2NF{{public}{AbstractByteBuddyMockMakerTest}{(}{{{MockMaker}}{mockMaker}}{)}{{{}{{{{this}{.}{mockMaker}}{=}{mockMaker}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{generatedMockClass}{=}{{generate}{(}{features}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{invocation}{.}{getMock}{()}}{.}{equals}{(}{{actual}{.}{getMock}{()}}{)}}{&&}{{hasSameMethod}{(}{actual}{)}}{&&}{{argumentsMatch}{(}{this}{,}{actual}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{given}{(}{{{mock}{(}{{{ConstructorArgumentResolver}}{.}{class}}{)}}{.}{resolveTypeInstances}{(}{{any}{(}{{{{Class}}{[]}}{.}{class}}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{withModifiers}{(}{SynchronizationState.PLAIN}{)}}}
{AST_ROOT_SC2NF{{{}{{{addStep}{(}{task}{,}{{config}{.}{get}{(}{STRING_CONSTANT}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{wantedMatcher}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{InvocationMatcher}}{invocationMatcher}}{)}{{{}{{return}{{print}{(}{{invocationMatcher}{.}{getMatchers}{()}}{,}{{invocationMatcher}{.}{getInvocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{getWanted}{(}{)}{;}}}
{AST_ROOT_SC2NF{{private}{RemoveNotMatching}{(}{{{InvocationMatcher}}{wanted}}{)}{{{}{{{{this}{.}{wanted}}{=}{wanted}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{wanted}}}
{AST_ROOT_SC2NF{{{CapturesArgumentsFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{CapturesArgumentsFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{CapturesArgumentsFromInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{VerificationDataInOrderImpl}}{{dataInOrder}{=}{{new}{{VerificationDataInOrderImpl}}{(}{inOrder}{,}{invocations}{,}{{data}{.}{getWanted}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MatchableInvocation}}{{wanted}{=}{{data}{.}{getWanted}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{listener}{)}}{;}}{{{{mockingProgress}{()}}{.}{removeListener}{(}{listener}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertNotNull}{(}{listener}{)}}{;}}{{{{mockingProgress}{()}}{.}{addListener}{(}{listener}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{()}{{{}{{{executor}{=}{{newSingleThreadScheduledExecutor}{()}}}{;}}{{{stopWatch}{=}{{createNotStarted}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Advice.BoxedReturn}{(}{{readOnly}{=}{false}}{)}}{{Object}}{returned}}}
{AST_ROOT_SC2NF{{{@}{Advice.BoxedArguments}}{{{Object}}{[]}}{arguments}}}
{AST_ROOT_SC2NF{{private}{ExcludeHandler}{(}{{{RootDoc}}{root}}{)}{{{}{{{{this}{.}{root}}{=}{root}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Invocation}}{getInvocation}{()}{{{}{{return}{invocation}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{isMockitoMock}{(}{mock}{)}}{&&}{{{{getMockSettings}{(}{mock}{)}}{.}{getDefaultAnswer}{()}}{==}{Mockito.CALLS_REAL_METHODS}}}{;}}{}}}}
{AST_ROOT_SC2NF{{isMockitoMock}{(}{mock}{)}}}
{AST_ROOT_SC2NF{{{{mockingProgress}{()}}{.}{stubbingCompleted}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{AnnotationEngine}}{{customizedEngine}{=}{{new}{{DefaultAnnotationEngine}}{()}{{}}}}{;}}}
{AST_ROOT_SC2NF{{{AnnotationEngine}}{{annotationEngine}{=}{{{new}{{GlobalConfiguration}}{()}}{.}{getAnnotationEngine}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ClassLoader}}{{cl}{=}{{{{{{isolatedClassLoader}{()}}{.}{withCurrentCodeSourceUrls}{()}}{.}{withPrivateCopyOf}{(}{CLASS_NAME_USING_INTERFACE}{)}}{.}{withPrivateCopyOf}{(}{INTERFACE_NAME}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{STRING_CONSTANT}{,}{classLoader}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{ExcludingURLClassLoaderBuilder}}{without}{(}{{{String}}{.}{.}{.}{privatePrefixes}}{)}{{{}{{{privateCopyPrefixes}{.}{addAll}{(}{{asList}{(}{privatePrefixes}{)}}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Statement}}{statement}}}
{AST_ROOT_SC2NF{{{mock}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{doAssert}{(}{{{Throwable}}{throwable}}{)}{{{}{{{{{Assertions}{.}{assertThat}{(}{throwable}{)}}{.}{isInstanceOf}{(}{expected}{)}}{.}{hasMessage}{(}{expectedMessage}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{beforeTest}{(}{{{Object}}{testClassInstance}}{,}{{{String}}{testMethodName}}{)}{{{}{{{MockitoAnnotations}{.}{initMocks}{(}{testClassInstance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JUnitRule}}{silent}{()}{{{}{{return}{{new}{{JUnitRule}}{(}{logger}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{JUnitRule}}{(}{{new}{{ConsoleMockitoLogger}}{()}}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{void}{doAssert}{(}{{{Throwable}}{throwable}}{)}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{rule_validates_mockito_usage}{(}{)}{throws}{{Throwable}}{{{}{{{rule}{.}{expectThrowable}{(}{{{UnfinishedVerificationException}}{.}{class}}{)}}{;}}{{{verify}{(}{mock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{PotentialStubbingProblem}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{UnnecessaryStubbingException}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{RuntimeException}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{rule}{.}{expectThrowable}{(}{{{UnfinishedStubbingException}}{.}{class}}{)}}{;}}{{{when}{(}{{mock}{.}{simpleMethod}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{rule}{.}{expectThrowable}{(}{{{RuntimeException}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{rule}{.}{expectThrowable}{(}{{{AssertionError}}{.}{class}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyStubbedAnswerLookUp}{(}{invocation}{,}{stubbedInvocation}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{StubbingLookUpListener}}{>}}{getStubbingLookUpListeners}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{JUnitRule}}{(}{{new}{{ConsoleMockitoLogger}}{()}}{,}{JUnitRule.Strictness.WARN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{MockitoRule}}{silent}{()}{{{}{{return}{{new}{{JUnitRule}}{(}{logger}{,}{Strictness.SILENT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{case}{SILENT}{:}}}
{AST_ROOT_SC2NF{{settings}{.}{getStubbingLookupListeners}{()}}}
{AST_ROOT_SC2NF{{{mockingProgress}{.}{verificationStarted}{(}{{new}{{MockAwareVerificationMode}}{(}{mock}{,}{actualMode}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{wantedArgumentPosition}{()}{{{}{{return}{wantedArgumentPosition}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{new}{{AnswersValidator}}{()}}{.}{validateDefaultAnswerReturnedValue}{(}{invocation}{,}{ret}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{returnsNull}{()}{{{}{{return}{{value}{==}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{reportMatcher}{(}{{{ArgumentMatcher}}{matcher}}{)}{{{}{{{matcherStack}{.}{push}{(}{{new}{{LocalizedMatcher}}{(}{matcher}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{StrictRunner}}{(}{{{new}{{RunnerFactory}}{()}}{.}{create}{(}{klass}{)}}{,}{klass}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{new}{{StrictRunner}}{(}{{{new}{{RunnerFactory}}{()}}{.}{create}{(}{klass}{)}}{,}{klass}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{RunnerImpl}}{{runner}{=}{{provider}{.}{newInstance}{(}{STRING_CONSTANT}{,}{{this}{.}{getClass}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{MockitoJUnitRunner}{(}{{{RunnerImpl}}{runner}}{)}{throws}{{InvocationTargetException}}{{{}{{{{this}{.}{runner}}{=}{runner}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RunnerImpl}}{runner}}}
{AST_ROOT_SC2NF{{ClassLoadingStrategy.Default.INJECTION}{.}{with}{(}{{features.mockedType}{.}{getProtectionDomain}{()}}{)}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{MockMethodAdvice}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}{)}}{.}{isSameAs}{(}{throwable}{)}}{;}}}
{AST_ROOT_SC2NF{{{throwable}{=}{{MockMethodAdvice}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{mockable}{()}{{{}{{return}{{{instrumentation}{.}{isModifiableClass}{(}{type}{)}}{&&}{{!}{{EXCLUDES}{.}{contains}{(}{type}{)}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{!=}{successCount}}{)}{{{}{{throw}{{new}{{AssertionError}}{(}{{STRING_CONSTANT}{+}{successCount}{+}{STRING_CONSTANT}{+}{i}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{runner}{.}{run}{(}{{{StubbingArgMismatchTest}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Result}}{{result}{=}{{runner}{.}{run}{(}{{{UnnecessaryStubbingTest}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{mock}{(}{classToMock}{,}{{{withSettings}{()}}{.}{defaultAnswer}{(}{RETURNS_DEFAULTS}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{new}{{AndroidClassLoadingStrategy}}{(}{target}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockSettings}}{{settings}{=}{{{{withSettings}{()}}{.}{defaultAnswer}{(}{Mockito.CALLS_REAL_METHODS}{)}}{.}{name}{(}{{field}{.}{getName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{Mockito}{.}{mock}{(}{{instance}{.}{getClass}{()}}{,}{{{{{withSettings}{()}}{.}{spiedInstance}{(}{instance}{)}}{.}{defaultAnswer}{(}{Mockito.CALLS_REAL_METHODS}{)}}{.}{name}{(}{{field}{.}{getName}{()}}{)}}{)}}}
{AST_ROOT_SC2NF{{NestedClassWithNoArgConstructor}{(}{{{String}}{f}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{{Assertions}{.}{assertThat}{(}{{e}{.}{getMessage}{()}}{)}}{.}{contains}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{throw}{{paramsException}{(}{cls}{,}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{{checker}{.}{check}{(}{invocations}{,}{wanted}{,}{NUMBER_CONSTANT}{,}{context}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{argMismatchStubbings}{.}{isEmpty}{()}}}{)}{{{}{{{mismatchesReported}{=}{true}}{;}}{{{Reporter}{.}{potentialStubbingProblemByJUnitRule}{(}{invocation}{,}{argMismatchStubbings}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{framework}{()}}{.}{addListener}{(}{listener}{)}}{;}}{}}}{{catch}{(}{{{RedundantListenerException}}{e}}{)}{{{}{{throw}{{new}{{UnfinishedMockingException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{Failure}}{{f}{=}{{{{result}{.}{getFailures}{()}}{.}{iterator}{()}}{.}{next}{()}}}{;}}}
{AST_ROOT_SC2NF{{{mocking}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{mocking}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{mocking}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{mocking}{.}{finishMocking}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{mock}{.}{otherMethod}{()}}{;}}{{{mocking}{.}{finishMocking}{()}}{;}}{{{logger}{.}{assertEmpty}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{new}{{Runnable}}{()}{{{}{{public}{void}{run}{()}{{{}{{{mocking}{.}{finishMocking}{()}}{;}}{}}}}{}}}}{)}}{.}{throwsException}{(}{{{UnnecessaryStubbingException}}{.}{class}}{)}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{currentStrictness}}{=}{strictness}}{;}}{{{{{this}{.}{stubbingLookupListener}}{.}{currentStrictness}}{=}{strictness}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{event}{.}{getFailure}{()}}{==}{null}}{&&}{{!}{stubbingLookupListener.mismatchesReported}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{framework}{()}}{.}{addListener}{(}{listener}{)}}{;}}{}}}{{catch}{(}{{{RedundantListenerException}}{e}}{)}{{{}{{{Reporter}{.}{unfinishedMocking}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{fails}{(}{{{UnfinishedMockingSessionException}}{.}{class}}{,}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{succeeds}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{JUnitResultAssert}{.}{assertThat}{(}{result}{)}}{.}{fails}{(}{NUMBER_CONSTANT}{,}{{{PotentialStubbingProblem}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Decamelizer}{.}{decamelizeMatcher}{(}{{{matcher}{.}{getClass}{()}}{.}{getSimpleName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{JUnitTool}{.}{createArgumentsAreDifferentException}{(}{message}{,}{wanted}{,}{actual}{)}}{;}}}
{AST_ROOT_SC2NF{{withModifiers}{(}{SynchronizationState.PLAIN}{,}{Visibility.PUBLIC}{)}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{InlineByteBuddyMockMaker}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}{)}}{.}{isSameAs}{(}{throwable}{)}}{;}}}
{AST_ROOT_SC2NF{{{throwable}{=}{{InlineByteBuddyMockMaker}{.}{hideRecursiveCall}{(}{throwable}{,}{NUMBER_CONSTANT}{,}{{{SampleInterface}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{paramsMatch}{(}{types}{,}{params}{)}}{)}{{{}{{{matchingConstructors}{.}{add}{(}{constructor}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{forObject}{(}{{(}{{Object}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{throwable}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{unused}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{method}{.}{getName}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{method}{.}{getName}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{m}{.}{getName}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{Type}}{{genericInterface}{=}{{findGenericInteface}{(}{match}{,}{targetBaseInterface}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{{Class}}{<}{?}{>}}{[]}}{getParameterTypes}{()}{{{}{{return}{{method}{.}{getParameterTypes}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arguments}}{=}{{ArgumentsProcessor}{.}{expandVarArgs}{(}{{mockitoMethod}{.}{isVarArgs}{()}}{,}{args}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{arguments}}{=}{{ArgumentsProcessor}{.}{expandVarArgs}{(}{{mockitoMethod}{.}{isVarArgs}{()}}{,}{arguments}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parameterTypes}{=}{{method}{.}{getParameterTypes}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{wantedArgumentPositionIsValidForInvocation}{(}{invocation}{,}{argumentPosition}{)}}}{)}{{{}{{throw}{{Reporter}{.}{invalidArgumentPositionRangeAtInvocationTime}{(}{invocation}{,}{{wantedArgumentPosition}{==}{LAST_ARGUMENT}}{,}{wantedArgumentPosition}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{validateArgumentTypeCompatibility}{(}{invocation}{,}{argumentPosition}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{InOrderImpl}{(}{{{{List}}{<}{{?}{extends}{{Object}}}{>}}{mocksToBeVerifiedInOrder}}{)}{{{}{{{{this}{.}{mocksToBeVerifiedInOrder}}{.}{addAll}{(}{mocksToBeVerifiedInOrder}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Assertions}{.}{assertThat}{(}{{m}{.}{getAllValues}{()}}{)}}{.}{containsSequence}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{{Object}}{>}}{mocks}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StubbingArgMismatches}}{{mismatches}{=}{{finder}{.}{getStubbingArgMismatches}{(}{{(}{{List}}{)}{{asList}{(}{mock1}{,}{mock2}{)}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{given}{(}{{iMethods}{.}{varargsObject}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{anyVararg}{()}}{)}}{)}}{.}{will}{(}{{returnsArgAt}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnusedStubbings}}{{stubbings}{=}{{new}{{UnusedStubbings}}{(}{{(}{{List}}{)}{{asList}{()}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{StubbedInvocationMatcher}}{>}}{getStubbedInvocations}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{InternalMockHandler}}{handler}}}
{AST_ROOT_SC2NF{{public}{NullResultGuardian}{(}{{{{InternalMockHandler}}{<}{{T}}{>}}{delegate}}{)}{{{}{{{{this}{.}{delegate}}{=}{delegate}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{(}{{MockAccess}}{)}{mock}}{)}}{.}{setMockitoInterceptor}{(}{{new}{{MockMethodInterceptor}}{(}{{asInternalMockHandler}{(}{newHandler}{)}}{,}{settings}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mockAccess}{.}{setMockitoInterceptor}{(}{{new}{{MockMethodInterceptor}}{(}{{asInternalMockHandler}{(}{handler}{)}}{,}{settings}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{?}{>}}{{handler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{?}{>}}{{handler}{=}{{createMockHandler}{(}{settings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{InternalMockHandler}}{<}{{T}}{>}}{mockHandler}}}
{AST_ROOT_SC2NF{{{InvocationMatcher}}{invocation}}}
{AST_ROOT_SC2NF{{public}{void}{setAnswersForStubbing}{(}{{{{List}}{<}{{{Answer}}{<}{?}{>}}{>}}{answers}}{)}{{{}{{{invocationContainerImpl}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{invocationContainerImpl}}{=}{{new}{{InvocationContainerImpl}}{(}{mockSettings}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{<}{{M}}{>}{{M}}{getMock}{()}{{{}{{return}{{(}{{M}}{)}{{invocationContainerImpl}{.}{invokedMock}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{?}{extends}{{Stubbing}}}{>}}{{stubbings}{=}{{{{mockHandler}{()}}{.}{getInvocationContainer}{()}}{.}{getStubbedInvocations}{()}}}{;}}}
{AST_ROOT_SC2NF{{{InvocationContainer}}{invocations}}}
{AST_ROOT_SC2NF{{{InvocationContainer}}{{invocations}{=}{{{getMockHandler}{(}{mock}{)}}{.}{getInvocationContainer}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{T}}{m}}{:}{mocks}{)}{{{}{{{{{getMockHandler}{(}{m}{)}}{.}{getInvocationContainer}{()}}{.}{clearInvocations}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{{MockUtil}{.}{getMockHandler}{(}{mock}{)}}{.}{getInvocationContainer}{()}}{.}{setAnswersForStubbing}{(}{answers}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationContainer}}{invocationContainer}}}
{AST_ROOT_SC2NF{{{{MockCreationSettings}}{<}{{T}}{>}}{{creationSettings}{=}{{impl}{.}{confirm}{(}{typeToMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{{{MockHandler}}{<}{{Object}}{>}}{mockHandler}{()}{{{}{{{assertGoodMock}{()}}{;}}{{return}{{getMockHandler}{(}{toInspect}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{given}{(}{{handler.invocationContainer}{.}{findAnswerFor}{(}{{any}{(}{{{InvocationImpl}}{.}{class}}{)}}{)}}{)}}{.}{willReturn}{(}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interceptor}{==}{null}}{)}{{{}{{return}{stubValue}{;}}{}}}}{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{InterceptedInvocation.SuperMethod.IsIllegal.INSTANCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{{new}{{InterceptedInvocation.SuperMethod.FromCallable}}{(}{superCall}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Mockito}{.}{verify}{(}{mock}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{InterceptedInvocation.RealMethod.FromCallable}}{{superMethod}{=}{{new}{{InterceptedInvocation.RealMethod.FromCallable}}{(}{realMethod}{)}}}{;}}{{return}{{MockMethodInterceptor}{.}{createInvocation}{(}{target}{,}{method}{,}{args}{,}{superMethod}{,}{settings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{interceptor}{==}{null}}{)}{{{}{{return}{stubValue}{;}}{}}}}{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{InterceptedInvocation.RealMethod.IsIllegal.INSTANCE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{interceptor}{.}{doIntercept}{(}{mock}{,}{invokedMethod}{,}{arguments}{,}{{new}{{InterceptedInvocation.RealMethod.FromCallable}}{(}{superCall}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{InterceptedInvocation.RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{InterceptedInvocation.RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{InterceptedInvocation.RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{InterceptedInvocation.RealMethod}}{realMethod}}}
{AST_ROOT_SC2NF{{{InterceptedInvocation.RealMethod}}{{realMethod}}{;}}}
{AST_ROOT_SC2NF{{return}{{{!}{{{node}{.}{getSort}{()}}{.}{isResolved}{()}}}{||}{{!}{{{node}{.}{getRepresentative}{()}}{.}{represents}{(}{origin}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{MockUtil}{.}{isMock}{(}{mock}{)}}}{)}{{{}{{throw}{{notAMockPassedToWhenMethod}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnusedStubbings}}{{stubbings}{=}{{new}{{UnusedStubbings}}{(}{{Arrays}{.}{<}{{Stubbing}}{>}{asList}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{verificationStartedListeners}}{.}{addAll}{(}{{Arrays}{.}{asList}{(}{listeners}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{should_throw_correct_exception_for_null_invocation_listener}{(}{)}{throws}{{Exception}}{{{}{{throw}{{Reporter}{.}{invocationListenerDoesNotAcceptNullParameters}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{e}}{)}{{{}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{MockitoException}}{.}{class}}}{)}}{public}{void}{should_throw_correct_exception_for_null_invocation_listener}{(}{)}{throws}{{Exception}}{{{}{{throw}{{Reporter}{.}{methodDoesNotAcceptNullParameters}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mock}{==}{null}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}{{{{this}{.}{mock}}{=}{mock}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VerificationStartedEvent}}{{event}{=}{{new}{{DefaultVerificationStartedEvent}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{mock}{=}{{(}{{T}}{)}{{VerificationStartedNotifier}{.}{notifyVerificationStarted}{(}{{{handler}{.}{getMockSettings}{()}}{.}{getVerificationStartedListeners}{()}}{,}{mock}{)}}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{MockitoMock}}{getMockitoMock}{(}{{{Object}}{mock}}{)}{{{}{{return}{{new}{{MockitoMock}}{(}{{mockMaker}{.}{getHandler}{(}{mock}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{does_not_do_anything_when_list_is_empty}{(}{)}{throws}{{Exception}}{{{}{{{VerificationStartedNotifier}{.}{notifyVerificationStarted}{(}{{(}{{List}}{)}{{emptyList}{()}}}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VerificationStartedNotifier.Event}}{{event}{=}{{new}{{VerificationStartedNotifier.Event}}{(}{mockitoMock}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{does_not_do_anything_when_list_is_empty}{(}{)}{throws}{{Exception}}{{{}{{{VerificationStartedNotifier}{.}{notifyVerificationStarted}{(}{{(}{{List}}{)}{{emptyList}{()}}}{,}{mockitoMock}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{captor}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{TestCase}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{TestCase}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{TestCase}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NotAMockException}}{e}}{)}{{{}{{{TestCase}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getOuterClassInstance}{()}{{{}{{return}{outerClassInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getSpiedInstance}{()}{{{}{{return}{spiedInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MockName}}{getMockName}{()}{{{}{{return}{mockName}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getOuterClassInstance}{()}{{{}{{return}{outerClassInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{SerializableMode}}{getSerializableMode}{()}{{{}{{return}{serializableMode}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{MockName}}{getMockName}{()}{{{}{{return}{mockName}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getSpiedInstance}{()}{{{}{{return}{spiedInstance}{;}}{}}}}}
{AST_ROOT_SC2NF{{{SerializableClass}}{{proxy}{=}{{mockMaker}{.}{createMock}{(}{{serializableSettingsFor}{(}{{{SerializableClass}}{.}{class}}{,}{SerializableMode.BASIC}{)}}{,}{{dummyH}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OtherClass}}{{mock}{=}{{mockMaker}{.}{createMock}{(}{{settingsWithConstructorFor}{(}{{{OtherClass}}{.}{class}}{)}}{,}{{dummyH}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SomeClass}}{{mock}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{SomeClass}}{.}{class}}{,}{{{SomeInterface}}{.}{class}}{)}}{,}{{dummyH}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ClassWithDodgyConstructor}}{{mock}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{ClassWithDodgyConstructor}}{.}{class}}{)}}{,}{{dummyH}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ClassWithoutConstructor}}{{proxy}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{ClassWithoutConstructor}}{.}{class}}{)}}{,}{{dummyH}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SomeInterface}}{{proxy}{=}{{mockMaker}{.}{createMock}{(}{{settingsFor}{(}{{{SomeInterface}}{.}{class}}{)}}{,}{{dummyH}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{new}{{SerializationFeatureKey}}{(}{params.mockedType}{,}{params.interfaces}{,}{params.serializableMode}{)}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{bytecodeGenerator}}{=}{bytecodeGenerator}}{;}}{{{typeCache}{=}{{new}{{{TypeCache.WithInlineExpunction}}{<}{{SerializationFeatureKey}}{>}}{(}{{weak}{?}{TypeCache.Sort.WEAK}{:}{TypeCache.Sort.SOFT}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{selfCallInfo}{.}{checkSuperCall}{(}{instance}{)}}{&&}{{isMock}{(}{instance}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getFoo}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{mock}{,}{{{after}{(}{NUMBER_CONSTANT}{)}}{.}{atLeast}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{oneArg}{(}{CHAR_CONS}{)}}{;}}{{{Assert}{.}{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{threads}{.}{awaitTermination}{(}{NUMBER_CONSTANT}{,}{TimeUnit.MILLISECONDS}{)}}}{)}{{{}{{{Assert}{.}{fail}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{threads}{.}{awaitTermination}{(}{NUMBER_CONSTANT}{,}{TimeUnit.MILLISECONDS}{)}}}{)}{{{}{{{Assert}{.}{fail}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TestedObject}}{{mock}{=}{{mock}{(}{{{TestedObject}}{.}{class}}{,}{CALLS_REAL_METHODS}{)}}}{;}}{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{mock.value}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{when}{(}{{mock}{.}{getValue}{()}}{)}}{.}{thenCallRealMethod}{()}}{;}}{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{mock}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{sb}{.}{append}{(}{{STRING_CONSTANT}{+}{mock}}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{classLoader}{==}{null}}{?}{BOOTSTRAP_LOCK}{:}{classLoader}}}
{AST_ROOT_SC2NF{{{}{{return}{{{!}{{selfCallInfo}{.}{isSelfInvocation}{(}{instance}{)}}}{&&}{{isMock}{(}{instance}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isMock}{(}{{{Object}}{instance}}{)}{{{}{{return}{{interceptors}{.}{containsKey}{(}{instance}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Throwable}}{getFailure}{()}{{{}{{return}{testFailure}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{filterLineNo}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{,}{{filterLineNo}{(}{{logger}{.}{getLoggedInfo}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{filterLineNo}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{,}{{filterLineNo}{(}{{logger}{.}{getLoggedInfo}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{getTestMethodName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{org.mockito.internal.creation.instance.InstantiationException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{type}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InstantiationException}}{e}}{)}{{{}{{{{assertThat}{(}{e}{)}}{.}{hasMessageContaining}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{InstantiationException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{org.mockito.internal.creation.instance.InstantiationException}}{e}}{)}{{{}{{throw}{{new}{{MockitoException}}{(}{{STRING_CONSTANT}{+}{{{mockedProxyType}{.}{getSuperclass}{()}}{.}{getSimpleName}{()}}{+}{STRING_CONSTANT}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{explosive}{.}{get}{()}}{!=}{null}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{pluginType}{.}{cast}{(}{{new}{{InstantiatorProvider2Wrapper}}{(}{{create}{(}{{{InstantiatorProvider2}}{.}{class}}{,}{className}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{instantiatorProvider}{=}{{new}{{InstantiatorProviderWrapper}}{(}{{(}{{InstantiatorProvider}}{)}{impl}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MockMethodInterceptor}{.}{createInvocation}{(}{target}{,}{method}{,}{args}{,}{superMethod}{,}{settings}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{this}{.}{mock}}{.}{equals}{(}{other.mock}{)}}}
{AST_ROOT_SC2NF{{public}{{String}}{returnA}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ref}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{instanceRef}}{=}{{new}{{{SerializeableWeakReference}}{<}{{Object}}{>}}{(}{instance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{{ref}{=}{{super}{.}{get}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{instanceRef}}{=}{{new}{{{WeakReference}}{<}{{Object}}{>}}{(}{instance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{throwableType}{==}{null}}{)}{{{}{{{{mockingProgress}{()}}{.}{reset}{()}}{;}}{{throw}{{notAnException}{()}}{;}}{}}}}{{return}{{thenThrow}{(}{{newInstance}{(}{throwableType}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{ThrowsException}}{(}{{new}{{IOException}}{()}}{)}}{.}{validateFor}{(}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{ThrowsException}}{(}{{new}{{CharacterCodingException}}{()}}{)}}{.}{validateFor}{(}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{new}{{ThrowsException}}{(}{throwableToRaise}{)}}{.}{answer}{(}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{ThrowsException}}{(}{{mock}{(}{{{Exception}}{.}{class}}{)}}{)}}{.}{answer}{(}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{ThrowsException}}{(}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{)}}{.}{answer}{(}{{{{new}{{InvocationBuilder}}{()}}{.}{method}{(}{STRING_CONSTANT}{)}}{.}{toInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{throwableType}{==}{null}}{)}{{{}{{return}{{abortNullExceptionType}{()}}{;}}{}}}}{{return}{{thenThrow}{(}{{newInstance}{(}{throwableType}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Object}}{>}}{testInstances}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{field}{.}{isAnnotationPresent}{(}{u}{)}}{)}{{{}{{throw}{{unsupportedCombinationOfAnnotations}{(}{{annotation}{.}{getSimpleName}{()}}{,}{{{annotation}{.}{getClass}{()}}{.}{getSimpleName}{()}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isPrimitiveOrWrapper}{(}{valueClass}{)}}{&&}{{isPrimitiveOrWrapper}{(}{referenceType}{)}}}{)}{{{}{{return}{{{Primitives}{.}{primitiveTypeOf}{(}{valueClass}{)}}{.}{isAssignableFrom}{(}{referenceType}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Annotation}}{firstParamAnnotation}}{:}{firstParamAnnotations}{)}{{{}{{if}{(}{{annotationClass}{.}{isAssignableFrom}{(}{{firstParamAnnotation}{.}{getClass}{()}}{)}}{)}{{{}{{return}{{(}{{T}}{)}{firstParamAnnotation}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{subList}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{assumeFalse}{(}{{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{isComingFromJDK}{(}{type}{)}}{||}{{isComingFromSignedJar}{(}{type}{)}}{||}{{isComingFromSealedPackage}{(}{type}{)}}}{)}{{{}{{{typeName}{=}{{STRING_CONSTANT}{+}{typeName}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{Opcodes.ASM5}{,}{cv}{)}{;}}{{{{this}{.}{typeDescription}}{=}{typeDescription}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{private}{MockitoExtension}{()}{{{}{{this}{(}{Strictness.STRICT_STUBS}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{rawArguments}{==}{matcherCount}}{&&}{{isLastMatcherVargargMatcher}{(}{matchers}{)}}}{)}{{{}{{return}{MATCH_EACH_VARARGS_WITH_LAST_MATCHER}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{radiusGridlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{radiusGridlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{radiusGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{radiusGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{angleGridlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{angleGridlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{angleGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{angleGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{angleLabelsVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{angleLabelsVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{cornerTextItems}}{.}{clear}{()}}{;}}{{{this}{.}{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{removed}{)}{{{}{{{this}{.}{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionDepth}}{=}{sectionDepth}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{outerSeparatorExtension}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{innerSeparatorExtension}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{separatorsVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBorder}}{=}{status}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{labelType}}{!=}{type}}{)}{{{}{{{{this}{.}{labelType}}{=}{type}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{setFixedRangeAxisSpace}{(}{space}{)}}{;}}{{{setFixedRangeAxisSpaceForSubplots}{(}{space}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{intervals}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{dialOutlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBorder}}{=}{draw}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{dialBackgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{tickLabelsVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{tickLabelsVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{units}}{=}{units}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendLabelURLGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendLabelToolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{urlGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{simpleLabels}}{=}{simple}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelShadowPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelOutlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelOutlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelBackgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelLinkMargin}}{=}{margin}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelLinksVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumLabelWidth}}{=}{width}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelGap}}{=}{gap}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shadowYOffset}}{=}{offset}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shadowXOffset}}{=}{offset}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shadowPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlineStrokeMap}}{.}{put}{(}{key}{,}{stroke}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlinePaintMap}}{.}{put}{(}{key}{,}{paint}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionOutlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionPaintMap}}{.}{put}{(}{key}{,}{paint}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{sectionPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{ignoreZeroValues}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{ignoreNullValues}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{circular}}{=}{circular}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{interiorGap}}{!=}{percent}}{)}{{{}{{{{this}{.}{interiorGap}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{startAngle}}{=}{angle}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isRangeCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairLockedOnData}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isDomainCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairLockedOnData}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{annotations}}{!=}{null}}{)}{{{}{{{{this}{.}{annotations}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeMarkers}}{!=}{null}}{)}{{{}{{{{this}{.}{rangeMarkers}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainMarkers}}{!=}{null}}{)}{{{}{{{{this}{.}{domainMarkers}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{colorBar}}{=}{axis}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{colorBarLocation}}{=}{edge}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{urlGenerator}}{=}{generator}}{;}}{{{this}{.}{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{this}{.}{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlineStrokeList}}{.}{setStroke}{(}{series}{,}{stroke}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlinePaintList}}{.}{setPaint}{(}{series}{,}{paint}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesOutlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesPaintList}}{.}{setPaint}{(}{series}{,}{paint}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{axisLabelGap}}{=}{gap}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{interiorGap}}{!=}{percent}}{)}{{{}{{{{this}{.}{interiorGap}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maxValue}}{=}{value}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{startAngle}}{=}{angle}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{headPercent}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{webFilled}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{darkerSides}}{=}{darker}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{depthFactor}}{=}{factor}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gap}}{=}{gap}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{columnRadius}}{=}{r}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{bulbRadius}}{=}{r}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useSubrangePaint}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{followDataInSubranges}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{{this}{.}{subrangePaint}}{[}{range}{]}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showValueLines}}{=}{b}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{valuePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{valueFont}}{=}{f}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{axisLocation}}{=}{location}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{valueLocation}}{=}{location}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{units}}{!=}{u}}{)}{{{}{{{{this}{.}{units}}{=}{u}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{paint}{!=}{null}}{)}{{{}{{{{this}{.}{thermometerPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{s}{!=}{null}}{)}{{{}{{{{this}{.}{thermometerStroke}}{=}{s}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{limit}}{=}{limit}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderingHints}}{.}{put}{(}{RenderingHints.KEY_TEXT_ANTIALIASING}{,}{val}{)}}{;}}{{{this}{.}{notifyListeners}{(}{{new}{{ChartChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{this}{.}{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{datasetToScaleMap}}{.}{set}{(}{index}{,}{{new}{{Integer}}{(}{scaleIndex}{)}}{)}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{iterateXYRangeBounds}{(}{dataset}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{iterateCategoryRangeBounds}{(}{dataset}{,}{includeInterval}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{datasetChanged}{(}{{{DatasetChangeEvent}}{event}}{)}{{{}{{{this}{.}{notifyListeners}{(}{event}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{gap}{=}{{Math}{.}{max}{(}{NUMBER_CONSTANT}{,}{{height}{-}{sumOfLabelHeights}}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findRangeBounds}{(}{d}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{delta}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{XYSeries}}{{series}{=}{{new}{{XYSeries}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{stroke}{instanceof}{{BasicStroke}}}{)}{{{}{{{this}{.}{setData}{(}{stroke}{)}}{;}}{}}}{else}{{{}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{double}{{maxWidth}{=}{{space}{*}{{getMaxItemWidth}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}{{{setURLGenerator}{(}{urlGenerator}{)}}{;}}{{{setShapesVisible}{(}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getUpperDate}{()}{{{}{{return}{{this}{.}{upperDate}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getLowerDate}{()}{{{}{{return}{{this}{.}{lowerDate}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{getSerialIndex}{()}{{{}{{return}{{{this}{.}{time}}{.}{getTime}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{time}}{.}{getTime}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{getMiddleMillisecond}{()}{{{}{{return}{{{this}{.}{time}}{.}{getTime}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{time}}{.}{getTime}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{getLastMillisecond}{()}{{{}{{return}{{{this}{.}{time}}{.}{getTime}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{time}}{.}{getTime}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{getFirstMillisecond}{()}{{{}{{return}{{{this}{.}{time}}{.}{getTime}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{difference}{=}{{{{this}{.}{time}}{.}{getTime}{()}}{-}{{t1.time}{.}{getTime}{()}}}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{hashCode}{()}{{{}{{return}{{{this}{.}{time}}{.}{hashCode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{FixedMillisecond}}{{m}{=}{{(}{{FixedMillisecond}}{)}{object}}}{;}}{{return}{{{this}{.}{time}}{.}{equals}{(}{{m}{.}{getTime}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{t}{=}{{{this}{.}{time}}{.}{getTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{{t}{=}{{{this}{.}{time}}{.}{getTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getTime}{()}{{{}{{return}{{this}{.}{time}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{time}}{=}{time}}{;}}{}}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{dataArea}{.}{contains}{(}{xx}{,}{yy}{)}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getEnd}{()}{{{}{{return}{{this}{.}{end}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Date}}{getStart}{()}{{{}{{return}{{this}{.}{start}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RelativeDateFormat}}{{rdf}{=}{{new}{{RelativeDateFormat}}{(}{{c0}{.}{getTimeInMillis}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{long}{skip}}}
{AST_ROOT_SC2NF{{if}{(}{{pointCount}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{periodCount}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{setChart}{(}{chart}{)}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{setLayout}{(}{layout}{)}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{setLayout}{(}{layout}{)}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{setLayout}{(}{layout}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{parent}{,}{style}{)}{;}}{{{this}{.}{setColor}{(}{color}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{{this}{.}{setDataset}{(}{dataset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{lookupSectionPaint}{(}{key}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{lookupSectionPaint}{(}{key}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{lookupSectionPaint}{(}{key}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SWTEventListener}}{listener}}}
{AST_ROOT_SC2NF{{if}{(}{currentGridBandIsDark}{)}{{{}{{{g2}{.}{setPaint}{(}{{this}{.}{gridBandPaint}}{)}}{;}}{}}}{else}{{{}{{{g2}{.}{setPaint}{(}{Color.white}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{currentGridBandIsDark}{)}{{{}{{{g2}{.}{setPaint}{(}{{this}{.}{gridBandPaint}}{)}}{;}}{}}}{else}{{{}{{{g2}{.}{setPaint}{(}{Color.white}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{autoPopulateSeriesStroke}}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.gray}{)}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{renderer}{.}{getItemPaint}{(}{row}{,}{column}{)}}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.gray}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{{-}{s}}{)}}{,}{{new}{{Double}}{(}{negBase}{)}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{zone}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{year}}{<}{SerialDate.MAXIMUM_YEAR_SUPPORTED}}{)}{{{}{{return}{{new}{{Year}}{(}{{{this}{.}{year}}{+}{NUMBER_CONSTANT}}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{year}{<}{SerialDate.MINIMUM_YEAR_SUPPORTED}}{)}}{||}{{(}{{year}{>}{SerialDate.MAXIMUM_YEAR_SUPPORTED}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{year}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{createStandardDateTickUnits}{(}{{TimeZone}{.}{getDefault}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{(}{{this}{.}{timeZone}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{(}{{this}{.}{timeZone}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{r}{.}{getAutoPopulateSeriesStroke}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{item}{==}{{{dataset}{.}{getItemCount}{(}{series}{)}}{-}{NUMBER_CONSTANT}}}{)}{{{}{{{drawFirstPassShape}{(}{g2}{,}{pass}{,}{series}{,}{item}{,}{s.seriesPath}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{minorTickCount}}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkOutsideLength}}{=}{length}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkInsideLength}}{=}{length}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickMarkStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickMarkOutsideLength}}{=}{length}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickMarkInsideLength}}{=}{length}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{tickMarksVisible}}}{)}{{{}{{{{this}{.}{tickMarksVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelInsets}}{=}{insets}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{tickLabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{minorTickMarksVisible}}}{)}{{{}{{{{this}{.}{minorTickMarksVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{tickLabelsVisible}}}{)}{{{}{{{{this}{.}{tickLabelsVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{axisLineVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelAngle}}{=}{angle}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelInsets}}{=}{insets}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{flag}{!=}{{this}{.}{visible}}}{)}{{{}{{{{this}{.}{visible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{CategoryAxisTests}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{success}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{success}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer1}{.}{setToolTipGenerator}{(}{{StandardXYToolTipGenerator}{.}{getTimeSeriesInstance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ResourceBundle}}{{resources}{=}{{ResourceBundle}{.}{getBundle}{(}{baseResourceClass}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shell}}{.}{setText}{(}{{{ResourceBundle}{.}{getBundle}{(}{STRING_CONSTANT}{)}}{.}{getString}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ResourceBundle}}{{resources}{=}{{ResourceBundle}{.}{getBundle}{(}{baseName}{)}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{this}{.}{unit}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{overwritten}{=}{{new}{{TimeSeries}}{(}{{STRING_CONSTANT}{+}{{getKey}{()}}}{,}{{series}{.}{getTimePeriodClass}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{SeriesException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{name}{,}{DEFAULT_DOMAIN_DESCRIPTION}{,}{DEFAULT_RANGE_DESCRIPTION}{,}{{{Day}}{.}{class}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{drawZoomRectangle}{(}{g2}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{useBuffer}}{)}{{{}{{{drawZoomRectangle}{(}{g2}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{zoomFillPaint}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{Color}}{(}{g}{,}{g}{,}{g}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowsVisible}}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowsVisible}}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{dataset}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{(}{zone}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{renderer}{.}{getItemPaint}{(}{row}{,}{column}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeChooserPanel}}{{panel}{=}{{new}{{StrokeChooserPanel}}{(}{null}{,}{{this}{.}{availableStrokeSamples}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeChooserPanel}}{{panel}{=}{{new}{{StrokeChooserPanel}}{(}{null}{,}{{this}{.}{availableStrokeSamples}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{first}{,}{last}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{result}{=}{{new}{{TimeSeries}}{(}{name}{,}{{source}{.}{getTimePeriodClass}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series1}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{,}{{{Month}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{calendar}{.}{add}{(}{{unit}{.}{getCalendarField}{()}}{,}{{unit}{.}{getCount}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isOutlineVisible}{()}{{{}{{return}{outlineVisible}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{maxY}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{minY}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{maxX}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{minX}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.zValues}{=}{{DataUtilities}{.}{clone}{(}{zValues}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Stroke}}{getLabelOutlineStroke}{()}{{{}{{return}{labelOutlineStroke}{;}}{}}}}}
{AST_ROOT_SC2NF{{{s1}{.}{updateByIndex}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{s1}{.}{updateByIndex}{(}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{rangeAxis}{.}{resizeRange}{(}{factor}{,}{anchorY}{)}}{;}}}
{AST_ROOT_SC2NF{{{rangeAxis}{.}{resizeRange}{(}{factor}{,}{anchorY}{)}}{;}}}
{AST_ROOT_SC2NF{{{domainAxis}{.}{resizeRange}{(}{factor}{,}{anchorX}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtilities}{.}{htmlEscape}{(}{toolTipText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{Double}{.}{isNaN}{(}{hiY}{)}}}{)}{{{}{{{result}{=}{{Math}{.}{min}{(}{result}{,}{hiY}{)}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxis}}{.}{resizeRange}{(}{factor}{,}{anchorX}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{renderer}{)}{;}}{{{{this}{.}{renderer}}{=}{renderer}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangePannable}}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{(}{{mods}{&}{InputEvent.CTRL_MASK}}{)}}{==}{InputEvent.CTRL_MASK}}}
{AST_ROOT_SC2NF{{if}{(}{{entities}{!=}{null}}{)}{{{}{{{addItemEntity}{(}{entities}{,}{dataset}{,}{row}{,}{column}{,}{hotspot}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberAxis3D}{(}{{{String}}{label}}{)}{{{}{{super}{(}{label}{)}{;}}{{{setAxisLineVisible}{(}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stripOutlineVisible}}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series}{=}{{new}{{TimeSeries}}{(}{name}{,}{{start}{.}{getClass}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{success}{=}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{{new}{{Line2D.Double}}{(}{startX}{,}{startY}{,}{endX}{,}{endY}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{showBase}}{)}{{{}{{{result}{.}{append}{(}{{this}{.}{baseLabel}}{)}}{;}}{{{result}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendShape}}{.}{setShape}{(}{series}{,}{shape}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{legendShape}}{.}{getShape}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{super}{.}{hashCode}{()}}{;}}}
{AST_ROOT_SC2NF{{double}{{ol}{=}{{getTickMarkOutsideLength}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{transY0}{=}{{restrictValueToDataArea}{(}{{getRangeBase}{()}}{,}{plot}{,}{dataArea}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{seriesPaint}{=}{{getFirstBarPaint}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{value}{=}{Double.NaN}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{titleArea}{=}{{new}{{Rectangle2D.Double}}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{x0}{=}{{dataArea}{.}{getX}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesDataItem}}{{item}{=}{{series}{.}{getDataItem}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getDataItem}{(}{index}{)}}{.}{getValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getDataItem}{(}{index}{)}}{.}{getPeriod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{XYDataItem}}{{item}{=}{{getDataItem}{(}{index}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getDataItem}{(}{index}{)}}{.}{getY}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getDataItem}{(}{index}{)}}{.}{getX}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{coefficients}}{.}{clone}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{maxRadius}{=}{{plot}{.}{getMaxRadius}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{dataset}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{DatasetChangeEvent}}{(}{this}{,}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{{new}{{Line2D.Double}}{(}{startX}{,}{startY}{,}{endX}{,}{endY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{info}{)}{;}}{{{{this}{.}{area}}{=}{{new}{{Polygon}}{()}}}{;}}{{{{this}{.}{line}}{=}{{new}{{Line2D.Double}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{shapesVisible}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JPopupMenu}}{{result}{=}{{new}{{JPopupMenu}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{text}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isCounterClockwise}{()}{{{}{{return}{counterClockwise}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getAngleOffset}{()}{{{}{{return}{angleOffset}{;}}{}}}}}
{AST_ROOT_SC2NF{{{outlinePaint}{!=}{null}}{&&}{{outlineStroke}{!=}{null}}}}
{AST_ROOT_SC2NF{{{}{{{XYSeriesCollection}}{{c1}{=}{{new}{{XYSeriesCollection}}{()}}}{;}}{{{assertTrue}{(}{{c1}{instanceof}{{PublicCloneable}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{PropertyVetoException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{e}{.}{getMessage}{()}}{,}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowGenerator}}{=}{{new}{{DefaultShadowGenerator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowGenerator}}{=}{{new}{{DefaultShadowGenerator}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{maxY}}{=}{{minIgnoreNaN}{(}{{this}{.}{maxY}}{,}{yy}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{file}{.}{exists}{()}}}{)}{{{}{{throw}{{new}{{ServletException}}{(}{{STRING_CONSTANT}{+}{{file}{.}{getAbsolutePath}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isRadiusMinorGridlinesVisible}{()}{{{}{{return}{radiusMinorGridlinesVisible}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{plot}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{fail}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result}{=}{{Range}{.}{combine}{(}{result}{,}{r}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{include}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setItemLabelsVisible}{(}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setBaseItemLabelsVisible}{(}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesItemLabelsVisible}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesFilled}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{flag}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setShapesFilled}{(}{{BooleanUtilities}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesVisible}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setShapesVisible}{(}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesLinesVisible}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLinesVisible}{(}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{c}{.}{getTime}{()}}{.}{getTime}{()}}{-}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{return}{{{c}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{return}{{{calendar}{.}{getTime}{()}}{.}{getTime}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{dimension}{>}{NUMBER_CONSTANT}}{)}{{{}{{{space}{.}{ensureAtLeast}{(}{dimension}{,}{edge}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{c}{.}{getTimeInMillis}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{counterClockwise}{)}{{{angleDegrees}{=}{{-}{angleDegrees}}}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{{{sectionKeys}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{stepped}}{=}{stepped}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{paletteName}}{=}{paletteName}}{;}}{return;}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LegendItem}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{this}{.}{data}}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{valueAxis}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{double}{{dim}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{paintLine}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{valueAxis}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{valueAxis}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{adjusted}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{AxisState}}{{state}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{CategoryToolTipGenerator}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{clone}{=}{{super}{.}{clone}{()}}}{;}}{}}}{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{Range}}{{adjusted}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{EntityBlockParams}}{{ebp}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ToolTipTagFragmentGenerator}}{{toolTipTagFragmentGenerator}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{valueBound}{(}{{{HttpSessionBindingEvent}}{event}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{init}{(}{)}{throws}{{ServletException}}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{float}{{l}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{PropertyVetoException}}{e}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickMarkPosition}}{=}{position}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{Double.NaN}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{labelInfo}}{=}{info}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkOutsideLength}}{=}{length}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarkInsideLength}}{=}{length}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickTimePeriodClass}}{=}{c}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickMarksVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickTimePeriodClass}}{=}{c}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{autoRangeTimePeriodClass}}{=}{c}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{dateFormat}}{=}{dateFormat}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{categoryLabelToolTips}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{positions}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelPositions}}{=}{positions}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumCategoryLabelWidthRatio}}{=}{ratio}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumCategoryLabelLines}}{=}{lines}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{categoryMargin}}{=}{margin}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{upperMargin}}{=}{margin}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{lowerMargin}}{=}{margin}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Range}}{{adjusted}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minorTickCount}}{=}{count}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{standardTickUnits}}{=}{source}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{autoTickUnitSelection}}{=}{flag}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultAutoRange}}{=}{range}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{inverted}}{!=}{flag}}{)}{{{}{{{{this}{.}{inverted}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rightArrow}}{=}{arrow}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{leftArrow}}{=}{arrow}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{downArrow}}{=}{arrow}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{upArrow}}{=}{arrow}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeArrowVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveArrowVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{verticalTickLabels}}{!=}{flag}}{)}{{{}{{{{this}{.}{verticalTickLabels}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandAlternatePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{gridBandsVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{gridBandsVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{numberFormatOverride}}{=}{formatter}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{return}{{super}{.}{hashCode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{url2}{==}{url1}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tt2}{==}{tt}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{url2}{==}{url1}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tt2}{==}{tt}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{ChartFactory}{.}{createPieChart3D}{(}{STRING_CONSTANT}{,}{dataset}{,}{true}{,}{true}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{ChartFactory}{.}{createPieChart}{(}{STRING_CONSTANT}{,}{data}{,}{true}{,}{true}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{createXYAreaChart}{(}{title}{,}{xAxisLabel}{,}{yAxisLabel}{,}{dataset}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{series2}{.}{setKey}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{maxY}}{=}{{minIgnoreNaN}{(}{{this}{.}{maxY}}{,}{yy}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{gap}{=}{{hh}{*}{{getInteriorGap}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{paintLine}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{{CategoryAxis}}{{axis}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{RectangleEdge}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{(}{float}{)}{{{regions}{[}{NUMBER_CONSTANT}{]}}{.}{getMaxX}{()}}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{tag}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{result}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{result}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{result}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToolTipTagFragmentGenerator}}{{toolTipTagFragmentGenerator}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{box}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{box}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{position}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{double}{{space}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{int}{{historyIdx}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{double}{{startX}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{BlockContainer}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{DrawingSupplier}}{{result}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{label}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Arc2D}}{{notch}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{int}{{izV}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{int}{{izV}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{paintLine}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{include}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{double}{{space}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{double}{{yyAverage}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{double}{{aRadius}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{int}{{series}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{int}{{series}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{double}{{rectWidth}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{double}{{rectHeight}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Line2D}}{{line}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Paint}}{{p}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{visible}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{@}{Test}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.DESCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.ASCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.DESCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultXYDataset}}{{d}{=}{{new}{{DefaultXYDataset}}{()}{{{}{{public}{{DomainOrder}}{getDomainOrder}{()}{{{}{{return}{DomainOrder.ASCENDING}{;}}{}}}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{success}{=}{false}}{;}}}
{AST_ROOT_SC2NF{{new}{{Rectangle2D.Double}}{(}{{Math}{.}{min}{(}{x1}{,}{x2}{)}}{,}{{dataArea}{.}{getMinY}{()}}{,}{{Math}{.}{abs}{(}{{x2}{-}{x1}}{)}}{,}{{dataArea}{.}{getWidth}{()}}{)}}}
{AST_ROOT_SC2NF{{return}{{DIRECTIONS}{[}{index}{]}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{y}{<=}{{this}{.}{minY}}}{||}{{y}{>=}{{this}{.}{maxY}}}}{)}{{{}{{{findBoundsByIteration}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{findBoundsByIteration}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{removed}{)}{{{}{{{findBoundsByIteration}{()}}{;}}{{if}{(}{notify}{)}{{{}{{{fireSeriesChanged}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{removed}{)}{{{}{{{findBoundsByIteration}{()}}{;}}{{if}{(}{notify}{)}{{{}{{{fireSeriesChanged}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{findBoundsByIteration}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{findBoundsByIteration}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{extendedSeparator}{=}{{extendLine}{(}{separator}{,}{{this}{.}{innerSeparatorExtension}}{,}{{this}{.}{outerSeparatorExtension}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setRange}{(}{{calculateValue}{(}{log1}{)}}{,}{{calculateValue}{(}{log2}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{attributedLabels}}{.}{set}{(}{section}{,}{label}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{labelFormat}{,}{numberFormat}{,}{percentFormat}{)}{;}}{{{{this}{.}{attributedLabels}}{=}{{new}{{ObjectList}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{datasets}}{.}{set}{(}{index}{,}{dataset}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxisLocations}}{.}{set}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{{this}{.}{rangeAxes}}{.}{indexOf}{(}{axis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxes}}{.}{set}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxisLocations}}{.}{set}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxes}}{.}{set}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{XYToolTipGenerator}}{)}{{{this}{.}{toolTipGeneratorList}}{.}{get}{(}{series}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{XYItemLabelGenerator}}{)}{{{this}{.}{itemLabelGeneratorList}}{.}{get}{(}{series}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendTextFont}}{.}{set}{(}{series}{,}{font}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{Font}}{)}{{{this}{.}{legendTextFont}}{.}{get}{(}{series}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeItemLabelPositionList}}{.}{set}{(}{series}{,}{position}{)}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveItemLabelPositionList}}{.}{set}{(}{series}{,}{position}{)}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelFontList}}{.}{set}{(}{series}{,}{font}{)}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{Font}}{)}{{{this}{.}{itemLabelFontList}}{.}{get}{(}{series}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemURLGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{CategoryToolTipGenerator}}{)}{{{this}{.}{toolTipGeneratorList}}{.}{get}{(}{series}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{{this}{.}{rangeAxes}}{.}{indexOf}{(}{axis}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{{this}{.}{domainAxes}}{.}{indexOf}{(}{axis}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{renderers}}{.}{set}{(}{index}{,}{renderer}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{datasets}}{.}{set}{(}{index}{,}{dataset}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxisLocations}}{.}{set}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxes}}{.}{set}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{rangeAxes}}{.}{set}{(}{NUMBER_CONSTANT}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxisLocations}}{.}{set}{(}{index}{,}{location}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{domainAxes}}{.}{set}{(}{index}{,}{axis}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{copy}{.}{add}{(}{clone}{)}}{;}}{}}}{{catch}{(}{{{SeriesException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{nDataPoints}{>}{{{this}{.}{valueHistory}}{.}{length}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{copy}{.}{add}{(}{clone}{)}}{;}}{}}}{{catch}{(}{{{SeriesException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{null}{,}{rangeAxis}{,}{null}{)}{;}}{{{{this}{.}{subplots}}{=}{{new}{{java.util.ArrayList}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{null}{,}{domainAxis}{,}{null}{,}{null}{)}{;}}{{{{this}{.}{subplots}}{=}{{new}{{java.util.ArrayList}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{adj}{=}{{{-}{percent}}{*}{length}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{this}{.}{fmImage}}{.}{createGraphics}{()}}{.}{getFontRenderContext}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ChartPanel}}{{chartPanel}{=}{{new}{{ChartPanel}}{(}{chart}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{FixedMillisecond}{(}{{long}{millisecond}}{)}{{{}{{this}{(}{{new}{{Date}}{(}{millisecond}{)}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{response}{=}{{JOptionPane}{.}{showConfirmDialog}{(}{this}{,}{fileExists}{,}{STRING_CONSTANT}{,}{JOptionPane.OK_CANCEL_OPTION}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{response}{=}{{JOptionPane}{.}{showConfirmDialog}{(}{this}{,}{fileExists}{,}{STRING_CONSTANT}{,}{JOptionPane.OK_CANCEL_OPTION}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYDataset}}{data}}}
{AST_ROOT_SC2NF{{{ChartPanel}}{{panel}{=}{{new}{{ChartPanel}}{(}{chart}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChartPanel}}{{panel}{=}{{new}{{ChartPanel}}{(}{chart}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{panel}}{=}{{new}{{ChartPanel}}{(}{{this}{.}{chart}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setBaseLegendTextPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.green}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{draw}{(}{{new}{{Line2D.Double}}{(}{xxMin}{,}{{yymid}{-}{halfW}}{,}{xxMin}{,}{{yy}{+}{halfW}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{chartMouseListeners}}{.}{remove}{(}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{this}{.}{hasUniqueID}{(}{handler}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{{handler}{.}{getID}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{viewer}{.}{hideZoomRectangle}{()}}{;}}}
{AST_ROOT_SC2NF{{{viewer}{.}{showZoomRectangle}{(}{x}{,}{y}{,}{w}{,}{h}{)}}{;}}}
{AST_ROOT_SC2NF{{{ValueAxis}}{{xAxis}{=}{{this}{.}{getDomainAxisForDataset}{(}{datasetIndex}{)}}}{;}}}
{AST_ROOT_SC2NF{{{updateCrosshairValues}{(}{crosshairState}{,}{x}{,}{y}{,}{datasetIndex}{,}{{block}{.}{getCenterX}{()}}{,}{{block}{.}{getCenterX}{()}}{,}{orientation}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{entities}{!=}{null}}{)}{{{}{{{addEntity}{(}{entities}{,}{block}{,}{dataset}{,}{series}{,}{item}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{legendLine}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendLine}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{legendLine}}{!=}{null}}{)}{{{}{{{clone.legendLine}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{additionalItemLabelGenerator}}{,}{that.additionalItemLabelGenerator}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{RefineryUtilities}{.}{centerFrameOnScreen}{(}{demo}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{image}}{,}{that.image}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{defaultGroup}}{,}{that.defaultGroup}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{wallPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{wallPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{wallPaint}}{,}{that.wallPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{bounds}}{=}{{(}{{Rectangle2D}}{)}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{bounds}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.bounds}{=}{{(}{{Rectangle2D}}{)}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{bounds}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{id}}{,}{that.id}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{ValueDataset}}{{vd}{=}{{(}{{ValueDataset}}{)}{obj}}}{;}}{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{value}}{,}{{vd}{.}{getValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RefineryUtilities}{.}{centerFrameOnScreen}{(}{demo}{)}}{;}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{clone.items}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{items}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StandardEntityCollection}}{{that}{=}{{(}{{StandardEntityCollection}}{)}{obj}}}{;}}{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{entities}}{,}{that.entities}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{{toAdd}{=}{{ObjectUtilities}{.}{deepClone}{(}{entry}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{anchor}{=}{{ShapeUtilities}{.}{getPointInRectangle}{(}{{anchor}{.}{getX}{()}}{,}{{anchor}{.}{getY}{()}}{,}{dataArea}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{legendLine}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendLine}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.legendLine}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{setShapesFilled}{(}{{BooleanUtilities}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{RefineryUtilities}{.}{centerFrameOnScreen}{(}{demo}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{seriesKey}}{,}{that.seriesKey}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.legendItemShape}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendItemShape}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{seriesShapesFilled}}{,}{that.seriesShapesFilled}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesFilled}}{.}{setBoolean}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{drawable}}{,}{that.drawable}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{image}}{,}{that.image}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SerialUtilities}{.}{writePaint}{(}{paint}{,}{stream}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{p1}{,}{p2}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{legendArea}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendArea}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtilities}{.}{equal}{(}{{this}{.}{legendArea}}{,}{that.legendArea}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.legendArea}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendArea}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawShapes}}{=}{{BooleanUtilities}{.}{valueOf}{(}{{{this}{.}{drawShapesCheckBox}}{.}{isSelected}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawLines}}{=}{{BooleanUtilities}{.}{valueOf}{(}{{{this}{.}{drawLinesCheckBox}}{.}{isSelected}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.bins}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{bins}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{data}}{!=}{null}}{)}{{{}{{{clone.data}{=}{{ArrayUtilities}{.}{clone}{(}{{this}{.}{data}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{ShapeUtilities}{.}{equal}{(}{{s1}{[}{i}{]}}{,}{{s2}{[}{i}{]}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DefaultBoxAndWhiskerCategoryDataset}}{{dataset}{=}{{(}{{DefaultBoxAndWhiskerCategoryDataset}}{)}{obj}}}{;}}{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{dataset.data}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Shape}}{{shadowArc}{=}{{ShapeUtilities}{.}{createTranslatedShape}{(}{path}{,}{{(}{float}{)}{shadowXOffset}}{,}{{(}{float}{)}{shadowYOffset}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{backgroundPaint}}{,}{that.backgroundPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{image}}{,}{that.image}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{shadowPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{shadowPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{hash}{=}{{{NUMBER_CONSTANT}{*}{hash}}{+}{{ObjectUtilities}{.}{hashCode}{(}{{this}{.}{seriesKey}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{subLabelPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{subLabelPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.rows}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{rows}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{gradientPaintTransformer}}{,}{that.gradientPaintTransformer}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{backgroundPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{backgroundPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{backgroundPaint}}{,}{that.backgroundPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Shape}}{{shape}{=}{{ShapeUtilities}{.}{createTranslatedShape}{(}{{getItemShape}{(}{seriesIndex}{,}{{i}{++}}{)}}{,}{x}{,}{y}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesFilled}}{.}{setBoolean}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{y}}{,}{that.y}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesFilled}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{filled}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesShapesVisible}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setShapesVisible}{(}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setSeriesLinesVisible}{(}{series}{,}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setLinesVisible}{(}{{BooleanUtilities}{.}{valueOf}{(}{visible}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.seriesList}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{seriesList}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MatrixSeriesCollection}}{{c}{=}{{(}{{MatrixSeriesCollection}}{)}{obj}}}{;}}{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{seriesList}}{,}{c.seriesList}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{p1}{,}{p2}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Paint}}{{paint}{=}{{SerialUtilities}{.}{readPaint}{(}{in}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{rotatedBox}{=}{{ShapeUtilities}{.}{rotateShape}{(}{box}{,}{{position}{.}{getAngle}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Shape}}{{rotatedBox}{=}{{ShapeUtilities}{.}{rotateShape}{(}{box}{,}{{position}{.}{getAngle}{()}}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{arrowStroke}}{,}{that.arrowStroke}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{formatter}}{,}{that.formatter}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.rangeAxis}{=}{{(}{{ValueAxis}}{)}{{ObjectUtilities}{.}{clone}{(}{{this}{.}{rangeAxis}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{groupPaint}}{,}{that.groupPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{indexParamName}}{,}{that.indexParamName}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.tasks}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{tasks}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{formatter}}{,}{that.formatter}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{addEntity}{(}{info}{,}{{ShapeUtilities}{.}{createLineRegion}{(}{line}{,}{NUMBER_CONSTANT}{)}}{,}{rendererIndex}{,}{toolTip}{,}{url}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.legendLine}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.legendItemShape}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendItemShape}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{wallPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{wallPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{wallPaint}}{,}{that.wallPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{getDescription}{()}}{,}{{that}{.}{getDescription}{()}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{sublabelPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{sublabelPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{sublabelPaint}}{,}{that.sublabelPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{chartArea}}{=}{{(}{{Rectangle2D}}{)}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{chartArea}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{legendArea}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendArea}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.legendArea}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendArea}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtilities}{.}{equal}{(}{{this}{.}{legendArea}}{,}{that.legendArea}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{defaultPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{defaultPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{defaultPaint}}{,}{that.defaultPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{title}}{,}{that.title}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{put}{(}{key}{,}{{ObjectUtilities}{.}{clone}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{.}{add}{(}{{ObjectUtilities}{.}{clone}{(}{obj}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{arrowStroke}}{,}{that.arrowStroke}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{wallPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{wallPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{wallPaint}}{,}{that.wallPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{legendBar}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendBar}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{legendShape}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendShape}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtilities}{.}{equal}{(}{{this}{.}{legendShape}}{,}{that.legendShape}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{gradientPaintTransformer}}{,}{that.gradientPaintTransformer}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{new}{{Integer}}{(}{series}{)}}{,}{{{faces}{[}{NUMBER_CONSTANT}{]}}{.}{getBounds2D}{()}}{,}{{BooleanUtilities}{.}{valueOf}{(}{{v0}{<}{{getBase}{()}}}{)}}{}}}}
{AST_ROOT_SC2NF{{{}{{new}{{Integer}}{(}{series}{)}}{,}{{{faces}{[}{NUMBER_CONSTANT}{]}}{.}{getBounds2D}{()}}{,}{{BooleanUtilities}{.}{valueOf}{(}{{v0}{<}{{getBase}{()}}}{)}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{setArea}{(}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{getArea}{()}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Stroke}}{{stroke}{=}{{SerialUtilities}{.}{readStroke}{(}{stream}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SerialUtilities}{.}{writeStroke}{(}{stroke}{,}{stream}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{s1}{,}{s2}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{area}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{area}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{obj}}{,}{that.obj}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{ObjectUtilities}{.}{hashCode}{(}{{this}{.}{fillPaint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{date}}{,}{that.date}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{result.subplots}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{subplots}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{subplots}}{,}{that.subplots}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{artifactPaint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{artifactPaint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{artifactPaint}}{,}{that.artifactPaint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writeShape}{(}{{this}{.}{legendLine}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{legendLine}}{=}{{SerialUtilities}{.}{readShape}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ShapeUtilities}{.}{equal}{(}{{this}{.}{legendLine}}{,}{that.legendLine}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{legendLine}}{!=}{null}}{)}{{{}{{{clone.legendLine}{=}{{ShapeUtilities}{.}{clone}{(}{{this}{.}{legendLine}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.data}{=}{{(}{{List}}{)}{{ObjectUtilities}{.}{deepClone}{(}{{this}{.}{data}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{data}}{,}{that.data}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{ObjectUtilities}{.}{equal}{(}{{this}{.}{key}}{,}{that.key}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultReadObject}{()}}{;}}{{{{this}{.}{paint}}{=}{{SerialUtilities}{.}{readPaint}{(}{stream}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{stream}{.}{defaultWriteObject}{()}}{;}}{{{SerialUtilities}{.}{writePaint}{(}{{this}{.}{paint}}{,}{stream}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{PaintUtilities}{.}{equal}{(}{{this}{.}{paint}}{,}{that.paint}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series1}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{,}{{{Day}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{series}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{,}{{{Day}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{s1}{=}{{new}{{TimeSeries}}{(}{STRING_CONSTANT}{,}{{{Year}}{.}{class}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Week}}{{w}{=}{{new}{{Week}}{(}{{gc}{.}{getTime}{()}}{,}{zone}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{interval}{=}{{includeInterval}{||}{{this}{.}{domainIsPointsInTime}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTickUnit}}{{a1}{=}{{new}{{DateTickUnit}}{(}{DateTickUnit.DAY}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{axis}{.}{setTickUnit}{(}{{new}{{DateTickUnit}}{(}{DateTickUnit.MONTH}{,}{NUMBER_CONSTANT}{,}{sdf}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{{TimeZone}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{setMaxItemWidth}{(}{percent}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{getMaximumItemWidth}{()}{{{}{{return}{{getMaxItemWidth}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setBaseItemLabelGenerator}{(}{{new}{{StandardCategoryItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setBaseToolTipGenerator}{(}{labelGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setBasePaint}{(}{Color.red}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setBaseItemLabelGenerator}{(}{{new}{{StandardCategoryItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseLegendTextPaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseLegendTextFont}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseLegendShape}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{position}{==}{null}}{)}{{{}{{{position}{=}{{this}{.}{baseNegativeItemLabelPosition}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{position}{==}{null}}{)}{{{}{{{position}{=}{{this}{.}{basePositiveItemLabelPosition}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseItemLabelPaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseShape}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseOutlineStroke}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseStroke}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{seriesOutlinePaint}{==}{null}}{)}{{{}{{{seriesOutlinePaint}{=}{{this}{.}{baseOutlinePaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{seriesFillPaint}{==}{null}}{)}{{{}{{{seriesFillPaint}{=}{{this}{.}{baseFillPaint}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{baseToolTipGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{baseItemLabelGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setBaseToolTipGenerator}{(}{{new}{{StandardXYToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setBaseToolTipGenerator}{(}{{new}{{BoxAndWhiskerToolTipGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setBaseToolTipGenerator}{(}{{new}{{StandardXYToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setBaseToolTipGenerator}{(}{{new}{{StandardXYZToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setBaseToolTipGenerator}{(}{{new}{{HighLowItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setBaseToolTipGenerator}{(}{{new}{{HighLowItemLabelGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{renderer}{.}{setBaseToolTipGenerator}{(}{{new}{{StandardXYToolTipGenerator}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setBaseToolTipGenerator}{(}{tt}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{{setBaseToolTipGenerator}{(}{{new}{{BoxAndWhiskerXYToolTipGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setBaseLegendShape}{(}{{this}{.}{legendLine}}{)}}{;}}}
{AST_ROOT_SC2NF{{{renderer1}{.}{setBaseToolTipGenerator}{(}{{StandardXYToolTipGenerator}{.}{getTimeSeriesInstance}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setBaseToolTipGenerator}{(}{toolTipGenerator}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{baseItemURLGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{result}{==}{null}}{)}{{{}{{{result}{=}{{this}{.}{baseToolTipGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{generator}{==}{null}}{)}{{{}{{{generator}{=}{{this}{.}{baseItemLabelGenerator}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Color.GRAY}{,}{{r}{.}{getBaseOutlinePaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Color.WHITE}{,}{{r}{.}{getBaseFillPaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Color.BLUE}{,}{{r}{.}{getBasePaint}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{dataAreaHotspot}{.}{isEmpty}{()}}}{)}{{{}{{{addEntity}{(}{entities}{,}{dataAreaHotspot}{,}{dataset}{,}{series}{,}{item}{,}{transX1}{,}{transY1}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{entities}{!=}{null}}{)}{{{}{{{addEntity}{(}{entities}{,}{hotspot}{,}{dataset}{,}{series}{,}{item}{,}{transX}{,}{transY}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{r1}{.}{setErrorPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setErrorPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{RectangleInsets}}{(}{top}{,}{left}{,}{bottom}{,}{right}{)}}{,}{Color.black}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{chart}{.}{setBackgroundPaint}{(}{Color.white}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{noDataMessagePaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{public}{DialBackground}{()}{{{}{{this}{(}{Color.white}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{m1}{=}{{new}{{CategoryMarker}}{(}{STRING_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{m1}{=}{{new}{{CategoryMarker}}{(}{STRING_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setSeriesPaint}{(}{NUMBER_CONSTANT}{,}{Color.black}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{StandardDialRange}{()}{{{}{{this}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.gray}{)}}{;}}}
{AST_ROOT_SC2NF{{{p1}{.}{setSubrangePaint}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{baseline}{.}{setPaint}{(}{Color.black}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{Color.black}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arrowPaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{x0}{,}{y0}{,}{x1}{,}{y1}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.black}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{x1}{,}{y1}{,}{x2}{,}{y2}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.black}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{arrowPaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setAxisLinePaint}{(}{Color.red}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{outlinePaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{shape}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.black}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{polygon}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{Color.black}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.black}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{sublabelPaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{labelPaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{public}{Crosshair}{(}{{double}{value}}{)}{{{}{{this}{(}{value}{,}{Color.black}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{LegendGraphic}}{{g1}{=}{{new}{{LegendGraphic}}{(}{r}{,}{Color.black}{)}}}{;}}}
{AST_ROOT_SC2NF{{{LegendGraphic}}{{g1}{=}{{new}{{LegendGraphic}}{(}{r}{,}{Color.black}{)}}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setColor}{(}{Color.black}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{defaultSectionPaint}}{=}{Color.gray}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{paint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.blue}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{datasetIndex}{)}{;}}{{{{this}{.}{paint}}{=}{Color.red}}{;}}{{{{this}{.}{stroke}}{=}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{,}{BasicStroke.CAP_ROUND}{,}{BasicStroke.JOIN_BEVEL}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{axisLinePaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{shadowPaint}}{=}{Color.gray}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{artifactPaint}}{=}{Color.black}}{;}}}
{AST_ROOT_SC2NF{{final}{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{{Graphics2D}}{g2}}}
{AST_ROOT_SC2NF{{final}{{TextBlock}}{block}}}
{AST_ROOT_SC2NF{{final}{double}{offset}}}
{AST_ROOT_SC2NF{{final}{double}{offset}}}
{AST_ROOT_SC2NF{{final}{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{final}{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{final}{{RectangleInsets}}{gap}}}
{AST_ROOT_SC2NF{{final}{{Stroke}}{stroke}}}
{AST_ROOT_SC2NF{{final}{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{final}{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{{{this}{.}{boxPaint}}{=}{Color.green}}{;}}}
{AST_ROOT_SC2NF{{final}{{Graphics2D}}{g2}}}
{AST_ROOT_SC2NF{{{TextUtilities}{.}{drawAlignedString}{(}{valueStr}{,}{g2}{,}{x}{,}{y}{,}{TextAnchor.TOP_CENTER}{)}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{tickLabelBounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{tickLabel}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FontMetrics}}{{fm}{=}{{g2}{.}{getFontMetrics}{(}{{getLabelFont}{()}}{)}}}{;}}{{{bounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{axisLabel}{,}{g2}{,}{fm}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{r}{=}{{TextUtilities}{.}{getTextBounds}{(}{text}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{tick}{.}{getText}{()}}{!=}{null}}{)}{{{}{{{labelBounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{{tick}{.}{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{tick}{.}{getText}{()}}{!=}{null}}{)}{{{}{{{labelBounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{{tick}{.}{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{label}}{=}{{TextUtilities}{.}{createTextBlock}{(}{{this}{.}{text}}{,}{font}{,}{{this}{.}{paint}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{label}}{=}{{TextUtilities}{.}{createTextBlock}{(}{text}{,}{font}{,}{{this}{.}{paint}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{r}{=}{{TextUtilities}{.}{getTextBounds}{(}{{{this}{.}{internalMarkerCycleBoundTick}}{.}{getText}{()}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{{this}{.}{text}}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{tickLabel}{,}{g2}{,}{{g2}{.}{getFontMetrics}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{tickLabel}{,}{g2}{,}{{g2}{.}{getFontMetrics}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TextUtilities}{.}{drawRotatedString}{(}{label}{,}{g2}{,}{xx}{,}{yy}{,}{TextAnchor.CENTER}{,}{NUMBER_CONSTANT}{,}{TextAnchor.CENTER}{)}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtilities}{.}{getTextBounds}{(}{label}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Rectangle2D}}{{bounds}{=}{{TextUtils}{.}{getTextBounds}{(}{text}{,}{g2}{,}{fm}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{DefaultShadowGenerator}{()}{{{}{{this}{(}{NUMBER_CONSTANT}{,}{Color.black}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{{-}{Math.PI}}{/}{NUMBER_CONSTANT}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Paint}}{paint}}}
{AST_ROOT_SC2NF{{{renderer}{.}{setSeriesPaint}{(}{NUMBER_CONSTANT}{,}{Color.black}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{f1}{.}{setBackgroundPaint}{(}{Color.blue}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setDefaultPaint}{(}{Color.red}{)}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{t1}{.}{setBackgroundPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{t1}{.}{setBackgroundPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{p1}{.}{setAggregatedItemsPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{)}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{gridPaintSample}}{=}{{new}{{PaintSample}}{(}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYDifferenceRenderer}}{{r1}{=}{{new}{{XYDifferenceRenderer}}{(}{Color.red}{,}{Color.blue}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYDifferenceRenderer}}{{r1}{=}{{new}{{XYDifferenceRenderer}}{(}{Color.red}{,}{Color.blue}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{)}}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setSubLabelPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Color}}{{defaultColor}{=}{{(}{{{p}{instanceof}{{Color}}}{?}{{(}{{Color}}{)}{p}}{:}{Color.blue}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setTickLabelPaint}{(}{STRING_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setShapePaint}{(}{Color.red}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{downPaint}}{=}{Color.red}}{;}}}
{AST_ROOT_SC2NF{{{t1}{.}{setBackgroundPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{paint}}{=}{Color.red}}{;}}}
{AST_ROOT_SC2NF{{c1}{=}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{c1}{=}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.BLUE}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}}}
{AST_ROOT_SC2NF{{{b1}{.}{setPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.green}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{b1}{.}{setPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.green}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{a1}{.}{setOutlinePaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a1}{=}{{new}{{XYLineAnnotation}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{stroke}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a1}{=}{{new}{{XYLineAnnotation}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{stroke}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a1}{=}{{new}{{XYLineAnnotation}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{stroke}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{o1}{.}{addRangeCrosshair}{(}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{o1}{.}{addRangeCrosshair}{(}{{new}{{Crosshair}}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{new}{{BlockBorder}}{(}{{new}{{RectangleInsets}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{)}}{)}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{GradientPaint}}{{gp}{=}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{r1}{.}{setSeriesPaint}{(}{NUMBER_CONSTANT}{,}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.yellow}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{label}{,}{range}{,}{Color.yellow}{,}{{new}{{BasicStroke}}{(}{NUMBER_CONSTANT}{)}}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.blue}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{=}{{JColorChooser}{.}{showDialog}{(}{this}{,}{{localizationResources}{.}{getString}{(}{STRING_CONSTANT}{)}}{,}{Color.blue}{)}}}{;}}}
{AST_ROOT_SC2NF{{{s1}{.}{setMajorTickPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{s1}{.}{setMajorTickPaint}{(}{{new}{{GradientPaint}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.red}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{Color.white}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{incompletePaint}}{=}{Color.red}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{zoomOutlinePaint}}{=}{Color.blue}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{return}{{HashUtilities}{.}{hashCodeForDoubleArray}{(}{{this}{.}{coefficients}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtilities}{.}{hashCode}{(}{result}{,}{{this}{.}{radius}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{HashUtilities}{.}{hashCode}{(}{{super}{.}{hashCode}{()}}{,}{{this}{.}{stepPoint}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtilities}{.}{hashCode}{(}{result}{,}{{this}{.}{visible}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{result}{*}{NUMBER_CONSTANT}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{arrowPaint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtilities}{.}{hashCode}{(}{result}{,}{{this}{.}{formatPattern}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{NUMBER_CONSTANT}}{;}}{{{result}{=}{{HashUtilities}{.}{hashCode}{(}{result}{,}{{this}{.}{formatPattern}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{{super}{.}{hashCode}{()}}}{;}}{{{result}{=}{{HashUtilities}{.}{hashCode}{(}{result}{,}{{this}{.}{isArrowAtTop}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{result}{=}{{super}{.}{hashCode}{()}}}{;}}{{{result}{=}{{HashUtilities}{.}{hashCode}{(}{result}{,}{{this}{.}{key}}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{arrowPaint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{hash}{=}{{super}{.}{hashCode}{()}}}{;}}{{{hash}{=}{{HashUtilities}{.}{hashCode}{(}{hash}{,}{{this}{.}{errorIndicatorPaint}}{)}}}{;}}{{return}{hash}{;}}{}}}}
{AST_ROOT_SC2NF{{{result}{=}{{{NUMBER_CONSTANT}{*}{result}}{+}{{HashUtilities}{.}{hashCodeForPaint}{(}{{this}{.}{paint}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ChartUtilities}{.}{saveChartAsJPEG}{(}{tempFile}{,}{chart}{,}{width}{,}{height}{,}{info}{)}}{;}}}
{AST_ROOT_SC2NF{{{ChartUtilities}{.}{saveChartAsPNG}{(}{tempFile}{,}{chart}{,}{width}{,}{height}{,}{info}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtilities}{.}{javascriptEscape}{(}{toolTipText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ImageMapUtilities}{.}{getImageMap}{(}{name}{,}{info}{,}{toolTipTagFragmentGenerator}{,}{urlTagFragmentGenerator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{writer}{.}{println}{(}{{ImageMapUtilities}{.}{getImageMap}{(}{name}{,}{info}{,}{toolTipTagFragmentGenerator}{,}{urlTagFragmentGenerator}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ImageMapUtilities}{.}{writeImageMap}{(}{writer}{,}{name}{,}{info}{,}{toolTipTagFragmentGenerator}{,}{{new}{{StandardURLTagFragmentGenerator}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtilities}{.}{htmlEscape}{(}{toolTipText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Line2D}}{{extendedSeparator}{=}{{LineUtilities}{.}{extendLine}{(}{separator}{,}{{this}{.}{innerSeparatorExtension}}{,}{{this}{.}{outerSeparatorExtension}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{visible}{=}{{LineUtilities}{.}{clipLine}{(}{state.workingLine}{,}{dataArea}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{visible}{=}{{LineUtilities}{.}{clipLine}{(}{line}{,}{dataArea}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{visible}{=}{{LineUtilities}{.}{clipLine}{(}{line}{,}{dataArea}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{return}{{new}{{Range}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtilities}{.}{findStackedRangeBounds}{(}{dataset}{,}{{getBase}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{return}{{new}{{Range}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtilities}{.}{findStackedRangeBounds}{(}{dataset}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtilities}{.}{isEmptyOrNull}{(}{dataset}{)}}}}
{AST_ROOT_SC2NF{{{Range}}{{range}{=}{{DatasetUtilities}{.}{findDomainBounds}{(}{{this}{.}{dataset}}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{total}{=}{{DatasetUtilities}{.}{calculateStackTotal}{(}{{(}{{TableXYDataset}}{)}{dataset}}{,}{item}{)}}}{;}}{{{value}{=}{{value}{/}{total}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{return}{{new}{{Range}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtilities}{.}{findStackedRangeBounds}{(}{{(}{{TableXYDataset}}{)}{dataset}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{return}{{DatasetUtilities}{.}{findRangeBounds}{(}{dataset}{,}{true}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{includeInterval}{)}{{{}{{return}{{{this}{.}{intervalDelegate}}{.}{getDomainBounds}{(}{includeInterval}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtilities}{.}{iterateDomainBounds}{(}{this}{,}{includeInterval}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{hasData}{=}{{!}{{DatasetUtilities}{.}{isEmptyOrNull}{(}{currentDataset}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findRangeBounds}{(}{d}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{XYDataset}}{{dataset}{=}{{plot}{.}{getDataset}{(}{i}{)}}}{;}}{{if}{(}{{!}{{DatasetUtilities}{.}{isEmptyOrNull}{(}{dataset}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtilities}{.}{isEmptyOrNull}{(}{{this}{.}{dataset}}{)}}}}
{AST_ROOT_SC2NF{{double}{{total}{=}{{DatasetUtilities}{.}{calculatePieDatasetTotal}{(}{dataset}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{totalValue}{=}{{DatasetUtilities}{.}{calculatePieDatasetTotal}{(}{{this}{.}{dataset}}{)}}}{;}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtilities}{.}{isEmptyOrNull}{(}{{this}{.}{dataset}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{dataset}}{!=}{null}}{)}{{{}{{{state}{.}{setTotal}{(}{{DatasetUtilities}{.}{calculatePieDatasetTotal}{(}{{plot}{.}{getDataset}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{return}{{DatasetUtilities}{.}{findZBounds}{(}{dataset}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findRangeBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findDomainBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{dataset}{!=}{null}}{)}{{{}{{return}{{DatasetUtilities}{.}{findStackedRangeBounds}{(}{{(}{{TableXYDataset}}{)}{dataset}}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findStackedRangeBounds}{(}{dataset}{,}{{this}{.}{seriesToGroupMap}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{d}{!=}{null}}{)}{{{}{{{result}{=}{{Range}{.}{combine}{(}{result}{,}{{DatasetUtilities}{.}{findRangeBounds}{(}{d}{)}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{DatasetUtilities}{.}{isEmptyOrNull}{(}{dataset}{)}}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findRangeBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{DatasetUtilities}{.}{findDomainBounds}{(}{dataset}{,}{false}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{includeInterval}{)}{{{}{{return}{{{this}{.}{intervalDelegate}}{.}{getDomainBounds}{(}{includeInterval}{)}}{;}}{}}}{else}{{{}{{return}{{DatasetUtilities}{.}{iterateDomainBounds}{(}{this}{,}{includeInterval}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{newData}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryDataset}}{{dataset}{=}{{DatasetUtilities}{.}{createCategoryDataset}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{data}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{total}{=}{{DataUtilities}{.}{calculateColumnTotal}{(}{dataset}{,}{column}{,}{{state}{.}{getVisibleSeriesArray}{()}}{)}}}{;}}{{{value}{=}{{value}{/}{total}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{DataUtilities}{.}{createNumberArray2D}{(}{starts}{)}}{,}{{DataUtilities}{.}{createNumberArray2D}{(}{ends}{)}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{clone.zValues}{=}{{DataUtilities}{.}{clone}{(}{{this}{.}{zValues}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{DataUtilities}{.}{equal}{(}{{this}{.}{zValues}}{,}{that.zValues}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{total}{=}{{DataUtilities}{.}{calculateColumnTotal}{(}{dataset}{,}{column}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{renderAsPercentages}}{)}{{{}{{{total}{=}{{DataUtilities}{.}{calculateColumnTotal}{(}{dataset}{,}{index}{,}{validRows}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{OHLCItem}}{{item2}{=}{{(}{{OHLCItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAnnotation}}{{a2}{=}{{(}{{XYLineAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Hour}}{{h2}{=}{{(}{{Hour}}{)}{{TestUtilities}{.}{serialised}{(}{h1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomXYToolTipGenerator}}{{g2}{=}{{(}{{CustomXYToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerToolTipGenerator}}{{g2}{=}{{(}{{BoxAndWhiskerToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategoryToolTipGenerator}}{{g2}{=}{{(}{{StandardCategoryToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BarRenderer}}{{r2}{=}{{(}{{BarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYTaskDataset}}{{d2}{=}{{(}{{XYTaskDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ClusteredXYBarRenderer}}{{r2}{=}{{(}{{ClusteredXYBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YInterval}}{{i2}{=}{{(}{{YInterval}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBubbleRenderer}}{{r2}{=}{{(}{{XYBubbleRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{WindItemRenderer}}{{r2}{=}{{(}{{WindItemRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineNeedle}}{{n2}{=}{{(}{{LineNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SpiderWebPlot}}{{p2}{=}{{(}{{SpiderWebPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{TestUtilities}{.}{containsInstanceOf}{(}{{ec}{.}{getEntities}{()}}{,}{{{XYItemEntity}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYItemRenderer}}{{r2}{=}{{(}{{StandardXYItemRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTickMarkPosition}}{{p2}{=}{{(}{{DateTickMarkPosition}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialValueIndicator}}{{i2}{=}{{(}{{DialValueIndicator}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XIntervalSeriesCollection}}{{c2}{=}{{(}{{XIntervalSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryAxis}}{{a2}{=}{{(}{{CategoryAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PiePlot}}{{p2}{=}{{(}{{PiePlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{NumberTickUnit}}{{t2}{=}{{(}{{NumberTickUnit}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDrawableAnnotation}}{{a2}{=}{{(}{{XYDrawableAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalCategoryItemLabelGenerator}}{{g2}{=}{{(}{{IntervalCategoryItemLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelAnchor}}{{a2}{=}{{(}{{ItemLabelAnchor}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeterPlot}}{{p2}{=}{{(}{{MeterPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeterPlot}}{{p2}{=}{{(}{{MeterPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodValues}}{{s2}{=}{{(}{{TimePeriodValues}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryToPieDataset}}{{d2}{=}{{(}{{CategoryToPieDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Vector}}{{v2}{=}{{(}{{Vector}}{)}{{TestUtilities}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{WaterfallBarRenderer}}{{r2}{=}{{(}{{WaterfallBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYIntervalSeries}}{{s2}{=}{{(}{{XYIntervalSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYInterval}}{{i2}{=}{{(}{{XYInterval}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HighLowRenderer}}{{r2}{=}{{(}{{HighLowRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedDomainCategoryPlot}}{{plot2}{=}{{(}{{CombinedDomainCategoryPlot}}{)}{{TestUtilities}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LabelBlock}}{{b2}{=}{{(}{{LabelBlock}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DeviationRenderer}}{{r2}{=}{{(}{{DeviationRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PowerFunction2D}}{{f2}{=}{{(}{{PowerFunction2D}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardTickUnitSource}}{{t2}{=}{{(}{{StandardTickUnitSource}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Minute}}{{m2}{=}{{(}{{Minute}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PieSectionEntity}}{{e2}{=}{{(}{{PieSectionEntity}}{)}{{TestUtilities}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedRangeCategoryPlot}}{{plot2}{=}{{(}{{CombinedRangeCategoryPlot}}{)}{{TestUtilities}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYZToolTipGenerator}}{{g2}{=}{{(}{{StandardXYZToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ValueMarker}}{{m2}{=}{{(}{{ValueMarker}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ValueMarker}}{{m2}{=}{{(}{{ValueMarker}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{{(}{{CategoryPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{{(}{{CategoryPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPlot}}{{p2}{=}{{(}{{CategoryPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValues}}{{v2}{=}{{(}{{DefaultKeyedValues}}{)}{{TestUtilities}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LayeredBarRenderer}}{{r2}{=}{{(}{{LayeredBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerXYToolTipGenerator}}{{g2}{=}{{(}{{BoxAndWhiskerXYToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeTableXYDataset}}{{d2}{=}{{(}{{TimeTableXYDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Quarter}}{{q2}{=}{{(}{{Quarter}}{)}{{TestUtilities}{.}{serialised}{(}{q1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{c2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PlumNeedle}}{{n2}{=}{{(}{{PlumNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SlidingCategoryDataset}}{{d2}{=}{{(}{{SlidingCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GanttRenderer}}{{r2}{=}{{(}{{GanttRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LongNeedle}}{{n2}{=}{{(}{{LongNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedXYAreaRenderer}}{{r2}{=}{{(}{{StackedXYAreaRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BorderArrangement}}{{b2}{=}{{(}{{BorderArrangement}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardDialFrame}}{{f2}{=}{{(}{{StandardDialFrame}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ItemLabelPosition}}{{p2}{=}{{(}{{ItemLabelPosition}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{EmptyBlock}}{{b2}{=}{{(}{{EmptyBlock}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryAnchor}}{{a2}{=}{{(}{{CategoryAnchor}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYShapeRenderer}}{{r2}{=}{{(}{{XYShapeRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBarDataset}}{{bd2}{=}{{(}{{XYBarDataset}}{)}{{TestUtilities}{.}{serialised}{(}{bd1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorRenderer}}{{r2}{=}{{(}{{VectorRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBarRenderer}}{{r2}{=}{{(}{{XYBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBarRenderer}}{{r2}{=}{{(}{{XYBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelEntity}}{{e2}{=}{{(}{{CategoryLabelEntity}}{)}{{TestUtilities}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PlotOrientation}}{{orientation2}{=}{{(}{{PlotOrientation}}{)}{{TestUtilities}{.}{serialised}{(}{orientation1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelWidthType}}{{w2}{=}{{(}{{CategoryLabelWidthType}}{)}{{TestUtilities}{.}{serialised}{(}{w1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYIntervalSeriesCollection}}{{c2}{=}{{(}{{XYIntervalSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYURLGenerator}}{{g2}{=}{{(}{{StandardXYURLGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYIntervalDataItem}}{{item2}{=}{{(}{{XYIntervalDataItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryItemEntity}}{{e2}{=}{{(}{{CategoryItemEntity}}{)}{{TestUtilities}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PolynomialFunction2D}}{{f2}{=}{{(}{{PolynomialFunction2D}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StatisticalLineAndShapeRenderer}}{{r2}{=}{{(}{{StatisticalLineAndShapeRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultPieDataset}}{{d2}{=}{{(}{{DefaultPieDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTick}}{{t2}{=}{{(}{{DateTick}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ShipNeedle}}{{n2}{=}{{(}{{ShipNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDataItem}}{{i2}{=}{{(}{{XYDataItem}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GradientBarPainter}}{{p2}{=}{{(}{{GradientBarPainter}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardDialRange}}{{r2}{=}{{(}{{StandardDialRange}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeMap}}{{m2}{=}{{(}{{StrokeMap}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StrokeMap}}{{m2}{=}{{(}{{StrokeMap}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LogFormat}}{{f2}{=}{{(}{{LogFormat}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedBarRenderer}}{{r2}{=}{{(}{{StackedBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLCSeries}}{{s2}{=}{{(}{{OHLCSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultIntervalCategoryDataset}}{{d2}{=}{{(}{{DefaultIntervalCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MyComparableObjectSeries}}{{s2}{=}{{(}{{MyComparableObjectSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorSeriesCollection}}{{c2}{=}{{(}{{VectorSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalBarRenderer}}{{r2}{=}{{(}{{IntervalBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedValuesDataset}}{{d2}{=}{{(}{{KeyedValuesDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialCap}}{{c2}{=}{{(}{{DialCap}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PointerNeedle}}{{n2}{=}{{(}{{PointerNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateAxis}}{{a2}{=}{{(}{{DateAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalCategoryToolTipGenerator}}{{g2}{=}{{(}{{IntervalCategoryToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYItemEntity}}{{e2}{=}{{(}{{XYItemEntity}}{)}{{TestUtilities}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FixedMillisecond}}{{m2}{=}{{(}{{FixedMillisecond}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultOHLCDataset}}{{d2}{=}{{(}{{DefaultOHLCDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolicXYItemLabelGenerator}}{{g2}{=}{{(}{{SymbolicXYItemLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LevelRenderer}}{{r2}{=}{{(}{{LevelRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodAxis}}{{a2}{=}{{(}{{PeriodAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DatasetGroup}}{{g2}{=}{{(}{{DatasetGroup}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Axis}}{{a2}{=}{{(}{{Axis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorDataItem}}{{v2}{=}{{(}{{VectorDataItem}}{)}{{TestUtilities}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategoryItemLabelGenerator}}{{g2}{=}{{(}{{StandardCategoryItemLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyToGroupMap}}{{m2}{=}{{(}{{KeyToGroupMap}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MatrixSeriesCollection}}{{c2}{=}{{(}{{MatrixSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Year}}{{y2}{=}{{(}{{Year}}{)}{{TestUtilities}{.}{serialised}{(}{y1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYStepRenderer}}{{r2}{=}{{(}{{XYStepRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleTimePeriod}}{{p2}{=}{{(}{{SimpleTimePeriod}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultMultiValueCategoryDataset}}{{d2}{=}{{(}{{DefaultMultiValueCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYSeries}}{{s2}{=}{{(}{{XYSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedRangeXYPlot}}{{plot2}{=}{{(}{{CombinedRangeXYPlot}}{)}{{TestUtilities}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryTableXYDataset}}{{d2}{=}{{(}{{CategoryTableXYDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalRenderer}}{{r2}{=}{{(}{{YIntervalRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TaskSeriesCollection}}{{c2}{=}{{(}{{TaskSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleHistogramBin}}{{b2}{=}{{(}{{SimpleHistogramBin}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultCategoryDataset}}{{d2}{=}{{(}{{DefaultCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BubbleXYItemLabelGenerator}}{{g2}{=}{{(}{{BubbleXYItemLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PaintScaleLegend}}{{l2}{=}{{(}{{PaintScaleLegend}}{)}{{TestUtilities}{.}{serialised}{(}{l1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLCDataItem}}{{i2}{=}{{(}{{OHLCDataItem}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{AreaRendererEndType}}{{t2}{=}{{(}{{AreaRendererEndType}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerRenderer}}{{r2}{=}{{(}{{BoxAndWhiskerRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HistogramDataset}}{{d2}{=}{{(}{{HistogramDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MiddlePinNeedle}}{{n2}{=}{{(}{{MiddlePinNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CombinedDomainXYPlot}}{{plot2}{=}{{(}{{CombinedDomainXYPlot}}{)}{{TestUtilities}{.}{serialised}{(}{plot1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalXYDelegate}}{{d2}{=}{{(}{{IntervalXYDelegate}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDifferenceRenderer}}{{r2}{=}{{(}{{XYDifferenceRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategoryURLGenerator}}{{g2}{=}{{(}{{StandardCategoryURLGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardPieURLGenerator}}{{g2}{=}{{(}{{StandardPieURLGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Millisecond}}{{m2}{=}{{(}{{Millisecond}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesDataItem}}{{item2}{=}{{(}{{TimeSeriesDataItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalDataItem}}{{item2}{=}{{(}{{YIntervalDataItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYTextAnnotation}}{{a2}{=}{{(}{{XYTextAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SubCategoryAxis}}{{a2}{=}{{(}{{SubCategoryAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GrayPaintScale}}{{g2}{=}{{(}{{GrayPaintScale}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalSeriesCollection}}{{c2}{=}{{(}{{YIntervalSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYBarPainter}}{{p2}{=}{{(}{{StandardXYBarPainter}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineBorder}}{{b2}{=}{{(}{{LineBorder}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYAreaRenderer}}{{r2}{=}{{(}{{XYAreaRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYDotRenderer}}{{r2}{=}{{(}{{XYDotRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GradientXYBarPainter}}{{p2}{=}{{(}{{GradientXYBarPainter}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MatrixSeries}}{{m2}{=}{{(}{{MatrixSeries}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPlot}}{{p2}{=}{{(}{{XYPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{JFreeChart}}{{chart2}{=}{{(}{{JFreeChart}}{)}{{TestUtilities}{.}{serialised}{(}{chart}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPlot}}{{p2}{=}{{(}{{XYPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPlot}}{{p2}{=}{{(}{{XYPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomCategoryURLGenerator}}{{g2}{=}{{(}{{CustomCategoryURLGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYToolTipGenerator}}{{g2}{=}{{(}{{StandardXYToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XIntervalDataItem}}{{item2}{=}{{(}{{XIntervalDataItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MarkerAxisBand}}{{a2}{=}{{(}{{MarkerAxisBand}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HistogramBin}}{{b2}{=}{{(}{{HistogramBin}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesCollection}}{{c2}{=}{{(}{{TimeSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ThermometerPlot}}{{p2}{=}{{(}{{ThermometerPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ThermometerPlot}}{{p2}{=}{{(}{{ThermometerPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FlowArrangement}}{{f2}{=}{{(}{{FlowArrangement}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryTick}}{{t2}{=}{{(}{{CategoryTick}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ArrowNeedle}}{{n2}{=}{{(}{{ArrowNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ArcDialFrame}}{{f2}{=}{{(}{{ArcDialFrame}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBlockRenderer}}{{r2}{=}{{(}{{XYBlockRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{AxisLocation}}{{location2}{=}{{(}{{AxisLocation}}{)}{{TestUtilities}{.}{serialised}{(}{location1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FlowArrangement}}{{f2}{=}{{(}{{FlowArrangement}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBoxAnnotation}}{{a2}{=}{{(}{{XYBoxAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GroupedStackedBarRenderer}}{{r2}{=}{{(}{{GroupedStackedBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{NormalDistributionFunction2D}}{{f2}{=}{{(}{{NormalDistributionFunction2D}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleHistogramDataset}}{{d2}{=}{{(}{{SimpleHistogramDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedObjects2D}}{{ko2D2}{=}{{(}{{KeyedObjects2D}}{)}{{TestUtilities}{.}{serialised}{(}{ko2D1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PolarPlot}}{{p2}{=}{{(}{{PolarPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DomainOrder}}{{d2}{=}{{(}{{DomainOrder}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorSeries}}{{s2}{=}{{(}{{VectorSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ColorBlock}}{{b2}{=}{{(}{{ColorBlock}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PieLabelRecord}}{{p2}{=}{{(}{{PieLabelRecord}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultPolarItemRenderer}}{{r2}{=}{{(}{{DefaultPolarItemRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPointerAnnotation}}{{a2}{=}{{(}{{XYPointerAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendItemEntity}}{{e2}{=}{{(}{{LegendItemEntity}}{)}{{TestUtilities}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TaskSeries}}{{s2}{=}{{(}{{TaskSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultCategoryItemRenderer}}{{r2}{=}{{(}{{DefaultCategoryItemRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r2}{=}{{(}{{Range}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ExtendedCategoryAxis}}{{a2}{=}{{(}{{ExtendedCategoryAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultDrawingSupplier}}{{r2}{=}{{(}{{DefaultDrawingSupplier}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Month}}{{m2}{=}{{(}{{Month}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PinNeedle}}{{n2}{=}{{(}{{PinNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYErrorRenderer}}{{r2}{=}{{(}{{XYErrorRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYErrorRenderer}}{{r2}{=}{{(}{{XYErrorRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomXYURLGenerator}}{{g2}{=}{{(}{{CustomXYURLGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineFunction2D}}{{f2}{=}{{(}{{LineFunction2D}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYSeriesCollection}}{{c2}{=}{{(}{{XYSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardPieSectionLabelGenerator}}{{g2}{=}{{(}{{StandardPieSectionLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Second}}{{s2}{=}{{(}{{Second}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BarRenderer}}{{r2}{=}{{(}{{BarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultTableXYDataset}}{{d2}{=}{{(}{{DefaultTableXYDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CompassPlot}}{{p2}{=}{{(}{{CompassPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultTableXYDataset}}{{d2}{=}{{(}{{DefaultTableXYDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MultipleXYSeriesLabelGenerator}}{{g2}{=}{{(}{{MultipleXYSeriesLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryTextAnnotation}}{{a2}{=}{{(}{{CategoryTextAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardCategorySeriesLabelGenerator}}{{g2}{=}{{(}{{StandardCategorySeriesLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryMarker}}{{m2}{=}{{(}{{CategoryMarker}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Day}}{{d2}{=}{{(}{{Day}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTitle}}{{t2}{=}{{(}{{DateTitle}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Week}}{{w2}{=}{{(}{{Week}}{)}{{TestUtilities}{.}{serialised}{(}{w1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{AreaRenderer}}{{r2}{=}{{(}{{AreaRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TickUnits}}{{t2}{=}{{(}{{TickUnits}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BoxAndWhiskerItem}}{{i2}{=}{{(}{{BoxAndWhiskerItem}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodAnchor}}{{a2}{=}{{(}{{TimePeriodAnchor}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PaintMap}}{{m2}{=}{{(}{{PaintMap}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PaintMap}}{{m2}{=}{{(}{{PaintMap}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{RingPlot}}{{p2}{=}{{(}{{RingPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardBarPainter}}{{p2}{=}{{(}{{StandardBarPainter}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendItemCollection}}{{c2}{=}{{(}{{LegendItemCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{RangeType}}{{r2}{=}{{(}{{RangeType}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StatisticalBarRenderer}}{{r2}{=}{{(}{{StatisticalBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValue}}{{v2}{=}{{(}{{DefaultKeyedValue}}{)}{{TestUtilities}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLC}}{{i2}{=}{{(}{{OHLC}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYItemLabelGenerator}}{{g2}{=}{{(}{{StandardXYItemLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BlockContainer}}{{c2}{=}{{(}{{BlockContainer}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{NumberAxis}}{{a2}{=}{{(}{{NumberAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LogAxis}}{{a2}{=}{{(}{{LogAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryStepRenderer}}{{r2}{=}{{(}{{CategoryStepRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CustomPieURLGenerator}}{{g2}{=}{{(}{{CustomPieURLGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PeriodAxisLabelInfo}}{{info2}{=}{{(}{{PeriodAxisLabelInfo}}{)}{{TestUtilities}{.}{serialised}{(}{info1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultHighLowDataset}}{{d2}{=}{{(}{{DefaultHighLowDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialPointer}}{{i2}{=}{{(}{{DialPointer}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialPointer}}{{i2}{=}{{(}{{DialPointer}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedObject}}{{ko2}{=}{{(}{{KeyedObject}}{)}{{TestUtilities}{.}{serialised}{(}{ko1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{BlockBorder}}{{b2}{=}{{(}{{BlockBorder}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MultiplePiePlot}}{{p2}{=}{{(}{{MultiplePiePlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYSplineRenderer}}{{r2}{=}{{(}{{XYSplineRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYShapeAnnotation}}{{a2}{=}{{(}{{XYShapeAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YWithXInterval}}{{i2}{=}{{(}{{YWithXInterval}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultBoxAndWhiskerCategoryDataset}}{{d2}{=}{{(}{{DefaultBoxAndWhiskerCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CompositeTitle}}{{t2}{=}{{(}{{CompositeTitle}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryPointerAnnotation}}{{a2}{=}{{(}{{CategoryPointerAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYPolygonAnnotation}}{{a2}{=}{{(}{{XYPolygonAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Task}}{{t2}{=}{{(}{{Task}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DialPlot}}{{p2}{=}{{(}{{DialPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYTitleAnnotation}}{{a2}{=}{{(}{{XYTitleAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValues2D}}{{kv2D2}{=}{{(}{{DefaultKeyedValues2D}}{)}{{TestUtilities}{.}{serialised}{(}{kv2D1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedAreaRenderer}}{{r2}{=}{{(}{{StackedAreaRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodValue}}{{tpv2}{=}{{(}{{TimePeriodValue}}{)}{{TestUtilities}{.}{serialised}{(}{tpv1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultHeatMapDataset}}{{d2}{=}{{(}{{DefaultHeatMapDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYLineAndShapeRenderer}}{{r2}{=}{{(}{{XYLineAndShapeRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYStepAreaRenderer}}{{r2}{=}{{(}{{XYStepAreaRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{YIntervalSeries}}{{s2}{=}{{(}{{YIntervalSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{GridArrangement}}{{f2}{=}{{(}{{GridArrangement}}{)}{{TestUtilities}{.}{serialised}{(}{f1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYAreaRenderer2}}{{r2}{=}{{(}{{XYAreaRenderer2}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{WindNeedle}}{{n2}{=}{{(}{{WindNeedle}}{)}{{TestUtilities}{.}{serialised}{(}{n1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{HighLowItemLabelGenerator}}{{g2}{=}{{(}{{HighLowItemLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultBoxAndWhiskerXYDataset}}{{d2}{=}{{(}{{DefaultBoxAndWhiskerXYDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeriesURLGenerator}}{{g2}{=}{{(}{{TimeSeriesURLGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LogarithmicAxis}}{{a2}{=}{{(}{{LogarithmicAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardPieToolTipGenerator}}{{g2}{=}{{(}{{StandardPieToolTipGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CyclicNumberAxis}}{{a2}{=}{{(}{{CyclicNumberAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{KeyedObjects}}{{ko2}{=}{{(}{{KeyedObjects}}{)}{{TestUtilities}{.}{serialised}{(}{ko1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CandlestickRenderer}}{{r2}{=}{{(}{{CandlestickRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MonthDateFormat}}{{mf2}{=}{{(}{{MonthDateFormat}}{)}{{TestUtilities}{.}{serialised}{(}{mf1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYBoxAndWhiskerRenderer}}{{r2}{=}{{(}{{XYBoxAndWhiskerRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ChartRenderingInfo}}{{i2}{=}{{(}{{ChartRenderingInfo}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ChartRenderingInfo}}{{i2}{=}{{(}{{ChartRenderingInfo}}{)}{{TestUtilities}{.}{serialised}{(}{i1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XYCoordinate}}{{v2}{=}{{(}{{XYCoordinate}}{)}{{TestUtilities}{.}{serialised}{(}{v1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardEntityCollection}}{{c2}{=}{{(}{{StandardEntityCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CrosshairOverlay}}{{o2}{=}{{(}{{CrosshairOverlay}}{)}{{TestUtilities}{.}{serialised}{(}{o1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PiePlot3D}}{{p2}{=}{{(}{{PiePlot3D}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{FastScatterPlot}}{{p2}{=}{{(}{{FastScatterPlot}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValueDataset}}{{d2}{=}{{(}{{DefaultKeyedValueDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TextTitle}}{{t2}{=}{{(}{{TextTitle}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ComparableObjectItem}}{{item2}{=}{{(}{{ComparableObjectItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimeSeries}}{{s2}{=}{{(}{{TimeSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TimePeriodValuesCollection}}{{c2}{=}{{(}{{TimePeriodValuesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendItem}}{{item2}{=}{{(}{{LegendItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{item2}{=}{{(}{{LegendItem}}{)}{{TestUtilities}{.}{serialised}{(}{item1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LineAndShapeRenderer}}{{r2}{=}{{(}{{LineAndShapeRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{EmptyBlock}}{{b2}{=}{{(}{{EmptyBlock}}{)}{{TestUtilities}{.}{serialised}{(}{b1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedXYBarRenderer}}{{r2}{=}{{(}{{StackedXYBarRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MinMaxCategoryRenderer}}{{r2}{=}{{(}{{MinMaxCategoryRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardChartTheme}}{{t2}{=}{{(}{{StandardChartTheme}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SlidingGanttCategoryDataset}}{{d2}{=}{{(}{{SlidingGanttCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{QuarterDateFormat}}{{qf2}{=}{{(}{{QuarterDateFormat}}{)}{{TestUtilities}{.}{serialised}{(}{qf1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StackedXYAreaRenderer2}}{{r2}{=}{{(}{{StackedXYAreaRenderer2}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{IntervalMarker}}{{m2}{=}{{(}{{IntervalMarker}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultStatisticalCategoryDataset}}{{d2}{=}{{(}{{DefaultStatisticalCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultStatisticalCategoryDataset}}{{d2}{=}{{(}{{DefaultStatisticalCategoryDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeterInterval}}{{m2}{=}{{(}{{MeterInterval}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendTitle}}{{t2}{=}{{(}{{LegendTitle}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ScatterRenderer}}{{r2}{=}{{(}{{ScatterRenderer}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{OHLCSeriesCollection}}{{c2}{=}{{(}{{OHLCSeriesCollection}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{PlotRenderingInfo}}{{p2}{=}{{(}{{PlotRenderingInfo}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ModuloAxis}}{{a2}{=}{{(}{{ModuloAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{MeanAndStandardDeviation}}{{m2}{=}{{(}{{MeanAndStandardDeviation}}{)}{{TestUtilities}{.}{serialised}{(}{m1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateTickUnit}}{{a2}{=}{{(}{{DateTickUnit}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelPositions}}{{p2}{=}{{(}{{CategoryLabelPositions}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLabelPosition}}{{p2}{=}{{(}{{CategoryLabelPosition}}{)}{{TestUtilities}{.}{serialised}{(}{p1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{ShortTextTitle}}{{t2}{=}{{(}{{ShortTextTitle}}{)}{{TestUtilities}{.}{serialised}{(}{t1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DateRange}}{{r2}{=}{{(}{{DateRange}}{)}{{TestUtilities}{.}{serialised}{(}{r1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{XIntervalSeries}}{{s2}{=}{{(}{{XIntervalSeries}}{)}{{TestUtilities}{.}{serialised}{(}{s1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{CategoryLineAnnotation}}{{a2}{=}{{(}{{CategoryLineAnnotation}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{StandardXYSeriesLabelGenerator}}{{g2}{=}{{(}{{StandardXYSeriesLabelGenerator}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{Crosshair}}{{c2}{=}{{(}{{Crosshair}}{)}{{TestUtilities}{.}{serialised}{(}{c1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{LegendGraphic}}{{g2}{=}{{(}{{LegendGraphic}}{)}{{TestUtilities}{.}{serialised}{(}{g1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{SymbolAxis}}{{a2}{=}{{(}{{SymbolAxis}}{)}{{TestUtilities}{.}{serialised}{(}{a1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{DefaultKeyedValues2DDataset}}{{d2}{=}{{(}{{DefaultKeyedValues2DDataset}}{)}{{TestUtilities}{.}{serialised}{(}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{TickLabelEntity}}{{e2}{=}{{(}{{TickLabelEntity}}{)}{{TestUtilities}{.}{serialised}{(}{e1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{isPointInRect}{(}{dataArea}{,}{xx}{,}{yy}{)}}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{isPointInRect}{(}{dataArea}{,}{xx}{,}{yy}{)}}}}
{AST_ROOT_SC2NF{{final}{{Rectangle2D}}{area}}}
{AST_ROOT_SC2NF{{final}{float}{s}}}
{AST_ROOT_SC2NF{{final}{float}{s}}}
{AST_ROOT_SC2NF{{final}{float}{s}}}
{AST_ROOT_SC2NF{{final}{{Shape}}{shape}}}
{AST_ROOT_SC2NF{{{entities}{!=}{null}}{&&}{{AbstractXYItemRenderer}{.}{isPointInRect}{(}{dataArea}{,}{x}{,}{y}{)}}}}
{AST_ROOT_SC2NF{{final}{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{{Graphics2D}}{g2}}}
{AST_ROOT_SC2NF{{final}{{TextFragment}}{fragment}}}
{AST_ROOT_SC2NF{{final}{{TextFragment}}{fragment}}}
{AST_ROOT_SC2NF{{public}{TextLine}{(}{{final}{{String}}{text}}{)}{{{}{{this}{(}{text}{,}{TextFragment.DEFAULT_FONT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{int}{month}}}
{AST_ROOT_SC2NF{{final}{int}{code}}}
{AST_ROOT_SC2NF{{final}{boolean}{shortened}}}
{AST_ROOT_SC2NF{{final}{int}{weekday}}}
{AST_ROOT_SC2NF{{final}{{String}}{title}}}
{AST_ROOT_SC2NF{{final}{{Object}}{o}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{Font}}{font}}}
{AST_ROOT_SC2NF{{final}{{Font}}{font}}}
{AST_ROOT_SC2NF{{final}{{Font}}{font}}}
{AST_ROOT_SC2NF{{final}{{Font}}{font}}}
{AST_ROOT_SC2NF{{final}{{Font}}{font}}}
{AST_ROOT_SC2NF{{final}{double}{height}}}
{AST_ROOT_SC2NF{{final}{double}{height}}}
{AST_ROOT_SC2NF{{final}{double}{width}}}
{AST_ROOT_SC2NF{{final}{double}{width}}}
{AST_ROOT_SC2NF{{final}{double}{width}}}
{AST_ROOT_SC2NF{{final}{double}{width}}}
{AST_ROOT_SC2NF{{final}{double}{width}}}
{AST_ROOT_SC2NF{{final}{double}{width}}}
{AST_ROOT_SC2NF{{final}{double}{height}}}
{AST_ROOT_SC2NF{{final}{double}{height}}}
{AST_ROOT_SC2NF{{final}{double}{height}}}
{AST_ROOT_SC2NF{{final}{double}{height}}}
{AST_ROOT_SC2NF{{final}{int}{d}}}
{AST_ROOT_SC2NF{{final}{int}{serial}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{Dialog}}{dialog}}}
{AST_ROOT_SC2NF{{final}{{Window}}{frame}}}
{AST_ROOT_SC2NF{{final}{{Window}}{frame}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{double}{height}}}
{AST_ROOT_SC2NF{{final}{double}{width}}}
{AST_ROOT_SC2NF{{final}{int}{maxrows}}}
{AST_ROOT_SC2NF{{final}{{TextLine}}{line}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{final}{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{public}{ObjectList}{(}{{final}{int}{initialCapacity}}{)}{{{}{{super}{(}{initialCapacity}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{final}{{String}}{classLoaderSource}}}
{AST_ROOT_SC2NF{{final}{{RectangleEdge}}{edge}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{int}{targetDOW}}}
{AST_ROOT_SC2NF{{final}{int}{targetDOW}}}
{AST_ROOT_SC2NF{{final}{int}{targetDOW}}}
{AST_ROOT_SC2NF{{final}{int}{serial}}}
{AST_ROOT_SC2NF{{final}{int}{relative}}}
{AST_ROOT_SC2NF{{final}{int}{count}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{final}{int}{index}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{Number}}{value}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{final}{{ObjectInputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{{ObjectOutputStream}}{stream}}}
{AST_ROOT_SC2NF{{final}{{Object}}{object}}}
{AST_ROOT_SC2NF{{protected}{AbstractObjectList}{(}{{final}{int}{initialCapacity}}{)}{{{}{{this}{(}{initialCapacity}{,}{initialCapacity}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{String}}{name}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{file}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{fillType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{type}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{type}}{=}{type}}{;}}{{{fireDatasetChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{group}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{defaultGroup}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{category2}}{=}{category}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{category1}}{=}{category}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{zone}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{listenerList}}{.}{remove}{(}{{{RendererChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{listenerList}}{.}{add}{(}{{{RendererChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultLegendTextFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultNegativeItemLabelPosition}}{=}{position}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultPositiveItemLabelPosition}}{=}{position}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultItemLabelPaint}}{=}{paint}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{setDefaultItemLabelFont}{(}{font}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultShape}}{=}{shape}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultOutlineStroke}}{=}{stroke}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultStroke}}{=}{stroke}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultOutlinePaint}}{=}{paint}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultFillPaint}}{=}{paint}}{;}}{{if}{(}{notify}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowPaint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowStroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{indexOf}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{marker}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePosition}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rowRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{columnRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{renderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{orientation}}{=}{orientation}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{key}}{=}{key}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paintScale}}{=}{scale}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{renderer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{renderer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{supplier}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{drawingSupplier}}{=}{supplier}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandAlternatePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{errorIndicatorPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{thermometerPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{xyBarPainter}}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{barPainter}}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shadowPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemLabelPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLabelPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisOffset}}{=}{offset}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{crosshairPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baselinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{style}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkStyle}}{=}{style}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plotOutlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plotBackgroundPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendBackgroundPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{chartBackgroundPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subtitlePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{titlePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{smallFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{regularFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{largeFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{extraLargeFont}}{=}{font}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{name}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{seriesKeys}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{chart}}{=}{chart}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{indexOf}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandAlternatePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gridBandPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{getValue}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shapeLocation}}{=}{location}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shapeAnchor}}{=}{anchor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{transformer}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaintTransformer}}{=}{transformer}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{x}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{x}}{=}{x}}{;}}{{{{this}{.}{obj}}{=}{y}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{unit}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseFormatter}}{=}{formatter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{separatorPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{separatorStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{color}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextColor}}{=}{color}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{mode}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{centerTextMode}}{=}{mode}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}{{{Range}}{{result}{=}{{iterateToFindZBounds}{(}{dataset}{,}{visibleSeriesKeys}{,}{xRange}{,}{includeInterval}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}{{{Range}}{{result}{=}{{iterateZBounds}{(}{dataset}{,}{includeInterval}{)}}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{negativeBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{positiveBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{lastBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{firstBarPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{radialAxis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{composite}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillComposite}}{=}{composite}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{guideLineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{guideLinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paintScale}}{=}{scale}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{key}}{=}{key}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{icon}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minIcon}}{=}{icon}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{icon}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{maxIcon}}{=}{icon}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{icon}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{objectIcon}}{=}{icon}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{groupStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{groupPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{xPosition}}{=}{position}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{interval}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{intervals}}{.}{add}{(}{interval}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valuePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valueFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelFormat}}{=}{format}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{needlePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{polygon}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{thresholdType}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gapThresholdType}}{=}{thresholdType}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{name}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{period}}{=}{period}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{key}}{=}{key}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickMarkPosition}}{=}{position}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{maximumDate}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{date}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{locale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{zone}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{chartMouseListeners}}{.}{add}{(}{{{ChartMouseListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{file}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{overlay}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{overlay}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zoomFillPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{incompletePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{completePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{values}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rotationAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{text}}{=}{text}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelTextAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{adj}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelOffsetType}}{=}{adj}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelOffset}}{=}{offset}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{color}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelBackgroundColor}}{=}{color}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{MarkerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrangement}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrangement}}{=}{arrangement}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{arrangement}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{foregroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{backgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{x}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{period}}{=}{period}}{;}}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{category}}{=}{category}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{subtask}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subtasks}}{.}{add}{(}{subtask}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{description}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{description}}{=}{description}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{description}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stripOutlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stripOutlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLocation}}{=}{location}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{scale}}{=}{scale}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{serialDate}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{serialDate}}{=}{serialDate}}{;}}{{{peg}{(}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowPaint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{arrowStroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeAxis}}{=}{axis}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainAxis}}{=}{axis}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axisIndex}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{cornerTextItems}}{.}{add}{(}{text}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{angleLabelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{angleLabelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{unit}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{angleTickUnit}}{=}{unit}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{type}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{endType}}{=}{type}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sortOrder}}{=}{order}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemLabelPadding}}{=}{padding}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{itemFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemGraphicPadding}}{=}{padding}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemGraphicAnchor}}{=}{anchor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{edge}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemGraphicEdge}}{=}{edge}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{sources}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sources}}{=}{sources}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{title}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{title}}{=}{title}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plot}}{=}{plot}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{volumePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{remove}{(}{{{ChartChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{add}{(}{{{ChartChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subtitle}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subtitle}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{padding}}{=}{padding}}{;}}{{{notifyListeners}{(}{{new}{{ChartChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{renderingHints}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{renderingHints}}{=}{renderingHints}}{;}}{{{fireChartChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{store}}{.}{put}{(}{key}{,}{stroke}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{Stroke}}{)}{{{this}{.}{store}}{.}{get}{(}{key}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{artifactPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{t}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gradientPaintTransformer}}{=}{t}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{transformer}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{gradientTransformer}}{=}{transformer}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendArea}}{=}{area}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dataset}}{=}{dataset}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{anchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{label}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{label}}{=}{label}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{label}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{edge}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{drawable}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{alignment}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAlignment}}{=}{alignment}}{;}}{{{notifyListeners}{(}{{new}{{TitleChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{alignment}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{alignment}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{position}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{rectangle}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{area}}{=}{area}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{hour}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{artifactPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{coefficients}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{coefficients}}{=}{{(}{{double}{[]}}{)}{{coefficients}{.}{clone}{()}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subLabelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{subLabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subCategory}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{f}{,}{STRING_CONSTANT}{)}}{;}}{{{factory}{=}{f}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{container}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{container}}{=}{container}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{container}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{container}}{=}{container}}{;}}{{{{this}{.}{backgroundPaint}}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{remove}{(}{{{OverlayChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{changeListeners}}{.}{add}{(}{{{OverlayChangeListener}}{.}{class}}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}{{{setRange}{(}{{Range}{.}{expand}{(}{range}{,}{{getLowerMargin}{()}}{,}{{getUpperMargin}{()}}{)}}{,}{turnOffAutoRange}{,}{notify}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultAutoRange}}{=}{range}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rightArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{leftArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{downArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{arrow}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{upArrow}}{=}{arrow}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rotationAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAnchor}}{=}{anchor}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{text}}{=}{text}}{;}}{{{fireAnnotationChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{text}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zDateFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{x}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{x}}{=}{x}}{;}}{{{{this}{.}{y}}{=}{y}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{tickType}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainCrosshairStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axisIndex}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axisIndex}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{origin}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{quadrantOrigin}}{=}{origin}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeZeroBaselineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainZeroBaselinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainZeroBaselineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeMinorGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainMinorGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainMinorGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{domainGridlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{seriesRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{datasetRenderingOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{requireNonNegative}{(}{index}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{mercuryPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valueFormat}}{=}{formatter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{f}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{padding}}{=}{padding}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{store}}{.}{put}{(}{key}{,}{paint}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{Paint}}{)}{{{this}{.}{store}}{.}{get}{(}{key}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{chart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{ServletUtilities.tempOneTimeFilePrefix}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{ServletUtilities.tempFilePrefix}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{period}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{extract}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelGenerator}}{=}{generator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseSeriesOutlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseSeriesOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{baseSeriesPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{direction}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{direction}}{=}{direction}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dataExtractOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{extract}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{aggregatedItemsPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{aggregatedItemsKey}}{=}{key}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dataExtractOrder}}{=}{order}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{pieChart}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{directions}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{array}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{columnKey}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{getCategoryIndex}{(}{columnKey}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{categoryKeys}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{seriesKeys}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{contentAlignmentPoint}}{=}{anchor}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{advanceLineStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{advanceLinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{day}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{categories}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{if}{(}{{{{this}{.}{categoryLabelURLs}}{.}{remove}{(}{category}{)}}{!=}{null}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{String}}{)}{{{this}{.}{categoryLabelURLs}}{.}{get}{(}{category}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelURLs}}{.}{put}{(}{category}{,}{url}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{if}{(}{{{{this}{.}{categoryLabelToolTips}}{.}{remove}{(}{category}{)}}{!=}{null}}{)}{{{}{{{fireChangeEvent}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{(}{{String}}{)}{{{this}{.}{categoryLabelToolTips}}{.}{get}{(}{category}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelToolTips}}{.}{put}{(}{category}{,}{tooltip}{)}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{category}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{positions}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{categoryLabelPositions}}{=}{positions}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{columnKey}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{keys}}{.}{indexOf}{(}{columnKey}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{stroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{foregroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{backgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{barPainter}}{=}{painter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{bar}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendBar}}{=}{bar}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{XYBarRenderer.defaultBarPainter}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{columnKey}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{rowKey}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{columnKeys}}{.}{indexOf}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{color}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{hotspot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{plot}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{plot}}{=}{plot}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatPattern}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{textAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{valueAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{insets}}{=}{insets}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{backgroundPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{paint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{font}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{formatter}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{value}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{templateValue}}{=}{value}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{anchor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{frameAnchor}}{=}{anchor}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{area}{,}{toolTipText}{,}{urlText}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{axis}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axis}}{=}{axis}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{noDataMessagePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{noDataMessageFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{subplot}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{source}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{annotation}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{annotation}}{=}{annotation}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{transformer}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaintTransformer}}{=}{transformer}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{line}}{=}{line}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlineStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{outlinePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{linePaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{lineStroke}}{=}{stroke}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{fillPaint}}{=}{paint}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shape}}{=}{shape}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{area}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendArea}}{=}{area}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sublabelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{sublabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{image}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{crosshair}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{prefix}}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{defaultPaint}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{roseHighlightPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{roseCenterPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rosePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{entity}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{entities}}{.}{add}{(}{entity}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{rect}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{scale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{pointer}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{pointers}}{.}{indexOf}{(}{pointer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{pointer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{layer}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{layers}}{.}{indexOf}{(}{layer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{layer}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{frame}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{task}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tasks}}{.}{add}{(}{task}{)}}{;}}{{{fireSeriesChanged}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{secondFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{secondSuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minuteSuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minuteFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{hourSuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{hourFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{suffix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{daySuffix}}{=}{suffix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{dayFormatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{prefix}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{positivePrefix}}{=}{prefix}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{map}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{seriesToGroupMap}}{=}{map}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zDateFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{formatString}{,}{xFormat}{,}{yFormat}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{zFormat}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{zFormat}}{=}{zFormat}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelFormatter}}{=}{formatter}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelFont}}{=}{font}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{DialLayerChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{columnKeys}}{.}{indexOf}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{rowKeys}}{.}{indexOf}{(}{key}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{item}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{date}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{shadowPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{barPainter}}{=}{painter}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{painter}{,}{STRING_CONSTANT}{)}}{;}}{{{BarRenderer.defaultBarPainter}{=}{painter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{bounds}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{bounds}}{=}{bounds}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{padding}}{=}{padding}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{frame}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{frame}}{=}{frame}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{margin}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{margin}}{=}{margin}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{unit}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{rangeType}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{rangeType}}{=}{rangeType}}{;}}{{{notifyListeners}{(}{{new}{{AxisChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{group}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{group}}{=}{group}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{orientation}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{locale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{order}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{theme}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{data}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{source}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{input}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{input}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{line}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLine}}{=}{line}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{negativePaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{positivePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{id}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{id}}{=}{id}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{locale}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{tasks}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{state}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickMarkPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{tickLabelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{axisLinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{location}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLocation}}{=}{location}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{insets}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{{this}{.}{data}}{.}{indexOf}{(}{series}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickMarkStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{minorTickTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{majorTickTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{c}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{autoRangeTimePeriodClass}}{=}{c}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{zone}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{last}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{first}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{size}{,}{minorTickCount}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{size}{)}{;}}{{{ParamChecks}{.}{nullNotPermitted}{(}{formatter}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatter}}{=}{formatter}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{seriesKey}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{seriesKey}}{=}{seriesKey}}{;}}{{{{this}{.}{itemIndex}}{=}{itemIndex}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{format}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{formatPattern}}{=}{format}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{dataset}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{record}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labels}}{.}{add}{(}{record}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{base}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{base}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{range}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{series}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{generator}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendLabelGenerator}}{=}{generator}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{shape}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{legendItemShape}}{=}{shape}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{distributor}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelDistributor}}{=}{distributor}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{offset}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{simpleLabelOffset}}{=}{offset}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{padding}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPadding}}{=}{padding}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{font}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelFont}}{=}{font}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{style}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{labelLinkStyle}}{=}{style}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ParamChecks}{.}{nullNotPermitted}{(}{key}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{stroke}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultSectionOutlineStroke}}{=}{stroke}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultSectionOutlinePaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{paint}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{defaultSectionPaint}}{=}{paint}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ParamChecks}{.}{nullNotPermitted}{(}{direction}{,}{STRING_CONSTANT}{)}}{;}}{{{{this}{.}{direction}}{=}{direction}}{;}}{{{fireChangeEvent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{RectangleAnchor}{.}{coordinates}{(}{titleRect}{,}{{this}{.}{anchor}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{RectangleAnchor}{.}{coordinates}{(}{anchorRect}{,}{anchor}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{RectangleAnchor}{.}{coordinates}{(}{anchorRect}{,}{anchor}{)}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{pt2}{=}{{RectangleAnchor}{.}{coordinates}{(}{bounds}{,}{{this}{.}{valueAnchor}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{RectangleAnchor}{.}{coordinates}{(}{area}{,}{{position}{.}{getCategoryAnchor}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{RectangleAnchor}{.}{coordinates}{(}{anchorRect}{,}{anchor}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{RectangleAnchor}{.}{coordinates}{(}{anchorRect}{,}{anchor}{)}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{RectangleAnchor}{.}{coordinates}{(}{{shape}{.}{getBounds2D}{()}}{,}{anchor}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{pt}{=}{{RectangleAnchor}{.}{coordinates}{(}{area}{,}{{this}{.}{textAnchor}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Point2D}}{{anchorPoint}{=}{{RectangleAnchor}{.}{coordinates}{(}{imageRect}{,}{{this}{.}{anchor}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setXORMode}{(}{Color.orange}{)}}{;}}}
{AST_ROOT_SC2NF{{{g2}{.}{setXORMode}{(}{Color.orange}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{xor}{)}{{{}{{{g2}{.}{setXORMode}{(}{Color.gray}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{overlays}}{=}{{new}{{java.util.ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mep}{>}{NUMBER_CONSTANT}}{)}{{{}{{{ep}{=}{{{getExplodePercent}{(}{section}{)}}{/}{mep}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{isOrsonPDFAvailable}{()}}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{chart.subtitles}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{Title}}{)}{{{this}{.}{subtitles}}{.}{get}{(}{index}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{subtitles}}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{chartPanel}}{=}{{new}{{ChartPanel}}{(}{chart}{)}}}{;}}}
{AST_ROOT_SC2NF{{Null}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{ObjectUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{BooleanUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{CharUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{ClassUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{ArrayUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{Validate}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{WordUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{StringEscapeUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{CharSetUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{RandomStringUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{private}{Entry}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{private}{Entry}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{DateFormatUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{DateUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{StopWatch}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{RandomStringUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{StringEscapeUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{WordUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{CharSetUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{CharUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ObjectUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{BooleanUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ArrayUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ClassUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{createLong}{(}{numeric}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}}}}}{{return}{{createBigInteger}{(}{numeric}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{in}{!=}{null}}{)}{{{}{{{in}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{out}{!=}{null}}{)}{{{}{{{out}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{createLong}{(}{numeric}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}}}}}{{return}{{createBigInteger}{(}{numeric}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{last}{==}{CHAR_CONS}}{)}{{{}}}{else}{{{}{{{lastIdx}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{StringUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{SystemUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{in}{!=}{null}}{)}{{{}{{{in}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}{;}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{if}{(}{{out}{!=}{null}}{)}{{{}{{{out}{.}{close}{()}}{;}}{}}}}{}}}{{catch}{(}{{{IOException}}{ex}}{)}{{{}{;}{}}}}}{}}}}
{AST_ROOT_SC2NF{{public}{DateFormatUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{Null}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{DateUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{TwoDigitMonthField}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{TwoDigitYearField}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{UnpaddedMonthField}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{NumberUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{public}{EnumUtils}{()}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{VariableFormatTest}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Object}}{{result}{=}{{replaceObject}{(}{source}{)}}}{;}}{{return}{{{(}{{result}{==}{null}}{)}}{?}{null}{:}{{result}{.}{toString}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendFixedWidthPadRight}{(}{null}{,}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{;}}}
{AST_ROOT_SC2NF{{noPrimitives}{=}{{new}{{{Class}}{[]}}{{{}{{{String}}{.}{class}}{,}{{{ClassUtils}}{.}{class}}{}}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{DoubleRange}}{(}{nonComparable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{IntRange}}{(}{nonComparable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{LongRange}}{(}{nonComparable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsFloat}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsDouble}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsInteger}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsLong}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{tenToTwenty}{.}{containsNumber}{(}{nonComparable}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Range}}{{r}{=}{{new}{{FloatRange}}{(}{nonComparable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{StrTokenizer}}{)}{{TSV_TOKENIZER_PROTOTYPE}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{StrTokenizer}}{)}{{CSV_TOKENIZER_PROTOTYPE}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{removeLen}{=}{{endIndex}{=}{startIndex}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{lastIndexOf}{(}{str}{,}{size}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{lastIndexOf}{(}{ch}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{String}}{(}{buf}{,}{{size}{-}{length}}{,}{size}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{StringBuffer}}{(}{size}{)}}{.}{append}{(}{buf}{,}{NUMBER_CONSTANT}{,}{size}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{String}}{(}{buf}{,}{NUMBER_CONSTANT}{,}{size}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{.}{charAt}{(}{j}{)}}{!=}{{buf}{[}{{i}{+}{j}}{]}}}{)}{{{}{{continue}{outer}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{buf}{[}{i}{]}}{==}{ch}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buf}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buf}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buf}}{;}}}
{AST_ROOT_SC2NF{{{}{{{endIndex}{=}{{validateRange}{(}{startIndex}{,}{endIndex}{)}}}{;}}{{return}{{new}{{String}}{(}{buf}{,}{startIndex}{,}{{endIndex}{-}{startIndex}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{buf}{[}{pos}{]}}{!=}{{str}{.}{charAt}{(}{i}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{buf}{[}{i}{]}}{!=}{{str}{.}{charAt}{(}{i}{)}}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{>}{NUMBER_CONSTANT}}{)}{{{}{{{System}{.}{arraycopy}{(}{buf}{,}{endIndex}{,}{buf}{,}{startIndex}{,}{{size}{-}{endIndex}}{)}}{;}}{{{size}{-=}{len}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{NUMBER_CONSTANT}}}{;}{{i}{<}{length}}{;}{{i}{++}}{)}{{{}{{{{buf}{[}{{size}{++}}{]}}{=}{padChar}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{buf}{[}{{size}{++}}{]}}{=}{ch}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{chars}{,}{startIndex}{,}{buf}{,}{len}{,}{length}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{chars}{,}{NUMBER_CONSTANT}{,}{buf}{,}{len}{,}{strLen}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{str.buf}{,}{NUMBER_CONSTANT}{,}{buf}{,}{len}{,}{strLen}{)}}{;}}}
{AST_ROOT_SC2NF{{{str}{.}{getChars}{(}{NUMBER_CONSTANT}{,}{strLen}{,}{buf}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{str}{.}{getChars}{(}{NUMBER_CONSTANT}{,}{strLen}{,}{buf}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buf}{,}{startIndex}{,}{destination}{,}{destinationIndex}{,}{{endIndex}{-}{startIndex}}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buf}{,}{NUMBER_CONSTANT}{,}{destination}{,}{NUMBER_CONSTANT}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buf}{,}{startIndex}{,}{chars}{,}{NUMBER_CONSTANT}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{buf}{,}{NUMBER_CONSTANT}{,}{chars}{,}{NUMBER_CONSTANT}{,}{size}{)}}{;}}}
{AST_ROOT_SC2NF{{{{buf}{[}{index}{]}}{=}{ch}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{length}{()}}}}{)}{{{}{{throw}{{new}{{StringIndexOutOfBoundsException}}{(}{index}{)}}{;}}{}}}}{{return}{{buf}{[}{index}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{oldEnd}}}{;}{{i}{<}{newEnd}}{;}{{i}{++}}{)}{{{}{{{{buf}{[}{i}{]}}{=}{CHAR_CONS}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{if}{(}{{initialCapacity}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{initialCapacity}{=}{CAPACITY}}{;}}{}}}}{{{buf}{=}{{new}{{char}{[}}{initialCapacity}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{sb.buf.length}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{pos}{+}{len}}{>=}{textLen}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{boolean}{[]}}{)}{{add}{(}{array}{,}{index}{,}{{new}{{Boolean}}{(}{element}{)}}{,}{Boolean.TYPE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{sb}{.}{setLength}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{StringIndexOutOfBoundsException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{sb}{.}{setLength}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{StringIndexOutOfBoundsException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{sb}{.}{deleteCharAt}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{StringIndexOutOfBoundsException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{startPos}{<}{{getPos}{()}}}{)}{{{}{{{{getTokenList}{()}}{.}{addLast}{(}{{Token}{.}{newTextToken}{(}{startPos}{,}{{{getPos}{()}}{-}{startPos}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{last}{==}{CharUtils.CR}}{)}{{{}{;}{}}}{else}{{{}{{{lastIdx}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{setVarStartMatcher}{(}{{{StrTokenizer.Matcher}}{varStartMatcher}}{)}{{{}{{{{this}{.}{varStartMatcher}}{=}{varStartMatcher}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{setVarEndMatcher}{(}{{{StrTokenizer.Matcher}}{varEndMatcher}}{)}{{{}{{{{this}{.}{varEndMatcher}}{=}{varEndMatcher}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{setEscVarMatcher}{(}{{{StrTokenizer.Matcher}}{escVarMatcher}}{)}{{{}{{{{this}{.}{escVarMatcher}}{=}{escVarMatcher}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Matcher}}{trimmer}}}
{AST_ROOT_SC2NF{{{}{{{setIgnoredMatcher}{(}{{new}{{CharMatcher}}{(}{ignored}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Matcher}}{ignored}}}
{AST_ROOT_SC2NF{{{}{{{setQuoteMatcher}{(}{{new}{{CharMatcher}}{(}{quote}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Matcher}}{quote}}}
{AST_ROOT_SC2NF{{{start}{==}{len}}{&&}{{{delim}{.}{isMatch}{(}{chars}{,}{len}{,}{{start}{-}{NUMBER_CONSTANT}}{)}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{Matcher}}{delim}}}
{AST_ROOT_SC2NF{{{Matcher}}{delim}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{StrTokenizer.TRIM_MATCHER}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{StrTokenizer.TRIM_MATCHER}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{StrTokenizer.TRIM_MATCHER}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{StrTokenizer.NONE_MATCHER}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{StrTokenizer.NONE_MATCHER}{)}}{;}}}
{AST_ROOT_SC2NF{{{tok}{.}{setIgnoredMatcher}{(}{StrTokenizer.TRIM_MATCHER}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{replaceAll}{(}{CHAR_CONS}{,}{CHAR_CONS}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tokens.length}{==}{expected.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tokens.length}{==}{expected.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tokens.length}{==}{expected.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tokens.length}{==}{expected.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tokens.length}{==}{expected.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tokens.length}{==}{expected.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{tokens.length}{==}{expected.length}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{cloned.chars}{!=}{null}}{)}{{{}{{{cloned.chars}{=}{{(}{{char}{[]}}{)}{cloned.chars}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{cloned.chars}{!=}{null}}{)}{{{}{{{cloned.chars}{=}{cloned.chars}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isEmptyTokenAsNull}{()}{{{}{{return}{emptyAsNull}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{trimmer}{!=}{null}}{)}{{{}{{{{this}{.}{trimmer}}{=}{trimmer}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getTrimmerMatcher}{()}{{{}{{return}{trimmer}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ignored}{!=}{null}}{)}{{{}{{{{this}{.}{ignored}}{=}{ignored}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getIgnoredMatcher}{()}{{{}{{return}{ignored}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{quote}{!=}{null}}{)}{{{}{{{{this}{.}{quote}}{=}{quote}}{;}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getQuoteMatcher}{()}{{{}{{return}{quote}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{StrMatcher}}{getDelimiterMatcher}{()}{{{}{{return}{delim}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{assertTrue}{(}{{!}{{bf_multi}{.}{isAllSet}{(}{j}{)}}}{)}}{;}}{{{assertTrue}{(}{{!}{{bf_zero}{.}{isAllSet}{(}{j}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{msg}{==}{null}}{?}{STRING_CONSTANT}{:}{msg}}{)}{;}}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{{msg}{==}{null}}{?}{STRING_CONSTANT}{:}{msg}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotImplementedException}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{tokenize}{()}{{{}{{if}{(}{{tokens}{==}{null}}{)}{{{}{{{{this}{.}{tokens}}{=}{{readTokens}{()}}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{sb}{.}{append}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertLocaleLookupList}{(}{LOCALE_EN_US_ZZZZ}{,}{null}{,}{{new}{{{Locale}}{[]}}{{{}{LOCALE_EN_US_ZZZZ}{,}{LOCALE_EN_US}{,}{{new}{{Locale}}{(}{STRING_CONSTANT}{)}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertLocaleLookupList}{(}{LOCALE_EN_US_ZZZZ}{,}{null}{,}{{new}{{{Locale}}{[]}}{{{}{LOCALE_EN_US_ZZZZ}{,}{LOCALE_EN_US}{,}{{new}{{Locale}}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{str}{!=}{null}}{&&}{{{str}{.}{length}{()}}{>}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{new}{{LinkedList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{new}{{LinkedList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{append}{(}{str}{,}{off}{,}{len}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{append}{(}{cbuf}{,}{off}{,}{len}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{write}{(}{{{char}{[]}}{cbuf}}{)}{{{}{{{append}{(}{cbuf}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{write}{(}{{int}{c}}{)}{{{}{{{append}{(}{{(}{char}{)}{c}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{clone}{(}{array}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{,}{NUMBER_CONSTANT}{,}{tolerance}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{indexOf}{(}{array}{,}{objectToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionEquals}{(}{lhs}{,}{rhs}{,}{testTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionEquals}{(}{lhs}{,}{rhs}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{testTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{object}{,}{testTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{object}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{compareTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{HashCodeBuilder}{.}{reflectionHashCode}{(}{x}{,}{null}{)}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{tokens}{[]}{=}{{tok}{.}{getAllTokens}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasPrevious}{()}{{{}{{{tokenize}{()}}{;}}{{return}{{tokenPos}{>}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasNext}{()}{{{}{{{tokenize}{()}}{;}}{{return}{{tokenPos}{<}{tokens.length}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{tokenize}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{tokenize}{()}}{;}}{{return}{{(}{{{String}}{[]}}{)}{{tokens}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{size}{()}{{{}{{{tokenize}{()}}{;}}{{return}{tokens.length}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{input}{,}{{tok}{.}{getContent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{ready}{()}}{==}{false}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{charAt}{(}{{pos}{++}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{varValue}{=}{{resolveVariable}{(}{varName}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{substitute}{(}{buf}{,}{NUMBER_CONSTANT}{,}{length}{)}}{==}{false}}{)}{{{}{{return}{{source}{.}{substring}{(}{offset}{,}{length}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{VariableResolver}}{variableResolver}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{MapVariableResolver}}{(}{valueMap}{)}}{,}{prefix}{,}{suffix}{,}{escape}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{valueMap}{,}{prefix}{,}{suffix}{,}{DEFAULT_ESCAPE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{{new}{{MapVariableResolver}}{(}{valueMap}{)}}{,}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ESCAPE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{StrSubstitutor}}{(}{{System}{.}{getProperties}{()}}{)}}{.}{replace}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{Enum}}{)}{{entry.map}{.}{get}{(}{{getName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{Entry}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{return}{{(}{{Enum}}{)}{{entry.map}{.}{get}{(}{{getName}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{Entry}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{sub}{.}{replace}{(}{builder}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{ExceptionUtils}{.}{getThrowableCount}{(}{recursiveCause}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{recursiveCause}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{recursiveCause}{=}{{new}{{ExceptionWithCause}}{(}{a}{)}}}{;}}}
{AST_ROOT_SC2NF{{private}{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{protected}{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{new}{{Boolean}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{Boolean}{.}{valueOf}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{new}{{Boolean}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyReflectionRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StringWriter}}{{stringWriter}{=}{{newStringWriter}{(}{str}{)}}}{;}}{{{this}{.}{unescape}{(}{stringWriter}{,}{str}{)}}{;}}{{return}{{stringWriter}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{StringWriter}}{{stringWriter}{=}{{newStringWriter}{(}{str}{)}}}{;}}{{{this}{.}{escape}{(}{stringWriter}{,}{str}{)}}{;}}{{return}{{stringWriter}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{CharSet.EMPTY}{,}{{CharSet}{.}{getInstance}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{CharSet}}{{chars}{=}{{evaluateSet}{(}{set}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharSet}}{{chars}{=}{{evaluateSet}{(}{set}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharSet}}{{chars}{=}{{evaluateSet}{(}{set}{)}}}{;}}}
{AST_ROOT_SC2NF{{{stopTime}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{{stopTime}{=}{{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{stopTime}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{runningState}}{==}{STATE_RUNNING}}{)}{{{}{{{stopTime}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{containsCsvChars}{(}{str}{)}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MessageFormat}}{{f}{=}{{createMessageFormat}{(}{pattern}{)}}}{;}}}
{AST_ROOT_SC2NF{{{subformats}{.}{put}{(}{INTEGER}{,}{{NumberFormat}{.}{getIntegerInstance}{(}{{getLocale}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{NumberFormat}{.}{getIntegerInstance}{(}{Locale.US}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{splitByWholeSeparator}{(}{str}{,}{separator}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{clazz}{=}{{Class}{.}{forName}{(}{{toProperClassName}{(}{className}{)}}{,}{initialize}{,}{classLoader}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{containsAny}{(}{quoteless}{,}{CSV_SEARCH_CHARS}{)}}{)}{{{}{{{str}{=}{{StringUtils}{.}{replace}{(}{quoteless}{,}{{STRING_CONSTANT}{+}{CSV_QUOTE}{+}{CSV_QUOTE}}{,}{CSV_QUOTE_STR}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{replaceChars}{==}{null}}{)}{{{}{{{replaceChars}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{isEmpty}{(}{remove}{)}}}{)}{{{}{{return}{str}{;}}{}}}}{{return}{{replace}{(}{str}{,}{remove}{,}{STRING_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{ExtendedMessageFormat}}{(}{pattern}{,}{locale}{,}{{ExtendedMessageFormat}{.}{createDefaultMetaFormat}{(}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{pattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{pattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{mid}{=}{{{(}{{low}{+}{high}}{)}}{>}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{osName}{.}{toLowerCase}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{{Integer}{.}{toHexString}{(}{ch}{)}}{.}{toUpperCase}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{ioe}{.}{printStackTrace}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{ioe}{.}{printStackTrace}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{ioe}{.}{printStackTrace}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{ioe}{.}{printStackTrace}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{getRegistry}{()}}{.}{remove}{(}{{toIdentityHashCodeInteger}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{getRegistry}{()}}{.}{add}{(}{{toIdentityHashCodeInteger}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{getRegistry}{()}}{.}{contains}{(}{{toIdentityHashCodeInteger}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{roundUp}{=}{{offset}{>}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{runningState}}{==}{STATE_UNSTARTED}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{this}{.}{startTime}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{startTime}}{+=}{{(}{{{System}{.}{currentTimeMillis}{()}}{-}{{this}{.}{stopTime}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopTime}}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{stopTime}}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{runningState}}{==}{STATE_RUNNING}}{)}{{{}{{{{this}{.}{stopTime}}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableErrorTestCase}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableExceptionTestCase}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableRuntimeExceptionTestCase}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionUtilsTestCase}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{Boolean}}{)}{{IS_SYNTHETIC}{.}{invoke}{(}{m}{,}{null}{)}}}{)}}{.}{booleanValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{objects}{[}{NUMBER_CONSTANT}{]}}{=}{{(}{{Object}}{)}{simple}}}{;}}}
{AST_ROOT_SC2NF{{{{objectsLevel2}{[}{NUMBER_CONSTANT}{]}}{=}{{(}{{Object}}{)}{objects}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{boolean}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{float}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{double}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{byte}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{char}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{short}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{int}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{long}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{array}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{{Object}}{[]}}{)}{{array}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{cloned.chars}{!=}{null}}{)}{{{}{{{cloned.chars}{=}{{(}{{char}{[]}}{)}{{cloned.chars}{.}{clone}{()}}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{checkTokenized}{()}}{;}}{{return}{{(}{{{String}}{[]}}{)}{{tokens}{.}{clone}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Throwable}}{getCause}{()}{{{}{{return}{cause}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{toString}{;}}{}}}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendln}{(}{{(}{{Object}}{)}{FOO}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{msg}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{msg}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{msg}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{splitOnNullResults}{=}{{StringUtils}{.}{splitByWholeSeparator}{(}{STRING_CONSTANT}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ObjectUtils}{.}{appendIdentityToString}{(}{{this}{.}{getStringBuffer}{()}}{,}{object}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ObjectUtils}{.}{appendIdentityToString}{(}{buffer}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{pBaseStr}{=}{{{p}{.}{getClass}{()}}{.}{getName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{DEFAULT_MESSAGE}{)}{;}}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Nestable}}{{n}{=}{{new}{{UnhandledException}}{(}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{throw}{{new}{{NestableRuntimeException}}{(}{{STRING_CONSTANT}{+}{unicode}}{,}{nfe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{{Entities.ISO8859_1_ARRAY}{[}{{i}{%}{Entities.ISO8859_1_ARRAY.length}}{]}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{{Entities.HTML40_ARRAY}{[}{{i}{%}{Entities.HTML40_ARRAY.length}}{]}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Collection}}{collection}}}
{AST_ROOT_SC2NF{{{Collection}}{collection}}}
{AST_ROOT_SC2NF{{{Iterator}}{iterator}}}
{AST_ROOT_SC2NF{{{Iterator}}{iterator}}}
{AST_ROOT_SC2NF{{{Iterator}}{it}}}
{AST_ROOT_SC2NF{{{Iterator}}{it}}}
{AST_ROOT_SC2NF{{{List}}{tokens}}}
{AST_ROOT_SC2NF{{{List}}{tokens}}}
{AST_ROOT_SC2NF{{{List}}{list}}}
{AST_ROOT_SC2NF{{public}{{Byte}}{toByte}{()}{{{}{{return}{{new}{{Byte}}{(}{{byteValue}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{new}{{Byte}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mutNum}{.}{compareTo}{(}{{new}{{Byte}}{(}{{(}{byte}{)}{NUMBER_CONSTANT}}{)}}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{byte}{[]}}{)}{{add}{(}{array}{,}{index}{,}{{new}{{Byte}}{(}{element}{)}}{,}{Byte.TYPE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{new}{{Byte}}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{Class}}{type}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{getCauseMethodNameList}{()}}}{;}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{getCauseMethodNameList}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{Map}}{registry}}}
{AST_ROOT_SC2NF{{{Map}}{registry}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Class}}{{lhsClass}{=}{{lhs}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{Class}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{Collection}}{excludeFields}}}
{AST_ROOT_SC2NF{{{Class}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{{cls}{=}{{target}{.}{getClass}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{Class}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{Collection}}{collection}}}
{AST_ROOT_SC2NF{{{Collection}}{excludeFieldNames}}}
{AST_ROOT_SC2NF{{{Class}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{List}}{priorVariables}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{clss}}}
{AST_ROOT_SC2NF{{{Class}}{{clss}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{newArrayComponentType}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{expected}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{Class}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{Collection}}{excludeFields}}}
{AST_ROOT_SC2NF{{{Collection}}{excludeFields}}}
{AST_ROOT_SC2NF{{{Class}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{{Class}}{clazz}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{if}{(}{{methodNames}{==}{null}}{)}{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES}{)}{{{}{{{methodNames}{=}{CAUSE_METHOD_NAMES}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES}{)}{{{}{{return}{{getCause}{(}{throwable}{,}{CAUSE_METHOD_NAMES}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{list}{.}{remove}{(}{methodName}{)}}{)}{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES}{)}{{{}{{{CAUSE_METHOD_NAMES}{=}{{toArray}{(}{list}{)}}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{list}{.}{add}{(}{methodName}{)}}{)}{{{}{{synchronized}{(}{CAUSE_METHOD_NAMES}{)}{{{}{{{CAUSE_METHOD_NAMES}{=}{{toArray}{(}{list}{)}}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{Iterator}}{it}}}
{AST_ROOT_SC2NF{{{Iterator}}{it}}}
{AST_ROOT_SC2NF{{{Iterator}}{it}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{ObjectUtils.NULL}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{obj}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{boolean}{[]}}{)}{{add}{(}{array}{,}{index}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{element}{)}}{,}{Boolean.TYPE}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{BooleanUtils}{.}{toBooleanObject}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}{{return}{{getPackageName}{(}{{cls}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{comparison}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{{comparison}{=}{{NumberUtils}{.}{compare}{(}{lhs}{,}{rhs}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{comparison}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{{comparison}{=}{{NumberUtils}{.}{compare}{(}{lhs}{,}{rhs}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{NumberUtils}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{NumberUtils}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{compare}{=}{{{(}{{(}{{Comparable}}{)}{num1}}{)}}{.}{compareTo}{(}{num2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Map}}{map}}}
{AST_ROOT_SC2NF{{{Collection}}{collection}}}
{AST_ROOT_SC2NF{{{Comparator}}{comparator}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Map}}{map}}}
{AST_ROOT_SC2NF{{public}{{{String}}{[]}}{getExcludeFieldNames}{()}{{{}{{return}{{this}{.}{excludeFieldNames}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{unescapeJava}{(}{out}{,}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{unescapeJava}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{escapeJavaStyleString}{(}{out}{,}{str}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{escapeJavaStyleString}{(}{str}{,}{true}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{escapeJavaStyleString}{(}{out}{,}{str}{,}{false}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{escapeJavaStyleString}{(}{str}{,}{false}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils.UNESCAPE_CSV}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils.ESCAPE_CSV}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils.UNESCAPE_XML}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils.ESCAPE_XML}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils.UNESCAPE_HTML4}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils.ESCAPE_HTML4}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils.UNESCAPE_ECMASCRIPT}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{UnescapeUtils.UNESCAPE_JAVA}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils.ESCAPE_ECMASCRIPT}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{EscapeUtils.ESCAPE_JAVA}{.}{translate}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{void}{setValue}{(}{{{Object}}{value}}{)}{;}}}
{AST_ROOT_SC2NF{{{Object}}{getValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{modify}{(}{truncated}{,}{field}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{rounded}{,}{field}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{target}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{throw}{{new}{{UnhandledException}}{(}{{STRING_CONSTANT}{+}{unicode}}{,}{nfe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertGetClassThrowsIllegalArgument}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{throw}{{new}{{UnhandledException}}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{buffer}{=}{{new}{{char}{[}}{capacity}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{message}{+}{value}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{message}{+}{value}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{message}{+}{value}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{getMessage}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{getMessage}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{getMessage}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{new}{{Float}}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{new}{{Double}}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{new}{{Short}}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{new}{{Integer}}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{new}{{Long}}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{result}{[}{i}{]}}{=}{{new}{{Character}}{(}{{array}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array2}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array2}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array2}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array2}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array2}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array2}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array2}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array2}}}
{AST_ROOT_SC2NF{{object}{instanceof}{{Map.Entry}}}}
{AST_ROOT_SC2NF{{{Iterator}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{{Iterator}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{{Iterator}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{{Iterator}}{{it}{=}{{collection}{.}{iterator}{()}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{num1}{instanceof}{{Comparable}}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{num}{instanceof}{{Comparable}}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{oos}{.}{writeObject}{(}{{new}{{ClassNotFoundSerializationTest}}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{object}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{getPackageName}{(}{{{object}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{object}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{getShortClassName}{(}{{{object}{.}{getClass}{()}}{.}{getName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}{{return}{{{cls}{.}{getPackage}{()}}{.}{getName}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{isEscapingPlus}{()}}}
{AST_ROOT_SC2NF{{{uu}{.}{setEscapingPlus}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{uu}{=}{{new}{{UnicodeUnescaper}}{(}{UnicodeUnescaper.PARAM.escapePlus}{)}}}{;}}}
{AST_ROOT_SC2NF{{isSet}{(}{PARAM.escapePlus}{)}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{result}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{canonicalClassNameBuffer}{=}{{new}{{StringBuffer}}{(}{className}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{classNameBuffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{arrayPrefix}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{(}{strLen}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuffer}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toLowerCase}{(}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{str}{.}{substring}{(}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuffer}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toTitleCase}{(}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{str}{.}{substring}{(}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{outputLength}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{strLength}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{bufSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{bufSize}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{toString}{=}{{{{{{new}{{StringBuffer}}{(}{NUMBER_CONSTANT}{)}}{.}{append}{(}{{getNumerator}{()}}{)}}{.}{append}{(}{CHAR_CONS}{)}}{.}{append}{(}{{getDenominator}{()}}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{CharRange}}{{range}{=}{{new}{{CharRange}}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Collection}}{collection}}}
{AST_ROOT_SC2NF{{{Collection}}{collection}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Map}}{map}}}
{AST_ROOT_SC2NF{{{Collection}}{coll}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{Class}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Class}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{Collection}}{)}{null}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{Collection}}{)}{null}}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{Iterator}}{)}{null}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{join}{(}{{(}{{Iterator}}{)}{null}}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{exceptionType}}}
{AST_ROOT_SC2NF{{{Class}}{c}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{ClassUtils}{.}{isAssignable}{(}{{(}{{Class}}{)}{null}}{,}{null}{,}{true}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{ClassUtils}{.}{isAssignable}{(}{{(}{{Class}}{)}{null}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ClassUtils}{.}{getPackageName}{(}{{(}{{Class}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iMap}{=}{{new}{{HashMap}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{[]}}{c}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendWithSeparators}{(}{{(}{{Iterator}}{)}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendWithSeparators}{(}{{(}{{Collection}}{)}{null}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendAll}{(}{{(}{{Iterator}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendAll}{(}{{(}{{Collection}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFormattedExceptionMessage}{(}{{{String}}{baseMessage}}{)}{{{}{{return}{{{this}{.}{exceptionContext}}{.}{getFormattedExceptionMessage}{(}{baseMessage}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFormattedExceptionMessage}{(}{{{String}}{baseMessage}}{)}{{{}{{return}{{{this}{.}{exceptionContext}}{.}{getFormattedExceptionMessage}{(}{baseMessage}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Serializable}}{value}}}
{AST_ROOT_SC2NF{{{Serializable}}{value}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buffer}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{Class}}{[]}}{c}}}
{AST_ROOT_SC2NF{{{values}{=}{{new}{{HashMap}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{tok}{.}{getTokenList}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Map}}{{map}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{FormatFactory}}{>}}{registry}}}
{AST_ROOT_SC2NF{{{Map}}{registry}}}
{AST_ROOT_SC2NF{{{Map}}{registry}}}
{AST_ROOT_SC2NF{{{String}}{{toString}{=}{{ReflectionToStringBuilder}{.}{toStringExclude}{(}{{new}{{TestFixture}}{()}}{,}{{(}{{Collection}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{toString}{=}{{ReflectionToStringBuilder}{.}{toStringExclude}{(}{{new}{{TestFixture}}{()}}{,}{{new}{{ArrayList}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{object}{,}{{getDefaultStyle}{()}}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{element}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{{this}{.}{comparator}}{.}{compare}{(}{{this}{.}{getMinimum}{()}}{,}{element}{)}}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils}{.}{unescapeCsv}{(}{writer}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils}{.}{escapeCsv}{(}{writer}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils}{.}{unescapeJava}{(}{writer}{,}{original}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringEscapeUtils}{.}{escapeJava}{(}{writer}{,}{original}{)}}{;}}}
{AST_ROOT_SC2NF{{{Comparator}}{c}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{initialize}{()}}{;}}{}}}{finally}{{{}{{if}{(}{{executor}{!=}{null}}{)}{{{}{{{executor}{.}{shutdown}{()}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{executor}{=}{exec}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{translators}}{=}{translators}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{chars}{,}{index}{,}{DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EXCEPTION_MESSAGE}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{collection}{,}{index}{,}{DEFAULT_VALID_INDEX_COLLECTION_EXCEPTION_MESSAGE}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{array}{,}{index}{,}{DEFAULT_VALID_INDEX_ARRAY_EXCEPTION_MESSAGE}{,}{index}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{values2}{=}{{ArrayUtils}{.}{addAll}{(}{values}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{values2}{=}{{ArrayUtils}{.}{add}{(}{values}{,}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{,}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{calendar}{.}{getTime}{()}}{;}}{{{calendar}{=}{{(}{{Calendar}}{)}{{calendar}{.}{clone}{()}}}}{;}}{{{calendar}{.}{setTimeZone}{(}{mTimeZone}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{element}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{{this}{.}{comparator}}{.}{compare}{(}{element}{,}{{getMaximum}{()}}{)}}{>}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{element}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{{this}{.}{comparator}}{.}{compare}{(}{element}{,}{{getMinimum}{()}}{)}}{<}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{getCauseUsingFieldName}{(}{throwable}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{chars}{,}{index}{,}{DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EXCEPTION_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{collection}{,}{index}{,}{DEFAULT_VALID_INDEX_COLLECTION_EXCEPTION_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{validIndex}{(}{array}{,}{index}{,}{DEFAULT_VALID_INDEX_ARRAY_EXCEPTION_MESSAGE}{,}{{Integer}{.}{valueOf}{(}{index}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{noNullElements}{(}{iterable}{,}{DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{noNullElements}{(}{array}{,}{DEFAULT_NO_NULL_ELEMENTS_ARRAY_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notBlank}{(}{chars}{,}{DEFAULT_NOT_BLANK_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{chars}{,}{DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{map}{,}{DEFAULT_NOT_EMPTY_MAP_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{collection}{,}{DEFAULT_NOT_EMPTY_COLLECTION_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notEmpty}{(}{array}{,}{DEFAULT_NOT_EMPTY_ARRAY_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{notNull}{(}{object}{,}{DEFAULT_IS_NULL_EXCEPTION_MESSAGE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrLookup}}{variableResolver}}}
{AST_ROOT_SC2NF{{{StrLookup}}{{resolver}{=}{{getVariableResolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrLookup}}{variableResolver}}}
{AST_ROOT_SC2NF{{{StrLookup}}{variableResolver}}}
{AST_ROOT_SC2NF{{{StrLookup}}{variableResolver}}}
{AST_ROOT_SC2NF{{public}{StrSubstitutor}{()}{{{}{{this}{(}{{(}{{StrLookup}}{)}{null}}{,}{DEFAULT_PREFIX}{,}{DEFAULT_SUFFIX}{,}{DEFAULT_ESCAPE}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{{m}{!=}{null}}{&&}{{Modifier}{.}{isPublic}{(}{{m}{.}{getModifiers}{()}}{)}}}{&&}{{!}{{isSynthetic}{(}{m}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{validateEmptyToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{registry}{.}{get}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{suffix}{==}{null}}}{)}{{{}{{return}{{(}{{{str}{==}{null}}{&&}{{suffix}{==}{null}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{{new}{{StringBuilder}}{(}{str}{)}}{.}{reverse}{()}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{str}{==}{null}}{)}}{||}{{(}{{searchStrs}{==}{null}}{)}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{smallestIndexOfDiff}{==}{{-}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{if}{(}{{at}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{{str}{.}{indexOf}{(}{remove}{)}}{==}{{-}{NUMBER_CONSTANT}}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{pos}{==}{{-}{NUMBER_CONSTANT}}}{||}{{pos}{==}{{(}{{{str}{.}{length}{()}}{-}{{separator}{.}{length}{()}}}{)}}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{indexOfAnyBut}{(}{cs}{,}{valid}{)}}{==}{{-}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isEmpty}{(}{cs}{)}}{||}{{isEmpty}{(}{searchChars}{)}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{indexOfAny}{(}{cs}{,}{{searchChars}{.}{toCharArray}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchStr}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{str}{)}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchChar}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{str}{)}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{str}{.}{lastIndexOf}{(}{searchChar}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{str}{.}{indexOf}{(}{searchStr}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}{{return}{{str}{.}{indexOf}{(}{searchStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{(}{{start}{!=}{strLen}}{)}}{&&}{{(}{{{stripChars}{.}{indexOf}{(}{{str}{.}{charAt}{(}{start}{)}}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{CharSequenceUtils}{.}{reverse}{(}{str}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{char}{searchChar}}}
{AST_ROOT_SC2NF{{char}{searchChar}}}
{AST_ROOT_SC2NF{{char}{searchChar}}}
{AST_ROOT_SC2NF{{char}{searchChar}}}
{AST_ROOT_SC2NF{{char}{searchChar}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{args}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{args}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{args}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{args}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{parsePatterns}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{parsePatterns}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{strs}}}
{AST_ROOT_SC2NF{{{{CharSequence}}{[]}}{css}}}
{AST_ROOT_SC2NF{{{{Boolean}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{delimiters}}}
{AST_ROOT_SC2NF{{{char}{[]}}{delimiters}}}
{AST_ROOT_SC2NF{{{char}{[]}}{delimiters}}}
{AST_ROOT_SC2NF{{{char}{[]}}{delimiters}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{parameterTypes}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{args}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{args}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{searchStrings}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableDouble}}{(}{STRING_CONSTANT}{)}}{.}{floatValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{false}{,}{reflectUpToClass}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{isAssignable}{(}{midClass}{,}{superClass}{)}}{&&}{{isAssignable}{(}{{(}{{Type}}{)}{genericInterface}}{,}{{(}{{Type}}{)}{midClass}}{)}}}}
{AST_ROOT_SC2NF{{{{listeners}{.}{fire}{()}}{.}{propertyChange}{(}{{new}{{PropertyChangeEvent}}{(}{this}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{property}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{notNull}{(}{listener}{,}{STRING_CONSTANT}{)}}{;}}{{{listeners}{.}{add}{(}{NUMBER_CONSTANT}{,}{listener}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtilsTest}{.}{<}{{String}}{>}{toArrayPropagatingType}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtils}{.}{<}{{String}}{>}{toArray}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtilsTest}{.}{toArrayPropagatingType}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{{String}}{[]}}{{array}{=}{{ArrayUtils}{.}{toArray}{()}}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{array.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{StringUtils}{.}{indexOfDifference}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{results}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{{results}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{concatWith}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{concat}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{parseDate}{(}{dateStr}{,}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{DEFAULT_VALID_STATE_EX_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{StringBuilder}}{(}{{{annotationType}{==}{null}}{?}{null}{:}{{annotationType}{.}{getName}{()}}}{)}}{.}{insert}{(}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{.}{toString}{()}}{;}}}
{AST_ROOT_SC2NF{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}}
{AST_ROOT_SC2NF{{{}{{return}{{isAssignable}{(}{cls}{,}{toClass}{,}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isAssignable}{(}{classArray}{,}{toClassArray}{,}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{boolean}{{atLeastJava14}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{isJavaVersionMatch}{(}{JAVA_VERSION_TRIMMED}{,}{versionPrefix}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{new}{{BigDecimal}}{(}{STRING_CONSTANT}{)}}{,}{{NumberUtils}{.}{createNumber}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{NUMBER_CONSTANT}{)}}{)}{{{}{{{assertEquals}{(}{message}{,}{expected}{,}{actual}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{static}{{JavaVersion}}{getJavaVersion}{(}{{final}{{String}}{nom}}{)}{{{}{{return}{{getJavaVersion}{(}{nom}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{options}{==}{null}}{)}}{?}{false}{:}{{options}{.}{contains}{(}{opt}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{StringUtils}{.}{isNumeric}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{StringUtils}{.}{isAlphanumeric}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{StringUtils}{.}{isAlpha}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{DateUtils.UTC_TIME_ZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Pair}}{<}{{IDKey}}{,}{{IDKey}}{>}}{{swappedPair}{=}{{Pair}{.}{of}{(}{pair.right}{,}{pair.left}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{isEquals}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Integer}}{build}{()}{{{}{{return}{{toHashCode}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toComparison}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HashCodeBuilder}}{.}{class}}}
{AST_ROOT_SC2NF{{{HashCodeBuilder}}{.}{class}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuilder}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toLowerCase}{(}{{cs}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{CharSequenceUtils}{.}{subSequence}{(}{cs}{,}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{{new}{{StringBuilder}}{(}{strLen}{)}}{.}{append}{(}{{Character}{.}{toTitleCase}{(}{{cs}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{.}{append}{(}{{CharSequenceUtils}{.}{subSequence}{(}{cs}{,}{NUMBER_CONSTANT}{)}}{)}}}
{AST_ROOT_SC2NF{{{String}}{cs}}}
{AST_ROOT_SC2NF{{return}{{sequenceToString}{(}{{str}{.}{subSequence}{(}{start}{,}{end}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{sequenceToString}{(}{{str}{.}{subSequence}{(}{start}{,}{{str}{.}{length}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{set}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{parameterTypes}{[]}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{classes}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{classes}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{toClassArray}}}
{AST_ROOT_SC2NF{{{char}{[]}}{chars}}}
{AST_ROOT_SC2NF{{{char}{[]}}{chars}}}
{AST_ROOT_SC2NF{{return}{{types}{.}{toArray}{(}{{new}{{{Type}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{frames}{.}{toArray}{(}{{new}{{{String}}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{searchStrs}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{searchStrs}}}
{AST_ROOT_SC2NF{{{char}{[]}}{searchChars}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{strs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{input}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{(}{{idx}{=}{{indexOfSequence}{(}{str}{,}{sub}{,}{idx}{)}}}{)}}{!=}{INDEX_NOT_FOUND}}}
{AST_ROOT_SC2NF{{{tmp}{=}{{lastIndexOfSequence}{(}{str}{,}{search}{,}{{str}{.}{length}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{tmp}{=}{{indexOfSequence}{(}{str}{,}{search}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{searchChars}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{containsAny}{(}{cs}{,}{{toCharArraySequence}{(}{searchChars}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{regionMatchesSequence}{(}{str}{,}{true}{,}{i}{,}{searchStr}{,}{NUMBER_CONSTANT}{,}{len}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{return}{{{indexOfSequence}{(}{seq}{,}{searchSeq}{,}{NUMBER_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{{indexOfSequence}{(}{seq}{,}{searchChar}{,}{NUMBER_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{seq}{==}{null}}{||}{{searchSeq}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{StringUtils}{.}{lastIndexOfSequence}{(}{seq}{,}{searchSeq}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{StringUtils}{.}{lastIndexOfSequence}{(}{seq}{,}{searchSeq}{,}{{seq}{.}{length}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{StringUtils}{.}{lastIndexOfSequence}{(}{seq}{,}{searchChar}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{StringUtils}{.}{lastIndexOfSequence}{(}{seq}{,}{searchChar}{,}{{seq}{.}{length}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{seq}{==}{null}}{||}{{searchSeq}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{StringUtils}{.}{indexOfSequence}{(}{seq}{,}{searchSeq}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{seq}{==}{null}}{||}{{searchSeq}{==}{null}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{StringUtils}{.}{indexOfSequence}{(}{seq}{,}{searchSeq}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{StringUtils}{.}{indexOfSequence}{(}{seq}{,}{searchChar}{,}{startPos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{seq}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}{{return}{{StringUtils}{.}{indexOfSequence}{(}{seq}{,}{searchChar}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{value}{==}{NUMBER_CONSTANT}}{?}{false}{:}{true}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{{bool}{.}{booleanValue}{()}}{?}{true}{:}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{Boolean.FALSE}{:}{Boolean.TRUE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{sunAvailable}{)}{{{}{{{result}{=}{{removeAccentsSUN}{(}{input}{)}}}{;}}{}}}{else}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{lastWasGap}{)}{{{}{{{{buf}{[}{{count}{++}}{]}}{=}{ch}}{;}}{{{lastWasGap}{=}{false}}{;}}{}}}{else}{{{}}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{compareTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionCompare}{(}{lhs}{,}{rhs}{,}{false}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{object}{,}{testTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{testTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionHashCode}{(}{initialNonZeroOddNumber}{,}{multiplierNonZeroOddNumber}{,}{object}{,}{false}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{excludeFieldNames}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{return}{{reflectionEquals}{(}{lhs}{,}{rhs}{,}{testTransients}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{excludeFields}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{excludeFieldNames}}{=}{{excludeFieldNamesParam}{.}{clone}{()}}}{;}}{{{Arrays}{.}{sort}{(}{{this}{.}{excludeFieldNames}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{builder}{=}{{new}{{StringBuilder}}{(}{{ClassUtils}{.}{getShortClassName}{(}{this}{,}{null}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{chars}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{R}}{getRightElement}{()}{{{}{{return}{rightElement}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{L}}{getLeftElement}{()}{{{}{{return}{leftElement}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Pair}}{<}{{IDKey}}{,}{{IDKey}}{>}}{{swappedPair}{=}{{Pair}{.}{of}{(}{{pair}{.}{getLeftElement}{()}}{,}{{pair}{.}{getRightElement}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{R}}{{result}{=}{{getRightElement}{()}}}{;}}{{{setRightElement}{(}{value}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{R}}{getValue}{()}{{{}{{return}{{getRightElement}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{final}{{L}}{getKey}{()}{{{}{{return}{{getLeftElement}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleMethod}{(}{{cls}{.}{getMethod}{(}{methodName}{,}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{return}{{(}{null}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleConstructor}{(}{{cls}{.}{getConstructor}{(}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{return}{{(}{null}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{new}{{GregorianCalendar}}{(}{mTimeZone}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{new}{{GregorianCalendar}}{(}{mTimeZone}{,}{mLocale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDateTimeInstance}{(}{dateStyle}{,}{timeStyle}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDateTimeInstance}{(}{dateStyle}{,}{timeStyle}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getTimeInstance}{(}{style}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getTimeInstance}{(}{style}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getTimeInstance}{(}{style}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDateInstance}{(}{style}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDateInstance}{(}{style}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getDateInstance}{(}{style}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getInstance}{(}{pattern}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getInstance}{(}{pattern}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getInstance}{(}{pattern}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CharSequence}}{{_ellipsis}{=}{{ObjectUtils}{.}{defaultIfNull}{(}{ellipsis}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{padding}{(}{pads}{,}{padChar}{)}}{.}{concat}{(}{str}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{str}{.}{concat}{(}{{padding}{(}{pads}{,}{padChar}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{inputLength}{==}{NUMBER_CONSTANT}}{&&}{{repeat}{<=}{PAD_LIMIT}}}{)}{{{}{{return}{{padding}{(}{repeat}{,}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{pad}{(}{pads}{,}{padChar}{)}}{.}{concat}{(}{str}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{str}{.}{concat}{(}{{pad}{(}{pads}{,}{padChar}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{Locale.GERMANY}{,}{{format1}{.}{getLocale}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Integer}}{{count}{=}{{eventCounts}{.}{get}{(}{eventName}{)}}}{;}}{{return}{{{count}{==}{null}}{?}{NUMBER_CONSTANT}{:}{count}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{R}}{{result}{=}{{getRight}{()}}}{;}}{{{setRightElement}{(}{value}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isSet}{(}{OPTION.semiColonRequired}{)}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{if}{(}{{isSet}{(}{OPTION.errorIfNoSemiColon}{)}}{)}{{{}{{throw}{{new}{{RuntimeException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{int}{{delimLen}{=}{{(}{{{delimiters}{==}{null}}{?}{{-}{NUMBER_CONSTANT}}{:}{delimiters.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{IllegalArgumentException}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{timeToLive}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{timeToLive}{+}{STRING_CONSTANT}{+}{text}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{StringUtils}{.}{isEmpty}{(}{str}{)}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{toCharacterObject}{(}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldUtils}{.}{writeField}{(}{field}{,}{publicChild}{,}{{new}{{Integer}}{(}{Integer.MAX_VALUE}{)}}{)}}{;}}{}}}{{catch}{(}{{{IllegalAccessException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{Integer}}{{val}{=}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{val}{=}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{appendln}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{iInteger}{=}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{value}{=}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{map}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{map}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{coll}{.}{add}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{coll}{.}{add}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{sb1}{.}{equals}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{numA}{.}{equals}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableInt}}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{intValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{f1}{.}{equals}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{i}{=}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{i}{=}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DurationFormatUtils.Token}}{{numToken}{=}{{new}{{DurationFormatUtils.Token}}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{map}{.}{put}{(}{STRING_CONSTANT}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Integer}}{getValue}{()}{{{}{{return}{{new}{{Integer}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{new}{{Long}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{new}{{Long}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{new}{{Long}}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{mutNumA}{.}{equals}{(}{{new}{{Long}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableLong}}{(}{{new}{{Long}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{longValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Long}}{getValue}{()}{{{}{{return}{{new}{{Long}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Short}}{getValue}{()}{{{}{{return}{{new}{{Short}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{new}{{Short}}{(}{{(}{short}{)}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{new}{{Short}}{(}{{(}{short}{)}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{,}{{new}{{Double}}{(}{value}{)}}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{{Float}}{getValue}{()}{{{}{{return}{{new}{{Float}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Double}}{getValue}{()}{{{}{{return}{{new}{{Double}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{FieldUtils}{.}{writeField}{(}{field}{,}{publicChild}{,}{{new}{{Double}}{(}{Double.MAX_VALUE}{)}}{)}}{;}}{}}}{{catch}{(}{{{IllegalAccessException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{args}{=}{{new}{{{Object}}{[]}}{{{}{{new}{{Double}}{(}{STRING_CONSTANT}{)}}{}}}}}{;}}}
{AST_ROOT_SC2NF{{args}{=}{{new}{{{Object}}{[]}}{{{}{STRING_CONSTANT}{,}{{cal}{.}{getTime}{()}}{,}{{new}{{Double}}{(}{STRING_CONSTANT}{)}}{}}}}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{new}{{Float}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{new}{{Float}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{new}{{Float}}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{mutNumA}{.}{equals}{(}{{new}{{Float}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableFloat}}{(}{{new}{{Float}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{floatValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{subtract}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{mutNum}{.}{add}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{{mutNumA}{.}{hashCode}{()}}{==}{{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{.}{hashCode}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{mutNumA}{.}{equals}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{new}{{MutableDouble}}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{doubleValue}{()}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{{new}{{{MutableObject}}{<}{{Double}}{>}}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{,}{{new}{{UnsupportedOperationException}}{(}{java6Exception}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{splitByWholeSeparatorPreserveAllTokens}{(}{null}{,}{STRING_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{splitByWholeSeparator}{(}{null}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{splitByWholeSeparator}{(}{null}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{split}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{split}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{synchronized}{void}{delete}{()}{{{}{{{listField}{.}{removeFirstOccurrence}{(}{{Integer}{.}{valueOf}{(}{{random}{.}{nextInt}{(}{N}{)}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{separator}{=}{{(}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{(}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{(}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}}{;}}}
{AST_ROOT_SC2NF{{{separator}{=}{{{separator}{==}{null}}{?}{STRING_CONSTANT}{:}{separator}}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{value}{)}}}{;}}{{return}{{(}{int}{)}{{(}{{bits}{^}{{(}{{bits}{>}{>}{>}{NUMBER_CONSTANT}}{)}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{{E}}{constant}}{:}{values}{)}{{{}{{{total}{|=}{{(}{{NUMBER_CONSTANT}{<}{<}{{constant}{.}{ordinal}{()}}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{remainder}{=}{{(}{{len}{-}{pos}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{)}}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{obj}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{super}{.}{equals}{(}{o}{)}}{&&}{{(}{{b}{==}{rhs.b}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{a}{==}{rhs.a}}{)}}{;}}}
{AST_ROOT_SC2NF{{{root}{=}{{(}{{{root}{==}{null}}{?}{th}{:}{root}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{super}{.}{equals}{(}{o}{)}}{&&}{{(}{{b}{==}{rhs.b}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{a}{==}{rhs.a}}{)}}{;}}}
{AST_ROOT_SC2NF{{{dev}{=}{{(}{{{observed}{[}{i}{]}}{-}{{expected}{[}{i}{]}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{(}{{pos}{+}{i}}{)}}{>=}{len}}{||}{{{chars}{[}{{pos}{+}{i}}{]}}{!=}{{chars}{[}{{quoteStart}{+}{i}}{]}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{options}{==}{null}}{)}}{?}{false}{:}{{options}{.}{contains}{(}{option}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{result}{!=}{null}}{)}}{?}{result}{:}{value}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{initializer}{!=}{null}}{)}}{?}{{initializer}{.}{get}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{schedFuture}{!=}{null}}{)}}{?}{schedFuture}{:}{{super}{.}{startTimer}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{d2}{=}{{{(}{{tmodd1}{==}{NUMBER_CONSTANT}}{)}}{?}{d1}{:}{{greatestCommonDivisor}{(}{tmodd1}{,}{d1}{)}}}}{;}}}
{AST_ROOT_SC2NF{{long}{{m}{=}{{{(}{{(}{long}{)}{x}}{)}}{*}{{(}{{(}{long}{)}{y}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{long}{{m}{=}{{{(}{{(}{long}{)}{x}}{)}}{*}{{(}{{(}{long}{)}{y}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{power}{%}{NUMBER_CONSTANT}}{)}}{==}{NUMBER_CONSTANT}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{double}{)}{numerator}}{)}}{/}{{(}{{(}{double}{)}{denominator}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{float}{)}{numerator}}{)}}{/}{{(}{{(}{float}{)}{denominator}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{obj}{==}{null}}{)}}{?}{NUMBER_CONSTANT}{:}{{obj}{.}{hashCode}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{object1}{==}{null}}{)}}{||}{{(}{{object2}{==}{null}}{)}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{bf_zero}{.}{setShortValue}{(}{{(}{short}{)}{NUMBER_CONSTANT}}{,}{{(}{short}{)}{j}}{)}}{,}{{(}{short}{)}{{(}{NUMBER_CONSTANT}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{prefix}{==}{null}}}{)}{{{}{{return}{{(}{{{str}{==}{null}}{&&}{{prefix}{==}{null}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{allStringsNull}{||}{{(}{{{longestStrLen}{==}{NUMBER_CONSTANT}}{&&}{{!}{anyStringNull}}}{)}}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{length}{>=}{{str}{.}{length}{()}}}{||}{{length}{<}{{(}{{{middle}{.}{length}{()}}{+}{NUMBER_CONSTANT}}{)}}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{noOfItems}{=}{{(}{{endIndex}{-}{startIndex}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{noOfItems}{=}{{(}{{endIndex}{-}{startIndex}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{match}{||}{{(}{{preserveAllTokens}{&&}{lastMatch}}{)}}}{)}{{{}{{{list}{.}{add}{(}{{str}{.}{substring}{(}{start}{,}{i}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{match}{||}{{(}{{preserveAllTokens}{&&}{lastMatch}}{)}}}{)}{{{}{{{list}{.}{add}{(}{{str}{.}{substring}{(}{start}{,}{i}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{(}{{separator}{==}{null}}{)}}{||}{{(}{{EMPTY}{.}{equals}{(}{separator}{)}}{)}}}{)}{{{}{{return}{{splitWorker}{(}{str}{,}{null}{,}{max}{,}{preserveAllTokens}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{pos}{<}{{(}{{strLen}{-}{closeLen}}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{pos}{==}{INDEX_NOT_FOUND}}{||}{{pos}{==}{{(}{{{str}{.}{length}{()}}{-}{{separator}{.}{length}{()}}}{)}}}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{.}{length}{()}}{<=}{{(}{{pos}{+}{len}}{)}}}{)}{{{}{{return}{{str}{.}{substring}{(}{pos}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{(}{{ret}{==}{Integer.MAX_VALUE}}{)}}{?}{INDEX_NOT_FOUND}{:}{ret}}{;}}}
{AST_ROOT_SC2NF{{startPos}{>}{{(}{{{str}{.}{length}{()}}{-}{{searchStr}{.}{length}{()}}}{)}}}}
{AST_ROOT_SC2NF{{int}{{endLimit}{=}{{{(}{{{str}{.}{length}{()}}{-}{{searchStr}{.}{length}{()}}}{)}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{int}{{delimLen}{=}{{(}{{{delimiters}{==}{null}}{?}{{-}{NUMBER_CONSTANT}}{:}{delimiters.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{delimLen}{=}{{(}{{{delimiters}{==}{null}}{?}{{-}{NUMBER_CONSTANT}}{:}{delimiters.length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{(}{{inputLineLength}{-}{offset}}{)}}{>}{wrapLength}}}
{AST_ROOT_SC2NF{{return}{{{super}{.}{equals}{(}{o}{)}}{&&}{{(}{{b}{==}{rhs.b}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{a}{==}{rhs.a}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{{!}{{(}{{toClass}{.}{isPrimitive}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{boolean}{{b}{=}{{(}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}{)}}}{;}}{{{t}{+=}{{b}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{coll}{==}{null}}{||}{{{coll}{.}{size}{()}}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{triple}{.}{getRight}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{triple}{.}{getRight}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{flag}{,}{{t}{.}{isDaemon}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{triple2}{=}{{Triple}{.}{of}{(}{null}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{original}{=}{{new}{{{Object}}{[]}}{{{}{true}{,}{false}{}}}}}{;}}}
{AST_ROOT_SC2NF{{{fdf}{=}{{getInstance}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Locale}}{getLocale}{()}{{{}{{return}{mLocale}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{mTimeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{getPattern}{()}{{{}{{return}{mPattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Locale}}{getLocale}{()}{{{}{{return}{locale}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{timeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{String}}{getPattern}{()}{{{}{{return}{pattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateFormatSymbols}}{{symbols}{=}{{DateFormatSymbols}{.}{getInstance}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{{validateNullToStringStyleRegistry}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{str}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{||}{{deepEmpty}{(}{set}{)}}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{cls}{!=}{null}}{)}{{return}{cls}{;}}{else}{{throw}{cnfe}{;}}}}
{AST_ROOT_SC2NF{{public}{{Locale}}{getLocale}{()}{{{}{{return}{locale}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{timeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getPattern}{()}{{{}{{return}{pattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Locale}}{getLocale}{()}{{{}{{return}{mLocale}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{TimeZone}}{getTimeZone}{()}{{{}{{return}{mTimeZone}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getPattern}{()}{{{}{{return}{mPattern}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{Runnable}}{()}{{{}{{public}{void}{run}{()}{{{}{{{endOfPeriod}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Locale}}{getLocale}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{Locale}}{getLocale}{(}{)}{;}}}
{AST_ROOT_SC2NF{{@}{Override}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{exceptionContext}{=}{{new}{{DefaultExceptionContext}}{()}}}{;}}{{{super}{.}{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{rangea}{.}{isNegated}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{{new}{{BitField}}{(}{NUMBER_CONSTANT}{)}}{.}{isSet}{(}{clearedBit}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{hc2a}{!=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{sb.buffer.length}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{tok}{.}{hasNext}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{int}{hashCode}{()}{{{}{{return}{{{b}{*}{NUMBER_CONSTANT}}{+}{t}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{parseDateWithLeniency}{(}{str}{,}{parsePatterns}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{parseDateWithLeniency}{(}{str}{,}{parsePatterns}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateParser}}{{parser}{=}{{getInstance}{(}{STRING_CONSTANT}{,}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getInstance}{(}{{FormatCache}{.}{getPatternForStyle}{(}{dateStyle}{,}{null}{,}{locale}{)}}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateFormatSymbols}}{{symbols}{=}{{new}{{DateFormatSymbols}}{(}{locale}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{eraBC}{&&}{{format}{.}{equals}{(}{SHORT_FORMAT}{)}}{&&}{{{locale}{.}{toString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{year}{<}{NUMBER_CONSTANT}}{&&}{{{locale}{.}{toString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{{locale}{.}{toString}{()}}{+}{STRING_CONSTANT}{+}{formattedDate}}{,}{expectedTime}{,}{actualTime}{)}}{;}}}
{AST_ROOT_SC2NF{{{Strategy}}{{strategy}{=}{{cache}{.}{get}{(}{field}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getInstance}{(}{{FormatCache}{.}{getPatternForStyle}{(}{dateStyle}{,}{null}{,}{locale}{)}}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{++}{initializeCalls}}{;}}}
{AST_ROOT_SC2NF{{return}{REPEAT}{;}}}
{AST_ROOT_SC2NF{{return}{initializeCalls}{;}}}
{AST_ROOT_SC2NF{{{this}{.}{value}}{instanceof}{{StringBuffer}}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{expected}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{result}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{(}{dstInit}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{java.lang.IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{nibble}}{)}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{java.lang.IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{nibble}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{HashMap}}{<}{{Boolean}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Boolean}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{System.out}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{System.out}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{output}{=}{{(}{{int}{[]}}{)}{{removeAll}{(}{array}{,}{toRemove}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{boolean}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{double}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{float}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{long}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{char}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{int}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{short}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{byte}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{result}{=}{{(}{{{T}}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{extractIndices}{(}{toRemove}{)}}{)}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{new}{{GregorianCalendar}}{(}{mTimeZone}{,}{mLocale}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{WHITESPACE_BLOCK}{.}{matcher}{(}{{trim}{(}{str}{)}}{)}}{.}{replaceAll}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{{WHITESPACE_PATTERN}{.}{matcher}{(}{{trim}{(}{str}{)}}{)}}{.}{replaceAll}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{padStr}{)}}{)}{{{}{{{padStr}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{padStr}{)}}{)}{{{}{{{padStr}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEmpty}{(}{padStr}{)}}{)}{{{}{{{padStr}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{out}{.}{write}{(}{{STRING_CONSTANT}{+}{{hex}{(}{codepoint}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{double}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{double}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{double}{value}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{double}{value}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Boolean}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Float}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Double}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Byte}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Short}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Integer}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Long}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Character}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Boolean}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Float}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Double}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Byte}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Character}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Short}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Integer}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Long}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{MutableByte}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{byte}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{byte}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{byte}{value}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{byte}{value}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{char}{charAt}{(}{{int}{index}}{)}{{{}{{return}{{seq}{.}{charAt}{(}{index}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CustomCharSequence}{(}{{{CharSequence}}{seq}}{)}{{{}{{{{this}{.}{seq}}{=}{seq}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{{CharSequenceTranslator}}{.}{.}{.}{translators}}}
{AST_ROOT_SC2NF{{{CharSequence}}{input}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{char}{charAt}{(}{{int}{arg0}}{)}{{{}{{return}{{value}{.}{charAt}{(}{arg0}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{MutableInt}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{int}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{int}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{{String}}{msg}}}
{AST_ROOT_SC2NF{{{DateParser}}{getInstance}{(}{{{String}}{format}}{)}{{{}{{return}{{getInstance}{(}{format}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{flag}}}
{AST_ROOT_SC2NF{{{BasicThreadFactory}}{factory}}}
{AST_ROOT_SC2NF{{{{Callable}}{<}{{T}}{>}}{call}}}
{AST_ROOT_SC2NF{{{{Callable}}{<}{{T}}{>}}{call}}}
{AST_ROOT_SC2NF{{{DatePrinter}}{getInstance}{(}{{{String}}{format}}{)}{{{}{{return}{{getInstance}{(}{format}{,}{{TimeZone}{.}{getDefault}{()}}{,}{{Locale}{.}{getDefault}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Formattable}}{formattable}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{coll}}}
{AST_ROOT_SC2NF{{{String}}{language}}}
{AST_ROOT_SC2NF{{{char}{[]}}{str}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{str}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{str}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{{String}}{msg}}}
{AST_ROOT_SC2NF{{{Boolean}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{boolean}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{{Boolean}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{boolean}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{{Boolean}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{boolean}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{boolean}{bool}}}
{AST_ROOT_SC2NF{{boolean}{bool}}}
{AST_ROOT_SC2NF{{boolean}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{boolean}{bool}}}
{AST_ROOT_SC2NF{{boolean}{bool}}}
{AST_ROOT_SC2NF{{{Integer}}{value}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Boolean}}{bool}}}
{AST_ROOT_SC2NF{{{Object}}{obj2}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{String}}{format}}}
{AST_ROOT_SC2NF{{long}{durationMillis}}}
{AST_ROOT_SC2NF{{long}{durationMillis}}}
{AST_ROOT_SC2NF{{boolean}{expression}}}
{AST_ROOT_SC2NF{{{T}}{iterable}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{T}}{chars}}}
{AST_ROOT_SC2NF{{{T}}{chars}}}
{AST_ROOT_SC2NF{{{T}}{map}}}
{AST_ROOT_SC2NF{{{T}}{collection}}}
{AST_ROOT_SC2NF{{{{T}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{boolean}{expression}}}
{AST_ROOT_SC2NF{{int}{nibble}}}
{AST_ROOT_SC2NF{{int}{nibble}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{char}{hexDigit}}}
{AST_ROOT_SC2NF{{char}{hexDigit}}}
{AST_ROOT_SC2NF{{char}{hexDigit}}}
{AST_ROOT_SC2NF{{char}{hexDigit}}}
{AST_ROOT_SC2NF{{{ObjectStreamClass}}{desc}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{objectData}}}
{AST_ROOT_SC2NF{{{InputStream}}{inputStream}}}
{AST_ROOT_SC2NF{{{Serializable}}{obj}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{Character}}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{Character}}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{Character}}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{Character}}{ch}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFieldNamesParam}}}
{AST_ROOT_SC2NF{{boolean}{appendTransients}}}
{AST_ROOT_SC2NF{{boolean}{appendStatics}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{Field}}{field}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{clazz}}}
{AST_ROOT_SC2NF{{{Field}}{field}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{String}}{>}}{collection}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{R}}{right}}}
{AST_ROOT_SC2NF{{{M}}{middle}}}
{AST_ROOT_SC2NF{{{L}}{left}}}
{AST_ROOT_SC2NF{{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{cancel}{(}{{boolean}{mayInterruptIfRunning}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{{ConcurrentInitializer}}{<}{{T}}{>}}{initializer}}}
{AST_ROOT_SC2NF{{{{ConcurrentInitializer}}{<}{{T}}{>}}{initializer}}}
{AST_ROOT_SC2NF{{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{{Throwable}}{ex}}}
{AST_ROOT_SC2NF{{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{{ExecutionException}}{ex}}}
{AST_ROOT_SC2NF{{{OPTION}}{option}}}
{AST_ROOT_SC2NF{{{OPTION}}{.}{.}{.}{options}}}
{AST_ROOT_SC2NF{{{JavaVersion}}{requiredVersion}}}
{AST_ROOT_SC2NF{{{String}}{property}}}
{AST_ROOT_SC2NF{{{String}}{osNamePrefix}}}
{AST_ROOT_SC2NF{{{String}}{versionPrefix}}}
{AST_ROOT_SC2NF{{CollectionHolder}{(}{{{T}}{collection}}{)}{{{}{{{{this}{.}{collection}}{=}{collection}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{replaceTemplate}}}
{AST_ROOT_SC2NF{{public}{void}{testTwo}{(}{{{ChildInterface}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTwo}{(}{{{GrandParentObject}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testTwo}{(}{{{Object}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOne}{(}{{{ParentObject}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOne}{(}{{{GrandParentObject}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testOne}{(}{{{Object}}{obj}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{c}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setValue}{(}{{{Object}}{value}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{oneParameter}{(}{{{String}}{s}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{{Object}}{o}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{{String}}{s}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{double}{d}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{{Integer}}{i}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{foo}{(}{{int}{i}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{bar}{(}{{{Object}}{o}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{bar}{(}{{{String}}{s}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{bar}{(}{{{Integer}}{i}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{canonicalName}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{String}}{canonicalName}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{{String}}{className}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{classes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{.}{.}{.}{classes}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{type}}}
{AST_ROOT_SC2NF{{boolean}{autoboxing}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{classes}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{classNames}}}
{AST_ROOT_SC2NF{{{{HashSet}}{<}{{{Class}}{<}{?}{>}}{>}}{interfacesFound}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{int}{superHashCode}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{short}{value}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{float}{value}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{double}{value}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{char}{value}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{byte}{value}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{boolean}{value}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{String}}{summaryObjectEndText}}}
{AST_ROOT_SC2NF{{{String}}{summaryObjectStartText}}}
{AST_ROOT_SC2NF{{{String}}{sizeEndText}}}
{AST_ROOT_SC2NF{{{String}}{sizeStartText}}}
{AST_ROOT_SC2NF{{{String}}{nullText}}}
{AST_ROOT_SC2NF{{boolean}{fieldSeparatorAtEnd}}}
{AST_ROOT_SC2NF{{boolean}{fieldSeparatorAtStart}}}
{AST_ROOT_SC2NF{{{String}}{fieldSeparator}}}
{AST_ROOT_SC2NF{{{String}}{fieldNameValueSeparator}}}
{AST_ROOT_SC2NF{{{String}}{contentEnd}}}
{AST_ROOT_SC2NF{{{String}}{contentStart}}}
{AST_ROOT_SC2NF{{{String}}{arraySeparator}}}
{AST_ROOT_SC2NF{{{String}}{arrayEnd}}}
{AST_ROOT_SC2NF{{{String}}{arrayStart}}}
{AST_ROOT_SC2NF{{boolean}{arrayContentDetail}}}
{AST_ROOT_SC2NF{{boolean}{defaultFullDetail}}}
{AST_ROOT_SC2NF{{boolean}{useFieldNames}}}
{AST_ROOT_SC2NF{{boolean}{useIdentityHashCode}}}
{AST_ROOT_SC2NF{{boolean}{useShortClassName}}}
{AST_ROOT_SC2NF{{boolean}{useClassName}}}
{AST_ROOT_SC2NF{{{String}}{format}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{{Pair}}{<}{{L}}{,}{{R}}{>}}{other}}}
{AST_ROOT_SC2NF{{void}{warn}{(}{{{String}}{msg}}{)}{{{}{{{System.err}{.}{println}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BitSet}}{coll}}}
{AST_ROOT_SC2NF{{{{HashSet}}{<}{{Integer}}{>}}{coll}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{equals}{(}{{{Object}}{obj}}{)}{{{}{{return}{{EqualsBuilder}{.}{reflectionEquals}{(}{this}{,}{obj}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setObjectReference}{(}{{{TestObjectReference}}{reference}}{)}{{{}{{{{this}{.}{reference}}{=}{reference}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestObjectReference}{(}{{int}{one}}{)}{{{}{{{{this}{.}{one}}{=}{{new}{{TestObject}}{(}{one}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestBCanEqualA}{(}{{int}{b}}{)}{{{}{{{{this}{.}{b}}{=}{b}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestACanEqualB}{(}{{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{public}{void}{setT}{(}{{int}{t}}{)}{{{}{{{{this}{.}{t}}{=}{t}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setB}{(}{{int}{b}}{)}{{{}{{{{this}{.}{b}}{=}{b}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{void}{setA}{(}{{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestObject}{(}{{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{boolean}{enableSubstitutionInVariables}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{{String}}{suffix}}}
{AST_ROOT_SC2NF{{char}{suffix}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{suffixMatcher}}}
{AST_ROOT_SC2NF{{{String}}{prefix}}}
{AST_ROOT_SC2NF{{char}{prefix}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{prefixMatcher}}}
{AST_ROOT_SC2NF{{char}{escapeCharacter}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{source}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{source}}}
{AST_ROOT_SC2NF{{{Object}}{source}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{source}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{source}}}
{AST_ROOT_SC2NF{{{char}{[]}}{source}}}
{AST_ROOT_SC2NF{{{String}}{source}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{variableResolver}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{V}}{>}}{valueMap}}}
{AST_ROOT_SC2NF{{{Object}}{source}}}
{AST_ROOT_SC2NF{{boolean}{isEquals}}}
{AST_ROOT_SC2NF{{boolean}{superEquals}}}
{AST_ROOT_SC2NF{{{String}}{toString}}}
{AST_ROOT_SC2NF{{{String}}{superToString}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{short}{value}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{float}{value}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{double}{value}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{char}{value}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{byte}{value}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{boolean}{value}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{style}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{float}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{float}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{float}{value}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{float}{value}}}
{AST_ROOT_SC2NF{{int}{limit}}}
{AST_ROOT_SC2NF{{{JavaVersion}}{requiredVersion}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{set}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{setStrs}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Date}}{parse}{(}{{{String}}{source}}{)}{throws}{{ParseException}}{{{}{{return}{{parser}{.}{parse}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{{Date}}{date}}}
{AST_ROOT_SC2NF{{long}{millis}}}
{AST_ROOT_SC2NF{{int}{style}}}
{AST_ROOT_SC2NF{{int}{style}}}
{AST_ROOT_SC2NF{{{String}}{pattern}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{char}{[]}}{cbuf}}}
{AST_ROOT_SC2NF{{int}{c}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{mark}{(}{{int}{readAheadLimit}}{)}{{{}{{{mark}{=}{pos}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{int}{startIndex}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{other}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{other}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{int}{length}}}
{AST_ROOT_SC2NF{{int}{length}}}
{AST_ROOT_SC2NF{{int}{length}}}
{AST_ROOT_SC2NF{{int}{startIndex}}}
{AST_ROOT_SC2NF{{int}{start}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{matcher}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{int}{startIndex}}}
{AST_ROOT_SC2NF{{boolean}{value}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{char}{separator}}}
{AST_ROOT_SC2NF{{{String}}{separator}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{?}{>}}{iterable}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Iterator}}{<}{?}{>}}{it}}}
{AST_ROOT_SC2NF{{{{Iterable}}{<}{?}{>}}{iterable}}}
{AST_ROOT_SC2NF{{{T}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{double}{value}}}
{AST_ROOT_SC2NF{{float}{value}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{boolean}{value}}}
{AST_ROOT_SC2NF{{{char}{[]}}{chars}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{str}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{str}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{double}{value}}}
{AST_ROOT_SC2NF{{float}{value}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{boolean}{value}}}
{AST_ROOT_SC2NF{{{char}{[]}}{chars}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{str}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{str}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{CharSequence}}{seq}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{int}{startIndex}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{int}{index}}}
{AST_ROOT_SC2NF{{int}{capacity}}}
{AST_ROOT_SC2NF{{int}{length}}}
{AST_ROOT_SC2NF{{{String}}{newLine}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{private}{void}{readObject}{(}{{{ObjectInputStream}}{in}}{)}{throws}{{ClassNotFoundException}}{{{}{{throw}{{new}{{ClassNotFoundException}}{(}{SerializationUtilsTest.CLASS_NOT_FOUND_MESSAGE}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{void}{write}{(}{{int}{arg0}}{)}{throws}{{IOException}}{{{}{{throw}{{new}{{IOException}}{(}{SERIALIZE_IO_EXCEPTION_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{String}}{baseMessage}}}
{AST_ROOT_SC2NF{{{String}}{label}}}
{AST_ROOT_SC2NF{{{String}}{label}}}
{AST_ROOT_SC2NF{{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{{String}}{message}}}
{AST_ROOT_SC2NF{{{MutableShort}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{short}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{short}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{short}{value}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{short}{value}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{Field}}{field}}}
{AST_ROOT_SC2NF{{{String}}{languageCode}}}
{AST_ROOT_SC2NF{{{String}}{countryCode}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{String}}{baseMessage}}}
{AST_ROOT_SC2NF{{{String}}{label}}}
{AST_ROOT_SC2NF{{{String}}{label}}}
{AST_ROOT_SC2NF{{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{{String}}{message}}}
{AST_ROOT_SC2NF{{{ObjectInputStream}}{objectInputStream}}}
{AST_ROOT_SC2NF{{{ObjectOutputStream}}{objectOutputStream}}}
{AST_ROOT_SC2NF{{{L}}{listener}}}
{AST_ROOT_SC2NF{{{L}}{listener}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{L}}{>}}{listenerInterface}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{T}}{>}}{listenerInterface}}}
{AST_ROOT_SC2NF{{protected}{{String}}{toUtf16Escape}{(}{{int}{codepoint}}{)}{{{}{{return}{{STRING_CONSTANT}{+}{{hex}{(}{codepoint}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{public}{NestableException}{(}{{{Throwable}}{t}}{)}{{{}{{super}{(}{t}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setCause}{(}{{{Throwable}}{cause}}{)}{{{}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ExceptionWithCause}{(}{{{Throwable}}{cause}}{)}{{{}{``;}}{super}{{{setCause}{(}{cause}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{eventTypes}}}
{AST_ROOT_SC2NF{{void}{warn}{(}{{{String}}{msg}}{)}{{{}{{{System.err}{.}{println}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertSupportedEncoding}{(}{{{String}}{name}}{)}{{{}{{{assertTrue}{(}{{STRING_CONSTANT}{+}{name}}{,}{{CharEncoding}{.}{isSupported}{(}{name}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AClass}{(}{{{{AAClass}}{<}{{String}}{>}}{enclosingInstance}}{)}{{{}{{enclosingInstance}{.}{super}{(}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{InspectingClient}{(}{{{TestFixture}}{testFixture}}{)}{{{}{{{{this}{.}{testFixture}}{=}{testFixture}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MutatingClient}{(}{{{TestFixture}}{testFixture}}{)}{{{}{{{{this}{.}{testFixture}}{=}{testFixture}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{strings}}}
{AST_ROOT_SC2NF{{{MutableBoolean}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Boolean}}{value}}}
{AST_ROOT_SC2NF{{boolean}{value}}}
{AST_ROOT_SC2NF{{{Boolean}}{value}}}
{AST_ROOT_SC2NF{{boolean}{value}}}
{AST_ROOT_SC2NF{{{CharRange}}{r}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{CharRange}}{range}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{boolean}{negated}}}
{AST_ROOT_SC2NF{{{Throwable}}{th}}}
{AST_ROOT_SC2NF{{{Throwable}}{th}}}
{AST_ROOT_SC2NF{{{Throwable}}{t}}}
{AST_ROOT_SC2NF{{{String}}{stackTrace}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{{StrTokenizer}}{tokenizer}}}
{AST_ROOT_SC2NF{{{StrTokenizer}}{tokenizer}}}
{AST_ROOT_SC2NF{{{String}}{data}}}
{AST_ROOT_SC2NF{{{StrTokenizer}}{tokenizer}}}
{AST_ROOT_SC2NF{{int}{loopCount}}}
{AST_ROOT_SC2NF{{int}{loopCount}}}
{AST_ROOT_SC2NF{{int}{loopCount}}}
{AST_ROOT_SC2NF{{public}{static}{void}{main}{(}{{{{String}}{[]}}{args}}{)}{{{}{{{{new}{{CharUtilsPerfRun}}{()}}{.}{run}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MutableLong}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{long}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{operand}}}
{AST_ROOT_SC2NF{{long}{operand}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{Number}}{value}}}
{AST_ROOT_SC2NF{{long}{value}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{T}}{obj}}}
{AST_ROOT_SC2NF{{{Object}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{_value}}}
{AST_ROOT_SC2NF{{{T}}{.}{.}{.}{items}}}
{AST_ROOT_SC2NF{{{T}}{.}{.}{.}{items}}}
{AST_ROOT_SC2NF{{{T}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{{T}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{objects}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{T}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{int}{iValue}}{)}{{{}{{return}{{iValue}{%}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{int}{iValue}}{)}{{{}{{return}{{iValue}{%}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{int}{iValue}}{)}{{{}{{return}{{iValue}{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{int}{modify}{(}{{int}{iValue}}{)}{{{}{{return}{iValue}{;}}{}}}}}
{AST_ROOT_SC2NF{{NumberStrategy}{(}{{int}{field}}{)}{{{}{{{{this}{.}{field}}{=}{field}}{;}}{}}}}}
{AST_ROOT_SC2NF{{CopyQuotedStrategy}{(}{{{String}}{formatField}}{)}{{{}{{{{this}{.}{formatField}}{=}{formatField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{field}}}
{AST_ROOT_SC2NF{{{Calendar}}{definingCalendar}}}
{AST_ROOT_SC2NF{{int}{twoDigitYear}}}
{AST_ROOT_SC2NF{{{String}}{source}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{Object}}{parseObject}{(}{{{String}}{source}}{)}{throws}{{ParseException}}{{{}{{return}{{parse}{(}{source}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectInputStream}}{in}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{byte}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{byte}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{short}{holder}}}
{AST_ROOT_SC2NF{{int}{holder}}}
{AST_ROOT_SC2NF{{int}{mask}}}
{AST_ROOT_SC2NF{{{Annotation}}{a}}}
{AST_ROOT_SC2NF{{{{java.lang.Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{String}}{formattedDate}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{boolean}{ignoreEmptyTokens}}}
{AST_ROOT_SC2NF{{boolean}{emptyAsNull}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{trimmer}}}
{AST_ROOT_SC2NF{{char}{ignored}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{ignored}}}
{AST_ROOT_SC2NF{{char}{quote}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{quote}}}
{AST_ROOT_SC2NF{{{String}}{delim}}}
{AST_ROOT_SC2NF{{char}{delim}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{delim}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{String}}{>}}{list}}}
{AST_ROOT_SC2NF{{{String}}{obj}}}
{AST_ROOT_SC2NF{{{String}}{obj}}}
{AST_ROOT_SC2NF{{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{char}{[]}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{int}{codepoint}}}
{AST_ROOT_SC2NF{{CollectionHolder}{(}{{{T}}{collection}}{)}{{{}{{{{this}{.}{collection}}{=}{collection}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{{CharSequence}}{[]}}{.}{.}{.}{lookup}}}
{AST_ROOT_SC2NF{{{R}}{value}}}
{AST_ROOT_SC2NF{{int}{unit}}}
{AST_ROOT_SC2NF{{{Date}}{date}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{void}{setA}{(}{{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestObject}{(}{{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{R}}{value}}}
{AST_ROOT_SC2NF{{{R}}{right}}}
{AST_ROOT_SC2NF{{{L}}{left}}}
{AST_ROOT_SC2NF{{{String}}{toString}}}
{AST_ROOT_SC2NF{{{String}}{toString}}}
{AST_ROOT_SC2NF{{{String}}{toString}}}
{AST_ROOT_SC2NF{{{Type}}{type}}}
{AST_ROOT_SC2NF{{{Type}}{type}}}
{AST_ROOT_SC2NF{{{ParameterizedType}}{parameterizedType}}}
{AST_ROOT_SC2NF{{{WildcardType}}{wildcardType}}}
{AST_ROOT_SC2NF{{{WildcardType}}{wildcardType}}}
{AST_ROOT_SC2NF{{{{TypeVariable}}{<}{?}{>}}{typeVariable}}}
{AST_ROOT_SC2NF{{{{Type}}{[]}}{bounds}}}
{AST_ROOT_SC2NF{{{ParameterizedType}}{type}}}
{AST_ROOT_SC2NF{{c}{=}{{new}{{Comparable}}{()}{{{}{{{@}{Override}}{public}{int}{compareTo}{(}{{{Object}}{other}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}{}}}}}}
{AST_ROOT_SC2NF{{{{Constructor}}{<}{{T}}{>}}{ctor}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{T}}{>}}{cls}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{delimiters}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{CharSequenceTranslator}}{.}{.}{.}{translators}}}
{AST_ROOT_SC2NF{{{{String}}{[]}{[]}}{array}}}
{AST_ROOT_SC2NF{{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{E}}{>}}{enumClass}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{String}}{val}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{CharMatcher}{(}{{char}{ch}}{)}{{{}{``;}}{super}{{{{this}{.}{ch}}{=}{ch}}{;}}{}}}}}
{AST_ROOT_SC2NF{{char}{chars}{[]}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{chars}}}
{AST_ROOT_SC2NF{{char}{.}{.}{.}{chars}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{ExecutorService}}{exec}}}
{AST_ROOT_SC2NF{{{String}}{format}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{{Range}}{<}{{T}}{>}}{other}}}
{AST_ROOT_SC2NF{{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{{{Range}}{<}{{T}}{>}}{otherRange}}}
{AST_ROOT_SC2NF{{{T}}{element}}}
{AST_ROOT_SC2NF{{{T}}{element}}}
{AST_ROOT_SC2NF{{{T}}{element}}}
{AST_ROOT_SC2NF{{{T}}{element}}}
{AST_ROOT_SC2NF{{{T}}{element}}}
{AST_ROOT_SC2NF{{{T}}{element}}}
{AST_ROOT_SC2NF{{{T}}{element}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{int}{threshold}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{strs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{.}{.}{.}{css}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{int}{size}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{T}}{.}{.}{.}{elements}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{CharSequence}}{seq}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{strs}}}
{AST_ROOT_SC2NF{{{String}}{stripChars}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{String}}{str}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{String}}{format}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{ExecutorService}}{exec}}}
{AST_ROOT_SC2NF{{{ExecutorService}}{execDestroy}}}
{AST_ROOT_SC2NF{{{ExecutorService}}{externalExecutor}}}
{AST_ROOT_SC2NF{{{ExecutorService}}{exec}}}
{AST_ROOT_SC2NF{{{Throwable}}{cause}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{{{{Class}}{<}{?}{>}}{[]}}{c}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{{Object}}{o}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{{String}}{s}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{double}{d}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{{Integer}}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{int}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{SimpleReflectionTestFixture}{(}{{{Object}}{o}}{)}{{{}{{{{this}{.}{o}}{=}{o}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{?}{>}}{coll}}}
{AST_ROOT_SC2NF{{{ParsePosition}}{pos}}}
{AST_ROOT_SC2NF{{{String}}{desc}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{String}}{pattern}}}
{AST_ROOT_SC2NF{{{String}}{pattern}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Object}}{.}{.}{.}{keys}}}
{AST_ROOT_SC2NF{{{String}}{pattern}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{count}}}
{AST_ROOT_SC2NF{{int}{superCompareTo}}}
{AST_ROOT_SC2NF{{{Fraction}}{other}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{{Fraction}}{fraction}}}
{AST_ROOT_SC2NF{{int}{power}}}
{AST_ROOT_SC2NF{{public}{BackgroundInitializerTestImpl}{(}{{{ExecutorService}}{exec}}{)}{{{}{{super}{(}{exec}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BackgroundInitializerTestImpl}}{init}}}
{AST_ROOT_SC2NF{{boolean}{fieldSeparatorAtEnd}}}
{AST_ROOT_SC2NF{{boolean}{fieldSeparatorAtStart}}}
{AST_ROOT_SC2NF{{boolean}{arrayContentDetail}}}
{AST_ROOT_SC2NF{{boolean}{defaultFullDetail}}}
{AST_ROOT_SC2NF{{boolean}{useFieldNames}}}
{AST_ROOT_SC2NF{{boolean}{useIdentityHashCode}}}
{AST_ROOT_SC2NF{{boolean}{useShortClassName}}}
{AST_ROOT_SC2NF{{boolean}{useClassName}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{Boolean}}{fullDetailRequest}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{Object}}{value}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{{TestObject}}{rhs}}}
{AST_ROOT_SC2NF{{public}{void}{setA}{(}{{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{TestObject}{(}{{int}{a}}{)}{{{}{{{{this}{.}{a}}{=}{a}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertGetClassThrowsClassNotFound}{(}{{{String}}{className}}{)}{throws}{{Exception}}{{{}{{{assertGetClassThrowsException}{(}{className}{,}{{{ClassNotFoundException}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{assertGetClassThrowsNullPointerException}{(}{{{String}}{className}}{)}{throws}{{Exception}}{{{}{{{assertGetClassThrowsException}{(}{className}{,}{{{NullPointerException}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{public}{void}{removePropertyChangeListener}{(}{{{PropertyChangeListener}}{listener}}{)}{{{}{{{listeners}{.}{removeListener}{(}{listener}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addPropertyChangeListener}{(}{{{PropertyChangeListener}}{listener}}{)}{{{}{{{listeners}{.}{addListener}{(}{listener}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{addVetoableChangeListener}{(}{{{VetoableChangeListener}}{listener}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{String}}{property}}}
{AST_ROOT_SC2NF{{public}{void}{addPropertyChangeListener}{(}{{{PropertyChangeListener}}{listener}}{)}{{{}{{throw}{{new}{{RuntimeException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{addMultipleEventListener}{(}{{{MultipleEventListener}}{listener}}{)}{{{}{{{listeners}{.}{addListener}{(}{listener}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{eventName}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{L}}{>}}{listenerType}}}
{AST_ROOT_SC2NF{{public}{void}{eventOccurred}{(}{{{PropertyChangeEvent}}{e}}{)}{{{}{{{count}{++}}{;}}{}}}}}
{AST_ROOT_SC2NF{{new}{{PropertyChangeListener}}{()}{{{}{{{@}{Override}}{public}{void}{propertyChange}{(}{{{PropertyChangeEvent}}{e}}{)}{{{}}}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{boolean}{colon}}}
{AST_ROOT_SC2NF{{{NumberRule}}{rule}}}
{AST_ROOT_SC2NF{{{NumberRule}}{rule}}}
{AST_ROOT_SC2NF{{TwoDigitNumberField}{(}{{int}{field}}{)}{{{}{{{mField}{=}{field}}{;}}{}}}}}
{AST_ROOT_SC2NF{{UnpaddedNumberField}{(}{{int}{field}}{)}{{{}{{{mField}{=}{field}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{CharacterLiteral}{(}{{char}{value}}{)}{{{}{{{mValue}{=}{value}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectInputStream}}{in}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{{Date}}{date}}}
{AST_ROOT_SC2NF{{{Calendar}}{c}}}
{AST_ROOT_SC2NF{{long}{millis}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{void}{vetoableChange}{(}{{{PropertyChangeEvent}}{e}}{)}{{{}{{{calledListeners}{.}{add}{(}{this}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{void}{vetoableChange}{(}{{{PropertyChangeEvent}}{e}}{)}{{{}{{{listenerSupport}{.}{removeListener}{(}{this}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{listenerSupport}{.}{addListener}{(}{{new}{{VetoableChangeListener}}{()}{{{}{{{@}{Override}}{public}{void}{vetoableChange}{(}{{{PropertyChangeEvent}}{e}}{)}{{{}}}}{}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{key}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{V}}{>}}{map}}}
{AST_ROOT_SC2NF{{{{Map}}{<}{{String}}{,}{{V}}{>}}{map}}}
{AST_ROOT_SC2NF{{{String}}{baseMessage}}}
{AST_ROOT_SC2NF{{{String}}{label}}}
{AST_ROOT_SC2NF{{{String}}{label}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{String}}{input}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{src}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{destClass}}}
{AST_ROOT_SC2NF{{{Member}}{m}}}
{AST_ROOT_SC2NF{{int}{modifiers}}}
{AST_ROOT_SC2NF{{{AccessibleObject}}{o}}}
{AST_ROOT_SC2NF{{{Thread.UncaughtExceptionHandler}}{handler}}}
{AST_ROOT_SC2NF{{int}{prio}}}
{AST_ROOT_SC2NF{{boolean}{f}}}
{AST_ROOT_SC2NF{{{String}}{pattern}}}
{AST_ROOT_SC2NF{{{ThreadFactory}}{factory}}}
{AST_ROOT_SC2NF{{{Thread}}{t}}}
{AST_ROOT_SC2NF{{{Runnable}}{r}}}
{AST_ROOT_SC2NF{{{Builder}}{builder}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{String}}{s}}{:}{strings}{)}{{{}{{if}{(}{{StringUtils}{.}{isNotEmpty}{(}{s}{)}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{long}{{total}{=}{{{System}{.}{currentTimeMillis}{()}}{-}{start}}}{;}}}
{AST_ROOT_SC2NF{{char}{{c}{=}{{Character}{.}{forDigit}{(}{nibble}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{cloneReset}{()}}{;}}{}}}{{catch}{(}{{{CloneNotSupportedException}}{ex}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{StrTokenizer}}{{tok}{=}{{getTSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{StrTokenizer}}{{tok}{=}{{getTSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{StrTokenizer}}{{tok}{=}{{getCSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{StrTokenizer}}{{tok}{=}{{getCSVClone}{()}}}{;}}{{{tok}{.}{reset}{(}{input}{)}}{;}}{{return}{tok}{;}}{}}}}
{AST_ROOT_SC2NF{{{IDKey}}{{idKey}{=}{{(}{{IDKey}}{)}{other}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InterruptedException}}{iex}}{)}{{{}{{{{Thread}{.}{currentThread}{()}}{.}{interrupt}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{index}{=}{{indexOf}{(}{array}{,}{element}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Boolean}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Float}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Byte}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Short}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Long}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Character}}{{b}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{StringUtils}{.}{endsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{StringUtils}{.}{startsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{CharSequence}}{{tmp}{=}{s}}{;}}}
{AST_ROOT_SC2NF{{int}{{smallestIndexOfDiff}{=}{{indexOfDifference}{(}{strs}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{at}{=}{{indexOfDifference}{(}{str1}{,}{str2}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{pads}{=}{{size}{-}{{str}{.}{length}{()}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{pads}{=}{{size}{-}{{str}{.}{length}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{chars}{=}{{str}{.}{toCharArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{pos}{=}{{str}{.}{lastIndexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{pos}{=}{{str}{.}{lastIndexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{pos}{=}{{str}{.}{indexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{pos}{=}{{str}{.}{indexOf}{(}{separator}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{strLen}{=}{{seq}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{ts}{=}{{trim}{(}{str}{)}}}{;}}{{return}{{{isEmpty}{(}{ts}{)}}{?}{null}{:}{ts}}{;}}{}}}}
{AST_ROOT_SC2NF{{short}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ScheduledThreadPoolExecutor}}{{s}{=}{{new}{{ScheduledThreadPoolExecutor}}{(}{THREAD_POOL_SIZE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{canonicalClassNameBuffer}{=}{{new}{{StringBuilder}}{(}{className}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{className}{.}{lastIndexOf}{(}{PACKAGE_SEPARATOR_CHAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Object}}{name}}{:}{coll}{)}{{{}{{if}{(}{{name}{!=}{null}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{buffer}{=}{{pattern}{.}{toCharArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ExtendedMessageFormat}}{{rhs}{=}{{(}{{ExtendedMessageFormat}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{toString}{=}{{AnnotationUtils}{.}{toString}{(}{testAnno}{)}}}{;}}}
{AST_ROOT_SC2NF{{byte}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{{}{{boolean}{{anotherVal}{=}{other.value}}{;}}{{return}{{{value}{==}{anotherVal}}{?}{NUMBER_CONSTANT}{:}{{(}{{value}{?}{NUMBER_CONSTANT}{:}{{-}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{lastTruncateDate}{=}{{dateTimeParser}{.}{parse}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{OctalUnescaper}}{{oue}{=}{{new}{{OctalUnescaper}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringStyle}}{{style}{=}{{new}{{ToStringStyleImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EqualsBuilder}}{{equalsBuilder}{=}{{new}{{EqualsBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{EqualsBuilder}}{{equalsBuilder}{=}{{new}{{EqualsBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TestSubObject}}{{rhs}{=}{{(}{{TestSubObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{{TestObject}}{{rhs}{=}{{(}{{TestObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{str}{=}{{f}{.}{toProperString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{str}{=}{{f}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f1}{.}{compareTo}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f}{=}{{f}{.}{abs}{()}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{ArithmeticException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{f}{=}{{f}{.}{negate}{()}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{ArithmeticException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ExecutorService}}{{exec}{=}{{Executors}{.}{newSingleThreadExecutor}{()}}}{;}}{{{new}{{{CallableBackgroundInitializer}}{<}{{Integer}}{>}}{(}{null}{,}{exec}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrTokenizer}}{{tkn}{=}{{new}{{StrTokenizer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrTokenizer}}{{tok}{=}{{new}{{StrTokenizer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrTokenizer}}{{tok}{=}{{new}{{StrTokenizer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrTokenizer}}{{tok}{=}{{new}{{StrTokenizer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{input}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{tokenizer}{.}{next}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NoSuchElementException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{float}{{anotherVal}{=}{other.value}}{;}}{{return}{{Float}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{chars.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{isException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{getException}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{getResultObject}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{checkInitialize}{()}}}{;}}{{{res}{.}{getInitializer}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{istex}}{)}{{{}{{{initializer}{.}{get}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ExecutorService}}{{exec}{=}{{Executors}{.}{newCachedThreadPool}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MultiBackgroundInitializer.MultiBackgroundInitializerResults}}{{res}{=}{{initializer}{.}{get}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{item}{=}{{array}{[}{i}{]}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{char}{delimiter}}{:}{delimiters}{)}{{{}{{if}{(}{{ch}{==}{delimiter}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{{BackgroundInitializer}}{<}{?}{>}}{bi}}{:}{{childInitializers}{.}{values}{()}}{)}{{{}{{{result}{+=}{{bi}{.}{getTaskCount}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Integer}}{{i}{=}{{Integer}{.}{valueOf}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{millisPerUnit}{=}{{getMillisPerUnit}{(}{unit}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{gval}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}{{{c}{.}{setTime}{(}{date}{)}}{;}}{{return}{c}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{neu}{.}{translate}{(}{input}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{iae}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{NumericEntityUnescaper}}{{neu}{=}{{new}{{NumericEntityUnescaper}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DateParser}}{{parser}{=}{{getInstance}{(}{yMdHmsSZ}{,}{REYKJAVIK}{)}}}{;}}{{{assertEquals}{(}{REYKJAVIK}{,}{{parser}{.}{getTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateParser}}{{parser}{=}{{getInstance}{(}{yMdHmsSZ}{,}{SWEDEN}{)}}}{;}}{{{assertEquals}{(}{SWEDEN}{,}{{parser}{.}{getLocale}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateParser}}{{parser}{=}{{getInstance}{(}{yMdHmsSZ}{)}}}{;}}{{{assertEquals}{(}{yMdHmsSZ}{,}{{parser}{.}{getPattern}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateParser}}{{parser}{=}{{getInstance}{(}{YMD_SLASH}{)}}}{;}}{{{assertTrue}{(}{{{parser}{.}{toString}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{gmt}{=}{{msg}{.}{indexOf}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{object}{=}{{getObject}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{part1}{=}{{{name}{.}{hashCode}{()}}{*}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableDouble}}{{mutNum}{=}{{new}{{MutableDouble}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{systemNewLine}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{systemNewLine}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{BasicThreadFactory}}{{factory}{=}{{new}{{BasicThreadFactory}}{(}{this}{)}}}{;}}{{{reset}{()}}{;}}{{return}{factory}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleConstructor}{(}{{cls}{.}{getConstructor}{(}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{CustomCharSequence}}{{other}{=}{{(}{{CustomCharSequence}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{BasicThreadFactory}}{{factory}{=}{{builder}{.}{build}{()}}}{;}}{{{checkFactoryDefaults}{(}{factory}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{StrLookup}}{<}{?}{>}}{{resolver}{=}{{getVariableResolver}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{buf}{=}{{new}{{StrBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{buf}{=}{{new}{{StrBuilder}}{(}{source}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{{cs}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buffer}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Object}}{object}}{:}{objects}{)}{{{}{{{hash}{=}{{{hash}{*}{NUMBER_CONSTANT}}{+}{{ObjectUtils}{.}{hashCode}{(}{object}{)}}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{values}{!=}{null}}{)}{{{}{{for}{(}{{{T}}{val}}{:}{values}{)}{{{}{{if}{(}{{val}{!=}{null}}{)}{{{}{{return}{val}{;}}{}}}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{buf}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{sub}{.}{replace}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{()}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{sub}{.}{replace}{(}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrSubstitutor}}{{sub}{=}{{new}{{StrSubstitutor}}{(}{values}{)}}}{;}}}
{AST_ROOT_SC2NF{{{FastDateFormat}}{{other}{=}{{(}{{FastDateFormat}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{obj}{=}{{map}{.}{get}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{src}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{short}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Object}}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{long}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{int}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{float}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{double}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{char}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{byte}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{boolean}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{key}}}
{AST_ROOT_SC2NF{{{CompareToBuilder}}{{compareToBuilder}{=}{{new}{{CompareToBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Type}}{{rawType}{=}{{parameterizedType}{.}{getRawType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Type}}{{replacementType}{=}{{typeVarAssigns}{.}{get}{(}{type}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Type}}{bound}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertTrue}{(}{{exceptionType}{.}{isAssignableFrom}{(}{{e}{.}{getClass}{()}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_5}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{autoboxing}{=}{{SystemUtils}{.}{isJavaVersionAtLeast}{(}{JAVA_1_5}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{R}}{{result}{=}{{getRight}{()}}}{;}}{{{setRight}{(}{value}{)}}{;}}{{return}{result}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{properNumerator}{=}{{getProperNumerator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Fraction}}{{other}{=}{{(}{{Fraction}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{Fraction}}{{f}{=}{{this}{.}{multiplyBy}{(}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{greatestCommonDivisor}{(}{numerator}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{E}}{value}}}
{AST_ROOT_SC2NF{{{E}}{constant}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Enum}{.}{valueOf}{(}{enumClass}{,}{enumName}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{return}{null}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{Enum}{.}{valueOf}{(}{enumClass}{,}{enumName}{)}}{;}}{{return}{true}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{return}{false}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{TimeZoneDisplayKey}}{{other}{=}{{(}{{TimeZoneDisplayKey}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{TimeZone}}{{zone}{=}{{calendar}{.}{getTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{len}{=}{{{mValues}{[}{i}{]}}{.}{length}{()}}}{;}}{{if}{(}{{len}{>}{max}}{)}{{{}{{{max}{=}{len}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{FastDatePrinter}}{{other}{=}{{(}{{FastDatePrinter}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Rule}}{rule}}{:}{mRules}{)}{{{}{{{rule}{.}{appendTo}{(}{buf}{,}{calendar}{)}}{;}}{}}}}{{return}{buf}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Calendar}}{{c}{=}{{newCalendar}{()}}}{;}}{{{c}{.}{setTime}{(}{date}{)}}{;}}{{return}{{applyRules}{(}{c}{,}{buf}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Calendar}}{{c}{=}{{newCalendar}{()}}}{;}}{{{c}{.}{setTime}{(}{date}{)}}{;}}{{return}{{applyRulesToString}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Calendar}}{{c}{=}{{newCalendar}{()}}}{;}}{{{c}{.}{setTimeInMillis}{(}{millis}{)}}{;}}{{return}{{applyRulesToString}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{stringMatcher}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{stringMatcher}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{charSetMatcher}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{charMatcher}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{noneMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{quoteMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{doubleQuoteMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{singleQuoteMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{trimMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{splitMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{spaceMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{tabMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrMatcher}}{{matcher}{=}{{StrMatcher}{.}{commaMatcher}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{oldValue}{=}{{this}{.}{property}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Integer}}{{count}{=}{{eventCounts}{.}{get}{(}{eventName}{)}}}{;}}{{return}{{{count}{==}{null}}{?}{NUMBER_CONSTANT}{:}{{count}{.}{intValue}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{char}{{pad}{=}{CHAR_CONS}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{tok2}{=}{{(}{{Token}}{)}{obj2}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{tokens.length}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{str}{=}{{super}{.}{getContent}{()}}}{;}}}
{AST_ROOT_SC2NF{{char}{{buf}{[]}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{int}{{strLen}{=}{{str}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{thisBuf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{str}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{str}{.}{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{buf}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{int}{{newSize}{=}{{{size}{-}{removeLen}}{+}{insertLen}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{endIndex}{-}{startIndex}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{chars.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{iterable}{!=}{null}}{)}{{{}{{for}{(}{{{Object}}{o}}{:}{iterable}{)}{{{}{{{append}{(}{o}{)}}{;}}{}}}}{}}}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Object}}{element}}{:}{array}{)}{{{}{{{append}{(}{element}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{len}{=}{{length}{()}}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{old}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{{char}{[]}}{{old}{=}{buffer}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{textKeyValue}}{:}{{keyValues}{.}{keySet}{()}}{)}{{{}{{{{escapeRegex}{(}{regex}{,}{textKeyValue}{,}{false}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FastDateParser}}{{other}{=}{{(}{{FastDateParser}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInHours}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.YEAR}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInHours}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInHours}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.MONTH}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{expectedValue}{=}{hours}}{;}}}
{AST_ROOT_SC2NF{{long}{{expectedValue}{=}{hours}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aCalendar}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}{{{assertEquals}{(}{minutes}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMinutes}{(}{aDate}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}{{{assertEquals}{(}{minutes}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aDate}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.HOUR_OF_DAY}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aCalendar}{,}{Calendar.MINUTE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInSeconds}{(}{aDate}{,}{Calendar.MINUTE}{)}}}{;}}{{{assertEquals}{(}{seconds}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.MINUTE}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.MINUTE}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aCalendar}{,}{Calendar.SECOND}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{long}{{testResult}{=}{{DateUtils}{.}{getFragmentInMilliseconds}{(}{aDate}{,}{Calendar.SECOND}{)}}}{;}}{{{assertEquals}{(}{millis}{,}{testResult}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{CharRange}}{{rangea}{=}{{CharRange}{.}{isNot}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharRange}}{{rangea}{=}{{CharRange}{.}{is}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{element}}}
{AST_ROOT_SC2NF{{for}{(}{{boolean}{element}}{:}{array}{)}{{{}{{if}{(}{element}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{boolean}{element}}{:}{array}{)}{{{}{{if}{(}{{!}{element}}{)}{{{}{{return}{false}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{intRange}{.}{elementCompareTo}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{str}{=}{{intRange}{.}{toString}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{str}{=}{{intRange}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{,}{NEW_YORK}{)}}}{;}}{{{assertEquals}{(}{NEW_YORK}{,}{{printer}{.}{getTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{,}{SWEDEN}{)}}}{;}}{{{assertEquals}{(}{SWEDEN}{,}{{printer}{.}{getLocale}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{)}}}{;}}{{{assertEquals}{(}{YYYY_MM_DD}{,}{{printer}{.}{getPattern}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DatePrinter}}{{printer}{=}{{getInstance}{(}{YYYY_MM_DD}{)}}}{;}}{{{assertTrue}{(}{{{printer}{.}{toString}{()}}{.}{startsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{NumberUtils}{.}{createNumber}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{String}}{{osName}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{javaVersion}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{File}}{{dir}{=}{{SystemUtils}{.}{getUserHome}{()}}}{;}}}
{AST_ROOT_SC2NF{{{File}}{{dir}{=}{{SystemUtils}{.}{getUserDir}{()}}}{;}}}
{AST_ROOT_SC2NF{{{File}}{{dir}{=}{{SystemUtils}{.}{getJavaIoTmpDir}{()}}}{;}}}
{AST_ROOT_SC2NF{{{File}}{{dir}{=}{{SystemUtils}{.}{getJavaHome}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{assertFalse}{(}{STRING_CONSTANT}{,}{{init}{.}{isStarted}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{init}{.}{get}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{assertNull}{(}{STRING_CONSTANT}{,}{{init}{.}{getActiveExecutor}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{BackgroundInitializerTestImpl}}{{init}{=}{{new}{{BackgroundInitializerTestImpl}}{()}}}{;}}{{{init}{.}{start}{()}}{;}}{{{checkInitialize}{(}{init}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{CharUtils}{.}{toIntValue}{(}{CHAR_CONS}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{CharUtils}{.}{toChar}{(}{{(}{{Character}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{anotherVal}{=}{other.value}}{;}}{{return}{{Double}{.}{compare}{(}{value}{,}{anotherVal}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{bits}{=}{{Double}{.}{doubleToLongBits}{(}{value}{)}}}{;}}{{return}{{(}{int}{)}{{(}{{bits}{^}{{bits}{>}{>}{>}{NUMBER_CONSTANT}}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{o1}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{o1}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TestObject}}{{o1}{=}{{new}{{TestObject}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{CompareToBuilder}{.}{reflectionCompare}{(}{o1}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{TestSubObject}}{{rhs}{=}{{(}{{TestSubObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{{TestObject}}{{rhs}{=}{{(}{{TestObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{long}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{{{Integer}}{[]}}{{iArray}{=}{null}}{;}}{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{iArray}{,}{Integer.MIN_VALUE}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{buf}{=}{{new}{{StringBuffer}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{sb}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IndexOutOfBoundsException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{L}}{listener}}{:}{listeners}{)}{{{}{{{method}{.}{invoke}{(}{listener}{,}{args}{)}}{;}}{}}}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{BitSet}}{{toRemove}{=}{{new}{{BitSet}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{dflt}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{testCalendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{DateUtils}{.}{toCalendar}{(}{null}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{npe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{GregorianCalendar}}{{cal}{=}{{new}{{GregorianCalendar}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Date}}{{base}{=}{{new}{{Date}}{(}{MILLIS_TEST}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{parentClass}{.}{getMethod}{(}{methodName}{,}{parameterTypes}{)}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{getAccessibleMethod}{(}{{cls}{.}{getMethod}{(}{methodName}{,}{parameterTypes}{)}}{)}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Charset}{.}{isSupported}{(}{name}{)}}{;}}{}}}{{catch}{(}{{{IllegalCharsetNameException}}{ex}}{)}{{{}{{return}{false}{;}}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Object}}{{test}{=}{{SerializationUtils}{.}{clone}{(}{null}{)}}}{;}}{{{assertNull}{(}{test}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{new}{{byte}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{}}}{{catch}{(}{{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{byte}{[]}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SerializationException}}{ex}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{InputStream}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{null}{,}{null}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{iMap}{,}{null}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Exception}}{{ex}{=}{{new}{{Exception}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalStateException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{Object}}{{obj}{=}{{new}{{Object}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TestSubObject}}{{rhs}{=}{{(}{{TestSubObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{{TestObject}}{{rhs}{=}{{(}{{TestObject}}{)}{o}}}{;}}}
{AST_ROOT_SC2NF{{{MessageFormat}}{{result}{=}{{new}{{MessageFormat}}{(}{pattern}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Locale}}{locale}}{:}{locales}{)}{{{}{{{checkBuiltInFormat}{(}{pattern}{,}{registry}{,}{args}{,}{locale}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{CharSet}}{{other}{=}{{(}{{CharSet}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{CharRange}}{range}}{:}{set}{)}{{{}{{if}{(}{{range}{.}{contains}{(}{ch}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{sz}{=}{set.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{throw}{{new}{{ExceptionWithoutCause}}{()}}{;}}{}}}{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{return}{t}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mutNum}{.}{compareTo}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mutNum}{.}{setValue}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{new}{{MutableShort}}{(}{{(}{{Number}}{)}{null}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{expected}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{char}{{cur}{=}{current}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharRange}}{{other}{=}{{(}{{CharRange}}{)}{obj}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{start}{>}{end}}{)}{{{}{{char}{{temp}{=}{start}}{;}}{{{start}{=}{end}}{;}}{{{end}{=}{temp}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{SecurityException}}{ex}}{)}{{{}{{{System.err}{.}{println}{(}{{STRING_CONSTANT}{+}{property}{+}{STRING_CONSTANT}}{)}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ConcurrentException}}{cex}}{)}{{{}{{throw}{{new}{{ConcurrentRuntimeException}}{(}{{cex}{.}{getCause}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{V}}{{value}{=}{{map}{.}{get}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{initialize}{(}{initializer}{)}}{;}}{}}}{{catch}{(}{{{ConcurrentException}}{cex}}{)}{{{}{{throw}{{new}{{ConcurrentRuntimeException}}{(}{{cex}{.}{getCause}{()}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{ConcurrentRuntimeException}}{{crex}{=}{{extractCauseUnchecked}{(}{ex}{)}}}{;}}{{if}{(}{{crex}{!=}{null}}{)}{{{}{{throw}{crex}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ConcurrentException}}{{cex}{=}{{extractCause}{(}{ex}{)}}}{;}}{{if}{(}{{cex}{!=}{null}}{)}{{{}{{throw}{cex}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{ByteArrayOutputStream}}{{baos}{=}{{new}{{ByteArrayOutputStream}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{serialize}{(}{obj}{,}{baos}{)}}{;}}{{return}{{baos}{.}{toByteArray}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{message}{=}{{exceptionContext}{.}{getMessage}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{trace}{=}{{ExceptionUtils}{.}{getStackTrace}{(}{exceptionContext}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ex}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Person}}{{p}{=}{{new}{{Person}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MutableFloat}}{{mutNum}{=}{{new}{{MutableFloat}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{Object}}{[]}}{{array}{=}{null}}{;}}{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{ObjectUtils}{.}{hashCodeMulti}{(}{array}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{anotherVal}{=}{other.value}}{;}}}
{AST_ROOT_SC2NF{{{InheritedReflectionStaticFieldsFixture}}{{instance1}{=}{{new}{{InheritedReflectionStaticFieldsFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{ReflectionStaticFieldsFixture}}{{instance1}{=}{{new}{{ReflectionStaticFieldsFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleReflectionStaticFieldsFixture}}{{instance1}{=}{{new}{{SimpleReflectionStaticFieldsFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SelfInstanceTwoVarsReflectionTestFixture}}{{test}{=}{{new}{{SelfInstanceTwoVarsReflectionTestFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SelfInstanceVarReflectionTestFixture}}{{test}{=}{{new}{{SelfInstanceVarReflectionTestFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SimpleReflectionTestFixture}}{{simple}{=}{{new}{{SimpleReflectionTestFixture}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Outer}}{{outer}{=}{{new}{{Outer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{baseStr}{=}{{this}{.}{toBaseString}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Character}}{{c}{=}{{new}{{Character}}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{coll}{.}{add}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{Locale}}{{locale}{=}{{LocaleUtils}{.}{toLocale}{(}{localeString}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{locale}{=}{{LocaleUtils}{.}{toLocale}{(}{localeString}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{locale}{=}{{LocaleUtils}{.}{toLocale}{(}{language}{)}}}{;}}}
{AST_ROOT_SC2NF{{{IllegalArgumentException}}{ex}}}
{AST_ROOT_SC2NF{{long}{{seed}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{{seed}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{message}{=}{{exceptionContext}{.}{getMessage}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{trace}{=}{{ExceptionUtils}{.}{getStackTrace}{(}{exceptionContext}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Short}{.}{parseShort}{(}{str}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Byte}{.}{parseByte}{(}{str}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Double}{.}{parseDouble}{(}{str}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Float}{.}{parseFloat}{(}{str}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Long}{.}{parseLong}{(}{str}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{Integer}{.}{parseInt}{(}{str}{)}}{;}}{}}}{{catch}{(}{{{NumberFormatException}}{nfe}}{)}{{{}{{return}{defaultValue}{;}}{}}}}}}
{AST_ROOT_SC2NF{{int}{{start}{=}{{index}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{StrLookup}{.}{systemPropertiesLookup}{()}}{.}{lookup}{(}{null}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{final}{{BigDecimal}}{{value}{=}{{NumberUtils}{.}{createBigDecimal}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{BigInteger}}{{value}{=}{{NumberUtils}{.}{createBigInteger}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Long}}{{value}{=}{{NumberUtils}{.}{createLong}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Integer}}{{value}{=}{{NumberUtils}{.}{createInteger}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Double}}{{value}{=}{{NumberUtils}{.}{createDouble}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{final}{{Float}}{{value}{=}{{NumberUtils}{.}{createFloat}{(}{str}{)}}}{;}}{{{fail}{(}{{STRING_CONSTANT}{+}{value}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{null}{,}{style}{,}{timeZone}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{null}{,}{style}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{null}{,}{style}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{null}{,}{style}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{style}{,}{null}{,}{timeZone}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{style}{,}{null}{,}{timeZone}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{style}{,}{null}{,}{null}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{cache}{.}{getDateTimeInstance}{(}{style}{,}{null}{,}{null}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{org.apache.commons.lang3.SerializationUtils}{.}{<}{{T}}{>}{deserialize}{(}{{new}{{ByteArrayInputStream}}{(}{objectData}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{exceptionContext}{=}{{new}{{ContextedRuntimeException}}{(}{TEST_MESSAGE_2}{,}{{new}{{Exception}}{(}{TEST_MESSAGE}{)}}{,}{{new}{{DefaultExceptionContext}}{()}{{}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{exceptionContext}{=}{{new}{{ContextedRuntimeException}}{(}{TEST_MESSAGE_2}{,}{{new}{{Exception}}{(}{TEST_MESSAGE}{)}}{,}{{new}{{DefaultExceptionContext}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Strategy}}{{strategy}{=}{{cache}{.}{get}{(}{{Integer}{.}{valueOf}{(}{field}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{nullText}{!=}{null}}{&&}{{{nullText}{.}{length}{()}}{==}{NUMBER_CONSTANT}}}{)}{{{}{{{nullText}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{ArrayUtils.EMPTY_STRING_ARRAY}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{separator}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{{str}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{?}{null}{:}{str}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{{str}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{||}{{deepEmpty}{(}{set}{)}}}{)}{{{}{{return}{StringUtils.EMPTY}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{max}{=}{{TypeUtilsTest}{.}{stub}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{empty}{!=}{result}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{ContextedRuntimeException}}{(}{TEST_MESSAGE_2}{,}{{new}{{Exception}}{(}{TEST_MESSAGE}{)}}{,}{{new}{{DefaultExceptionContext}}{()}{{}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{runningState}}{==}{STATE_UNSTARTED}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{this}{.}{startTimeMillis}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{splitState}}{!=}{STATE_SPLIT}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{GenericArrayTypeImpl}}{(}{componentType}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readDeclaredField}{(}{{(}{{Object}}{)}{null}}{,}{STRING_CONSTANT}{,}{true}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readDeclaredField}{(}{{(}{{Object}}{)}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readField}{(}{{(}{{Field}}{)}{null}}{,}{publicChild}{,}{true}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{FieldUtils}{.}{readField}{(}{{(}{{Field}}{)}{null}}{,}{publicChild}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{LocaleUtils}{.}{toLocale}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{{E}}{>}}{values}}}
{AST_ROOT_SC2NF{{final}{{{Iterable}}{<}{{E}}{>}}{values}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{FastDateParser}}{(}{format}{,}{timeZone}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{normalizeSpace}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{difference}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{abbreviate}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{reverseDelimited}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{reverse}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{leftPad}{(}{null}{,}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{leftPad}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{rightPad}{(}{null}{,}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{rightPad}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{repeat}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{replaceChars}{(}{null}{,}{CHAR_CONS}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{deleteWhitespace}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{splitPreserveAllTokens}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{split}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertArrayEquals}{(}{null}{,}{{StringUtils}{.}{split}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{assertEquals}{(}{{minutes}{+}{{{(}{{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{days}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_MINUTE}}}{,}{testResult}{)}}}
{AST_ROOT_SC2NF{{assertEquals}{(}{{minutes}{+}{{{(}{{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{days}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_MINUTE}}}{,}{testResult}{)}}}
{AST_ROOT_SC2NF{{{(}{{{(}{{minutes}{*}{DateUtils.MILLIS_PER_MINUTE}}{)}}{+}{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{days}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_SECOND}}}
{AST_ROOT_SC2NF{{{(}{{{(}{{minutes}{*}{DateUtils.MILLIS_PER_MINUTE}}{)}}{+}{{(}{{hours}{*}{DateUtils.MILLIS_PER_HOUR}}{)}}{+}{{(}{{days}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}{)}}{/}{DateUtils.MILLIS_PER_SECOND}}}
{AST_ROOT_SC2NF{{(}{{days}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}
{AST_ROOT_SC2NF{{(}{{days}{*}{DateUtils.MILLIS_PER_DAY}}{)}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{swapCase}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DiffList}}{{list}{=}{{class1}{.}{diff}{(}{class2}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Class}}{context}}}
{AST_ROOT_SC2NF{{final}{{Class}}{context}}}
{AST_ROOT_SC2NF{{list0}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{(}{{Arrays}{.}{asList}{()}}{)}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{StringUtils}{.}{join}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{readField}{(}{field}{,}{target}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{readField}{(}{field}{,}{target}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeField}{(}{field}{,}{target}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeField}{(}{field}{,}{target}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeField}{(}{field}{,}{{(}{{Object}}{)}{null}}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{writeStaticField}{(}{field}{,}{value}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toShort}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toDouble}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toFloat}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toLong}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toInt}{(}{null}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toShort}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toDouble}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toFloat}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toLong}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{NumberUtils}{.}{toInt}{(}{{(}{{String}}{)}{null}}{)}}{==}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{DiffResult}}{(}{lhs}{,}{rhs}{,}{diffs}{,}{style}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{message}{,}{cause}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NotImplementedException}{(}{{final}{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{message}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{input}{.}{length}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{pos}{+=}{{Character}{.}{charCount}{(}{{Character}{.}{codePointAt}{(}{input}{,}{pt}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Date}}{centuryStart}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{Calendar.DAY_OF_YEAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{Calendar.HOUR_OF_DAY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{Calendar.MINUTE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{Calendar.SECOND}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{calendar}{,}{fragment}{,}{Calendar.MILLISECOND}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{Calendar.DAY_OF_YEAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{Calendar.HOUR_OF_DAY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{Calendar.MINUTE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{Calendar.SECOND}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getFragment}{(}{date}{,}{fragment}{,}{Calendar.MILLISECOND}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{-}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{iVal}{=}{{keyValues}{.}{get}{(}{value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{regex}{.}{append}{(}{CHAR_CONS}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{Integer}}{{iVal}{=}{{lKeyValues}{.}{get}{(}{{value}{.}{toLowerCase}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{strategy}{=}{{{field}{==}{Calendar.ZONE_OFFSET}}{?}{{new}{{TimeZoneStrategy}}{(}{locale}{)}}{:}{{new}{{TextStrategy}}{(}{field}{,}{definingCalendar}{,}{locale}{)}}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{String}}{textKeyValue}}{:}{{keyValues}{.}{keySet}{()}}{)}{{{}{{{{sb}{.}{append}{(}{textKeyValue}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{String}}{textKeyValue}}{:}{{keyValues}{.}{keySet}{()}}{)}{{{}{{{{escapeRegex}{(}{regex}{,}{textKeyValue}{,}{false}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{shift}{=}{{{i}{*}{NUMBER_CONSTANT}}{+}{srcPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{{i}{*}{NUMBER_CONSTANT}}{+}{srcPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{{i}{*}{NUMBER_CONSTANT}}{+}{srcPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{{i}{*}{NUMBER_CONSTANT}}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{{i}{*}{NUMBER_CONSTANT}}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{{i}{*}{NUMBER_CONSTANT}}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{{shift}{=}{{{i}{*}{NUMBER_CONSTANT}}{+}{dstPos}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StrBuilder}}{{sb}{=}{{new}{{StrBuilder}}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Interfaces}}{interfacesBehavior}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{zone}}}
{AST_ROOT_SC2NF{{{}{{int}{{trial}{=}{{century}{+}{twoDigitYear}}}{;}}{{return}{{{twoDigitYear}{>=}{startYear}}{?}{trial}{:}{{trial}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{definingCalendar}}}
{AST_ROOT_SC2NF{{{SimpleClass}}{obj}}}
{AST_ROOT_SC2NF{{public}{SimpleClass}{(}{{boolean}{booleanField}}{)}{{{}{{{{this}{.}{booleanField}}{=}{booleanField}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{pattern}{=}{STRING_CONSTANT}}{;}}{{{FastDateFormat}{.}{getInstance}{(}{pattern}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{protected}{BooleanDiff}{(}{{{String}}{fieldName}}{)}{{{}{{super}{(}{fieldName}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Token}}{token}}{:}{tokens}{)}{{{}{{if}{(}{{{token}{.}{getValue}{()}}{==}{value}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{Field}}{field}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{cls}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{tmpHash}{=}{{ObjectUtils}{.}{hashCode}{(}{object}{)}}}{;}}{{{hash}{=}{{{hash}{*}{NUMBER_CONSTANT}}{+}{tmpHash}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{GenericArrayType}}{g}}}
{AST_ROOT_SC2NF{{{WildcardType}}{w}}}
{AST_ROOT_SC2NF{{{ParameterizedType}}{p}}}
{AST_ROOT_SC2NF{{{{TypeVariable}}{<}{?}{>}}{v}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{c}}}
{AST_ROOT_SC2NF{{{{TypeVariable}}{<}{?}{>}}{var}}}
{AST_ROOT_SC2NF{{{Type}}{type}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{Type}}{componentType}}}
{AST_ROOT_SC2NF{{{Type}}{.}{.}{.}{bounds}}}
{AST_ROOT_SC2NF{{{Type}}{.}{.}{.}{bounds}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{RandomUtils}{.}{nextDouble}{(}{NUMBER_CONSTANT}{,}{Double.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{float}{{result}{=}{{RandomUtils}{.}{nextFloat}{(}{NUMBER_CONSTANT}{,}{Float.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{result}{=}{{RandomUtils}{.}{nextLong}{(}{NUMBER_CONSTANT}{,}{Long.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{RandomUtils}{.}{nextInt}{(}{NUMBER_CONSTANT}{,}{Integer.MAX_VALUE}{)}}}{;}}}
{AST_ROOT_SC2NF{{long}{{result}{=}{{RandomUtils}{.}{nextLong}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{RandomUtils}{.}{nextFloat}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{RandomUtils}{.}{nextDouble}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{RandomUtils}{.}{nextInt}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{consume}{(}{{{String}}{t}}{)}{{{}{{{super}{.}{consume}{(}{t}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{consume}{(}{{{T}}{t}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Method}}{m}}}
{AST_ROOT_SC2NF{{{Method}}{m}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{char}{ch}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{source}}}
{AST_ROOT_SC2NF{{{CharSequence}}{source}}}
{AST_ROOT_SC2NF{{{T}}{value}}}
{AST_ROOT_SC2NF{{{String}}{fieldName}}}
{AST_ROOT_SC2NF{{{TypeTestClass}}{{class1}{=}{{new}{{TypeTestClass}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{equals}{(}{{{Object}}{obj}}{)}{{{}{{return}{{EqualsBuilder}{.}{reflectionEquals}{(}{this}{,}{obj}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TypeTestClass}}{obj}}}
{AST_ROOT_SC2NF{{char}{{firstChar}{=}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{char}{{firstChar}{=}{{str}{.}{charAt}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharSequence}}{.}{.}{.}{css}}}
{AST_ROOT_SC2NF{{{CharSequence}}{.}{.}{.}{css}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{Locale}}{locale}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{element}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{element}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{StringUtils}{.}{endsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{CharSequence}}{searchString}}{:}{searchStrings}{)}{{{}{{if}{(}{{StringUtils}{.}{startsWith}{(}{string}{,}{searchString}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{StringUtils}{.}{isEmpty}{(}{str}{)}}{?}{defaultStr}{:}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{StringUtils}{.}{isBlank}{(}{str}{)}}{?}{defaultStr}{:}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{StringUtils}{.}{isBlank}{(}{cs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{StringUtils}{.}{isEmpty}{(}{cs}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{isDigits}{(}{{StringUtils}{.}{replaceOnce}{(}{{StringUtils}{.}{substring}{(}{str}{,}{NUMBER_CONSTANT}{)}}{,}{STRING_CONSTANT}{,}{StringUtils.EMPTY}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{modify}{(}{ceiled}{,}{field}{,}{MODIFY_CEILING}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{MODIFY_CEILING}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{truncated}{,}{field}{,}{MODIFY_TRUNCATE}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{MODIFY_TRUNCATE}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{rounded}{,}{field}{,}{MODIFY_ROUND}{)}}{;}}}
{AST_ROOT_SC2NF{{{modify}{(}{gval}{,}{field}{,}{MODIFY_ROUND}{)}}{;}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{class}{Named}{extends}{{Object}}{{}}}}}
{AST_ROOT_SC2NF{{{}{{{type}{=}{{array}{.}{getClass}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{appendQuotedString}{(}{pattern}{,}{pos}{,}{sb}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{getQuotedString}{(}{pattern}{,}{pos}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{appendQuotedString}{(}{pattern}{,}{pos}{,}{stripCustom}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{PATTERN}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{<}{NUMBER_CONSTANT}}{)}{{{}{{{appendDigits}{(}{buffer}{,}{value}{)}}{;}}{}}}{else}{{{}{{{buffer}{.}{append}{(}{{Integer}{.}{toString}{(}{value}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{exec}{.}{awaitTermination}{(}{Long.MAX_VALUE}{,}{TimeUnit.MILLISECONDS}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{System.out}{.}{println}{(}{{STRING_CONSTANT}{+}{osName}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{osName}{.}{startsWith}{(}{osNamePrefix}{)}}{&&}{{osVersion}{.}{startsWith}{(}{osVersionPrefix}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{isOSNameMatch}{(}{osName}{,}{osNamePrefix}{)}}{&&}{{osVersion}{.}{startsWith}{(}{osVersionPrefix}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{fail}{(}{{STRING_CONSTANT}{+}{osName}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{array}{==}{null}}{||}{{array.length}{==}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{array}{!=}{null}}{&&}{{array.length}{!=}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{int}{{halflength}{=}{{{(}{{{shorter}{.}{length}{()}}{/}{NUMBER_CONSTANT}}{)}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{(}{{{{f}{.}{getName}{()}}{.}{indexOf}{(}{CHAR_CONS}{)}}{==}{{-}{NUMBER_CONSTANT}}}{)}}}
{AST_ROOT_SC2NF{{(}{{{{field}{.}{getName}{()}}{.}{indexOf}{(}{CHAR_CONS}{)}}{==}{{-}{NUMBER_CONSTANT}}}{)}}}
{AST_ROOT_SC2NF{{(}{{{{f}{.}{getName}{()}}{.}{indexOf}{(}{CHAR_CONS}{)}}{==}{{-}{NUMBER_CONSTANT}}}{)}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{(}{{lhs}{==}{rhs}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{(}{{lhs}{==}{rhs}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{(}{{lhs}{==}{rhs}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{(}{{lhs}{==}{rhs}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{(}{{lhs}{==}{rhs}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{(}{{lhs}{==}{rhs}}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Float}{.}{floatToIntBits}{(}{lhs}{)}}{,}{{Float}{.}{floatToIntBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{append}{(}{{Double}{.}{doubleToLongBits}{(}{lhs}{)}}{,}{{Double}{.}{doubleToLongBits}{(}{rhs}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{{lhs}{==}{rhs}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEquals}{==}{false}}{)}{{{}{{return}{this}{;}}{}}}}{{{isEquals}{=}{superEquals}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{modType}{==}{ModifyType.CEILING}}{||}{{(}{{{modType}{==}{ModifyType.ROUND}}{&&}{roundUp}}{)}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{DateUtils}{.}{setMilliseconds}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{DateUtils}{.}{setSeconds}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{DateUtils}{.}{setMinutes}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{DateUtils}{.}{setHours}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{DateUtils}{.}{setDays}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{result}{=}{{DateUtils}{.}{setMonths}{(}{BASE_DATE}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{date}{=}{{DateUtils}{.}{parseDateStrictly}{(}{dateStr}{,}{parsers}{)}}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{final}{{ParseException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{validTimeZoneChars}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{VALID_TZ}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{validTimeZoneChars}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{expected}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{cal}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{set}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{pattern}{,}{timeZone}{,}{locale}{,}{null}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{text}{=}{{DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT}{.}{format}{(}{cal}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{applyRules}{(}{calendar}{,}{buf}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{actualValue}{=}{{{FastDateFormat}{.}{getInstance}{(}{PATTERN}{)}}{.}{format}{(}{cal}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tokenLen}{==}{NUMBER_CONSTANT}}{)}{{{}{{{rule}{=}{TimeZoneNumberRule.INSTANCE_ISO_8601}}{;}}{}}}{else}{{{}{{{rule}{=}{TimeZoneNumberRule.INSTANCE_COLON}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{threadGroup}{.}{isDestroyed}{()}}}{)}{{{threadGroup}{.}{destroy}{()}}{;}}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeArguments}}{=}{typeArguments}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{final}{{Thread}}{thread}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{final}{{ThreadGroup}}{threadGroup}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threadGroups}{.}{isEmpty}{()}}{)}{{{}{{return}{Collections.EMPTY_LIST}{;}}{}}}}}
{AST_ROOT_SC2NF{{super}{(}{object}{,}{style}{,}{buffer}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{object}{,}{style}{,}{buffer}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{object}{,}{style}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{object}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{final}{{Thread}}{thread}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{test}{(}{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{final}{{ThreadGroup}}{threadGroup}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{threadGroups}{.}{isEmpty}{()}}{)}{{{}{{return}{Collections.EMPTY_LIST}{;}}{}}}}}
{AST_ROOT_SC2NF{{{tz}{=}{{tzNames}{.}{get}{(}{value}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{regex}{.}{append}{(}{VALID_TZ}{)}}{;}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{final}{{String}}{textKeyValue}}{:}{{lKeyValues}{.}{keySet}{()}}{)}{{{}{{{{escapeRegex}{(}{regex}{,}{textKeyValue}{,}{false}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{propertiesMap}{=}{{(}{{Map}}{)}{properties}}}{;}}}
{AST_ROOT_SC2NF{{ISO8601TimeZoneStrategy}{(}{{{String}}{pattern}}{)}{{{}{{{{this}{.}{pattern}}{=}{pattern}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{strategy}{=}{{{field}{==}{Calendar.ZONE_OFFSET}}{?}{{new}{{TimeZoneStrategy}}{(}{locale}{)}}{:}{{new}{{CaseInsensitiveTextStrategy}}{(}{field}{,}{definingCalendar}{,}{locale}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{pattern}{,}{timeZone}{,}{locale}{,}{null}{,}{true}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{DateParser}}{{fdp}{=}{{FastDateFormat}{.}{getInstance}{(}{STRING_CONSTANT}{,}{kst}{,}{Locale.KOREA}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{applyRules}{(}{c}{,}{{new}{{StringBuffer}}{(}{mMaxLengthEstimate}{)}}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{BooleanUtils}{.}{toBoolean}{(}{{{{new}{{StringBuffer}}{(}{STRING_CONSTANT}{)}}{.}{append}{(}{STRING_CONSTANT}{)}}{.}{toString}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{char}{{newChar}{=}{{Character}{.}{toUpperCase}{(}{firstChar}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{throw}{{new}{{IOException}}{()}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{rethrow}{(}{e}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{count}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}{else}{{if}{(}{{count}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{count}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{return}{{{pattern}{.}{matcher}{(}{decomposed}{)}}{.}{replaceAll}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{{new}{{StringBuilder}}{(}{{{annotationType}{==}{null}}{?}{STRING_CONSTANT}{:}{{annotationType}{.}{getName}{()}}}{)}}{.}{insert}{(}{NUMBER_CONSTANT}{,}{CHAR_CONS}{)}}{.}{toString}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{summaryObjectEndText}{==}{null}}{)}{{{}{{{summaryObjectEndText}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{summaryObjectEndText}}{=}{summaryObjectEndText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{summaryObjectStartText}{==}{null}}{)}{{{}{{{summaryObjectStartText}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{summaryObjectStartText}}{=}{summaryObjectStartText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sizeEndText}{==}{null}}{)}{{{}{{{sizeEndText}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{sizeEndText}}{=}{sizeEndText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{sizeStartText}{==}{null}}{)}{{{}{{{sizeStartText}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{sizeStartText}}{=}{sizeStartText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{nullText}{==}{null}}{)}{{{}{{{nullText}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{nullText}}{=}{nullText}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldSeparator}{==}{null}}{)}{{{}{{{fieldSeparator}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{fieldSeparator}}{=}{fieldSeparator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldNameValueSeparator}{==}{null}}{)}{{{}{{{fieldNameValueSeparator}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{fieldNameValueSeparator}}{=}{fieldNameValueSeparator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{contentEnd}{==}{null}}{)}{{{}{{{contentEnd}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{contentEnd}}{=}{contentEnd}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{contentStart}{==}{null}}{)}{{{}{{{contentStart}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{contentStart}}{=}{contentStart}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arraySeparator}{==}{null}}{)}{{{}{{{arraySeparator}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{arraySeparator}}{=}{arraySeparator}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arrayEnd}{==}{null}}{)}{{{}{{{arrayEnd}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{arrayEnd}}{=}{arrayEnd}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arrayStart}{==}{null}}{)}{{{}{{{arrayStart}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{arrayStart}}{=}{arrayStart}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{obj}{==}{null}}{?}{STRING_CONSTANT}{:}{{obj}{.}{toString}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{pos}{>=}{count}}{)}{{{}{{{addToken}{(}{tokenList}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{delimiters}{!=}{null}}{&&}{{delimiters.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{th}{==}{null}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{locale}{.}{getCountry}{()}}{.}{length}{()}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{list}{.}{add}{(}{{new}{{Locale}}{(}{{locale}{.}{getLanguage}{()}}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{length}{<=}{NUMBER_CONSTANT}}{||}{{index}{>=}{size}}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{STRING_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{str}{==}{null}}{)}{{{}{{{str}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{str}{==}{null}}{)}{{{}{{{str}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{appendDisplayNames}{(}{definingCalendar}{,}{locale}{,}{field}{,}{regex}{,}{lKeyValues}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{parseDateWithLeniency}{(}{str}{,}{null}{,}{parsePatterns}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{Object}}{o}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{String}}{s}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{double}{d}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{{Integer}}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{(}{{final}{int}{i}}{)}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestBean}{()}{{{}{{{toString}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{boolean}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{double}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{float}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{long}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{char}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{int}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{short}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{byte}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{T}}{[]}}{)}{{removeAll}{(}{{(}{{Object}}{)}{array}}{,}{{clone}{(}{indices}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{str}{,}{toString}{)}}{;}}{{{assertEquals}{(}{args}{,}{varArgs}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCause}{(}{throwable}{,}{CAUSE_METHOD_NAMES}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{JAVA_1_9}{,}{{get}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{STRING_CONSTANT}{.}{equals}{(}{nom}{)}}{)}{{{}{{return}{JAVA_1_8}{;}}{}}}{else}{{if}{(}{{STRING_CONSTANT}{.}{equals}{(}{nom}{)}}{)}{{{}{{return}{JAVA_1_9}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{strategy}{=}{{{field}{==}{Calendar.ZONE_OFFSET}}{?}{{new}{{TimeZoneStrategy}}{(}{definingCalendar}{,}{locale}{)}}{:}{{new}{{CaseInsensitiveTextStrategy}}{(}{field}{,}{definingCalendar}{,}{locale}{)}}}}{;}}}
{AST_ROOT_SC2NF{{final}{boolean}{{isValid}{=}{{NumberUtils}{.}{isNumber}{(}{val}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{srcArgs.length}{<}{normalArgsLen}}{)}{{return}{Float.MAX_VALUE}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lhs.length}{!=}{rhs.length}}{)}{{{}{{{comparison}{=}{{{(}{{lhs.length}{<}{rhs.length}}{)}}{?}{{-}{NUMBER_CONSTANT}}{:}{{+}{NUMBER_CONSTANT}}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{boolean}{{hasSign}{=}{{(}{{{firstChar}{==}{CHAR_CONS}}{||}{{firstChar}{==}{CHAR_CONS}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{javaVersion}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{css}{)}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ImmutablePair}}{<}{{L}}{,}{{R}}{>}}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Locale}}{>}}{{jdkLocaleSet}{=}{{new}{{{HashSet}}{<}{{Locale}}{>}}{(}{jdkLocaleList}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{allFieldsInteger}{=}{{new}{{{ArrayList}}{<}{{Field}}{>}}{(}{fieldsInteger}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{CallableBackgroundInitializer}}{<}{{Integer}}{>}}{{init}{=}{{new}{{{CallableBackgroundInitializer}}{<}{{Integer}}{>}}{(}{call}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{new}{{{CallableBackgroundInitializer}}{<}{{Object}}{>}}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{tasks}{=}{{new}{{{ArrayList}}{<}{{{Callable}}{<}{{Integer}}{>}}{>}}{()}}}}
{AST_ROOT_SC2NF{{{{this}{.}{diffs}}{=}{{new}{{{ArrayList}}{<}{{{Diff}}{<}{?}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Integer}}{>}}{{toRemove}{=}{{new}{{{HashSet}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{frames}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Throwable}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Throwable}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{typeVarAssigns}{=}{{new}{{{HashMap}}{<}{{{TypeVariable}}{<}{?}{>}}{,}{{Type}}{>}}{()}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{annotatedFields}{=}{{new}{{{ArrayList}}{<}{{Field}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Field}}{>}}{{allFields}{=}{{new}{{{ArrayList}}{<}{{Field}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{E}}{>}}{{map}{=}{{new}{{{LinkedHashMap}}{<}{{String}}{,}{{E}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{tokenList}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{(}{tokens.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{?}{>}}{{set}{=}{{Collections}{.}{unmodifiableSet}{(}{{new}{{{HashSet}}{<}{{Object}}{>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{?}{>}}{{set}{=}{{Collections}{.}{unmodifiableSet}{(}{{new}{{{HashSet}}{<}{{Object}}{>}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{{Class}}{<}{?}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ConstantFuture}}{<}{{T}}{>}}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MapStrLookup}}{<}{{V}}{>}}{(}{map}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Boolean}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Boolean}}{,}{{MutableInt}}{>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Double}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Double}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Float}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Float}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Long}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Long}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Character}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Character}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Integer}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Short}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Short}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{Byte}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{Byte}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{T}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{T}}{,}{{MutableInt}}{>}}{(}{values.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{AtomicReference}}{<}{{InterruptedException}}{>}}{{iex}{=}{{new}{{{AtomicReference}}{<}{{InterruptedException}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{MutablePair}}{<}{{L}}{,}{{R}}{>}}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{m}{==}{null}}{)}{{{}{{{REGISTRY}{.}{set}{(}{{new}{{{WeakHashMap}}{<}{{Object}}{,}{{Object}}{>}}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{countries}{=}{{new}{{{ArrayList}}{<}{{Locale}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{langs}{=}{{new}{{{ArrayList}}{<}{{Locale}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Locale}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Locale}}{>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Type}}{>}}{{types}{=}{{new}{{{HashSet}}{<}{{Type}}{>}}{(}{bounds.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{priorVariables}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}{{{priorVariables}{.}{add}{(}{{new}{{String}}{(}{chars}{,}{offset}{,}{length}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{valueMap}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{Object}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{String}}{>}}{{labels}{=}{{new}{{{HashSet}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{values}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{contextValues}{.}{add}{(}{{new}{{{ImmutablePair}}{<}{{String}}{,}{{Object}}{>}}{(}{label}{,}{value}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<}{{String}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<}{{String}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<}{{String}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<}{{String}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ConcurrentMap}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{ConcurrentHashMap}}{<}{{String}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{iMap}{=}{{new}{{{HashMap}}{<}{{Object}}{,}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{listeners}}{=}{{new}{{{CopyOnWriteArrayList}}{<}{{L}}{>}}{(}{srcListeners}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{L}}{>}}{{serializableListeners}{=}{{new}{{{ArrayList}}{<}{{L}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{EventListenerSupport}}{<}{{T}}{>}}{(}{listenerInterface}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{VetoableChangeListener}}{>}}{{calledListeners}{=}{{new}{{{ArrayList}}{<}{{VetoableChangeListener}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{{candidateClasses}{=}{{new}{{{ArrayList}}{<}{{{Class}}{<}{?}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{classNames}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{(}{{classes}{.}{size}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{{Class}}{<}{?}{>}}{>}}{{classes}{=}{{new}{{{ArrayList}}{<}{{{Class}}{<}{?}{>}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{Integer}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{Integer}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{expectedSource}{=}{source}}{;}}{{{changedValues}{=}{{new}{{{ArrayList}}{<}{{Boolean}}{>}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{Object}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{(}{array.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Method}}{>}}{{annotatedMethods}{=}{{new}{{{ArrayList}}{<}{{Method}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{Method}}{>}}{{result}{=}{{new}{{{LinkedHashSet}}{<}{{Method}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{eventTypes}}{=}{{new}{{{HashSet}}{<}{{String}}{>}}{(}{{Arrays}{.}{asList}{(}{eventTypes}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{registry}{==}{null}}{)}{{{}{{{registry}{=}{{new}{{{HashSet}}{<}{{IDKey}}{>}}{()}}}{;}}{{{REGISTRY}{.}{set}{(}{registry}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{{MutableObject}}{<}{{String}}{>}}{{obj}{=}{{new}{{{MutableObject}}{<}{{String}}{>}}{(}{replaceTemplate}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{String}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{values}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashMap}}{<}{{T}}{,}{{MutableInt}}{>}}{{occurrences}{=}{{new}{{{HashMap}}{<}{{T}}{,}{{MutableInt}}{>}}{(}{items.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{TreeSet}}{<}{{T}}{>}}{{sort}{=}{{new}{{{TreeSet}}{<}{{T}}{>}}{(}{comparator}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{TreeSet}}{<}{{T}}{>}}{{sort}{=}{{new}{{{TreeSet}}{<}{{T}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{ThreadGroup}}{>}}{{result}{=}{{new}{{{ArrayList}}{<}{{ThreadGroup}}{>}}{(}{count}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Thread}}{>}}{{result}{=}{{new}{{{ArrayList}}{<}{{Thread}}{>}}{(}{count}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Thread}}{>}}{{result}{=}{{new}{{{ArrayList}}{<}{{Thread}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{ImmutablePair}}{<}{{L}}{,}{{R}}{>}}{(}{left}{,}{right}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{DateParser}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{DateParser}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Set}}{<}{{String}}{>}}{{sorted}{=}{{new}{{{TreeSet}}{<}{{String}}{>}}{(}{LONGER_FIRST_LOWERCASE}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{caches}{[}{field}{]}}{=}{{new}{{{ConcurrentHashMap}}{<}{{Locale}}{,}{{Strategy}}{>}}{(}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{patterns}{=}{{new}{{{ArrayList}}{<}{{StrategyAndWidth}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Locale}}{>}}{{testLocales}{=}{{new}{{{HashSet}}{<}{{Locale}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{s}{=}{{{new}{{{ConstantInitializer}}{<}{{Object}}{>}}{(}{null}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{{checkEquals}{(}{{new}{{{ConstantInitializer}}{<}{{String}}{>}}{(}{STRING_CONSTANT}{)}}{,}{false}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Before}}{public}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{init}{=}{{new}{{{ConstantInitializer}}{<}{{Integer}}{>}}{(}{VALUE}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{triple}{=}{{new}{{{MutableTriple}}{<}{{Integer}}{,}{{String}}{,}{{Boolean}}{>}}{()}}}}
{AST_ROOT_SC2NF{{pair}{=}{{new}{{{MutablePair}}{<}{{Integer}}{,}{{String}}{>}}{(}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}}}
{AST_ROOT_SC2NF{{final}{{{MutablePair}}{<}{{Integer}}{,}{{String}}{>}}{{pair}{=}{{new}{{{MutablePair}}{<}{{Integer}}{,}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{{Range}}{<}{{T}}{>}}{(}{fromInclusive}{,}{toInclusive}{,}{comparator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{tasks}{=}{{new}{{{ArrayList}}{<}{{{Callable}}{<}{{Integer}}{>}}{>}}{()}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{TimeZone}}{>}}{{timeZones}{=}{{new}{{{ArrayList}}{<}{{TimeZone}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{ArrayList}}{<}{{String}}{>}}{{substrings}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{list}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{excludeList}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{excludeList}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{excludeList}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<}{{String}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Map}}{<}{{String}}{,}{{Integer}}{>}}{{map}{=}{{new}{{{HashMap}}{<}{{String}}{,}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Integer}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Collection}}{<}{{Integer}}{>}}{{coll}{=}{{new}{{{ArrayList}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Rule}}{>}}{{rules}{=}{{new}{{{ArrayList}}{<}{{Rule}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{CircuitBreakingException}{(}{{{Throwable}}{cause}}{)}{{{}{{super}{(}{cause}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{CircuitBreakingException}{(}{{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Customer}{(}{{{String}}{name}}{)}{{{}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{Bank}{(}{{{String}}{name}}{)}{{{}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{Object}}{object}}}
{AST_ROOT_SC2NF{{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{{@}{Override}}{int}{modify}{(}{{{FastDateParser}}{parser}}{,}{{final}{int}{iValue}}{)}{{{}{{return}{{iValue}{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{tokenLen}}}
{AST_ROOT_SC2NF{{ISO8601TimeZoneStrategy}{(}{{{String}}{pattern}}{)}{{{}{{{createPattern}{(}{pattern}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{{FastDateParser}}{parser}}}
{AST_ROOT_SC2NF{{void}{createPattern}{(}{{{String}}{regex}}{)}{{{}{{{{this}{.}{pattern}}{=}{{Pattern}{.}{compile}{(}{regex}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{void}{createPattern}{(}{{{StringBuilder}}{regex}}{)}{{{}{{{createPattern}{(}{{regex}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{char}{c}}}
{AST_ROOT_SC2NF{{char}{c}}}
{AST_ROOT_SC2NF{{{{ListIterator}}{<}{{StrategyAndWidth}}{>}}{lt}}}
{AST_ROOT_SC2NF{{public}{FastDatePrinterTimeZonesTest}{(}{{{TimeZone}}{timeZone}}{)}{{{}{{{{this}{.}{timeZone}}{=}{timeZone}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{s}}}
{AST_ROOT_SC2NF{{{class}{LANG1261ParentObject}{{}{{{@}{Override}}{public}{boolean}{equals}{(}{{{Object}}{o}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{Method}}{method}}}
{AST_ROOT_SC2NF{{{SystemDefaults}}{defaults}}}
{AST_ROOT_SC2NF{{{SystemDefaults}}{defaults}}}
{AST_ROOT_SC2NF{{int}{len}}}
{AST_ROOT_SC2NF{{{{Constructor}}{<}{?}{>}}{constructor}}}
{AST_ROOT_SC2NF{{{Method}}{method}}}
{AST_ROOT_SC2NF{{private}{static}{{Executable}}{of}{(}{{{{Constructor}}{<}{?}{>}}{constructor}}{)}{{{}{{return}{{new}{{Executable}}{(}{constructor}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{static}{{Executable}}{of}{(}{{{Method}}{method}}{)}{{{}{{return}{{new}{{Executable}}{(}{method}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Number}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{Number}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{args}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{{Number}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{{Long}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{{Integer}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{{Double}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{{Float}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{{Short}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{numOverload}{(}{{{Byte}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{String}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Object}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Number}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Long}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Integer}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Double}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Float}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Boolean}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Short}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Character}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{varOverload}{(}{{{Byte}}{.}{.}{.}{args}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{int}{[]}}{unboxing}{(}{{int}{.}{.}{.}{values}}{)}{{{}{{return}{values}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PropertyChangeListener}}{listener}}}
{AST_ROOT_SC2NF{{{PropertyChangeListener}}{listener}}}
{AST_ROOT_SC2NF{{{State}}{newState}}}
{AST_ROOT_SC2NF{{{State}}{state}}}
{AST_ROOT_SC2NF{{{Boolean}}{.}{.}{.}{values}}}
{AST_ROOT_SC2NF{{{PropertyChangeEvent}}{evt}}}
{AST_ROOT_SC2NF{{{Object}}{source}}}
{AST_ROOT_SC2NF{{long}{time}}}
{AST_ROOT_SC2NF{{{TimeZone}}{tz}}}
{AST_ROOT_SC2NF{{{String}}{valueAsString}}}
{AST_ROOT_SC2NF{{{String}}{valueAsString}}}
{AST_ROOT_SC2NF{{int}{spaces}}}
{AST_ROOT_SC2NF{{{Long}}{increment}}}
{AST_ROOT_SC2NF{{long}{threshold}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{{TimeZone}}{tz}}}
{AST_ROOT_SC2NF{{int}{tokenLen}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{{Object}}{obj}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{long}{fetchCheckInterval}{(}{{{EventCountCircuitBreaker}}{breaker}}{)}{{{}{{return}{{breaker}{.}{getClosingInterval}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{long}{fetchCheckInterval}{(}{{{EventCountCircuitBreaker}}{breaker}}{)}{{{}{{return}{{breaker}{.}{getOpeningInterval}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{delta}}}
{AST_ROOT_SC2NF{{{State}}{state}}}
{AST_ROOT_SC2NF{{{State}}{newState}}}
{AST_ROOT_SC2NF{{int}{increment}}}
{AST_ROOT_SC2NF{{{Integer}}{increment}}}
{AST_ROOT_SC2NF{{private}{NotVisibleException}{(}{{{Throwable}}{cause}}{)}{{{}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{allowDuplicate}}}
{AST_ROOT_SC2NF{{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{{Calendar}}{calendar}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{{?}{extends}{{Throwable}}}{>}}{type}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{Throwable}}{throwable}}}
{AST_ROOT_SC2NF{{{String}}{key}}}
{AST_ROOT_SC2NF{{long}{nanos}}}
{AST_ROOT_SC2NF{{int}{max}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{decomposed}}}
{AST_ROOT_SC2NF{{int}{maxWidth}}}
{AST_ROOT_SC2NF{{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{zeroThreshold}{)}}}{;}}{{{assertTrue}{(}{STRING_CONSTANT}{,}{{circuit}{.}{incrementAndCheckState}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ThresholdCircuitBreaker}}{{circuit}{=}{{new}{{ThresholdCircuitBreaker}}{(}{threshold}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{UnsupportedOperationException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{UnsupportedOperationException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{UnsupportedOperationException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{long}{{randomResult}{=}{{RandomUtils}{.}{nextLong}{()}}}{;}}}
{AST_ROOT_SC2NF{{float}{{randomResult}{=}{{RandomUtils}{.}{nextFloat}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{randomResult}{=}{{RandomUtils}{.}{nextDouble}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{randomResult}{=}{{RandomUtils}{.}{nextInt}{()}}}{;}}}
{AST_ROOT_SC2NF{{float}{{result}{=}{{mutableFloat}{.}{addAndGet}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{float}{{result}{=}{{mutableFloat}{.}{getAndAdd}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{float}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{float}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{float}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{float}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{TestThrowable}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{IOException}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{RuntimeException}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Throwable}}{t}}{)}{{{}{{{Assert}{.}{assertTrue}{(}{{ExceptionUtils}{.}{hasCause}{(}{t}{,}{{{Error}}{.}{class}}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{throw}{{new}{{IOException}}{()}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{<}{{Integer}}{>}{rethrow}{(}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{byte}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{byte}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{byte}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{byte}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{short}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{short}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{short}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{short}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{mutableDouble}{.}{addAndGet}{(}{{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{mutableDouble}{.}{getAndAdd}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalAccessException}}{e}}{)}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{<}{{Integer}}{>}{rethrow}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{return}{{ExceptionUtils}{.}{<}{{Boolean}}{>}{rethrow}{(}{e}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Format}}{{fdf}{=}{{FastDateFormat}{.}{getInstance}{(}{pattern}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StateStrategy}}{{strategy}{=}{{STRATEGY_MAP}{.}{get}{(}{state}{)}}}{;}}{{return}{strategy}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{time}{=}{{now}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{InterruptedException}}{iex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{regex}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{int}{{sIdx}{=}{{idx}{+}{{pos}{.}{getIndex}{()}}}}{;}}}
{AST_ROOT_SC2NF{{char}{{c}{=}{{value}{.}{charAt}{(}{i}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ParsePosition}}{{pp}{=}{{new}{{ParsePosition}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{char}{{c}{=}{{pattern}{.}{charAt}{(}{currentIdx}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{intValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{int}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{short}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{shortValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{short}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{short}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{short}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{longValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{long}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{(}{SWEDEN}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{(}{tz}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{float}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{floatValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{float}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{float}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{float}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{ExecutorService}}{{exec}{=}{{Executors}{.}{newSingleThreadExecutor}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Locale}}{{save}{=}{{Locale}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TimeZone}}{{save}{=}{{TimeZone}{.}{getDefault}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{date}{=}{STRING_CONSTANT}}{;}}{{{DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT}{.}{parse}{(}{date}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{encoding}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{methodStr}{=}{{m}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{{result}{=}{{mutNum}{.}{getAndDecrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{{result}{=}{{mutNum}{.}{decrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{{result}{=}{{mutNum}{.}{getAndIncrement}{()}}}{;}}}
{AST_ROOT_SC2NF{{long}{{result}{=}{{mutNum}{.}{incrementAndGet}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Exception}}{ex}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{lastHold}{=}{start}}{;}}}
{AST_ROOT_SC2NF{{int}{{value}{=}{{calendar}{.}{get}{(}{Calendar.DAY_OF_WEEK}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IOException}}{ioe}}{)}{{{}{{{ExceptionUtils}{.}{rethrow}{(}{ioe}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{sb}{=}{{new}{{StringBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{CharSequence}}{searchCharSequence}}{:}{searchCharSequences}{)}{{{}{{if}{(}{{contains}{(}{cs}{,}{searchCharSequence}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{CharSequence}}{next}}{:}{searchStrings}{)}{{{}{{if}{(}{{equalsIgnoreCase}{(}{string}{,}{next}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{CharSequence}}{next}}{:}{searchStrings}{)}{{{}{{if}{(}{{equals}{(}{string}{,}{next}{)}}{)}{{{}{{return}{true}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{return}{{System}{.}{getProperty}{(}{key}{)}}{;}}{}}}{{catch}{(}{{{SecurityException}}{scex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{clonedIndices}{=}{{clone}{(}{indices}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{int}{{n_offset}{=}{{n}{-}{offset}}}{;}}}
{AST_ROOT_SC2NF{{short}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{long}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{int}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{float}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{double}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{char}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{byte}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{aux}{=}{{array}{[}{offset1}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{StopWatch}}{{sw}{=}{{new}{{StopWatch}}{()}}}{;}}{{{sw}{.}{start}{()}}{;}}{{return}{sw}{;}}{}}}}
{AST_ROOT_SC2NF{{{Pattern}}{{patternToWrapOn}{=}{{Pattern}{.}{compile}{(}{wrapOn}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeZone}}{{utc}{=}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{balance}{=}{NUMBER_CONSTANT}}{;}}{{for}{(}{{{Transaction}}{tx}}{:}{transactions}{)}{{{}{{{balance}{+=}{tx.amount}}{;}}{}}}}{{return}{balance}{;}}{}}}}
{AST_ROOT_SC2NF{{{Calendar}}{{calendar}{=}{{Calendar}{.}{getInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateParser}}{{parser}{=}{{getInstance}{(}{YMD_SLASH}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Calendar}}{{cal}{=}{{Calendar}{.}{getInstance}{(}{tz}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{byte}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{byteValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{byte}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{byte}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{byte}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{{operand}{.}{doubleValue}{()}}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{last}{=}{value}}{;}}{{{{this}{.}{value}}{+=}{operand}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{last}{=}{value}}{;}}{{{value}{--}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{last}{=}{value}}{;}}{{{value}{++}}{;}}{{return}{last}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Diff}}{<}{?}{>}}{diff}}}
{AST_ROOT_SC2NF{{{methodName}{.}{equals}{(}{{method}{.}{getName}{()}}{)}}{&&}{{ArrayUtils}{.}{isEquals}{(}{parameterTypes}{,}{{method}{.}{getParameterTypes}{()}}{)}}}}
{AST_ROOT_SC2NF{{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{{memoizer}{=}{{new}{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{(}{computable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{{memoizer}{=}{{new}{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{(}{computable}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{{memoizer}{=}{{new}{{{Memoizer}}{<}{{Integer}}{,}{{Integer}}{>}}{(}{computable}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{isEquals}}{)}{{return}{this}{;}}}}
{AST_ROOT_SC2NF{{final}{{StrategyParser}}{{fm}{=}{{new}{{StrategyParser}}{(}{pattern}{,}{definingCalendar}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setCycle}{(}{{{TestRecursiveCycleObject}}{cycle}}{)}{{{}{{{{this}{.}{cycle}}{=}{cycle}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestRecursiveCycleObject}{(}{{int}{n}}{)}{{{}{{{{this}{.}{n}}{=}{n}}{;}}{{{{this}{.}{cycle}}{=}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestRecursiveInnerObject}{(}{{int}{n}}{)}{{{}{{{{this}{.}{n}}{=}{n}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{offset}}}
{AST_ROOT_SC2NF{{boolean}{testRecursive}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{excludeFields}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{reflectUpToClass}}}
{AST_ROOT_SC2NF{{boolean}{testRecursive}}}
{AST_ROOT_SC2NF{{boolean}{testTransients}}}
{AST_ROOT_SC2NF{{final}{{{Locale}}{[]}}{{availableLocales}{=}{{ChoiceFormat}{.}{getAvailableLocales}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mRule}{.}{appendTo}{(}{buffer}{,}{{CalendarReflection}{.}{getWeekYear}{(}{calendar}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{b}{.}{compareTo}{(}{{BigDecimal}{.}{valueOf}{(}{d}{)}}{)}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{d}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{spaceToWrapAt}{=}{{matcher}{.}{start}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{final}{{{String}}{[]}}{{sa}{=}{{ArrayUtils}{.}{add}{(}{stringArray}{,}{NUMBER_CONSTANT}{,}{aString}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{T}}{.}{.}{.}{array}}}
{AST_ROOT_SC2NF{{{assertPatternsEqual}{(}{{STRING_CONSTANT}{+}{locale}}{,}{expectedPattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertPatternsEqual}{(}{STRING_CONSTANT}{,}{pattern}{,}{{emf}{.}{toPattern}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{{baseStr}{+}{STRING_CONSTANT}{+}{SystemUtils.LINE_SEPARATOR}{+}{STRING_CONSTANT}}{,}{{{new}{{ToStringBuilder}}{(}{base}{)}}{.}{toString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{newLine}{==}{null}}{)}{{{}{{{append}{(}{SystemUtils.LINE_SEPARATOR}{)}}{;}}{{return}{this}{;}}{}}}}{{return}{{append}{(}{newLine}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{linebreak}{=}{SystemUtils.LINE_SEPARATOR}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{linebreak}{=}{SystemUtils.LINE_SEPARATOR}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{SystemUtils.LINE_SEPARATOR}}{;}}}
{AST_ROOT_SC2NF{{final}{{String}}{{systemNewLine}{=}{SystemUtils.LINE_SEPARATOR}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{newLineStr}{==}{null}}{)}{{{}{{{newLineStr}{=}{SystemUtils.LINE_SEPARATOR}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{fieldName}{==}{null}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{{super}{.}{appendFieldStart}{(}{buffer}{,}{{FIELD_NAME_PREFIX}{+}{fieldName}{+}{FIELD_NAME_PREFIX}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{CharUtils}{.}{isAscii}{(}{CHAR_COPY}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{GenericDeclaration}}{{d}{=}{{{(}{{(}{{{TypeVariable}}{<}{?}{>}}{)}{var}}{)}}{.}{getGenericDeclaration}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameLocalTime}{(}{{Calendar}{.}{getInstance}{()}}{,}{{(}{{Calendar}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameLocalTime}{(}{{(}{{Calendar}}{)}{null}}{,}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{{Calendar}{.}{getInstance}{()}}{,}{{(}{{Calendar}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{{(}{{Calendar}}{)}{null}}{,}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{{new}{{Date}}{()}}{,}{{(}{{Date}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameInstant}{(}{{(}{{Date}}{)}{null}}{,}{{new}{{Date}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{{Calendar}{.}{getInstance}{()}}{,}{{(}{{Calendar}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{{(}{{Calendar}}{)}{null}}{,}{{Calendar}{.}{getInstance}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{{new}{{Date}}{()}}{,}{{(}{{Date}}{)}{null}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateUtils}{.}{isSameDay}{(}{{(}{{Date}}{)}{null}}{,}{{new}{{Date}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{LocaleUtils}{.}{toLocale}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{{(}{float}{)}{NUMBER_CONSTANT}}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{NUMBER_CONSTANT}{*}{NUMBER_CONSTANT}}{,}{{{{new}{{HashCodeBuilder}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{.}{append}{(}{{(}{double}{)}{NUMBER_CONSTANT}}{)}}{.}{toHashCode}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{BAR}{,}{{ObjectUtils}{.}{toString}{(}{{(}{{Object}}{)}{null}}{,}{BAR}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ObjectUtils}{.}{toString}{(}{{(}{{Object}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{intRange}{=}{{Range}{.}{between}{(}{{(}{int}{)}{NUMBER_CONSTANT}}{,}{{(}{int}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{BooleanUtils}{.}{toString}{(}{{(}{{Boolean}}{)}{null}}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringYesNo}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringOnOff}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringTrueFalse}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toIntegerObject}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{BooleanUtils}{.}{isNotFalse}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{BooleanUtils}{.}{isFalse}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{BooleanUtils}{.}{isNotTrue}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{BooleanUtils}{.}{isTrue}{(}{{(}{{Boolean}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{ClassUtils}{.}{getSimpleName}{(}{{(}{{{Class}}{<}{?}{>}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{{(}{int}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{{(}{int}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{{(}{int}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableInt}}{{mutNum}{=}{{new}{{MutableInt}}{(}{{(}{int}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{StrMatcher}{.}{noneMatcher}{()}}{,}{{StrMatcher}{.}{stringMatcher}{(}{{(}{{String}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{array}{=}{{ArrayUtils}{.}{removeElement}{(}{{(}{{boolean}{[]}}{)}{null}}{,}{true}{)}}}{;}}}
{AST_ROOT_SC2NF{{{array}{=}{{ArrayUtils}{.}{removeElement}{(}{{(}{{{Object}}{[]}}{)}{null}}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{replace}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{{(}{{String}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{setNullText}{(}{{(}{{String}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{sb}{.}{setNewLineText}{(}{{(}{{String}}{)}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{StrBuilder}}{{sb5}{=}{{new}{{StrBuilder}}{(}{{(}{{String}}{)}{null}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{{(}{{(}{{ExceptionWithCause}}{)}{{cyclicCause}{.}{getCause}{()}}}{)}}{.}{getCause}{()}}{,}{{throwables}{.}{get}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{{(}{{(}{{ExceptionWithCause}}{)}{{cyclicCause}{.}{getCause}{()}}}{)}}{.}{getCause}{()}}{,}{{throwables}{[}{NUMBER_CONSTANT}{]}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{{(}{{(}{{ExceptionWithCause}}{)}{{cyclicCause}{.}{getCause}{()}}}{)}}{.}{getCause}{()}}{,}{{ExceptionUtils}{.}{getRootCause}{(}{cyclicCause}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<=}{start}}{||}{{value}{>=}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<=}{start}}{||}{{value}{>=}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<}{start}}{||}{{value}{>}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{value}{<}{start}}{||}{{value}{>}{end}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{String}{.}{format}{(}{message}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{{(}{long}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{{(}{long}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{{(}{long}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{MutableLong}}{{mutNum}{=}{{new}{{MutableLong}}{(}{{(}{long}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{longRange}{=}{{Range}{.}{between}{(}{{(}{long}{)}{NUMBER_CONSTANT}}{,}{{(}{long}{)}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{null}{,}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{null}{,}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{parseLocale}{(}{str}{,}{len}{)}}{;}}}
{AST_ROOT_SC2NF{{{classes}{.}{add}{(}{cls}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{trace}{.}{indexOf}{(}{TEST_MESSAGE}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{trace}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{trace}{.}{indexOf}{(}{TEST_MESSAGE}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{trace}{.}{indexOf}{(}{STRING_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{!}{{stackTrace}{.}{contains}{(}{ExceptionUtils.WRAPPED_MARKER}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{!}{{stackTrace}{.}{contains}{(}{ExceptionUtils.WRAPPED_MARKER}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{!}{{contextMessage}{.}{contains}{(}{TEST_MESSAGE}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{HashSet}}{<}{{Integer}}{>}}{{toRemove}{=}{{new}{{{HashSet}}{<}{{Integer}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{super}{.}{appendDetail}{(}{buffer}{,}{fieldName}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{String}}{getFieldName}{()}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{SelfInstanceTwoVarsReflectionTestFixture}{()}{{{}{{{{this}{.}{typeIsSelf}}{=}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{SelfInstanceVarReflectionTestFixture}{()}{{{}{{{{this}{.}{typeIsSelf}}{=}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestSubObject}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{{StrMatcher}{.}{noneMatcher}{()}}{,}{{StrMatcher}{.}{charSetMatcher}{(}{{new}{{char}{[}}{NUMBER_CONSTANT}{]}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{noNullElements}{(}{values}{)}}{;}}{{return}{{generateBitVector}{(}{enumClass}{,}{{Arrays}{.}{<}{{E}}{>}{asList}{(}{values}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{TypeUtils}{.}{<}{{T}}{>}{wrap}{(}{{(}{{Type}}{)}{type}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{typeArguments}{==}{null}}{)}{{{}{{{typeArguments}{=}{{Collections}{.}{<}{{{TypeVariable}}{<}{?}{>}}{,}{{Type}}{>}{emptyMap}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{StringUtils}{.}{containsOnly}{(}{str}{,}{{new}{{char}{[]}}{{{}{CHAR_CONS}{}}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{StringUtils}{.}{containsOnly}{(}{str}{,}{{new}{{char}{[]}}{{{}{CHAR_CONS}{}}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{StringUtils}{.}{containsOnly}{(}{str}{,}{{new}{{char}{[]}}{{{}{CHAR_CONS}{}}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{ObjectUtils}{.}{firstNonNull}{(}{{new}{{{Object}}{[}}{NUMBER_CONSTANT}{]}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{event2}{(}{{{PropertyChangeEvent}}{e}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{event1}{(}{{{PropertyChangeEvent}}{e}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{TestSubObject}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{{objectData}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{SerializationUtils}{.}{<}{{T}}{>}{deserialize}{(}{{new}{{ByteArrayInputStream}}{(}{objectData}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{strColl}{=}{{Arrays}{.}{asList}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{String}}{>}}{{strColl}{=}{{Arrays}{.}{asList}{(}{{new}{{{String}}{[]}}{{{}{STRING_CONSTANT}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{TestEmptySubObject}{(}{{final}{int}{a}}{)}{{{}{{super}{(}{a}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{TestSubObject}{()}{{{}{{super}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{BackgroundInitializerTestImpl}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{@}{SuppressWarnings}{(}{STRING_CONSTANT}{)}}{public}{NestableException}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{options}{==}{null}}{?}{false}{:}{{options}{.}{contains}{(}{option}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{(}{arraylistInitialCapacity}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{List}}{<}{{Object}}{>}}{{list}{=}{{new}{{{ArrayList}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{wrapChar}{==}{CHAR_CONS}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{wrapWith}{==}{CHAR_CONS}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isEmpty}{(}{str}{)}}{||}{{wrapWith}{==}{CHAR_CONS}}}{)}{{{}{{return}{str}{;}}{}}}}{{return}{{wrapWith}{+}{str}{+}{wrapWith}}{;}}{}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{oldEnd}}}{;}{{i}{<}{newEnd}}{;}{{i}{++}}{)}{{{}{{{{buffer}{[}{i}{]}}{=}{CHAR_CONS}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{StringUtils}{.}{unwrap}{(}{null}{,}{CHAR_CONS}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{ObjectUtils}{.}{equals}{(}{object1}{,}{object2}{)}}{==}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{instanceof}{{TypeLiteral}}}{==}{false}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isFalse}{()}{{{}{{return}{{value}{==}{false}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{isTrue}{()}{{{}{{return}{{value}{==}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{DEFAULT_VALID_STATE_EX_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{expression}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{DEFAULT_IS_TRUE_EX_MESSAGE}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{instanceof}{{FastDateFormat}}}{==}{false}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{instanceof}{{Fraction}}}{==}{false}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{instanceof}{{FastDatePrinter}}}{==}{false}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{toClass}{.}{isPrimitive}{()}}{==}{false}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isAsciiNumeric}{(}{ch}{)}}{==}{false}}{)}{{{}{{return}{defaultValue}{;}}{}}}}{{return}{{ch}{-}{NUMBER_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{instanceof}{{CharSet}}}{==}{false}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{I}}{arg}}}
{AST_ROOT_SC2NF{{final}{{{Pair}}{<}{{IDKey}}{,}{{IDKey}}{>}}{{swappedPair}{=}{{Pair}{.}{of}{(}{{pair}{.}{getLeft}{()}}{,}{{pair}{.}{getRight}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{hasNext}{==}{false}}{)}{{{}{{throw}{{new}{{NoSuchElementException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{obj}{instanceof}{{CharRange}}}{==}{false}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{CharUtils}{.}{toIntValue}{(}{CHAR_CONS}{)}}{;}}{}}}{{catch}{(}{{final}{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{tzId}{.}{equalsIgnoreCase}{(}{STRING_CONSTANT}{)}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{cal}{.}{setTimeZone}{(}{{TimeZone}{.}{getTimeZone}{(}{{STRING_CONSTANT}{+}{value}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{cal}{.}{setTimeZone}{(}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toAppendTo}{.}{append}{(}{{{(}{{(}{{String}}{)}{obj}}{)}}{.}{toUpperCase}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{expected}{.}{append}{(}{{{{args}{[}{NUMBER_CONSTANT}{]}}{.}{toString}{()}}{.}{toUpperCase}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{StringUtils}{.}{equalsAny}{(}{FOO}{,}{{FOO}{.}{toUpperCase}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{toAppendTo}{.}{append}{(}{{{(}{{(}{{String}}{)}{obj}}{)}}{.}{toLowerCase}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{utc}{=}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TimeZone}{.}{setDefault}{(}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{final}{{TimeZone}}{{utc}{=}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{timeZone}{=}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{TimeZone}}{{timeZone}{=}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertFormats}{(}{expectedValue}{,}{pattern}{,}{timeZone}{,}{{createFebruaryTestDate}{(}{timeZone}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{Calendar}}{{c}{=}{{Calendar}{.}{getInstance}{(}{{TimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{substring}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{getContent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tokenizer}{.}{nextToken}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{tok}{.}{next}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ObjectUtils}{.}{identityToString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{strip}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{trim}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringYesNo}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringOnOff}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toStringTrueFalse}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toIntegerObject}{(}{null}{,}{six}{,}{seven}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toIntegerObject}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{BooleanUtils}{.}{toBooleanObject}{(}{{(}{{Integer}}{)}{null}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{unescapeJson}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{escapeJson}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{unescapeCsv}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{escapeCsv}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{escapeEcmaScript}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{escapeEcmaScript}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{unescapeJava}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringEscapeUtils}{.}{escapeJava}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{{new}{{{MutableObject}}{<>}}{()}}{.}{getValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{getDigits}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{wrap}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{StringUtils}{.}{rotate}{(}{null}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ClassUtils}{.}{getAllInterfaces}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ClassUtils}{.}{getAllSuperclasses}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{swapCase}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{initials}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{uncapitalize}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{uncapitalize}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{capitalizeFully}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{capitalizeFully}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{capitalize}{(}{null}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{WordUtils}{.}{capitalize}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{null}{,}{{CharUtils}{.}{unicodeEscaped}{(}{null}{)}}{)}}{;}}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{CharUtils}{.}{unicodeEscaped}{(}{CHARACTER_A}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{CharUtils}{.}{toString}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Double.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Float.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Long.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{final}{{{Integer}}{[]}}{{iArray}{=}{null}}{;}}{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{iArray}{,}{Integer.MIN_VALUE}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{l}{,}{Integer.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{s}{,}{Short.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{,}{Byte.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{,}{Character.MIN_VALUE}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{null}{,}{false}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toPrimitive}{(}{b}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{null}{,}{{ArrayUtils}{.}{toMap}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{null}{,}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{null}{,}{{CharSequenceUtils}{.}{subSequence}{(}{StringUtils.EMPTY}{,}{{-}{NUMBER_CONSTANT}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertTrue}{(}{{{toString}{.}{indexOf}{(}{SECRET_VALUE}{)}}{>}{NUMBER_CONSTANT}}{)}}{;}}{{{this}{.}{validateNonSecretField}{(}{toString}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{ArrayUtils.INDEX_NOT_FOUND}{,}{{toString}{.}{indexOf}{(}{SECRET_VALUE}{)}}{)}}{;}}{{{this}{.}{validateNonSecretField}{(}{toString}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertNotEquals}{(}{{summer}{.}{getTime}{()}}{,}{{standard}{.}{getTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{cal}{.}{getTime}{()}}{,}{date}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{value}{,}{{SerializationUtils}{.}{deserialize}{(}{serialized}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{watch}{.}{getStartTime}{()}}{;}}{{{Assert}{.}{assertTrue}{(}{{{watch}{.}{getStartTime}{()}}{>=}{beforeStopWatch}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testUTC}{()}{{{}{{{Assert}{.}{assertEquals}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{,}{{FastTimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testZ}{()}{{{}{{{Assert}{.}{assertEquals}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{,}{{FastTimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testBareGmt}{()}{{{}{{{Assert}{.}{assertEquals}{(}{{FastTimeZone}{.}{getGmtTimeZone}{()}}{,}{{FastTimeZone}{.}{getTimeZone}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testGetGmtTimeZone}{()}{{{}{{{Assert}{.}{assertEquals}{(}{NUMBER_CONSTANT}{,}{{{FastTimeZone}{.}{getGmtTimeZone}{()}}{.}{getRawOffset}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Assert}{.}{assertEquals}{(}{REPEAT}{,}{{{future}{.}{get}{()}}{.}{intValue}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{TypeUtils}{.}{toString}{(}{{method}{.}{getGenericReturnType}{()}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertTrue}{(}{{TypeUtils}{.}{isAssignable}{(}{fromType}{,}{failingToType}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertArrayEquals}{(}{expectedArray}{,}{{TypeUtils}{.}{normalizeUpperBounds}{(}{typeArray}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{public}{void}{testInvokeMethodForceAccessNoArgs}{(}{)}{throws}{{Exception}}{{{}{{{Assert}{.}{assertEquals}{(}{STRING_CONSTANT}{,}{{MethodUtils}{.}{invokeMethod}{(}{testBean}{,}{true}{,}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{expected}{,}{hostName}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{isoForm}{,}{{printer}{.}{format}{(}{vulgar}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Assert}{.}{assertEquals}{(}{{vulgar}{.}{getTime}{()}}{,}{{cal}{.}{getTime}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{T}}{object}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{for}{(}{{{String}}{s}}{:}{set}{)}{{{}{{{add}{(}{s}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{boolean}{excludeNullValues}}}
{AST_ROOT_SC2NF{{{StringBuilder}}{{builder}{=}{{new}{{StringBuilder}}{(}{count}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{expected}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{TimeZone}}{{tz}{=}{{FastTimeZone}{.}{getGmtTimeZone}{(}{timeZone}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{boolean}{{result}{=}{{RandomUtils}{.}{nextBoolean}{()}}}{;}}{{{assertTrue}{(}{{{result}{==}{true}}{||}{{result}{==}{false}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Object}}{other}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{inDaylightTime}{(}{{{Date}}{date}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{void}{setRawOffset}{(}{{int}{offsetMillis}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{Class}}{<}{?}{>}}{anInterface}}}
{AST_ROOT_SC2NF{{{ReflectionToStringBuilder}}{{oldBuilder}{=}{{new}{{ReflectionToStringBuilder}}{(}{BOTH_NULL}{)}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{char}{chr}}{:}{chrs}{)}{{{}{{if}{(}{{{chars}{.}{contains}{(}{chr}{)}}{==}{expect}}{)}{{{}{{{buffer}{.}{append}{(}{chr}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{group}}}
{AST_ROOT_SC2NF{{{String}}{group}}}
{AST_ROOT_SC2NF{{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{{String}}{.}{.}{.}{s}}}
{AST_ROOT_SC2NF{{{CharRange}}{{a}{=}{{CharRange}{.}{is}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{CharSequence}}{cs}}}
{AST_ROOT_SC2NF{{{String}}{value}}}
{AST_ROOT_SC2NF{{{}{{{list}{.}{add}{(}{throwable}{)}}{;}}{{{throwable}{=}{{ExceptionUtils}{.}{getCause}{(}{throwable}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{delta}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{performStateCheck}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{typeArguments}}{=}{{typeArguments}{.}{clone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{daemonFlag}{=}{null}}{;}}}
{AST_ROOT_SC2NF{{{}{{{daemonFlag}{=}{{Boolean}{.}{valueOf}{(}{f}{)}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{daemonFlag}{=}{builder.daemonFlag}}{;}}}
{AST_ROOT_SC2NF{{public}{final}{{Boolean}}{getDaemonFlag}{()}{{{}{{return}{daemonFlag}{;}}{}}}}}
{AST_ROOT_SC2NF{{{daemonFlag}{=}{builder.daemon}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{valueAsString}{.}{startsWith}{(}{{getArrayStart}{()}}{)}}{&&}{{valueAsString}{.}{startsWith}{(}{{getArrayEnd}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{str}{==}{null}}{?}{EMPTY}{:}{str}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{{String}}{{sanitizedSeparator}{=}{{defaultString}{(}{separator}{,}{StringUtils.EMPTY}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{suffix}{==}{null}}}{)}{{{}{{return}{{{str}{==}{null}}{&&}{{suffix}{==}{null}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{str}{==}{null}}{||}{{prefix}{==}{null}}}{)}{{{}{{return}{{{str}{==}{null}}{&&}{{prefix}{==}{null}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{bypassReflectionClasses}{=}{{new}{{{ArrayList}}{<}{{{Class}}{<}{?}{>}}{>}}{()}}}{;}}{{{bypassReflectionClasses}{.}{add}{(}{{{String}}{.}{class}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{shuffle}{(}{array1}{)}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Field}}{field}}{:}{allFields}{)}{{{}{{if}{(}{{{field}{.}{getName}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{expected}{++}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{Field}}{field}}{:}{allFields}{)}{{{}{{if}{(}{{{field}{.}{getName}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{)}{{{}{{{expected}{++}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{{buffer}{.}{append}{(}{CHAR_CONS}{)}}{.}{append}{(}{value}{)}}{.}{append}{(}{CHAR_CONS}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{super}{.}{appendFieldStart}{(}{buffer}{,}{{FIELD_NAME_QUOTE}{+}{fieldName}{+}{FIELD_NAME_QUOTE}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{iterator}{.}{hasNext}{()}}}{)}{{{}{{return}{{Objects}{.}{toString}{(}{first}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{StringBuilder}}{{buf}{=}{{new}{{StringBuilder}}{(}{{noOfItems}{*}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{int}{[]}}{{indexesToRemove}{=}{{new}{{int}{[]}}{{}}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{str}{.}{length}{()}}{>}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{diffs}{.}{size}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{OBJECTS_SAME_STRING}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SystemUtils.IS_OS_WINDOWS}{?}{{System}{.}{getenv}{(}{STRING_CONSTANT}{)}}{:}{{System}{.}{getenv}{(}{STRING_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ToStringStyle.JSON_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ToStringStyle.NO_CLASS_NAME_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ToStringStyle.MULTI_LINE_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ToStringStyle.SIMPLE_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ToStringStyle.SHORT_PREFIX_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ToStringStyle.NO_FIELD_NAMES_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ToStringStyle.DEFAULT_STYLE}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{StrSubstitutor}{.}{replace}{(}{source}{,}{valueMap}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Fraction}{.}{getFraction}{(}{{numerator}{/}{gcd}}{,}{{denominator}{/}{gcd}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{{objectData}{!=}{null}}{,}{STRING_CONSTANT}{)}}{;}}{{return}{{SerializationUtils}{.}{deserialize}{(}{{new}{{ByteArrayInputStream}}{(}{objectData}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{T}}{)}{{SerializationUtils}{.}{deserialize}{(}{{SerializationUtils}{.}{serialize}{(}{msg}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Throwable}}{{root}{=}{{ExceptionUtils}{.}{getRootCause}{(}{th}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{{{Throwable}}{[]}}{{throwables}{=}{{ExceptionUtils}{.}{getThrowables}{(}{throwable}{)}}}{;}}}
{AST_ROOT_SC2NF{{final}{int}{{srcLength}{=}{{ArrayUtils}{.}{getLength}{(}{array}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{ArrayUtils}{.}{isEmpty}{(}{array}{)}}{)}{{{}{{return}{INDEX_NOT_FOUND}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{ObjectUtils.NULL}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{final}{int}{{tmpHash}{=}{{ObjectUtils}{.}{hashCode}{(}{object}{)}}}{;}}{{{hash}{=}{{{hash}{*}{NUMBER_CONSTANT}}{+}{tmpHash}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{ObjectUtils}{.}{equals}{(}{object1}{,}{object2}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MemberUtils}{.}{isMatchingExecutable}{(}{{Executable}{.}{of}{(}{method}{)}}{,}{parameterTypes}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{MemberUtils}{.}{isMatchingExecutable}{(}{{Executable}{.}{of}{(}{method}{)}}{,}{parameterTypes}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ClassUtils}{.}{getPackageName}{(}{{getCanonicalName}{(}{canonicalName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ClassUtils}{.}{getShortClassName}{(}{{getCanonicalName}{(}{canonicalName}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{TypeUtils}{.}{wrap}{(}{{(}{{Type}}{)}{type}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{{TypeUtils}{.}{isAssignable}{(}{owner}{,}{{raw}{.}{getEnclosingClass}{()}}{)}}{,}{STRING_CONSTANT}{,}{owner}{,}{raw}{)}}{;}}{{{useOwner}{=}{owner}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{parameterizedTypeArguments}{=}{{new}{{{HashMap}}{<>}}{(}{typeArguments}{)}}}{;}}{{{parameterizedTypeArguments}{.}{putAll}{(}{{TypeUtils}{.}{getTypeArguments}{(}{p}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Validate}{.}{notNull}{(}{chars}{)}}{;}}}
{AST_ROOT_SC2NF{{{Validate}{.}{notNull}{(}{collection}{)}}{;}}}
{AST_ROOT_SC2NF{{{Validate}{.}{notNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{{Validate}{.}{notNull}{(}{iterable}{)}}{;}}}
{AST_ROOT_SC2NF{{{Validate}{.}{notNull}{(}{array}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmpty}{(}{str}{)}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{replaceFirst}{(}{text}{,}{regex}{,}{StringUtils.EMPTY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{pattern}{.}{matcher}{(}{decomposed}{)}}{.}{replaceAll}{(}{StringUtils.EMPTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{iValue}{!=}{NUMBER_CONSTANT}}{?}{{iValue}{+}{NUMBER_CONSTANT}}{:}{Calendar.SUNDAY}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{_mask}{=}{mask}}{;}}{{{_shift_count}{=}{{{mask}{!=}{NUMBER_CONSTANT}}{?}{{Integer}{.}{numberOfTrailingZeros}{(}{mask}{)}}{:}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{mRule}{.}{appendTo}{(}{buffer}{,}{{{value}{!=}{Calendar.SUNDAY}}{?}{{value}{-}{NUMBER_CONSTANT}}{:}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{lhs}{)}{{{}{{{comparison}{=}{{+}{NUMBER_CONSTANT}}}{;}}{}}}{else}{{{}{{{comparison}{=}{{-}{NUMBER_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{rhs}{==}{null}}{)}{{{}{{{comparison}{=}{{+}{NUMBER_CONSTANT}}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{retDT}{=}{{new}{{DateTime}}{(}{s}{)}}}{;}}{}}}{{catch}{(}{{{ParseException}}{pe}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{ParseException}}{e}}}
{AST_ROOT_SC2NF{{{Object}}{f}}}
{AST_ROOT_SC2NF{{{Object}}{f}}}
{AST_ROOT_SC2NF{{{Object}}{f}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{int}{minDigits}}}
{AST_ROOT_SC2NF{{{DateTimeField}}{field}}}
{AST_ROOT_SC2NF{{{DateTimeField}}{field}}}
{AST_ROOT_SC2NF{{char}{c}}}
{AST_ROOT_SC2NF{{{Object}}{element}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{{DateTimeParser}}{parser}}}
{AST_ROOT_SC2NF{{{DateTimePrinter}}{printer}}}
{AST_ROOT_SC2NF{{{DateTimeFormatter}}{formatter}}}
{AST_ROOT_SC2NF{{{Chronology}}{chrono}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{zone}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{Math}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Chronology}}{{chrono}{=}{{ISOChronology}{.}{getInstanceUTC}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{{long}{millis}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{long}{millis}}}
{AST_ROOT_SC2NF{{GJWeekyearDateTimeField}{(}{{{ProlepticChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ReadableInstant}}{instant}}}
{AST_ROOT_SC2NF{{public}{int}{get}{(}{{long}{millis}}{)}{{{}{{return}{BuddhistChronology.BE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getNameKey}{(}{{long}{millis}}{)}{{{}{{return}{iNameKey}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{millis}{,}{{value}{-}{{get}{(}{millis}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{add}{(}{{long}{millis}}{,}{{int}{value}}{)}{{{}{{return}{{millis}{+}{{value}{*}{iChronology.MILLIS_PER_DAY}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ParseException}}{pe}}}
{AST_ROOT_SC2NF{{{}{{return}{{add}{(}{millis}{,}{{value}{-}{{get}{(}{millis}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{add}{(}{{long}{millis}}{,}{{int}{value}}{)}{{{}{{return}{{millis}{+}{{value}{*}{iChronology.MILLIS_PER_DAY}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{long}{add}{(}{{long}{millis}}{,}{{int}{value}}{)}{{{}{{return}{{millis}{+}{{value}{*}{iChronology.MILLIS_PER_DAY}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{getMillis}{()}}{<}{{readableInstant}{.}{getMillis}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Chronology}}{{chrono}{=}{{getChronology}{()}}}{;}}{{return}{{{chrono}{!=}{null}}{?}{{chrono}{.}{getDateTimeZone}{()}}{:}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{AbstractInstant}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ParseException}}{pe}}{)}{{{}{{{pe}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{retDT}{=}{{new}{{DateTime}}{(}{s}{,}{DateTimeZone.UTC}{)}}}{;}}{}}}{{catch}{(}{{{ParseException}}{pe}}{)}{{{}{{{pe}{.}{printStackTrace}{()}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{GJMonthOfYearDateTimeField}{(}{{{ProlepticChronology}}{chronology}}{)}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{iChronology}{=}{chronology}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{value}}}
{AST_ROOT_SC2NF{{public}{abstract}{boolean}{equals}{(}{{{Object}}{obj}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{long}{millisUTC}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{ReadableInstant}}{instant}}{)}{{{}{{throw}{{unsupported}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{print}{(}{{{ReadableInstant}}{instant}}{)}{{{}{{return}{{mPrinter}{.}{print}{(}{instant}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{char}{c}}}
{AST_ROOT_SC2NF{{char}{style}}}
{AST_ROOT_SC2NF{{char}{style}}}
{AST_ROOT_SC2NF{{public}{{RealMatrix}}{copy}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{seenNames}{.}{add}{(}{{nameNode}{.}{getQualifiedName}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{seenNames}{.}{contains}{(}{{nameNode}{.}{getQualifiedName}{()}}{)}}{)}{{{}{{return}{RemovalType.REMOVE_ALL}{;}}{}}}}{{{jsdocNode}{.}{setJSDocInfo}{(}{{getAllTypeJSDoc}{()}}{)}}{;}}{{return}{RemovalType.REMOVE_RHS}{;}}{}}}}
{AST_ROOT_SC2NF{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{{new}{{RemoveCode}}{(}{compiler}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{plot}{.}{setToolTipGenerator}{(}{{new}{{StandardPieToolTipGenerator}}{(}{StandardPieToolTipGenerator.DEFAULT_SECTION_LABEL_FORMAT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{tooltips}{)}{{{}{{{plot}{.}{setToolTipGenerator}{(}{{new}{{StandardPieToolTipGenerator}}{(}{StandardPieToolTipGenerator.DEFAULT_SECTION_LABEL_FORMAT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{int}{getLength}{()}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}}}

