=================================================
Project : lang_19	start : 18/01/14 00:01
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testUnfinishedEntity | 18/01/14 00:02
Sun Jan 14 00:03:13 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,46
Sun Jan 14 00:03:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,47
Sun Jan 14 00:03:59 AEDT 2018 Sun Jan 14 00:03:59 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Sun Jan 14 00:03:59 AEDT 2018 Sun Jan 14 00:03:59 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Sun Jan 14 00:03:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Sun Jan 14 00:05:48 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Sun Jan 14 00:05:50 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Sun Jan 14 00:09:44 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,45
Sun Jan 14 00:09:45 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,52
Sun Jan 14 00:16:58 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,54
Sun Jan 14 00:16:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,56
Sun Jan 14 00:17:01 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82
Sun Jan 14 00:36:52 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,38
Sun Jan 14 00:36:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,40
Sun Jan 14 00:37:00 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,89
Sun Jan 14 01:02:59 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,54
Sun Jan 14 01:03:10 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,58
Sun Jan 14 01:03:57 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,59
Sun Jan 14 01:03:58 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,76
Sun Jan 14 01:04:02 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,79
Sun Jan 14 01:04:21 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,82
Sun Jan 14 01:06:27 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,83
Sun Jan 14 01:10:34 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,86
Timeout time : 18/01/14 01:18
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testOutOfBounds_purify_2 | 18/01/14 01:18
Sun Jan 14 01:19:12 AEDT 2018 Sun Jan 14 01:19:12 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Sun Jan 14 01:19:13 AEDT 2018 Sun Jan 14 01:19:13 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Sun Jan 14 01:19:14 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Sun Jan 14 01:21:02 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Sun Jan 14 01:21:02 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Sun Jan 14 01:24:56 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 01:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 01:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 01:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 01:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 01:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 01:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 01:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 01:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 01:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 01:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 01:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 01:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='\''){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 01:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 01:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 01:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 01:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 01:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 01:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 01:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 01:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 01:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 01:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 01:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 01:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 01:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 01:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 02:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 02:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 02:02
----------------------------------------
Sun Jan 14 02:02:25 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,38
Sun Jan 14 02:02:31 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,40
Sun Jan 14 02:02:32 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,89
Sun Jan 14 02:28:24 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,54
Sun Jan 14 02:28:37 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,58
Sun Jan 14 02:29:26 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,59
Sun Jan 14 02:29:27 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,76
Sun Jan 14 02:29:32 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,79
Sun Jan 14 02:29:51 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,82
Sun Jan 14 02:31:53 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,83
Timeout time : 18/01/14 02:34
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testOutOfBounds_purify_3 | 18/01/14 02:34
Sun Jan 14 02:34:58 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,46
Sun Jan 14 02:35:42 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,47
Sun Jan 14 02:35:43 AEDT 2018 Sun Jan 14 02:35:43 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Sun Jan 14 02:35:45 AEDT 2018 Sun Jan 14 02:35:45 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Sun Jan 14 02:35:46 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Sun Jan 14 02:37:35 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Sun Jan 14 02:37:37 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Sun Jan 14 02:41:33 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,45
Sun Jan 14 02:41:35 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,52
Sun Jan 14 02:48:19 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,54
Sun Jan 14 02:48:20 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 02:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 02:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 02:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 02:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 02:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 02:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 02:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 02:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 03:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 03:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 03:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 03:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 03:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 03:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='\''){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 03:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 03:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 03:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 03:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 03:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 03:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 03:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 03:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 03:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 03:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 03:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 03:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 03:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 03:24
----------------------------------------
Sun Jan 14 03:24:55 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,38
Sun Jan 14 03:25:01 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,40
Sun Jan 14 03:25:03 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,89
Timeout time : 18/01/14 03:50
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testOutOfBounds_purify_4 | 18/01/14 03:50
Sun Jan 14 03:51:08 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,46
Sun Jan 14 03:51:52 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,47
Sun Jan 14 03:51:53 AEDT 2018 Sun Jan 14 03:51:53 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Sun Jan 14 03:51:55 AEDT 2018 Sun Jan 14 03:51:55 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Sun Jan 14 03:51:57 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Sun Jan 14 03:53:46 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Sun Jan 14 03:53:47 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Sun Jan 14 03:57:42 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,45
Sun Jan 14 03:57:43 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,52
Sun Jan 14 04:04:26 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,54
Sun Jan 14 04:04:27 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 04:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 04:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 04:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 04:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 04:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 04:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 04:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 04:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 04:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/14 04:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/14 04:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/14 04:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='\''){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/14 04:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 04:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 04:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 04:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 04:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 04:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 04:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 04:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/14 04:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/14 04:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/14 04:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/14 04:40
----------------------------------------
Sun Jan 14 04:40:32 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,38
Sun Jan 14 04:40:38 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,40
Sun Jan 14 04:40:38 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,89
Timeout time : 18/01/14 05:06
