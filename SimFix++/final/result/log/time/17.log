=================================================
Project : time_17	start : 18/01/14 07:28
Current failed test : org.joda.time.TestDateTimeZoneCutover::testBug3476684_adjustOffset | 18/01/14 07:28
Sun Jan 14 07:31:07 AEDT 2018 org.joda.time.DateTimeZone,1167
Sun Jan 14 07:49:32 AEDT 2018 org.joda.time.DateTimeZone,1168
Sun Jan 14 07:49:32 AEDT 2018 org.joda.time.DateTimeZone,1169
Sun Jan 14 07:49:34 AEDT 2018 org.joda.time.DateTimeZone,1174
Sun Jan 14 07:49:34 AEDT 2018 org.joda.time.DateTimeZone,1175
Sun Jan 14 07:49:35 AEDT 2018 org.joda.time.DateTime,665
Sun Jan 14 07:50:20 AEDT 2018 org.joda.time.DateTime,666
Sun Jan 14 07:50:20 AEDT 2018 org.joda.time.DateTime,685
Sun Jan 14 07:51:05 AEDT 2018 org.joda.time.DateTime,686
Sun Jan 14 07:51:05 AEDT 2018 org.joda.time.DateTime,331
Sun Jan 14 07:51:38 AEDT 2018 Sun Jan 14 07:51:38 AEDT 2018 : org.joda.time.DateTime,333=>Find no block
Sun Jan 14 07:51:39 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1531
Sun Jan 14 07:53:18 AEDT 2018 org.joda.time.DateTime,1098
Sun Jan 14 07:53:20 AEDT 2018 org.joda.time.DateTime,1101

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(hours==0){
return this;
}
long instant=getChronology().hours().getDifference(getMillis(),hours);
return withMillis(instant);

Time : 18/01/14 07:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(hours!=0){
return this;
}
long instant=getChronology().hours().add(getMillis(),hours);
return withMillis(instant);

Time : 18/01/14 07:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(hours==0){
return this;
}
int instant=getChronology().hours().getDifference(getMillis(),hours);
return withMillis(instant);

Time : 18/01/14 07:59
----------------------------------------
Sun Jan 14 08:03:46 AEDT 2018 org.joda.time.DateTime,1102
Sun Jan 14 08:03:47 AEDT 2018 org.joda.time.base.AbstractInstant,71
Sun Jan 14 08:07:53 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,202
Sun Jan 14 08:20:30 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1535
Sun Jan 14 08:22:53 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1536
Sun Jan 14 08:22:53 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1574
Sun Jan 14 08:25:30 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,162
Sun Jan 14 08:39:10 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,163
Sun Jan 14 08:39:11 AEDT 2018 Sun Jan 14 08:39:11 AEDT 2018 : org.joda.time.tz.CachedDateTimeZone,164=>Find no block
Sun Jan 14 08:39:12 AEDT 2018 org.joda.time.DateTime,582
Sun Jan 14 08:40:05 AEDT 2018 org.joda.time.chrono.ZonedChronology,318

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

Time : 18/01/14 08:41
----------------------------------------
Sun Jan 14 08:55:43 AEDT 2018 org.joda.time.chrono.ZonedChronology,319
Sun Jan 14 08:55:43 AEDT 2018 org.joda.time.chrono.ZonedChronology,320
Sun Jan 14 08:55:44 AEDT 2018 org.joda.time.base.AbstractInstant,424
Sun Jan 14 08:58:11 AEDT 2018 Sun Jan 14 08:58:11 AEDT 2018 : org.joda.time.tz.ZoneInfoProvider,152=>Find no block
Sun Jan 14 08:58:11 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,153
Sun Jan 14 08:59:04 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,154
Sun Jan 14 08:59:04 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,155
Sun Jan 14 08:59:05 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,150
Sun Jan 14 08:59:05 AEDT 2018 org.joda.time.DateTimeZone,212
Sun Jan 14 09:02:27 AEDT 2018 org.joda.time.DateTimeZone,210
Sun Jan 14 09:14:09 AEDT 2018 org.joda.time.DateTimeZone,211
Sun Jan 14 09:14:09 AEDT 2018 org.joda.time.DateTimeZone,204
Sun Jan 14 09:15:16 AEDT 2018 org.joda.time.DateTimeZone,207
Sun Jan 14 09:15:17 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,145
Sun Jan 14 09:17:27 AEDT 2018 org.joda.time.chrono.ZonedChronology,344
Sun Jan 14 10:03:46 AEDT 2018 org.joda.time.chrono.ZonedChronology,345
Sun Jan 14 10:03:47 AEDT 2018 org.joda.time.chrono.ZonedChronology,347
Sun Jan 14 10:03:47 AEDT 2018 org.joda.time.chrono.ZonedChronology,350
Sun Jan 14 10:03:48 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,136
Sun Jan 14 10:05:05 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,140
Sun Jan 14 10:08:34 AEDT 2018 org.joda.time.tz.ZoneInfoProvider,141
Sun Jan 14 10:08:34 AEDT 2018 org.joda.time.base.AbstractInstant,262
Sun Jan 14 10:09:19 AEDT 2018 org.joda.time.base.AbstractInstant,265

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(this!=readableInstant){
return true;
}
if(readableInstant instanceof ReadableInstant==false){
return false;
}
ReadableInstant otherInstant=(ReadableInstant)readableInstant;
return getMillis()==otherInstant.getMillis()&&FieldUtils.equals(getChronology(),otherInstant.getChronology());

Time : 18/01/14 10:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(this!=null){
return true;
}
if(readableInstant instanceof ReadableInstant==false){
return false;
}
ReadableInstant otherInstant=(ReadableInstant)readableInstant;
return getMillis()==otherInstant.getMillis()&&FieldUtils.equals(getChronology(),otherInstant.getChronology());

Time : 18/01/14 10:12
----------------------------------------
Sun Jan 14 10:13:21 AEDT 2018 org.joda.time.base.AbstractInstant,266
Sun Jan 14 10:13:22 AEDT 2018 Sun Jan 14 10:13:22 AEDT 2018 : org.joda.time.base.BaseDateTime,225=>Find no block
Sun Jan 14 10:13:22 AEDT 2018 org.joda.time.base.BaseDateTime,223
Sun Jan 14 10:13:24 AEDT 2018 org.joda.time.base.AbstractInstant,259
Sun Jan 14 10:13:24 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,160
Sun Jan 14 10:13:25 AEDT 2018 org.joda.time.field.PreciseDurationDateTimeField,127
Sun Jan 14 10:27:36 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,145
Sun Jan 14 10:30:46 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,146
Sun Jan 14 10:30:47 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,152
Sun Jan 14 10:32:12 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,153
Sun Jan 14 10:32:12 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,155
Sun Jan 14 10:32:38 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,156
Sun Jan 14 10:39:11 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,158
Sun Jan 14 10:39:12 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,159
Sun Jan 14 10:39:13 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,166
Sun Jan 14 10:45:02 AEDT 2018 Sun Jan 14 10:45:02 AEDT 2018 : org.joda.time.tz.CachedDateTimeZone,180=>Find no block
Sun Jan 14 10:45:03 AEDT 2018 Sun Jan 14 10:45:03 AEDT 2018 : org.joda.time.tz.CachedDateTimeZone,177=>Find no block
Sun Jan 14 10:45:03 AEDT 2018 Sun Jan 14 10:45:03 AEDT 2018 : org.joda.time.tz.CachedDateTimeZone,178=>Find no block
Sun Jan 14 10:45:04 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,181
Sun Jan 14 10:45:25 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,182
Sun Jan 14 10:45:26 AEDT 2018 Sun Jan 14 10:45:26 AEDT 2018 : org.joda.time.tz.CachedDateTimeZone,183=>Find no block
Sun Jan 14 10:45:26 AEDT 2018 org.joda.time.field.PreciseDurationDateTimeField,126
Sun Jan 14 10:45:27 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1533
Sun Jan 14 10:50:45 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1534
Sun Jan 14 10:50:45 AEDT 2018 org.joda.time.tz.CachedDateTimeZone,198
Sun Jan 14 10:50:46 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1528
Sun Jan 14 10:55:37 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1529
Sun Jan 14 10:55:38 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1530
Sun Jan 14 10:55:39 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1570
Sun Jan 14 10:59:09 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1571
Sun Jan 14 10:59:09 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1572
Sun Jan 14 11:06:16 AEDT 2018 org.joda.time.tz.DateTimeZoneBuilder,1573
Sun Jan 14 11:06:17 AEDT 2018 org.joda.time.DateTimeFieldType,522
Sun Jan 14 11:17:35 AEDT 2018 org.joda.time.DateTimeZone,955
Sun Jan 14 11:21:27 AEDT 2018 org.joda.time.DateTime,220

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
super(chronology);

Time : 18/01/14 11:22
----------------------------------------
Sun Jan 14 11:23:33 AEDT 2018 Sun Jan 14 11:23:33 AEDT 2018 : org.joda.time.DateTime,221=>Find no block
Sun Jan 14 11:23:34 AEDT 2018 org.joda.time.DateTimeZone,951
Sun Jan 14 11:31:24 AEDT 2018 org.joda.time.DateTimeZone,952
Sun Jan 14 11:31:24 AEDT 2018 org.joda.time.DateTimeZone,953
Sun Jan 14 11:31:25 AEDT 2018 org.joda.time.DateTimeZone,954
Sun Jan 14 11:31:26 AEDT 2018 org.joda.time.DateTimeUtils,167
Sun Jan 14 11:37:06 AEDT 2018 org.joda.time.DateTimeUtils,168
Sun Jan 14 11:37:07 AEDT 2018 org.joda.time.DateTimeUtils,171
Sun Jan 14 11:37:08 AEDT 2018 org.joda.time.DateTimeUtils,164
Sun Jan 14 11:37:09 AEDT 2018 org.joda.time.DateTimeUtils,149
Sun Jan 14 11:40:32 AEDT 2018 org.joda.time.DateTimeUtils,146
Sun Jan 14 11:41:26 AEDT 2018 org.joda.time.chrono.AssembledChronology,192
Sun Jan 14 11:41:28 AEDT 2018 org.joda.time.chrono.ZonedChronology,147
Sun Jan 14 12:16:12 AEDT 2018 org.joda.time.chrono.ZonedChronology,139
Sun Jan 14 12:16:12 AEDT 2018 org.joda.time.chrono.ZonedChronology,140
Sun Jan 14 12:16:13 AEDT 2018 org.joda.time.chrono.ZonedChronology,141
Sun Jan 14 12:16:14 AEDT 2018 org.joda.time.chrono.ZonedChronology,142
Sun Jan 14 12:16:15 AEDT 2018 org.joda.time.chrono.ZonedChronology,119
Sun Jan 14 12:17:17 AEDT 2018 org.joda.time.DateTimeFieldType,524
Sun Jan 14 12:21:23 AEDT 2018 org.joda.time.chrono.BasicGJChronology,140
Sun Jan 14 12:22:21 AEDT 2018 org.joda.time.chrono.AssembledChronology,176
Sun Jan 14 12:22:23 AEDT 2018 org.joda.time.chrono.BasicGJChronology,121
Sun Jan 14 12:23:20 AEDT 2018 org.joda.time.DateTimeZone,900
Sun Jan 14 12:27:34 AEDT 2018 org.joda.time.DateTimeZone,910
Timeout time : 18/01/14 12:31
