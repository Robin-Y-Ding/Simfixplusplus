=================================================
Project : lang_19	start : 18/01/12 14:05
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testUnfinishedEntity | 18/01/12 14:05
Fri Jan 12 14:06:38 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,46
Fri Jan 12 14:07:51 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,47
Fri Jan 12 14:07:51 AEDT 2018 Fri Jan 12 14:07:51 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Fri Jan 12 14:07:52 AEDT 2018 Fri Jan 12 14:07:52 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Fri Jan 12 14:07:52 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Fri Jan 12 14:12:11 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Fri Jan 12 14:12:12 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Fri Jan 12 14:22:09 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,45
Fri Jan 12 14:22:09 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,52
Fri Jan 12 14:34:52 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,54
Fri Jan 12 14:34:52 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,56
Fri Jan 12 14:34:52 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82
Fri Jan 12 15:20:10 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,38
Fri Jan 12 15:20:32 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,40
Fri Jan 12 15:20:32 AEDT 2018 org.apache.commons.lang3.text.translate.CharSequenceTranslator,89
Timeout time : 18/01/12 15:21
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testOutOfBounds_purify_2 | 18/01/12 15:21
Fri Jan 12 15:22:13 AEDT 2018 Fri Jan 12 15:22:13 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Fri Jan 12 15:22:13 AEDT 2018 Fri Jan 12 15:22:13 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Fri Jan 12 15:22:14 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Fri Jan 12 15:26:13 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Fri Jan 12 15:26:13 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Fri Jan 12 15:35:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 15:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 15:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 15:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 15:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 15:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 15:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 15:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 15:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 15:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 15:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 15:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 15:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 15:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 15:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 16:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 16:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 16:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 16:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 16:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 16:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 16:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 16:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 16:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 16:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 16:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 16:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 16:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 16:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 16:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 16:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 16:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='\''){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&false){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((seqEnd==0)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((seqEnd==0)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end=Integer.MAX_VALUE;
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 16:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 16:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 16:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 16:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/12 16:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}
return 0;

Time : 18/01/12 16:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/12 16:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/12 16:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}
return 0;

Time : 18/01/12 16:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 16:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/12 16:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}
return 0;

Time : 18/01/12 16:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/12 16:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/12 16:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}
return 0;

Time : 18/01/12 16:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/12 16:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}
return 0;

Time : 18/01/12 16:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/12 16:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/12 16:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}
return 0;

Time : 18/01/12 16:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}
return 0;

Time : 18/01/12 16:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}
return 0;

Time : 18/01/12 16:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}
return 0;

Time : 18/01/12 16:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/12 16:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}
return 0;

Time : 18/01/12 16:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}
return 0;

Time : 18/01/12 16:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}
return 0;

Time : 18/01/12 16:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}
return 0;

Time : 18/01/12 16:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}
return 0;

Time : 18/01/12 16:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}
return 0;

Time : 18/01/12 16:37
----------------------------------------
Timeout time : 18/01/12 16:37
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testOutOfBounds_purify_3 | 18/01/12 16:37
Fri Jan 12 16:37:55 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,46
Fri Jan 12 16:38:58 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,47
Fri Jan 12 16:38:58 AEDT 2018 Fri Jan 12 16:38:58 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Fri Jan 12 16:38:59 AEDT 2018 Fri Jan 12 16:38:59 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Fri Jan 12 16:38:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Fri Jan 12 16:42:58 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Fri Jan 12 16:42:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Fri Jan 12 16:52:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,45
Fri Jan 12 16:52:59 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,52
Fri Jan 12 17:04:47 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,54
Fri Jan 12 17:04:47 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 17:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 17:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 17:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 17:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 17:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 17:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 17:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 17:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 17:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 17:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 17:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 17:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 17:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 17:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 17:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 17:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 17:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 17:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 17:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 17:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 17:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 17:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 17:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='\''){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&false){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((seqEnd==0)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((seqEnd==0)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end=Integer.MAX_VALUE;
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 17:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 17:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 17:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 17:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/12 17:52
----------------------------------------
Timeout time : 18/01/12 17:52
Current failed test : org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testOutOfBounds_purify_4 | 18/01/12 17:52
Fri Jan 12 17:53:30 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,46
Fri Jan 12 17:54:33 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,47
Fri Jan 12 17:54:33 AEDT 2018 Fri Jan 12 17:54:33 AEDT 2018 : org.apache.commons.lang3.text.translate.CharSequenceTranslator,32=>Find no block
Fri Jan 12 17:54:34 AEDT 2018 Fri Jan 12 17:54:34 AEDT 2018 : org.apache.commons.lang3.text.translate.NumericEntityUnescaper,31=>Find no block
Fri Jan 12 17:54:34 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,41
Fri Jan 12 17:58:34 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,42
Fri Jan 12 17:58:34 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,44
Fri Jan 12 18:08:26 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,45
Fri Jan 12 18:08:26 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,52
Fri Jan 12 18:20:12 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,54
Fri Jan 12 18:20:13 AEDT 2018 org.apache.commons.lang3.text.translate.NumericEntityUnescaper,82

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 18:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 18:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 18:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 18:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 18:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 18:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 18:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 18:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 18:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 18:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 18:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 18:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 18:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 18:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 18:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 18:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 18:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 18:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}

Time : 18/01/12 18:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(end-start);
}

Time : 18/01/12 18:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(end-start);
}

Time : 18/01/12 18:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(end-start);
}

Time : 18/01/12 18:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(start);
}

Time : 18/01/12 18:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 18:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 18:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 18:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 18:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 18:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 18:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end+(start);
}

Time : 18/01/12 18:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+(start);
}

Time : 18/01/12 18:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return end+(start);
}

Time : 18/01/12 18:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='-'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)=='\''){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&input.charAt(index+1)==';'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 18:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&seqEnd==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&index==0){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='&'&&index<seqEnd-1&&false){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((seqEnd==0)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((seqEnd==0)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end=Integer.MAX_VALUE;
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(seqEnd==0&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input==null||input==null&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='f'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}

Time : 18/01/12 19:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 19:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<seqEnd-1&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 19:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+1;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 2+(end-start);
}
return 0;

Time : 18/01/12 19:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(input.charAt(index)=='\\'&&index<(input.length()-1)&&input.charAt(index+1)=='#'){
int start=index+2;
boolean isHex=false;
char firstChar=input.charAt(start);
if(firstChar=='x'||firstChar=='X'){
start++;
isHex=true;
}
int end=start;
while(input.charAt(end)!=';'){
end++;
}
int entityValue;
try{
if(isHex){
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),16);
}else {
entityValue=Integer.parseInt(input.subSequence(start,end).toString(),10);
}
}catch (NumberFormatException nfe) {
  System.err.println("FAIL: " + input.subSequence(start,end) + "["+ start+ "]["+ end+ "]");
  return 0;
}

if(entityValue>0xffff){
char[] chrs=Character.toChars(entityValue);
out.write(chrs[0]);
out.write(chrs[1]);
}else {
out.write(entityValue);
}
return 1+end-start;
}
return 0;

Time : 18/01/12 19:08
----------------------------------------
Timeout time : 18/01/12 19:08
