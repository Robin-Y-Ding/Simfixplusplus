=================================================
Project : closure_100	start : 18/01/12 19:07
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testInnerFunction3 | 18/01/12 19:09
Fri Jan 12 19:10:51 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,146
Fri Jan 12 19:10:54 AEDT 2018 com.google.javascript.jscomp.PrepareAst,202
Timeout time : 18/01/12 19:43
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testInnerFunction2 | 18/01/12 19:43
Fri Jan 12 19:45:15 AEDT 2018 com.google.javascript.jscomp.PrepareAst,176
Timeout time : 18/01/12 20:18
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testInnerFunction1 | 18/01/12 20:18
Fri Jan 12 20:19:36 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,146
Fri Jan 12 20:19:39 AEDT 2018 com.google.javascript.jscomp.parsing.TypeSafeDispatcher,254
Fri Jan 12 20:24:59 AEDT 2018 com.google.javascript.jscomp.parsing.IRFactory,699
Fri Jan 12 20:37:20 AEDT 2018 com.google.javascript.jscomp.parsing.IRFactory,700
Fri Jan 12 20:41:52 AEDT 2018 com.google.javascript.jscomp.parsing.IRFactory,701
Fri Jan 12 20:41:53 AEDT 2018 com.google.javascript.jscomp.parsing.IRFactory,703
Fri Jan 12 20:41:54 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,140

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(assignLhsChild==null){
return true;
}

Time : 18/01/12 20:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n!=null){
return true;
}

Time : 18/01/12 20:44
----------------------------------------
Fri Jan 12 20:46:30 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,163
Timeout time : 18/01/12 20:52
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testGlobalThis7 | 18/01/12 20:52
Fri Jan 12 20:53:57 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,146
Fri Jan 12 20:54:00 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,140

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(assignLhsChild==null){
return true;
}

Time : 18/01/12 20:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n!=null){
return true;
}

Time : 18/01/12 20:56
----------------------------------------
Fri Jan 12 20:58:35 AEDT 2018 com.google.javascript.jscomp.parsing.IRFactory,811
Fri Jan 12 21:05:01 AEDT 2018 com.google.javascript.jscomp.parsing.IRFactory,812
Fri Jan 12 21:05:02 AEDT 2018 com.google.javascript.rhino.jstype.InstanceObjectType,89
Fri Jan 12 21:22:35 AEDT 2018 com.google.javascript.rhino.jstype.InstanceObjectType,90
Fri Jan 12 21:25:47 AEDT 2018 com.google.javascript.rhino.jstype.InstanceObjectType,93
Fri Jan 12 21:25:48 AEDT 2018 com.google.javascript.jscomp.Compiler,168
Fri Jan 12 21:25:51 AEDT 2018 Fri Jan 12 21:25:51 AEDT 2018 : com.google.javascript.jscomp.Compiler,169=>Find no block
Fri Jan 12 21:25:52 AEDT 2018 com.google.javascript.jscomp.Compiler,216
Timeout time : 18/01/12 21:27
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testStaticFunction8 | 18/01/12 21:27
Fri Jan 12 21:28:11 AEDT 2018 com.google.javascript.jscomp.PrepareAst,176
Timeout time : 18/01/12 22:01
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testStaticFunction7 | 18/01/12 22:01
Fri Jan 12 22:02:16 AEDT 2018 com.google.javascript.jscomp.PrepareAst,176
Timeout time : 18/01/12 22:35
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testStaticFunction6 | 18/01/12 22:35
Fri Jan 12 22:36:23 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,132

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(-1==Token.THIS&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1==Token.THIS&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(-1==Token.THIS&&n.getType()!=Token.BREAK){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1==Token.THIS&&n.getType()!=Token.BREAK){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.NEW){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n.getType()==Token.NAME)&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.NAME&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.NAME){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getLastChild()==parent){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.LP&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.DEC){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 22:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n.getType()==Token.OBJECTLIT)&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.OBJECTLIT&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(t.inGlobalScope()&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&NodeUtil.isExpressionNode(parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.ASSIGN&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:08
----------------------------------------
Timeout time : 18/01/12 23:09
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testStaticMethod2 | 18/01/12 23:09
Fri Jan 12 23:11:17 AEDT 2018 com.google.javascript.rhino.Node,1705
Fri Jan 12 23:14:40 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,132

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(-1==Token.THIS&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1==Token.THIS&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(-1==Token.THIS&&n.getType()!=Token.BREAK){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1==Token.THIS&&n.getType()!=Token.BREAK){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.NEW){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.NAME){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getLastChild()==parent){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.LP&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&NodeUtil.isAssignmentOp(parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.DEC){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n.getType()==Token.OBJECTLIT)&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.OBJECTLIT&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&NodeUtil.isExpressionNode(parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.ASSIGN&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:42
----------------------------------------
Timeout time : 18/01/12 23:44
Current failed test : com.google.javascript.jscomp.CheckGlobalThisTest::testStaticMethod3 | 18/01/12 23:44
Fri Jan 12 23:45:42 AEDT 2018 com.google.javascript.rhino.Node,1705
Fri Jan 12 23:48:46 AEDT 2018 com.google.javascript.jscomp.CheckGlobalThis,132

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(-1==Token.THIS&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1==Token.THIS&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(-1==Token.THIS&&n.getType()!=Token.BREAK){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1==Token.THIS&&n.getType()!=Token.BREAK){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.NEW){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/12 23:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.NAME){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getLastChild()==parent){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.LP&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&NodeUtil.isAssignmentOp(parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&parent.getType()==Token.DEC){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n.getType()==Token.OBJECTLIT)&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.OBJECTLIT&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.THIS&&NodeUtil.isExpressionNode(parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getType()==Token.ASSIGN&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n.getJSType()!=null&&shouldReportThis(n,parent)){
compiler.report(t.makeError(n,level,GLOBAL_THIS));
}

Time : 18/01/13 00:18
----------------------------------------
Timeout time : 18/01/13 00:20
