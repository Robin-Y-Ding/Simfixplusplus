=================================================
Project : math_41	start : 18/01/12 20:09
Current failed test : org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted | 18/01/12 20:10
Fri Jan 12 20:11:06 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,370
Fri Jan 12 20:13:39 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,222

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return false;

Time : 18/01/12 20:14
----------------------------------------
Fri Jan 12 20:15:47 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,258
Fri Jan 12 20:16:08 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,262
Fri Jan 12 20:23:24 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,266
Fri Jan 12 20:30:09 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,267
Fri Jan 12 22:40:02 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,268
Fri Jan 12 22:40:03 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,271
Fri Jan 12 22:40:03 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,274
Fri Jan 12 22:40:05 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,277
Fri Jan 12 22:40:06 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,278
Fri Jan 12 22:40:07 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,282
Fri Jan 12 22:40:52 AEDT 2018 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,286

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!containsPositiveWeight){
throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
}
return false;

Time : 18/01/12 22:47
----------------------------------------
Fri Jan 12 22:48:43 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,316

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 18/01/12 22:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var+=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 22:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var+=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 22:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var+=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 22:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=length;
var+=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 22:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=length;
}

Time : 18/01/12 22:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!incMoment){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
m=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!this.incMoment){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(begin>begin){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var*=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 18/01/12 23:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
var+=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
var+=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length!=1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var+=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=length;
var+=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(begin!=1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length!=begin*(begin+1)){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length!=(begin+1)){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length!=begin+1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(incMoment){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(this.incMoment){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(begin==begin){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/12 23:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(isBiasCorrected){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 18/01/13 00:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length!=1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}
}

Time : 18/01/13 00:16
----------------------------------------
Sat Jan 13 00:54:03 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,318
Sat Jan 13 00:54:04 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,319
Sat Jan 13 00:54:05 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,320
Sat Jan 13 00:54:06 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,322
Sat Jan 13 00:54:06 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,323
Sat Jan 13 00:54:07 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,324
Sat Jan 13 00:54:08 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,325
Sat Jan 13 00:54:09 AEDT 2018 org.apache.commons.math.stat.descriptive.moment.Variance,328

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}
}
return length;

Time : 18/01/13 01:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}
}
return Double.NaN;

Time : 18/01/13 01:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}
}
test(values,begin,length);
return Double.NaN;

Time : 18/01/13 01:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
return values[begin];
}
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}
}
return Double.NaN;

Time : 18/01/13 01:10
----------------------------------------
Timeout time : 18/01/13 01:11
