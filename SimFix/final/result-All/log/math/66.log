=================================================
Project : math_66	start : 18/01/13 00:11
Current failed test : org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics_purify_1 | 18/01/13 00:13
Sat Jan 13 00:14:38 AEDT 2018 Sat Jan 13 00:14:38 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,142=>Find no block
Sat Jan 13 00:14:39 AEDT 2018 Sat Jan 13 00:14:39 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,90=>Find no block
Sat Jan 13 00:14:40 AEDT 2018 Sat Jan 13 00:14:40 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,100=>Find no block
Sat Jan 13 00:14:40 AEDT 2018 Sat Jan 13 00:14:40 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,106=>Find no block
Sat Jan 13 00:14:42 AEDT 2018 Sat Jan 13 00:14:42 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,112=>Find no block
Sat Jan 13 00:14:42 AEDT 2018 Sat Jan 13 00:14:42 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,123=>Find no block
Sat Jan 13 00:14:43 AEDT 2018 Sat Jan 13 00:14:43 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,131=>Find no block
Sat Jan 13 00:14:44 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,143
Sat Jan 13 00:19:04 AEDT 2018 Sat Jan 13 00:19:04 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,144=>Find no block
Sat Jan 13 00:19:04 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,267
Sat Jan 13 00:44:05 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,268
Sat Jan 13 00:44:06 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,269
Sat Jan 13 00:44:07 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,271
Sat Jan 13 00:44:08 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,272
Sat Jan 13 00:44:09 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,273
Sat Jan 13 00:44:09 AEDT 2018 Sat Jan 13 00:44:09 AEDT 2018 : org.apache.commons.math.util.ResizableDoubleArray,275=>Find no block
Sat Jan 13 00:44:10 AEDT 2018 org.apache.commons.math.util.ResizableDoubleArray,382
Timeout time : 18/01/13 00:47
Current failed test : org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin_purify_3 | 18/01/13 00:47
Sat Jan 13 00:48:17 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,66
Sat Jan 13 00:49:06 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,107
Sat Jan 13 00:50:54 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,108
Sat Jan 13 00:50:55 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,158
Sat Jan 13 01:14:01 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,159
Sat Jan 13 01:14:02 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,162
Sat Jan 13 01:14:03 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,175
Timeout time : 18/01/13 01:21
Current failed test : org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin_purify_5 | 18/01/13 01:21
Sat Jan 13 01:22:00 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,167
Sat Jan 13 01:39:03 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,66
Sat Jan 13 01:39:52 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,164
Sat Jan 13 01:39:53 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,220
Timeout time : 18/01/13 01:54
Current failed test : org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin_purify_8 | 18/01/13 01:54
Sat Jan 13 01:55:36 AEDT 2018 org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer,152
Sat Jan 13 01:55:39 AEDT 2018 Sat Jan 13 01:55:39 AEDT 2018 : org.apache.commons.math.optimization.univariate.BrentOptimizer,43=>Find no block
Sat Jan 13 01:55:40 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,44
Sat Jan 13 01:55:44 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,45
Sat Jan 13 01:55:45 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,46
Sat Jan 13 01:55:45 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,47
Sat Jan 13 01:55:46 AEDT 2018 Sat Jan 13 01:55:46 AEDT 2018 : org.apache.commons.math.optimization.univariate.BrentOptimizer,48=>Find no block
Sat Jan 13 01:55:47 AEDT 2018 Sat Jan 13 01:55:47 AEDT 2018 : org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer,82=>Find no block
Sat Jan 13 01:55:48 AEDT 2018 org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer,142
Sat Jan 13 01:56:47 AEDT 2018 Sat Jan 13 01:56:47 AEDT 2018 : org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer,143=>Find no block
Sat Jan 13 01:56:48 AEDT 2018 Sat Jan 13 01:56:48 AEDT 2018 : org.apache.commons.math.ConvergingAlgorithmImpl,78=>Find no block
Sat Jan 13 01:56:49 AEDT 2018 org.apache.commons.math.ConvergingAlgorithmImpl,87
Sat Jan 13 01:58:19 AEDT 2018 Sat Jan 13 01:58:19 AEDT 2018 : org.apache.commons.math.ConvergingAlgorithmImpl,88=>Find no block
Sat Jan 13 01:58:20 AEDT 2018 org.apache.commons.math.ConvergingAlgorithmImpl,102
Sat Jan 13 01:59:35 AEDT 2018 Sat Jan 13 01:59:35 AEDT 2018 : org.apache.commons.math.ConvergingAlgorithmImpl,103=>Find no block
Sat Jan 13 01:59:36 AEDT 2018 org.apache.commons.math.ConvergingAlgorithmImpl,117
Sat Jan 13 02:00:48 AEDT 2018 Sat Jan 13 02:00:48 AEDT 2018 : org.apache.commons.math.ConvergingAlgorithmImpl,118=>Find no block
Sat Jan 13 02:00:49 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,57
Sat Jan 13 02:00:52 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,60
Sat Jan 13 02:02:27 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,61
Sat Jan 13 02:02:27 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,66
Sat Jan 13 02:03:15 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,99
Sat Jan 13 02:03:18 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,100
Sat Jan 13 02:03:19 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,102
Sat Jan 13 02:03:22 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,103
Sat Jan 13 02:03:23 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,106
Sat Jan 13 02:05:10 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,107
Sat Jan 13 02:05:11 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,108
Sat Jan 13 02:05:11 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,110
Sat Jan 13 02:05:12 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,111
Sat Jan 13 02:05:13 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,114
Sat Jan 13 02:06:59 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,115
Sat Jan 13 02:07:20 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,116
Sat Jan 13 02:07:52 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,117
Sat Jan 13 02:08:25 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,118
Sat Jan 13 02:09:17 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,119
Sat Jan 13 02:11:03 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,120
Sat Jan 13 02:11:06 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,121
Sat Jan 13 02:11:07 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,123
Sat Jan 13 02:12:13 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,124
Sat Jan 13 02:12:45 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,126
Sat Jan 13 02:12:46 AEDT 2018 org.apache.commons.math.optimization.univariate.BrentOptimizer,127
Timeout time : 18/01/13 02:28
Current failed test : org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin_purify_3 | 18/01/13 02:28
Sat Jan 13 02:29:14 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,122
Sat Jan 13 02:29:17 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,196
Sat Jan 13 02:31:20 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,222
Sat Jan 13 02:33:22 AEDT 2018 org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer,105
Sat Jan 13 02:35:44 AEDT 2018 org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer,113

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
evaluations=0;
return functionValue;

Time : 18/01/13 02:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
evaluations=0;
return result;

Time : 18/01/13 02:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
evaluations=0;
return functionValue;

Time : 18/01/13 02:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.max=max;
evaluations=0;
return functionValue;

Time : 18/01/13 02:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.startValue=startValue;
evaluations=0;
return functionValue;

Time : 18/01/13 02:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.goal=goal;
evaluations=0;
return functionValue;

Time : 18/01/13 02:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.function=function;
evaluations=0;
return functionValue;

Time : 18/01/13 02:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
functionValue=Double.NaN;
evaluations=0;
return functionValue;

Time : 18/01/13 02:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
evaluations=0;
resetIterationsCounter();
return functionValue;

Time : 18/01/13 02:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
evaluations=0;
return result;

Time : 18/01/13 02:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.max=max;
evaluations=0;
return result;

Time : 18/01/13 02:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.startValue=startValue;
evaluations=0;
return result;

Time : 18/01/13 02:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.goal=goal;
evaluations=0;
return result;

Time : 18/01/13 02:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.function=function;
evaluations=0;
return result;

Time : 18/01/13 02:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
functionValue=Double.NaN;
evaluations=0;
return result;

Time : 18/01/13 02:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
evaluations=0;
resetIterationsCounter();
return result;

Time : 18/01/13 02:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
this.max=max;
evaluations=0;
return functionValue;

Time : 18/01/13 02:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
this.startValue=startValue;
evaluations=0;
return functionValue;

Time : 18/01/13 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
this.goal=goal;
evaluations=0;
return functionValue;

Time : 18/01/13 02:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
this.function=function;
evaluations=0;
return functionValue;

Time : 18/01/13 02:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
functionValue=Double.NaN;
evaluations=0;
return functionValue;

Time : 18/01/13 02:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.min=min;
evaluations=0;
resetIterationsCounter();
return functionValue;

Time : 18/01/13 02:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.max=max;
this.startValue=startValue;
evaluations=0;
return functionValue;

Time : 18/01/13 02:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.max=max;
this.goal=goal;
evaluations=0;
return functionValue;

Time : 18/01/13 03:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.max=max;
this.function=function;
evaluations=0;
return functionValue;

Time : 18/01/13 03:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(functionValue==Double.NaN){
 final double opt=getResult();
try{
functionValue=function.value(opt);
}catch (FunctionEvaluationException e) {
  throw new RuntimeException(e);
}

}
this.max=max;
functionValue=Double.NaN;
evaluations=0;
return functionValue;

Time : 18/01/13 03:01
----------------------------------------
Timeout time : 18/01/13 03:02
Current failed test : org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin_purify_3 | 18/01/13 03:02
Sat Jan 13 03:03:08 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,107
Sat Jan 13 03:03:11 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,280
Sat Jan 13 03:23:02 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,281
Sat Jan 13 03:23:03 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,282
Sat Jan 13 03:23:03 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,283
Timeout time : 18/01/13 03:36
Current failed test : org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin_purify_4 | 18/01/13 03:36
Sat Jan 13 03:37:05 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,122
Sat Jan 13 03:37:08 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,280
Sat Jan 13 03:56:33 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,281
Sat Jan 13 03:56:34 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,282
Sat Jan 13 03:56:34 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,283
Timeout time : 18/01/13 04:10
Current failed test : org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin_purify_8 | 18/01/13 04:10
Sat Jan 13 04:10:46 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,280
Sat Jan 13 04:29:19 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,281
Sat Jan 13 04:29:20 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,282
Sat Jan 13 04:29:21 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,283
Timeout time : 18/01/13 04:44
Current failed test : org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin_purify_9 | 18/01/13 04:44
Sat Jan 13 04:44:44 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,97
Sat Jan 13 04:44:47 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,280
Sat Jan 13 05:03:20 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,281
Sat Jan 13 05:03:21 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,282
Sat Jan 13 05:03:21 AEDT 2018 org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer,283
Timeout time : 18/01/13 05:18
