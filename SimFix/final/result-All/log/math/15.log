=================================================
Project : math_15	start : 18/01/13 00:37
Current failed test : org.apache.commons.math3.util.FastMathTest::testMath904 | 18/01/13 00:38
Sat Jan 13 00:46:46 AEDT 2018 org.apache.commons.math3.util.FastMath,1542

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52||y<=-TWO_POWER_52){
return ((long)y&1)==0?pow(-x,y):-pow(-x,y);
}

Time : 18/01/13 00:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 00:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<1){
return pow(-x,y);
}

Time : 18/01/13 00:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1-E>=TWO_POWER_52&&y<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 00:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 1-2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 00:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 00:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1-E>=TWO_POWER_52&&y<1){
return pow(-x,y);
}

Time : 18/01/13 01:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<1){
return 1-2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 01:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<1){
return 2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 01:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1-E>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 1-2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 01:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1-E>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 01:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1-E>=TWO_POWER_52&&y<1){
return 1-2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 01:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(1-E>=TWO_POWER_52&&y<1){
return 2*Math.pow(1-y,LN_MANT_LEN);
}

Time : 18/01/13 01:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(RECOMPUTE_TABLES_AT_RUNTIME){
return pow(-x,y);
}

Time : 18/01/13 01:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52||y<=-TWO_POWER_52){
return x;
}

Time : 18/01/13 01:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52||y<=E){
return x;
}

Time : 18/01/13 01:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((y<=E)||y<=-TWO_POWER_52){
return x;
}

Time : 18/01/13 01:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52||(FastMath.log(y)>=E)){
return x;
}

Time : 18/01/13 01:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((y<=E)||y<=E){
return x;
}

Time : 18/01/13 01:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((y<=E)||(FastMath.log(y)>=E)){
return x;
}

Time : 18/01/13 01:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 01:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((y==FastMath.rint(x))||x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 01:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&y<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 01:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 01:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&y<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 01:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 1/y;
}

Time : 18/01/13 01:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return y;
}

Time : 18/01/13 01:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 01:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return 1/y;
}

Time : 18/01/13 01:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return y;
}

Time : 18/01/13 01:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 1/y;
}

Time : 18/01/13 01:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&y<=-TWO_POWER_52){
return y;
}

Time : 18/01/13 01:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 01:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<=-TWO_POWER_52){
return 1/y;
}

Time : 18/01/13 02:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<=-TWO_POWER_52){
return y;
}

Time : 18/01/13 02:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&y<=-TWO_POWER_52){
return 1/y;
}

Time : 18/01/13 02:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&y<=-TWO_POWER_52){
return y;
}

Time : 18/01/13 02:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return 1/y;
}

Time : 18/01/13 02:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return y;
}

Time : 18/01/13 02:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&x<=-TWO_POWER_52){
return 1/y;
}

Time : 18/01/13 02:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&x<=-TWO_POWER_52){
return y;
}

Time : 18/01/13 02:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 1/(y*x);
}

Time : 18/01/13 02:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return (y*x);
}

Time : 18/01/13 02:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return y*x;
}

Time : 18/01/13 02:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return 1/(y*x);
}

Time : 18/01/13 02:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return (y*x);
}

Time : 18/01/13 02:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
return y*x;
}

Time : 18/01/13 02:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 1/(y*x);
}

Time : 18/01/13 02:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&y<=-TWO_POWER_52){
return (y*x);
}

Time : 18/01/13 02:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&y<=-TWO_POWER_52){
return y*x;
}

Time : 18/01/13 02:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<=-TWO_POWER_52){
return 1/(y*x);
}

Time : 18/01/13 02:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<=-TWO_POWER_52){
return (y*x);
}

Time : 18/01/13 02:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<=-TWO_POWER_52){
return y*x;
}

Time : 18/01/13 02:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&y<=-TWO_POWER_52){
return 1/(y*x);
}

Time : 18/01/13 02:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&y<=-TWO_POWER_52){
return (y*x);
}

Time : 18/01/13 02:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&y<=-TWO_POWER_52){
return y*x;
}

Time : 18/01/13 02:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return 1/(y*x);
}

Time : 18/01/13 02:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return (y*x);
}

Time : 18/01/13 02:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52&&x<=-TWO_POWER_52){
return y*x;
}

Time : 18/01/13 02:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&x<=-TWO_POWER_52){
return 1/(y*x);
}

Time : 18/01/13 02:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&x<=-TWO_POWER_52){
return (y*x);
}

Time : 18/01/13 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>0&&x<=-TWO_POWER_52){
return y*x;
}

Time : 18/01/13 02:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>TWO_POWER_52||x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=E||x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>TWO_POWER_52||x<-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>E||x<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=E||x<-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 2*(x-E);
}

Time : 18/01/13 03:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<-TWO_POWER_52){
return 2*(x-E);
}

Time : 18/01/13 03:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<=-TWO_POWER_52){
return 2*(x-E);
}

Time : 18/01/13 03:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&x<-TWO_POWER_52){
return 2*(x-E);
}

Time : 18/01/13 03:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=x&&y<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=TWO_POWER_52&&y<=-TWO_POWER_52){
return 2*(E-x);
}

Time : 18/01/13 03:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(y>=x&&y<=-TWO_POWER_52){
return 2*(E-x);
}

Time : 18/01/13 03:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(E-E>=TWO_POWER_52||E-E<=-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(E-E>=TWO_POWER_52||E-E<-TWO_POWER_52){
return pow(-x,y);
}

Time : 18/01/13 03:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>=TWO_POWER_52||x<=-TWO_POWER_52){
exp(y,0.0,new double[2]);
return pow(-x,y);
}

Time : 18/01/13 03:53
----------------------------------------
Sat Jan 13 03:55:22 AEDT 2018 Sat Jan 13 03:55:22 AEDT 2018 : org.apache.commons.math3.random.MersenneTwister,131=>Find no block
Sat Jan 13 03:55:23 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,132
Sat Jan 13 03:57:45 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,133
Sat Jan 13 03:57:46 AEDT 2018 Sat Jan 13 03:57:46 AEDT 2018 : org.apache.commons.math3.random.MersenneTwister,134=>Find no block
Sat Jan 13 03:57:47 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,144
Sat Jan 13 04:15:12 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,146
Sat Jan 13 04:15:14 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,147
Sat Jan 13 04:15:15 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,150
Sat Jan 13 04:15:16 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,151
Sat Jan 13 04:15:17 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,154
Sat Jan 13 04:15:19 AEDT 2018 Sat Jan 13 04:15:19 AEDT 2018 : org.apache.commons.math3.random.MersenneTwister,155=>Find no block
Sat Jan 13 04:15:20 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,167
Sat Jan 13 04:15:25 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,172
Sat Jan 13 04:22:48 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,173
Sat Jan 13 04:44:20 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,174
Sat Jan 13 04:44:21 AEDT 2018 org.apache.commons.math3.random.MersenneTwister,176
Timeout time : 18/01/13 05:46
