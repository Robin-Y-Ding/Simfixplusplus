=================================================
Project : time_14	start : 18/01/14 10:04
Current failed test : org.joda.time.TestMonthDay_Basics::testPlusMonths_int_negativeFromLeap | 18/01/14 10:05
Sun Jan 14 10:08:44 AEDT 2018 org.joda.time.IllegalFieldValueException,314
Sun Jan 14 10:08:49 AEDT 2018 org.joda.time.MonthDay,518
Sun Jan 14 10:17:45 AEDT 2018 org.joda.time.MonthDay,519
Sun Jan 14 10:17:46 AEDT 2018 org.joda.time.chrono.BasicMonthOfYearDateTimeField,206
Sun Jan 14 10:21:05 AEDT 2018 org.joda.time.chrono.BasicMonthOfYearDateTimeField,210
Sun Jan 14 10:46:35 AEDT 2018 org.joda.time.chrono.BasicMonthOfYearDateTimeField,211
Sun Jan 14 10:46:37 AEDT 2018 org.joda.time.chrono.BasicMonthOfYearDateTimeField,212
Sun Jan 14 10:46:38 AEDT 2018 org.joda.time.chrono.BasicMonthOfYearDateTimeField,213
Sun Jan 14 10:46:40 AEDT 2018 org.joda.time.MonthDay,515
Sun Jan 14 10:46:41 AEDT 2018 org.joda.time.MonthDay,514
Sun Jan 14 10:46:43 AEDT 2018 org.joda.time.DateTimeUtils,347

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(loopField.getRangeDurationField().getType()==lastType){
return false;
}

Time : 18/01/14 10:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(loopField.getRangeDurationField().getType()!=null){
return false;
}

Time : 18/01/14 10:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(i>0){
if(loopField.getRangeDurationField().getType()!=lastType){
return false;
}
return false;
}

Time : 18/01/14 10:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(i>=0){
if(loopField.getRangeDurationField().getType()!=lastType){
return false;
}
}

Time : 18/01/14 11:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=0;i<partial.size();i++){
DateTimeField loopField=partial.getField(i);
if(i>0){
if(loopField.getRangeDurationField().getType()!=lastType){
return false;
}
return false;
}
lastType=loopField.getDurationField().getType();
}

Time : 18/01/14 11:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=0;i<partial.size();i++){
DateTimeField loopField=partial.getField(i);
if(i>0){
if(loopField.getRangeDurationField().getType()!=lastType){
return false;
}
}
lastType=loopField.getDurationField().getType();
}
return false;

Time : 18/01/14 11:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=0;i<partial.size();i++){
DateTimeField loopField=partial.getField(i);
if(i>0){
if(loopField.getRangeDurationField().getType()!=lastType){
return false;
}
return false;
}
lastType=loopField.getDurationField().getType();
}
return true;

Time : 18/01/14 11:24
----------------------------------------
Sun Jan 14 11:29:08 AEDT 2018 org.joda.time.DateTimeUtils,334
Sun Jan 14 11:31:56 AEDT 2018 org.joda.time.DateTimeUtils,337

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(partial==null){
throw new IllegalArgumentException("Partial must not be null");
}
DurationFieldType lastType=null;
for(int i=0;i<partial.size();i++){
DateTimeField loopField=partial.getField(i);
if(i>0){
if(loopField.getRangeDurationField().getType()!=lastType){
return false;
}
return false;
}
lastType=loopField.getDurationField().getType();
}

Time : 18/01/14 11:38
----------------------------------------
Sun Jan 14 11:46:20 AEDT 2018 org.joda.time.DateTimeUtils,338
Sun Jan 14 11:46:21 AEDT 2018 org.joda.time.DateTimeUtils,339
Sun Jan 14 11:46:22 AEDT 2018 org.joda.time.DateTimeUtils,340
Sun Jan 14 11:46:24 AEDT 2018 org.joda.time.DateTimeUtils,341
Sun Jan 14 11:46:26 AEDT 2018 org.joda.time.DateTimeUtils,345
Sun Jan 14 11:46:27 AEDT 2018 org.joda.time.MonthDay,592
Sun Jan 14 11:48:39 AEDT 2018 org.joda.time.MonthDay,652
Sun Jan 14 11:51:02 AEDT 2018 org.joda.time.chrono.BasicGJChronology,129
Sun Jan 14 11:52:05 AEDT 2018 org.joda.time.chrono.BasicDayOfMonthDateTimeField,89
Sun Jan 14 12:25:19 AEDT 2018 org.joda.time.base.AbstractPartial,223
Sun Jan 14 12:30:35 AEDT 2018 org.joda.time.MonthDay,352
Sun Jan 14 12:32:01 AEDT 2018 Sun Jan 14 12:32:01 AEDT 2018 : org.joda.time.MonthDay,353=>Find no block
Sun Jan 14 12:32:03 AEDT 2018 org.joda.time.MonthDay,410
Sun Jan 14 12:41:27 AEDT 2018 org.joda.time.MonthDay,412
Sun Jan 14 12:41:28 AEDT 2018 Sun Jan 14 12:41:28 AEDT 2018 : org.joda.time.MonthDay,408=>Find no block
Sun Jan 14 12:41:30 AEDT 2018 org.joda.time.base.AbstractPartial,204
Sun Jan 14 12:45:28 AEDT 2018 org.joda.time.base.AbstractPartial,219
Sun Jan 14 12:45:30 AEDT 2018 org.joda.time.base.AbstractPartial,220
Sun Jan 14 12:52:27 AEDT 2018 org.joda.time.MonthDay,426
Sun Jan 14 12:52:31 AEDT 2018 org.joda.time.base.AbstractPartial,202
Sun Jan 14 13:05:08 AEDT 2018 org.joda.time.base.AbstractPartial,203
Sun Jan 14 13:05:09 AEDT 2018 org.joda.time.MonthDay,395
Sun Jan 14 13:05:13 AEDT 2018 org.joda.time.MonthDay,780
Sun Jan 14 13:07:48 AEDT 2018 org.joda.time.MonthDay,781
Sun Jan 14 13:07:49 AEDT 2018 org.joda.time.MonthDay,782
Sun Jan 14 13:07:50 AEDT 2018 org.joda.time.MonthDay,783
Sun Jan 14 13:07:51 AEDT 2018 org.joda.time.chrono.BasicChronology,575
Sun Jan 14 13:15:20 AEDT 2018 org.joda.time.chrono.BasicChronology,576
Sun Jan 14 13:15:22 AEDT 2018 org.joda.time.chrono.BasicChronology,577
Sun Jan 14 13:15:23 AEDT 2018 org.joda.time.field.FieldUtils,218
Sun Jan 14 13:25:09 AEDT 2018 org.joda.time.base.BasePartial,237
Sun Jan 14 13:25:13 AEDT 2018 org.joda.time.base.AbstractPartial,267
Sun Jan 14 13:32:16 AEDT 2018 org.joda.time.format.ISODateTimeFormat,328
Sun Jan 14 14:48:33 AEDT 2018 org.joda.time.format.ISODateTimeFormat,329
Sun Jan 14 14:48:35 AEDT 2018 org.joda.time.chrono.BasicDayOfMonthDateTimeField,82
Sun Jan 14 14:48:35 AEDT 2018 org.joda.time.chrono.BasicDayOfMonthDateTimeField,83
Sun Jan 14 14:48:36 AEDT 2018 org.joda.time.chrono.BasicDayOfMonthDateTimeField,84
Sun Jan 14 14:48:38 AEDT 2018 org.joda.time.format.ISODateTimeFormat,323
Sun Jan 14 15:05:32 AEDT 2018 org.joda.time.format.ISODateTimeFormat,324
Sun Jan 14 15:05:34 AEDT 2018 org.joda.time.format.ISODateTimeFormat,325
Timeout time : 18/01/14 15:08
