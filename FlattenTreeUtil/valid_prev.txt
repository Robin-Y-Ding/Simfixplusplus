{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{field}{.}{isSupported}{()}}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{{STRING_CONSTANT}{+}{name}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{text}{.}{length}{()}}{<=}{sampleLen}}}
{AST_ROOT_SC2NF{{public}{{DurationPrinter}}{toPrinter}{()}{{{}{{return}{{toPrinter}{(}{iFormatters}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{value}{==}{NUMBER_CONSTANT}}{&&}{{iPrintZeroSetting}{==}{PRINT_ZERO_NEVER}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{iDurationConverters}{=}{{new}{{ConverterSet}}{(}{{new}{{{Converter}}{[]}}{{{}{ReadableDurationConverter.INSTANCE}{,}{StringConverter.INSTANCE}{,}{LongConverter.INSTANCE}{,}{}}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximumValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMinimumValue}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{DurationField}}{getLeapDurationField}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{getName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSupported}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{String}}{getName}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{chrono}{==}{iChronology}}{)}{{{}{{return}{this}{;}}{}}}}{{return}{{new}{{ISOYearMonthType}}{(}{iChronology}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{appendNumeric}{(}{field}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSignedNumeric}{(}{{iChronoUTC}{.}{centuryOfEra}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{yearOfCentury}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{yearOfEra}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendSignedNumeric}{(}{{iChronoUTC}{.}{year}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{monthOfYear}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{weekyear}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{weekOfWeekyear}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{dayOfYear}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{dayOfMonth}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{dayOfWeek}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{clockhourOfHalfday}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{hourOfHalfday}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{clockhourOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{hourOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{minuteOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{minuteOfHour}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{secondOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{secondOfMinute}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{millisOfDay}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendNumeric}{(}{{iChronoUTC}{.}{millisOfSecond}{()}}{,}{minDigits}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{ymd}{=}{{{{{{new}{{DateTimeFormatterBuilder}}{(}{iChrono}{)}}{.}{append}{(}{{yearElement}{()}}{)}}{.}{append}{(}{{monthElement}{()}}{)}}{.}{append}{(}{{dayElement}{()}}{)}}{.}{toFormatter}{()}}}}
{AST_ROOT_SC2NF{{long}{{scaled}{=}{{{fraction}{*}{iScaler}}{/}{iRangeMillis}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{iSavedFields}{.}{add}{(}{{new}{{SavedField}}{(}{field}{,}{text}{,}{locale}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iSavedFields}{.}{add}{(}{{new}{{SavedField}}{(}{field}{,}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Arrays}{.}{sort}{(}{savedFields}{,}{NUMBER_CONSTANT}{,}{count}{)}}{;}}}
{AST_ROOT_SC2NF{{(}{{{value}{<}{NUMBER_CONSTANT}}{?}{NUMBER_CONSTANT}{:}{{(}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}{)}}}{)}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{digits}{=}{{{(}{int}{)}{{(}{{{StrictMath}{.}{log}{(}{value}{)}}{/}{LOG_10}}{)}}}{+}{NUMBER_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfEven}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateTime}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{set}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{addWrapped}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateTime}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{instant}{.}{toCopy}{(}{{addTo}{(}{{instant}{.}{getMillis}{()}}{,}{scalar}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfEven}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{DateOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{set}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{addWrapped}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{DateOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfEven}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundHalfFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundCeiling}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TimeOnly}}{{instant}{=}{iInstant}}{;}}{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{roundFloor}{(}{{instant}{.}{getMillis}{()}}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{set}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{addWrapped}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{TimeOnly}}{)}{{instant}{.}{toCopy}{(}{{iField}{.}{add}{(}{{instant}{.}{getMillis}{()}}{,}{value}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{ImpreciseCutoverField}{(}{{{DateTimeField}}{julianField}}{,}{{{DateTimeField}}{gregorianField}}{)}{{{}{{this}{(}{julianField}{,}{gregorianField}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{julianField}{,}{gregorianField}{,}{iCutoverInstant}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{appendDecimal}{(}{{iChronoUTC}{.}{weekyear}{()}}{,}{minDigits}{,}{maxDigits}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{newYear}{=}{{year}{+}{{Utils}{.}{safeToInt}{(}{value}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{wrapped}{=}{{Utils}{.}{getWrappedValue}{(}{year}{,}{value}{,}{{getMinimumValue}{()}}{,}{{getMaximumValue}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{localToUTC}{(}{{iChronology}{.}{getDateTimeMillis}{(}{year}{,}{monthOfYear}{,}{dayOfMonth}{,}{millisOfDay}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{localToUTC}{(}{{iChronology}{.}{getTimeOnlyMillis}{(}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{instant}{=}{{iChronology}{.}{getTimeOnlyMillis}{(}{instant}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{newWeekyear}{=}{{weekyear}{+}{{Utils}{.}{safeToInt}{(}{value}{)}}}}{;}}}
{AST_ROOT_SC2NF{{int}{{wrapped}{=}{{Utils}{.}{getWrappedValue}{(}{weekyear}{,}{value}{,}{{getMinimumValue}{()}}{,}{{getMaximumValue}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeOfYear}}{{dtOfYear}{=}{START_OF_YEAR}}{;}}}
{AST_ROOT_SC2NF{{{fields.centuryOfEra}{=}{{new}{{DividedDateTimeField}}{(}{fields.yearOfEra}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationType}{.}{getAverageYearMonthType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationType}{.}{getMillisType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{PreciseYearMonthType}}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{AverageYearMonthType}}{(}{{ISOChronology}{.}{getInstanceUTC}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iChronology}{=}{{selectChronologyUTC}{(}{chronology}{)}}}{;}}{{{iMillis}{=}{{resetUnsupportedFields}{(}{{toLocalTime}{(}{{System}{.}{currentTimeMillis}{()}}{,}{chronology}{,}{iChronology}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{selectChronology}{(}{chronology}{)}}}{;}}{{{iMillis}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{ISOChronology}{.}{getInstance}{(}{zone}{)}}}{;}}{{{iMillis}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{iChronology}{=}{{ISOChronology}{.}{getInstance}{()}}}{;}}{{{iMillis}{=}{{System}{.}{currentTimeMillis}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{getDateTimeZone}{()}}{==}{DateTimeZone.UTC}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{UTC}{.}{equals}{(}{{provider}{.}{getDateTimeZone}{(}{STRING_CONSTANT}{)}}{)}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{cProvider}{.}{getDateTimeZone}{(}{id}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{getDateTimeZone}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{MutableDateTime}}{(}{{getMillis}{(}{base}{,}{{chronology}{.}{getDateTimeZone}{()}}{)}}{,}{chronology}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{MutableDateTime}}{(}{{getMillis}{(}{base}{,}{zone}{)}}{,}{{{getChronology}{()}}{.}{withDateTimeZone}{(}{zone}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTime}}{(}{{getMillis}{(}{base}{,}{{chronology}{.}{getDateTimeZone}{()}}{)}}{,}{chronology}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{DateTime}}{(}{{getMillis}{(}{base}{,}{zone}{)}}{,}{{{getChronology}{()}}{.}{withDateTimeZone}{(}{zone}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{instanceof}{{DateTime}}}{&&}{{{getDateTimeZone}{()}}{==}{zone}}}{)}{{{}{{return}{{(}{{DateTime}}{)}{this}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{sb}{.}{append}{(}{{{getDateTimeZone}{()}}{.}{getID}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{withUTC}{()}{{{}{{return}{{withDateTimeZone}{(}{DateTimeZone.UTC}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{getDateTimeZone}{()}}{==}{DateTimeZone.UTC}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{zone}{,}{{{BuddhistChronology}{.}{getInstance}{(}{zone}{)}}{.}{getDateTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{zone}{,}{{{BuddhistChronology}{.}{getInstance}{()}}{.}{getDateTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{DateTimeZone}}{getDateTimeZone}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{msg}{+}{STRING_CONSTANT}}{,}{z}{,}{{dt}{.}{getDateTimeZone}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{private}{{Object}}{writeReplace}{()}{{{}{{return}{{new}{{Stub}}{(}{{getDateTimeZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{getBase}{()}}{.}{getDateTimeZone}{()}}{==}{DateTimeZone.UTC}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{chrono}{!=}{null}}{&&}{{{chrono}{.}{getDateTimeZone}{()}}{==}{zone}}}{)}{{{}{{return}{chrono}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{chrono}{.}{withDateTimeZone}{(}{{DateTimeZone}{.}{getDefault}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{chrono}{==}{null}}{)}{{{}{{{zone}{=}{{DateTimeZone}{.}{getDefault}{()}}}{;}}{}}}{else}{{{}{{{zone}{=}{{chrono}{.}{getDateTimeZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{getDateTimeZone}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{private}{{Object}}{readResolve}{()}{{{}{{return}{{getInstance}{(}{{{getBase}{()}}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getDateTimeZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getDateTimeZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getDateTimeZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{chrono}{.}{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{baseZone}{=}{{base}{.}{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{base}{==}{null}}{||}{{isMatchingType}{(}{base}{)}}}{)}{{{}{{return}{{getMillis}{()}}{;}}{}}}}{{return}{{getMillis}{(}{base}{,}{{base}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{chronology}{.}{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{original}{.}{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{Chronology}}{withUTC}{()}{{{}{{return}{{withDateTimeZone}{(}{DateTimeZone.UTC}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{instant}{.}{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{chrono}{.}{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getDateTimeZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{print}{(}{millisUTC}{,}{{chrono}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getDateTimeZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{zone}{==}{null}}{)}{{{}{{{zone}{=}{{getDateTimeZone}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{out}{,}{millisUTC}{,}{{chrono}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{printTo}{(}{buf}{,}{millisUTC}{,}{{chrono}{.}{getDateTimeZone}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{getDateTimeZone}{()}}}
{AST_ROOT_SC2NF{{{ZonedDurationField}}{{zonedField}{=}{{new}{{ZonedDurationField}}{(}{field}{,}{{getDateTimeZone}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DateTimeZone}}{{zone}{=}{{getDateTimeZone}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{localToUTC}{(}{{{getBase}{()}}{.}{getDateTimeMillis}{(}{{instant}{+}{{{getDateTimeZone}{()}}{.}{getOffset}{(}{instant}{)}}}{,}{hourOfDay}{,}{minuteOfHour}{,}{secondOfMinute}{,}{millisOfSecond}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{UnivariateTest}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{initialCapacity}}{=}{initialCapacity}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{initialCapacity}}{=}{initialCapacity}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{STRING_CONSTANT}{,}{{{eDA}{.}{getInternalLength}{()}}{<}{{(}{{{(}{int}{)}{NUMBER_CONSTANT}}{*}{NUMBER_CONSTANT}}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{eDA}{=}{{new}{{ContractableDoubleArray}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{eDA}{=}{{new}{{ExpandableDoubleArray}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{eDA}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{System}{.}{arraycopy}{(}{{eDA}{.}{getValues}{()}}{,}{NUMBER_CONSTANT}{,}{copiedArray}{,}{NUMBER_CONSTANT}{,}{{eDA}{.}{getNumElements}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{protected}{void}{tearDown}{(}{)}{throws}{{Exception}}{{{}{{{da}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{i}{<}{numElements}}}
{AST_ROOT_SC2NF{{i}{<}{numElements}}}
{AST_ROOT_SC2NF{{public}{abstract}{void}{clear}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{{double}{[]}}{getElements}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{{}{{{String}}{{msg}{=}{STRING_CONSTANT}}{;}}{{throw}{{new}{{IllegalArgumentException}}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getN}{()}{{{}{{return}{{eDA}{.}{getNumElements}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{abstract}{double}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{double}{{n}{=}{{u}{.}{getN}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getWindowSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{windowSize}{!=}{Univariate.INIFINTE_WINDOW}}}
{AST_ROOT_SC2NF{{windowSize}{!=}{Univariate.INIFINTE_WINDOW}}}
{AST_ROOT_SC2NF{{{windowSize}{!=}{Univariate.INIFINTE_WINDOW}}{&&}{{windowSize}{<}{{list}{.}{size}{()}}}}}
{AST_ROOT_SC2NF{{{windowSize}{!=}{Univariate.INIFINTE_WINDOW}}{&&}{{windowSize}{<}{{list}{.}{size}{()}}}}}
{AST_ROOT_SC2NF{{windowSize}{!=}{Univariate.INIFINTE_WINDOW}}}
{AST_ROOT_SC2NF{{public}{CertifiedDataTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{{{setUp}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{lower}{+}{{(}{int}{)}{{(}{{{Math}{.}{random}{()}}{*}{{(}{{{upper}{-}{lower}}{+}{NUMBER_CONSTANT}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{getColumnDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getRowDimension}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSingular}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{isSquare}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getDeterminant}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{{RealMatrix}}{transpose}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{windowSize}{!=}{Univariate.INFINITE_WINDOW}}{)}{{{}{{return}{{super}{.}{getVariance}{()}}{;}}{}}}}{{return}{variance}{;}}{}}}}
{AST_ROOT_SC2NF{{{variance}{=}{{accum}{/}{{(}{{values.length}{-}{NUMBER_CONSTANT}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{sum}{(}{values}{)}}{/}{values.length}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{pow}{(}{{product}{(}{values}{)}}{,}{{(}{{NUMBER_CONSTANT}{/}{values.length}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{Gamma}{.}{logGamma}{(}{x}{,}{NUMBER_CONSTANT}{,}{Integer.MAX_VALUE}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{Double.NaN}{;}}{}}}}{{return}{{sumSqY}{-}{{{sumY}{*}{sumY}}{/}{{(}{double}{)}{n}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumLog}{(}{values}{)}}{/}{{(}{double}{)}{values.length}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{sum}{(}{values}{)}}{/}{{(}{double}{)}{values.length}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geometricMean}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{product}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{abstract}{int}{getWindowSize}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{void}{clear}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{double}{getSumsq}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{double}{getSum}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{int}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{double}{getMin}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{double}{getMax}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{double}{getStandardDeviation}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{double}{getVariance}{(}{)}{;}}}
{AST_ROOT_SC2NF{{abstract}{double}{getMean}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{double}{getKurtosis}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{mean}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{geoMean}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{product}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{.}{evaluate}{(}{values}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{.}{evaluate}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{d}}}
{AST_ROOT_SC2NF{{{variance}{=}{{{(}{{n}{<=}{NUMBER_CONSTANT}}{)}}{?}{NUMBER_CONSTANT}{:}{{m2}{/}{{(}{double}{)}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{sumLog}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{{(}{double}{)}{length}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{super}{.}{clear}{()}}{;}}{{{std}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{super}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{UnivariateImpl}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{(}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{test}{(}{values}{,}{begin}{,}{length}{)}}{)}{{{}{{return}{{{super}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{{(}{{(}{double}{)}{length}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{UnivariateRealSolverFactory}{()}{{{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{int}{{i}{=}{begin}}}{;}{{i}{<}{{begin}{+}{length}}}{;}{{i}{++}}{)}{{{}{{{increment}{(}{{values}{[}{i}{]}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{{root}{=}{{UnivariateRealSolverFactory}{.}{solve}{(}{rootFindingFunction}{,}{{bracket}{[}{NUMBER_CONSTANT}{]}}{,}{{bracket}{[}{NUMBER_CONSTANT}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{increment}{(}{{double}{d}}{)}{{{}{{{super}{.}{increment}{(}{d}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setPropertyName}{(}{{{String}}{string}}{)}{{{}{{{propertyName}{=}{string}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Object}}{o}}}
{AST_ROOT_SC2NF{{public}{void}{setPercentile}{(}{{double}{p}}{)}{{{}{{{percentile}{=}{p}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{{Throwable}}{throwable}}{)}{{{}{{super}{(}{throwable}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{n}}}
{AST_ROOT_SC2NF{{int}{n}}}
{AST_ROOT_SC2NF{{int}{n}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{{double}{[]}}{values}}}
{AST_ROOT_SC2NF{{public}{MathException}{(}{{{Throwable}}{throwable}}{)}{{{}{{super}{(}{throwable}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathException}{(}{{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{double}{d}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{msg}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{throw}{{new}{{ArrayIndexOutOfBoundsException}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{expansionFactor}{<}{NUMBER_CONSTANT}}{)}{{{}{{{String}}{{msg}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{throw}{{new}{{IllegalArgumentException}}{(}{msg}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{protected}{void}{setUp}{(}{)}{throws}{{Exception}}{{{}{{{super}{.}{setUp}{()}}{;}}{{{b}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createBinomailDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomailDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomailDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomailDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomailDistribution}{(}{NUMBER_CONSTANT}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomailDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomailDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{factory}{.}{createBinomailDistribution}{(}{{-}{NUMBER_CONSTANT}}{,}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{DistributionFactoryImpl}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{UnivariateRealSolverFactoryImpl}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{BeanListUnivariateImpl}{(}{{{List}}{list}}{)}{{{}{{super}{(}{list}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{ConvergenceException}{(}{{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{propertyName}}{=}{property}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{name}}{=}{name}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{final}{{Throwable}}{throwable}}{)}{{{}{{super}{(}{throwable}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{MathConfigurationException}{(}{{final}{{String}}{message}}{)}{{{}{{super}{(}{message}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{min}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{max}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{variance}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{sum}{(}{values}{)}}{/}{{(}{double}{)}{values.length}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumLog}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{product}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sumSq}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{sum}{(}{values}{,}{NUMBER_CONSTANT}{,}{values.length}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{StoreUnivariateImpl}}{{u}{=}{{new}{{StoreUnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariateImpl}}{{u}{=}{{new}{{StoreUnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariateImpl}}{{u}{=}{{new}{{StoreUnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{StoreUnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{StoreUnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{StoreUnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{BeanListUnivariateImpl}}{(}{patientList}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{StoreUnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{list}{)}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{externalList}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Univariate}}{{stats}{=}{{new}{{UnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Univariate}}{{u}{=}{{new}{{UnivariateImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StoreUnivariate}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{externalList}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Complex}}{(}{{{MathUtils}{.}{sinh}{(}{a2}{)}}{/}{d}}{,}{{{Math}{.}{sin}{(}{b2}{)}}{/}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Complex}}{(}{{{Math}{.}{sin}{(}{a2}{)}}{/}{d}}{,}{{{MathUtils}{.}{sinh}{(}{b2}{)}}{/}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{value}{=}{Double.NaN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{URL}}{{url}{=}{{{getClass}{()}}{.}{getResource}{(}{STRING_CONSTANT}{)}}}{;}}{{{vs}{.}{setValuesFileURL}{(}{{url}{.}{toExternalForm}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{.}{load}{(}{file}{)}}{;}}}
{AST_ROOT_SC2NF{{{vs}{.}{openReplayFile}{()}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{new}{{StorelessDescriptiveStatisticsImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StorelessDescriptiveStatisticsImpl}}{{u}{=}{{new}{{StorelessDescriptiveStatisticsImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StorelessDescriptiveStatisticsImpl}}{{u}{=}{{new}{{StorelessDescriptiveStatisticsImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{StorelessDescriptiveStatisticsImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{abstract}{int}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{sampleStats}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{super}{.}{clear}{()}}{;}}{{{list}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractDescriptiveStatistics}{(}{{int}{window}}{)}{{{}{{super}{(}{window}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractDescriptiveStatistics}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{new}{{StorelessDescriptiveStatisticsImpl}}{()}}}{;}}}
{AST_ROOT_SC2NF{{new}{{Complex}}{(}{{{Math}{.}{abs}{(}{{z}{.}{getImaginary}{()}}{)}}{/}{{(}{{NUMBER_CONSTANT}{*}{t}}{)}}}{,}{{{MathUtils}{.}{sign}{(}{b}{)}}{*}{t}}{)}}}
{AST_ROOT_SC2NF{{public}{double}{getMean}{()}{{{}{{return}{{{new}{{Mean}}{(}{firstMoment}{)}}{.}{getResult}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{empiricalDistribution}{.}{load}{(}{file}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testNext}{(}{)}{throws}{{Exception}}{{{}{{{tstGen}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fail}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{Number}}{)}{{org.apache.commons.beanutils.PropertyUtils}{.}{getProperty}{(}{o}{,}{{getPropertyName}{()}}{)}}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{f}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{f}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{actual}{=}{{{{DistributionFactory}{.}{newInstance}{()}}{.}{createGammaDistribution}{(}{a}{,}{b}{)}}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{actual}{=}{{{{DistributionFactory}{.}{newInstance}{()}}{.}{createGammaDistribution}{(}{a}{,}{b}{)}}{.}{cummulativeProbability}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{b}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability8}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability1}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability001}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{{getSlopeStdErr}{()}}{*}{{{getTDistribution}{()}}{.}{inverseCummulativeProbability}{(}{{NUMBER_CONSTANT}{-}{{alpha}{/}{NUMBER_CONSTANT}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{tDistribution}{.}{cummulativeProbability}{(}{{-}{t}}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{tDistribution}{.}{cummulativeProbability}{(}{{-}{t}}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{chiSquaredDistribution}{.}{cummulativeProbability}{(}{{chiSquare}{(}{expected}{,}{observed}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{chiSquare}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{p}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{chiSquare}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{{STRING_CONSTANT}{+}{x}}{,}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{z}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{PRECISION}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{z}{.}{cummulativeProbability}{(}{{{z}{.}{getMean}{()}}{+}{{z}{.}{getStandardDeviation}{()}}}{)}}{,}{PRECISION}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{NUMBER_CONSTANT}{,}{{z}{.}{cummulativeProbability}{(}{mu}{)}}{,}{PRECISION}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{exp}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{TestUtils}{.}{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbabilityPositive}{()}{{{}{{{testValue}{(}{Double.NaN}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbabilityOne}{()}{{{}{{{testValue}{(}{Double.POSITIVE_INFINITY}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbabilityZero}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbabilityZero}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability900}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability950}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability975}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability990}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability999}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability100}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability050}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability025}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability010}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability001}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability900}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability950}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability975}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability990}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability100}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability050}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability025}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability010}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability001}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{h}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability1}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability0}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{inverseCummulativeProbability}{(}{p}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{double}{{actual}{=}{{t}{.}{cummulativeProbability}{(}{x}{)}}}{;}}{{{assertEquals}{(}{expected}{,}{actual}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{testCummulativeProbability999}{()}{{{}{{{testProbability}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInverseCummulativeProbability999}{()}{{{}{{{testValue}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{UnivariateRealFunction}}{{f}{=}{{new}{{PolynomialFunction}}{(}{c}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MathException}}{e}}{)}{{{}{{{e}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{{bp}{[}{row}{]}}{[}{col}{]}}{=}{{{bv}{[}{{pivot}{[}{row}{]}}{]}}{[}{col}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{LUDecompose}{()}}{;}}{{return}{false}{;}}{}}}{{catch}{(}{{{InvalidMatrixException}}{ex}}{)}{{{}{{return}{true}{;}}{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{(}{{new}{{RealMatrixImpl}}{(}{testData2}{)}}{)}}{.}{LUDecompose}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{test}{(}{values}{,}{begin}{,}{length}{)}}{)}{{{}{{return}{{{sum}{.}{evaluate}{(}{values}{)}}{/}{{(}{{(}{double}{)}{length}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractDescriptiveStatistics}{()}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{ExpandableDoubleArray}}{{eDA3}{=}{{new}{{ExpandableDoubleArray}}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ExpandableDoubleArray}}{{eDA2}{=}{{new}{{ExpandableDoubleArray}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{{new}{{Character}}{(}{v}{)}}{)}}}{;}}{}}}{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{{new}{{Long}}{(}{v}{)}}{)}}}{;}}{}}}{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{{new}{{Long}}{(}{v}{)}}{)}}}{;}}{}}}{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{result}{=}{{freqTable}{.}{getCount}{(}{v}{)}}}{;}}{}}}{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{tDistribution}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createTDistribution}{(}{degreesOfFreedom}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TDistribution}}{{tDistribution}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createTDistribution}{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquaredDistribution}}{{chiSquaredDistribution}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createChiSquareDistribution}{(}{df}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ChiSquaredDistribution}}{{chiSquaredDistribution}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createChiSquareDistribution}{(}{{{(}{double}{)}{expected.length}}{-}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{eDA}{=}{{new}{{ContractableDoubleArray}}{()}}}{;}}{{{setWindowSize}{(}{window}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Iterator}}{{iter}{=}{{{freqTable}{.}{uniqueSet}{()}}{.}{iterator}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{freqTable}{=}{{new}{{TreeBag}}{(}{comparator}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{det}{=}{{(}{double}{)}{parity}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{clear}{()}{{{}{{{super}{.}{clear}{()}}{;}}{{{lastVar}{=}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{moment.n}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{NUMBER_CONSTANT}{;}}{}}}{else}{{{}{{return}{{moment.m2}{/}{{(}{{moment.n0}{-}{NUMBER_CONSTANT}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{sumSq}{+=}{{Math}{.}{pow}{(}{{values}{[}{i}{]}}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{super}{.}{increment}{(}{d}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{m2}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{ex}}{)}{{{}{{{ex}{.}{printStackTrace}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{double}{getN}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{resetFunctionValueAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getFunctionValueAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{resetRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getRelativeAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{resetAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{double}{getAbsoluteAccuracy}{(}{)}{;}}}
{AST_ROOT_SC2NF{{public}{int}{getMaximalIterationCount}{(}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Math}{.}{exp}{(}{{{super}{.}{evaluate}{(}{values}{,}{begin}{,}{length}{)}}{/}{{(}{double}{)}{length}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{n}{++}}{;}}{{{super}{.}{increment}{(}{d}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{os}{+=}{{{m}{.}{getEntry}{(}{{i}{+}{NUMBER_CONSTANT}}{,}{{j}{+}{NUMBER_CONSTANT}}{)}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{os}{+=}{{{m}{.}{getEntry}{(}{{i}{+}{NUMBER_CONSTANT}}{,}{{j}{+}{NUMBER_CONSTANT}}{)}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{DEFAULT}{.}{format}{(}{c}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{InvalidMatrixException}{(}{{{String}}{message}}{)}{{{}{{this}{(}{message}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{new}{{PoissonDistributionImpl}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{t}{=}{{Math}{.}{abs}{(}{{t}{(}{m1}{,}{m2}{,}{v1}{,}{v2}{,}{n1}{,}{n2}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{RandomDataTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rand}{==}{null}}{)}{{{}{{{rand}{=}{{new}{{Random}}{()}}}{;}}{}}}}{{{rand}{.}{setSeed}{(}{{System}{.}{currentTimeMillis}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{rand}{==}{null}}{)}{{{}{{{rand}{=}{{new}{{Random}}{()}}}{;}}{}}}}{{{rand}{.}{setSeed}{(}{seed}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Random}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Random}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Random}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Random}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Random}}{{rand}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Random}}{{ran}{=}{{getRan}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{getIdentity}{(}{{this}{.}{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{getIdentity}{(}{{this}{.}{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{MathUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{float}{{sign}{=}{{sign}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{sign}{=}{{sign}{(}{x}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{numberOfSuccesses}{>}{populationSize}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{x}{<}{a}}{||}{{a}{<=}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{{a}{>}{NUMBER_CONSTANT}}{&&}{{x}{>}{a}}}}
{AST_ROOT_SC2NF{{public}{AbstractRandomGeneratorTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{{{randomData}{=}{{new}{{RandomDataImpl}}{(}{{new}{{TestRandomGenerator}}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{fm}{*}{fmin}}{>}{NUMBER_CONSTANT}}{)}{{{}{{{min}{=}{m}}{;}}{{{fmin}{=}{fm}}{;}}{}}}{else}{{{}{{{max}{=}{m}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{z}{=}{{new}{{Complex}}{(}{Double.NaN}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{result}{=}{{Math}{.}{sqrt}{(}{{getRSquare}{(}{b1}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{getSumSquaredErrors}{(}{{getSlope}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Number}}{{number}{=}{{{getRealFormat}{()}}{.}{parse}{(}{source}{,}{pos}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{getRealFormat}{()}}{.}{format}{(}{value}{,}{toAppendTo}{,}{pos}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{FastSineTransformer}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{FastFourierTransformer}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{FastCosineTransformer}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Rotation}}{(}{{-}{q0}}{,}{q1}{,}{q2}{,}{q3}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{eventOccurred}{(}{{double}{t}}{,}{{{double}{[]}}{y}}{)}{{{}{{{sign}{=}{{-}{sign}}}{;}}{{return}{SwitchingFunction.RESET}{;}}{}}}}}
{AST_ROOT_SC2NF{{{v}{.}{multiplySelf}{(}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{v1}{.}{addToSelf}{(}{v2}{)}}{;}}}
{AST_ROOT_SC2NF{{{v1}{.}{subtractFromSelf}{(}{v2}{)}}{;}}}
{AST_ROOT_SC2NF{{{p}{.}{multiplySelf}{(}{lcm}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{u}{.}{setElement}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{result}{=}{{u}{.}{solve}{(}{b}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{mean}{=}{{sample}{.}{getMean}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{VectorialSampleStatisticsTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{double}{[]}}{getArray}{()}{{{}{{return}{internalArray}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{name}{=}{{{new}{{Integer}}{(}{k}{)}}{.}{toString}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{TestProblem}}{[]}}{)}{{problems}{.}{toArray}{(}{{new}{{{TestProblem}}{[}}{NUMBER_CONSTANT}{]}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{d}{.}{setElement}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{result}{=}{{d}{.}{solve}{(}{b}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{simplex}{[}{i}{]}}{.}{getCost}{()}}{>}{{pointCostPair}{.}{getCost}{()}}}}
{AST_ROOT_SC2NF{{{}{{return}{minima}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{simplex}{[}{i}{]}}{=}{{new}{{PointCostPair}}{(}{{vertices}{[}{i}{]}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{simplex}{[}{i}{]}}{=}{{new}{{PointCostPair}}{(}{vertex}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RandomVectorGenerator}}{{rvg}{=}{{new}{{CorrelatedRandomVectorGenerator}}{(}{{statistics}{.}{getMean}{(}{null}{)}}{,}{{statistics}{.}{getCovarianceMatrix}{(}{null}{)}}{,}{{new}{{UniformRandomGenerator}}{(}{seed}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{largest}{.}{getCost}{()}}{-}{{smallest}{.}{getCost}{()}}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{ElementPattern}}{pattern}}}
{AST_ROOT_SC2NF{{{WeightedMeasurement}}{{m}{=}{{new}{{MyMeasurement}}{(}{NUMBER_CONSTANT}{,}{{{theoretical}{()}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{WeightedMeasurement}}{{m}{=}{{new}{{MyMeasurement}}{(}{NUMBER_CONSTANT}{,}{{{theoretical}{()}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{WeightedMeasurement}}{{m}{=}{{new}{{MyMeasurement}}{(}{NUMBER_CONSTANT}{,}{{{theoretical}{()}}{+}{NUMBER_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{tearOff}{()}{{{}{{{fitter}{=}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{AbstractCurveFitterTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{fail}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{while}{(}{true}{)}{{{}{{{sum}{=}{{{sampler}{.}{nextSamplePoint}{()}}{.}{getY}{()}}}{;}}{}}}}{}}}{{catch}{(}{{{ExhaustedSampleException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{data}{=}{{mapper}{.}{getInternalDataArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{data}{=}{{mapper}{.}{getInternalDataArray}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{{mapper}{.}{getInternalDataArray}{()}}{.}{length}}{==}{size}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{while}{(}{true}{)}{{{}{{{sum}{=}{{{sampler}{.}{nextSamplePoint}{()}}{.}{getY}{()}}}{;}}{}}}}{}}}{{catch}{(}{{{ExhaustedSampleException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{double}{{originalCost}{=}{{{original}{[}{NUMBER_CONSTANT}{]}}{.}{getCost}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{coefficients}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{coefficients}{;}}{}}}}
{AST_ROOT_SC2NF{{{{new}{{GaussNewtonEstimator}}{(}{maxIterations}{,}{convergence}{,}{steadyStateThreshold}{,}{epsilon}{)}}{.}{estimate}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{{largest}{.}{getCost}{()}}{-}{{smallest}{.}{getCost}{()}}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{optimum}{.}{getCost}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{optimum}{.}{getCost}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{estimatedMean}{=}{{sample}{.}{getMean}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{l}{.}{setElement}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}{{{result}{=}{{l}{.}{solve}{(}{b}{,}{NUMBER_CONSTANT}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{double}{[]}}{{estimatedMean}{=}{{sample}{.}{getMean}{(}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{{RationalNumber}}{{newCoeff}{=}{{RationalNumber}{.}{multiply}{(}{{a}{[}{i}{]}}{,}{lcm}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{interpolatedState}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ScalarSampleStatisticsTest}{(}{{{String}}{name}}{)}{{{}{{super}{(}{name}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{{SwitchingFunction}}{[]}}{getSwitchingFunctions}{()}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{ConvergenceException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{throw}{{new}{{ConvergenceException}}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{{new}{{MessageFormat}}{(}{pattern}{,}{Locale.US}{)}}{.}{format}{(}{arguments}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{super}{(}{{{new}{{MessageFormat}}{(}{pattern}{,}{Locale.US}{)}}{.}{format}{(}{arguments}{)}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{{new}{{BigDecimal}}{(}{{{new}{{Double}}{(}{x}{)}}{.}{toString}{()}}{)}}{.}{setScale}{(}{scale}{,}{roundingMethod}{)}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{getSlopeStdErr}{()}}{*}{{{getTDistribution}{()}}{.}{inverseCumulativeProbability}{(}{{NUMBER_CONSTANT}{-}{{alpha}{/}{NUMBER_CONSTANT}}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setMean}{(}{p}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{HypergeometricDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createHypergeometricDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createHypergeometricDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createHypergeometricDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createHypergeometricDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createChiSquareDistribution}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPascalDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPascalDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPoissonDistribution}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPoissonDistribution}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPoissonDistribution}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPoissonDistribution}{(}{DEFAULT_TEST_POISSON_PARAMETER}{)}}}{;}}}
{AST_ROOT_SC2NF{{{PoissonDistribution}}{{dist}{=}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createPoissonDistribution}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createBinomialDistribution}{(}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{setDistribution}{(}{{{DistributionFactory}{.}{newInstance}{()}}{.}{createTDistribution}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setUp}{()}{{{}{{{testStatistic}{=}{{TestUtils}{.}{getTTest}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUp}{()}{{{}{{{testStatistic}{=}{{TestUtils}{.}{getChiSquareTest}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{x}{=}{{m}{.}{operate}{(}{testVector}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{{}{{double}{{x}{=}{{MathUtils}{.}{factorial}{(}{test}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{transformer}{.}{scaleArray}{(}{x2}{,}{{NUMBER_CONSTANT}{/}{{Math}{.}{sqrt}{(}{x2.length}{)}}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{percentile}{=}{{new}{{Percentile}}{(}{NUMBER_CONSTANT}{)}}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{internalArray.length}{/}{numElements}}{)}}{>}{contractionCriteria}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{normProduct}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{ArithmeticException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{stats}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{RungeKuttaStepInterpolator}}{{rki}{=}{{(}{{RungeKuttaStepInterpolator}}{)}{{prototype}{.}{clone}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{RungeKuttaStepInterpolator}}{{rki}{=}{{(}{{RungeKuttaStepInterpolator}}{)}{{prototype}{.}{clone}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{safety}}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{safety}}{=}{NUMBER_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{false}{,}{c}{,}{a}{,}{b}{,}{{new}{{ThreeEighthesStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{false}{,}{c}{,}{a}{,}{b}{,}{{new}{{EulerStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{false}{,}{c}{,}{a}{,}{b}{,}{{new}{{MidpointStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{false}{,}{c}{,}{a}{,}{b}{,}{{new}{{GillStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{false}{,}{c}{,}{a}{,}{b}{,}{{new}{{ClassicalRungeKuttaStepInterpolator}}{()}}{,}{step}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{double}{getCurrentStepsize}{()}{{{}{{return}{stepSize}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{double}{getCurrentStepsize}{()}{{{}{{return}{stepSize}{;}}{}}}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{)}}}{;}}}
{AST_ROOT_SC2NF{{{TestProblemHandler}}{{handler}{=}{{new}{{TestProblemHandler}}{(}{pb}{)}}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addSwitchingFunction}{(}{stepProblem}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addSwitchingFunction}{(}{stepProblem}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{integ}{.}{addSwitchingFunction}{(}{stepProblem}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{new}{{Complex}}{(}{{-}{real}}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isNaN}{()}}{)}{{{}{{return}{NaN}{;}}{}}}}{{return}{{new}{{Complex}}{(}{real}{,}{{-}{imaginary}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{SummaryStatistics}}{{stats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}{{{binStats}{.}{add}{(}{i}{,}{stats}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{stats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{stats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{u}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{oneSidedPStats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{SummaryStatistics}}{{oneSidedPStats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{sampleStats}{=}{{SummaryStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{DescriptiveStatistics}{.}{newInstance}{()}}}{;}}}
{AST_ROOT_SC2NF{{{BufferedReader}}{{in}{=}{{new}{{BufferedReader}}{(}{{new}{{InputStreamReader}}{(}{{{getClass}{()}}{.}{getResourceAsStream}{(}{resource}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{arguments}{;}}{}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{ConvergenceException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{new}{{{String}}{[]}}{{{}{{Integer}{.}{toString}{(}{starts}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{originalCost}{=}{{{original}{[}{NUMBER_CONSTANT}{]}}{.}{cost}}}{;}}}
{AST_ROOT_SC2NF{{{{simplex}{[}{i}{]}}{.}{cost}}{>}{pointCostPair.cost}}}
{AST_ROOT_SC2NF{{return}{{{(}{{largest.cost}{-}{smallest.cost}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{optimum.cost}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{optimum.cost}{>}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{(}{{largest.cost}{-}{smallest.cost}}{)}}{<}{threshold}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{String}}{[]}}{{{}{{Integer}{.}{toString}{(}{maxCostEval}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{double}{{c}{=}{{NUMBER_CONSTANT}{/}{{(}{{n}{*}{{(}{{n}{-}{NUMBER_CONSTANT}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{stat}{=}{{new}{{VectorialCovariance}}{(}{{{points}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{stat}{=}{{new}{{VectorialCovariance}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{VectorialCovariance}}{(}{NUMBER_CONSTANT}{)}}{.}{increment}{(}{{new}{{double}{[}}{NUMBER_CONSTANT}{]}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{covStat}{=}{{new}{{VectorialCovariance}}{(}{{{vertices}{[}{NUMBER_CONSTANT}{]}}{.}{length}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{covStat}{=}{{new}{{VectorialCovariance}}{(}{mean.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{VectorialCovariance}}{{covStat}{=}{{new}{{VectorialCovariance}}{(}{mean.length}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{meanImpl}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{geoMeanImpl}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{sumLogImpl}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{maxImpl}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{minImpl}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{sumSqImpl}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{sumImpl}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{u}{.}{setMeanImpl}{(}{{new}{{sumMean}}{()}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{IllegalStateException}}{ex}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{++}{jacobianEvaluations}}{;}}}
{AST_ROOT_SC2NF{{{++}{jacobianEvaluations}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArithmeticException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ArithmeticException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{distribution}{.}{cumulativeProbability}{(}{{-}{t}}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{distribution}{.}{cumulativeProbability}{(}{{-}{t}}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{NUMBER_CONSTANT}{-}{{distribution}{.}{cumulativeProbability}{(}{{-}{t}}{,}{t}{)}}}{;}}}
{AST_ROOT_SC2NF{{{certifiedValues}{=}{{new}{{HashMap}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{switchesHandler}{.}{add}{(}{function}{,}{maxCheckInterval}{,}{convergence}{,}{maxIterationCount}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{ArrayList}}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Class}}{key}}}
{AST_ROOT_SC2NF{{{Class}}{key}}}
{AST_ROOT_SC2NF{{{}{{{switchesHandler}{.}{add}{(}{function}{,}{maxCheckInterval}{,}{convergence}{,}{maxIterationCount}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{functions}{=}{{new}{{ArrayList}}{()}}}{;}}{{{first}{=}{null}}{;}}{{{initialized}{=}{false}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{Collection}}{c}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{List}}{list}}}
{AST_ROOT_SC2NF{{{List}}{list}}}
{AST_ROOT_SC2NF{{public}{ListUnivariateImpl}{()}{{{}{{this}{(}{{new}{{ArrayList}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{binCount}}{=}{binCount}}{;}}{{{binStats}{=}{{new}{{ArrayList}}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{EmpiricalDistributionImpl}{()}{{{}{{{binStats}{=}{{new}{{ArrayList}}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{points}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{StepInterpolator}}{)}{{steps}{.}{get}{(}{index}{)}}}{)}}{.}{getInterpolatedState}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{{(}{{StepInterpolator}}{)}{{steps}{.}{get}{(}{index}{)}}}{)}}{.}{getInterpolatedTime}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{ContinuousOutputModel}{()}{{{}{{{steps}{=}{{new}{{ArrayList}}{()}}}{;}}{{{reset}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{Collection}}{categoryData}}}
{AST_ROOT_SC2NF{{{points}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Collection}}{c}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{ArrayList}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ListUnivariateImpl}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{ArrayList}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DescriptiveStatistics}}{{u}{=}{{new}{{ListUnivariateImpl}}{(}{{new}{{ArrayList}}{()}}{,}{transformers}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{MatrixUtils}{.}{createBigIdentityMatrix}{(}{{this}{.}{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{BigMatrix}}{copy}{()}{{{}{{return}{{new}{{BigMatrixImpl}}{(}{{this}{.}{copyOut}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{nRows}{=}{v.length}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{solve}{(}{{MatrixUtils}{.}{createRealIdentityMatrix}{(}{{this}{.}{getRowDimension}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{new}{{Rotation}}{(}{u}{,}{{new}{{Vector3D}}{()}}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Vector3D}{.}{angle}{(}{{new}{{Vector3D}}{()}}{,}{Vector3D.plusI}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{new}{{Vector3D}}{()}}{.}{normalize}{()}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{Math}{.}{abs}{(}{{{new}{{Vector3D}}{()}}{.}{getNorm}{()}}{)}}{<}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{String}}{[]}}{parts}}}
{AST_ROOT_SC2NF{{if}{(}{{offset}{>}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{SwitchException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Double}}{(}{t}{)}}{}}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{maxIterations}{)}}{}}}}{)}{;}}{{{{this}{.}{maxIterations}}{=}{maxIterations}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{m}{)}}{,}{{new}{{Integer}}{(}{p}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{maxCostEval}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{dimension1}{)}}{,}{{new}{{Integer}}{(}{dimension2}{)}}{}}}}{)}{;}}}
{AST_ROOT_SC2NF{{{dynaBean}{.}{set}{(}{propertyName}{,}{{new}{{Double}}{(}{v}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{{input}{=}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{input}{=}{{new}{{Double}}{(}{expected}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{new}{{Double}}{(}{{o}{.}{toString}{()}}{)}}{.}{doubleValue}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{list}{.}{add}{(}{{new}{{Double}}{(}{one}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{new}{{{Object}}{[]}}{{{}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{}}}}}
{AST_ROOT_SC2NF{{new}{{{Object}}{[]}}{{{}{{new}{{Double}}{(}{p}{)}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumPct}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumPct}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumFreq}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCumFreq}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPct}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getPct}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{getCount}{(}{{new}{{Long}}{(}{v}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addValue}{(}{{new}{{Long}}{(}{{v}{.}{longValue}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{EstimationException}}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Integer}}{(}{rows}{)}}{,}{{new}{{Integer}}{(}{cols}{)}}{}}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{{Object}}{[]}}{{arguments}{=}{{{}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{,}{{new}{{Integer}}{(}{NUMBER_CONSTANT}{)}}{}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ret}{=}{{new}{{Double}}{(}{value}{)}}}{;}}{{{pos}{.}{setIndex}{(}{endIndex}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Double}}{(}{argument}{)}}{}}}}{)}{;}}{{{{this}{.}{argument}}{=}{argument}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{zero}{.}{equals}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{u}{.}{equals}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Double}}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Double}}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Double}}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{Double}}{(}{newA}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{STRING_CONSTANT}{,}{{u}{.}{equals}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{STRING_CONSTANT}{,}{{new}{{{Object}}{[]}}{{{}{{new}{{Double}}{(}{value}{)}}{,}{{new}{{Integer}}{(}{maxIterations}{)}}{}}}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Double}}{{pi}{=}{{new}{{Double}}{(}{Math.PI}{)}}}{;}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{STRING_CONSTANT}{,}{{u}{.}{equals}{(}{{new}{{Double}}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Double}}{{value}{=}{{new}{{Double}}{(}{valueString}{)}}}{;}}}
{AST_ROOT_SC2NF{{double}{{delta}{=}{{{(}{{max}{-}{min}}{)}}{/}{{{(}{{new}{{Double}}{(}{binCount}{)}}{)}}{.}{doubleValue}{()}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{val}{=}{{{new}{{Double}}{(}{str}{)}}{.}{doubleValue}{()}}}{;}}{{{sampleStats}{.}{addValue}{(}{val}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{rhs}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{rootNameNode}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Node}}{{newVar}{=}{{{IR}{.}{declaration}{(}{child}{,}{{n}{.}{getType}{()}}{)}}{.}{srcref}{(}{n}{)}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{notChild}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{CALL}{:}}{{{annotateCalls}{(}{n}{)}}{;}}{break;}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{enumTypeNode}{.}{getType}{()}}{)}}{.}{isEqualTo}{(}{Token.BANG}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{CALL}{:}}{{{visitCall}{(}{t}{,}{n}{)}}{;}}{break;}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{typeExprNode}{.}{getType}{()}}{==}{Token.QMARK}}{&&}{{!}{{typeExprNode}{.}{hasChildren}{()}}}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.VAR}{,}{{var}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{getType}{()}}{==}{type}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{definitionParent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{throw}{{new}{{RuntimeException}}{(}{{STRING_CONSTANT}{+}{{defSite}{.}{getType}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{nameNode}{.}{isGetProp}{()}}{,}{STRING_CONSTANT}{,}{{nameNode}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{exprKind}{=}{{expr}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{expr}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{insideQualifiedName}{||}{{{{propAccessNode}{.}{getParent}{()}}{.}{getType}{()}}{!=}{Token.ASSIGN}}}}
{AST_ROOT_SC2NF{{expr}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{lvalue}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{tokenType}{=}{{expr}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{warnInvalidOperand}{(}{expr}{,}{{expr}{.}{getType}{()}}{,}{STRING_CONSTANT}{,}{{lhsType}{+}{STRING_CONSTANT}{+}{rhsType}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{commonTypes}{.}{isNumberScalarOrObj}{(}{pair.type}{)}}}{)}{{{}{{{warnInvalidOperand}{(}{child}{,}{{expr}{.}{getType}{()}}{,}{JSType.NUMBER}{,}{pair.type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{exprKind}{=}{{expr}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{warnings}{.}{add}{(}{{JSError}{.}{make}{(}{expr}{,}{UNKNOWN_EXPR_TYPE}{,}{{{expr}{.}{getType}{()}}{.}{toString}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{dn}{.}{getValue}{()}}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{cont}{.}{getType}{()}}{)}}{.}{isSameAs}{(}{Token.CONTINUE}{)}}{;}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{breakStm}{.}{getType}{()}}{)}}{.}{isSameAs}{(}{Token.BREAK}{)}}{;}}}
{AST_ROOT_SC2NF{{value}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{!}{{registerFunc}{.}{isValidNodeType}{(}{{valueNode}{.}{getType}{()}}{)}}}}
{AST_ROOT_SC2NF{{!}{{registerFunc}{.}{isValidNodeType}{(}{{value}{.}{getType}{()}}{)}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{changed}{=}{{{changed}{||}{{{finalValue}{.}{getType}{()}}{!=}{{info.initialValue}{.}{getType}{()}}}}{||}{{!}{{finalValue}{.}{isEquivalentTo}{(}{info.initialValue}{)}}}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{blockNode}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{&&}{{{{blockNode}{.}{getFirstChild}{()}}{.}{getType}{()}}{==}{Token.THROW}}}{)}{{{}{{return}{true}{;}}{}}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{arg}{.}{getType}{()}}{!=}{desiredType}}}
{AST_ROOT_SC2NF{{val}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{lhs}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{HOOK}{:}}{{case}{AND}{:}}{{case}{OR}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{expr}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{ancestor}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{actualType}{=}{{{{cfgNodes}{.}{get}{(}{i}{)}}{.}{getValue}{()}}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{source}{.}{getType}{()}}{==}{startToken}}{)}{{{}{{{assertFalse}{(}{{STRING_CONSTANT}{+}{startToken}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{cfg}{.}{isImplicitReturn}{(}{dest}{)}}{)}}{;}}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{source}{.}{getType}{()}}{==}{startToken}}{&&}{{cfg}{.}{isImplicitReturn}{(}{dest}{)}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{{enclosingNode}{!=}{null}}{&&}{{{enclosingNode}{.}{getType}{()}}{!=}{Token.FUNCTION}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{expr}{.}{getRoot}{()}}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{refParent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{anc}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{grandparent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{AND}{:}}{{case}{OR}{:}}{{case}{HOOK}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.STRING}{,}{{n}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{Token.STRING}{,}{{n}{.}{getType}{()}}{)}}{;}}{{{visited}{.}{append}{(}{{n}{.}{getString}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{input}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{next}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{value}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{return}{{{{parent}{!=}{null}}{&&}{{{parent}{.}{getType}{()}}{==}{Token.EXPONENT}}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{{NodeUtil}{.}{precedence}{(}{{n}{.}{getType}{()}}{)}}{<}{minPrecedence}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{LET}{:}}{{case}{CONST}{:}}{{case}{FUNCTION}{:}}{{case}{CLASS}{:}}{{case}{DO}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{while}{(}{{{firstNonOperator}{.}{getType}{()}}{==}{op}}{)}{{{}{{{firstNonOperator}{=}{{firstNonOperator}{.}{getFirstChild}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{c}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{last}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{FUNCTION}{:}}{{if}{(}{{n}{.}{isArrowFunction}{()}}{)}{{{}{{{visitArrowFunction}{(}{t}{,}{n}{)}}{;}}{}}}}{break;}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{value}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}{{return}{{(}{{{type}{==}{Token.INC}}{||}{{type}{==}{Token.DEC}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{{node}{.}{getType}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Token}}{{declarationType}{=}{{declarationNode}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{newNode}{=}{{IR}{.}{declaration}{(}{newLHS}{,}{newRHS}{,}{{parent}{.}{getType}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{newNode}{=}{{IR}{.}{declaration}{(}{newLHS}{,}{newRHS}{,}{{parent}{.}{getType}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{int}{{parentPrecedence}{=}{{NodeUtil}{.}{precedence}{(}{{n}{.}{getType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{if}{(}{isSimpleOp}{)}{{{}{{{msg}{=}{{STRING_CONSTANT}{+}{{{{n}{.}{getType}{()}}{.}{toString}{()}}{.}{toLowerCase}{()}}{+}{STRING_CONSTANT}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.SCRIPT}{,}{{{{global}{.}{getDeclaration}{()}}{.}{getNode}{()}}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.GETPROP}{,}{{{{refs}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getNode}{()}}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.GETPROP}{,}{{{{refs}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getNode}{()}}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.NAME}{,}{{{{refs}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getNode}{()}}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{propName}{.}{isString}{()}}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{propName}{.}{getType}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{propName}{.}{isString}{()}}}{)}{{{}{{throw}{{new}{{IllegalStateException}}{(}{{STRING_CONSTANT}{+}{{propName}{.}{getType}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{nodeType}{=}{{input}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{current}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{type}{!=}{null}}{&&}{{{type}{.}{getType}{()}}{!=}{Token.ARRAY_TYPE}}}}
{AST_ROOT_SC2NF{{if}{(}{{invalidInitializers}{.}{contains}{(}{{initializer}{.}{getType}{()}}{)}}{)}{{{}{{{errorReporter}{.}{error}{(}{STRING_CONSTANT}{,}{sourceName}{,}{{lineno}{(}{loopNode.initializer}{)}}{,}{{charno}{(}{loopNode.initializer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{invalidInitializers}{.}{contains}{(}{{initializer}{.}{getType}{()}}{)}}{)}{{{}{{{errorReporter}{.}{error}{(}{STRING_CONSTANT}{,}{sourceName}{,}{{lineno}{(}{loopNode.initializer}{)}}{,}{{charno}{(}{loopNode.initializer}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{nType}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{WHILE}{:}}{{case}{DO}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{WHILE}{:}}{{case}{DO}{:}}{{case}{SWITCH}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{GETPROP}{:}}{{return}{{{n}{.}{getLastChild}{()}}{.}{getString}{()}}{;}}{{case}{MEMBER_FUNCTION_DEF}{:}}{{return}{{n}{.}{getString}{()}}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{expr}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{expr}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{getType}{()}}}
{AST_ROOT_SC2NF{{getType}{()}}}
{AST_ROOT_SC2NF{{getType}{()}}}
{AST_ROOT_SC2NF{{getType}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{source}{==}{null}}{||}{{Token.FUNCTION}{==}{{source}{.}{getType}{()}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{source}{==}{null}}{||}{{Token.FUNCTION}{==}{{source}{.}{getType}{()}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{expectedArity}{=}{{Token}{.}{arity}{(}{{n}{.}{getType}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{NAME}{:}}{{{validateName}{(}{n}{)}}{;}}{break;}{{case}{GETPROP}{:}}{{{validateGetProp}{(}{n}{)}}{;}}{break;}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{UnsupportedOperationException}}{e}}{)}{{{}{{{violation}{(}{{STRING_CONSTANT}{+}{{n}{.}{getType}{()}}}{,}{n}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{validateChildCount}{(}{n}{,}{NUMBER_CONSTANT}{)}}{;}}{{{validateNameDeclarationHelper}{(}{{n}{.}{getType}{()}}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{NodeUtil}{.}{isNameDeclaration}{(}{n}{)}}{)}{{{}{{{validateNameDeclarationHelper}{(}{{n}{.}{getType}{()}}{,}{n}{)}}{;}}{}}}{else}{{{}{{{validateOptionalExpression}{(}{n}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{body}{.}{getType}{()}}{==}{Token.BLOCK}}{)}{{{}{{{validateBlock}{(}{body}{)}}{;}}{}}}{else}{{{}{{{validateExpression}{(}{body}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{n}{.}{getFirstChild}{()}}{.}{getType}{()}}{==}{Token.EXPORT_SPECS}}}
{AST_ROOT_SC2NF{{secondChild}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{control}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{{n}{.}{getParent}{()}}{.}{getType}{()}}{)}{{}{{case}{VAR}{:}}{{case}{CATCH}{:}}{{{names}{.}{add}{(}{{n}{.}{getString}{()}}{)}}{;}}{break;}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{switch}{(}{{c}{.}{getType}{()}}{)}{{}{{case}{FUNCTION}{:}}{{case}{AND}{:}}{{case}{OR}{:}}{{case}{HOOK}{:}}{{return}{true}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{cArg}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{type}{==}{{n}{.}{getType}{()}}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{FlowScope}}{{rightScope}{=}{{reverseInterpreter}{.}{getPreciserScopeKnowingConditionOutcome}{(}{left}{,}{{leftOutcome}{.}{getOutcomeFlowScope}{(}{{left}{.}{getType}{()}}{,}{nIsAnd}{)}}{,}{nIsAnd}{)}}}{;}}}
{AST_ROOT_SC2NF{{left}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{newScope}{=}{{reverseInterpreter}{.}{getPreciserScopeKnowingConditionOutcome}{(}{condition}{,}{{conditionOutcomes}{.}{getOutcomeFlowScope}{(}{{condition}{.}{getType}{()}}{,}{{branch}{==}{Branch.ON_TRUE}}{)}}{,}{{branch}{==}{Branch.ON_TRUE}}{)}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{namedImports}{.}{getType}{()}}{==}{Token.IMPORT_SPECS}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{{assertEquals}{(}{Token.FUNCTION}{,}{{function}{.}{getType}{()}}{)}}{;}}{{{assertEquals}{(}{name}{,}{{NodeUtil}{.}{getName}{(}{function}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{arg}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{isASTNormalized}{()}}{&&}{{Token.NAME}{==}{{constructorNameNode}{.}{getType}{()}}}}}
{AST_ROOT_SC2NF{{result}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{{export}{.}{getFirstChild}{()}}{.}{getType}{()}}{==}{Token.EXPORT_SPECS}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{nextNode}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{typeNode}{.}{getType}{()}}{==}{Token.BANG}}{)}{{{}{{{typeNode}{=}{{typeNode}{.}{getFirstChild}{()}}}{;}}{}}}}{{return}{typeNode}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Node}}{{decl}{=}{{{IR}{.}{declaration}{(}{{cls.name}{.}{cloneTree}{()}}{,}{cls.constructor.value}{,}{{exprRoot}{.}{getType}{()}}{)}}{.}{srcref}{(}{exprRoot}{)}}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{fieldTypeNode}{.}{getType}{()}}{==}{Token.COLON}}{)}{{{}{{{fieldNameNode}{=}{{fieldTypeNode}{.}{getFirstChild}{()}}}{;}}{{{hasType}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{pType}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.NEW}{,}{{callsiteNode}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.CALL}{,}{{callsiteNode}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.CALL}{,}{{callsiteNode}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{getType}{()}}{==}{Token.PARAM_LIST}}}
{AST_ROOT_SC2NF{{{aliasReference}{.}{getType}{()}}{==}{Token.STRING_KEY}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{getType}{()}}{==}{Token.INSTANCEOF}}{)}{{{}{{{reportIfNonObject}{(}{t}{,}{{n}{.}{getFirstChild}{()}}{,}{SUSPICIOUS_INSTANCEOF_LEFT_OPERAND}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{getType}{()}}{==}{Token.IN}}{)}{{{}{{{reportIfNonObject}{(}{t}{,}{{n}{.}{getLastChild}{()}}{,}{SUSPICIOUS_IN_OPERATOR}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{operatorToken}{=}{{condition}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{builder}{.}{append}{(}{{{n}{.}{getType}{()}}{.}{toString}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{decl.node}{.}{getParent}{()}}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{n}{.}{isGetProp}{()}}{,}{STRING_CONSTANT}{,}{{n}{.}{getType}{()}}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{nType}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{val}{.}{getType}{()}}{==}{Token.OR}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{typeNode}{.}{getType}{()}}{!=}{Token.EQUALS}}{)}{{{}{{{report}{(}{typeNode}{,}{DEFAULT_PARAM_MUST_BE_MARKED_OPTIONAL}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{typeNode}{!=}{null}}{&&}{{{typeNode}{.}{getType}{()}}{==}{Token.STRING}}}}
{AST_ROOT_SC2NF{{c}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{left}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{TernaryValue}}{{result}{=}{{evaluateComparison}{(}{{n}{.}{getType}{()}}{,}{left}{,}{right}{,}{shouldUseTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{result}{=}{{performArithmeticOp}{(}{{n}{.}{getType}{()}}{,}{left}{,}{right}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{argumentNode}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{subtree}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{subtree}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{while}{(}{{moveIt}{.}{hasNext}{()}}{)}{{{}{{{actualTokens}{.}{add}{(}{{{moveIt}{.}{next}{()}}{.}{getType}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{node}{.}{getType}{()}}{==}{Token.CALL}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{useParent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{nodeType}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{parentNodeType}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{key}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{sourceName}{!=}{null}}{)}}{;}}{{{Preconditions}{.}{checkState}{(}{{{n}{.}{getType}{()}}{==}{type}}{,}{n}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{Token.FUNCTION}{,}{{fooNode}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{{n}{.}{getFirstChild}{()}}{.}{getType}{()}}{)}{{}{{case}{HOOK}{:}}{{case}{AND}{:}}{{case}{OR}{:}}{{return}{true}{;}}{default:}{break;}{}}}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{BREAK}{:}}{{case}{CONTINUE}{:}}{{case}{RETURN}{:}}{{case}{THROW}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{blockChild}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{subtree}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{ancestor}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{if}{(}{{{node}{.}{getType}{()}}{==}{type}}{)}{{{}{{{matchingNodes}{.}{add}{(}{node}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{declType}{=}{{variable}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isNew}{()}}{,}{STRING_CONSTANT}{,}{{node}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isCall}{()}}{,}{STRING_CONSTANT}{,}{{node}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{node}{.}{isHook}{()}}{,}{STRING_CONSTANT}{,}{{node}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{(}{{node}{.}{isAnd}{()}}{)}}{||}{{(}{{node}{.}{isOr}{()}}{)}}}{,}{STRING_CONSTANT}{,}{{node}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{hook}{.}{isHook}{()}}{,}{STRING_CONSTANT}{,}{{hook}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{{(}{{original}{.}{isAnd}{()}}{)}}{||}{{(}{{original}{.}{isOr}{()}}{)}}}{,}{STRING_CONSTANT}{,}{{original}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{secondArgumentType}{=}{{secondArgument}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{int}{{offset}{=}{{getSourceInfoOffset}{(}{provideStringNode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{!}{{type}{.}{isNoResolvedType}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{isKnown}{(}{n}{)}}{&&}{{!}{{isAllType}{(}{n}{)}}}{&&}{{isClassType}{(}{n}{)}}{&&}{{!}{{isNativeObjectType}{(}{n}{)}}}{&&}{{!}{{isWhitelistedType}{(}{n}{)}}}}{;}}}
{AST_ROOT_SC2NF{{!}{{isTemplateType}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{!}{{isTemplateType}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{type}{==}{null}}{||}{{type}{.}{isUnknownType}{()}}}{||}{{type}{.}{isAllType}{()}}}{)}{{{}{{return}{{new}{{MatchResult}}{(}{allowLooseMatches}{,}{allowLooseMatches}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setPreserveGoogRequires}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{compilerOptions}{.}{setPreserveGoogRequires}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{importNode}{.}{copyInformationFrom}{(}{export}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{stringKey}{=}{{IR}{.}{stringKey}{(}{name}{,}{{{memberDef}{.}{getFirstChild}{()}}{.}{detachFromParent}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{parent}{.}{isExprResult}{()}}{)}{{{}{{{parent}{.}{detachFromParent}{()}}{;}}{}}}{else}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{elemValue}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{parent}{.}{getParent}{()}}{.}{detachFromParent}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{n}{.}{getParent}{()}}{!=}{null}}{)}{{{}{{{n}{.}{detachFromParent}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{body}{=}{{IR}{.}{block}{(}{{IR}{.}{returnNode}{(}{{returnValue}{.}{detachFromParent}{()}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{parent}{.}{replaceChild}{(}{export}{,}{{declaration}{.}{detachFromParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{newBlock}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{typeString}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{rep}{.}{isExprResult}{()}}{)}{{{}{{{rep}{=}{{rep}{.}{getFirstChild}{()}}}{;}}{{{rep}{.}{detachFromParent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{changeProxy}{.}{replaceWith}{(}{grandparent}{,}{parent}{,}{{{parent}{.}{getLastChild}{()}}{.}{detachFromParent}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{replacement}{=}{{firstArg}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{rhs}{.}{detachFromParent}{()}}{;}}{{{ancestor}{.}{replaceChild}{(}{last}{,}{rhs}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{rhs}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{child}{=}{{{n}{.}{getLastChild}{()}}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{{argNode}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{assignmentValue}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{simplified}{=}{{{new}{{Node}}{(}{type}{,}{{condition}{.}{detachFromParent}{()}}{,}{{simplifyShortCircuitBranch}{(}{body}{)}}{)}}{.}{useSourceInfoIfMissingFrom}{(}{hook}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{original}{.}{getParent}{()}}{!=}{null}}{)}{{{}{{{original}{.}{detachFromParent}{()}}{;}}{}}}}{{{replacements}{.}{add}{(}{original}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{newGetProp}{=}{{IR}{.}{getprop}{(}{{target}{.}{detachFromParent}{()}}{,}{{prop}{.}{detachFromParent}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{i}{==}{NUMBER_CONSTANT}}{&&}{{{first}{.}{getString}{()}}{.}{isEmpty}{()}}}{)}{{{}{{{add}{=}{{{add}{.}{getSecondChild}{()}}{.}{detachFromParent}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{for}{(}{{{PrototypeMemberDeclaration}}{declar}}{:}{instance.declarations}{)}{{{}{{{block}{.}{addChildToBack}{(}{{declar.node}{.}{detachFromParent}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{preserveGoogProvidesAndRequires}{&&}{{explicitNode}{.}{hasChildren}{()}}}{)}{{{}{return;}{}}}}{{{explicitNode}{.}{detachFromParent}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{typeDeclaration}{!=}{null}}{)}{{{}{{{compiler}{.}{forwardDeclareType}{(}{typeDeclaration}{)}}{;}}{{{parent}{.}{detachFromParent}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{value}{=}{{{n}{.}{getChildAtIndex}{(}{NUMBER_CONSTANT}{)}}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{closureRequire}}{:}{requiresToBeRemoved}{)}{{{}{{{closureRequire}{.}{detachFromParent}{()}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{arg}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{method}{=}{{{member}{.}{getLastChild}{()}}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{stringKey}{=}{{IR}{.}{stringKey}{(}{{{(}{{{member}{.}{isGetterDef}{()}}{||}{{member}{.}{getBooleanProp}{(}{Node.COMPUTED_PROP_GETTER}{)}}}{)}}{?}{STRING_CONSTANT}{:}{STRING_CONSTANT}}{,}{{function}{.}{detachFromParent}{()}}{)}}}}
{AST_ROOT_SC2NF{{{constructor}{=}{{{member}{.}{getFirstChild}{()}}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{{functionBody}{.}{children}{()}}{)}{{{}{{{newBlock}{.}{addChildToBack}{(}{{child}{.}{detachFromParent}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{stringKey}{=}{{IR}{.}{stringKey}{(}{name}{,}{{{n}{.}{getFirstChild}{()}}{.}{detachFromParent}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{subtree}{.}{getChildCount}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{{{subtree}{.}{getLastChild}{()}}{.}{detachFromParent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Node}}{c}}{:}{{externs}{.}{children}{()}}{)}{{{}{{if}{(}{{!}{{c}{.}{hasChildren}{()}}}{)}{{{}{{{c}{.}{detachFromParent}{()}}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{expected}{!=}{null}}{)}{{{}{{{expectedRoot}{=}{{parseExpectedJs}{(}{expected}{)}}}{;}}{{{expectedRoot}{.}{detachFromParent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{ancParent}{=}{{ancestor}{.}{getParent}{()}}}{;}}{{{ancParent}{.}{replaceChild}{(}{ancestor}{,}{{{ancestor}{.}{getLastChild}{()}}{.}{detachFromParent}{()}}{)}}{;}}{break;}{}}}}
{AST_ROOT_SC2NF{{{node}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{node}{!=}{null}}{&&}{{{node}{.}{getParent}{()}}{!=}{null}}}{)}{{{}{{{node}{.}{detachFromParent}{()}}{;}}{}}}}{{return}{node}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{compiler}{.}{report}{(}{{JSError}{.}{make}{(}{requireNode}{,}{MISSING_MODULE_OR_PROVIDE.level}{,}{MISSING_MODULE_OR_PROVIDE}{,}{legacyNamespace}{)}}{)}}{;}}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{requireNode}{)}}{.}{detachFromParent}{()}}{;}}{continue;}{}}}}
{AST_ROOT_SC2NF{{{moduleBlockNode}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{returnStatementNode}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{call}{)}}{.}{detachFromParent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{private}{void}{updateGoogDeclareLegacyNamespace}{(}{{{Node}}{call}}{)}{{{}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{call}{)}}{.}{detachFromParent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{currentScript.declareLegacyNamespace}}{)}{{{}{{{{NodeUtil}{.}{getEnclosingStatement}{(}{call}{)}}{.}{detachFromParent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{secondExpr}{!=}{firstExpr}}{)}{{{}{{{secondExpr}{.}{detachFromParent}{()}}{;}}{}}}{else}{{{}{{{secondExpr}{=}{{IR}{.}{nullNode}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{bind.target}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{declParent}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{!=}{null}}{)}{{{}{{{value}{.}{detachFromParent}{()}}{;}}{}}}}{{{varNode}{=}{parent}}{;}}{}}}}
{AST_ROOT_SC2NF{{{callbackFunction}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{objlit}{.}{removeChild}{(}{key}{)}}{;}}{{{value}{.}{detachFromParent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Node}}{{replacement}{=}{{value}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{destObj}{=}{{{n}{.}{getSecondChild}{()}}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newNode}{=}{{new}{{Node}}{(}{newType}{,}{{left}{.}{detachFromParent}{()}}{,}{{newRight}{.}{detachFromParent}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{NodeUtil}{.}{isNumericResult}{(}{left}{)}}{)}{{{}{{{parent}{.}{replaceChild}{(}{n}{,}{{left}{.}{detachFromParent}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{left}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{root}{!=}{null}}{)}{{{}{{{root}{.}{detachFromParent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{callNode}{.}{getParent}{()}}{.}{replaceChild}{(}{callNode}{,}{{replacementNode}{.}{detachFromParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{clinitAssignedValue}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{follow}{==}{null}}{||}{{areMatchingExits}{(}{n}{,}{follow}{)}}}{)}{{{}{{{n}{.}{detachFromParent}{()}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{block}{.}{replaceChild}{(}{maybeIf}{,}{{{maybeIf}{.}{getLastChild}{()}}{.}{detachFromParent}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{colon}{.}{addChildToBack}{(}{{member}{.}{detachFromParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{Node}}{child}}{:}{stringKeys}{)}{{{}{{{child}{.}{detachFromParent}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{member}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{indexSignature}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{comma}{.}{addChildToBack}{(}{{leftMostChild}{.}{detachFromParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{condStatement}{=}{{{IR}{.}{exprResult}{(}{{cond}{.}{detachFromParent}{()}}{)}}{.}{srcref}{(}{cond}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{statement}{=}{{{IR}{.}{exprResult}{(}{{cond}{.}{detachFromParent}{()}}{)}}{.}{useSourceInfoIfMissingFrom}{(}{cond}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{n}{.}{getParent}{()}}{.}{replaceChild}{(}{n}{,}{{caseBlock}{.}{detachFromParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{maybeBreak}{.}{detachFromParent}{()}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{subtree}{.}{detachFromParent}{()}}{;}}{{{subtree}{=}{null}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{subtree}{.}{getParent}{()}}{.}{replaceChild}{(}{subtree}{,}{{right}{.}{detachFromParent}{()}}{)}}{;}}{{{reportCodeChange}{()}}{;}}{{return}{right}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{n}{.}{detachFromParent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{var}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{newDeclaration}{=}{{{IR}{.}{var}{(}{{name}{.}{detachFromParent}{()}}{)}}{.}{useSourceInfoFrom}{(}{declarationList}{)}}}{;}}}
{AST_ROOT_SC2NF{{{inlineValue}{(}{v}{,}{ref}{,}{{value}{.}{detachFromParent}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{opDetached}{=}{{op}{.}{detachFromParent}{()}}}{;}}}
{AST_ROOT_SC2NF{{{potentialCallee}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{expectedRoot}{=}{{parseExpectedJs}{(}{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{expected}{)}}{)}}{)}}}{;}}{{{expectedRoot}{.}{detachFromParent}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{t}{.}{inGlobalScope}{()}}}{&&}{{NodeUtil}{.}{isHoistedFunctionDeclaration}{(}{value}{)}}}{)}{{{}{{{parent}{.}{addChildToFront}{(}{{value}{.}{detachFromParent}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{body}{.}{detachFromParent}{()}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{decl}{=}{{IR}{.}{declaration}{(}{{pattern}{.}{detachFromParent}{()}}{,}{{IR}{.}{name}{(}{tempVarName}{)}}{,}{declarationType}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{assignments}{=}{{new}{{{ArrayList}}{<}{{Node}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{Node}}{>}}{{nodes}{=}{{new}{{{ArrayList}}{<}{{Node}}{>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getJSTypeBeforeCast}{()}{{{}{{return}{{(}{{JSType}}{)}{{getProp}{(}{TYPE_BEFORE_CAST}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{externs}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{{TypeI}}{evaluateTypeExpressionInGlobalScope}{(}{{{JSTypeExpression}}{expr}}{)}{{{}{{throw}{{new}{{UnsupportedOperationException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isInstanceType}{()}{{{}{{{Preconditions}{.}{checkState}{(}{{this}{.}{isSingletonObj}{()}}{)}}{;}}{{return}{{{this}{.}{getNominalTypeIfSingletonObj}{()}}{.}{isClass}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{public}{boolean}{isUnknownType}{()}{{{}{{return}{{isUnknown}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{fn}{.}{isLooseSubtypeOf}{(}{other.fn}{,}{subSuperMap}{)}}{;}}}
{AST_ROOT_SC2NF{{{UpdateThisAndArgumentsReferences}}{{updater}{=}{{new}{{UpdateThisAndArgumentsReferences}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{passUnderTest}}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{)}}}{;}}{{{{this}{.}{compiler}}{=}{compiler}}{;}}{}}}}
{AST_ROOT_SC2NF{{{NameBasedDefinitionProvider}}{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testHookOperators4}{(}{)}{throws}{{Exception}}{{{}{{{checkMarkedCalls}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{{ImmutableList}{.}{<}{{String}}{>}{of}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{DefinitionUseSiteFinder}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{super}{(}{compiler}{)}{;}}{{{{this}{.}{nameUseSiteMultimap}}{=}{{LinkedHashMultimap}{.}{create}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NameBasedDefinitionProvider}}{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NameBasedDefinitionProvider}}{{defFinder}{=}{{new}{{NameBasedDefinitionProvider}}{(}{compiler}{)}}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{NewTypeInference.INEXISTENT_PROPERTY}{)}}{;}}}
{AST_ROOT_SC2NF{{{typeCheck}{(}{STRING_CONSTANT}{,}{NewTypeInference.PROPERTY_ACCESS_ON_NONOBJECT}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{testMode}{)}{{{}{{return}{{new}{{StringWriter}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{testMode}{)}{{{}{{return}{{new}{{StringWriter}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{process}{(}{null}{,}{scriptRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferences}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{J2clSourceFileChecker}{.}{shouldSkipExecution}{(}{compiler}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{J2clSourceFileChecker}{.}{shouldSkipExecution}{(}{compiler}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{J2clSourceFileChecker}{.}{shouldSkipExecution}{(}{compiler}{)}}{)}{{{}{return;}{}}}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{J2clSourceFileChecker}{.}{shouldSkipExecution}{(}{compiler}{)}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{Lists}{.}{newArrayList}{(}{NO_J2CL_SOURCE_FILE}{,}{NO_J2CL_SOURCE_FILE2}{)}}{)}}{;}}{{{{assertThat}{(}{{compiler}{.}{getAnnotation}{(}{J2clSourceFileChecker.HAS_J2CL_ANNOTATION_KEY}{)}}{)}}{.}{isEqualTo}{(}{Boolean.FALSE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{testSame}{(}{{Lists}{.}{newArrayList}{(}{NO_J2CL_SOURCE_FILE}{,}{J2CL_SOURCE_FILE}{,}{NO_J2CL_SOURCE_FILE2}{)}}{)}}{;}}{{{{assertThat}{(}{{compiler}{.}{getAnnotation}{(}{J2clSourceFileChecker.HAS_J2CL_ANNOTATION_KEY}{)}}{)}}{.}{isEqualTo}{(}{Boolean.TRUE}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{J2clSourceFileChecker}{.}{shouldSkipExecution}{(}{compiler}{)}}{)}{{{}{return;}{}}}}{{{{new}{{StaticFieldGetterSetterInliner}}{(}{root}{)}}{.}{run}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{recvType}{=}{{recvType}{.}{withProperty}{(}{pname}{,}{{JSType.TOP_OBJECT}{.}{withLoose}{()}}{)}}}{;}}{{{inEnv}{=}{{updateLvalueTypeInEnv}{(}{inEnv}{,}{obj}{,}{recvLvalue.ptr}{,}{recvType}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{js}{=}{STRING_CONSTANT}}{;}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{code}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{RefactoringDriver}}{{driver}{=}{{{{{new}{{RefactoringDriver.Builder}}{(}{scanner}{)}}{.}{addExternsFromCode}{(}{externs}{)}}{.}{addInputsFromCode}{(}{originalCode}{)}}{.}{build}{()}}}{;}}}
{AST_ROOT_SC2NF{{ImmutableList}{.}{of}{(}{{SourceFile}{.}{fromCode}{(}{STRING_CONSTANT}{,}{externs}{)}}{)}}}
{AST_ROOT_SC2NF{{{n}{.}{getTypeI}{()}}{.}{isSomeUnknownType}{()}}}
{AST_ROOT_SC2NF{{{}{{{tracker}{=}{{new}{{PerformanceTracker}}{(}{jsRoot}{,}{options.tracer}{,}{{this}{.}{outStream}}{)}}}{;}}{{{addChangeHandler}{(}{{tracker}{.}{getCodeChangeHandler}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{externAndJsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapCheck}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferencesForTranspileOnly}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{ResourceBundle}}{getBundle}{(}{{{String}}{baseName}}{,}{{{Locale}}{locale}}{)}{{{}{{return}{{new}{{ResourceBundle}}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{!}{{this}{.}{isFinalized}}}{)}}{;}}{{{super}{.}{addUndeclaredProperty}{(}{pname}{,}{defSite}{,}{JSType.UNKNOWN}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{type}{==}{null}}{&&}{isConstant}}{)}{{{}{{{type}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{this}{.}{randomProps}}{.}{with}{(}{pname}{,}{{Property}{.}{make}{(}{{{type}{==}{null}}{?}{JSType.UNKNOWN}{:}{type}}{,}{type}{)}}{)}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{t}{.}{isUnknown}{()}}}{&&}{{!}{{t}{.}{equals}{(}{{JSType}{.}{fromTypeVar}{(}{typeVar}{)}}{)}}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{typeMap}{.}{isEmpty}{()}}{)}{{{}{{return}{{Property}{.}{make}{(}{JSType.UNKNOWN}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{NominalType}}{{thisWithoutTypemap}{=}{{{this}{.}{rawType}}{.}{getAsNominalType}{()}}}{;}}{{return}{{thisWithoutTypemap}{.}{instantiateGenerics}{(}{JSType.MAP_TO_UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{JSType.TOP}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{JSType.BOTTOM}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{{isGeneric}{()}}}{||}{{JSType.MAP_TO_UNKNOWN}{.}{equals}{(}{concreteTypes}{)}}}{)}{{{}{{return}{{substituteNominalGenerics}{(}{concreteTypes}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FunctionTypeBuilder}}{{builder}{=}{{new}{{FunctionTypeBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{f}{.}{isGeneric}{()}}}{)}{{{}{{return}{f}{;}}{}}}}{{return}{{f}{.}{instantiateGenerics}{(}{JSType.MAP_TO_UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{!}{FunctionType.allowMethodsAsFunctions}}{&&}{{{this}{.}{receiverType}}{!=}{null}}}{&&}{{other.receiverType}{==}{null}}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FunctionTypeBuilder}}{{builder}{=}{{new}{{FunctionTypeBuilder}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{optionalFormals}{.}{add}{(}{{JSType}{.}{join}{(}{t}{,}{JSType.UNDEFINED}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{==}{other}}{||}{{other.ns}{!=}{null}}}{||}{{!}{{{other}{.}{getNominalType}{()}}{.}{equals}{(}{builtinObject}{)}}}}}
{AST_ROOT_SC2NF{{if}{(}{{other}{==}{TOP_OBJECT}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{other}{==}{TOP_OBJECT}}{)}{{{}{{return}{true}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{newPropType}{.}{isBottom}{()}}{)}{{{}{{return}{BOTTOM_MAP}{;}}{}}}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{JSType.BOTTOM}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{callee}{.}{matchesQualifiedName}{(}{STRING_CONSTANT}{)}}{)}{{{}{{return}{JSType.STRING}{;}}{}}}}}
{AST_ROOT_SC2NF{{{recvType}{=}{{recvType}{.}{removeType}{(}{JSType.NULL}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{propInferredFunType}{!=}{null}}{)}{{{}{{{rawType}{.}{addUndeclaredClassProperty}{(}{pname}{,}{propInferredFunType}{,}{getProp}{)}}{;}}{}}}{else}{{{}{{{rawType}{.}{addUndeclaredClassProperty}{(}{pname}{,}{JSType.UNKNOWN}{,}{getProp}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{t}{==}{null}}{)}{{{}{{{t}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{FunctionType}}{{getInstanceFunType}{=}{{{{(}{{new}{{FunctionTypeBuilder}}{()}}{)}}{.}{addRetType}{(}{instanceType}{)}}{.}{buildFunction}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{t}{==}{null}}{)}{{{}{{{t}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{currentScope}}{.}{addLocal}{(}{varName}{,}{JSType.UNKNOWN}{,}{false}{,}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{resultType}{=}{JSType.TOP}}{;}}}
{AST_ROOT_SC2NF{{for}{(}{{{String}}{typedefName}}{:}{{localTypedefs}{.}{keySet}{()}}{)}{{{}{{{locals}{.}{put}{(}{typedefName}{,}{JSType.UNDEFINED}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{isTypeVar}{=}{true}}{;}}{{{type}{=}{{JSType}{.}{fromTypeVar}{(}{{declaredType}{.}{getTypeVariableDefinedLocally}{(}{name}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{addNamespace}{(}{qnameNode}{,}{{new}{{NamespaceLit}}{(}{{getCommonTypes}{()}}{,}{{qnameNode}{.}{getQualifiedName}{()}}{,}{qnameNode}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{root}}{.}{setTypeI}{(}{{{getCommonTypes}{()}}{.}{fromFunctionType}{(}{{declaredType}{.}{toFunctionType}{()}}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{anyNumOrStr}{==}{null}}{)}{{{}{{return}{{t}{.}{isSubtypeOf}{(}{JSType.NUM_OR_STR}{)}}{;}}{}}}}{{return}{{t}{.}{isSubtypeOf}{(}{anyNumOrStr}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numberOrNumber}{==}{null}}{)}{{{}{{return}{{t}{.}{isSubtypeOf}{(}{JSType.STRING}{)}}{;}}{}}}}{{return}{{t}{.}{isSubtypeOf}{(}{stringOrString}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{numberOrNumber}{==}{null}}{)}{{{}{{return}{{t}{.}{isSubtypeOf}{(}{JSType.NUMBER}{)}}{;}}{}}}}{{return}{{t}{.}{isSubtypeOf}{(}{numberOrNumber}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{stringOrString}{=}{{JSType}{.}{join}{(}{JSType.STRING}{,}{stringInstance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{numberOrNumber}{=}{{JSType}{.}{join}{(}{JSType.NUMBER}{,}{numberInstance}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ObjectType}}{getStringInstanceObjType}{()}{{{}{{return}{{{stringInstanceObjtype}{!=}{null}}{?}{stringInstanceObjtype}{:}{ObjectType.TOP_OBJECT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{getBooleanInstanceObjType}{()}{{{}{{return}{{{booleanInstanceObjtype}{!=}{null}}{?}{booleanInstanceObjtype}{:}{ObjectType.TOP_OBJECT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ObjectType}}{getNumberInstanceObjType}{()}{{{}{{return}{{{numberInstanceObjtype}{!=}{null}}{?}{numberInstanceObjtype}{:}{ObjectType.TOP_OBJECT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getStringInstance}{()}{{{}{{return}{{{stringInstance}{!=}{null}}{?}{stringInstance}{:}{JSType.STRING}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getBooleanInstance}{()}{{{}{{return}{{{booleanInstance}{!=}{null}}{?}{booleanInstance}{:}{JSType.BOOLEAN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getNumberInstance}{()}{{{}{{return}{{{numberInstance}{!=}{null}}{?}{numberInstance}{:}{JSType.NUMBER}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{JSType}}{getRegexpType}{()}{{{}{{return}{{{regexpInstance}{!=}{null}}{?}{regexpInstance}{:}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{arguments}}{==}{null}}{)}{{{}{{return}{JSType.UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{arrayType}{==}{null}}{)}{{{}{{return}{JSType.UNKNOWN}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{commonTypes}{.}{fromFunctionType}{(}{ctorType}{)}}{;}}}
{AST_ROOT_SC2NF{{{ObjectType}}{{arrayType}{=}{{{commonTypes}{.}{getArrayInstance}{()}}{.}{getObjTypeIfSingletonObj}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{isTrueOrTruthy}{()}}{)}{{{}{{return}{FALSY}{;}}{}}}{else}{{if}{(}{{isFalseOrFalsy}{()}}{)}{{{}{{return}{TRUTHY}{;}}{}}}}}}
{AST_ROOT_SC2NF{{return}{{makeType}{(}{newtype}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{maybeScalar}{=}{{ObjectType}{.}{mayTurnLooseObjectToScalar}{(}{t}{,}{JSType.commonTypes}{)}}}{;}}{{if}{(}{{t}{!=}{maybeScalar}}{)}{{{}{{return}{maybeScalar}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{BOTTOM}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{result}{=}{TOP}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{noCycles}{=}{{constructorType}{.}{addInterfaces}{(}{{{extendedInterfaces}{.}{isEmpty}{()}}{?}{{ImmutableSet}{.}{of}{(}{{{registry}{.}{getCommonTypes}{()}}{.}{getObjectType}{()}}{)}}{:}{extendedInterfaces}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{NominalType}}{{builtinObject}{=}{{{registry}{.}{getCommonTypes}{()}}{.}{getObjectType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{builder}{.}{addRetType}{(}{JSType.UNDEFINED}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{builder}{.}{addRestFormals}{(}{{{t}{!=}{null}}{?}{t}{:}{JSType.UNKNOWN}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{{t}{.}{isSingletonObjWithNull}{()}}{?}{{t}{.}{removeType}{(}{JSType.NULL}{)}}{:}{t}}{;}}}
{AST_ROOT_SC2NF{{{tdType}{=}{JSType.UNKNOWN}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{return}{{getTypeFromCommentHelper}{(}{n}{,}{registry}{,}{typeParameters}{)}}{;}}{}}}{{catch}{(}{{{UnknownTypeException}}{e}}{)}{{{}{{return}{JSType.UNKNOWN}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{lvalue.type}{=}{{{lvalue.type}{.}{mayHaveProp}{(}{pname}{)}}{?}{{lvalue.type}{.}{getProp}{(}{pname}{)}}{:}{JSType.UNKNOWN}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{doSlicing}{)}{{{}{{{pair.env}{=}{{envPutType}{(}{pair.env}{,}{name}{,}{{{declType}{!=}{null}}{?}{declType}{:}{JSType.UNKNOWN}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{!}{{lvalueType}{.}{isSubtypeOf}{(}{JSType.TOP_OBJECT}{)}}}}
{AST_ROOT_SC2NF{{if}{(}{{requiredType}{.}{mayHaveProp}{(}{pname}{)}}{)}{{{}{{{reqPtype}{=}{{requiredType}{.}{getProp}{(}{pname}{)}}}{;}}{}}}{else}{{{}{{{reqPtype}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{EnvTypePair}}{(}{env}{,}{JSType.UNKNOWN}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{formalType}{.}{isBottom}{()}}{)}{{{}{{{formalType}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{pair.type}{=}{JSType.BOOLEAN}}{;}}}
{AST_ROOT_SC2NF{{{JSType}}{{operandType}{=}{{{requiredType}{.}{isNumber}{()}}{?}{JSType.NUMBER}{:}{JSType.UNKNOWN}}}{;}}}
{AST_ROOT_SC2NF{{private}{{EnvTypePair}}{analyzeExprBwd}{(}{{{Node}}{expr}}{,}{{{TypeEnv}}{outEnv}}{)}{{{}{{return}{{analyzeExprBwd}{(}{expr}{,}{outEnv}{,}{JSType.UNKNOWN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{outerType}{==}{null}}{)}{{{}{{{outerType}{=}{JSType.UNKNOWN}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{JSType}}{{tmp}{=}{{t}{.}{getIndexedType}{()}}}{;}}{{return}{{{tmp}{==}{null}}{?}{JSType.UNKNOWN}{:}{tmp}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{reqPtype}{=}{{specPtype}{=}{JSType.UNKNOWN}}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{currentScope}{.}{hasThis}{()}}}{)}{{{}{{{mayWarnAboutGlobalThis}{(}{expr}{,}{currentScope}{)}}{;}}{{return}{{new}{{EnvTypePair}}{(}{inEnv}{,}{JSType.UNKNOWN}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{new}{{EnvTypePair}}{(}{env}{,}{JSType.UNKNOWN}{)}}{;}}}
{AST_ROOT_SC2NF{{{funType}{.}{isOptionalArg}{(}{i}{)}}{&&}{{pair.type}{.}{equals}{(}{JSType.UNDEFINED}{)}}}}
{AST_ROOT_SC2NF{{{rhsPair.type}{=}{JSType.BOOLEAN}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{analyzeExprFwd}{(}{expr}{,}{inEnv}{,}{JSType.UNKNOWN}{,}{JSType.UNKNOWN}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{rootNs}{!=}{null}}{&&}{{rootNs}{.}{isSubtypeOf}{(}{JSType.TOP_OBJECT}{)}}}{)}{{{}{{{namespaceType}{=}{{rootNs}{.}{getProp}{(}{{qname}{.}{getAllButLeftmost}{()}}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{ImmutableList}{.}{copyOf}{(}{out}{)}}{;}}}
{AST_ROOT_SC2NF{{{EnvTypePair}}{{lhsPair}{=}{{analyzeExprBwd}{(}{lhs}{,}{rhsPair.env}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{process}{(}{null}{,}{scriptRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferences}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{{this}{.}{rawType}}{.}{name}}{.}{equals}{(}{STRING_CONSTANT}{)}}{&&}{{{NUMERIC_PATTERN}{.}{matcher}{(}{pname}{)}}{.}{matches}{()}}}}
{AST_ROOT_SC2NF{{{test}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{test}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{ProcessDefinesTest}{()}{{{}{{super}{(}{STRING_CONSTANT}{)}{;}}{{{allowSourcelessWarnings}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{assertThat}{(}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{.}{isEqualTo}{(}{output}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{JSDocInfoPrinter}{.}{print}{(}{info}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{externAndJsRoot}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapCheck}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{processCheck}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferencesForTranspileOnly}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{TranspilationPasses}{.}{hotSwapTranspile}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{stop}{()}{{{}{{return}{{{System}{.}{currentTimeMillis}{()}}{+}{start}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{replacement}{.}{setTypeI}{(}{nativeStringType}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{root}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{phaseopt}{.}{process}{(}{externsNode}{,}{n}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{FindStaticMembers}}{{findStaticMembers}{=}{{new}{{FindStaticMembers}}{()}}}{;}}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{findStaticMembers}{)}}{;}}{{{processInherits}{(}{findStaticMembers.inheritsCalls}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{passes}{.}{add}{(}{checkVariableReferences}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{process}{(}{null}{,}{scriptRoot}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{NodeTraversal}{.}{traverseEs6}{(}{compiler}{,}{scriptRoot}{,}{this}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clConstantHoisterPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clConstantHoisterPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Node}}{{moduleNode}{=}{{new}{{Node}}{(}{Token.MODULE_BODY}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{lhs}{=}{{{node}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{clinitFunction}{=}{{{multiExpression}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Node}}{{methodName}{=}{{{member}{.}{getFirstChild}{()}}{.}{getFirstChild}{()}}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{disable_testClassMethodUnused2}{()}{{{}{{{this}{.}{disableTypeCheck}{()}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testClassMethodUnused1}{()}{{{}{{{this}{.}{disableTypeCheck}{()}}{;}}{{{unused}{(}{STRING_CONSTANT}{)}}{;}}{{{used}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{passes}{.}{add}{(}{flowSensitiveInlineVariables}{)}}{;}}{{if}{(}{{options.removeUnusedVars}{||}{options.removeUnusedLocalVars}}{)}{{{}{{{passes}{.}{add}{(}{{getRemoveUnusedVars}{(}{STRING_CONSTANT}{,}{false}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{,}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setRemoveDeadCode}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setRemoveDeadCode}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{create}{(}{{{AbstractCompiler}}{compiler}}{)}{{{}{{return}{{new}{{UnreachableCodeElimination}}{(}{compiler}{,}{false}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{options}{.}{setFoldConstants}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setFoldConstants}{(}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.ANALYZER_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{{options}{.}{setWarningLevel}{(}{DiagnosticGroups.LINT_CHECKS}{,}{CheckLevel.WARNING}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation5}{(}{)}{throws}{{Exception}}{{{}{{{testError}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{testInvalidAnnotation4}{(}{)}{throws}{{Exception}}{{{}{{{testError}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{,}{INVALID_NO_SIDE_EFFECT_ANNOTATION}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toModuleName}{()}{{{}{{return}{{ModuleNames}{.}{toModuleName}{(}{uri}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toJSIdentifier}{()}{{{}{{return}{{ModuleNames}{.}{toJSIdentifier}{(}{uri}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{requires}{.}{add}{(}{{{fileUri}{.}{resolveEs6Module}{(}{arg}{)}}{.}{toModuleName}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{globalModuleName}{=}{{{{{t}{.}{getInput}{()}}{.}{getUri}{()}}{.}{resolveEs6Module}{(}{moduleName}{)}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{moduleName}{=}{{{{t}{.}{getInput}{()}}{.}{getUri}{()}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{moduleName}{=}{{{{{t}{.}{getInput}{()}}{.}{getUri}{()}}{.}{resolveEs6Module}{(}{{moduleIdentifier}{.}{getString}{()}}{)}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{moduleName}{=}{{{{{t}{.}{getInput}{()}}{.}{getUri}{()}}{.}{resolveEs6Module}{(}{importName}{)}}{.}{toModuleName}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ModuleLoader.ModuleUri}}{actual}}}
{AST_ROOT_SC2NF{{{String}}{{moduleName}{=}{{{{t}{.}{getInput}{()}}{.}{getUri}{()}}{.}{toModuleName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{TemplateTypeMapReplacer}}{{replacer}{=}{{new}{{TemplateTypeMapReplacer}}{(}{registry}{,}{this}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{errorReporter}{.}{warning}{(}{{STRING_CONSTANT}{+}{{SimpleErrorReporter}{.}{getMessage0}{(}{messageId}{)}}}{,}{{getSourceName}{()}}{,}{lineno}{,}{charno}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{errorReporter}{.}{warning}{(}{{STRING_CONSTANT}{+}{{SimpleErrorReporter}{.}{getMessage1}{(}{messageId}{,}{messageArg}{)}}}{,}{{getSourceName}{()}}{,}{lineno}{,}{charno}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertWarning}{(}{STRING_CONSTANT}{,}{RhinoErrorReporter.JSDOC_MISSING_BRACES_WARNING}{,}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{SourceMapObject}}{{sourceMapObject}{=}{{new}{{SourceMapObject}}{(}{contents}{)}}}{;}}{{{parse}{(}{sourceMapObject}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{SourceMapObject}}{{sourceMapObject}{=}{{new}{{SourceMapObject}}{(}{contents}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{MemberDefinition}}{prop}}{:}{{PolymerPassStaticUtils}{.}{extractProperties}{(}{objLit}{)}}{)}{{{}{{{prop.name}{.}{removeProp}{(}{Node.JSDOC_INFO_PROP}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{PolymerPassStaticUtils}{.}{extractProperties}{(}{objLit}{)}}}
{AST_ROOT_SC2NF{{{overwriteMembersIfPresent}{(}{allProperties}{,}{{PolymerPassStaticUtils}{.}{extractProperties}{(}{descriptor}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{GwtProperties}}{{p}{=}{{GwtProperties}{.}{load}{(}{STRING_CONSTANT}{)}}}{;}}{{{assertTrue}{(}{{{p}{.}{propertyNames}{()}}{.}{isEmpty}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{MODULE_JOINER}{.}{join}{(}{{Arrays}{.}{copyOfRange}{(}{buffer}{,}{NUMBER_CONSTANT}{,}{position}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{options.coalesceVariableNames}{)}{{{}{{{passes}{.}{add}{(}{coalesceVariableNames}{)}}{;}}{{if}{(}{options.foldConstants}{)}{{{}{{{passes}{.}{add}{(}{peepholeOptimizations}{)}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Preconditions}{.}{checkState}{(}{{hasInstanceType}{()}}{)}}{;}}{{return}{{typeOfThis}{.}{toObjectType}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{sideEffectInfo}{.}{taintedLocals}{()}}{.}{contains}{(}{v}{)}}{)}{{{}{{{sideEffectInfo}{.}{setTaintsUnknown}{()}}{;}}{{{sideEffectInfo}{.}{resetLocalVars}{()}}{;}}{break;}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{defs}{==}{null}}{)}{{{}{{{functionInfo}{.}{setTaintsUnknown}{()}}{;}}{break;}{}}}}}
{AST_ROOT_SC2NF{{{test}{(}{options}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{currentJsSource}{=}{{toSource}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{ParserRunner}{.}{createConfig}{(}{mode}{,}{Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}{,}{Config.RunMode.KEEP_GOING}{,}{null}{)}}}{;}}}
{AST_ROOT_SC2NF{{return}{{new}{{ParseResult}}{(}{root}{,}{comments}{,}{features}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{createConfig}{(}{languageMode}{,}{JsDocParsing.TYPES_ONLY}{,}{RunMode.STOP_AFTER_ERROR}{,}{extraAnnotationNames}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{config}{,}{errorReporter}{,}{source}{,}{offset}{,}{false}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{annotationWhitelist}{,}{JsDocParsing.TYPES_ONLY}{,}{RunMode.STOP_AFTER_ERROR}{,}{suppressionNames}{,}{languageMode}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{new}{{Config}}{(}{extraAnnotations}{,}{parseDocumentation}{,}{RunMode.STOP_AFTER_ERROR}{,}{extraSuppressions}{,}{LanguageMode.ECMASCRIPT3}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Config}}{{config}{=}{{new}{{Config}}{(}{extraAnnotations}{,}{JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}{,}{RunMode.KEEP_GOING}{,}{extraSuppressions}{,}{LanguageMode.ECMASCRIPT3}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{{n}{.}{getType}{()}}{==}{Token.DIV}}{&&}{{{n}{.}{getFirstChild}{()}}{.}{isNumber}{()}}}{&&}{{{{n}{.}{getFirstChild}{()}}{.}{getDouble}{()}}{==}{NUMBER_CONSTANT}}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{value}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{ancestor}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{node}{.}{getType}{()}}{)}{{}{{case}{GETTER_DEF}{:}}{{case}{SETTER_DEF}{:}}{{return}{true}{;}}{default:}{break;}{}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{key}{.}{getType}{()}}{)}{{}{{case}{STRING_KEY}{:}}{{case}{GETTER_DEF}{:}}{{case}{SETTER_DEF}{:}}{{case}{MEMBER_FUNCTION_DEF}{:}}{{return}{{key}{.}{getString}{()}}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{node}{.}{getType}{()}}{)}{{}{{case}{STRING_KEY}{:}}{{case}{GETTER_DEF}{:}}{{case}{SETTER_DEF}{:}}{{case}{MEMBER_FUNCTION_DEF}{:}}{{return}{true}{;}}{default:}{break;}{}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{{{parent}{!=}{null}}{&&}{{{parent}{.}{getType}{()}}{==}{Token.ASSIGN}}}{&&}{{{parent}{.}{getFirstChild}{()}}{==}{n}}}{;}}}
{AST_ROOT_SC2NF{{current}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{parent}{.}{getType}{()}}{)}{{}{{case}{DECLARE}{:}}{{case}{EXPORT}{:}}{{return}{true}{;}}{default:}{{return}{{isStatementParent}{(}{parent}{)}}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{parent}{.}{getType}{()}}{)}{{}{{case}{SCRIPT}{:}}{{case}{MODULE_BODY}{:}}{{case}{BLOCK}{:}}{{case}{LABEL}{:}}{{case}{NAMESPACE_ELEMENTS}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{DO}{:}}{{case}{WHILE}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{{n}{.}{getParent}{()}}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{{@}{Override}}{public}{boolean}{apply}{(}{{{Node}}{n}}{)}{{{}{{return}{{{n}{.}{getType}{()}}{==}{type}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{VOID}{:}}{{return}{true}{;}}{{case}{NAME}{:}}{{return}{{{n}{.}{getString}{()}}{.}{equals}{(}{STRING_CONSTANT}{)}}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkArgument}{(}{{callNode}{.}{isNew}{()}}{,}{STRING_CONSTANT}{,}{{callNode}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{val}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{GT}{:}}{{case}{GE}{:}}{{case}{LT}{:}}{{case}{LE}{:}}{{return}{true}{;}}{default:}{break;}{}}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{EQ}{:}}{{case}{NE}{:}}{{case}{SHEQ}{:}}{{case}{SHNE}{:}}{{case}{MUL}{:}}{{return}{true}{;}}{default:}{break;}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{valueNode}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{Token}}{{pType}{=}{{{root}{.}{getParent}{()}}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Token}}{{parentType}{=}{{parent}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{return}{{DECLARATION_PARENTS}{.}{contains}{(}{{parent}{.}{getType}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{propdef}{.}{setType}{(}{Token.STRING}{)}}{;}}}
{AST_ROOT_SC2NF{{{op}{.}{setType}{(}{assignOp}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{canFoldStandardConstructors}{(}{n}{)}}{)}{{{}{{{n}{.}{setType}{(}{Token.CALL}{)}}{;}}{{{n}{.}{putBooleanProp}{(}{Node.FREE_CALL}{,}{true}{)}}{;}}{{{reportCodeChange}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{n}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{include}{==}{{nodeTypes}{.}{contains}{(}{{n}{.}{getType}{()}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{Token}}{{type}{=}{{valueNode}{.}{getType}{()}}}{;}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{parent}{.}{setType}{(}{Token.ASSIGN}{)}}{;}}}
{AST_ROOT_SC2NF{{{newOperator}{.}{setType}{(}{complementOperator}{)}}{;}}}
{AST_ROOT_SC2NF{{{shorthand}{.}{setType}{(}{{NodeUtil}{.}{getOpFromAssignmentOp}{(}{shorthand}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{setType}{(}{Token.FOR}{)}}{;}}}
{AST_ROOT_SC2NF{{node}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{switch}{(}{{n}{.}{getType}{()}}{)}{{}{{case}{FOR}{:}}{{case}{FOR_OF}{:}}{{case}{DO}{:}}{{case}{WHILE}{:}}{{return}{true}{;}}{default:}{{return}{false}{;}}{}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{for}{(}{{{Token}}{type}}{:}{types}{)}{{{}{{if}{(}{{{c}{.}{getType}{()}}{==}{type}}{)}{{{}{{return}{c}{;}}{}}}}{}}}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{n}{.}{isConst}{()}}{)}{{{}{{{handleDeclarationList}{(}{n}{,}{{n}{.}{getParent}{()}}{)}}{;}}{}}}}{{{n}{.}{setType}{(}{Token.VAR}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{declarationList}{.}{setType}{(}{Token.VAR}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{currentProp}{.}{setType}{(}{Token.STRING}{)}}{;}}{{{newProp}{=}{{{IR}{.}{getprop}{(}{{objectToExtend}{.}{cloneTree}{()}}{,}{currentProp}{)}}{.}{srcref}{(}{currentProp}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{n}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{member}{.}{setType}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{c}{.}{setType}{(}{Token.VAR}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{Node}}{{dollarChildProp}{=}{{n}{.}{getGrandparent}{()}}}{;}}{{{dollarChildProp}{.}{setType}{(}{Token.GETELEM}{)}}{;}}{{{compiler}{.}{reportCodeChange}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{switch}{(}{{node}{.}{getType}{()}}{)}{{}{{case}{NAME}{:}}{{case}{STRING}{:}}{{case}{STRING_KEY}{:}}{{return}{{node}{.}{getString}{()}}{;}}{default:}{{return}{{compiler}{.}{toSource}{(}{node}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Token}}{{inverseOperator}{=}{{NodeUtil}{.}{getInverseOperator}{(}{{subtree}{.}{getToken}{()}}{)}}}{;}}{{{subtree}{.}{setType}{(}{inverseOperator}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{jsdoc}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{return}{{{jsdocNode}{!=}{null}}{&&}{{{jsdocNode}{.}{getType}{()}}{==}{Token.ELLIPSIS}}}{;}}}
{AST_ROOT_SC2NF{{{Preconditions}{.}{checkState}{(}{{{thisRoot}{.}{getType}{()}}{==}{Token.BANG}}{)}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{isPropDeclared}{=}{{{propNode}{.}{getType}{()}}{==}{Token.COLON}}}{;}}}
{AST_ROOT_SC2NF{{{importedName}{.}{setType}{(}{Token.NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{key}{.}{setType}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{key}{.}{setType}{(}{Token.SETTER_DEF}{)}}{;}}}
{AST_ROOT_SC2NF{{{key}{.}{setType}{(}{Token.GETTER_DEF}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{irNode}{.}{setType}{(}{Token.BLOCK}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{name}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{parent}{.}{getType}{()}}}
{AST_ROOT_SC2NF{{{n}{.}{setType}{(}{TEMPLATE_LOCAL_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{n}{.}{setType}{(}{TEMPLATE_TYPE_PARAM}{)}}{;}}}
{AST_ROOT_SC2NF{{{keyNode}{.}{setType}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{keyNode}{.}{setType}{(}{Token.STRING_KEY}{)}}{;}}}
{AST_ROOT_SC2NF{{{(}{{{n}{==}{jsRoot}}{||}{{n}{.}{isFunction}{()}}}{)}}{&&}{{comp}{.}{hasScopeChanged}{(}{n}{)}}}}
{AST_ROOT_SC2NF{{private}{boolean}{taintsThis}{()}{{{}{{return}{{getMask}{(}{TAINTS_THIS_MASK}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{taintsGlobalState}{()}{{{}{{return}{{getMask}{(}{TAINTS_GLOBAL_STATE_MASK}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{boolean}{pureFunction}{()}{{{}{{return}{{getMask}{(}{PURE_FUNCTION_MASK}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{node}{.}{isFunction}{()}}{)}{{{}{{{visitFunction}{(}{node}{,}{parent}{)}}{;}}{}}}}{{return}{true}{;}}{}}}}
{AST_ROOT_SC2NF{{{{Collection}}{<}{{Definition}}{>}}{{defs}{=}{{getCallableDefinitions}{(}{definitionProvider}{,}{{callSite}{.}{getFirstChild}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{functionSideEffectMap}}{=}{{new}{{{HashMap}}{<>}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{MinimizeExitPoints}}{(}{compiler}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clClinitPrunerPass}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{final}{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clConstantHoisterPass}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerPass}}{getProcessor}{(}{{{Compiler}}{compiler}}{)}{{{}{{return}{{new}{{J2clEqualitySameRewriterPass}}{(}{compiler}{,}{null}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{testSame}{(}{{LINE_JOINER}{.}{join}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{STRING_CONSTANT}{)}}{,}{OPTIONAL_TYPE_NOT_USING_OPTIONAL_NAME}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{compiler}}{=}{compiler}}{;}}}
{AST_ROOT_SC2NF{{boolean}{{useTypesForOptimization}{=}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForOptimization}}}{;}}}
{AST_ROOT_SC2NF{{boolean}{shouldAmbiguateProperties}{()}{{{}{{return}{{{this}{.}{useTypesForOptimization}}{||}{{this}{.}{ambiguateProperties}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{boolean}{shouldDisambiguateProperties}{()}{{{}{{return}{{{this}{.}{useTypesForOptimization}}{||}{{this}{.}{disambiguateProperties}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Override}}{protected}{{CompilerOptions}}{getOptions}{(}{{{CompilerOptions}}{options}}{)}{{{}{{{options.useTypesForOptimization}{=}{true}}{;}}{{return}{{super}{.}{getOptions}{(}{options}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{CompilerPass}}{{peepholePass}{=}{{new}{{PeepholeOptimizationsPass}}{(}{compiler}{,}{{new}{{PeepholeFoldConstants}}{(}{late}{,}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForOptimization}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{compiler}{.}{getOptions}{()}}{.}{useTypesForOptimization}}}
{AST_ROOT_SC2NF{{final}{boolean}{{useTypesForOptimization}{=}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForOptimization}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{!}{{{compiler}{.}{getOptions}{()}}{.}{useTypesForOptimization}}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CompilerOptions}}{{options}{=}{{super}{.}{getOptions}{()}}}{;}}{{{options.useTypesForOptimization}{=}{useTypesForOptimization}}{;}}{{{options}{.}{setJ2clPass}{(}{CompilerOptions.J2clPassMode.ON}{)}}{;}}{{return}{options}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockitoOperations}{.}{reportControlForStubbing}{(}{null}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoOperations}{.}{reportControlForStubbing}{(}{this}{)}}{;}}}
{AST_ROOT_SC2NF{{{control}{.}{replay}{()}}{;}}}
{AST_ROOT_SC2NF{{{control}{.}{replay}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{control}{.}{verify}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{simpleMethodWithArgument}{(}{STRING_CONSTANT}{)}}{;}}{{{mock}{.}{simpleMethodWithArgument}{(}{STRING_CONSTANT}{)}}{;}}{{{control}{.}{verify}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{addInvocation}{(}{{{MockitoInvocation}}{invocation}}{)}{{{}{{{{this}{.}{registeredInvocations}}{.}{add}{(}{invocation}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{behavior}{.}{addInvocation}{(}{invocation}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{proxyFactory}{.}{createProxy}{(}{toMock}{,}{{new}{{ObjectMethodsFilter}}{(}{toMock}{,}{{new}{{MockInvocationHandler}}{(}{this}{)}}{,}{name}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{proxyFactory}{.}{createProxy}{(}{toMock}{,}{{new}{{ObjectMethodsFilter}}{(}{toMock}{,}{{new}{{MockInvocationHandler}}{(}{this}{)}}{,}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{Field}}{{methodField}{=}{{retrieveField}{(}{{{ObjectMethodsFilter}}{.}{class}}{,}{{{correctMethod}{.}{getName}{()}}{+}{STRING_CONSTANT}}{)}}}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{AssertionErrorWrapper}}{(}{{new}{{AssertionError}}{(}{{STRING_CONSTANT}{+}{{actual}{.}{toString}{(}{MockControl.EQUALS_MATCHER}{)}}{+}{STRING_CONSTANT}{+}{{errorMessage}{.}{toString}{()}}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{returnedType}{.}{isPrimitive}{()}}{)}{{{}{{{returnedType}{=}{{ToTypeMappings.primitiveToWrapperType}{.}{get}{(}{returnedType}{)}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{Matchers}{.}{find}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{Matchers}{.}{not}{(}{{notNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{Matchers}{.}{not}{(}{{isNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{Matchers}{.}{or}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{eq}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{Matchers}{.}{cmpEq}{(}{{new}{{BigDecimal}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{{new}{{ExpectedInvocation}}{(}{invocation}{,}{null}{)}}{.}{hashCode}{()}}{,}{{equalTo}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{first}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{first}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportNot}{()}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{ArrayEquals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Find}}{(}{regex}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{StartsWith}}{(}{prefix}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{EndsWith}}{(}{suffix}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Same}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportOr}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportAnd}{(}{NUMBER_CONSTANT}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Contains}}{(}{substring}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{{MethodSelector}}{<}{{T}}{>}}{toThrow}{(}{{{Throwable}}{throwable}}{)}{{{}{{{MockitoOperations}{.}{reportThrowableToBeSetOnVoidMethod}{(}{throwable}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{MockitoOperations}{.}{reportVerifyingMode}{(}{{VerifyingMode}{.}{times}{(}{exactNumberOfInvocations}{)}}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{MockitoOperations}{.}{reportVerifyingMode}{(}{{VerifyingMode}{.}{anyTimes}{()}}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{EqualsWithDelta}}{(}{value}{,}{delta}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{EqualsWithDelta}}{(}{value}{,}{delta}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Matches}}{(}{regex}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{NotNull.NOT_NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{Null.NULL}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{NUMBER_CONSTANT}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{Equals}}{(}{value}{)}}{)}}{;}}{{return}{false}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{{new}{{InstanceOf}}{(}{clazz}{)}}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{LastArguments}{.}{reportMatcher}{(}{Any.ANY}{)}}{;}}{{return}{null}{;}}{}}}}
{AST_ROOT_SC2NF{{{MockitoExpectation}}{{controlToStub}{=}{{{MockitoState}{.}{instance}{()}}{.}{controlToBeStubbed}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{synchronized}{void}{verifyingStarted}{(}{{{VerifyingMode}}{verify}}{)}{{{}{{{verifyingModeLocal}{.}{set}{(}{verify}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{state}{.}{mockVerificationScenario}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setMock}{(}{{{Object}}{mock}}{)}{{{}{{{{this}{.}{mock}}{=}{mock}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoInvocation}}{{lastInvocation}{=}{{behavior}{.}{lastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertSame}{(}{mode}{,}{{mockitoState}{.}{verifyingCompleted}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{{MockitoInvocation}}{{invocation}{=}{{registeredInvocation}{.}{getInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{{MockitoState}{.}{instance}{()}}{.}{removeControlToBeStubbed}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{MockitoExpectation}}{{controlToStub}{=}{{{MockitoState}{.}{instance}{()}}{.}{removeControlToBeStubbed}{()}}}{;}}}
{AST_ROOT_SC2NF{{public}{{{MethodSelector}}{<}{{T}}{>}}{toThrow}{(}{{{Throwable}}{throwable}}{)}{{{}{{{mockitoState}{.}{reportThrowableToBeSetOnVoidMethod}{(}{throwable}{)}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{withBooleanVarargs}{(}{{int}{value}}{,}{{boolean}{.}{.}{.}{b}}{)}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockitoControl}}{{control}{=}{{lastControl}{.}{get}{()}}}{;}}{{{lastControl}{.}{set}{(}{null}{)}}{;}}{{return}{control}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MockAwareStub}{()}{{{}{{super}{(}{{{Object}}{.}{class}}{,}{null}{,}{null}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockVerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{{MockVerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{{MockVerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{{MockVerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockVerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockVerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockVerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{exactNumberOfInvocations}{<}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{new}{{VerifyingMode}}{(}{exactNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsAssertionError}{(}{{int}{expectedInvoked}}{,}{{int}{actuallyInvoked}}{)}{{{}{{super}{(}{{STRING_CONSTANT}{+}{expectedInvoked}{+}{STRING_CONSTANT}{+}{actuallyInvoked}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{mock}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockVerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockVerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockVerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockVerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{Mockito}{.}{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockVerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockVerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{MockVerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{assertEquals}{(}{STRING_CONSTANT}{,}{{e}{.}{getMessage}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{verify}{(}{mock}{)}}{;}}{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verify}{(}{mock}{)}}{;}}{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{get}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{mockitoState}{.}{verifyingStarted}{(}{{VerifyingMode}{.}{anyTimes}{()}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{UnfinishedVerificationException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{public}{NumberOfInvocationsAssertionError}{(}{{int}{expectedInvoked}}{,}{{int}{actuallyInvoked}}{)}{{{}{{super}{(}{{STRING_CONSTANT}{+}{expectedInvoked}{+}{STRING_CONSTANT}{+}{actuallyInvoked}}{,}{{new}{{LastClassIsCglibEnchantedFilter}}{()}}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{actuallyInvoked}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{VerificationAssertionError}{.}{createNotInvokedError}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{{invocation}{.}{toString}{()}}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{expected}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}{{{assertEquals}{(}{expected}{,}{{error}{.}{getMessage}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{message}{+=}{{STRING_CONSTANT}{+}{expected}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{expectedMessage}{=}{{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}{+}{STRING_CONSTANT}}}{;}}}
{AST_ROOT_SC2NF{{void}{simpleMethodWithArgument}{(}{{{String}}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{throw}{{new}{{VerificationAssertionError}}{(}{{STRING_CONSTANT}{+}{verificationErrorMessage}{+}{STRING_CONSTANT}{+}{mockName}{+}{STRING_CONSTANT}{+}{{registeredInvocation}{.}{toString}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{reader}{.}{read}{()}}{;}}{}}}{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{assertEquals}{(}{ioException}{,}{e}{)}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{public}{InstanceOf}{(}{{{Class}}{clazz}}{)}{{{}{{{{this}{.}{clazz}}{=}{clazz}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{newInstance}{(}{{{Class}}{clazz}}{)}{throws}{{InstantiationException}}{{{}{{return}{{ObjenesisHelper}{.}{newInstance}{(}{clazz}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Class}}{paramType}}}
{AST_ROOT_SC2NF{{public}{static}{{Object}}{emptyReturnValueFor}{(}{{{Class}}{type}}{)}{{{}{{return}{{emptyReturnValueToType}{.}{get}{(}{type}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{Mockito}{.}{verify}{(}{mock}{,}{exactNumberOfInvocations}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{this}{.}{isLastStackElementToRemove}{(}{trace}{)}}{)}{{{}{{{lastToRemove}{=}{i}}{;}}{break;}{}}}}{{{i}{++}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{list}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{strictly}{.}{verify}{(}{list}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{map}{)}}{.}{put}{(}{{anyObject}{()}}{,}{{anyObject}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{{verify}{(}{mock}{)}}{.}{oneArg}{(}{two}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{boolean}{orderOfInvocationsMatters}{()}{{{}{{return}{{!}{{mocksToBeVerifiedInSequence}{.}{isEmpty}{()}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{state}{.}{verifyingStarted}{(}{{VerifyingMode}{.}{anyTimes}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{mock}{)}}{.}{simpleMethod}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{mock}{,}{{notNullValue}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{superClass}{,}{{equalTo}{(}{{{ClassWithoutConstructor}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{superClass}{,}{{equalTo}{(}{{{Object}}{.}{class}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{strictly}{.}{verifyNoMoreInteractions}{()}}{;}}}
{AST_ROOT_SC2NF{{boolean}{invokedAtLeastOnce}{()}{{{}{{return}{{expectedNumberOfInvocations}{==}{null}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{lastInvocation}{=}{{behavior}{.}{lastInvocation}{()}}}{;}}}
{AST_ROOT_SC2NF{{{invocationWithMatchers}{.}{setSequenceNumber}{(}{{mockitoState}{.}{nextSequenceNumber}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{invocation}}}
{AST_ROOT_SC2NF{{{assertThat}{(}{{{new}{{InvocationWithMatchers}}{(}{invocation}{,}{null}{)}}{.}{hashCode}{()}}{,}{{equalTo}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{expectedInvocation}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{expectedInvocation}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{expected}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{invocation}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{expected}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{expected}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{expected}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{expected}}}
{AST_ROOT_SC2NF{{{InvocationWithMatchers}}{invocation}}}
{AST_ROOT_SC2NF{{boolean}{{shouldMarkAsVerified}{=}{{{verifyingMode}{.}{atLeastOnceMode}{()}}{||}{{{verifyingMode}{.}{getExpectedNumberOfInvocations}{()}}{>=}{verifiedSoFar}}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{expectedNumberOfInvocations}}{=}{expectedNumberOfInvocations}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{invocation}{=}{{new}{{Invocation}}{(}{null}{,}{m}{,}{args}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationChunk}}{>}}{{chunks}{=}{{getUnverifiedInvocationChunks}{(}{mode}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Invocation}}{{similarInvocation}{=}{{findSimilarInvocation}{(}{invocation}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{actuallyInvoked}{=}{{numberOfActualInvocations}{(}{expected}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{actualCount}{=}{{numberOfActualInvocations}{(}{expected}{)}}}{;}}}
{AST_ROOT_SC2NF{{{markInvocationsAsVerified}{(}{expected}{,}{verifyingMode}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{assert}{{invocationForStubbing}{!=}{null}}{;}}{{{registeredInvocations}{.}{remove}{(}{{invocationForStubbing}{.}{getInvocation}{()}}{)}}{;}}{{{{this}{.}{results}}{.}{put}{(}{invocationForStubbing}{,}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{ExpectedInvocation}}{(}{toLowerCaseInvocation}{,}{EMPTY_LIST}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{i}{.}{isVerified}{()}}{)}{{{}{continue;}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{markAllInvocationsAsVerified}{()}{{{}{{for}{(}{{{Invocation}}{invocation}}{:}{invocations}{)}{{{}{{{invocation}{.}{markVerified}{()}}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictOrderVerifier}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{mocks.length}{==}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{Exceptions}{.}{mocksHaveToBePassedAsArguments}{()}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{strictly}{=}{{strictOrderVerifier}{(}{mockOne}{,}{mockThree}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{Mockito}{.}{verify}{(}{mock}{,}{{VerifyingMode}{.}{inOrder}{(}{expectedNumberOfInvocations}{,}{mocksToBeVerifiedInOrder}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{List}}{<}{{InvocationChunk}}{>}}{{chunks}{=}{{registered}{.}{unverifiedInvocationChunks}{(}{{VerifyingMode}{.}{inOrder}{(}{null}{,}{{asList}{(}{mock}{)}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{unverifiedInvocationChunks}{(}{{VerifyingMode}{.}{inOrder}{(}{null}{,}{dummyMocks}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{{invocation}{=}{{new}{{ExpectedInvocation}}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toInvocation}{()}}{,}{Collections.EMPTY_LIST}{)}}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{StrictVerificationError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{StrictVerificationError}}{.}{class}}}{)}}{public}{void}{shouldFailWhenLastMethodCalledFirst}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{false}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{{-}{NUMBER_CONSTANT}}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{oneArg}{(}{true}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationAssertionError}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentMethodExpected}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{oneArg}{(}{true}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationAssertionError}}{.}{class}}}{)}}{public}{void}{shouldFailOnFirstMethodBecauseDifferentArgsExpected}{()}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{VerificationAssertionError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mockTwo}{,}{{atLeastOnce}{()}}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{!}{atLeastOnce}}{&&}{{actuallyInvoked}{!=}{expectedInvoked}}}{)}{{{}{{throw}{{new}{{NumberOfInvocationsAssertionError}}{(}{expectedInvoked}{,}{actuallyInvoked}{,}{expected}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{StrictVerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{add}{(}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{expected}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{@}{Test}{(}{{expected}{=}{{{VerificationAssertionError}}{.}{class}}}{)}}{public}{void}{shouldFailVerification}{(}{)}{throws}{{Exception}}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{VerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{{VerificationAssertionError}}{expected}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockThree}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{StrictVerificationError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mockOne}{,}{mockTwo}{,}{mockThree}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{map}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyZeroInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{verifyNoMoreInteractions}{(}{mock}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationAssertionError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockOne}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{strictly}{.}{verify}{(}{mockTwo}{,}{NUMBER_CONSTANT}{)}}{.}{simpleMethod}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberOfInvocationsAssertionError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberOfInvocationsAssertionError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{Mockito}{.}{verify}{(}{mock}{,}{NUMBER_CONSTANT}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}{{{assertTrue}{(}{{{e}{.}{getMessage}{()}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsAssertionError}}{e}}{)}{{{}{{{assertTrue}{(}{{{e}{.}{getMessage}{()}}{.}{endsWith}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsAssertionError}}{e}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsAssertionError}}{e}}}
{AST_ROOT_SC2NF{{{buffer}{.}{append}{(}{expected}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{mode}{.}{expectedCountIsZero}{()}}{)}{{{}{return;}{}}}}}
{AST_ROOT_SC2NF{{return}{{matchResult}{(}{{{(}{{(}{{Comparable}}{)}{actual}}{)}}{.}{compareTo}{(}{expected}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{expected}}{=}{value}}{;}}{{{{this}{.}{delta}}{=}{delta}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{actual}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{operator}{.}{matchResult}{(}{{comparator}{.}{compare}{(}{{(}{{T}}{)}{actual}}{,}{expected}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{appendQuoting}{(}{buffer}{)}}{;}}{{{buffer}{.}{append}{(}{expected}{)}}{;}}{{{appendQuoting}{(}{buffer}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Mockito}{.}{verify}{(}{mock}{,}{{VerifyingMode}{.}{inOrder}{(}{{verifyingMode}{.}{expectedCount}{()}}{,}{mocksToBeVerifiedInOrder}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{<}{{T}}{>}{{T}}{verify}{(}{{{T}}{mock}}{,}{{int}{expectedNumberOfInvocations}}{)}{;}}}
{AST_ROOT_SC2NF{{{Integer}}{wantedCount}{()}{{{}{{return}{wantedInvocationCount}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{reportDiscrepancy}{(}{wanted}{,}{{{chunks}{.}{get}{(}{NUMBER_CONSTANT}{)}}{.}{getInvocation}{()}}{,}{Exceptions.STRICT_DISCREPANCY}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{actual}{!=}{null}}{)}{{{}{{{reportDiscrepancy}{(}{wanted}{,}{actual}{,}{Exceptions.REGULAR_DISCREPANCY}{)}}{;}}{}}}{else}{{{}{{{Exceptions}{.}{wantedButNotInvoked}{(}{{wanted}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{m}{.}{isBridge}{()}}{)}{{{}{{if}{(}{{{m}{.}{getName}{()}}{.}{equals}{(}{methodName}{)}}{)}{{{}{{{System.out}{.}{println}{(}{m}{)}}{;}}{{return}{true}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{private}{void}{print}{(}{{{BaseMessage}}{message}}{)}{{{}{{{mock}{.}{print}{(}{message}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{print}{(}{{{String}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{print}{(}{{{Object}}{message}}{)}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{unverified}{!=}{null}}{)}{{{}{{{Exceptions}{.}{noMoreInteractionsWanted}{(}{unverified}{,}{message}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{stub}{(}{{mock}{.}{add}{(}{STRING_CONSTANT}{)}}{)}}{.}{andThrows}{(}{{new}{{Exception}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Strictly}}{{strictly}{=}{{createStrictOrderVerifier}{(}{mock}{)}}}{;}}{{{{strictly}{.}{verify}{(}{mockTwo}{)}}{.}{clear}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{synchronized}{void}{verifyingStarted}{(}{{{VerifyingMode}}{verify}}{)}{{{}{{{checkForUnfinishedVerification}{()}}{;}}{{{verifyingModeLocal}{.}{set}{(}{verify}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{MockitoState}{.}{instance}{()}}{.}{checkForUnfinishedVerification}{()}}{;}}}
{AST_ROOT_SC2NF{{{{MockitoState}{.}{instance}{()}}{.}{checkForUnfinishedVerification}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{assert}{{invocationForStubbing}{!=}{null}}{;}}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{{this}{.}{results}}{.}{put}{(}{invocationForStubbing}{,}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{new}{{{IAnswer}}{<}{{Object}}{>}}{()}{{{}{{public}{{Object}}{answer}{(}{)}{throws}{{Throwable}}{{{}{{throw}{throwable}{;}}{}}}}{}}}}}
{AST_ROOT_SC2NF{{void}{simpleMethod}{(}{{{String}}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{void}{simpleMethod}{(}{{int}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{boolean}{simpleMethod}{(}{{{String}}{argument}}{)}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{CrazyMatchers}{.}{find}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{CrazyMatchers}{.}{not}{(}{{notNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{threeArgumentMethod}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{CrazyMatchers}{.}{not}{(}{{isNull}{()}}{)}}{,}{{eq}{(}{STRING_CONSTANT}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{CrazyMatchers}{.}{or}{(}{{eq}{(}{NUMBER_CONSTANT}{)}}{,}{{eq}{(}{NUMBER_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{{stub}{(}{{mock}{.}{oneArg}{(}{{CrazyMatchers}{.}{cmpEq}{(}{{new}{{BigDecimal}}{(}{STRING_CONSTANT}{)}}{)}}{)}}{)}}{.}{andReturn}{(}{STRING_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{@}{Test}}{{@}{Ignore}}{public}{void}{shouldCorrectStateAfterDetectingInvalidity}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{assert}{{invocationForStubbing}{!=}{null}}{;}}{{{registeredInvocations}{.}{removeLast}{()}}{;}}{{{results}{.}{put}{(}{invocationForStubbing}{,}{result}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{{call}{.}{equals}{(}{newStringObjectShouldNotBeEqual}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{result}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{{sb}{=}{{new}{{StringBuffer}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{;}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{suffix}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{wanted}{+}{STRING_CONSTANT}{+}{delta}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{prefix}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{{clazz}{.}{getName}{()}}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{{getName}{()}}{+}{STRING_CONSTANT}{+}{wanted}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{{StringBuffer}}{buffer}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{{STRING_CONSTANT}{+}{substring}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{appendTo}{(}{{{StringBuffer}}{buffer}}{)}{{{}{{{buffer}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{static}{{LastArguments}}{instance}{()}{{{}{{return}{INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoState}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{behavior}{.}{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{mockitoState}{.}{stubbingCompleted}{()}}{;}}{{{behavior}{.}{addResult}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{MockitoState}}{instance}{()}{{{}{{return}{INSTANCE}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{verifyingStarted}{(}{{{VerifyingMode}}{verify}}{)}{{{}{{{validateState}{()}}{;}}{{{verifyingModeLocal}{=}{verify}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{toAssert}}{)}{{{}{{{reset}{()}}{;}}{{throw}{{new}{{InvalidUseOfMatchersException}}{(}{message}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{verify}{(}{mock}{)}}{.}{oneArray}{(}{nullArray}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{map}{.}{put}{(}{call}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{three}{.}{simpleMethod}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{{}{{{map}{.}{put}{(}{call}{,}{STRING_CONSTANT}{)}}{;}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{RuntimeException}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{MockitoException}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{expected}}{)}{{{}{{{assertThat}{(}{expected}{,}{{firstMethodOnStackEqualsTo}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{{this}{.}{stackTrace}}{=}{{{new}{{MockitoException}}{(}{STRING_CONSTANT}{)}}{.}{getStackTrace}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoStackTraceFilter}}{{filter}{=}{{new}{{MockitoStackTraceFilter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoStackTraceFilter}}{{filter}{=}{{new}{{MockitoStackTraceFilter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertTrue}{(}{{{e}{.}{getMessage}{()}}{.}{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoStackTraceFilter}}{{filter}{=}{{new}{{MockitoStackTraceFilter}}{()}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{VerificationError}}{e}}{)}{{{}{{{assertThat}{(}{{{e}{.}{getCause}{()}}{.}{getMessage}{()}}{,}{{contains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Invocation}}{{actual}{=}{{registeredInvocations}{.}{findSimilarInvocation}{(}{wanted}{)}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{{UndesiredInvocation}}{{cause}{=}{{buildCause}{(}{actualInvocationStackTrace}{,}{STRING_CONSTANT}{,}{undesired}{)}}}{;}}{{throw}{{new}{{VerificationError}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{UndesiredInvocation}}{{cause}{=}{{buildCause}{(}{actualInvocationStackTrace}{,}{STRING_CONSTANT}{,}{undesired}{)}}}{;}}{{throw}{{new}{{VerificationError}}{(}{{join}{(}{STRING_CONSTANT}{)}}{,}{cause}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{{verify}{(}{mock}{)}}{.}{clear}{()}}{;}}{{{fail}{()}}{;}}{}}}{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberOfInvocationsError}}{e}}{)}{{{}{{{assertThat}{(}{e}{,}{{messageContains}{(}{STRING_CONSTANT}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{NumberOfInvocationsError}}{e}}}
{AST_ROOT_SC2NF{{@}{Test}{(}{{expected}{=}{{{NumberOfInvocationsError}}{.}{class}}}{)}}}
{AST_ROOT_SC2NF{{{MockitoErrorTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{Exceptions}{.}{strictlyWantedInvocationDiffersFromActual}{(}{wanted}{,}{actual}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{{MethodSelector}}{<}{{T}}{>}}{toThrow}{(}{{{Throwable}}{throwable}}{)}{{{}{{{throwableToBeSetOnVoidMethod}{=}{throwable}}{;}}{{return}{this}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setInvocationForPotentialStubbing}{(}{{{ExpectedInvocation}}{invocation}}{)}{{{}{{{{this}{.}{invocationForStubbing}}{=}{invocation}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{invocationWithMatchers}}}
{AST_ROOT_SC2NF{{{ExpectedInvocationTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{s}{.}{setInvocationForPotentialStubbing}{(}{{{new}{{InvocationBuilder}}{()}}{.}{toExpecteInvocation}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wantedInvocation}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wantedInvocation}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{public}{void}{addInvocation}{(}{{{ExpectedInvocation}}{invocation}}{)}{{{}{{{{this}{.}{registeredInvocations}}{.}{add}{(}{{invocation}{.}{getInvocation}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{registered}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{registered}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{HasStackTrace}}{{firstUndesired}{=}{{registered}{.}{getFirstUndesiredInvocationStackTrace}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{)}}{,}{{VerifyingMode}{.}{times}{(}{NUMBER_CONSTANT}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{ExpectedInvocation}}{(}{null}{)}}{,}{mode}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{)}}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{)}}{,}{{atLeastOnce}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{)}}{,}{{times}{(}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{registered}{.}{markInvocationsAsVerified}{(}{{new}{{ExpectedInvocation}}{(}{simpleMethodInvocation}{)}}{,}{{inOrder}{(}{null}{,}{{asList}{(}{mock}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{wanted}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{expected}}}
{AST_ROOT_SC2NF{{{ExpectedInvocation}}{invocation}}}
{AST_ROOT_SC2NF{{{ToTypeMappingsTest}}{.}{class}}}
{AST_ROOT_SC2NF{{if}{(}{{verifyingMode}{!=}{null}}{)}{{{}{{{behavior}{.}{verify}{(}{invocationWithMatchers}{,}{verifyingMode}{)}}{;}}{{return}{{ToTypeMappings}{.}{emptyReturnValueFor}{(}{{method}{.}{getReturnType}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{MockitoStateTest}}{.}{class}}}
{AST_ROOT_SC2NF{{{assertNull}{(}{{{MockitoState}{.}{instance}{()}}{.}{pullControlToBeStubbed}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{MockitoState}{.}{instance}{()}}{.}{stubbingCompleted}{()}}{;}}{{{validateThrowable}{(}{throwable}{)}}{;}}{{{addResult}{(}{{Result}{.}{createThrowResult}{(}{throwable}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{MockitoState}{.}{instance}{()}}{.}{stubbingCompleted}{()}}{;}}{{{addResult}{(}{{Result}{.}{createReturnResult}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MockitoState}{.}{instance}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{{MockitoState}{.}{instance}{()}}{.}{validateState}{()}}{;}}}
{AST_ROOT_SC2NF{{{}{{{MockUtil}{.}{validateMock}{(}{mock}{)}}{;}}{{{{MockitoState}{.}{instance}{()}}{.}{verifyingStarted}{(}{mode}{)}}{;}}{{return}{mock}{;}}{}}}}
{AST_ROOT_SC2NF{{{{MockControl}}{<}{{T}}{>}}{{mockControl}{=}{{new}{{{MockControl}}{<}{{T}}{>}}{(}{mockitoState}{)}}}{;}}}
{AST_ROOT_SC2NF{{{MockitoBehaviorTest}}{.}{class}}}
{AST_ROOT_SC2NF{{public}{void}{andThrows}{(}{{{Throwable}}{throwable}}{)}{{{}{{{behavior}{.}{lastInvocationWasStubbed}{()}}{;}}{{{stubber}{.}{addThrowable}{(}{throwable}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{andReturn}{(}{{{T}}{value}}{)}{{{}{{{behavior}{.}{lastInvocationWasStubbed}{()}}{;}}{{{stubber}{.}{addReturnValue}{(}{value}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{timeline}{.}{setStartTime}{(}{{FIRST_MONDAY_AFTER_1900}{+}{{NUMBER_CONSTANT}{*}{{timeline}{.}{getSegmentSize}{()}}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{SegmentedTimeline}}{{timeline}{=}{{new}{{SegmentedTimeline}}{(}{DAY_SEGMENT_SIZE}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}}{;}}{{{timeline}{.}{setStartTime}{(}{FIRST_MONDAY_AFTER_1900}{)}}{;}}{{return}{timeline}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{RegularTimePeriod.DEFAULT_TIME_ZONE}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{getDatasetCount}{()}}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>=}{{getDatasetCount}{()}}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{index}{<}{NUMBER_CONSTANT}}{||}{{index}{>}{NUMBER_CONSTANT}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{clone.seriesShapesVisible}{=}{{(}{{BooleanList}}{)}{{{this}{.}{seriesLinesVisible}}{.}{clone}{()}}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{int}{{pos}{=}{{this}{.}{getIndex}{(}{key}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{this}{.}{rangeBounds}}{;}}{}}}}
{AST_ROOT_SC2NF{{{g2}{.}{setPaint}{(}{Color.gray}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{gapRadius}}{!=}{that.gapRadius}}{)}{{{}{{return}{false}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{true}{;}}}
{AST_ROOT_SC2NF{{return}{true}{;}}}
{AST_ROOT_SC2NF{{return}{true}{;}}}
{AST_ROOT_SC2NF{{return}{true}{;}}}
{AST_ROOT_SC2NF{{return}{true}{;}}}
{AST_ROOT_SC2NF{{return}{true}{;}}}
{AST_ROOT_SC2NF{{return}{true}{;}}}
{AST_ROOT_SC2NF{{{MessageBox}}{{messageBox}{=}{{new}{{MessageBox}}{(}{{canvas}{.}{getShell}{()}}{,}{{SWT.OK}{|}{SWT.ICON_ERROR}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{SWTChartEditor}}{{editor}{=}{{new}{{SWTChartEditor}}{(}{{canvas}{.}{getDisplay}{()}}{,}{{this}{.}{chart}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{this}{.}{switchColors}{()}}{;}}{{{gc}{.}{fillRectangle}{(}{x}{,}{y}{,}{width}{,}{height}{)}}{;}}{{{this}{.}{switchColors}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{gc}{.}{drawLine}{(}{x1}{,}{y1}{,}{x2}{,}{y2}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{gc}{.}{setClipping}{(}{clipPath}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{gc}{.}{setClipping}{(}{x}{,}{y}{,}{width}{,}{height}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{org.eclipse.swt.graphics.Rectangle}}{{clip}{=}{{gc}{.}{getClipping}{()}}}{;}}{{return}{{new}{{Rectangle}}{(}{clip.x}{,}{clip.y}{,}{clip.width}{,}{clip.height}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Path}}{{path}{=}{{toSwtPath}{(}{s}{)}}}{;}}{{{gc}{.}{setClipping}{(}{path}{)}}{;}}{{{path}{.}{dispose}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{org.eclipse.swt.graphics.Font}}{{swtFont}{=}{{getSwtFontFromPool}{(}{font}{)}}}{;}}{{{gc}{.}{setFont}{(}{swtFont}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{gc}{.}{setForeground}{(}{swtColor}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{void}{setTransform}{(}{{{AffineTransform}}{Tx}}{)}{{{}{{{gc}{.}{setTransform}{(}{{toSwtTransform}{(}{Tx}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{gc}{.}{drawImage}{(}{image}{,}{x}{,}{y}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Path}}{{path}{=}{{toSwtPath}{(}{shape}{)}}}{;}}{{{gc}{.}{drawPath}{(}{path}{)}}{;}}{{{path}{.}{dispose}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{swtColor}{=}{{SWTUtils}{.}{toSwtColor}{(}{{gc}{.}{getDevice}{()}}{,}{awtColor}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{DialPointer}{()}{{{}{{this}{(}{NUMBER_CONSTANT}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{DialValueIndicator}}{{i1}{=}{{new}{{DialValueIndicator}}{(}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{DialValueIndicator}}{{i1}{=}{{new}{{DialValueIndicator}}{(}{NUMBER_CONSTANT}{,}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{dialFrame}}{=}{{new}{{StandardDialFrame}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{StandardDialFrameTests}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Color}}{getColor}{()}{{{}{{return}{myColor}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{this}{.}{myColor}}{!=}{null}}{)}{{{}{{{myColor}{.}{dispose}{()}}{;}}{}}}}{{{{this}{.}{myColor}}{=}{color}}{;}}{}}}}
{AST_ROOT_SC2NF{{{e.gc}{.}{setBackground}{(}{myColor}{)}}{;}}}
{AST_ROOT_SC2NF{{{{this}{.}{drawBarOutline}}{=}{true}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{XYSplineAndShapeRendererTests}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTestSuite}{(}{{{SimpleDialFrameTests}}{.}{class}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{String}}{name}}}
{AST_ROOT_SC2NF{{{}{{{axis}{.}{resizeRange}{(}{factor}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{values}{!=}{null}}{)}{{{}{{return}{{Collections}{.}{unmodifiableList}{(}{values}{)}}{;}}{}}}{else}{{{}{{return}{null}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Object}}{{clone}{=}{{(}{{PeriodAxisLabelInfo}}{)}{{super}{.}{clone}{()}}}}{;}}{{return}{clone}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{SWTUtils}{.}{toAwtFont}{(}{{getDisplay}{()}}{,}{tickLabelFont}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Stroke}}{getStroke}{()}{{{}{{return}{{strokeCanvas}{.}{getStroke}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Color}}{getOutlinePaint}{()}{{{}{{return}{{outlinePaintCanvas}{.}{getColor}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{Color}}{getBackGroundPaint}{()}{{{}{{return}{{backgroundPaintCanvas}{.}{getColor}{()}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{radius}{<=}{NUMBER_CONSTANT}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{p}{==}{null}}{)}{{return}{NUMBER_CONSTANT}{;}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{CategoryPlot}}{{plot}{=}{{(}{{CategoryPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedRangeAxisSpace}{(}{space}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{CategoryPlot}}{{plot}{=}{{(}{{CategoryPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedDomainAxisSpace}{(}{space}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{canvas}}{=}{{new}{{Canvas}}{(}{this}{,}{SWT.NO_BACKGROUND}{)}}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{baseShapesVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{baseShapesVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemToolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseToolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseItemLabelGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{s1}{=}{{new}{{ComparableObjectSeries}}{(}{null}{)}}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{e}}{)}{{{}{{{pass}{=}{true}}{;}}{}}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{errorIndicatorPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{errorIndicatorStroke}}{=}{stroke}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{plotLines}}{=}{draw}}{;}}{{{this}{.}{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemURLGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemMargin}}{=}{margin}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fillBox}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useSeriesOffset}}{=}{offset}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useFillPaint}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesFilled}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesFilled}}{.}{setBoolean}{(}{series}{,}{filled}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesFilled}}{=}{filled}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useOutlinePaint}}{=}{use}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOutlines}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseLinesVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesLinesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{linesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{yOffset}}{=}{yOffset}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{xOffset}}{=}{xOffset}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maxItemWidth}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{includeBaseInRange}}{!=}{include}}{)}{{{}{{{{this}{.}{includeBaseInRange}}{=}{include}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeItemLabelPositionFallback}}{=}{position}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveItemLabelPositionFallback}}{=}{position}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gradientPaintTransformer}}{=}{transformer}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{minimumBarLength}}{=}{min}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{maximumBarWidth}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBarOutline}}{=}{draw}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemMargin}}{=}{percent}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{base}}{=}{base}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useFillPaint}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOutlines}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useSeriesOffset}}{=}{offset}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{stagger}}{=}{shouldStagger}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useOutlinePaint}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{useFillPaint}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOutlines}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesFilled}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesFilled}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesFilled}}{=}{filled}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseShapesVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesShapesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseLinesVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{seriesLinesVisible}}{.}{setBoolean}{(}{series}{,}{flag}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{linesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{yOffset}}{=}{yOffset}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{xOffset}}{=}{xOffset}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{negativeItemLabelPositionFallback}}{=}{position}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{positiveItemLabelPositionFallback}}{=}{position}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{gradientPaintTransformer}}{=}{transformer}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawBarOutline}}{=}{draw}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{margin}}{=}{margin}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{useYInterval}}{!=}{use}}{)}{{{}{{{{this}{.}{useYInterval}}{=}{use}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{base}}{=}{base}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{renderAsPercentages}}{=}{asPercentages}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showOutline}}{=}{show}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{drawVolume}}{!=}{flag}}{)}{{{}{{{{this}{.}{drawVolume}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{downPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{upPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{autoWidthFactor}}{!=}{autoWidthFactor}}{)}{{{}{{{{this}{.}{autoWidthFactor}}{=}{autoWidthFactor}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemURLGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{legendItemToolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{foregroundAnnotations}}{.}{clear}{()}}{;}}{{{{this}{.}{backgroundAnnotations}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseToolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{toolTipGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{baseItemLabelGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGeneratorList}}{.}{set}{(}{series}{,}{generator}{)}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{itemLabelGenerator}}{=}{generator}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fillBox}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{boxPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{width}{!=}{{this}{.}{boxWidth}}}{)}{{{}{{{{this}{.}{boxWidth}}{=}{width}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{shapesVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showOutline}}{=}{show}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{showOutline}}{=}{show}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{roundXCoordinates}}{=}{round}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{closeTickPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{openTickPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawCloseTicks}}{=}{draw}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawOpenTicks}}{=}{draw}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{roundXCoordinates}}{=}{round}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{capLength}}{=}{length}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{drawYError}}{!=}{draw}}{)}{{{}{{{{this}{.}{drawYError}}{=}{draw}}{;}}{{{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawXError}}{=}{draw}}{;}}{{{this}{.}{notifyListeners}{(}{{new}{{RendererChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{org.eclipse.swt.graphics.Image}}{{im}{=}{{new}{{org.eclipse.swt.graphics.Image}}{(}{{{this}{.}{gc}}{.}{getDevice}{()}}{,}{{convertToSWT}{(}{image}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{XYPlot}}{{plot}{=}{{(}{{XYPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedRangeAxisSpace}{(}{space}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{XYPlot}}{{plot}{=}{{(}{{XYPlot}}{)}{{iterator}{.}{next}{()}}}}{;}}{{{plot}{.}{setFixedDomainAxisSpace}{(}{space}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{sb}{.}{append}{(}{{STRING_CONSTANT}{+}{name}{+}{STRING_CONSTANT}{+}{name}{+}{STRING_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{BufferedImage}}{{image}{=}{{new}{{BufferedImage}}{(}{imageWidth}{,}{imageHeight}{,}{BufferedImage.TYPE_INT_RGB}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{createBufferedImage}{(}{width}{,}{height}{,}{BufferedImage.TYPE_INT_RGB}{,}{info}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{STRING_CONSTANT}{+}{{ImageMapUtilities}{.}{htmlEscape}{(}{urlText}{)}}{+}{STRING_CONSTANT}}{;}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{this}{(}{time}{,}{RegularTimePeriod.DEFAULT_TIME_ZONE}{,}{{Locale}{.}{getDefault}{()}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{this}{.}{seriesToGroupMap}}{.}{getGroupIndex}{(}{{{this}{.}{seriesToGroupMap}}{.}{getGroup}{(}{{{plot}{.}{getDataset}{()}}{.}{getRowKey}{(}{row}{)}}{)}}{)}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{BufferedImage}}{{image}{=}{{chart}{.}{createBufferedImage}{(}{width}{,}{height}{,}{info}{)}}}{;}}}
{AST_ROOT_SC2NF{{{BufferedImage}}{{image}{=}{{chart}{.}{createBufferedImage}{(}{width}{,}{height}{,}{info}{)}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{key}}}
{AST_ROOT_SC2NF{{double}{{seriesGap}{=}{{{{dataArea}{.}{getWidth}{()}}{*}{{getItemMargin}{()}}}{/}{{(}{{categoryCount}{*}{{(}{{seriesCount}{-}{NUMBER_CONSTANT}}{)}}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{this}{.}{showBase}}{)}{{{}{{{result}{.}{append}{(}{{this}{.}{baseLabel}}{)}}{;}}{{{result}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{categoryKeys.length}{!=}{{{{this}{.}{startData}}{[}{NUMBER_CONSTANT}{]}}{.}{length}}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{Exception}}{e}}{)}{{{}{{{System.out}{.}{println}{(}{{e}{.}{toString}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{CloneNotSupportedException}}{e}}{)}{{{}{{{System.err}{.}{println}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{rangeGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{domainGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{data}}{=}{data}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedLegendItems}}{=}{items}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedRangeAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedDomainAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isRangeCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairLockedOnData}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isDomainCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairLockedOnData}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{domainCrosshairVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{annotations}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeTickBandPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainTickBandPaint}}{=}{paint}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeZeroBaselineVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{domainZeroBaselineVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{rangeGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{domainGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{weight}}{=}{weight}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{orientation}{!=}{{this}{.}{orientation}}}{)}{{{}{{{{this}{.}{orientation}}{=}{orientation}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{foregroundAlpha}}{!=}{alpha}}{)}{{{}{{{{this}{.}{foregroundAlpha}}{=}{alpha}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{outlineVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{backgroundImageAlpha}}{=}{alpha}}{;}}{{{this}{.}{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{backgroundImageAlignment}}{!=}{alignment}}{)}{{{}{{{{this}{.}{backgroundImageAlignment}}{=}{alignment}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{backgroundImage}}{=}{image}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawingSupplier}}{=}{supplier}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{backgroundAlpha}}{!=}{alpha}}{)}{{{}{{{{this}{.}{backgroundAlpha}}{=}{alpha}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{insets}}{=}{insets}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{noDataMessage}}{=}{message}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{anchorValue}}{=}{value}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{drawSharedDomainAxis}}{=}{draw}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedRangeAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedDomainAxisSpace}}{=}{space}}{;}}{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{weight}}{=}{weight}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{annotations}}{.}{clear}{()}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{rangeCrosshairValue}}{=}{value}}{;}}{{if}{(}{{{isRangeCrosshairVisible}{()}}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairLockedOnData}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairLockedOnData}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeCrosshairVisible}}{!=}{flag}}{)}{{{}{{{{this}{.}{rangeCrosshairVisible}}{=}{flag}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{removed}{&&}{notify}}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{fixedLegendItems}}{=}{items}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{rangeGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{rangeGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{{this}{.}{domainGridlinesVisible}}{!=}{visible}}{)}{{{}{{{{this}{.}{domainGridlinesVisible}}{=}{visible}}{;}}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{notify}{)}{{{}{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{notifyListeners}{(}{{new}{{PlotChangeEvent}}{(}{this}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{HashCodeUtilsTest}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{{(}{{Throwable}}{)}{{this}{.}{cause}}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Throwable}}{{throwables}{[]}{=}{{this}{.}{getThrowables}{()}}}{;}}}
{AST_ROOT_SC2NF{{{Throwable}}{{nestedCause}{=}{{cause}{.}{getCause}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{cause}}{=}{cause}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ArrayList}}{{list}{=}{{new}{{ArrayList}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{ExceptionUtils}{.}{indexOfThrowable}{(}{{this}{.}{cause}}{,}{type}{,}{fromIndex}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ExceptionUtils}{.}{getThrowables}{(}{{this}{.}{cause}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{index}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{{this}{.}{cause}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Throwable}}{{nestedCause}{=}{{ExceptionUtils}{.}{getCause}{(}{{this}{.}{cause}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{n}{=}{{new}{{NestableExceptionTester1}}{(}{{getThrowable}{(}{{msgs}{[}{NUMBER_CONSTANT}{]}}{)}}{)}}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{ANestableExceptionTestCase}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{NestableRuntimeExceptionTester1}}{(}{msg}{,}{{(}{{Throwable}}{)}{n}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{static}{{Test}}{suite}{()}{{{}{{return}{{new}{{TestSuite}}{(}{{{NestableExceptionTestCase}}{.}{class}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{private}{RandomStringUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSummaryObjectEndText}{()}{{{}{{return}{summaryObjectEndText}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSummaryObjectStartText}{()}{{{}{{return}{summaryObjectStartText}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSizeEndText}{()}{{{}{{return}{sizeEndText}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getSizeStartText}{()}{{{}{{return}{sizeStartText}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getNullText}{()}{{{}{{return}{nullText}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFieldSeparator}{()}{{{}{{return}{fieldSeparator}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getFieldNameValueSeparator}{()}{{{}{{return}{fieldNameValueSeparator}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getContentEnd}{()}{{{}{{return}{contentEnd}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getContentStart}{()}{{{}{{return}{contentStart}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getArraySeparator}{()}{{{}{{return}{arraySeparator}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getArrayEnd}{()}{{{}{{return}{arrayEnd}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{{String}}{getArrayStart}{()}{{{}{{return}{arrayStart}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setArrayContentDetail}{(}{{boolean}{arrayContentDetail}}{)}{{{}{{{{this}{.}{arrayContentDetail}}{=}{arrayContentDetail}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setDefaultFullDetail}{(}{{boolean}{defaultFullDetail}}{)}{{{}{{{{this}{.}{defaultFullDetail}}{=}{defaultFullDetail}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUseFieldNames}{(}{{boolean}{useFieldNames}}{)}{{{}{{{{this}{.}{useFieldNames}}{=}{useFieldNames}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUseIdentityHashCode}{(}{{boolean}{useIdentityHashCode}}{)}{{{}{{{{this}{.}{useIdentityHashCode}}{=}{useIdentityHashCode}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setShortClassName}{(}{{boolean}{shortClassName}}{)}{{{}{{{{this}{.}{useShortClassName}}{=}{shortClassName}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{void}{setUseClassName}{(}{{boolean}{useClassName}}{)}{{{}{{{{this}{.}{useClassName}}{=}{useClassName}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{style}{==}{null}}{)}{{{}{{{style}{=}{ToStringStyle.DEFAULT_STYLE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{String}}{{linebreak}{=}{{System}{.}{getProperty}{(}{STRING_CONSTANT}{)}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{entry}{==}{null}}{)}{{{}{{return}{Collections.EMPTY_MAP}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ExceptionInInitializerError}}{ex}}{)}{{{}{{{assertTrue}{(}{{{ex}{.}{getCause}{()}}{instanceof}{{IllegalArgumentException}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ExceptionInInitializerError}}{ex}}{)}{{{}{{{assertTrue}{(}{{{ex}{.}{getCause}{()}}{instanceof}{{IllegalArgumentException}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{ExceptionInInitializerError}}{ex}}{)}{{{}{{{assertTrue}{(}{{{ex}{.}{getCause}{()}}{instanceof}{{IllegalArgumentException}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{TestClosureUtils}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{{Number}}{getMaximum}{()}{{{}{{return}{min}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{member}{==}{null}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}{{return}{{Modifier}{.}{isStatic}{(}{{member}{.}{getModifiers}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{!}{{isAssignmentCompatible}{(}{{methodsParams}{[}{n}{]}}{,}{{parameterTypes}{[}{n}{]}}{)}}}}
{AST_ROOT_SC2NF{{!}{{ReflectionUtils}{.}{isCompatable}{(}{{parameterTypes}{[}{n}{]}}{,}{{methodsParams}{[}{n}{]}}{)}}}}
{AST_ROOT_SC2NF{{{{{methods}{[}{i}{]}}{.}{getName}{()}}{.}{equals}{(}{methodName}{)}}{&&}{{ReflectionUtils}{.}{isCompatable}{(}{paramTypes}{,}{{{methods}{[}{i}{]}}{.}{getParameterTypes}{()}}{)}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{private}{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{DefaultToStringStyle}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchMapExecutor}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchExecutor}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchMapTransformer}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchTransformer}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchMapExecutor}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchExecutor}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchMapTransformer}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchTransformer}{(}{EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{this}{.}{clss}}{=}{clss}}{;}}}
{AST_ROOT_SC2NF{{{Method}}{{method}{=}{{getMatchingAccessibleMethod}{(}{{object}{.}{getClass}{()}}{,}{methodName}{,}{parameterTypes}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchMapExecutor}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{ExecutorUtils}{.}{switchExecutor}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchMapTransformer}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{TransformerUtils}{.}{switchTransformer}{(}{Collections.EMPTY_MAP}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}{return;}{}}}}}{{{fail}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{{buf}{.}{append}{(}{{ClassUtils}{.}{getShortClassName}{(}{th}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{withoutCause}{=}{{new}{{ExceptionWithoutCause}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{ByteArrayOutputStream}}{{baos}{=}{{new}{{ByteArrayOutputStream}}{()}}}{;}}{{{serialize}{(}{obj}{,}{baos}{)}}{;}}{{return}{{baos}{.}{toByteArray}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{cls}{.}{getDeclaringClass}{()}}{!=}{null}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{{getClass}{()}}{.}{getName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{{getClass}{()}}{.}{getName}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{frames}{.}{add}{(}{{STRING_CONSTANT}{+}{{{throwables}{[}{i}{]}}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{String}}{{shortName}{=}{{Enum}{.}{getEnumClassName}{(}{{getClass}{()}}{)}}}{;}}}
{AST_ROOT_SC2NF{{{Entry}}{{entry}{=}{{(}{{Entry}}{)}{{cEnumClasses}{.}{get}{(}{{Enum}{.}{getEnumClassName}{(}{{getClass}{()}}{)}}{)}}}}{;}}}
{AST_ROOT_SC2NF{{private}{Null}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{reverseArray}{(}{strs}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{join}{(}{array}{,}{STRING_CONSTANT}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{ArrayUtils}{.}{reverseArray}{(}{strs}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{iso}{=}{{(}{{Integer}}{)}{{e2i}{.}{get}{(}{entity}{)}}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{int}{)}{{Math}{.}{random}{()}}}{*}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{long}{nextLong}{()}{{{}{{return}{{{(}{long}{)}{{Math}{.}{random}{()}}}{*}{Long.MAX_VALUE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{(}{int}{)}{{Math}{.}{random}{()}}}{*}{n}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{random}{(}{count}{,}{NUMBER_CONSTANT}{,}{{set.length}{-}{NUMBER_CONSTANT}}{,}{false}{,}{false}{,}{set}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{void}{printPartialStackTrace}{(}{{{PrintWriter}}{out}}{)}{{{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{String}}{)}{{STRING_ALPHANUMERIC_IDENTIFIER_FACTORY}{.}{create}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{String}}{)}{{STRING_NUMERIC_IDENTIFIER_FACTORY}{.}{create}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{Long}}{)}{{LONG_IDENTIFIER_FACTORY}{.}{create}{()}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{{cls}{.}{getName}{()}}{.}{indexOf}{(}{CHAR_CONS}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{i}{=}{{className}{.}{lastIndexOf}{(}{CHAR_CONS}{)}}}{;}}}
{AST_ROOT_SC2NF{{{ToStringBuilder}{.}{isRegistered}{(}{value}{)}}{&&}{{!}{{(}{{{value}{instanceof}{{Number}}}{||}{{value}{instanceof}{{Boolean}}}{||}{{value}{instanceof}{{Character}}}}{)}}}}}
{AST_ROOT_SC2NF{{{assertTrue}{(}{{{ToStringBuilder}{.}{getReflectionRegistry}{()}}{.}{isEmpty}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{end}{=}{{(}{int}{)}{CHAR_CONS}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{lastIdx}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{object}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{style}{.}{append}{(}{buffer}{,}{fieldName}{,}{array}{,}{{new}{{Boolean}}{(}{fullDetail}{)}}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{cal}{,}{{DateUtils}{.}{trunc}{(}{cal}{,}{Calendar.DATE}{)}}{,}{NUMBER_CONSTANT}{)}}{;}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{{Object}}{array}}}
{AST_ROOT_SC2NF{{public}{BinaryIntMap}{(}{{int}{growBy}}{)}{{{}{{super}{(}{growBy}{)}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{unescapeEntities}{(}{str}{,}{Entities.XML}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{escapeEntities}{(}{str}{,}{Entities.XML}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{unescapeEntities}{(}{str}{,}{Entities.HTML40}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{escapeEntities}{(}{str}{,}{Entities.HTML40}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{entities}{.}{entityName}{(}{{html40value}{(}{i}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{buf}{.}{append}{(}{STRING_CONSTANT}{)}}{;}}{{char}{{ch}{=}{{html40value}{(}{i}{)}}}{;}}{{{buf}{.}{append}{(}{ch}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{pads}{>}{PAD_LIMIT}}{)}{{{}{{return}{{leftPad}{(}{str}{,}{size}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{pads}{>}{PAD_LIMIT}}{)}{{{}{{return}{{rightPad}{(}{str}{,}{size}{,}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{ArrayUtils}{.}{lastIndexOf}{(}{array}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{-}{NUMBER_CONSTANT}}{,}{{ArrayUtils}{.}{indexOf}{(}{array}{,}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{{appendAsObjectToString}{(}{buffer}{,}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{getStyle}{()}}{.}{appendAsObjectToString}{(}{{this}{.}{getStringBuffer}{()}}{,}{object}{)}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{StringUtils}{.}{isNotEmptyTrimmed}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{StringUtils}{.}{isEmptyTrimmed}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{false}{,}{{StringUtils}{.}{isNotEmpty}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{true}{,}{{StringUtils}{.}{isEmpty}{(}{null}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{pads}{>}{PAD_LIMIT}}{)}{{{}{{return}{{leftPad}{(}{str}{,}{size}{,}{CHAR_CONS}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Field}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{byte}{[]}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{deserialize}{(}{{(}{{InputStream}}{)}{null}}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{null}{,}{null}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{try}{{{}{{{SerializationUtils}{.}{serialize}{(}{iMap}{,}{null}{)}}{;}}{}}}{{catch}{(}{{{NullPointerException}}{ex}}{)}{{{}{return;}{}}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmptyOrNull}{(}{className}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmptyOrNull}{(}{className}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmptyOrNull}{(}{name}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{StringUtils}{.}{isEmptyOrNull}{(}{className}{)}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{Field}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{Field}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{{Field}{.}{setAccessible}{(}{fields}{,}{true}{)}}{;}}}
{AST_ROOT_SC2NF{{try}{{{}{{{method}{=}{{{interfaces}{[}{i}{]}}{.}{getDeclaredMethod}{(}{methodName}{,}{parameterTypes}{)}}}{;}}{}}}{{catch}{(}{{{NoSuchMethodException}}{e}}{)}{{{}{;}{}}}}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{RandomUtils.JVM_RANDOM}{.}{setSeed}{(}{NUMBER_CONSTANT}{)}}{;}}{{{fail}{(}{STRING_CONSTANT}{)}}{;}}{}}}{{catch}{(}{{{UnsupportedOperationException}}{ex}}{)}{{{}{;}{}}}}}{}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{catch}{(}{{{NumberFormatException}}{ex}}{)}{{{}{;}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{comparison}{!=}{NUMBER_CONSTANT}}{)}{{{}{{return}{this}{;}}{}}}}{{{comparison}{=}{superHashCode}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{rule}{=}{{new}{{StringLiteral}}{(}{{new}{{String}}{(}{sub}{)}}{)}}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iTotal}{=}{{{iTotal}{*}{iConstant}}{+}{{(}{int}{)}{value}}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iTotal}{=}{{{iTotal}{*}{iConstant}}{+}{{(}{int}{)}{value}}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{iTotal}{=}{{{iTotal}{*}{iConstant}}{+}{{(}{int}{)}{value}}}}{;}}{{return}{this}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{{(}{int}{)}{CHAR_CONS}}{,}{{Entities.XML}{.}{entityValue}{(}{STRING_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{{Entities.iso8859_1}{[}{{i}{%}{Entities.iso8859_1.length}}{]}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{String}}{{entityValue}{=}{{{Entities.html40}{[}{{i}{%}{Entities.html40.length}}{]}}{[}{NUMBER_CONSTANT}{]}}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{new}{{BigDecimal}}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{new}{{BigInteger}}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Long}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Integer}{.}{decode}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Double}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{str}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Float}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{new}{{BigInteger}}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Long}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Integer}{.}{decode}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Double}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{!}{{validateNumber}{(}{str}{)}}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{Float}{.}{valueOf}{(}{str}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{{f}{.}{nextStringIdentifier}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{random}{(}{count}{,}{start}{,}{end}{,}{letters}{,}{numbers}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{out}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{out}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{array1}{==}{null}}{||}{{array2}{==}{null}}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{causeFrames}{==}{null}}{||}{{wrapperFrames}{==}{null}}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{writer}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{stream}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{objectData}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{inputStream}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{outputStream}{==}{null}}{)}{{{}{{throw}{{new}{{NullArgumentException}}{(}{STRING_CONSTANT}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{notNull}{(}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{Validate}{.}{isTrue}{(}{false}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{shortName}{=}{{ClassUtils}{.}{getShortClassName}{(}{iEnumClass}{)}}}{;}}{{{iToString}{=}{{shortName}{+}{STRING_CONSTANT}{+}{{getName}{()}}{+}{STRING_CONSTANT}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{Collections}{.}{unmodifiableList}{(}{entry.list}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{Collections}{.}{unmodifiableMap}{(}{entry.map}{)}}{;}}}
{AST_ROOT_SC2NF{{{text}{=}{{DateFormatUtils.ISO_DATETIME_TIMEZONE_FORMAT}{.}{format}{(}{cal}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{DateUtils.UTC_TIMEZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{DateUtils.UTC_TIMEZONE}{,}{locale}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{date}{,}{pattern}{,}{DateUtils.UTC_TIMEZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{{new}{{Date}}{(}{millis}{)}}{,}{pattern}{,}{DateUtils.UTC_TIMEZONE}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{at}{==}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{STRING_CONSTANT}{:}{str}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{repeat}{<=}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{lastIdx}{<=}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{strLen}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idx}{!=}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{str}{.}{substring}{(}{NUMBER_CONSTANT}{,}{{idx}{+}{{sep}{.}{length}{()}}}{)}}{;}}{}}}{else}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{idx}{!=}{{-}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{str}{.}{substring}{(}{idx}{)}}{;}}{}}}{else}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{ch}{==}{CHAR_CONS}}{||}{{ch}{==}{CHAR_CONS}}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}{else}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{overlay}{==}{null}}{)}{{{}{{{overlay}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{separator}{==}{null}}{)}{{{}{{{separator}{=}{STRING_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{separator}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{len}{<}{NUMBER_CONSTANT}}{||}{{pos}{>}{{str}{.}{length}{()}}}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{len}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{start}{>}{end}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{start}{>}{{str}{.}{length}{()}}}{)}{{{}{{return}{STRING_CONSTANT}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{STRING_CONSTANT}{:}{{strip}{(}{str}{,}{null}{)}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{STRING_CONSTANT}{:}{{str}{.}{trim}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{STRING_CONSTANT}{:}{{str}{.}{trim}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{greatestCommonDenominator}{(}{{Math}{.}{abs}{(}{numerator}{)}}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{int}{{gcd}{=}{{greatestCommonDenominator}{(}{{Math}{.}{abs}{(}{numerator}{)}}{,}{denominator}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{try}{{{}{{{Fraction}{.}{getFraction}{(}{null}{)}}{;}}{}}}{{catch}{(}{{{IllegalArgumentException}}{ex}}{)}{{{}}}}}{}}}}
{AST_ROOT_SC2NF{{{assertEquals}{(}{STRING_CONSTANT}{,}{STRING_CONSTANT}{,}{{StringUtils}{.}{overlayString}{(}{SENTENCE}{,}{FOO}{,}{NUMBER_CONSTANT}{,}{NUMBER_CONSTANT}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{int}{{at}{=}{{differenceAt}{(}{str1}{,}{str2}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{int}{{index}{=}{{binarySearch}{(}{value}{)}}}{;}}{{if}{(}{{index}{<}{NUMBER_CONSTANT}}{)}{{return}{null}{;}}}{{return}{{names}{[}{index}{]}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{insertAt}{>}{NUMBER_CONSTANT}}{)}{return;}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{==}{null}}{)}{{return}{{-}{NUMBER_CONSTANT}}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{{value}{==}{null}}{)}{{return}{{-}{NUMBER_CONSTANT}}{;}}}}
{AST_ROOT_SC2NF{{if}{(}{escapeSingleQuote}{)}{{{out}{.}{write}{(}{CHAR_CONS}{)}}{;}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toString}{(}{object}{,}{style}{,}{outputTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toString}{(}{object}{,}{style}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{toString}{(}{object}{,}{null}{,}{false}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ReflectionToStringBuilder}{.}{toString}{(}{object}{,}{style}{,}{outputTransients}{,}{reflectUpToClass}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{ReflectionToStringBuilder}{.}{toString}{(}{object}{,}{style}{,}{outputTransients}{,}{null}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{List}}{{list}{=}{{ColorEnum}{.}{getEnumList}{()}}}{;}}}
{AST_ROOT_SC2NF{{{}{{{flush}{()}}{;}}{{return}{{{(}{{(}{{StringWriter}}{)}{out}}{)}}{.}{toString}{()}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{StringUtils}{.}{isEmpty}{(}{str}{)}}{||}{{StringUtils}{.}{isEmpty}{(}{searchChars}{)}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{StringUtils}{.}{isEmpty}{(}{str}{)}}{||}{{StringUtils}{.}{isEmpty}{(}{remove}{)}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{StringUtils}{.}{isEmpty}{(}{str}{)}}{||}{{StringUtils}{.}{isEmpty}{(}{remove}{)}}}{)}{{{}{{return}{str}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{StringUtils}{.}{isEmpty}{(}{str}{)}}{||}{{StringUtils}{.}{isEmpty}{(}{searchChars}{)}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{if}{(}{{{{StringUtils}{.}{isEmpty}{(}{str}{)}}{||}{{searchChars}{==}{null}}}{||}{{searchChars.length}{==}{NUMBER_CONSTANT}}}{)}{{{}{{return}{{-}{NUMBER_CONSTANT}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isASCIINumeric}{(}{ch}{)}}{==}{false}}{)}{{{}{{return}{defaultValue}{;}}{}}}}{{return}{{(}{{ch}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{if}{(}{{{isASCIINumeric}{(}{ch}{)}}{==}{false}}{)}{{{}{{throw}{{new}{{IllegalArgumentException}}{(}{{STRING_CONSTANT}{+}{ch}{+}{STRING_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{ch}{<}{NUMBER_CONSTANT}}{)}{{{}{{return}{{CHAR_ARRAY}{[}{ch}{]}}{;}}{}}}{else}{{{}{{return}{{new}{{Character}}{(}{ch}{)}}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{super}{.}{equals}{(}{obj}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{MutableNumber}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{value}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{{this}{.}{value}}{=}{value}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{{setValue}{(}{{new}{{Long}}{(}{value}{)}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{{this}{.}{value}}{.}{equals}{(}{obj}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{MutableNumber}{()}{{{}{``;}}{super}{}}}}}
{AST_ROOT_SC2NF{{public}{{Object}}{getValue}{()}{{{}{{return}{{new}{{Float}}{(}{{this}{.}{value}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{GregorianCalendar}}{{gval}{=}{{new}{{GregorianCalendar}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{GregorianCalendar}}{{gval}{=}{{new}{{GregorianCalendar}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{GregorianCalendar}}{{gval}{=}{{new}{{GregorianCalendar}}{()}}}{;}}}
{AST_ROOT_SC2NF{{{suite}{.}{addTest}{(}{{MutableIntegerTest}{.}{suite}{()}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{split}{(}{str}{,}{separatorChars}{,}{{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{final}{byte}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{byte}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{short}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{holder}}}
{AST_ROOT_SC2NF{{final}{int}{mask}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Boolean}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Float}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Double}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Byte}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Short}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Integer}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Long}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{int}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{boolean}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{float}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{double}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{byte}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{char}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{short}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{long}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{{Object}}{[]}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{final}{{Object}}{array}}}
{AST_ROOT_SC2NF{{public}{EqualsBuilder}{()}{{{}{``;}}{super}{{{isEquals}{=}{true}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{{addToken}{(}{tokens}{,}{{new}{{String}}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{{this}{.}{value}}{=}{value}}{;}}{;}{}}}}
{AST_ROOT_SC2NF{{{}{{{++}{nEntries}}{;}}{{{markers}{.}{add}{(}{marker}{)}}{;}}{{{sources}{.}{add}{(}{source}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{long}{{splitTime}{=}{{watch}{.}{getTime}{()}}}{;}}}
{AST_ROOT_SC2NF{{if}{(}{{tokenLen}{>=}{NUMBER_CONSTANT}}{)}{{{}{{{rule}{=}{UnpaddedNumberField.INSTANCE_YEAR}}{;}}{}}}{else}{{{}{{{rule}{=}{TwoDigitYearField.INSTANCE}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{format}{(}{millis}{,}{format}{,}{true}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{.}{equals}{(}{type}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{.}{equals}{(}{type}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{.}{isAssignableFrom}{(}{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{type}{.}{isAssignableFrom}{(}{{{throwables}{[}{i}{]}}{.}{getClass}{()}}{)}}{)}{{{}{{return}{i}{;}}{}}}}{}}}}
{AST_ROOT_SC2NF{{public}{{Class}}{getThrowableClass}{()}{{{}{{return}{{{Exception}}{.}{class}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Exception}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Class}}{getThrowableClass}{()}{{{}{{return}{{{Error}}{.}{class}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{Error}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{Class}}{getThrowableClass}{()}{{{}{{return}{{{RuntimeException}}{.}{class}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{new}{{RuntimeException}}{(}{msg}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{{newArray}{[}{{lastIndex}{(}{newArray}{)}}{]}}{=}{element}}{;}}}
{AST_ROOT_SC2NF{{{}{{super}{(}{{argName}{+}{STRING_CONSTANT}}{)}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{DurationFormatUtils}{.}{formatISO}{(}{{getSplitTime}{()}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{{String}}{toString}{()}{{{}{{return}{{DurationFormatUtils}{.}{formatISO}{(}{{getTime}{()}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{DurationFormatUtils}{()}{{{}}}}}
{AST_ROOT_SC2NF{{{assertFalse}{(}{STRING_CONSTANT}{,}{{token}{.}{equals}{(}{{new}{{DurationFormatUtils.Token}}{(}{{new}{{Object}}{()}}{,}{NUMBER_CONSTANT}{)}}{)}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{arrayStart}{==}{null}}{)}{{{}{{{arrayStart}{=}{STRING_CONSTANT}}{;}}{}}}}{{{{this}{.}{arrayEnd}}{=}{arrayEnd}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{Object}}{[]}}{)}{{add}{(}{{(}{{Object}}{)}{array}}{,}{index}{,}{element}{,}{clss}{)}}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{defaultStr}{:}{str}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{EMPTY}{:}{str}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{EMPTY}{:}{{str}{.}{trim}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{{String}}{{ts}{=}{{trim}{(}{str}{)}}}{;}}{{return}{{(}{{{isEmpty}{(}{ts}{)}}{?}{null}{:}{ts}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{null}{:}{{str}{.}{trim}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{str}{==}{null}}{?}{EMPTY}{:}{{str}{.}{trim}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{{text}{[}{pos}{]}}{<=}{NUMBER_CONSTANT}}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{ch}{==}{{text}{[}{pos}{]}}}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{previousIndex}{()}{{{}{{return}{{(}{{tokenPos}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasPrevious}{()}{{{}{{{tokenize}{()}}{;}}{{return}{{(}{{tokenPos}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{hasNext}{()}{{{}{{{tokenize}{()}}{;}}{{return}{{(}{{tokenPos}{<}{tokens.length}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{str}{,}{NUMBER_CONSTANT}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{``;}}{super}{{if}{(}{{initialCapacity}{<=}{NUMBER_CONSTANT}}{)}{{{}{{{initialCapacity}{=}{NUMBER_CONSTANT}}{;}}{}}}}{{{buf}{=}{{new}{{char}{[}}{initialCapacity}{]}}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{min}{==}{range.min}}{&&}{{max}{==}{range.max}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{this}{.}{stopTime}}{-}{{this}{.}{startTime}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{min}{==}{range.min}}{&&}{{max}{==}{range.max}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{str}{==}{null}}{||}{{searchStr}{==}{null}}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{(}{{{str}{.}{indexOf}{(}{searchStr}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{isEmpty}{(}{str}{)}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{(}{{{str}{.}{indexOf}{(}{searchChar}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{{str}{.}{length}{()}}{==}{NUMBER_CONSTANT}}{?}{null}{:}{str}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{date1}{.}{getTime}{()}}{==}{{date2}{.}{getTime}{()}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{valueToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{indexOf}{(}{array}{,}{objectToFind}{)}}{!=}{{-}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{obj}{==}{null}}{?}{nullStr}{:}{{obj}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{obj}{==}{null}}{?}{STRING_CONSTANT}{:}{{obj}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{object}{!=}{null}}{?}{object}{:}{defaultValue}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{ch}{>=}{CHAR_CONS}}{&&}{{ch}{<=}{CHAR_CONS}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{ch}{<}{NUMBER_CONSTANT}}{||}{{ch}{==}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{ch}{>=}{NUMBER_CONSTANT}}{&&}{{ch}{<}{NUMBER_CONSTANT}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{ch}{<}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{{isAsciiNumeric}{(}{ch}{)}}{==}{false}}{)}{{{}{{return}{defaultValue}{;}}{}}}}{{return}{{(}{{ch}{-}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{ch}{-}{NUMBER_CONSTANT}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{cls}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{(}{{{{cls}{.}{getName}{()}}{.}{indexOf}{(}{INNER_CLASS_SEPARATOR_CHAR}{)}}{>=}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{==}{null}}{?}{STRING_CONSTANT}{:}{{value}{.}{toString}{()}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{public}{int}{hashCode}{()}{{{}{{return}{{(}{{{value}{==}{null}}{?}{NUMBER_CONSTANT}{:}{{value}{.}{hashCode}{()}}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{public}{boolean}{nextBoolean}{()}{{{}{{return}{{(}{{{Math}{.}{random}{()}}{>}{NUMBER_CONSTANT}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{compareMin}{<=}{NUMBER_CONSTANT}}{&&}{{compareMax}{>=}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{return}{{(}{{{compareMin}{<=}{NUMBER_CONSTANT}}{&&}{{compareMax}{>=}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{public}{static}{boolean}{isThrowableNested}{()}{{{}{{return}{{(}{{THROWABLE_CAUSE_METHOD}{!=}{null}}{)}}{;}}{}}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{xor}{(}{primitive}{)}}{?}{Boolean.TRUE}{:}{Boolean.FALSE}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{bool}{?}{trueString}{:}{falseString}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{nullString}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{trueString}{:}{falseString}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{nullValue}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{trueValue}{:}{falseValue}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{bool}{?}{trueValue}{:}{falseValue}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{nullValue}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{trueValue}{:}{falseValue}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{bool}{?}{trueValue}{:}{falseValue}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{NumberUtils.INTEGER_ONE}{:}{NumberUtils.INTEGER_ZERO}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{bool}{?}{NumberUtils.INTEGER_ONE}{:}{NumberUtils.INTEGER_ZERO}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{bool}{?}{NUMBER_CONSTANT}{:}{NUMBER_CONSTANT}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{value}{==}{null}}{)}{{{}{{return}{null}{;}}{}}}}{{return}{{(}{{{{value}{.}{intValue}{()}}{==}{NUMBER_CONSTANT}}{?}{Boolean.FALSE}{:}{Boolean.TRUE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{==}{NUMBER_CONSTANT}}{?}{Boolean.FALSE}{:}{Boolean.TRUE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{==}{NUMBER_CONSTANT}}{?}{false}{:}{true}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{valueIfNull}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{true}{:}{false}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{true}{:}{false}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{bool}{?}{Boolean.TRUE}{:}{Boolean.FALSE}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{false}{:}{true}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{if}{(}{{bool}{==}{null}}{)}{{{}{{return}{false}{;}}{}}}}{{return}{{(}{{{bool}{.}{booleanValue}{()}}{?}{true}{:}{false}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{{value}{>=}{min}}{&&}{{value}{<=}{max}}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{JAVA_VERSION_INT}{>=}{requiredVersion}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{JAVA_VERSION_FLOAT}{>=}{requiredVersion}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{{compareMin}{<=}{NUMBER_CONSTANT}}{&&}{{compareMax}{>=}{NUMBER_CONSTANT}}}{)}}{;}}}
{AST_ROOT_SC2NF{{{}{{return}{{(}{{holder}{&}{_mask}}{)}}{;}}{}}}}
{AST_ROOT_SC2NF{{return}{{(}{{set}{.}{equals}{(}{other.set}{)}}{)}}{;}}}

