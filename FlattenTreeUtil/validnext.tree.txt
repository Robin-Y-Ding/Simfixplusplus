(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=field}) (235{val=.}) (802{val=isSupported}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnsupportedOperationException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=name}) (200{val=+}) (13{val=CHAR_CONS})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (800{val=text}) (235{val=.}) (802{val=length}) (216{val=()})) (252{val=<=}) (27 (800{val=sampleLen}) (200{val=+}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=DurationPrinter})) (802{val=toPrinter}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=toFormatter}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=value}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=iPrintZeroSetting}) (236{val===}) (800{val=PRINT_ZERO_RARELY}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=iDurationConverters}) (204{val==}) (14 (304{val=new}) (43 (801{val=ConverterSet})) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=Converter})) (85{val=[]})) (4 (218{val={}) (40{val=ReadableDurationConverter.INSTANCE}) (234{val=,}) (40{val=StringConverter.INSTANCE}) (234{val=,}) (40{val=LongConverter.INSTANCE}) (234{val=,}) (219{val=}}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=iDurationConverters}) (204{val==}) (14 (304{val=new}) (43 (801{val=ConverterSet})) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=Converter})) (85{val=[]})) (4 (218{val={}) (40{val=ReadableDurationConverter.INSTANCE}) (234{val=,}) (40{val=ReadableIntervalConverter.INSTANCE}) (234{val=,}) (40{val=StringConverter.INSTANCE}) (234{val=,}) (40{val=LongConverter.INSTANCE}) (234{val=,}) (219{val=}}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=toString}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getMaximumValue}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getMinimumValue}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=DurationField})) (802{val=getLeapDurationField}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isSupported}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=getName}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=toString}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isSupported}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=getName}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=chrono}) (236{val===}) (800{val=iChronology})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=getAverageYearMonthType}) (214{val=(}) (800{val=chrono}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=appendDecimal}) (214{val=(}) (800{val=field}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendSignedDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=centuryOfEra}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (800{val=maxDigits}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=yearOfCentury}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (800{val=maxDigits}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=yearOfEra}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (800{val=maxDigits}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendSignedDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=year}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (800{val=maxDigits}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=monthOfYear}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=weekyear}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (800{val=maxDigits}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=weekOfWeekyear}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=dayOfYear}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=dayOfMonth}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=dayOfWeek}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=clockhourOfHalfday}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=hourOfHalfday}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=clockhourOfDay}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=hourOfDay}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=minuteOfDay}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=minuteOfHour}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=secondOfDay}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=secondOfMinute}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=millisOfDay}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=millisOfSecond}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (7 (800{val=ymd}) (204{val==}) (32 (32 (32 (32 (14 (304{val=new}) (43 (801{val=DateTimeFormatterBuilder})) (214{val=(}) (800{val=iChrono}) (215{val=)})) (235{val=.}) (802{val=append}) (214{val=(}) (32 (802{val=yearElement}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=append}) (214{val=(}) (32 (802{val=monthElement}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=append}) (214{val=(}) (32 (802{val=dayOfMonthElement}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toFormatter}) (216{val=()}))))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=scaled}) (204{val==}) (27 (27 (800{val=fraction}) (202{val=*}) (800{val=iScalar})) (203{val=/}) (800{val=iRangeMillis}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=saveField}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SavedField})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=text}) (234{val=,}) (800{val=locale}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=saveField}) (214{val=(}) (14 (304{val=new}) (43 (801{val=SavedField})) (214{val=(}) (800{val=field}) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=sort}) (214{val=(}) (800{val=savedFields}) (234{val=,}) (800{val=count}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (36 (214{val=(}) (16 (27 (800{val=value}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (36 (214{val=(}) (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=value}) (215{val=)})) (203{val=/}) (800{val=LOG_10})) (215{val=)}))) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=digits}) (204{val==}) (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=value}) (215{val=)})) (203{val=/}) (800{val=LOG_10})) (215{val=)}))) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=digits}) (204{val==}) (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=value}) (215{val=)})) (203{val=/}) (800{val=LOG_10})) (215{val=)}))) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=digits}) (204{val==}) (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=value}) (215{val=)})) (203{val=/}) (800{val=LOG_10})) (215{val=)}))) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=digits}) (204{val==}) (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=log}) (214{val=(}) (800{val=value}) (215{val=)})) (203{val=/}) (800{val=LOG_10})) (215{val=)}))) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateTime})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfEven}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateTime})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfCeiling}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateTime})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfFloor}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateTime})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundCeiling}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateTime})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundFloor}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=set}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=addWrapped}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (802{val=addTo}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=scalar}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfEven}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfCeiling}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfFloor}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundCeiling}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=DateOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundFloor}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=set}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=addWrapped}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=TimeOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfEven}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=TimeOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfCeiling}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=TimeOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundHalfFloor}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=TimeOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundCeiling}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=TimeOnly})) (59 (800{val=instant}) (204{val==}) (800{val=iInstant})) (227{val=;})) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=roundFloor}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=set}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=addWrapped}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=TimeOnly})) (215{val=)}) (32 (800{val=instant}) (235{val=.}) (802{val=withMillis}) (214{val=(}) (32 (800{val=iField}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=instant}) (235{val=.}) (802{val=getMillis}) (216{val=()})) (234{val=,}) (800{val=value}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=ImpreciseCutoverField}) (214{val=(}) (44 (43 (801{val=DateTimeField})) (800{val=julianField})) (234{val=,}) (44 (43 (801{val=DateTimeField})) (800{val=gregorianField})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=julianField}) (234{val=,}) (800{val=gregorianField}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=julianField}) (234{val=,}) (800{val=gregorianField}) (234{val=,}) (800{val=iCutoverInstant}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=appendSignedDecimal}) (214{val=(}) (32 (800{val=iChronoUTC}) (235{val=.}) (802{val=weekyear}) (216{val=()})) (234{val=,}) (800{val=minDigits}) (234{val=,}) (800{val=maxDigits}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=newYear}) (204{val==}) (27 (800{val=year}) (200{val=+}) (32 (800{val=FieldUtils}) (235{val=.}) (802{val=safeToInt}) (214{val=(}) (800{val=value}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=wrapped}) (204{val==}) (32 (800{val=FieldUtils}) (235{val=.}) (802{val=getWrappedValue}) (214{val=(}) (800{val=year}) (234{val=,}) (800{val=value}) (234{val=,}) (32 (802{val=getMinimumValue}) (216{val=()})) (234{val=,}) (32 (802{val=getMaximumValue}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=localToUTC}) (214{val=(}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getDateTimeMillis}) (214{val=(}) (800{val=year}) (234{val=,}) (800{val=monthOfYear}) (234{val=,}) (800{val=dayOfMonth}) (234{val=,}) (800{val=millisOfDay}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=localToUTC}) (214{val=(}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getTimeOnlyMillis}) (214{val=(}) (800{val=hourOfDay}) (234{val=,}) (800{val=minuteOfHour}) (234{val=,}) (800{val=secondOfMinute}) (234{val=,}) (800{val=millisOfSecond}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=instant}) (204{val==}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getTimeOnlyMillis}) (214{val=(}) (800{val=instant}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=newWeekyear}) (204{val==}) (27 (800{val=weekyear}) (200{val=+}) (32 (800{val=FieldUtils}) (235{val=.}) (802{val=safeToInt}) (214{val=(}) (800{val=value}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=wrapped}) (204{val==}) (32 (800{val=FieldUtils}) (235{val=.}) (802{val=getWrappedValue}) (214{val=(}) (800{val=weekyear}) (234{val=,}) (800{val=value}) (234{val=,}) (32 (802{val=getMinimumValue}) (216{val=()})) (234{val=,}) (32 (802{val=getMaximumValue}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeOfYear})) (59 (800{val=dtOfYear}) (204{val==}) (32 (802{val=getStartOfYear}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (40{val=fields.centuryOfEra}) (204{val==}) (14 (304{val=new}) (43 (801{val=DividedDateTimeField})) (214{val=(}) (40{val=ISOYearOfEraDateTimeField.INSTANCE}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=DurationType}) (235{val=.}) (802{val=getMillisType}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=DurationType}) (235{val=.}) (802{val=getAverageYearMonthType}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=PRECISE_YEAR_MONTH_TYPE}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=AVERAGE_YEAR_MONTH_TYPE}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=iChronology}) (204{val==}) (32 (802{val=selectChronologyUTC}) (214{val=(}) (800{val=chronology}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=iMillis}) (204{val==}) (32 (802{val=resetUnsupportedFields}) (214{val=(}) (32 (802{val=toLocalTime}) (214{val=(}) (32 (800{val=DateTimeUtils}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (234{val=,}) (800{val=chronology}) (234{val=,}) (800{val=iChronology}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (800{val=iChronology}) (204{val==}) (32 (802{val=selectChronology}) (214{val=(}) (800{val=chronology}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=iMillis}) (204{val==}) (32 (800{val=DateTimeUtils}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (800{val=iChronology}) (204{val==}) (32 (800{val=ISOChronology}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (800{val=zone}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=iMillis}) (204{val==}) (32 (800{val=DateTimeUtils}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (800{val=iChronology}) (204{val==}) (32 (800{val=ISOChronology}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})) (21 (7 (800{val=iMillis}) (204{val==}) (32 (800{val=DateTimeUtils}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (802{val=getZone}) (216{val=()})) (236{val===}) (40{val=DateTimeZone.UTC})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=UTC}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=provider}) (235{val=.}) (802{val=getZone}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (800{val=cProvider}) (235{val=.}) (802{val=getZone}) (214{val=(}) (800{val=id}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=DateTimeZone})) (802{val=getZone}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=MutableDateTime})) (214{val=(}) (32 (802{val=getMillis}) (214{val=(}) (800{val=base}) (234{val=,}) (32 (800{val=chronology}) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=chronology}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=MutableDateTime})) (214{val=(}) (32 (802{val=getMillis}) (214{val=(}) (800{val=base}) (234{val=,}) (800{val=zone}) (215{val=)})) (234{val=,}) (32 (32 (802{val=getChronology}) (216{val=()})) (235{val=.}) (802{val=withZone}) (214{val=(}) (800{val=zone}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=DateTime})) (214{val=(}) (32 (802{val=getMillis}) (214{val=(}) (800{val=base}) (234{val=,}) (32 (800{val=chronology}) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=chronology}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=DateTime})) (214{val=(}) (32 (802{val=getMillis}) (214{val=(}) (800{val=base}) (234{val=,}) (800{val=zone}) (215{val=)})) (234{val=,}) (32 (32 (802{val=getChronology}) (216{val=()})) (235{val=.}) (802{val=withZone}) (214{val=(}) (800{val=zone}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (62 (315{val=this}) (328{val=instanceof}) (43 (800{val=DateTime}))) (249{val=&&}) (27 (32 (802{val=getZone}) (216{val=()})) (236{val===}) (800{val=zone}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=DateTime})) (215{val=)}) (315{val=this})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=Object})) (802{val=readResolve}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getInstance}) (214{val=(}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (32 (802{val=getZone}) (216{val=()})) (235{val=.}) (802{val=getID}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Chronology})) (802{val=withUTC}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=withZone}) (214{val=(}) (40{val=DateTimeZone.UTC}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (802{val=getZone}) (216{val=()})) (236{val===}) (40{val=DateTimeZone.UTC})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=Object})) (802{val=readResolve}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getInstance}) (214{val=(}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=Object})) (802{val=readResolve}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getInstance}) (214{val=(}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertSame}) (214{val=(}) (800{val=zone}) (234{val=,}) (32 (32 (800{val=BuddhistChronology}) (235{val=.}) (802{val=getInstance}) (214{val=(}) (800{val=zone}) (215{val=)})) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertSame}) (214{val=(}) (800{val=zone}) (234{val=,}) (32 (32 (800{val=BuddhistChronology}) (235{val=.}) (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=DateTimeZone})) (802{val=getZone}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (800{val=msg}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=z}) (234{val=,}) (32 (800{val=dt}) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=Object})) (802{val=writeReplace}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Stub})) (214{val=(}) (32 (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getZone}) (216{val=()})) (236{val===}) (40{val=DateTimeZone.UTC})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=chrono}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=chrono}) (235{val=.}) (802{val=getZone}) (216{val=()})) (236{val===}) (800{val=zone}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=chrono}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=chrono}) (235{val=.}) (802{val=withZone}) (214{val=(}) (32 (800{val=DateTimeZone}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=chrono}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (800{val=DateTimeZone}) (235{val=.}) (802{val=getDefault}) (216{val=()}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (800{val=chrono}) (235{val=.}) (802{val=getZone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=DateTimeZone})) (802{val=getZone}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=Object})) (802{val=readResolve}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getInstance}) (214{val=(}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=zone}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=zone}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=zone}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (800{val=chrono}) (235{val=.}) (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=baseZone}) (204{val==}) (32 (800{val=base}) (235{val=.}) (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=base}) (236{val===}) (500{val=null})) (250{val=||}) (32 (802{val=isMatchingType}) (214{val=(}) (800{val=base}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getMillis}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=getMillis}) (214{val=(}) (800{val=base}) (234{val=,}) (32 (800{val=base}) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (800{val=chronology}) (235{val=.}) (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (800{val=original}) (235{val=.}) (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Chronology})) (802{val=withUTC}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=withZone}) (214{val=(}) (40{val=DateTimeZone.UTC}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (800{val=instant}) (235{val=.}) (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (800{val=chrono}) (235{val=.}) (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=zone}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=print}) (214{val=(}) (800{val=millisUTC}) (234{val=,}) (32 (800{val=chrono}) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=zone}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=zone}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=printTo}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=millisUTC}) (234{val=,}) (32 (800{val=chrono}) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=printTo}) (214{val=(}) (800{val=buf}) (234{val=,}) (800{val=millisUTC}) (234{val=,}) (32 (800{val=chrono}) (235{val=.}) (802{val=getZone}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (802{val=getZone}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=ZonedDurationField})) (59 (800{val=zonedField}) (204{val==}) (14 (304{val=new}) (43 (801{val=ZonedDurationField})) (214{val=(}) (800{val=field}) (234{val=,}) (32 (802{val=getZone}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DateTimeZone})) (59 (800{val=zone}) (204{val==}) (32 (802{val=getZone}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=localToUTC}) (214{val=(}) (32 (32 (802{val=getBase}) (216{val=()})) (235{val=.}) (802{val=getDateTimeMillis}) (214{val=(}) (27 (800{val=instant}) (200{val=+}) (32 (32 (802{val=getZone}) (216{val=()})) (235{val=.}) (802{val=getOffset}) (214{val=(}) (800{val=instant}) (215{val=)}))) (234{val=,}) (800{val=hourOfDay}) (234{val=,}) (800{val=minuteOfHour}) (234{val=,}) (800{val=secondOfMinute}) (234{val=,}) (800{val=millisOfSecond}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=suite}) (235{val=.}) (802{val=addTest}) (214{val=(}) (32 (800{val=UnivariateImplTest}) (235{val=.}) (800{val=suite}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setInitialCapacity}) (214{val=(}) (800{val=initialCapacity}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setInitialCapacity}) (214{val=(}) (800{val=initialCapacity}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=ExpandableDoubleArray})) (215{val=)}) (800{val=da})) (215{val=)})) (235{val=.}) (802{val=getInternalLength}) (216{val=()})) (230{val=<}) (36 (214{val=(}) (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (34{val=NUMBER_CONSTANT})) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=da}) (204{val==}) (14 (304{val=new}) (43 (801{val=ContractableDoubleArray})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=da}) (204{val==}) (14 (304{val=new}) (43 (801{val=ExpandableDoubleArray})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=synchronized}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=eDA}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=System}) (235{val=.}) (802{val=arraycopy}) (214{val=(}) (32 (800{val=eDA}) (235{val=.}) (802{val=getElements}) (216{val=()})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=copiedArray}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=eDA}) (235{val=.}) (802{val=getNumElements}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=void}) (802{val=tearDown}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (7 (800{val=da}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=ra}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (36 (214{val=(}) (27 (800{val=numElements}) (200{val=+}) (800{val=startIndex})) (215{val=)}))))
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (36 (214{val=(}) (27 (800{val=numElements}) (200{val=+}) (800{val=startIndex})) (215{val=)}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=clear}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (5 (39{val=double}) (85{val=[]})) (802{val=getElements}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=msg}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ArrayIndexOutOfBoundsException})) (214{val=(}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=getN}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=eDA}) (235{val=.}) (802{val=getNumElements}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=abstract}) (39{val=int}) (802{val=getN}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=n}) (204{val==}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (32 (800{val=u}) (235{val=.}) (802{val=getN}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=abstract}) (39{val=int}) (802{val=getWindowSize}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (27 (800{val=windowSize}) (242{val=!=}) (40{val=Univariate.INFINITE_WINDOW})))
(AST_ROOT_SC2NF (27 (800{val=windowSize}) (242{val=!=}) (40{val=Univariate.INFINITE_WINDOW})))
(AST_ROOT_SC2NF (27 (27 (800{val=windowSize}) (242{val=!=}) (40{val=Univariate.INFINITE_WINDOW})) (249{val=&&}) (27 (800{val=windowSize}) (230{val=<}) (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (27 (800{val=windowSize}) (242{val=!=}) (40{val=Univariate.INFINITE_WINDOW})) (249{val=&&}) (27 (800{val=windowSize}) (230{val=<}) (32 (800{val=list}) (235{val=.}) (802{val=size}) (216{val=()})))))
(AST_ROOT_SC2NF (27 (800{val=windowSize}) (242{val=!=}) (40{val=Univariate.INFINITE_WINDOW})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=CertifiedDataTest}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=lower}) (200{val=+}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=rand}) (235{val=.}) (802{val=nextDouble}) (216{val=()})) (202{val=*}) (36 (214{val=(}) (27 (27 (800{val=upper}) (201{val=-}) (800{val=lower})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=inverseCummulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=cummulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=exp}) (235{val=.}) (802{val=inverseCummulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=exp}) (235{val=.}) (802{val=cummulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getColumnDimension}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getRowDimension}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isSingular}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=isSquare}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getDeterminant}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=RealMatrix})) (802{val=transpose}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=windowSize}) (242{val=!=}) (40{val=Univariate.INFINITE_WINDOW})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getVariance}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (27 (800{val=variance}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (800{val=variance})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=variance}) (204{val==}) (27 (800{val=accum}) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (36 (214{val=(}) (27 (40{val=values.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=sum}) (214{val=(}) (800{val=values}) (215{val=)})) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=values.length}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Math}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (32 (802{val=sumLog}) (214{val=(}) (800{val=values}) (215{val=)})) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=values.length}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=Gamma}) (235{val=.}) (802{val=logGamma}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=Double.NaN}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=sumYY}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=geometricMean}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=mean}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=geoMean}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumLog}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=product}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumSq}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sum}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getWindowSize}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=clear}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getSumsq}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getSum}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getN}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getMin}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getMax}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getStandardDeviation}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getVariance}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getMean}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getKurtosis}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=sum}) (214{val=(}) (800{val=values}) (215{val=)})) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=values.length}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=geometricMean}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumLog}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=product}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumSq}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sum}) (214{val=(}) (800{val=values}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=values.length}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (21 (7 (800{val=variance}) (204{val==}) (16 (36 (214{val=(}) (27 (800{val=n}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (27 (800{val=m2}) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})))))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Math}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (48 (349{val=super}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (800{val=length}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (21 (7 (800{val=init}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (7 (800{val=lastVar}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=UnivariateImpl}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=clear}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=test}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=sum}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (203{val=/}) (36 (214{val=(}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (800{val=length})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=UnivariateRealSolverFactory}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (24 (303{val=for}) (214{val=(}) (58 (39{val=int}) (59 (800{val=i}) (204{val==}) (800{val=begin}))) (227{val=;}) (27 (800{val=i}) (230{val=<}) (800{val=l})) (227{val=;}) (37 (800{val=i}) (247{val=++})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=increment}) (214{val=(}) (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=root}) (204{val==}) (32 (800{val=UnivariateRealSolverUtil}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=rootFindingFunction}) (234{val=,}) (2 (801{val=bracket}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (234{val=,}) (2 (801{val=bracket}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=increment}) (214{val=(}) (44 (83{val=final}) (39{val=double}) (800{val=d})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=increment}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setPropertyName}) (214{val=(}) (44 (83{val=final}) (43 (801{val=String})) (800{val=string})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=propertyName}) (204{val==}) (800{val=string})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Object})) (800{val=o})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setPercentile}) (214{val=(}) (44 (83{val=final}) (39{val=double}) (800{val=p})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=percentile}) (204{val==}) (800{val=p})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MathConfigurationException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Throwable})) (800{val=throwable})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=throwable}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MathConfigurationException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=String})) (800{val=message})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=message}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=n})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=n})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=int}) (800{val=n})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (44 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (800{val=values})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MathException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Throwable})) (800{val=throwable})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=throwable}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MathException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=String})) (800{val=message})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=message}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (44 (83{val=final}) (39{val=double}) (800{val=d})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=msg}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ArrayIndexOutOfBoundsException})) (214{val=(}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=expansionFactor}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=msg}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (39{val=void}) (802{val=setUp}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=b}) (204{val==}) (32 (32 (800{val=DistributionFactory}) (235{val=.}) (802{val=newInstance}) (216{val=()})) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=factory}) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=factory}) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=factory}) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=factory}) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=factory}) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=factory}) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=factory}) (235{val=.}) (802{val=createBinomialDistribution}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=DistributionFactoryImpl}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=UnivariateRealSolverFactoryImpl}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=BeanListUnivariateImpl}) (214{val=(}) (44 (43 (801{val=List})) (800{val=list})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=list}) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ConvergenceException}) (214{val=(}) (44 (43 (801{val=String})) (800{val=message})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=message}) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setPropertyName}) (214{val=(}) (800{val=property}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setName}) (214{val=(}) (800{val=name}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MathConfigurationException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Throwable})) (800{val=throwable})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=throwable}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MathConfigurationException}) (214{val=(}) (44 (83{val=final}) (43 (801{val=String})) (800{val=message})) (215{val=)}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=message}) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=min}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=max}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=variance}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=mean}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumLog}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=prod}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sumSq}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=sum}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=DescriptiveStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=DescriptiveStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=DescriptiveStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=DescriptiveStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=DescriptiveStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=DescriptiveStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=BeanListUnivariateImpl})) (214{val=(}) (800{val=patientList}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=DescriptiveStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (800{val=list}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (800{val=externalList}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=stats}) (204{val==}) (14 (304{val=new}) (43 (801{val=StorelessDescriptiveStatisticsImpl})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=StorelessDescriptiveStatisticsImpl})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (800{val=externalList}) (234{val=,}) (800{val=transformers}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (27 (32 (800{val=MathUtils}) (235{val=.}) (802{val=sinh}) (214{val=(}) (800{val=a2}) (215{val=)})) (203{val=/}) (800{val=d})) (234{val=,}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=sin}) (214{val=(}) (800{val=b2}) (215{val=)})) (203{val=/}) (800{val=d})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=sin}) (214{val=(}) (800{val=a2}) (215{val=)})) (203{val=/}) (800{val=d})) (234{val=,}) (27 (32 (800{val=MathUtils}) (235{val=.}) (802{val=sinh}) (214{val=(}) (800{val=b2}) (215{val=)})) (203{val=/}) (800{val=d})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=value}) (204{val==}) (40{val=Double.NaN})) (227{val=;})) (21 (7 (800{val=n}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=URL})) (59 (800{val=url}) (204{val==}) (32 (32 (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=getResource}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=vs}) (235{val=.}) (802{val=setValuesFileURL}) (214{val=(}) (800{val=url}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=empiricalDistribution}) (235{val=.}) (802{val=load}) (214{val=(}) (800{val=url}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=vs}) (235{val=.}) (802{val=resetReplayFile}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=stats}) (204{val==}) (32 (800{val=SummaryStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=SummaryStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=SummaryStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=u}) (204{val==}) (32 (800{val=SummaryStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=abstract}) (39{val=long}) (802{val=getN}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=StatisticalSummary})) (800{val=sampleStats})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=list}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=AbstractDescriptiveStatistics}) (214{val=(}) (44 (39{val=int}) (800{val=window})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=setWindowSize}) (214{val=(}) (800{val=window}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=AbstractDescriptiveStatistics}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=sampleStats}) (204{val==}) (32 (800{val=SummaryStatistics}) (235{val=.}) (802{val=newInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (800{val=z}) (235{val=.}) (802{val=getImaginary}) (216{val=()})) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=t})) (215{val=)}))) (234{val=,}) (27 (32 (800{val=MathUtils}) (235{val=.}) (802{val=indicator}) (214{val=(}) (800{val=b}) (215{val=)})) (202{val=*}) (800{val=t})) (215{val=)})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=double}) (802{val=getMean}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=Mean})) (214{val=(}) (800{val=secondMoment}) (215{val=)})) (235{val=.}) (802{val=getResult}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=empiricalDistribution}) (235{val=.}) (802{val=load}) (214{val=(}) (800{val=url}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testNext}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=tstGen}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=tstDoubleGen}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Number})) (215{val=)}) (32 (800{val=PropertyUtils}) (235{val=.}) (802{val=getProperty}) (214{val=(}) (800{val=o}) (234{val=,}) (32 (802{val=getPropertyName}) (216{val=()})) (215{val=)}))) (215{val=)})) (235{val=.}) (802{val=doubleValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=p})) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=f}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=x})) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (32 (32 (800{val=DistributionFactory}) (235{val=.}) (802{val=newInstance}) (216{val=()})) (235{val=.}) (802{val=createGammaDistribution}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)})) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (32 (32 (800{val=DistributionFactory}) (235{val=.}) (802{val=newInstance}) (216{val=()})) (235{val=.}) (802{val=createGammaDistribution}) (214{val=(}) (800{val=a}) (234{val=,}) (800{val=b}) (215{val=)})) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=b}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testcumulativeProbability8}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability999}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability001}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=getSlopeStdErr}) (216{val=()})) (202{val=*}) (32 (32 (802{val=getTDistribution}) (216{val=()})) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (27 (800{val=alpha}) (203{val=/}) (34{val=NUMBER_CONSTANT}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=tDistribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (38 (201{val=-}) (800{val=t})) (234{val=,}) (800{val=t}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=tDistribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (38 (201{val=-}) (800{val=t})) (234{val=,}) (800{val=t}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=chiSquaredDistribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (32 (802{val=chiSquare}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=observed}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=chiSquare}) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=p})) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=chiSquare}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=x})) (234{val=,}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=z}) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (800{val=PRECISION}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=z}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (27 (32 (800{val=z}) (235{val=.}) (802{val=getMean}) (216{val=()})) (200{val=+}) (32 (800{val=z}) (235{val=.}) (802{val=getStandardDeviation}) (216{val=()}))) (215{val=)})) (234{val=,}) (800{val=PRECISION}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (32 (800{val=z}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=mu}) (215{val=)})) (234{val=,}) (800{val=PRECISION}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=exp}) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=exp}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=TestUtils}) (235{val=.}) (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbabilityPositive}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (40{val=Double.NaN}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbabilityOne}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (40{val=Double.POSITIVE_INFINITY}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbabilityZero}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbabilityZero}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability900}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability950}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability975}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability990}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability999}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability100}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability050}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability025}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability010}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability001}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability900}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability950}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability975}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability990}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability999}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability100}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability050}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability025}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability010}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability001}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=h}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability1}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability0}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability999}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (800{val=p}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=double}) (59 (800{val=actual}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=actual}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testCumulativeProbability999}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testProbability}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInverseCumulativeProbability999}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=testValue}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=PolynomialFunction})) (59 (800{val=f}) (204{val==}) (14 (304{val=new}) (43 (801{val=PolynomialFunction})) (214{val=(}) (800{val=c}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MathException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fail}) (214{val=(}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (2 (801{val=bp}) (221{val=[}) (800{val=row}) (222{val=]})) (221{val=[}) (800{val=col}) (222{val=]})) (204{val==}) (2 (2 (801{val=bv}) (221{val=[}) (2 (801{val=permutation}) (221{val=[}) (800{val=row}) (222{val=]})) (222{val=]})) (221{val=[}) (800{val=col}) (222{val=]}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=luDecompose}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=InvalidMatrixException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=RealMatrixImpl})) (214{val=(}) (800{val=testData2}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=luDecompose}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=test}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=sum}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (203{val=/}) (36 (214{val=(}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (800{val=length})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=AbstractDescriptiveStatistics}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=ex}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=ExpandableDoubleArray})) (59 (800{val=eDA3}) (204{val==}) (32 (802{val=newInstance}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ExpandableDoubleArray})) (59 (800{val=eDA2}) (204{val==}) (32 (802{val=newInstance}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (7 (800{val=result}) (204{val==}) (32 (800{val=freqTable}) (235{val=.}) (802{val=getCount}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Character})) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (7 (800{val=result}) (204{val==}) (32 (800{val=freqTable}) (235{val=.}) (802{val=getCount}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Long})) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (7 (800{val=result}) (204{val==}) (32 (800{val=freqTable}) (235{val=.}) (802{val=getCount}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Long})) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (7 (800{val=result}) (204{val==}) (32 (800{val=freqTable}) (235{val=.}) (802{val=getCount}) (214{val=(}) (800{val=v}) (215{val=)}))) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ClassCastException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (43 (801{val=TDistribution})) (59 (800{val=tDistribution}) (204{val==}) (32 (32 (802{val=getDistributionFactory}) (216{val=()})) (235{val=.}) (802{val=createTDistribution}) (214{val=(}) (800{val=degreesOfFreedom}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TDistribution})) (59 (800{val=tDistribution}) (204{val==}) (32 (32 (802{val=getDistributionFactory}) (216{val=()})) (235{val=.}) (802{val=createTDistribution}) (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ChiSquaredDistribution})) (59 (800{val=chiSquaredDistribution}) (204{val==}) (32 (32 (802{val=getDistributionFactory}) (216{val=()})) (235{val=.}) (802{val=createChiSquareDistribution}) (214{val=(}) (800{val=df}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ChiSquaredDistribution})) (59 (800{val=chiSquaredDistribution}) (204{val==}) (32 (32 (802{val=getDistributionFactory}) (216{val=()})) (235{val=.}) (802{val=createChiSquareDistribution}) (214{val=(}) (27 (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=expected.length})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (7 (800{val=eDA}) (204{val==}) (14 (304{val=new}) (43 (801{val=ResizableDoubleArray})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=setWindowSize}) (214{val=(}) (800{val=window}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (32 (800{val=freqTable}) (235{val=.}) (802{val=keySet}) (216{val=()})) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=freqTable}) (204{val==}) (14 (304{val=new}) (43 (801{val=TreeMap})) (214{val=(}) (800{val=comparator}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=det}) (204{val==}) (800{val=parity})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=clear}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=moment.n}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (27 (40{val=moment.m2}) (203{val=/}) (36 (214{val=(}) (27 (11 (214{val=(}) (39{val=double}) (215{val=)}) (40{val=moment.n})) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=sumSq}) (237{val=+=}) (27 (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})) (202{val=*}) (2 (801{val=values}) (221{val=[}) (800{val=i}) (222{val=]})))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=variance}) (235{val=.}) (802{val=increment}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=variance}) (204{val==}) (14 (304{val=new}) (43 (801{val=Variance})) (214{val=(}) (800{val=m2}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Throwable})) (800{val=t})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=UnivariateRealSolverFactoryImpl})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Throwable})) (800{val=t})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=DistributionFactoryImpl})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Throwable})) (800{val=t})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=DescriptiveStatisticsImpl})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=long}) (802{val=getN}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=resetFunctionValueAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getFunctionValueAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=resetRelativeAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getRelativeAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=resetAbsoluteAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=double}) (802{val=getAbsoluteAccuracy}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=int}) (802{val=getMaximalIterationCount}) (214{val=(}) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Math}) (235{val=.}) (802{val=exp}) (214{val=(}) (27 (32 (800{val=sumOfLogs}) (235{val=.}) (802{val=evaluate}) (214{val=(}) (800{val=values}) (234{val=,}) (800{val=begin}) (234{val=,}) (800{val=length}) (215{val=)})) (203{val=/}) (11 (214{val=(}) (39{val=double}) (215{val=)}) (800{val=length}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=sumOfLogs}) (235{val=.}) (802{val=increment}) (214{val=(}) (800{val=d}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=os}) (237{val=+=}) (27 (32 (800{val=m}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=os}) (237{val=+=}) (27 (32 (800{val=m}) (235{val=.}) (802{val=getEntry}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=j}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getInstance}) (216{val=()})) (235{val=.}) (802{val=format}) (214{val=(}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=InvalidMatrixException}) (214{val=(}) (44 (43 (801{val=String})) (800{val=message})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=message}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (32 (32 (800{val=DistributionFactory}) (235{val=.}) (802{val=newInstance}) (216{val=()})) (235{val=.}) (802{val=createPoissonDistribution}) (214{val=(}) (800{val=DEFAULT_TEST_POISSON_PARAMETER}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (32 (32 (800{val=DistributionFactory}) (235{val=.}) (802{val=newInstance}) (216{val=()})) (235{val=.}) (802{val=createPoissonDistribution}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=t}) (204{val==}) (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (802{val=homoscedasticT}) (214{val=(}) (800{val=m1}) (234{val=,}) (800{val=m2}) (234{val=,}) (800{val=v1}) (234{val=,}) (800{val=v2}) (234{val=,}) (800{val=n1}) (234{val=,}) (800{val=n2}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RandomDataTest}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (215{val=)}) (227{val=;})) (21 (7 (800{val=randomData}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataImpl})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=rand}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=rand}) (204{val==}) (14 (304{val=new}) (43 (801{val=JDKRandomGenerator})) (216{val=()}))) (227{val=;})) (219{val=}}))) (21 (32 (800{val=rand}) (235{val=.}) (802{val=setSeed}) (214{val=(}) (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=rand}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=rand}) (204{val==}) (14 (304{val=new}) (43 (801{val=JDKRandomGenerator})) (216{val=()}))) (227{val=;})) (219{val=}}))) (21 (32 (800{val=rand}) (235{val=.}) (802{val=setSeed}) (214{val=(}) (800{val=seed}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=rand}) (204{val==}) (32 (802{val=getRan}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=rand}) (204{val==}) (32 (802{val=getRan}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=rand}) (204{val==}) (32 (802{val=getRan}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=rand}) (204{val==}) (32 (802{val=getRan}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=rand}) (204{val==}) (32 (802{val=getRan}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomGenerator})) (59 (800{val=ran}) (204{val==}) (32 (802{val=getRan}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createBigIdentityMatrix}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=getRowDimension}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealIdentityMatrix}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=getRowDimension}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=MathUtils}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=float}) (59 (800{val=sign}) (204{val==}) (32 (802{val=indicator}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=sign}) (204{val==}) (32 (802{val=indicator}) (214{val=(}) (800{val=x}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=numberOfSuccesses}) (231{val=>}) (800{val=populationSize})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (27 (800{val=x}) (230{val=<}) (800{val=a})) (250{val=||}) (27 (800{val=a}) (230{val=<}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (27 (27 (800{val=a}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=x}) (231{val=>}) (800{val=a}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=AbstractRandomGeneratorTest}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (215{val=)}) (227{val=;})) (21 (7 (800{val=randomData}) (204{val==}) (14 (304{val=new}) (43 (801{val=RandomDataImpl})) (214{val=(}) (800{val=testGenerator}) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=fm}) (202{val=*}) (800{val=fmin})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=min}) (204{val==}) (800{val=m})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=max}) (204{val==}) (800{val=m})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=z}) (204{val==}) (14 (304{val=new}) (43 (801{val=Complex})) (214{val=(}) (800{val=nan}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=result}) (204{val==}) (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (32 (802{val=getRSquare}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=sumYY}) (201{val=-}) (27 (27 (800{val=sumXY}) (202{val=*}) (800{val=sumXY})) (203{val=/}) (800{val=sumXX}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Number})) (59 (800{val=number}) (204{val==}) (32 (800{val=format}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=source}) (234{val=,}) (800{val=pos}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=format}) (235{val=.}) (800{val=format}) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=toAppendTo}) (234{val=,}) (800{val=pos}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=FastSineTransformer}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=FastFourierTransformer}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=FastCosineTransformer}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Rotation})) (214{val=(}) (38 (201{val=-}) (800{val=q0})) (234{val=,}) (800{val=q1}) (234{val=,}) (800{val=q2}) (234{val=,}) (800{val=q3}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=eventOccurred}) (214{val=(}) (44 (39{val=double}) (800{val=t})) (234{val=,}) (44 (5 (39{val=double}) (85{val=[]})) (800{val=y})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=sign}) (204{val==}) (38 (201{val=-}) (800{val=sign}))) (227{val=;})) (41 (329{val=return}) (40{val=SwitchingFunction.RESET_STATE}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=v}) (204{val==}) (32 (800{val=Vector3D}) (235{val=.}) (802{val=multiply}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=v}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=v1}) (204{val==}) (32 (800{val=Vector3D}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=v1}) (234{val=,}) (800{val=v2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=v1}) (204{val==}) (32 (800{val=Vector3D}) (235{val=.}) (802{val=subtract}) (214{val=(}) (800{val=v1}) (234{val=,}) (800{val=v2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=p}) (204{val==}) (11 (214{val=(}) (43 (40{val=Polynomial.Rational})) (215{val=)}) (32 (800{val=p}) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=lcm}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=u}) (235{val=.}) (802{val=setElement}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=u}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=b}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=mean}) (204{val==}) (32 (800{val=sample}) (235{val=.}) (802{val=getMean}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=VectorialSampleStatisticsTest}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (215{val=)}) (227{val=;})) (21 (7 (800{val=points}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (39{val=double}) (85{val=[]})) (802{val=getArray}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (39{val=double}) (85{val=[]})) (215{val=)}) (32 (800{val=internalArray}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=name}) (204{val==}) (32 (800{val=Integer}) (235{val=.}) (802{val=toString}) (214{val=(}) (800{val=k}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=TestProblem})) (85{val=[]})) (215{val=)}) (32 (800{val=problems}) (235{val=.}) (802{val=toArray}) (214{val=(}) (3 (304{val=new}) (5 (43 (801{val=TestProblem})) (221{val=[})) (32 (800{val=problems}) (235{val=.}) (802{val=size}) (216{val=()})) (222{val=]})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=d}) (235{val=.}) (802{val=setElement}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=d}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=b}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (22 (2 (801{val=simplex}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (800{val=cost})) (231{val=>}) (40{val=pointCostPair.cost})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=PointCostPair})) (85{val=[]})) (215{val=)}) (32 (800{val=minima}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (2 (801{val=simplex}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (14 (304{val=new}) (43 (801{val=PointCostPair})) (214{val=(}) (2 (801{val=vertices}) (221{val=[}) (800{val=i}) (222{val=]})) (234{val=,}) (40{val=Double.NaN}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (2 (801{val=simplex}) (221{val=[}) (800{val=i}) (222{val=]})) (204{val==}) (14 (304{val=new}) (43 (801{val=PointCostPair})) (214{val=(}) (800{val=vertex}) (234{val=,}) (40{val=Double.NaN}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RandomVectorGenerator})) (59 (800{val=rvg}) (204{val==}) (14 (304{val=new}) (43 (801{val=CorrelatedRandomVectorGenerator})) (214{val=(}) (32 (800{val=statistics}) (235{val=.}) (802{val=getMean}) (216{val=()})) (234{val=,}) (32 (800{val=statistics}) (235{val=.}) (802{val=getCovarianceMatrix}) (214{val=(}) (500{val=null}) (215{val=)})) (234{val=,}) (14 (304{val=new}) (43 (801{val=UniformRandomGenerator})) (214{val=(}) (800{val=seed}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (27 (40{val=largest.cost}) (201{val=-}) (40{val=smallest.cost})) (215{val=)})) (230{val=<}) (800{val=threshold})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=BilinearPattern})) (800{val=pattern})))
(AST_ROOT_SC2NF (60 (43 (801{val=WeightedMeasurement})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=MyMeasurement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=theoretical}) (216{val=()})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=WeightedMeasurement})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=MyMeasurement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=theoretical}) (216{val=()})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=WeightedMeasurement})) (59 (800{val=m}) (204{val==}) (14 (304{val=new}) (43 (801{val=MyMeasurement})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (32 (802{val=theoretical}) (216{val=()})) (200{val=+}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (315{val=this}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=tearDown}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=fitter}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=AbstractCurveFitterTest}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (215{val=)}) (227{val=;})) (21 (7 (800{val=fitter}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fail}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=r}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (61 (350{val=while}) (214{val=(}) (9{val=true}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=sum}) (204{val==}) (22 (32 (800{val=sampler}) (235{val=.}) (802{val=nextSamplePoint}) (216{val=()})) (235{val=.}) (800{val=y}))) (227{val=;})) (219{val=}}))) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ExhaustedSampleException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=mapper}) (235{val=.}) (802{val=getDataArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=data}) (204{val==}) (32 (800{val=mapper}) (235{val=.}) (802{val=getDataArray}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (22 (32 (800{val=mapper}) (235{val=.}) (802{val=getDataArray}) (216{val=()})) (235{val=.}) (800{val=length})) (236{val===}) (800{val=size})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (61 (350{val=while}) (214{val=(}) (9{val=true}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=sum}) (204{val==}) (22 (32 (800{val=sampler}) (235{val=.}) (802{val=nextSamplePoint}) (216{val=()})) (235{val=.}) (800{val=y}))) (227{val=;})) (219{val=}}))) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ExhaustedSampleException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=originalCost}) (204{val==}) (22 (2 (801{val=original}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (800{val=cost}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=EstimatedParameter})) (85{val=[]})) (215{val=)}) (32 (800{val=coefficients}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=EstimatedParameter})) (85{val=[]})) (215{val=)}) (32 (800{val=coefficients}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=estimator}) (235{val=.}) (802{val=estimate}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (27 (40{val=largest.cost}) (201{val=-}) (40{val=smallest.cost})) (215{val=)})) (230{val=<}) (800{val=threshold})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (40{val=optimum.cost}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (40{val=optimum.cost}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=estimatedMean}) (204{val==}) (32 (800{val=sample}) (235{val=.}) (802{val=getMean}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=l}) (235{val=.}) (802{val=setElement}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=l}) (235{val=.}) (802{val=solve}) (214{val=(}) (800{val=b}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (39{val=double}) (85{val=[]})) (59 (800{val=estimatedMean}) (204{val==}) (32 (800{val=sample}) (235{val=.}) (802{val=getMean}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RationalNumber})) (59 (800{val=newCoeff}) (204{val==}) (32 (2 (801{val=a}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=multiply}) (214{val=(}) (800{val=lcm}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (39{val=double}) (85{val=[]})) (215{val=)}) (32 (800{val=interpolatedState}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ScalarSampleStatisticsTest}) (214{val=(}) (44 (43 (801{val=String})) (800{val=name})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=name}) (215{val=)}) (227{val=;})) (21 (7 (800{val=points}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (5 (43 (801{val=SwitchingFunction})) (85{val=[]})) (802{val=getSwitchingFunctions}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (3 (304{val=new}) (5 (43 (801{val=SwitchingFunction})) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MaxIterationsExceededException})) (214{val=(}) (800{val=maxIterations}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ConvergenceException})) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (32 (802{val=buildMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (234{val=,}) (40{val=Locale.US}) (215{val=)})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (32 (802{val=buildMessage}) (214{val=(}) (800{val=pattern}) (234{val=,}) (800{val=arguments}) (234{val=,}) (40{val=Locale.US}) (215{val=)})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (36 (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=BigDecimal})) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=toString}) (214{val=(}) (800{val=x}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=setScale}) (214{val=(}) (800{val=scale}) (234{val=,}) (800{val=roundingMethod}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=doubleValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=getSlopeStdErr}) (216{val=()})) (202{val=*}) (32 (800{val=distribution}) (235{val=.}) (802{val=inverseCumulativeProbability}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (27 (800{val=alpha}) (203{val=/}) (34{val=NUMBER_CONSTANT}))) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=p}) (234{val=,}) (14 (304{val=new}) (43 (801{val=NormalDistributionImpl})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=HypergeometricDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=HypergeometricDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HypergeometricDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HypergeometricDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HypergeometricDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ChiSquaredDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=PascalDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=PascalDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistributionImpl})) (214{val=(}) (800{val=DEFAULT_TEST_POISSON_PARAMETER}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistributionImpl})) (214{val=(}) (800{val=DEFAULT_TEST_POISSON_PARAMETER}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=PoissonDistribution})) (59 (800{val=dist}) (204{val==}) (14 (304{val=new}) (43 (801{val=PoissonDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BinomialDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BinomialDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setDistribution}) (214{val=(}) (14 (304{val=new}) (43 (801{val=TDistributionImpl})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=testStatistic}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getTTest}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setUp}) (216{val=()}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUp}) (216{val=()})) (227{val=;})) (21 (7 (800{val=testStatistic}) (204{val==}) (32 (800{val=TestUtils}) (235{val=.}) (802{val=getChiSquareTest}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=m}) (235{val=.}) (802{val=operate}) (214{val=(}) (800{val=testVector}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (227{val=;}) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MathUtils}) (235{val=.}) (802{val=factorial}) (214{val=(}) (800{val=test}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=FastFourierTransformer}) (235{val=.}) (802{val=scaleArray}) (214{val=(}) (800{val=x2}) (234{val=,}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (32 (800{val=Math}) (235{val=.}) (802{val=sqrt}) (214{val=(}) (40{val=x2.length}) (215{val=)}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Percentile})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (36 (214{val=(}) (27 (40{val=internalArray.length}) (203{val=/}) (36 (214{val=(}) (11 (214{val=(}) (39{val=float}) (215{val=)}) (800{val=numElements})) (215{val=)}))) (215{val=)})) (231{val=>}) (800{val=contractionCriteria})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=normProduct}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ArithmeticException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=stats}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (32 (802{val=createDescriptiveStatistics}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RungeKuttaStepInterpolator})) (59 (800{val=rki}) (204{val==}) (11 (214{val=(}) (43 (800{val=RungeKuttaStepInterpolator})) (215{val=)}) (32 (800{val=prototype}) (235{val=.}) (802{val=copy}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=RungeKuttaStepInterpolator})) (59 (800{val=rki}) (204{val==}) (11 (214{val=(}) (43 (800{val=RungeKuttaStepInterpolator})) (215{val=)}) (32 (800{val=prototype}) (235{val=.}) (802{val=copy}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setSafety}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=setSafety}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ThreeEighthesStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=EulerStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MidpointStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=GillStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=c}) (234{val=,}) (800{val=a}) (234{val=,}) (800{val=b}) (234{val=,}) (14 (304{val=new}) (43 (801{val=ClassicalRungeKuttaStepInterpolator})) (216{val=()})) (234{val=,}) (800{val=step}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=double}) (802{val=getCurrentSignedStepsize}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=stepSize}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=double}) (802{val=getCurrentSignedStepsize}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=stepSize}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=TestProblemHandler})) (59 (800{val=handler}) (204{val==}) (14 (304{val=new}) (43 (801{val=TestProblemHandler})) (214{val=(}) (800{val=pb}) (234{val=,}) (800{val=integ}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TestProblemHandler})) (59 (800{val=handler}) (204{val==}) (14 (304{val=new}) (43 (801{val=TestProblemHandler})) (214{val=(}) (800{val=pb}) (234{val=,}) (800{val=integ}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TestProblemHandler})) (59 (800{val=handler}) (204{val==}) (14 (304{val=new}) (43 (801{val=TestProblemHandler})) (214{val=(}) (800{val=pb}) (234{val=,}) (800{val=integ}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TestProblemHandler})) (59 (800{val=handler}) (204{val==}) (14 (304{val=new}) (43 (801{val=TestProblemHandler})) (214{val=(}) (800{val=pb}) (234{val=,}) (800{val=integ}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addSwitchingFunction}) (214{val=(}) (800{val=stepProblem}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addSwitchingFunction}) (214{val=(}) (800{val=stepProblem}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=integ}) (235{val=.}) (802{val=addSwitchingFunction}) (214{val=(}) (800{val=stepProblem}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isNaN}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=createComplex}) (214{val=(}) (38 (201{val=-}) (800{val=real})) (234{val=,}) (38 (201{val=-}) (800{val=imaginary})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isNaN}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=createComplex}) (214{val=(}) (800{val=real}) (234{val=,}) (38 (201{val=-}) (800{val=imaginary})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=SummaryStatistics})) (59 (800{val=stats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=binStats}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=i}) (234{val=,}) (800{val=stats}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=sampleStats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=sampleStats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=stats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=stats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (800{val=DescriptiveStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=oneSidedPStats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=sampleStats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=SummaryStatistics})) (59 (800{val=oneSidedPStats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=sampleStats}) (204{val==}) (14 (304{val=new}) (43 (800{val=SummaryStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (800{val=DescriptiveStatistics})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BufferedReader})) (59 (800{val=in}) (204{val==}) (14 (304{val=new}) (43 (801{val=BufferedReader})) (214{val=(}) (14 (304{val=new}) (43 (801{val=InputStreamReader})) (214{val=(}) (32 (57 (43 (800{val=CertifiedDataTest})) (235{val=.}) (341{val=class})) (235{val=.}) (802{val=getResourceAsStream}) (214{val=(}) (800{val=resource}) (215{val=)})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=Object})) (85{val=[]})) (215{val=)}) (32 (800{val=arguments}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=parts})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=parts})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=ConvergenceException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=toString}) (214{val=(}) (800{val=starts}) (215{val=)})) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=originalCost}) (204{val==}) (32 (2 (801{val=original}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (802{val=getCost}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (2 (801{val=simplex}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getCost}) (216{val=()})) (231{val=>}) (32 (800{val=pointCostPair}) (235{val=.}) (802{val=getCost}) (216{val=()}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=largest}) (235{val=.}) (802{val=getCost}) (216{val=()})) (201{val=-}) (32 (800{val=smallest}) (235{val=.}) (802{val=getCost}) (216{val=()}))) (215{val=)})) (230{val=<}) (800{val=threshold})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=optimum}) (235{val=.}) (802{val=getCost}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=optimum}) (235{val=.}) (802{val=getCost}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (36 (214{val=(}) (27 (32 (800{val=largest}) (235{val=.}) (802{val=getCost}) (216{val=()})) (201{val=-}) (32 (800{val=smallest}) (235{val=.}) (802{val=getCost}) (216{val=()}))) (215{val=)})) (230{val=<}) (800{val=threshold})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (14 (304{val=new}) (43 (800{val=Integer})) (214{val=(}) (800{val=maxCostEval}) (215{val=)})) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=c}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (203{val=/}) (36 (214{val=(}) (27 (800{val=n}) (202{val=*}) (36 (214{val=(}) (16 (800{val=isBiasCorrected}) (233{val=?}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (226{val=:}) (800{val=n})) (215{val=)}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VectorialCovariance})) (59 (800{val=stat}) (204{val==}) (14 (304{val=new}) (43 (801{val=VectorialCovariance})) (214{val=(}) (22 (2 (801{val=points}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (800{val=length})) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VectorialCovariance})) (59 (800{val=stat}) (204{val==}) (14 (304{val=new}) (43 (801{val=VectorialCovariance})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (14 (304{val=new}) (43 (801{val=VectorialCovariance})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (9{val=true}) (215{val=)})) (235{val=.}) (802{val=increment}) (214{val=(}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=VectorialCovariance})) (59 (800{val=covStat}) (204{val==}) (14 (304{val=new}) (43 (801{val=VectorialCovariance})) (214{val=(}) (22 (2 (801{val=vertices}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (800{val=length})) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VectorialCovariance})) (59 (800{val=covStat}) (204{val==}) (14 (304{val=new}) (43 (801{val=VectorialCovariance})) (214{val=(}) (40{val=mean.length}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=VectorialCovariance})) (59 (800{val=covStat}) (204{val==}) (14 (304{val=new}) (43 (801{val=VectorialCovariance})) (214{val=(}) (40{val=mean.length}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=StorelessUnivariateStatistic})) (85{val=[]})) (215{val=)}) (32 (800{val=meanImpl}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=StorelessUnivariateStatistic})) (85{val=[]})) (215{val=)}) (32 (800{val=geoMeanImpl}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=StorelessUnivariateStatistic})) (85{val=[]})) (215{val=)}) (32 (800{val=sumLogImpl}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=StorelessUnivariateStatistic})) (85{val=[]})) (215{val=)}) (32 (800{val=maxImpl}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=StorelessUnivariateStatistic})) (85{val=[]})) (215{val=)}) (32 (800{val=minImpl}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=StorelessUnivariateStatistic})) (85{val=[]})) (215{val=)}) (32 (800{val=sumSqImpl}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (5 (43 (801{val=StorelessUnivariateStatistic})) (85{val=[]})) (215{val=)}) (32 (800{val=sumImpl}) (235{val=.}) (802{val=clone}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=u}) (235{val=.}) (802{val=setMeanImpl}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Sum})) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalStateException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (21 (32 (802{val=incrementJacobianEvaluationsCounter}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=incrementJacobianEvaluationsCounter}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=parts})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=distribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (38 (201{val=-}) (800{val=t})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=distribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (38 (201{val=-}) (800{val=t})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=distribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (38 (201{val=-}) (800{val=t})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=certifiedValues}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=HashMap})) (230{val=<}) (43 (800{val=String})) (234{val=,}) (43 (800{val=Double})) (231{val=>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=switchesHandler}) (235{val=.}) (802{val=addSwitchingFunction}) (214{val=(}) (800{val=function}) (234{val=,}) (800{val=maxCheckInterval}) (234{val=,}) (800{val=convergence}) (234{val=,}) (800{val=maxIterationCount}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=ListUnivariateImpl})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Class})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=key})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Class})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=key})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=switchesHandler}) (235{val=.}) (802{val=addSwitchingFunction}) (214{val=(}) (800{val=function}) (234{val=,}) (800{val=maxCheckInterval}) (234{val=,}) (800{val=convergence}) (234{val=,}) (800{val=maxIterationCount}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=functions}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=SwitchState})) (231{val=>})) (216{val=()}))) (227{val=;})) (21 (7 (800{val=first}) (204{val==}) (500{val=null})) (227{val=;})) (21 (7 (800{val=initialized}) (204{val==}) (9{val=false})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=c})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (800{val=list})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (800{val=list})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ListUnivariateImpl}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=binCount})) (204{val==}) (800{val=binCount})) (227{val=;})) (21 (7 (800{val=binStats}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=SummaryStatistics})) (231{val=>})) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=EmpiricalDistributionImpl}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=binStats}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=SummaryStatistics})) (231{val=>})) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=PointModel})) (231{val=>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=steps}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=index}) (215{val=)})) (235{val=.}) (802{val=getInterpolatedState}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=steps}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=index}) (215{val=)})) (235{val=.}) (802{val=getInterpolatedTime}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ContinuousOutputModel}) (216{val=()}) (8 (218{val={}) (21 (7 (800{val=steps}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=StepInterpolator})) (231{val=>})) (216{val=()}))) (227{val=;})) (21 (32 (802{val=reset}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (5 (39{val=double}) (85{val=[]})) (231{val=>})) (800{val=categoryData})))
(AST_ROOT_SC2NF (21 (7 (800{val=points}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=PointModel})) (231{val=>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Collection})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=c})))
(AST_ROOT_SC2NF (60 (43 (801{val=ListUnivariateImpl})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (216{val=()})) (234{val=,}) (800{val=transformers}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ListUnivariateImpl})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (216{val=()})) (234{val=,}) (800{val=transformers}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DescriptiveStatistics})) (59 (800{val=u}) (204{val==}) (14 (304{val=new}) (43 (801{val=ListUnivariateImpl})) (214{val=(}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (216{val=()})) (234{val=,}) (800{val=transformers}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createBigIdentityMatrix}) (214{val=(}) (32 (802{val=getRowDimension}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=BigMatrix})) (802{val=copy}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BigMatrixImpl})) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=copyOut}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=nRows}) (204{val==}) (40{val=v.length})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (32 (800{val=MatrixUtils}) (235{val=.}) (802{val=createRealIdentityMatrix}) (214{val=(}) (32 (802{val=getRowDimension}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=Rotation})) (214{val=(}) (800{val=u}) (234{val=,}) (40{val=Vector3D.ZERO}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Vector3D}) (235{val=.}) (802{val=angle}) (214{val=(}) (40{val=Vector3D.ZERO}) (234{val=,}) (40{val=Vector3D.PLUS_I}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (40{val=Vector3D.ZERO}) (235{val=.}) (802{val=normalize}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (32 (40{val=Vector3D.ZERO}) (235{val=.}) (802{val=getNorm}) (216{val=()})) (215{val=)})) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=parts})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=offset}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=SwitchException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=t}) (215{val=)})) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=maxIterations}) (215{val=)})) (219{val=}}))) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maxIterations})) (204{val==}) (800{val=maxIterations})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=m}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=p}) (215{val=)})) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=maxCostEval}) (215{val=)})) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=dimension1}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=dimension2}) (215{val=)})) (219{val=}}))) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=dynaBean}) (235{val=.}) (802{val=set}) (214{val=(}) (800{val=propertyName}) (234{val=,}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Integer})) (59 (800{val=input}) (204{val==}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Double})) (59 (800{val=input}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=expected}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (32 (800{val=o}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=doubleValue}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=list}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=one}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=p}) (215{val=)})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumPct}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumPct}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumFreq}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumFreq}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getPct}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getPct}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCount}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCount}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addValue}) (214{val=(}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (32 (800{val=v}) (235{val=.}) (802{val=longValue}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=EstimationException})) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=rows}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=cols}) (215{val=)})) (219{val=}}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Object})) (85{val=[]})) (59 (800{val=arguments}) (204{val==}) (4 (218{val={}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (219{val=}}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=ret}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=value}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=pos}) (235{val=.}) (802{val=setIndex}) (214{val=(}) (800{val=endIndex}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=argument}) (215{val=)})) (219{val=}}))) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=argument})) (204{val==}) (800{val=argument})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=zero}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=u}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=newA}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=newA}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=newA}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=newA}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=u}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (3 (304{val=new}) (5 (43 (801{val=Object})) (85{val=[]})) (4 (218{val={}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=value}) (215{val=)})) (234{val=,}) (32 (800{val=Integer}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=maxIterations}) (215{val=)})) (219{val=}}))) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (800{val=Double})) (59 (800{val=pi}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (40{val=Math.PI}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=u}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Double})) (59 (800{val=value}) (204{val==}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=valueString}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=delta}) (204{val==}) (27 (36 (214{val=(}) (27 (800{val=max}) (201{val=-}) (800{val=min})) (215{val=)})) (203{val=/}) (32 (36 (214{val=(}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=binCount}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=doubleValue}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=val}) (204{val==}) (32 (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=str}) (215{val=)})) (235{val=.}) (802{val=doubleValue}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=sampleStats}) (235{val=.}) (802{val=addValue}) (214{val=(}) (800{val=val}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=rhs}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=rootNameNode}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=newVar}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=declaration}) (214{val=(}) (800{val=child}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=srcref}) (214{val=(}) (800{val=n}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=notChild}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=CALL}) (226{val=:})) (21 (32 (802{val=annotateCalls}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (500{val=break;}) (500{val=default:}) (500{val=break;}) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=enumTypeNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isEqualTo}) (214{val=(}) (40{val=Token.BANG}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=CALL}) (226{val=:})) (21 (32 (802{val=visitCall}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (500{val=break;}) (500{val=default:}) (500{val=break;}) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=typeExprNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.QMARK})) (249{val=&&}) (38 (207{val=!}) (32 (800{val=typeExprNode}) (235{val=.}) (802{val=hasChildren}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.VAR}) (234{val=,}) (32 (800{val=var}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=type})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=definitionParent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=RuntimeException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=defSite}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (800{val=nameNode}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=nameNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=exprKind}) (204{val==}) (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (27 (800{val=insideQualifiedName}) (250{val=||}) (27 (32 (32 (800{val=propAccessNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (242{val=!=}) (40{val=Token.ASSIGN}))))
(AST_ROOT_SC2NF (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=lvalue}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=tokenType}) (204{val==}) (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=warnInvalidOperand}) (214{val=(}) (800{val=expr}) (234{val=,}) (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (800{val=lhsType}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=rhsType})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=commonTypes}) (235{val=.}) (802{val=isNumberScalarOrObj}) (214{val=(}) (40{val=pair.type}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=warnInvalidOperand}) (214{val=(}) (800{val=child}) (234{val=,}) (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (40{val=JSType.NUMBER}) (234{val=,}) (40{val=pair.type}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=exprKind}) (204{val==}) (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=warnings}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=UNKNOWN_EXPR_TYPE}) (234{val=,}) (32 (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (800{val=dn}) (235{val=.}) (802{val=getValue}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=cont}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isSameAs}) (214{val=(}) (40{val=Token.CONTINUE}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=breakStm}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isSameAs}) (214{val=(}) (40{val=Token.BREAK}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=value}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=registerFunc}) (235{val=.}) (802{val=isValidNodeType}) (214{val=(}) (32 (800{val=valueNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=registerFunc}) (235{val=.}) (802{val=isValidNodeType}) (214{val=(}) (32 (800{val=value}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (7 (800{val=changed}) (204{val==}) (27 (27 (800{val=changed}) (250{val=||}) (27 (32 (800{val=finalValue}) (235{val=.}) (802{val=getToken}) (216{val=()})) (242{val=!=}) (32 (40{val=info.initialValue}) (235{val=.}) (802{val=getToken}) (216{val=()})))) (250{val=||}) (38 (207{val=!}) (32 (800{val=finalValue}) (235{val=.}) (802{val=isEquivalentTo}) (214{val=(}) (40{val=info.initialValue}) (215{val=)}))))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=blockNode}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (32 (32 (800{val=blockNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.THROW}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (27 (32 (800{val=arg}) (235{val=.}) (802{val=getToken}) (216{val=()})) (242{val=!=}) (800{val=desiredType})))
(AST_ROOT_SC2NF (32 (800{val=val}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=lhs}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=parentType}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=HOOK}) (226{val=:})) (49 (326{val=case}) (800{val=AND}) (226{val=:})) (49 (326{val=case}) (800{val=OR}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=ancestor}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=actualType}) (204{val==}) (32 (32 (32 (800{val=cfgNodes}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=i}) (215{val=)})) (235{val=.}) (802{val=getValue}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=source}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=startToken})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertFalse}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=startToken}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=cfg}) (235{val=.}) (802{val=isImplicitReturn}) (214{val=(}) (800{val=dest}) (215{val=)})) (215{val=)})) (227{val=;})) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (800{val=source}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=startToken})) (249{val=&&}) (32 (800{val=cfg}) (235{val=.}) (802{val=isImplicitReturn}) (214{val=(}) (800{val=dest}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=enclosingNode}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=enclosingNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (242{val=!=}) (40{val=Token.FUNCTION}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (32 (800{val=expr}) (235{val=.}) (802{val=getRoot}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=refParent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=anc}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=grandparent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=AND}) (226{val=:})) (49 (326{val=case}) (800{val=OR}) (226{val=:})) (49 (326{val=case}) (800{val=HOOK}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.STRING}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.STRING}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (800{val=visited}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=input}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=next}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=value}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.EXPONENT}))) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=precedence}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (230{val=<}) (800{val=minPrecedence})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=LET}) (226{val=:})) (49 (326{val=case}) (800{val=CONST}) (226{val=:})) (49 (326{val=case}) (800{val=FUNCTION}) (226{val=:})) (49 (326{val=case}) (800{val=CLASS}) (226{val=:})) (49 (326{val=case}) (800{val=DO}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (27 (32 (800{val=firstNonOperator}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=op})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=firstNonOperator}) (204{val==}) (32 (800{val=firstNonOperator}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=last}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=FUNCTION}) (226{val=:})) (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isArrowFunction}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=visitArrowFunction}) (214{val=(}) (800{val=t}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (500{val=break;}) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=value}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (36 (214{val=(}) (27 (27 (800{val=type}) (236{val===}) (40{val=Token.INC})) (250{val=||}) (27 (800{val=type}) (236{val===}) (40{val=Token.DEC}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=declarationType}) (204{val==}) (32 (800{val=declarationNode}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=newNode}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=declaration}) (214{val=(}) (800{val=newLHS}) (234{val=,}) (800{val=newRHS}) (234{val=,}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=newNode}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=declaration}) (214{val=(}) (800{val=newLHS}) (234{val=,}) (800{val=newRHS}) (234{val=,}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=parentPrecedence}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=precedence}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=isSimpleOp}) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=msg}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (32 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()})) (235{val=.}) (802{val=toLowerCase}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.SCRIPT}) (234{val=,}) (32 (32 (32 (800{val=global}) (235{val=.}) (802{val=getDeclaration}) (216{val=()})) (235{val=.}) (802{val=getNode}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.GETPROP}) (234{val=,}) (32 (32 (32 (800{val=refs}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getNode}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.GETPROP}) (234{val=,}) (32 (32 (32 (800{val=refs}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getNode}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.NAME}) (234{val=,}) (32 (32 (32 (800{val=refs}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getNode}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=propName}) (235{val=.}) (802{val=isString}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=propName}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=propName}) (235{val=.}) (802{val=isString}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalStateException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=propName}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=parentType}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=nodeType}) (204{val==}) (32 (800{val=input}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=current}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (800{val=type}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=type}) (235{val=.}) (802{val=getToken}) (216{val=()})) (242{val=!=}) (40{val=Token.ARRAY_TYPE}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=invalidInitializers}) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (800{val=initializer}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=error}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=sourceName}) (234{val=,}) (32 (802{val=lineno}) (214{val=(}) (40{val=loopNode.initializer}) (215{val=)})) (234{val=,}) (32 (802{val=charno}) (214{val=(}) (40{val=loopNode.initializer}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=invalidInitializers}) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (800{val=initializer}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=error}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=sourceName}) (234{val=,}) (32 (802{val=lineno}) (214{val=(}) (40{val=loopNode.initializer}) (215{val=)})) (234{val=,}) (32 (802{val=charno}) (214{val=(}) (40{val=loopNode.initializer}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=nType}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=FOR}) (226{val=:})) (49 (326{val=case}) (800{val=FOR_OF}) (226{val=:})) (49 (326{val=case}) (800{val=WHILE}) (226{val=:})) (49 (326{val=case}) (800{val=DO}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=FOR}) (226{val=:})) (49 (326{val=case}) (800{val=FOR_OF}) (226{val=:})) (49 (326{val=case}) (800{val=WHILE}) (226{val=:})) (49 (326{val=case}) (800{val=DO}) (226{val=:})) (49 (326{val=case}) (800{val=SWITCH}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=GETPROP}) (226{val=:})) (41 (329{val=return}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=getString}) (216{val=()})) (227{val=;})) (49 (326{val=case}) (800{val=MEMBER_FUNCTION_DEF}) (226{val=:})) (41 (329{val=return}) (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=expr}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (315{val=this}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (315{val=this}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (315{val=this}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (315{val=this}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=source}) (236{val===}) (500{val=null})) (250{val=||}) (27 (40{val=Token.FUNCTION}) (236{val===}) (32 (800{val=source}) (235{val=.}) (802{val=getToken}) (216{val=()})))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (27 (800{val=source}) (236{val===}) (500{val=null})) (250{val=||}) (27 (40{val=Token.FUNCTION}) (236{val===}) (32 (800{val=source}) (235{val=.}) (802{val=getToken}) (216{val=()})))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=expectedArity}) (204{val==}) (32 (800{val=Token}) (235{val=.}) (802{val=arity}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=NAME}) (226{val=:})) (21 (32 (802{val=validateName}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (500{val=break;}) (49 (326{val=case}) (800{val=GETPROP}) (226{val=:})) (21 (32 (802{val=validateGetProp}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (500{val=break;}) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=UnsupportedOperationException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=violation}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=validateChildCount}) (214{val=(}) (800{val=n}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=validateNameDeclarationHelper}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNameDeclaration}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateNameDeclarationHelper}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=validateOptionalExpression}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=body}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.BLOCK})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateBlock}) (214{val=(}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=validateExpression}) (214{val=(}) (800{val=body}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.EXPORT_SPECS})))
(AST_ROOT_SC2NF (32 (800{val=secondChild}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=control}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=VAR}) (226{val=:})) (49 (326{val=case}) (800{val=CATCH}) (226{val=:})) (21 (32 (800{val=names}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (227{val=;})) (500{val=break;}) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=c}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=FUNCTION}) (226{val=:})) (49 (326{val=case}) (800{val=AND}) (226{val=:})) (49 (326{val=case}) (800{val=OR}) (226{val=:})) (49 (326{val=case}) (800{val=HOOK}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=cArg}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=apply}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=type}) (236{val===}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=FlowScope})) (59 (800{val=rightScope}) (204{val==}) (32 (800{val=reverseInterpreter}) (235{val=.}) (802{val=getPreciserScopeKnowingConditionOutcome}) (214{val=(}) (800{val=left}) (234{val=,}) (32 (800{val=leftOutcome}) (235{val=.}) (802{val=getOutcomeFlowScope}) (214{val=(}) (32 (800{val=left}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (800{val=nIsAnd}) (215{val=)})) (234{val=,}) (800{val=nIsAnd}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=left}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (7 (800{val=newScope}) (204{val==}) (32 (800{val=reverseInterpreter}) (235{val=.}) (802{val=getPreciserScopeKnowingConditionOutcome}) (214{val=(}) (800{val=condition}) (234{val=,}) (32 (800{val=conditionOutcomes}) (235{val=.}) (802{val=getOutcomeFlowScope}) (214{val=(}) (32 (800{val=condition}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (27 (800{val=branch}) (236{val===}) (40{val=Branch.ON_TRUE})) (215{val=)})) (234{val=,}) (27 (800{val=branch}) (236{val===}) (40{val=Branch.ON_TRUE})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (27 (32 (800{val=namedImports}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.IMPORT_SPECS})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.FUNCTION}) (234{val=,}) (32 (800{val=function}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=name}) (234{val=,}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getName}) (214{val=(}) (800{val=function}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=arg}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (27 (32 (802{val=isASTNormalized}) (216{val=()})) (249{val=&&}) (27 (40{val=Token.NAME}) (236{val===}) (32 (800{val=constructorNameNode}) (235{val=.}) (802{val=getToken}) (216{val=()})))))
(AST_ROOT_SC2NF (32 (800{val=result}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=parentType}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (27 (32 (32 (800{val=export}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.EXPORT_SPECS})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=nextNode}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=typeNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.BANG})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=typeNode}) (204{val==}) (32 (800{val=typeNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=typeNode}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=decl}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=declaration}) (214{val=(}) (32 (40{val=cls.name}) (235{val=.}) (802{val=cloneTree}) (216{val=()})) (234{val=,}) (40{val=cls.constructor.value}) (234{val=,}) (32 (800{val=exprRoot}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=srcref}) (214{val=(}) (800{val=exprRoot}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=fieldTypeNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.COLON})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=fieldNameNode}) (204{val==}) (32 (800{val=fieldTypeNode}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (21 (7 (800{val=hasType}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=pType}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.NEW}) (234{val=,}) (32 (800{val=callsiteNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.CALL}) (234{val=,}) (32 (800{val=callsiteNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.CALL}) (234{val=,}) (32 (800{val=callsiteNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.PARAM_LIST})))
(AST_ROOT_SC2NF (27 (32 (800{val=aliasReference}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.STRING_KEY})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.INSTANCEOF})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportIfNonObject}) (214{val=(}) (800{val=t}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (234{val=,}) (800{val=SUSPICIOUS_INSTANCEOF_LEFT_OPERAND}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.IN})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportIfNonObject}) (214{val=(}) (800{val=t}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (234{val=,}) (800{val=SUSPICIOUS_IN_OPERATOR}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=operatorToken}) (204{val==}) (32 (800{val=condition}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (32 (40{val=decl.node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isGetProp}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=nType}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=val}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.OR})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=typeNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (242{val=!=}) (40{val=Token.EQUALS})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=report}) (214{val=(}) (800{val=typeNode}) (234{val=,}) (800{val=DEFAULT_PARAM_MUST_BE_MARKED_OPTIONAL}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (27 (27 (800{val=typeNode}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=typeNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.STRING}))))
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=left}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=TernaryValue})) (59 (800{val=result}) (204{val==}) (32 (802{val=evaluateComparison}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (234{val=,}) (800{val=shouldUseTypes}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=result}) (204{val==}) (32 (802{val=performArithmeticOp}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (234{val=,}) (800{val=left}) (234{val=,}) (800{val=right}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=argumentNode}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=subtree}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=subtree}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (61 (350{val=while}) (214{val=(}) (32 (800{val=moveIt}) (235{val=.}) (802{val=hasNext}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=actualTokens}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (32 (800{val=moveIt}) (235{val=.}) (802{val=next}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (27 (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.CALL})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=parentType}) (204{val==}) (32 (800{val=useParent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=nodeType}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=parentNodeType}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=key}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (800{val=sourceName}) (242{val=!=}) (500{val=null})) (215{val=)})) (227{val=;})) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=type})) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (40{val=Token.FUNCTION}) (234{val=,}) (32 (800{val=fooNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=HOOK}) (226{val=:})) (49 (326{val=case}) (800{val=AND}) (226{val=:})) (49 (326{val=case}) (800{val=OR}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=BREAK}) (226{val=:})) (49 (326{val=case}) (800{val=CONTINUE}) (226{val=:})) (49 (326{val=case}) (800{val=RETURN}) (226{val=:})) (49 (326{val=case}) (800{val=THROW}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=blockChild}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=subtree}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=ancestor}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=type})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=matchingNodes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (7 (800{val=declType}) (204{val==}) (32 (800{val=variable}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isNew}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isCall}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isHook}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (36 (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isAnd}) (216{val=()})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isOr}) (216{val=()})) (215{val=)}))) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=hook}) (235{val=.}) (802{val=isHook}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=hook}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (27 (36 (214{val=(}) (32 (800{val=original}) (235{val=.}) (802{val=isAnd}) (216{val=()})) (215{val=)})) (250{val=||}) (36 (214{val=(}) (32 (800{val=original}) (235{val=.}) (802{val=isOr}) (216{val=()})) (215{val=)}))) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=original}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=secondArgumentType}) (204{val==}) (32 (800{val=secondArgument}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=offset}) (204{val==}) (16 (27 (800{val=provideStringNode}) (236{val===}) (500{val=null})) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (32 (802{val=getSourceInfoOffset}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isUnresolved}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (802{val=isKnown}) (214{val=(}) (800{val=n}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isTop}) (214{val=(}) (800{val=n}) (215{val=)}))) (249{val=&&}) (32 (802{val=isClassType}) (214{val=(}) (800{val=n}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isNativeObjectType}) (214{val=(}) (800{val=n}) (215{val=)}))) (249{val=&&}) (38 (207{val=!}) (32 (802{val=isWhitelistedType}) (214{val=(}) (800{val=n}) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (802{val=isTypeVariable}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (802{val=isTypeVariable}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isUnknownType}) (216{val=()}))) (250{val=||}) (32 (800{val=type}) (235{val=.}) (802{val=isTop}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=MatchResult})) (214{val=(}) (800{val=allowLooseMatches}) (234{val=,}) (800{val=allowLooseMatches}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setPreserveGoogProvidesAndRequires}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=compilerOptions}) (235{val=.}) (802{val=setPreserveGoogProvidesAndRequires}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=importNode}) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=export}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=stringKey}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (800{val=stringKey}) (214{val=(}) (800{val=name}) (234{val=,}) (32 (32 (800{val=memberDef}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=elemValue}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=parent}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=body}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=block}) (214{val=(}) (32 (800{val=IR}) (235{val=.}) (802{val=returnNode}) (214{val=(}) (32 (800{val=returnValue}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=export}) (234{val=,}) (32 (800{val=declaration}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=newBlock}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=typeString}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=rep}) (235{val=.}) (802{val=isExprResult}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=rep}) (204{val==}) (32 (800{val=rep}) (235{val=.}) (802{val=getFirstChild}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=rep}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=changeProxy}) (235{val=.}) (802{val=replaceWith}) (214{val=(}) (800{val=grandparent}) (234{val=,}) (800{val=parent}) (234{val=,}) (32 (32 (800{val=parent}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=replacement}) (204{val==}) (32 (800{val=firstArg}) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=rhs}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=ancestor}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=last}) (234{val=,}) (800{val=rhs}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=rhs}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=child}) (204{val==}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=argNode}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=assignmentValue}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=simplified}) (204{val==}) (32 (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (800{val=type}) (234{val=,}) (32 (800{val=condition}) (235{val=.}) (802{val=detach}) (216{val=()})) (234{val=,}) (32 (802{val=simplifyShortCircuitBranch}) (214{val=(}) (800{val=body}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoIfMissingFrom}) (214{val=(}) (800{val=hook}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=original}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=original}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (32 (800{val=replacements}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=original}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=newGetProp}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=getprop}) (214{val=(}) (32 (800{val=target}) (235{val=.}) (802{val=detach}) (216{val=()})) (234{val=,}) (32 (800{val=prop}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=i}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (32 (32 (800{val=first}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=add}) (204{val==}) (32 (32 (800{val=add}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=PrototypeMemberDeclaration})) (800{val=declar})) (226{val=:}) (40{val=instance.declarations}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=block}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (32 (40{val=declar.node}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=preserveGoogProvidesAndRequires}) (249{val=&&}) (32 (800{val=explicitNode}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (800{val=explicitNode}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=typeDeclaration}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=forwardDeclareType}) (214{val=(}) (800{val=typeDeclaration}) (215{val=)})) (227{val=;})) (21 (32 (800{val=parent}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=value}) (204{val==}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getChildAtIndex}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=closureRequire})) (226{val=:}) (800{val=requiresToBeRemoved}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=closureRequire}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=arg}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=method}) (204{val==}) (32 (32 (800{val=member}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (59 (800{val=stringKey}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (800{val=stringKey}) (214{val=(}) (16 (36 (214{val=(}) (27 (32 (800{val=member}) (235{val=.}) (802{val=isGetterDef}) (216{val=()})) (250{val=||}) (32 (800{val=member}) (235{val=.}) (802{val=getBooleanProp}) (214{val=(}) (40{val=Node.COMPUTED_PROP_GETTER}) (215{val=)}))) (215{val=)})) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=function}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (21 (7 (800{val=constructor}) (204{val==}) (32 (32 (800{val=member}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=child})) (226{val=:}) (32 (800{val=functionBody}) (235{val=.}) (802{val=children}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=newBlock}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (32 (800{val=child}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=stringKey}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (800{val=stringKey}) (214{val=(}) (800{val=name}) (234{val=,}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=subtree}) (235{val=.}) (802{val=getChildCount}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=subtree}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=c})) (226{val=:}) (32 (800{val=externs}) (235{val=.}) (802{val=children}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=c}) (235{val=.}) (802{val=hasChildren}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=c}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=expected}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=expectedRoot}) (204{val==}) (32 (802{val=parseExpectedJs}) (214{val=(}) (800{val=expected}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=expectedRoot}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=ancParent}) (204{val==}) (32 (800{val=ancestor}) (235{val=.}) (802{val=getParent}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=ancParent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=ancestor}) (234{val=,}) (32 (32 (800{val=ancestor}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=node}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=node}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=node}) (235{val=.}) (802{val=getParent}) (216{val=()})) (242{val=!=}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=node}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (800{val=node}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=report}) (214{val=(}) (32 (800{val=JSError}) (235{val=.}) (802{val=make}) (214{val=(}) (800{val=requireNode}) (234{val=,}) (40{val=MISSING_MODULE_OR_PROVIDE.level}) (234{val=,}) (800{val=MISSING_MODULE_OR_PROVIDE}) (234{val=,}) (800{val=legacyNamespace}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingStatement}) (214{val=(}) (800{val=requireNode}) (215{val=)})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (500{val=continue;}) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=moduleBlockNode}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=returnStatementNode}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingStatement}) (214{val=(}) (800{val=call}) (215{val=)})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=updateGoogDeclareLegacyNamespace}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=call})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingStatement}) (214{val=(}) (800{val=call}) (215{val=)})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (40{val=currentScript.declareLegacyNamespace})) (215{val=)}) (8 (218{val={}) (21 (32 (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getEnclosingStatement}) (214{val=(}) (800{val=call}) (215{val=)})) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=secondExpr}) (242{val=!=}) (800{val=firstExpr})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=secondExpr}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=secondExpr}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=nullNode}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (40{val=bind.target}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=declParent}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=value}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=value}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=varNode}) (204{val==}) (800{val=parent})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=callbackFunction}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=objlit}) (235{val=.}) (802{val=removeChild}) (214{val=(}) (800{val=key}) (215{val=)})) (227{val=;})) (21 (32 (800{val=value}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=replacement}) (204{val==}) (32 (800{val=value}) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=destObj}) (204{val==}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getSecondChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=newNode}) (204{val==}) (14 (304{val=new}) (43 (801{val=Node})) (214{val=(}) (800{val=newType}) (234{val=,}) (32 (800{val=left}) (235{val=.}) (802{val=detach}) (216{val=()})) (234{val=,}) (32 (800{val=newRight}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isNumericResult}) (214{val=(}) (800{val=left}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=left}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=left}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=root}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=root}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=callNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=callNode}) (234{val=,}) (32 (800{val=replacementNode}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=clinitAssignedValue}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=follow}) (236{val===}) (500{val=null})) (250{val=||}) (32 (802{val=areMatchingExits}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=follow}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=block}) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=maybeIf}) (234{val=,}) (32 (32 (800{val=maybeIf}) (235{val=.}) (802{val=getLastChild}) (216{val=()})) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=colon}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (32 (800{val=member}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=child})) (226{val=:}) (800{val=stringKeys}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=child}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=member}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=indexSignature}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=comma}) (235{val=.}) (802{val=addChildToBack}) (214{val=(}) (32 (800{val=leftMostChild}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=condStatement}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=exprResult}) (214{val=(}) (32 (800{val=cond}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=srcref}) (214{val=(}) (800{val=cond}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=statement}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=exprResult}) (214{val=(}) (32 (800{val=cond}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoIfMissingFrom}) (214{val=(}) (800{val=cond}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=caseBlock}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=maybeBreak}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=subtree}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (21 (7 (800{val=subtree}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=subtree}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=replaceChild}) (214{val=(}) (800{val=subtree}) (234{val=,}) (32 (800{val=right}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=right}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=var}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=newDeclaration}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=var}) (214{val=(}) (32 (800{val=name}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=useSourceInfoFrom}) (214{val=(}) (800{val=declarationList}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=inlineValue}) (214{val=(}) (800{val=v}) (234{val=,}) (800{val=ref}) (234{val=,}) (32 (800{val=value}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=opDetached}) (204{val==}) (32 (800{val=op}) (235{val=.}) (802{val=detach}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=potentialCallee}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=expectedRoot}) (204{val==}) (32 (802{val=parseExpectedJs}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=SourceFile}) (235{val=.}) (802{val=fromCode}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=expected}) (215{val=)})) (215{val=)})) (215{val=)}))) (227{val=;})) (21 (32 (800{val=expectedRoot}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=inGlobalScope}) (216{val=()}))) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isHoistedFunctionDeclaration}) (214{val=(}) (800{val=value}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=parent}) (235{val=.}) (802{val=addChildToFront}) (214{val=(}) (32 (800{val=value}) (235{val=.}) (802{val=detach}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=body}) (235{val=.}) (802{val=detach}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=decl}) (204{val==}) (32 (800{val=IR}) (235{val=.}) (802{val=declaration}) (214{val=(}) (32 (800{val=pattern}) (235{val=.}) (802{val=detach}) (216{val=()})) (234{val=,}) (32 (800{val=IR}) (235{val=.}) (802{val=name}) (214{val=(}) (800{val=tempVarName}) (215{val=)})) (234{val=,}) (800{val=declarationType}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Node})) (231{val=>})) (59 (800{val=assignments}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=Node})) (231{val=>})) (59 (800{val=nodes}) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=ArrayList})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (800{val=JSType})) (802{val=getJSTypeBeforeCast}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=JSType})) (215{val=)}) (32 (802{val=getTypeIBeforeCast}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=externs}) (204{val==}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (43 (801{val=TypeI})) (802{val=evaluateTypeExpressionInGlobalScope}) (214{val=(}) (44 (43 (801{val=JSTypeExpression})) (800{val=expr})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=createTypeFromCommentNode}) (214{val=(}) (32 (800{val=expr}) (235{val=.}) (802{val=getRoot}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isInstanceType}) (216{val=()}) (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isSingletonObj}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (32 (315{val=this}) (235{val=.}) (802{val=getNominalTypeIfSingletonObj}) (216{val=()})) (235{val=.}) (802{val=isClassy}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=isUnresolved}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=isUnknown}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=fn}) (235{val=.}) (802{val=isLooseSubtypeOf}) (214{val=(}) (40{val=other.fn}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=UpdateThisAndArgumentsReferences})) (59 (800{val=updater}) (204{val==}) (14 (304{val=new}) (43 (801{val=UpdateThisAndArgumentsReferences})) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=passUnderTest})) (204{val==}) (14 (304{val=new}) (43 (801{val=NameBasedDefinitionProvider})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (800{val=compiler})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=NameBasedDefinitionProvider})) (59 (800{val=defFinder}) (204{val==}) (14 (304{val=new}) (43 (801{val=NameBasedDefinitionProvider})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testHookOperators4}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=checkMarkedCalls}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=ImmutableList}) (235{val=.}) (230{val=<}) (43 (800{val=String})) (231{val=>}) (802{val=of}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=DefinitionUseSiteFinder}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=nameUseSiteMultimap})) (204{val==}) (32 (800{val=LinkedHashMultimap}) (235{val=.}) (802{val=create}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=defFinder}) (204{val==}) (14 (304{val=new}) (43 (801{val=NameBasedDefinitionProvider})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NameBasedDefinitionProvider})) (59 (800{val=defFinder}) (204{val==}) (14 (304{val=new}) (43 (801{val=NameBasedDefinitionProvider})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NameBasedDefinitionProvider})) (59 (800{val=defFinder}) (204{val==}) (14 (304{val=new}) (43 (801{val=NameBasedDefinitionProvider})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (40{val=NewTypeInference.ADDING_PROPERTY_TO_NON_OBJECT}) (234{val=,}) (40{val=NewTypeInference.INEXISTENT_PROPERTY}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=typeCheck}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=NewTypeInference.ADDING_PROPERTY_TO_NON_OBJECT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isInTestMode}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=StringWriter})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isInTestMode}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=StringWriter})) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=phaseopt}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externsNode}) (234{val=,}) (800{val=externAndJsRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=checkVariableReferencesForTranspileOnly}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (800{val=NO_J2CL_SOURCE_FILE}) (234{val=,}) (800{val=NO_J2CL_SOURCE_FILE2}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getAnnotation}) (214{val=(}) (40{val=J2clSourceFileChecker.HAS_J2CL_ANNOTATION_KEY}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEqualTo}) (214{val=(}) (40{val=Boolean.FALSE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (800{val=NO_J2CL_SOURCE_FILE}) (234{val=,}) (800{val=J2CL_SOURCE_FILE}) (234{val=,}) (800{val=NO_J2CL_SOURCE_FILE2}) (215{val=)})) (215{val=)})) (227{val=;})) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=compiler}) (235{val=.}) (802{val=getAnnotation}) (214{val=(}) (40{val=J2clSourceFileChecker.HAS_J2CL_ANNOTATION_KEY}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEqualTo}) (214{val=(}) (40{val=Boolean.TRUE}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=J2clSourceFileChecker}) (235{val=.}) (802{val=shouldRunJ2clPasses}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))) (21 (32 (14 (304{val=new}) (43 (801{val=StaticFieldGetterSetterInliner})) (214{val=(}) (800{val=root}) (215{val=)})) (235{val=.}) (802{val=run}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=recvType}) (204{val==}) (32 (800{val=recvType}) (235{val=.}) (802{val=withProperty}) (214{val=(}) (800{val=pname}) (234{val=,}) (40{val=JSType.UNKNOWN}) (215{val=)}))) (227{val=;})) (21 (7 (800{val=inEnv}) (204{val==}) (32 (802{val=updateLvalueTypeInEnv}) (214{val=(}) (800{val=inEnv}) (234{val=,}) (800{val=obj}) (234{val=,}) (40{val=recvLvalue.ptr}) (234{val=,}) (800{val=recvType}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=js}) (204{val==}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (27 (800{val=EXTERNS}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (27 (800{val=code}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=RefactoringDriver})) (59 (800{val=driver}) (204{val==}) (32 (32 (32 (14 (304{val=new}) (43 (40{val=RefactoringDriver.Builder})) (214{val=(}) (800{val=scanner}) (215{val=)})) (235{val=.}) (802{val=addExternsFromCode}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=externs})) (215{val=)})) (235{val=.}) (802{val=addInputsFromCode}) (214{val=(}) (800{val=originalCode}) (215{val=)})) (235{val=.}) (802{val=build}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=ImmutableList}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (800{val=SourceFile}) (235{val=.}) (802{val=fromCode}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=externs})) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (32 (802{val=isSomeUnknownType}) (214{val=(}) (800{val=n}) (215{val=)})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=tracker}) (204{val==}) (14 (304{val=new}) (43 (801{val=PerformanceTracker})) (214{val=(}) (800{val=externsRoot}) (234{val=,}) (800{val=jsRoot}) (234{val=,}) (40{val=options.tracer}) (234{val=,}) (22 (315{val=this}) (235{val=.}) (800{val=outStream})) (215{val=)}))) (227{val=;})) (21 (32 (802{val=addChangeHandler}) (214{val=(}) (32 (800{val=tracker}) (235{val=.}) (802{val=getCodeChangeHandler}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=phaseopt}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externsNode}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=process}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=scriptRoot}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=checkVariableReferences}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=ResourceBundle})) (802{val=getBundle}) (214{val=(}) (44 (43 (801{val=String})) (800{val=baseName})) (234{val=,}) (44 (43 (801{val=Locale})) (800{val=locale})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getBundle}) (214{val=(}) (800{val=baseName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (38 (207{val=!}) (22 (315{val=this}) (235{val=.}) (800{val=isFinalized}))) (215{val=)})) (227{val=;})) (21 (48 (349{val=super}) (235{val=.}) (802{val=addUndeclaredProperty}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=defSite}) (234{val=,}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=type}) (236{val===}) (500{val=null})) (249{val=&&}) (800{val=isConstant})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (32 (22 (315{val=this}) (235{val=.}) (800{val=randomProps})) (235{val=.}) (802{val=with}) (214{val=(}) (800{val=pname}) (234{val=,}) (32 (800{val=Property}) (235{val=.}) (802{val=make}) (214{val=(}) (16 (27 (800{val=type}) (236{val===}) (500{val=null})) (233{val=?}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN})) (226{val=:}) (800{val=type})) (234{val=,}) (800{val=type}) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=isUnknown}) (216{val=()}))) (249{val=&&}) (38 (207{val=!}) (32 (800{val=t}) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (800{val=JSType}) (235{val=.}) (802{val=fromTypeVar}) (214{val=(}) (32 (802{val=getCommonTypes}) (216{val=()})) (234{val=,}) (800{val=typeVar}) (215{val=)})) (215{val=)})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=typeMap}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Property}) (235{val=.}) (802{val=make}) (214{val=(}) (22 (32 (802{val=getCommonTypes}) (216{val=()})) (235{val=.}) (800{val=UNKNOWN})) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=NominalType})) (59 (800{val=thisWithoutTypemap}) (204{val==}) (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=getAsNominalType}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (32 (800{val=thisWithoutTypemap}) (235{val=.}) (802{val=instantiateGenerics}) (214{val=(}) (22 (32 (802{val=getCommonTypes}) (216{val=()})) (235{val=.}) (800{val=MAP_TO_UNKNOWN})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=result}) (204{val==}) (22 (32 (802{val=getCommonTypes}) (216{val=()})) (235{val=.}) (800{val=TOP}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=result}) (204{val==}) (22 (32 (802{val=getCommonTypes}) (216{val=()})) (235{val=.}) (800{val=BOTTOM}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (32 (802{val=isGeneric}) (216{val=()}))) (250{val=||}) (32 (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=MAP_TO_UNKNOWN})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=concreteTypes}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=substituteNominalGenerics}) (214{val=(}) (800{val=concreteTypes}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionTypeBuilder})) (59 (800{val=builder}) (204{val==}) (14 (304{val=new}) (43 (801{val=FunctionTypeBuilder})) (214{val=(}) (40{val=f1.commonTypes}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=f}) (235{val=.}) (802{val=isGeneric}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=f}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=f}) (235{val=.}) (802{val=instantiateGenerics}) (214{val=(}) (40{val=f.commonTypes.MAP_TO_UNKNOWN}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (38 (207{val=!}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=allowMethodsAsFunctions}))) (249{val=&&}) (27 (22 (315{val=this}) (235{val=.}) (800{val=receiverType})) (242{val=!=}) (500{val=null}))) (249{val=&&}) (27 (40{val=other.receiverType}) (236{val===}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionTypeBuilder})) (59 (800{val=builder}) (204{val==}) (14 (304{val=new}) (43 (801{val=FunctionTypeBuilder})) (214{val=(}) (40{val=f1.commonTypes}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=optionalFormals}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=JSType}) (235{val=.}) (802{val=join}) (214{val=(}) (800{val=t}) (234{val=,}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNDEFINED})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (315{val=this}) (236{val===}) (800{val=other})) (250{val=||}) (27 (40{val=other.ns}) (242{val=!=}) (500{val=null}))) (250{val=||}) (38 (207{val=!}) (32 (32 (800{val=other}) (235{val=.}) (802{val=getNominalType}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=getObjectType}) (216{val=()})) (215{val=)})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=other}) (236{val===}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=TOP_OBJECTTYPE}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=other}) (236{val===}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=TOP_OBJECTTYPE}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=newPropType}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (32 (800{val=newPropType}) (235{val=.}) (802{val=getCommonTypes}) (216{val=()})) (235{val=.}) (800{val=BOTTOM_PROPERTY_MAP})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=result}) (204{val==}) (40{val=commonTypes.BOTTOM})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=callee}) (235{val=.}) (802{val=matchesQualifiedName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (40{val=commonTypes.STRING}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=recvType}) (204{val==}) (32 (800{val=recvType}) (235{val=.}) (802{val=removeType}) (214{val=(}) (40{val=commonTypes.NULL}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=propInferredFunType}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=rawType}) (235{val=.}) (802{val=addUndeclaredClassProperty}) (214{val=(}) (800{val=pname}) (234{val=,}) (800{val=propInferredFunType}) (234{val=,}) (800{val=getProp}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=rawType}) (235{val=.}) (802{val=addUndeclaredClassProperty}) (214{val=(}) (800{val=pname}) (234{val=,}) (40{val=commonTypes.UNKNOWN}) (234{val=,}) (800{val=getProp}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=t}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=t}) (204{val==}) (40{val=commonTypes.UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=FunctionType})) (59 (800{val=getInstanceFunType}) (204{val==}) (32 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=FunctionTypeBuilder})) (214{val=(}) (800{val=commonTypes}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=addRetType}) (214{val=(}) (800{val=instanceType}) (215{val=)})) (235{val=.}) (802{val=buildFunction}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=t}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=t}) (204{val==}) (40{val=commonTypes.UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=currentScope})) (235{val=.}) (802{val=addLocal}) (214{val=(}) (800{val=varName}) (234{val=,}) (40{val=commonTypes.UNKNOWN}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=resultType}) (204{val==}) (40{val=commonTypes.TOP})) (227{val=;})))
(AST_ROOT_SC2NF (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=String})) (800{val=typedefName})) (226{val=:}) (32 (800{val=localTypedefs}) (235{val=.}) (802{val=keySet}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=locals}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=typedefName}) (234{val=,}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNDEFINED})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=isTypeVar}) (204{val==}) (9{val=true})) (227{val=;})) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=JSType}) (235{val=.}) (802{val=fromTypeVar}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (234{val=,}) (32 (800{val=declaredType}) (235{val=.}) (802{val=getTypeVariableDefinedLocally}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addNamespace}) (214{val=(}) (800{val=qnameNode}) (234{val=,}) (14 (304{val=new}) (43 (801{val=NamespaceLit})) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (234{val=,}) (32 (800{val=qnameNode}) (235{val=.}) (802{val=getQualifiedName}) (216{val=()})) (234{val=,}) (800{val=qnameNode}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=root})) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=fromFunctionType}) (214{val=(}) (32 (800{val=declaredType}) (235{val=.}) (802{val=toFunctionType}) (216{val=()})) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=anyNumOrStr}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=NUMBER_OR_STRING})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (800{val=anyNumOrStr}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=numberOrNumber}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=STRING})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (800{val=stringOrString}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=numberOrNumber}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=NUMBER})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=t}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (800{val=numberOrNumber}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=stringOrString}) (204{val==}) (32 (800{val=JSType}) (235{val=.}) (802{val=join}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=STRING})) (234{val=,}) (800{val=stringInstance}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=numberOrNumber}) (204{val==}) (32 (800{val=JSType}) (235{val=.}) (802{val=join}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=NUMBER})) (234{val=,}) (800{val=numberInstance}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=ObjectType})) (802{val=getStringInstanceObjType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=stringInstanceObjtype}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=stringInstanceObjtype}) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=TOP_OBJECTTYPE}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=ObjectType})) (802{val=getBooleanInstanceObjType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=booleanInstanceObjtype}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=booleanInstanceObjtype}) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=TOP_OBJECTTYPE}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (43 (801{val=ObjectType})) (802{val=getNumberInstanceObjType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=numberInstanceObjtype}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=numberInstanceObjtype}) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=TOP_OBJECTTYPE}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getStringInstance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=stringInstance}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=stringInstance}) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=STRING}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getBooleanInstance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=booleanInstance}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=booleanInstance}) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=BOOLEAN}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getNumberInstance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=numberInstance}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=numberInstance}) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=NUMBER}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=JSType})) (802{val=getRegexpType}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=regexpInstance}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=regexpInstance}) (226{val=:}) (22 (315{val=this}) (235{val=.}) (800{val=UNKNOWN}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=arguments})) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=arrayType}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=fromFunctionType}) (214{val=(}) (800{val=ctorType}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ObjectType})) (59 (800{val=arrayType}) (204{val==}) (32 (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=getArrayInstance}) (216{val=()})) (235{val=.}) (802{val=getObjTypeIfSingletonObj}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=isTrueOrTruthy}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=FALSY})) (227{val=;})) (219{val=}})) (322{val=else}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isFalseOrFalsy}) (216{val=()})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=TRUTHY}) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=makeType}) (214{val=(}) (40{val=lhs.commonTypes}) (234{val=,}) (800{val=newtype}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=maybeScalar}) (204{val==}) (32 (800{val=ObjectType}) (235{val=.}) (802{val=mayTurnLooseObjectToScalar}) (214{val=(}) (800{val=t}) (234{val=,}) (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=t}) (242{val=!=}) (800{val=maybeScalar})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=maybeScalar}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=result}) (204{val==}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=BOTTOM}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=result}) (204{val==}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=TOP}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=noCycles}) (204{val==}) (32 (800{val=constructorType}) (235{val=.}) (802{val=addInterfaces}) (214{val=(}) (16 (32 (800{val=extendedInterfaces}) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (233{val=?}) (32 (800{val=ImmutableSet}) (235{val=.}) (802{val=of}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=getObjectType}) (216{val=()})) (215{val=)})) (226{val=:}) (800{val=extendedInterfaces})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=NominalType})) (59 (800{val=builtinObject}) (204{val==}) (32 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (802{val=getObjectType}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=builder}) (235{val=.}) (802{val=addRetType}) (214{val=(}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNDEFINED})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=builder}) (235{val=.}) (802{val=addRestFormals}) (214{val=(}) (16 (27 (800{val=t}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=t}) (226{val=:}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (800{val=t}) (235{val=.}) (802{val=isSingletonObjWithNull}) (216{val=()})) (233{val=?}) (32 (800{val=t}) (235{val=.}) (802{val=removeType}) (214{val=(}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=NULL})) (215{val=)})) (226{val=:}) (800{val=t})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=tdType}) (204{val==}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN}))) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getTypeFromCommentHelper}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=registry}) (234{val=,}) (800{val=typeParameters}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=UnknownTypeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (22 (315{val=this}) (235{val=.}) (800{val=commonTypes})) (235{val=.}) (800{val=UNKNOWN})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (21 (7 (40{val=lvalue.type}) (204{val==}) (16 (32 (40{val=lvalue.type}) (235{val=.}) (802{val=mayHaveProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (233{val=?}) (32 (40{val=lvalue.type}) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (226{val=:}) (800{val=UNKNOWN}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=doSlicing}) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=pair.env}) (204{val==}) (32 (802{val=envPutType}) (214{val=(}) (40{val=pair.env}) (234{val=,}) (800{val=name}) (234{val=,}) (16 (27 (800{val=declType}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=declType}) (226{val=:}) (800{val=UNKNOWN})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=lvalueType}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (800{val=TOP_OBJECT}) (215{val=)}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=requiredType}) (235{val=.}) (802{val=mayHaveProp}) (214{val=(}) (800{val=pname}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=reqPtype}) (204{val==}) (32 (800{val=requiredType}) (235{val=.}) (802{val=getProp}) (214{val=(}) (800{val=pname}) (215{val=)}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=reqPtype}) (204{val==}) (800{val=UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EnvTypePair})) (214{val=(}) (800{val=env}) (234{val=,}) (800{val=UNKNOWN}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=formalType}) (235{val=.}) (802{val=isBottom}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=formalType}) (204{val==}) (800{val=UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (40{val=pair.type}) (204{val==}) (800{val=BOOLEAN})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=JSType})) (59 (800{val=operandType}) (204{val==}) (16 (32 (800{val=requiredType}) (235{val=.}) (802{val=isNumber}) (216{val=()})) (233{val=?}) (800{val=NUMBER}) (226{val=:}) (800{val=UNKNOWN}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=private}) (43 (801{val=EnvTypePair})) (802{val=analyzeExprBwd}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=expr})) (234{val=,}) (44 (43 (801{val=TypeEnv})) (800{val=outEnv})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=analyzeExprBwd}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=outEnv}) (234{val=,}) (800{val=UNKNOWN}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=outerType}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=outerType}) (204{val==}) (800{val=UNKNOWN})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=JSType})) (59 (800{val=tmp}) (204{val==}) (32 (800{val=t}) (235{val=.}) (802{val=getIndexedType}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (16 (27 (800{val=tmp}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=UNKNOWN}) (226{val=:}) (800{val=tmp})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=reqPtype}) (204{val==}) (7 (800{val=specPtype}) (204{val==}) (800{val=UNKNOWN}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (800{val=currentScope}) (235{val=.}) (802{val=hasThis}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=mayWarnAboutGlobalThis}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=currentScope}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EnvTypePair})) (214{val=(}) (800{val=inEnv}) (234{val=,}) (800{val=UNKNOWN}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EnvTypePair})) (214{val=(}) (800{val=env}) (234{val=,}) (800{val=UNKNOWN}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=funType}) (235{val=.}) (802{val=isOptionalArg}) (214{val=(}) (800{val=i}) (215{val=)})) (249{val=&&}) (32 (40{val=pair.type}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=UNDEFINED}) (215{val=)}))))
(AST_ROOT_SC2NF (21 (7 (40{val=rhsPair.type}) (204{val==}) (800{val=BOOLEAN})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=analyzeExprFwd}) (214{val=(}) (800{val=expr}) (234{val=,}) (800{val=inEnv}) (234{val=,}) (800{val=UNKNOWN}) (234{val=,}) (800{val=UNKNOWN}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=rootNs}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=rootNs}) (235{val=.}) (802{val=isSubtypeOf}) (214{val=(}) (800{val=TOP_OBJECT}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=namespaceType}) (204{val==}) (32 (800{val=rootNs}) (235{val=.}) (802{val=getProp}) (214{val=(}) (32 (800{val=qname}) (235{val=.}) (802{val=getAllButLeftmost}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (800{val=out}) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=EnvTypePair})) (59 (800{val=lhsPair}) (204{val==}) (32 (802{val=analyzeExprBwd}) (214{val=(}) (800{val=lhs}) (234{val=,}) (800{val=outEnv}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=checkVariableReferencesForTranspileOnly}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=phaseopt}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externsNode}) (234{val=,}) (800{val=externAndJsRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (27 (32 (22 (315{val=this}) (235{val=.}) (800{val=rawType})) (235{val=.}) (802{val=isBuiltinWithName}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (249{val=&&}) (32 (32 (800{val=NUMERIC_PATTERN}) (235{val=.}) (802{val=matcher}) (214{val=(}) (800{val=pname}) (215{val=)})) (235{val=.}) (802{val=matches}) (216{val=()}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=ProcessDefinesTest}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (27 (800{val=DEFAULT_EXTERNS}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}) (227{val=;})) (21 (32 (802{val=allowSourcelessWarnings}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=isEqualTo}) (214{val=(}) (800{val=output}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=jsDocInfoPrinter}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=info}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=phaseopt}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externsNode}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=process}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=scriptRoot}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=checkVariableReferences}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=NodeTraversal}) (235{val=.}) (802{val=traverseEs6}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (39{val=long}) (802{val=stop}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=System}) (235{val=.}) (802{val=currentTimeMillis}) (216{val=()})) (201{val=-}) (800{val=start})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=replacement}) (235{val=.}) (802{val=setTypeI}) (214{val=(}) (32 (802{val=getNativeStringType}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=root}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=phaseopt}) (235{val=.}) (802{val=process}) (214{val=(}) (800{val=externsNode}) (234{val=,}) (800{val=externAndJsRoot}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=FindStaticMembers})) (59 (800{val=findStaticMembers}) (204{val==}) (14 (304{val=new}) (43 (801{val=FindStaticMembers})) (216{val=()}))) (227{val=;})) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=processTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (800{val=findStaticMembers}) (215{val=)})) (227{val=;})) (21 (32 (802{val=processInherits}) (214{val=(}) (40{val=findStaticMembers.inheritsCalls}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=checkVariableReferencesForTranspileOnly}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapCheck}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=TranspilationPasses}) (235{val=.}) (802{val=hotSwapTranspile}) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=scriptRoot}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clEqualitySameRewriterPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=j2clChangeTracker}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clConstantHoisterPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=j2clChangeTracker}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clClinitPrunerPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (800{val=j2clChangeTracker}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clConstantHoisterPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clClinitPrunerPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clEqualitySameRewriterPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=moduleNode}) (204{val==}) (32 (802{val=newNode}) (214{val=(}) (40{val=Token.MODULE_BODY}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=lhs}) (204{val==}) (32 (800{val=node}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=clinitFunction}) (204{val==}) (32 (800{val=multiExpression}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=methodName}) (204{val==}) (32 (800{val=member}) (235{val=.}) (802{val=getFirstFirstChild}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.ANALYZER_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=disable_testClassMethodUnused2}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=used}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testClassMethodUnused1}) (216{val=()}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mode})) (204{val==}) (40{val=TypeInferenceMode.NEITHER})) (227{val=;})) (21 (32 (802{val=unused}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=used}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=flowSensitiveInlineVariables}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (40{val=options.removeUnusedVars}) (250{val=||}) (40{val=options.removeUnusedLocalVars})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (802{val=lastRemoveUnusedVars}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=UnreachableCodeElimination})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setFoldConstants}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setFoldConstants}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=create}) (214{val=(}) (44 (43 (801{val=AbstractCompiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=UnreachableCodeElimination})) (214{val=(}) (800{val=compiler}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setRemoveDeadCode}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setRemoveDeadCode}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.LINT_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=options}) (235{val=.}) (802{val=setWarningLevel}) (214{val=(}) (40{val=DiagnosticGroups.ANALYZER_CHECKS}) (234{val=,}) (40{val=CheckLevel.WARNING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInvalidAnnotation5}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=testWarning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=INVALID_NO_SIDE_EFFECT_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=testInvalidAnnotation4}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (802{val=testWarning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (800{val=INVALID_NO_SIDE_EFFECT_ANNOTATION}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=toModuleName}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ModuleNames}) (235{val=.}) (802{val=toModuleName}) (214{val=(}) (800{val=path}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=toJSIdentifier}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ModuleNames}) (235{val=.}) (802{val=toJSIdentifier}) (214{val=(}) (800{val=path}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=requires}) (235{val=.}) (802{val=add}) (214{val=(}) (32 (32 (800{val=file}) (235{val=.}) (802{val=resolveEs6Module}) (214{val=(}) (800{val=arg}) (215{val=)})) (235{val=.}) (802{val=toModuleName}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=globalModuleName}) (204{val==}) (32 (32 (32 (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (235{val=.}) (802{val=getPath}) (216{val=()})) (235{val=.}) (802{val=resolveEs6Module}) (214{val=(}) (800{val=moduleName}) (215{val=)})) (235{val=.}) (802{val=toModuleName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=moduleName}) (204{val==}) (32 (32 (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (235{val=.}) (802{val=getPath}) (216{val=()})) (235{val=.}) (802{val=toModuleName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=moduleName}) (204{val==}) (32 (32 (32 (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (235{val=.}) (802{val=getPath}) (216{val=()})) (235{val=.}) (802{val=resolveEs6Module}) (214{val=(}) (32 (800{val=moduleIdentifier}) (235{val=.}) (802{val=getString}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=toModuleName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=moduleName}) (204{val==}) (32 (32 (32 (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (235{val=.}) (802{val=getPath}) (216{val=()})) (235{val=.}) (802{val=resolveEs6Module}) (214{val=(}) (800{val=importName}) (215{val=)})) (235{val=.}) (802{val=toModuleName}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (43 (40{val=ModuleLoader.ModulePath})) (800{val=actual})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=moduleName}) (204{val==}) (32 (32 (32 (800{val=t}) (235{val=.}) (802{val=getInput}) (216{val=()})) (235{val=.}) (802{val=getPath}) (216{val=()})) (235{val=.}) (802{val=toModuleName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=TemplateTypeMapReplacer})) (59 (800{val=replacer}) (204{val==}) (14 (304{val=new}) (43 (801{val=TemplateTypeMapReplacer})) (214{val=(}) (800{val=registry}) (234{val=,}) (315{val=this}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=warning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=SimpleErrorReporter}) (235{val=.}) (802{val=getMessage0}) (214{val=(}) (800{val=messageId}) (215{val=)})) (200{val=+}) (800{val=BAD_TYPE_WIKI_LINK})) (234{val=,}) (32 (802{val=getSourceName}) (216{val=()})) (234{val=,}) (800{val=lineno}) (234{val=,}) (800{val=charno}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=errorReporter}) (235{val=.}) (802{val=warning}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=SimpleErrorReporter}) (235{val=.}) (802{val=getMessage1}) (214{val=(}) (800{val=messageId}) (234{val=,}) (800{val=messageArg}) (215{val=)})) (200{val=+}) (800{val=BAD_TYPE_WIKI_LINK})) (234{val=,}) (32 (802{val=getSourceName}) (216{val=()})) (234{val=,}) (800{val=lineno}) (234{val=,}) (800{val=charno}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (40{val=RhinoErrorReporter.JSDOC_MISSING_BRACES_WARNING}) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=SourceMapObject})) (59 (800{val=sourceMapObject}) (204{val==}) (32 (800{val=SourceMapObjectParser}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=contents}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=parse}) (214{val=(}) (800{val=sourceMapObject}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=SourceMapObject})) (59 (800{val=sourceMapObject}) (204{val==}) (32 (800{val=SourceMapObjectParser}) (235{val=.}) (802{val=parse}) (214{val=(}) (800{val=contents}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=MemberDefinition})) (800{val=prop})) (226{val=:}) (32 (800{val=PolymerPassStaticUtils}) (235{val=.}) (802{val=extractProperties}) (214{val=(}) (800{val=objLit}) (234{val=,}) (800{val=compiler}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (40{val=prop.name}) (235{val=.}) (802{val=removeProp}) (214{val=(}) (40{val=Node.JSDOC_INFO_PROP}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=PolymerPassStaticUtils}) (235{val=.}) (802{val=extractProperties}) (214{val=(}) (800{val=objLit}) (234{val=,}) (800{val=compiler}) (215{val=)})))
(AST_ROOT_SC2NF (21 (32 (802{val=overwriteMembersIfPresent}) (214{val=(}) (800{val=allProperties}) (234{val=,}) (32 (800{val=PolymerPassStaticUtils}) (235{val=.}) (802{val=extractProperties}) (214{val=(}) (800{val=descriptor}) (234{val=,}) (800{val=compiler}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=GwtProperties})) (59 (800{val=p}) (204{val==}) (32 (800{val=GwtProperties}) (235{val=.}) (802{val=load}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (32 (802{val=assertThat}) (214{val=(}) (32 (800{val=p}) (235{val=.}) (802{val=propertyNames}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=MODULE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (32 (800{val=Arrays}) (235{val=.}) (802{val=copyOf}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=position}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=options.coalesceVariableNames}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=coalesceVariableNames}) (215{val=)})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (40{val=options.foldConstants}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=passes}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=peepholeOptimizationsOnce}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (32 (802{val=hasInstanceType}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (315{val=this}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=typeOfThis}) (235{val=.}) (802{val=toObjectType}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=sideEffectInfo}) (235{val=.}) (802{val=taintedLocals}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=v}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=sideEffectInfo}) (235{val=.}) (802{val=setTaintsGlobalState}) (216{val=()})) (227{val=;})) (21 (32 (800{val=sideEffectInfo}) (235{val=.}) (802{val=resetLocalVars}) (216{val=()})) (227{val=;})) (500{val=break;}) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=defs}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=functionInfo}) (235{val=.}) (802{val=setTaintsGlobalState}) (216{val=()})) (227{val=;})) (500{val=break;}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=test}) (214{val=(}) (800{val=options}) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=currentJsSource}) (204{val==}) (32 (802{val=getCurrentJsSource}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Config})) (59 (800{val=config}) (204{val==}) (32 (800{val=ParserRunner}) (235{val=.}) (802{val=createConfig}) (214{val=(}) (800{val=mode}) (234{val=,}) (40{val=Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}) (234{val=,}) (40{val=Config.RunMode.KEEP_GOING}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=ParseResult})) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=comments}) (234{val=,}) (800{val=features}) (234{val=,}) (32 (800{val=p}) (235{val=.}) (802{val=getInlineSourceMap}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=createConfig}) (214{val=(}) (800{val=languageMode}) (234{val=,}) (40{val=JsDocParsing.TYPES_ONLY}) (234{val=,}) (40{val=RunMode.STOP_AFTER_ERROR}) (234{val=,}) (800{val=extraAnnotationNames}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=config}) (234{val=,}) (800{val=errorReporter}) (234{val=,}) (800{val=source}) (234{val=,}) (800{val=offset}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=true}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=annotationWhitelist}) (234{val=,}) (40{val=JsDocParsing.TYPES_ONLY}) (234{val=,}) (40{val=RunMode.STOP_AFTER_ERROR}) (234{val=,}) (800{val=suppressionNames}) (234{val=,}) (800{val=languageMode}) (234{val=,}) (9{val=false}) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Config})) (59 (800{val=config}) (204{val==}) (14 (304{val=new}) (43 (801{val=Config})) (214{val=(}) (800{val=extraAnnotations}) (234{val=,}) (800{val=parseDocumentation}) (234{val=,}) (40{val=RunMode.STOP_AFTER_ERROR}) (234{val=,}) (800{val=extraSuppressions}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT3}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Config})) (59 (800{val=config}) (204{val==}) (14 (304{val=new}) (43 (801{val=Config})) (214{val=(}) (800{val=extraAnnotations}) (234{val=,}) (40{val=JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE}) (234{val=,}) (40{val=RunMode.KEEP_GOING}) (234{val=,}) (800{val=extraSuppressions}) (234{val=,}) (40{val=LanguageMode.ECMASCRIPT3}) (234{val=,}) (9{val=true}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (27 (27 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.DIV})) (249{val=&&}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=isNumber}) (216{val=()}))) (249{val=&&}) (27 (32 (32 (800{val=n}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (235{val=.}) (802{val=getDouble}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT}))))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=value}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=ancestor}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=GETTER_DEF}) (226{val=:})) (49 (326{val=case}) (800{val=SETTER_DEF}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=key}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=STRING_KEY}) (226{val=:})) (49 (326{val=case}) (800{val=GETTER_DEF}) (226{val=:})) (49 (326{val=case}) (800{val=SETTER_DEF}) (226{val=:})) (49 (326{val=case}) (800{val=MEMBER_FUNCTION_DEF}) (226{val=:})) (41 (329{val=return}) (32 (800{val=key}) (235{val=.}) (802{val=getString}) (216{val=()})) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=STRING_KEY}) (226{val=:})) (49 (326{val=case}) (800{val=GETTER_DEF}) (226{val=:})) (49 (326{val=case}) (800{val=SETTER_DEF}) (226{val=:})) (49 (326{val=case}) (800{val=MEMBER_FUNCTION_DEF}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.ASSIGN}))) (249{val=&&}) (27 (32 (800{val=parent}) (235{val=.}) (802{val=getFirstChild}) (216{val=()})) (236{val===}) (800{val=n}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=current}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=DECLARE}) (226{val=:})) (49 (326{val=case}) (800{val=EXPORT}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (32 (802{val=isStatementParent}) (214{val=(}) (800{val=parent}) (215{val=)})) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=SCRIPT}) (226{val=:})) (49 (326{val=case}) (800{val=MODULE_BODY}) (226{val=:})) (49 (326{val=case}) (800{val=BLOCK}) (226{val=:})) (49 (326{val=case}) (800{val=LABEL}) (226{val=:})) (49 (326{val=case}) (800{val=NAMESPACE_ELEMENTS}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=FOR}) (226{val=:})) (49 (326{val=case}) (800{val=FOR_OF}) (226{val=:})) (49 (326{val=case}) (800{val=DO}) (226{val=:})) (49 (326{val=case}) (800{val=WHILE}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (32 (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (1 (218{val={}) (31 (78 (208{val=@}) (800{val=Override})) (83{val=public}) (39{val=boolean}) (802{val=apply}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=n})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=type})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=VOID}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (49 (326{val=case}) (800{val=NAME}) (226{val=:})) (41 (329{val=return}) (32 (32 (800{val=n}) (235{val=.}) (802{val=getString}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkArgument}) (214{val=(}) (32 (800{val=callNode}) (235{val=.}) (802{val=isNew}) (216{val=()})) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=callNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=val}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=GT}) (226{val=:})) (49 (326{val=case}) (800{val=GE}) (226{val=:})) (49 (326{val=case}) (800{val=LT}) (226{val=:})) (49 (326{val=case}) (800{val=LE}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=EQ}) (226{val=:})) (49 (326{val=case}) (800{val=NE}) (226{val=:})) (49 (326{val=case}) (800{val=SHEQ}) (226{val=:})) (49 (326{val=case}) (800{val=SHNE}) (226{val=:})) (49 (326{val=case}) (800{val=MUL}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (500{val=break;}) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=valueNode}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=pType}) (204{val==}) (32 (32 (800{val=root}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=parentType}) (204{val==}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=DECLARATION_PARENTS}) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=propdef}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.STRING}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=op}) (235{val=.}) (802{val=setToken}) (214{val=(}) (800{val=assignOp}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (802{val=canFoldStandardConstructors}) (214{val=(}) (800{val=n}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.CALL}) (215{val=)})) (227{val=;})) (21 (32 (800{val=n}) (235{val=.}) (802{val=putBooleanProp}) (214{val=(}) (40{val=Node.FREE_CALL}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=include}) (236{val===}) (32 (800{val=nodeTypes}) (235{val=.}) (802{val=contains}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=Token})) (59 (800{val=type}) (204{val==}) (32 (800{val=valueNode}) (235{val=.}) (802{val=getToken}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=parent}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.ASSIGN}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=newOperator}) (235{val=.}) (802{val=setToken}) (214{val=(}) (800{val=complementOperator}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=shorthand}) (235{val=.}) (802{val=setToken}) (214{val=(}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getOpFromAssignmentOp}) (214{val=(}) (800{val=shorthand}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.FOR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (50 (305{val=switch}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=FOR}) (226{val=:})) (49 (326{val=case}) (800{val=FOR_OF}) (226{val=:})) (49 (326{val=case}) (800{val=DO}) (226{val=:})) (49 (326{val=case}) (800{val=WHILE}) (226{val=:})) (41 (329{val=return}) (9{val=true}) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Token})) (800{val=type})) (226{val=:}) (800{val=types}) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=c}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (800{val=type})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=c}) (227{val=;})) (219{val=}}))) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=n}) (235{val=.}) (802{val=isConst}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=handleDeclarationList}) (214{val=(}) (800{val=n}) (234{val=,}) (32 (800{val=n}) (235{val=.}) (802{val=getParent}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))) (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.VAR}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=declarationList}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.VAR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=currentProp}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.STRING}) (215{val=)})) (227{val=;})) (21 (7 (800{val=newProp}) (204{val==}) (32 (32 (800{val=IR}) (235{val=.}) (802{val=getprop}) (214{val=(}) (32 (800{val=objectToExtend}) (235{val=.}) (802{val=cloneTree}) (216{val=()})) (234{val=,}) (800{val=currentProp}) (215{val=)})) (235{val=.}) (802{val=srcref}) (214{val=(}) (800{val=currentProp}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=n}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=member}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.STRING_KEY}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=c}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.VAR}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Node})) (59 (800{val=dollarChildProp}) (204{val==}) (32 (800{val=n}) (235{val=.}) (802{val=getGrandparent}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=dollarChildProp}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.GETELEM}) (215{val=)})) (227{val=;})) (21 (32 (800{val=compiler}) (235{val=.}) (802{val=reportCodeChange}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (50 (305{val=switch}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}) (218{val={}) (49 (326{val=case}) (800{val=NAME}) (226{val=:})) (49 (326{val=case}) (800{val=STRING}) (226{val=:})) (49 (326{val=case}) (800{val=STRING_KEY}) (226{val=:})) (41 (329{val=return}) (32 (800{val=node}) (235{val=.}) (802{val=getString}) (216{val=()})) (227{val=;})) (500{val=default:}) (41 (329{val=return}) (32 (800{val=compiler}) (235{val=.}) (802{val=toSource}) (214{val=(}) (800{val=node}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Token})) (59 (800{val=inverseOperator}) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=getInverseOperator}) (214{val=(}) (32 (800{val=subtree}) (235{val=.}) (802{val=getToken}) (216{val=()})) (215{val=)}))) (227{val=;})) (21 (32 (800{val=subtree}) (235{val=.}) (802{val=setToken}) (214{val=(}) (800{val=inverseOperator}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=jsdoc}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=jsdocNode}) (242{val=!=}) (500{val=null})) (249{val=&&}) (27 (32 (800{val=jsdocNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.ELLIPSIS}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkState}) (214{val=(}) (27 (32 (800{val=thisRoot}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.BANG})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=isPropDeclared}) (204{val==}) (27 (32 (800{val=propNode}) (235{val=.}) (802{val=getToken}) (216{val=()})) (236{val===}) (40{val=Token.COLON}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=importedName}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.NAME}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=key}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.STRING_KEY}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=key}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.SETTER_DEF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=key}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.GETTER_DEF}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=irNode}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.BLOCK}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (800{val=name}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (32 (800{val=parent}) (235{val=.}) (802{val=getToken}) (216{val=()})))
(AST_ROOT_SC2NF (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (800{val=TEMPLATE_LOCAL_NAME}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=n}) (235{val=.}) (802{val=setToken}) (214{val=(}) (800{val=TEMPLATE_TYPE_PARAM}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=keyNode}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.STRING_KEY}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=keyNode}) (235{val=.}) (802{val=setToken}) (214{val=(}) (40{val=Token.STRING_KEY}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (27 (36 (214{val=(}) (27 (32 (800{val=n}) (235{val=.}) (802{val=isScript}) (216{val=()})) (250{val=||}) (32 (800{val=n}) (235{val=.}) (802{val=isFunction}) (216{val=()}))) (215{val=)})) (249{val=&&}) (32 (800{val=comp}) (235{val=.}) (802{val=hasScopeChanged}) (214{val=(}) (800{val=n}) (215{val=)}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=taintsThis}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getMask}) (214{val=(}) (800{val=TAINTS_THIS_MASK}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=taintsGlobalState}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getMask}) (214{val=(}) (800{val=TAINTS_GLOBAL_STATE_MASK}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=pureFunction}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getMask}) (214{val=(}) (800{val=PURE_FUNCTION_MASK}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=node}) (235{val=.}) (802{val=isFunction}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=functionSideEffectMap}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=node}) (234{val=,}) (32 (802{val=createFunctionInfo}) (214{val=(}) (800{val=node}) (234{val=,}) (800{val=parent}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=Collection})) (230{val=<}) (43 (800{val=Definition})) (231{val=>})) (59 (800{val=defs}) (204{val==}) (32 (802{val=getFunctionDefinitions}) (214{val=(}) (800{val=definitionProvider}) (234{val=,}) (800{val=callSite}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=functionSideEffectMap})) (204{val==}) (14 (304{val=new}) (74 (43 (801{val=LinkedHashMap})) (232{val=<>})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (14 (304{val=new}) (43 (801{val=MinimizeExitPoints})) (214{val=(}) (800{val=compiler}) (215{val=)})) (235{val=.}) (802{val=asCompilerPass}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clClinitPrunerPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (83{val=final}) (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clConstantHoisterPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerPass})) (802{val=getProcessor}) (214{val=(}) (44 (43 (801{val=Compiler})) (800{val=compiler})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=J2clEqualitySameRewriterPass})) (214{val=(}) (800{val=compiler}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=testSame}) (214{val=(}) (32 (800{val=LINE_JOINER}) (235{val=.}) (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=compiler})) (204{val==}) (32 (800{val=Preconditions}) (235{val=.}) (802{val=checkNotNull}) (214{val=(}) (800{val=compiler}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=useTypesForOptimization}) (204{val==}) (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (800{val=useTypesForLocalOptimization}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=shouldAmbiguateProperties}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=ambiguateProperties})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=shouldDisambiguateProperties}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=disambiguateProperties})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Override})) (83{val=protected}) (43 (801{val=CompilerOptions})) (802{val=getOptions}) (214{val=(}) (44 (43 (801{val=CompilerOptions})) (800{val=options})) (215{val=)}) (8 (218{val={}) (21 (7 (40{val=options.useTypesForLocalOptimization}) (204{val==}) (9{val=true})) (227{val=;})) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getOptions}) (214{val=(}) (800{val=options}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=CompilerPass})) (59 (800{val=peepholePass}) (204{val==}) (14 (304{val=new}) (43 (801{val=PeepholeOptimizationsPass})) (214{val=(}) (800{val=compiler}) (234{val=,}) (14 (304{val=new}) (43 (801{val=PeepholeFoldConstants})) (214{val=(}) (800{val=late}) (234{val=,}) (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (800{val=useTypesForLocalOptimization})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (800{val=useTypesForLocalOptimization})))
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=boolean}) (59 (800{val=useTypesForOptimization}) (204{val==}) (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (800{val=useTypesForLocalOptimization}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (22 (32 (800{val=compiler}) (235{val=.}) (802{val=getOptions}) (216{val=()})) (235{val=.}) (800{val=useTypesForLocalOptimization}))) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=CompilerOptions})) (59 (800{val=options}) (204{val==}) (48 (349{val=super}) (235{val=.}) (802{val=getOptions}) (216{val=()}))) (227{val=;})) (21 (7 (40{val=options.useTypesForLocalOptimization}) (204{val==}) (800{val=useTypesForOptimization})) (227{val=;})) (21 (32 (800{val=options}) (235{val=.}) (802{val=setJ2clPass}) (214{val=(}) (40{val=CompilerOptions.J2clPassMode.ON}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=options}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=MockitoOperations}) (235{val=.}) (802{val=reportLastControlForStubbing}) (214{val=(}) (500{val=null}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=MockitoOperations}) (235{val=.}) (802{val=reportLastControlForStubbing}) (214{val=(}) (315{val=this}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=replay}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=replay}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=mock}) (235{val=.}) (802{val=simpleMethodWithArgument}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (800{val=mock}) (235{val=.}) (802{val=simpleMethodWithArgument}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=addInvocation}) (214{val=(}) (44 (43 (801{val=InvocationWithMatchers})) (800{val=invocation})) (215{val=)}) (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=registeredInvocations})) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=invocation}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=behavior}) (235{val=.}) (802{val=addInvocation}) (214{val=(}) (800{val=invocationWithMatchers}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=proxyFactory}) (235{val=.}) (802{val=createProxy}) (214{val=(}) (800{val=toMock}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MockitoObjectMethodsFilter})) (214{val=(}) (800{val=toMock}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MockInvocationHandler})) (214{val=(}) (315{val=this}) (215{val=)})) (234{val=,}) (800{val=name}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=proxyFactory}) (235{val=.}) (802{val=createProxy}) (214{val=(}) (800{val=toMock}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MockitoObjectMethodsFilter})) (214{val=(}) (800{val=toMock}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MockInvocationHandler})) (214{val=(}) (315{val=this}) (215{val=)})) (234{val=,}) (500{val=null}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Field})) (59 (800{val=methodField}) (204{val==}) (32 (802{val=retrieveField}) (214{val=(}) (57 (43 (800{val=MockitoObjectMethodsFilter})) (235{val=.}) (341{val=class})) (234{val=,}) (27 (32 (800{val=correctMethod}) (235{val=.}) (802{val=getName}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=AssertionErrorWrapper})) (214{val=(}) (14 (304{val=new}) (43 (801{val=AssertionError})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=actual}) (235{val=.}) (802{val=toString}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=errorMessage}) (235{val=.}) (802{val=toString}) (216{val=()}))) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=returnedType}) (235{val=.}) (802{val=isPrimitive}) (216{val=()})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=returnedType}) (204{val==}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=oneArg}) (214{val=(}) (32 (800{val=CrazyMatchers}) (235{val=.}) (802{val=find}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=threeArgumentMethod}) (214{val=(}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=CrazyMatchers}) (235{val=.}) (802{val=not}) (214{val=(}) (32 (802{val=notNull}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=eq}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=threeArgumentMethod}) (214{val=(}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (800{val=CrazyMatchers}) (235{val=.}) (802{val=not}) (214{val=(}) (32 (802{val=isNull}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=eq}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=oneArg}) (214{val=(}) (32 (800{val=CrazyMatchers}) (235{val=.}) (802{val=or}) (214{val=(}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=oneArg}) (214{val=(}) (32 (800{val=CrazyMatchers}) (235{val=.}) (802{val=cmpEq}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BigDecimal})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertThat}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=InvocationWithMatchers})) (214{val=(}) (800{val=invocation}) (234{val=,}) (500{val=null}) (215{val=)})) (235{val=.}) (802{val=hashCode}) (216{val=()})) (234{val=,}) (32 (802{val=equalTo}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=first}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (800{val=first}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportNot}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ArrayEquals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Find})) (214{val=(}) (800{val=regex}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StartsWith})) (214{val=(}) (800{val=prefix}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=EndsWith})) (214{val=(}) (800{val=suffix}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Same})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportOr}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportAnd}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Contains})) (214{val=(}) (800{val=substring}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=MethodSelector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (802{val=toThrow}) (214{val=(}) (44 (43 (801{val=Throwable})) (800{val=throwable})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=mockitoState}) (235{val=.}) (802{val=reportThrowableToBeSetOnVoidMethod}) (214{val=(}) (800{val=throwable}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=verifyingStarted}) (214{val=(}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=times}) (214{val=(}) (800{val=exactNumberOfInvocations}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=mock}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MockUtil}) (235{val=.}) (802{val=validateMock}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=verifyingStarted}) (214{val=(}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=anyTimes}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=mock}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=EqualsWithDelta})) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=delta}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=EqualsWithDelta})) (214{val=(}) (800{val=value}) (234{val=,}) (800{val=delta}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Matches})) (214{val=(}) (800{val=regex}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (40{val=NotNull.NOT_NULL}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (40{val=Null.NULL}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Equals})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (800{val=clazz}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=LastArguments}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=MockitoExpectation})) (59 (800{val=controlToStub}) (204{val==}) (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=removeControlToBeStubbed}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=synchronized}) (39{val=void}) (802{val=verifyingStarted}) (214{val=(}) (44 (43 (801{val=VerifyingMode})) (800{val=verify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=checkForUnfinishedVerification}) (216{val=()})) (227{val=;})) (21 (32 (800{val=verifyingModeLocal}) (235{val=.}) (802{val=set}) (214{val=(}) (800{val=verify}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (32 (800{val=state}) (235{val=.}) (802{val=verificationScenario}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setMock}) (214{val=(}) (44 (43 (801{val=T})) (800{val=mock})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=mock})) (204{val==}) (800{val=mock})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Invocation})) (59 (800{val=lastInvocation}) (204{val==}) (32 (800{val=behavior}) (235{val=.}) (800{val=lastInvocation}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertSame}) (214{val=(}) (800{val=mode}) (234{val=,}) (32 (800{val=mockitoState}) (235{val=.}) (802{val=removeVerifyingMode}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Invocation})) (800{val=invocation})))
(AST_ROOT_SC2NF (60 (43 (801{val=Invocation})) (59 (800{val=invocation}) (204{val==}) (32 (800{val=registeredInvocation}) (235{val=.}) (802{val=getInvocation}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNull}) (214{val=(}) (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=pullControlToBeStubbed}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MockitoExpectation})) (59 (800{val=controlToStub}) (204{val==}) (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=pullControlToBeStubbed}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=MethodSelector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (802{val=toThrow}) (214{val=(}) (44 (43 (801{val=Throwable})) (800{val=throwable})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=throwableToBeSetOnVoidMethod}) (204{val==}) (800{val=throwable})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=withBooleanVarargs}) (214{val=(}) (44 (39{val=int}) (800{val=value})) (234{val=,}) (44 (39{val=boolean}) (235{val=.}) (235{val=.}) (235{val=.}) (800{val=b})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=MockControl})) (59 (800{val=control}) (204{val==}) (32 (800{val=lastControl}) (235{val=.}) (802{val=get}) (216{val=()}))) (227{val=;})) (21 (32 (800{val=lastControl}) (235{val=.}) (802{val=set}) (214{val=(}) (500{val=null}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=control}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MockAwareStub}) (216{val=()}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (57 (43 (800{val=Object})) (235{val=.}) (341{val=class})) (234{val=,}) (500{val=null}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=VerificationAssertionError})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=VerificationAssertionError})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=VerificationAssertionError})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=VerificationAssertionError})) (800{val=expected})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=exactNumberOfInvocations}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MockitoException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=VerifyingMode})) (214{val=(}) (800{val=exactNumberOfInvocations}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NumberOfInvocationsAssertionError}) (214{val=(}) (44 (39{val=int}) (800{val=expectedInvoked})) (234{val=,}) (44 (39{val=int}) (800{val=actuallyInvoked})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=expectedInvoked}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=actuallyInvoked})) (234{val=,}) (14 (304{val=new}) (43 (801{val=LastClassIsCglibEnchantedFilter})) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=mock}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=MockitoException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyZeroInteractions}) (214{val=(}) (800{val=map}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyZeroInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=Mockito}) (235{val=.}) (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=expected})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=Mockito}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=expected})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=Mockito}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationAssertionError})) (800{val=expected})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyZeroInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=mockitoState}) (235{val=.}) (802{val=verifyingStarted}) (214{val=(}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=anyTimes}) (216{val=()})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=NumberOfInvocationsAssertionError}) (214{val=(}) (44 (39{val=int}) (800{val=expectedInvoked})) (234{val=,}) (44 (39{val=int}) (800{val=actuallyInvoked})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=expectedInvoked}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=actuallyInvoked})) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=actuallyInvoked}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (800{val=VerificationAssertionError})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=invocation}) (235{val=.}) (802{val=toString}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=expected}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (800{val=error}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedMessage}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedMessage}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=message}) (237{val=+=}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=expected}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedMessage}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=expectedMessage}) (204{val==}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=simpleMethod}) (214{val=(}) (44 (43 (801{val=String})) (800{val=argument})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=VerificationAssertionError})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=verificationErrorMessage}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=mockName}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=registeredInvocation}) (235{val=.}) (802{val=toString}) (216{val=()}))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=mock}) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=reader}) (235{val=.}) (802{val=read}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertEquals}) (214{val=(}) (800{val=ioException}) (234{val=,}) (800{val=e}) (215{val=)})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=InstanceOf}) (214{val=(}) (44 (74 (43 (800{val=Class})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=clazz})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=clazz})) (204{val==}) (800{val=clazz})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=Object})) (802{val=newInstance}) (214{val=(}) (44 (74 (43 (800{val=Class})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=clazz})) (215{val=)}) (301{val=throws}) (43 (800{val=InstantiationException})) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ObjenesisHelper}) (235{val=.}) (802{val=newInstance}) (214{val=(}) (800{val=clazz}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (74 (43 (800{val=Class})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=paramType})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=Object})) (802{val=emptyReturnValueFor}) (214{val=(}) (44 (74 (43 (800{val=Class})) (230{val=<}) (76{val=?}) (231{val=>})) (800{val=type})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=emptyReturnValueToType}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=type}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Mockito}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mock}) (234{val=,}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=inSequence}) (214{val=(}) (800{val=exactNumberOfInvocations}) (234{val=,}) (800{val=mocks}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=isLastStackElementToRemove}) (214{val=(}) (800{val=trace}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=lastToRemove}) (204{val==}) (800{val=i})) (227{val=;})) (219{val=}}))) (21 (37 (800{val=i}) (247{val=++})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=list}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=list}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=map}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=put}) (214{val=(}) (32 (802{val=anyObject}) (216{val=()})) (234{val=,}) (32 (802{val=anyObject}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=oneArg}) (214{val=(}) (800{val=two}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=orderOfInvocationsMatters}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (38 (207{val=!}) (32 (800{val=mocksToBeVerifiedInSequence}) (235{val=.}) (802{val=isEmpty}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=state}) (235{val=.}) (802{val=verifyingStarted}) (214{val=(}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=atLeastOnce}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=verifyZeroInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNotNull}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (57 (43 (800{val=ClassWithoutConstructor})) (235{val=.}) (341{val=class})) (234{val=,}) (800{val=superClass}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (57 (43 (800{val=Object})) (235{val=.}) (341{val=class})) (234{val=,}) (800{val=superClass}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=list}) (234{val=,}) (800{val=map}) (234{val=,}) (800{val=set}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=atLeastOnceMode}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=expectedNumberOfInvocations}) (236{val===}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Invocation})) (59 (800{val=lastInvocation}) (204{val==}) (32 (32 (800{val=behavior}) (235{val=.}) (802{val=getInvocationForStubbing}) (216{val=()})) (235{val=.}) (802{val=getInvocation}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=invocation}) (235{val=.}) (802{val=setSequenceNumber}) (214{val=(}) (32 (800{val=mockitoState}) (235{val=.}) (802{val=nextSequenceNumber}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=invocation})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertThat}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=ExpectedInvocation})) (214{val=(}) (800{val=invocation}) (234{val=,}) (500{val=null}) (215{val=)})) (235{val=.}) (802{val=hashCode}) (216{val=()})) (234{val=,}) (32 (802{val=equalTo}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=expectedInvocation})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=expectedInvocation})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=invocation})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=ExpectedInvocation})) (800{val=invocation})))
(AST_ROOT_SC2NF (60 (39{val=boolean}) (59 (800{val=shouldMarkAsVerified}) (204{val==}) (27 (32 (800{val=verifyingMode}) (235{val=.}) (802{val=atLeastOnceMode}) (216{val=()})) (250{val=||}) (27 (32 (800{val=verifyingMode}) (235{val=.}) (802{val=getExpectedNumberOfInvocations}) (216{val=()})) (231{val=>}) (800{val=verifiedSoFar})))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=expectedInvocationCount})) (204{val==}) (800{val=expectedNumberOfInvocations})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Invocation})) (59 (800{val=invocation}) (204{val==}) (14 (304{val=new}) (43 (801{val=Invocation})) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=m}) (234{val=,}) (800{val=args}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=InvocationChunk})) (231{val=>})) (59 (800{val=chunks}) (204{val==}) (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=unverifiedInvocationChunks}) (214{val=(}) (800{val=mode}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Invocation})) (59 (800{val=similarInvocation}) (204{val==}) (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=findSimilarInvocation}) (214{val=(}) (800{val=invocation}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=actuallyInvoked}) (204{val==}) (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=countActual}) (214{val=(}) (800{val=expected}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=actualCount}) (204{val==}) (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=countActual}) (214{val=(}) (800{val=expected}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=markInvocationsAsVerified}) (214{val=(}) (800{val=expected}) (234{val=,}) (800{val=verifyingMode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (6 (306{val=assert}) (27 (800{val=invocationForStubbing}) (242{val=!=}) (500{val=null})) (227{val=;})) (21 (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=removeLast}) (216{val=()})) (227{val=;})) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=results})) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=invocationForStubbing}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=registered}) (235{val=.}) (802{val=markInvocationsAsVerified}) (214{val=(}) (14 (304{val=new}) (43 (801{val=ExpectedInvocation})) (214{val=(}) (800{val=simpleMethodInvocation}) (234{val=,}) (800{val=EMPTY_LIST}) (215{val=)})) (234{val=,}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=times}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=i}) (235{val=.}) (802{val=isVerifiedInOrder}) (216{val=()})) (215{val=)}) (8 (218{val={}) (500{val=continue;}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=markAllInvocationsAsVerified}) (216{val=()}) (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Invocation})) (800{val=invocation})) (226{val=:}) (800{val=invocations}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=invocation}) (235{val=.}) (802{val=markVerifiedInOrder}) (216{val=()})) (227{val=;})) (21 (32 (800{val=invocation}) (235{val=.}) (802{val=markVerified}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (800{val=strictly}) (204{val==}) (32 (802{val=createStrictOrderVerifier}) (214{val=(}) (800{val=mockOne}) (234{val=,}) (800{val=mockTwo}) (234{val=,}) (800{val=mockThree}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (40{val=mocks.length}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Exceptions}) (235{val=.}) (802{val=mocksHaveToBePassedAsArguments}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=strictly}) (204{val==}) (32 (802{val=createStrictOrderVerifier}) (214{val=(}) (800{val=mockOne}) (234{val=,}) (800{val=mockThree}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (315{val=this}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mock}) (234{val=,}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=inOrder}) (214{val=(}) (800{val=expectedNumberOfInvocations}) (234{val=,}) (800{val=mocksToBeVerifiedInOrder}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=List})) (230{val=<}) (43 (800{val=InvocationChunk})) (231{val=>})) (59 (800{val=chunks}) (204{val==}) (32 (800{val=registered}) (235{val=.}) (802{val=unverifiedInvocationChunks}) (214{val=(}) (32 (802{val=inOrder}) (214{val=(}) (500{val=null}) (234{val=,}) (32 (802{val=asList}) (214{val=(}) (800{val=mock}) (215{val=)})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=registered}) (235{val=.}) (802{val=unverifiedInvocationChunks}) (214{val=(}) (32 (802{val=inOrder}) (214{val=(}) (500{val=null}) (234{val=,}) (800{val=dummyMocks}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=ExpectedInvocation})) (59 (800{val=invocation}) (204{val==}) (14 (304{val=new}) (43 (801{val=ExpectedInvocation})) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=InvocationBuilder})) (216{val=()})) (235{val=.}) (802{val=toInvocation}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mockOne}) (234{val=,}) (800{val=mockTwo}) (234{val=,}) (800{val=mockThree}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockTwo}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=VerificationError})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (31 (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=VerificationError})) (235{val=.}) (341{val=class}))) (215{val=)})) (83{val=public}) (39{val=void}) (802{val=shouldFailWhenLastMethodCalledFirst}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=oneArg}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockTwo}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=oneArg}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (31 (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=VerificationError})) (235{val=.}) (341{val=class}))) (215{val=)})) (83{val=public}) (39{val=void}) (802{val=shouldFailOnFirstMethodBecauseDifferentMethodExpected}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=oneArg}) (214{val=(}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=VerificationError})) (235{val=.}) (341{val=class}))) (215{val=)})) (83{val=public}) (39{val=void}) (802{val=shouldFailOnFirstMethodBecauseDifferentArgsExpected}) (216{val=()}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=VerificationError})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mockTwo}) (234{val=,}) (32 (802{val=atLeastOnce}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (38 (207{val=!}) (800{val=atLeastOnce})) (249{val=&&}) (27 (800{val=actuallyInvoked}) (242{val=!=}) (800{val=expectedInvoked}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NumberOfInvocationsAssertionError})) (214{val=(}) (800{val=expectedInvoked}) (234{val=,}) (800{val=actuallyInvoked}) (234{val=,}) (32 (800{val=expected}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=firstMethodOnStackEqualsTo}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=firstMethodOnStackEqualsTo}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=firstMethodOnStackEqualsTo}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=firstMethodOnStackEqualsTo}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (31 (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=VerificationError})) (235{val=.}) (341{val=class}))) (215{val=)})) (83{val=public}) (39{val=void}) (802{val=shouldFailVerification}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Exception})) (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (44 (43 (801{val=VerificationError})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=VerificationError})) (800{val=expected})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockThree}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockThree}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mockOne}) (234{val=,}) (800{val=mockTwo}) (234{val=,}) (800{val=mockThree}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mockOne}) (234{val=,}) (800{val=mockTwo}) (234{val=,}) (800{val=mockThree}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyZeroInteractions}) (214{val=(}) (800{val=map}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyZeroInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (802{val=verifyNoMoreInteractions}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockOne}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockTwo}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockTwo}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NumberOfInvocationsError})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=NumberOfInvocationsError})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (800{val=Mockito}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mock}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=endsWith}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=e}) (235{val=.}) (802{val=getMessage}) (216{val=()})) (235{val=.}) (802{val=endsWith}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})))
(AST_ROOT_SC2NF (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})))
(AST_ROOT_SC2NF (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=wanted}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=mode}) (235{val=.}) (802{val=wantedCountIsZero}) (216{val=()})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=matchResult}) (214{val=(}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=Comparable})) (215{val=)}) (800{val=actual})) (215{val=)})) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=wanted}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=wanted})) (204{val==}) (800{val=value})) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=delta})) (204{val==}) (800{val=delta})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=actual}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=operator}) (235{val=.}) (802{val=matchResult}) (214{val=(}) (32 (800{val=comparator}) (235{val=.}) (802{val=compare}) (214{val=(}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (800{val=actual})) (234{val=,}) (800{val=wanted}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=appendQuoting}) (214{val=(}) (800{val=buffer}) (215{val=)})) (227{val=;})) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=wanted}) (215{val=)})) (227{val=;})) (21 (32 (802{val=appendQuoting}) (214{val=(}) (800{val=buffer}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=Mockito}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mock}) (234{val=,}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=inOrder}) (214{val=(}) (32 (800{val=verifyingMode}) (235{val=.}) (802{val=wantedCount}) (216{val=()})) (234{val=,}) (800{val=mocksToBeVerifiedInOrder}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (230{val=<}) (73 (800{val=T})) (231{val=>}) (43 (800{val=T})) (802{val=verify}) (214{val=(}) (44 (43 (800{val=T})) (800{val=mock})) (234{val=,}) (44 (39{val=int}) (800{val=wantedNumberOfInvocations})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Integer})) (802{val=wantedCount}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=wantedInvocationCount}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=reportStrictOrderDiscrepancy}) (214{val=(}) (800{val=wanted}) (234{val=,}) (32 (32 (800{val=chunks}) (235{val=.}) (802{val=get}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (235{val=.}) (802{val=getInvocation}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=actual}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=reportDiscrepancy}) (214{val=(}) (800{val=wanted}) (234{val=,}) (800{val=actual}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (800{val=Exceptions}) (235{val=.}) (802{val=wantedButNotInvoked}) (214{val=(}) (32 (800{val=wanted}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=m}) (235{val=.}) (802{val=isBridge}) (216{val=()})) (215{val=)}) (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (32 (800{val=m}) (235{val=.}) (802{val=getName}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=methodName}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (39{val=void}) (802{val=print}) (214{val=(}) (44 (43 (801{val=Object})) (800{val=message})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=mock}) (235{val=.}) (802{val=print}) (214{val=(}) (800{val=message}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=say}) (214{val=(}) (44 (43 (801{val=String})) (800{val=message})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=say}) (214{val=(}) (44 (43 (801{val=Object})) (800{val=message})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=unverified}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=Exceptions}) (235{val=.}) (802{val=noMoreInteractionsWanted}) (214{val=(}) (32 (800{val=unverified}) (235{val=.}) (802{val=toString}) (216{val=()})) (234{val=,}) (800{val=message}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=simpleMethod}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=andThrows}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Exception})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Strictly})) (59 (800{val=strictly}) (204{val==}) (32 (802{val=createStrictOrderVerifier}) (214{val=(}) (800{val=mock}) (215{val=)}))) (227{val=;})) (21 (32 (32 (800{val=strictly}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=mockTwo}) (215{val=)})) (235{val=.}) (802{val=simpleMethod}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=synchronized}) (39{val=void}) (802{val=verifyingStarted}) (214{val=(}) (44 (43 (801{val=VerifyingMode})) (800{val=verify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateState}) (216{val=()})) (227{val=;})) (21 (32 (800{val=verifyingModeLocal}) (235{val=.}) (802{val=set}) (214{val=(}) (800{val=verify}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=validateState}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=validateState}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (6 (306{val=assert}) (27 (800{val=invocationForStubbing}) (242{val=!=}) (500{val=null})) (227{val=;})) (21 (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=removeLast}) (216{val=()})) (227{val=;})) (21 (32 (800{val=results}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=invocationForStubbing}) (234{val=,}) (800{val=result}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (14 (304{val=new}) (74 (43 (801{val=IAnswer})) (230{val=<}) (43 (800{val=Object})) (231{val=>})) (216{val=()}) (1 (218{val={}) (31 (83{val=public}) (43 (800{val=Object})) (802{val=answer}) (214{val=(}) (215{val=)}) (301{val=throws}) (43 (800{val=Throwable})) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=throwable}) (235{val=.}) (802{val=fillInStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}}))))
(AST_ROOT_SC2NF (31 (39{val=boolean}) (802{val=simpleMethod}) (214{val=(}) (44 (43 (801{val=String})) (800{val=argument})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=simpleMethod}) (214{val=(}) (44 (39{val=int}) (800{val=argument})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (43 (801{val=String})) (802{val=simpleMethod}) (214{val=(}) (44 (43 (801{val=String})) (800{val=argument})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=oneArg}) (214{val=(}) (32 (802{val=find}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=threeArgumentMethod}) (214{val=(}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=not}) (214{val=(}) (32 (802{val=notNull}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=eq}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=threeArgumentMethod}) (214{val=(}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=not}) (214{val=(}) (32 (802{val=isNull}) (216{val=()})) (215{val=)})) (234{val=,}) (32 (802{val=eq}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=oneArg}) (214{val=(}) (32 (802{val=or}) (214{val=(}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (234{val=,}) (32 (802{val=eq}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (32 (802{val=stub}) (214{val=(}) (32 (800{val=mock}) (235{val=.}) (802{val=oneArg}) (214{val=(}) (32 (802{val=cmpEq}) (214{val=(}) (14 (304{val=new}) (43 (801{val=BigDecimal})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=andReturn}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (78 (208{val=@}) (800{val=Test})) (78 (208{val=@}) (800{val=Ignore})) (83{val=public}) (39{val=void}) (802{val=shouldDetectProblemsWithMatchers}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (6 (306{val=assert}) (27 (800{val=invocationForStubbing}) (242{val=!=}) (500{val=null})) (227{val=;})) (21 (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=removeLast}) (216{val=()})) (227{val=;})) (21 (32 (800{val=stubbed}) (235{val=.}) (802{val=addFirst}) (214{val=(}) (14 (304{val=new}) (43 (801{val=StubbedInvocation})) (214{val=(}) (800{val=invocationForStubbing}) (234{val=,}) (800{val=result}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (800{val=call}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=callWithNewStringInstance}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=result}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (60 (43 (801{val=StringBuilder})) (59 (800{val=sb}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringBuilder})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (31 (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=suffix}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=wanted}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=delta}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=prefix}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=clazz}) (235{val=.}) (802{val=getName}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (32 (802{val=getName}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=wanted}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (44 (43 (801{val=StringBuilder})) (800{val=buffer})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=substring}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=appendTo}) (214{val=(}) (44 (43 (801{val=StringBuilder})) (800{val=buffer})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=buffer}) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (83{val=synchronized}) (43 (801{val=LastArguments})) (802{val=instance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=INSTANCE}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=stubbingCompleted}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateThrowable}) (214{val=(}) (800{val=throwable}) (215{val=)})) (227{val=;})) (21 (32 (800{val=behavior}) (235{val=.}) (802{val=addResult}) (214{val=(}) (32 (800{val=Result}) (235{val=.}) (802{val=createThrowResult}) (214{val=(}) (800{val=throwable}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (800{val=MockitoState}) (235{val=.}) (802{val=instance}) (216{val=()})) (235{val=.}) (802{val=stubbingCompleted}) (216{val=()})) (227{val=;})) (21 (32 (800{val=behavior}) (235{val=.}) (802{val=addResult}) (214{val=(}) (32 (800{val=Result}) (235{val=.}) (802{val=createReturnResult}) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (83{val=synchronized}) (43 (801{val=MockitoState})) (802{val=instance}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=INSTANCE}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=verifyingStarted}) (214{val=(}) (44 (43 (801{val=VerifyingMode})) (800{val=verify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=validateState}) (216{val=()})) (227{val=;})) (21 (7 (800{val=verifyingMode}) (204{val==}) (800{val=verify})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (800{val=toAssert})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=matcherStack}) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=InvalidUseOfMatchersException})) (214{val=(}) (800{val=message}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=oneArray}) (214{val=(}) (32 (802{val=aryEq}) (214{val=(}) (800{val=nullArray}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=map}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=call}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=three}) (235{val=.}) (802{val=simpleMethod}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=map}) (235{val=.}) (802{val=put}) (214{val=(}) (800{val=invocation}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=RuntimeException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=e}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=MockitoException})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=expected})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=expected}) (234{val=,}) (32 (802{val=hasFirstMethodInStackTrace}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=stackTrace})) (204{val==}) (14 (304{val=new}) (43 (801{val=MockitoException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StackTraceFilter})) (59 (800{val=filter}) (204{val==}) (14 (304{val=new}) (43 (801{val=StackTraceFilter})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=StackTraceFilter})) (59 (800{val=filter}) (204{val==}) (14 (304{val=new}) (43 (801{val=StackTraceFilter})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (32 (32 (800{val=e}) (235{val=.}) (802{val=getCause}) (216{val=()})) (235{val=.}) (802{val=getMessage}) (216{val=()})) (234{val=,}) (32 (802{val=contains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=StackTraceFilter})) (59 (800{val=filter}) (204{val==}) (14 (304{val=new}) (43 (801{val=StackTraceFilter})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=VerificationError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=e}) (234{val=,}) (32 (802{val=causeMessageContains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Invocation})) (59 (800{val=actual}) (204{val==}) (32 (800{val=registeredInvocations}) (235{val=.}) (802{val=findActualInvocation}) (214{val=(}) (800{val=wanted}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberOfInvocationsError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=e}) (234{val=,}) (32 (802{val=messageContains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=UndesiredInvocation})) (59 (800{val=cause}) (204{val==}) (32 (802{val=buildUndesiredInvocationCause}) (214{val=(}) (800{val=actualInvocationStackTrace}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=undesired}) (215{val=)}))) (227{val=;})) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=VerificationError})) (214{val=(}) (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=cause}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=UndesiredInvocation})) (59 (800{val=cause}) (204{val==}) (32 (802{val=buildUndesiredInvocationCause}) (214{val=(}) (800{val=actualInvocationStackTrace}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=undesired}) (215{val=)}))) (227{val=;})) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=VerificationError})) (214{val=(}) (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (234{val=,}) (800{val=cause}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=TooManyActualInvocationsError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=e}) (234{val=,}) (32 (802{val=messageContains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (32 (802{val=verify}) (214{val=(}) (800{val=mock}) (215{val=)})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=TooManyActualInvocationsError})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=TooLittleActualInvocationsError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=e}) (234{val=,}) (32 (802{val=messageContains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=TooLittleActualInvocationsError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertThat}) (214{val=(}) (800{val=e}) (234{val=,}) (32 (802{val=messageContains}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=TooLittleActualInvocationsError})) (800{val=e})))
(AST_ROOT_SC2NF (77 (208{val=@}) (802{val=Test}) (214{val=(}) (80 (800{val=expected}) (204{val==}) (57 (43 (800{val=TooLittleActualInvocationsError})) (235{val=.}) (341{val=class}))) (215{val=)})))
(AST_ROOT_SC2NF (57 (43 (800{val=MockitoExceptionTest})) (235{val=.}) (341{val=class})))
(AST_ROOT_SC2NF (21 (32 (800{val=Exceptions}) (235{val=.}) (802{val=strictlyWantedInvocationDiffersFromActual}) (214{val=(}) (800{val=wanted}) (234{val=,}) (800{val=actual}) (234{val=,}) (32 (800{val=actualInvocation}) (235{val=.}) (802{val=getStackTrace}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (74 (43 (800{val=MethodSelector})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (802{val=toThrow}) (214{val=(}) (44 (43 (801{val=Throwable})) (800{val=throwable})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=stubber}) (235{val=.}) (802{val=addThrowableForVoidMethod}) (214{val=(}) (800{val=throwable}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setInvocationForPotentialStubbing}) (214{val=(}) (44 (43 (801{val=InvocationMatcher})) (800{val=invocation})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=invocationForStubbing})) (204{val==}) (800{val=invocation})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=invocationWithMatchers})))
(AST_ROOT_SC2NF (57 (43 (800{val=InvocationMatcherTest})) (235{val=.}) (341{val=class})))
(AST_ROOT_SC2NF (21 (32 (800{val=s}) (235{val=.}) (802{val=setInvocationForPotentialStubbing}) (214{val=(}) (32 (14 (304{val=new}) (43 (801{val=InvocationBuilder})) (216{val=()})) (235{val=.}) (802{val=toMatchingInvocation}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wantedInvocation})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wantedInvocation})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=addInvocation}) (214{val=(}) (44 (43 (801{val=InvocationMatcher})) (800{val=invocation})) (215{val=)}) (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=registeredInvocations})) (235{val=.}) (802{val=add}) (214{val=(}) (32 (800{val=invocation}) (235{val=.}) (802{val=getInvocation}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=HasStackTrace})) (59 (800{val=firstUndesired}) (204{val==}) (32 (800{val=registered}) (235{val=.}) (802{val=getFirstUndesiredInvocationStackTrace}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (800{val=simpleMethodInvocation}) (215{val=)})) (234{val=,}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=times}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=HasStackTrace})) (59 (800{val=firstUndesired}) (204{val==}) (32 (800{val=registered}) (235{val=.}) (802{val=getFirstUndesiredInvocationStackTrace}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (800{val=simpleMethodInvocation}) (215{val=)})) (234{val=,}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=times}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=HasStackTrace})) (59 (800{val=firstUndesired}) (204{val==}) (32 (800{val=registered}) (235{val=.}) (802{val=getFirstUndesiredInvocationStackTrace}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (800{val=simpleMethodInvocation}) (215{val=)})) (234{val=,}) (32 (800{val=VerifyingMode}) (235{val=.}) (802{val=times}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=registered}) (235{val=.}) (802{val=markInvocationsAsVerified}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (500{val=null}) (215{val=)})) (234{val=,}) (800{val=mode}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=registered}) (235{val=.}) (802{val=markInvocationsAsVerified}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (800{val=simpleMethodInvocation}) (215{val=)})) (234{val=,}) (32 (802{val=times}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=registered}) (235{val=.}) (802{val=markInvocationsAsVerified}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (800{val=simpleMethodInvocation}) (215{val=)})) (234{val=,}) (32 (802{val=atLeastOnce}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=registered}) (235{val=.}) (802{val=markInvocationsAsVerified}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (800{val=simpleMethodInvocation}) (215{val=)})) (234{val=,}) (32 (802{val=times}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=registered}) (235{val=.}) (802{val=markInvocationsAsVerified}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InvocationMatcher})) (214{val=(}) (800{val=simpleMethodInvocation}) (215{val=)})) (234{val=,}) (32 (802{val=inOrder}) (214{val=(}) (500{val=null}) (234{val=,}) (32 (802{val=asList}) (214{val=(}) (800{val=mock}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=wanted})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=expected})))
(AST_ROOT_SC2NF (44 (43 (801{val=InvocationMatcher})) (800{val=invocation})))
(AST_ROOT_SC2NF (57 (43 (800{val=EmptyReturnValuesTest})) (235{val=.}) (341{val=class})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=verifyingMode}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=behavior}) (235{val=.}) (802{val=verify}) (214{val=(}) (800{val=invocationWithMatchers}) (234{val=,}) (800{val=verifyingMode}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=EmptyReturnValues}) (235{val=.}) (802{val=emptyValueFor}) (214{val=(}) (32 (800{val=method}) (235{val=.}) (802{val=getReturnType}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (57 (43 (800{val=MockitoStateImplTest})) (235{val=.}) (341{val=class})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertNull}) (214{val=(}) (32 (40{val=Mockito.mockitoState}) (235{val=.}) (802{val=pullControlToBeStubbed}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=mockitoState}) (235{val=.}) (802{val=stubbingCompleted}) (216{val=()})) (227{val=;})) (21 (32 (802{val=validateThrowable}) (214{val=(}) (800{val=throwable}) (215{val=)})) (227{val=;})) (21 (32 (802{val=addResult}) (214{val=(}) (32 (800{val=Result}) (235{val=.}) (802{val=createThrowResult}) (214{val=(}) (800{val=throwable}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=mockitoState}) (235{val=.}) (802{val=stubbingCompleted}) (216{val=()})) (227{val=;})) (21 (32 (802{val=addResult}) (214{val=(}) (32 (800{val=Result}) (235{val=.}) (802{val=createReturnResult}) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=mockitoState}) (235{val=.}) (802{val=validateState}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=mockitoState}) (235{val=.}) (802{val=validateState}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=MockUtil}) (235{val=.}) (802{val=validateMock}) (214{val=(}) (800{val=mock}) (215{val=)})) (227{val=;})) (21 (32 (800{val=mockitoState}) (235{val=.}) (802{val=verifyingStarted}) (214{val=(}) (800{val=mode}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=mock}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (74 (43 (800{val=MockControl})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (59 (800{val=mockControl}) (204{val==}) (14 (304{val=new}) (74 (43 (800{val=MockControl})) (230{val=<}) (43 (800{val=T})) (231{val=>})) (214{val=(}) (800{val=mockitoState}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MatchersBinder})) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (57 (43 (800{val=VerifyingRecorderTest})) (235{val=.}) (341{val=class})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=andThrows}) (214{val=(}) (44 (43 (801{val=Throwable})) (800{val=throwable})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=verifyingRecorder}) (235{val=.}) (802{val=eraseLastInvocation}) (216{val=()})) (227{val=;})) (21 (32 (800{val=stubber}) (235{val=.}) (802{val=addThrowable}) (214{val=(}) (800{val=throwable}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=andReturn}) (214{val=(}) (44 (43 (801{val=T})) (800{val=value})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=verifyingRecorder}) (235{val=.}) (802{val=eraseLastInvocation}) (216{val=()})) (227{val=;})) (21 (32 (800{val=stubber}) (235{val=.}) (802{val=addReturnValue}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=timeline}) (235{val=.}) (802{val=setStartTime}) (214{val=(}) (27 (32 (802{val=firstMondayAfter1900}) (216{val=()})) (200{val=+}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=timeline}) (235{val=.}) (802{val=getSegmentSize}) (216{val=()})))) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=SegmentedTimeline})) (59 (800{val=timeline}) (204{val==}) (14 (304{val=new}) (43 (801{val=SegmentedTimeline})) (214{val=(}) (800{val=DAY_SEGMENT_SIZE}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=timeline}) (235{val=.}) (802{val=setStartTime}) (214{val=(}) (32 (802{val=firstMondayAfter1900}) (216{val=()})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (800{val=timeline}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=time}) (234{val=,}) (40{val=RegularTimePeriod.DEFAULT_TIME_ZONE}) (234{val=,}) (32 (800{val=Locale}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=index}) (251{val=>=}) (32 (802{val=getDatasetCount}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=index}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=index}) (251{val=>=}) (32 (802{val=getDatasetCount}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=index}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=index}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=index}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=index}) (231{val=>}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=index}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (7 (40{val=clone.seriesShapesVisible}) (204{val==}) (11 (214{val=(}) (43 (800{val=BooleanList})) (215{val=)}) (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesShapesVisible})) (235{val=.}) (802{val=clone}) (216{val=()})))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=pos}) (204{val==}) (32 (802{val=getIndex}) (214{val=(}) (800{val=key}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Range})) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=minimumRangeValue})) (234{val=,}) (22 (315{val=this}) (235{val=.}) (800{val=maximumRangeValue})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=g2}) (235{val=.}) (802{val=setPaint}) (214{val=(}) (32 (802{val=getVolumePaint}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=gap})) (242{val=!=}) (40{val=that.gap})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=MessageBox})) (59 (800{val=messageBox}) (204{val==}) (14 (304{val=new}) (43 (801{val=MessageBox})) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=canvas})) (235{val=.}) (802{val=getShell}) (216{val=()})) (234{val=,}) (27 (40{val=SWT.OK}) (224{val=|}) (40{val=SWT.ICON_ERROR})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=SWTChartEditor})) (59 (800{val=editor}) (204{val==}) (14 (304{val=new}) (43 (801{val=SWTChartEditor})) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=canvas})) (235{val=.}) (802{val=getDisplay}) (216{val=()})) (234{val=,}) (22 (315{val=this}) (235{val=.}) (800{val=chart})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (315{val=this}) (235{val=.}) (802{val=switchColors}) (216{val=()})) (227{val=;})) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=fillRectangle}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=width}) (234{val=,}) (800{val=height}) (215{val=)})) (227{val=;})) (21 (32 (315{val=this}) (235{val=.}) (802{val=switchColors}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=drawLine}) (214{val=(}) (800{val=x1}) (234{val=,}) (800{val=y1}) (234{val=,}) (800{val=x2}) (234{val=,}) (800{val=y2}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=setClipping}) (214{val=(}) (800{val=clipPath}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=setClipping}) (214{val=(}) (800{val=x}) (234{val=,}) (800{val=y}) (234{val=,}) (800{val=width}) (234{val=,}) (800{val=height}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (40{val=org.eclipse.swt.graphics.Rectangle})) (59 (800{val=clip}) (204{val==}) (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=getClipping}) (216{val=()}))) (227{val=;})) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Rectangle})) (214{val=(}) (40{val=clip.x}) (234{val=,}) (40{val=clip.y}) (234{val=,}) (40{val=clip.width}) (234{val=,}) (40{val=clip.height}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Path})) (59 (800{val=path}) (204{val==}) (32 (802{val=toSwtPath}) (214{val=(}) (800{val=s}) (215{val=)}))) (227{val=;})) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=setClipping}) (214{val=(}) (800{val=path}) (215{val=)})) (227{val=;})) (21 (32 (800{val=path}) (235{val=.}) (802{val=dispose}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (40{val=org.eclipse.swt.graphics.Font})) (59 (800{val=swtFont}) (204{val==}) (32 (802{val=getSwtFontFromPool}) (214{val=(}) (800{val=font}) (215{val=)}))) (227{val=;})) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=setFont}) (214{val=(}) (800{val=swtFont}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=setForeground}) (214{val=(}) (800{val=swtColor}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setTransform}) (214{val=(}) (44 (43 (801{val=AffineTransform})) (800{val=Tx})) (215{val=)}) (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=setTransform}) (214{val=(}) (32 (802{val=toSwtTransform}) (214{val=(}) (800{val=Tx}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=drawImage}) (214{val=(}) (800{val=image}) (234{val=,}) (800{val=x}) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=Path})) (59 (800{val=path}) (204{val==}) (32 (802{val=toSwtPath}) (214{val=(}) (800{val=shape}) (215{val=)}))) (227{val=;})) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=drawPath}) (214{val=(}) (800{val=path}) (215{val=)})) (227{val=;})) (21 (32 (800{val=path}) (235{val=.}) (802{val=dispose}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (800{val=swtColor}) (204{val==}) (32 (800{val=SWTUtils}) (235{val=.}) (802{val=toSwtColor}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=getDevice}) (216{val=()})) (234{val=,}) (800{val=awtColor}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=protected}) (802{val=DialPointer}) (216{val=()}) (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=DialValueIndicator})) (59 (800{val=i1}) (204{val==}) (14 (304{val=new}) (43 (801{val=DialValueIndicator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=DialValueIndicator})) (59 (800{val=i1}) (204{val==}) (14 (304{val=new}) (43 (801{val=DialValueIndicator})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=dialFrame})) (204{val==}) (14 (304{val=new}) (43 (801{val=ArcDialFrame})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=suite}) (235{val=.}) (802{val=addTestSuite}) (214{val=(}) (57 (43 (800{val=ArcDialFrameTests})) (235{val=.}) (341{val=class})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Color})) (802{val=getColor}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=myColor})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=myColor})) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=myColor})) (235{val=.}) (802{val=dispose}) (216{val=()})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=myColor})) (204{val==}) (800{val=color})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (40{val=e.gc}) (235{val=.}) (802{val=setBackground}) (214{val=(}) (22 (52 (800{val=SWTPaintCanvas}) (235{val=.}) (315{val=this})) (235{val=.}) (800{val=myColor})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawBarOutline})) (204{val==}) (9{val=false})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=suite}) (235{val=.}) (802{val=addTestSuite}) (214{val=(}) (57 (43 (800{val=XYSplineRendererTests})) (235{val=.}) (341{val=class})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=suite}) (235{val=.}) (802{val=addTestSuite}) (214{val=(}) (57 (43 (800{val=StandardDialFrameTests})) (235{val=.}) (341{val=class})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Comparable})) (800{val=name})))
(AST_ROOT_SC2NF (44 (43 (801{val=Comparable})) (800{val=name})))
(AST_ROOT_SC2NF (44 (43 (801{val=Comparable})) (800{val=name})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=axis})) (235{val=.}) (802{val=resizeRange}) (214{val=(}) (800{val=factor}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=values}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=Collections}) (235{val=.}) (802{val=unmodifiableList}) (214{val=(}) (800{val=values}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (40{val=Collections.EMPTY_LIST}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=PeriodAxisLabelInfo})) (59 (800{val=clone}) (204{val==}) (11 (214{val=(}) (43 (800{val=PeriodAxisLabelInfo})) (215{val=)}) (48 (349{val=super}) (235{val=.}) (800{val=clone}) (216{val=()})))) (227{val=;})) (41 (329{val=return}) (800{val=clone}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=SWTUtils}) (235{val=.}) (802{val=toAwtFont}) (214{val=(}) (32 (802{val=getDisplay}) (216{val=()})) (234{val=,}) (22 (315{val=this}) (235{val=.}) (800{val=tickLabelFont})) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Stroke})) (802{val=getStroke}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=strokeCanvas})) (235{val=.}) (802{val=getStroke}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Color})) (802{val=getOutlinePaint}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=outlinePaintCanvas})) (235{val=.}) (802{val=getColor}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Color})) (802{val=getBackGroundPaint}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=backgroundPaintCanvas})) (235{val=.}) (802{val=getColor}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=radius}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (34{val=NUMBER_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=CategoryPlot})) (59 (800{val=plot}) (204{val==}) (11 (214{val=(}) (43 (800{val=CategoryPlot})) (215{val=)}) (32 (800{val=iterator}) (235{val=.}) (802{val=next}) (216{val=()})))) (227{val=;})) (21 (32 (800{val=plot}) (235{val=.}) (802{val=setFixedRangeAxisSpace}) (214{val=(}) (800{val=space}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=CategoryPlot})) (59 (800{val=plot}) (204{val==}) (11 (214{val=(}) (43 (800{val=CategoryPlot})) (215{val=)}) (32 (800{val=iterator}) (235{val=.}) (802{val=next}) (216{val=()})))) (227{val=;})) (21 (32 (800{val=plot}) (235{val=.}) (802{val=setFixedDomainAxisSpace}) (214{val=(}) (800{val=space}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=canvas})) (204{val==}) (14 (304{val=new}) (43 (801{val=Canvas})) (214{val=(}) (315{val=this}) (234{val=,}) (27 (40{val=SWT.DOUBLE_BUFFERED}) (224{val=|}) (40{val=SWT.NO_BACKGROUND})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=baseShapesVisible})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseShapesVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=legendItemToolTipGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseToolTipGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=toolTipGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseItemLabelGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=itemLabelGeneratorList})) (235{val=.}) (802{val=set}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=generator}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=itemLabelGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (14 (304{val=new}) (43 (801{val=ComparableObjectSeries})) (214{val=(}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=pass}) (204{val==}) (9{val=true})) (227{val=;})) (219{val=}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=errorIndicatorPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=errorIndicatorStroke})) (204{val==}) (800{val=stroke})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=renderAsPercentages})) (204{val==}) (800{val=asPercentages})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=plotLines})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=legendItemURLGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=itemMargin})) (204{val==}) (800{val=margin})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fillBox})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useSeriesOffset})) (204{val==}) (800{val=offset})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useFillPaint})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseShapesFilled})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesShapesFilled})) (235{val=.}) (802{val=setBoolean}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=filled}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=shapesFilled})) (204{val==}) (800{val=filled})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useOutlinePaint})) (204{val==}) (800{val=use})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawOutlines})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseShapesVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesShapesVisible})) (235{val=.}) (802{val=setBoolean}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=flag}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=shapesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseLinesVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesLinesVisible})) (235{val=.}) (802{val=setBoolean}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=flag}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=linesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=yOffset})) (204{val==}) (800{val=yOffset})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=xOffset})) (204{val==}) (800{val=xOffset})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maxItemWidth})) (204{val==}) (800{val=percent})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=includeBaseInRange})) (242{val=!=}) (800{val=include})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=includeBaseInRange})) (204{val==}) (800{val=include})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=negativeItemLabelPositionFallback})) (204{val==}) (800{val=position})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=positiveItemLabelPositionFallback})) (204{val==}) (800{val=position})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=gradientPaintTransformer})) (204{val==}) (800{val=transformer})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=minimumBarLength})) (204{val==}) (800{val=min})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maximumBarWidth})) (204{val==}) (800{val=percent})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawBarOutline})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=itemMargin})) (204{val==}) (800{val=percent})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=base})) (204{val==}) (800{val=base})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=renderAsPercentages})) (204{val==}) (800{val=asPercentages})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useFillPaint})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawOutlines})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useSeriesOffset})) (204{val==}) (800{val=offset})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=renderAsPercentages})) (204{val==}) (800{val=asPercentages})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=stagger})) (204{val==}) (800{val=shouldStagger})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useOutlinePaint})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useFillPaint})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawOutlines})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseShapesFilled})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesShapesFilled})) (235{val=.}) (802{val=setBoolean}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=flag}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=shapesFilled})) (204{val==}) (800{val=filled})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseShapesVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesShapesVisible})) (235{val=.}) (802{val=setBoolean}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=flag}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=shapesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseLinesVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesLinesVisible})) (235{val=.}) (802{val=setBoolean}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=flag}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=linesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=yOffset})) (204{val==}) (800{val=yOffset})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=xOffset})) (204{val==}) (800{val=xOffset})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=negativeItemLabelPositionFallback})) (204{val==}) (800{val=position})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=positiveItemLabelPositionFallback})) (204{val==}) (800{val=position})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=gradientPaintTransformer})) (204{val==}) (800{val=transformer})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawBarOutline})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=margin})) (204{val==}) (800{val=margin})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=useYInterval})) (242{val=!=}) (800{val=use})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=useYInterval})) (204{val==}) (800{val=use})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=base})) (204{val==}) (800{val=base})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=renderAsPercentages})) (204{val==}) (800{val=asPercentages})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=showOutline})) (204{val==}) (800{val=show})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=drawVolume})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawVolume})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=downPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=upPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=autoWidthFactor})) (242{val=!=}) (800{val=autoWidthFactor})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=autoWidthFactor})) (204{val==}) (800{val=autoWidthFactor})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=legendItemURLGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=legendItemToolTipGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=foregroundAnnotations})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=backgroundAnnotations})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseToolTipGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=toolTipGeneratorList})) (235{val=.}) (802{val=set}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=generator}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=toolTipGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=baseItemLabelGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=itemLabelGeneratorList})) (235{val=.}) (802{val=set}) (214{val=(}) (800{val=series}) (234{val=,}) (800{val=generator}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=itemLabelGenerator})) (204{val==}) (800{val=generator})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fillBox})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=boxPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=width}) (242{val=!=}) (22 (315{val=this}) (235{val=.}) (800{val=boxWidth}))) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=boxWidth})) (204{val==}) (800{val=width})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=shapesVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=showOutline})) (204{val==}) (800{val=show})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=showOutline})) (204{val==}) (800{val=show})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=roundXCoordinates})) (204{val==}) (800{val=round})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=closeTickPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=openTickPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawCloseTicks})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawOpenTicks})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=roundXCoordinates})) (204{val==}) (800{val=round})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=capLength})) (204{val==}) (800{val=length})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=drawYError})) (242{val=!=}) (800{val=draw})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawYError})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawXError})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (40{val=org.eclipse.swt.graphics.Image})) (59 (800{val=im}) (204{val==}) (14 (304{val=new}) (43 (40{val=org.eclipse.swt.graphics.Image})) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=gc})) (235{val=.}) (802{val=getDevice}) (216{val=()})) (234{val=,}) (32 (800{val=SWTUtils}) (235{val=.}) (802{val=convertToSWT}) (214{val=(}) (800{val=image}) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=XYPlot})) (59 (800{val=plot}) (204{val==}) (11 (214{val=(}) (43 (800{val=XYPlot})) (215{val=)}) (32 (800{val=iterator}) (235{val=.}) (802{val=next}) (216{val=()})))) (227{val=;})) (21 (32 (800{val=plot}) (235{val=.}) (802{val=setFixedRangeAxisSpace}) (214{val=(}) (800{val=space}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (800{val=XYPlot})) (59 (800{val=plot}) (204{val==}) (11 (214{val=(}) (43 (800{val=XYPlot})) (215{val=)}) (32 (800{val=iterator}) (235{val=.}) (802{val=next}) (216{val=()})))) (227{val=;})) (21 (32 (800{val=plot}) (235{val=.}) (802{val=setFixedDomainAxisSpace}) (214{val=(}) (800{val=space}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (802{val=htmlEscape}) (214{val=(}) (800{val=name}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (802{val=htmlEscape}) (214{val=(}) (800{val=name}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BufferedImage})) (59 (800{val=image}) (204{val==}) (14 (304{val=new}) (43 (801{val=BufferedImage})) (214{val=(}) (800{val=imageWidth}) (234{val=,}) (800{val=imageHeight}) (234{val=,}) (40{val=BufferedImage.TYPE_INT_ARGB}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=createBufferedImage}) (214{val=(}) (800{val=width}) (234{val=,}) (800{val=height}) (234{val=,}) (40{val=BufferedImage.TYPE_INT_ARGB}) (234{val=,}) (800{val=info}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=URLUtilities}) (235{val=.}) (802{val=encode}) (214{val=(}) (800{val=urlText}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=zone}) (234{val=,}) (32 (800{val=Locale}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesToGroupMap})) (235{val=.}) (802{val=getGroupIndex}) (214{val=(}) (32 (22 (315{val=this}) (235{val=.}) (800{val=seriesToGroupMap})) (235{val=.}) (802{val=getGroup}) (214{val=(}) (32 (32 (800{val=plot}) (235{val=.}) (802{val=getDataset}) (214{val=(}) (32 (800{val=plot}) (235{val=.}) (802{val=getIndexOf}) (214{val=(}) (315{val=this}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=getRowKey}) (214{val=(}) (800{val=row}) (215{val=)})) (215{val=)})) (215{val=)})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=BufferedImage})) (59 (800{val=image}) (204{val==}) (32 (800{val=chart}) (235{val=.}) (802{val=createBufferedImage}) (214{val=(}) (800{val=width}) (234{val=,}) (800{val=height}) (234{val=,}) (40{val=BufferedImage.TYPE_INT_RGB}) (234{val=,}) (800{val=info}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=BufferedImage})) (59 (800{val=image}) (204{val==}) (32 (800{val=chart}) (235{val=.}) (802{val=createBufferedImage}) (214{val=(}) (800{val=width}) (234{val=,}) (800{val=height}) (234{val=,}) (40{val=BufferedImage.TYPE_INT_RGB}) (234{val=,}) (800{val=info}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (44 (43 (801{val=Comparable})) (800{val=key})))
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=seriesGap}) (204{val==}) (27 (27 (32 (800{val=dataArea}) (235{val=.}) (802{val=getHeight}) (216{val=()})) (202{val=*}) (32 (802{val=getItemMargin}) (216{val=()}))) (203{val=/}) (36 (214{val=(}) (27 (800{val=categoryCount}) (202{val=*}) (36 (214{val=(}) (27 (800{val=seriesCount}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=showBase})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=result}) (235{val=.}) (802{val=append}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=baseLabel})) (215{val=)})) (227{val=;})) (21 (32 (800{val=result}) (235{val=.}) (802{val=append}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=powerLabel})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=categoryKeys.length}) (242{val=!=}) (32 (802{val=getCategoryCount}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=Exception})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=CloneNotSupportedException})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=e}) (235{val=.}) (802{val=printStackTrace}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=rangeGridlinesVisible})) (242{val=!=}) (800{val=visible})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeGridlinesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=domainGridlinesVisible})) (242{val=!=}) (800{val=visible})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainGridlinesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=data})) (204{val==}) (800{val=data})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fixedLegendItems})) (204{val==}) (800{val=items})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fixedRangeAxisSpace})) (204{val==}) (800{val=space})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fixedDomainAxisSpace})) (204{val==}) (800{val=space})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairValue})) (204{val==}) (800{val=value})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isRangeCrosshairVisible}) (216{val=()})) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairLockedOnData})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairLockedOnData})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairVisible})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainCrosshairValue})) (204{val==}) (800{val=value})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isDomainCrosshairVisible}) (216{val=()})) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=domainCrosshairLockedOnData})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainCrosshairLockedOnData})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=domainCrosshairVisible})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainCrosshairVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=annotations})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=removed}) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=removed}) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=removed}) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeTickBandPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainTickBandPaint})) (204{val==}) (800{val=paint})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeZeroBaselineVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainZeroBaselineVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=rangeGridlinesVisible})) (242{val=!=}) (800{val=visible})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeGridlinesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=domainGridlinesVisible})) (242{val=!=}) (800{val=visible})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainGridlinesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=weight})) (204{val==}) (800{val=weight})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=orientation}) (242{val=!=}) (22 (315{val=this}) (235{val=.}) (800{val=orientation}))) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=orientation})) (204{val==}) (800{val=orientation})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=foregroundAlpha})) (242{val=!=}) (800{val=alpha})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=foregroundAlpha})) (204{val==}) (800{val=alpha})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=outlineVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=backgroundImageAlpha})) (204{val==}) (800{val=alpha})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=backgroundImageAlignment})) (242{val=!=}) (800{val=alignment})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=backgroundImageAlignment})) (204{val==}) (800{val=alignment})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=backgroundImage})) (204{val==}) (800{val=image})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawingSupplier})) (204{val==}) (800{val=supplier})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=backgroundAlpha})) (242{val=!=}) (800{val=alpha})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=backgroundAlpha})) (204{val==}) (800{val=alpha})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=insets})) (204{val==}) (800{val=insets})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=noDataMessage})) (204{val==}) (800{val=message})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=anchorValue})) (204{val==}) (800{val=value})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=drawSharedDomainAxis})) (204{val==}) (800{val=draw})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fixedRangeAxisSpace})) (204{val==}) (800{val=space})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fixedDomainAxisSpace})) (204{val==}) (800{val=space})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=weight})) (204{val==}) (800{val=weight})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (22 (315{val=this}) (235{val=.}) (800{val=annotations})) (235{val=.}) (802{val=clear}) (216{val=()})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=removed}) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairValue})) (204{val==}) (800{val=value})) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isRangeCrosshairVisible}) (216{val=()})) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairLockedOnData})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairLockedOnData})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairVisible})) (242{val=!=}) (800{val=flag})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeCrosshairVisible})) (204{val==}) (800{val=flag})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=removed}) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=removed}) (249{val=&&}) (800{val=notify})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=fixedLegendItems})) (204{val==}) (800{val=items})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=rangeGridlinesVisible})) (242{val=!=}) (800{val=visible})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=rangeGridlinesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=domainGridlinesVisible})) (242{val=!=}) (800{val=visible})) (215{val=)}) (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=domainGridlinesVisible})) (204{val==}) (800{val=visible})) (227{val=;})) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=notify}) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=fireChangeEvent}) (216{val=()})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=suite}) (235{val=.}) (802{val=addTest}) (214{val=(}) (32 (800{val=HashCodeBuilderTest}) (235{val=.}) (800{val=suite}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=cause})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (5 (43 (801{val=Throwable})) (85{val=[]})) (59 (800{val=throwables}) (204{val==}) (32 (315{val=this}) (235{val=.}) (802{val=getThrowables}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Throwable})) (59 (800{val=nestedCause}) (204{val==}) (32 (800{val=ExceptionUtils}) (235{val=.}) (802{val=getCause}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=cause})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=cause})) (204{val==}) (11 (214{val=(}) (43 (800{val=Throwable})) (215{val=)}) (800{val=cause}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=List})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayList})) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ExceptionUtils}) (235{val=.}) (802{val=indexOfThrowable}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=nestable})) (234{val=,}) (800{val=type}) (234{val=,}) (800{val=fromIndex}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ExceptionUtils}) (235{val=.}) (802{val=getThrowables}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=nestable})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (22 (315{val=this}) (235{val=.}) (800{val=nestable})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=Throwable})) (59 (800{val=nestedCause}) (204{val==}) (32 (800{val=ExceptionUtils}) (235{val=.}) (802{val=getCause}) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=nestable})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=n}) (204{val==}) (32 (802{val=getTester1}) (214{val=(}) (32 (802{val=getThrowable}) (214{val=(}) (2 (801{val=msgs}) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (215{val=)})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=Test})) (802{val=suite}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=TestSuite})) (214{val=(}) (57 (43 (800{val=NestableErrorTestCase})) (235{val=.}) (341{val=class})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=NestableRuntimeExceptionTester2})) (214{val=(}) (800{val=msg}) (234{val=,}) (11 (214{val=(}) (43 (800{val=Throwable})) (215{val=)}) (800{val=n})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (43 (801{val=Test})) (802{val=suite}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=TestSuite})) (214{val=(}) (57 (43 (800{val=NestableRuntimeExceptionTestCase})) (235{val=.}) (341{val=class})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=RandomStringUtils}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getSummaryObjectEndText}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getSummaryObjectEndText}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getSummaryObjectStartText}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getSummaryObjectStartText}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getSizeEndText}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getSizeEndText}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getSizeStartText}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getSizeStartText}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getNullText}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getNullText}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getFieldSeparator}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getFieldSeparator}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getFieldNameValueSeparator}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getFieldNameValueSeparator}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getContentEnd}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getContentEnd}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getContentStart}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getContentStart}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getArraySeparator}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getArraySeparator}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getArrayEnd}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getArrayEnd}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=getArrayStart}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=getArrayStart}) (216{val=()})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setArrayContentDetail}) (214{val=(}) (44 (39{val=boolean}) (800{val=arrayContentDetail})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setArrayContentDetail}) (214{val=(}) (800{val=arrayContentDetail}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setDefaultFullDetail}) (214{val=(}) (44 (39{val=boolean}) (800{val=defaultFullDetail})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setDefaultFullDetail}) (214{val=(}) (800{val=defaultFullDetail}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setUseFieldNames}) (214{val=(}) (44 (39{val=boolean}) (800{val=useFieldNames})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUseFieldNames}) (214{val=(}) (800{val=useFieldNames}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setUseIdentityHashCode}) (214{val=(}) (44 (39{val=boolean}) (800{val=useIdentityHashCode})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUseIdentityHashCode}) (214{val=(}) (800{val=useIdentityHashCode}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setShortClassName}) (214{val=(}) (44 (39{val=boolean}) (800{val=shortClassName})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setShortClassName}) (214{val=(}) (800{val=shortClassName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=setUseClassName}) (214{val=(}) (44 (39{val=boolean}) (800{val=useClassName})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=setUseClassName}) (214{val=(}) (800{val=useClassName}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=style}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=style}) (204{val==}) (32 (802{val=getDefaultStyle}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=linebreak}) (204{val==}) (40{val=SystemUtils.LINE_SEPARATOR})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=entry}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY_MAP}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ExceptionInInitializerError})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (62 (32 (800{val=ex}) (235{val=.}) (802{val=getException}) (216{val=()})) (328{val=instanceof}) (43 (800{val=IllegalArgumentException}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ExceptionInInitializerError})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (62 (32 (800{val=ex}) (235{val=.}) (802{val=getException}) (216{val=()})) (328{val=instanceof}) (43 (800{val=IllegalArgumentException}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ExceptionInInitializerError})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=assertTrue}) (214{val=(}) (62 (32 (800{val=ex}) (235{val=.}) (802{val=getException}) (216{val=()})) (328{val=instanceof}) (43 (800{val=IllegalArgumentException}))) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=suite}) (235{val=.}) (802{val=addTest}) (214{val=(}) (32 (800{val=TestExecutorUtils}) (235{val=.}) (800{val=suite}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Number})) (802{val=getMaximum}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (800{val=max}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=member}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Modifier}) (235{val=.}) (802{val=isPublic}) (214{val=(}) (32 (800{val=member}) (235{val=.}) (802{val=getModifiers}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=ReflectionUtils}) (235{val=.}) (802{val=isCompatable}) (214{val=(}) (2 (801{val=parameterTypes}) (221{val=[}) (800{val=n}) (222{val=]})) (234{val=,}) (2 (801{val=methodsParams}) (221{val=[}) (800{val=n}) (222{val=]})) (215{val=)}))))
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=ReflectionUtils}) (235{val=.}) (802{val=isCompatible}) (214{val=(}) (2 (801{val=parameterTypes}) (221{val=[}) (800{val=n}) (222{val=]})) (234{val=,}) (2 (801{val=methodsParams}) (221{val=[}) (800{val=n}) (222{val=]})) (215{val=)}))))
(AST_ROOT_SC2NF (27 (32 (32 (2 (801{val=methods}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getName}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=methodName}) (215{val=)})) (249{val=&&}) (32 (800{val=ReflectionUtils}) (235{val=.}) (802{val=isCompatible}) (214{val=(}) (800{val=paramTypes}) (234{val=,}) (32 (2 (801{val=methods}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getParameterTypes}) (216{val=()})) (215{val=)}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=ReflectionException})) (800{val=e})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (31 (802{val=DefaultToStringStyle}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=private}) (802{val=DefaultToStringStyle}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ExecutorUtils}) (235{val=.}) (802{val=switchMapExecutor}) (214{val=(}) (800{val=EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ExecutorUtils}) (235{val=.}) (802{val=switchExecutor}) (214{val=(}) (800{val=EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=TransformerUtils}) (235{val=.}) (802{val=switchMapTransformer}) (214{val=(}) (800{val=EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=TransformerUtils}) (235{val=.}) (802{val=switchTransformer}) (214{val=(}) (800{val=EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ExecutorUtils}) (235{val=.}) (802{val=switchMapExecutor}) (214{val=(}) (40{val=Collections.EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ExecutorUtils}) (235{val=.}) (802{val=switchExecutor}) (214{val=(}) (40{val=Collections.EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=TransformerUtils}) (235{val=.}) (802{val=switchMapTransformer}) (214{val=(}) (40{val=Collections.EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=TransformerUtils}) (235{val=.}) (802{val=switchTransformer}) (214{val=(}) (40{val=Collections.EMPTY_MAP}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=clss})) (204{val==}) (800{val=listener})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=Method})) (59 (800{val=method}) (204{val==}) (32 (802{val=getMethod}) (214{val=(}) (32 (800{val=object}) (235{val=.}) (802{val=getClass}) (216{val=()})) (234{val=,}) (800{val=methodName}) (234{val=,}) (800{val=parameterTypes}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ExecutorUtils}) (235{val=.}) (802{val=switchMapExecutor}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HashMap})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=ExecutorUtils}) (235{val=.}) (802{val=switchExecutor}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HashMap})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=TransformerUtils}) (235{val=.}) (802{val=switchMapTransformer}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HashMap})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=TransformerUtils}) (235{val=.}) (802{val=switchTransformer}) (214{val=(}) (14 (304{val=new}) (43 (801{val=HashMap})) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))) (21 (32 (802{val=fail}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=buf}) (235{val=.}) (802{val=append}) (214{val=(}) (32 (800{val=ClassUtils}) (235{val=.}) (802{val=getShortClassName}) (214{val=(}) (800{val=th}) (234{val=,}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=withoutCause}) (204{val==}) (32 (802{val=createExceptionWithoutCause}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=ByteArrayOutputStream})) (59 (800{val=baos}) (204{val==}) (14 (304{val=new}) (43 (801{val=ByteArrayOutputStream})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)}))) (227{val=;})) (21 (32 (802{val=serialize}) (214{val=(}) (800{val=obj}) (234{val=,}) (800{val=baos}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (800{val=baos}) (235{val=.}) (802{val=toByteArray}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (36 (214{val=(}) (27 (32 (32 (800{val=cls}) (235{val=.}) (802{val=getName}) (216{val=()})) (235{val=.}) (802{val=indexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (800{val=Enum}) (235{val=.}) (802{val=getEnumClassName}) (214{val=(}) (32 (802{val=getClass}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (800{val=Enum}) (235{val=.}) (802{val=getEnumClassName}) (214{val=(}) (32 (802{val=getClass}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=frames}) (235{val=.}) (802{val=add}) (214{val=(}) (27 (800{val=WRAPPED_MARKER}) (200{val=+}) (32 (2 (801{val=throwables}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=toString}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (32 (800{val=Enum}) (235{val=.}) (802{val=getEnumClass}) (214{val=(}) (32 (802{val=getClass}) (216{val=()})) (215{val=)})) (235{val=.}) (802{val=getName}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Entry})) (59 (800{val=entry}) (204{val==}) (11 (214{val=(}) (43 (800{val=Entry})) (215{val=)}) (32 (800{val=cEnumClasses}) (235{val=.}) (802{val=get}) (214{val=(}) (32 (800{val=Enum}) (235{val=.}) (802{val=getEnumClass}) (214{val=(}) (32 (802{val=getClass}) (216{val=()})) (215{val=)})) (215{val=)})))) (227{val=;})))
(AST_ROOT_SC2NF (31 (802{val=Null}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=ArrayUtils}) (235{val=.}) (802{val=reverseArray}) (214{val=(}) (800{val=strs}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=join}) (214{val=(}) (800{val=array}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (800{val=ArrayUtils}) (235{val=.}) (802{val=reverse}) (214{val=(}) (800{val=strs}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=iso}) (204{val==}) (32 (802{val=entityValue}) (214{val=(}) (800{val=entity}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=nextInt}) (214{val=(}) (800{val=JVM_RANDOM}) (234{val=,}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=long}) (802{val=nextLong}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (39{val=long}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=random}) (216{val=()})) (202{val=*}) (40{val=Long.MAX_VALUE})) (215{val=)}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=random}) (216{val=()})) (202{val=*}) (800{val=n})) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=random}) (214{val=(}) (800{val=count}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (40{val=set.length}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=set}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=void}) (802{val=printPartialStackTrace}) (214{val=(}) (44 (43 (801{val=PrintWriter})) (800{val=out})) (215{val=)}) (8 (218{val={}) (21 (48 (349{val=super}) (235{val=.}) (802{val=printStackTrace}) (214{val=(}) (800{val=out}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=STRING_ALPHANUMERIC_IDENTIFIER_FACTORY}) (235{val=.}) (802{val=nextStringIdentifier}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=STRING_NUMERIC_IDENTIFIER_FACTORY}) (235{val=.}) (802{val=nextStringIdentifier}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=LONG_IDENTIFIER_FACTORY}) (235{val=.}) (802{val=nextLongIdentifier}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (36 (214{val=(}) (27 (32 (32 (800{val=cls}) (235{val=.}) (802{val=getName}) (216{val=()})) (235{val=.}) (802{val=indexOf}) (214{val=(}) (800{val=INNER_CLASS_SEPARATOR_CHAR}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=i}) (204{val==}) (32 (800{val=className}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (800{val=PACKAGE_SEPARATOR_CHAR}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (27 (32 (800{val=ReflectionToStringBuilder}) (235{val=.}) (802{val=isRegistered}) (214{val=(}) (800{val=value}) (215{val=)})) (249{val=&&}) (38 (207{val=!}) (36 (214{val=(}) (27 (62 (800{val=value}) (328{val=instanceof}) (43 (800{val=Number}))) (250{val=||}) (62 (800{val=value}) (328{val=instanceof}) (43 (800{val=Boolean}))) (250{val=||}) (62 (800{val=value}) (328{val=instanceof}) (43 (800{val=Character})))) (215{val=)})))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertTrue}) (214{val=(}) (32 (32 (800{val=ReflectionToStringBuilder}) (235{val=.}) (802{val=getRegistry}) (216{val=()})) (235{val=.}) (802{val=isEmpty}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=end}) (204{val==}) (27 (11 (214{val=(}) (39{val=int}) (215{val=)}) (13{val=CHAR_CONS})) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lastIdx}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (45{val=STRING_CONSTANT}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=object}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=style}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=fieldName}) (234{val=,}) (800{val=array}) (234{val=,}) (32 (800{val=BooleanUtils}) (235{val=.}) (802{val=toBooleanObject}) (214{val=(}) (800{val=fullDetail}) (215{val=)})) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (800{val=cal}) (234{val=,}) (32 (800{val=DateUtils}) (235{val=.}) (802{val=truncate}) (214{val=(}) (800{val=cal}) (234{val=,}) (40{val=Calendar.DATE}) (215{val=)})) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Object})) (800{val=array})))
(AST_ROOT_SC2NF (44 (83{val=final}) (43 (801{val=Object})) (800{val=array})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=BinaryEntityMap}) (214{val=(}) (44 (39{val=int}) (800{val=growBy})) (215{val=)}) (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=growBy}) (215{val=)}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (40{val=Entities.XML}) (235{val=.}) (802{val=unescape}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (40{val=Entities.XML}) (235{val=.}) (802{val=escape}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (40{val=Entities.HTML40}) (235{val=.}) (802{val=unescape}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (40{val=Entities.HTML40}) (235{val=.}) (802{val=escape}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=entities}) (235{val=.}) (802{val=entityName}) (214{val=(}) (32 (802{val=isovalue}) (214{val=(}) (800{val=i}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=buf}) (235{val=.}) (802{val=append}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (60 (39{val=char}) (59 (800{val=ch}) (204{val==}) (32 (802{val=isovalue}) (214{val=(}) (800{val=i}) (215{val=)}))) (227{val=;})) (21 (32 (800{val=buf}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=ch}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=pads}) (231{val=>}) (800{val=PAD_LIMIT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=leftPad}) (214{val=(}) (800{val=str}) (234{val=,}) (800{val=size}) (234{val=,}) (13{val=CHAR_CONS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=pads}) (231{val=>}) (800{val=PAD_LIMIT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=rightPad}) (214{val=(}) (800{val=str}) (234{val=,}) (800{val=size}) (234{val=,}) (13{val=CHAR_CONS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (32 (800{val=ArrayUtils}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (32 (800{val=ArrayUtils}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=ObjectUtils}) (235{val=.}) (802{val=appendIdentityToString}) (214{val=(}) (800{val=buffer}) (234{val=,}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=ObjectUtils}) (235{val=.}) (802{val=appendIdentityToString}) (214{val=(}) (32 (315{val=this}) (235{val=.}) (802{val=getStringBuffer}) (216{val=()})) (234{val=,}) (800{val=object}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (9{val=true}) (234{val=,}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isNotEmptyTrimmed}) (214{val=(}) (500{val=null}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (9{val=false}) (234{val=,}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isEmptyTrimmed}) (214{val=(}) (500{val=null}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (9{val=true}) (234{val=,}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isNotEmpty}) (214{val=(}) (500{val=null}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (9{val=false}) (234{val=,}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isEmpty}) (214{val=(}) (500{val=null}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=pads}) (231{val=>}) (800{val=PAD_LIMIT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=leftPad}) (214{val=(}) (800{val=str}) (234{val=,}) (800{val=size}) (234{val=,}) (32 (800{val=String}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=padChar}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=AccessibleObject}) (235{val=.}) (802{val=setAccessible}) (214{val=(}) (800{val=fields}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=SerializationUtils}) (235{val=.}) (802{val=deserialize}) (214{val=(}) (11 (214{val=(}) (5 (39{val=byte}) (85{val=[]})) (215{val=)}) (500{val=null})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=SerializationUtils}) (235{val=.}) (802{val=deserialize}) (214{val=(}) (11 (214{val=(}) (43 (800{val=InputStream})) (215{val=)}) (500{val=null})) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=SerializationUtils}) (235{val=.}) (802{val=serialize}) (214{val=(}) (500{val=null}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=SerializationUtils}) (235{val=.}) (802{val=serialize}) (214{val=(}) (800{val=iMap}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}})))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isEmpty}) (214{val=(}) (800{val=className}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isEmpty}) (214{val=(}) (800{val=className}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isEmpty}) (214{val=(}) (800{val=name}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=isEmpty}) (214{val=(}) (800{val=className}) (215{val=)})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (800{val=AccessibleObject}) (235{val=.}) (802{val=setAccessible}) (214{val=(}) (800{val=fields}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=AccessibleObject}) (235{val=.}) (802{val=setAccessible}) (214{val=(}) (800{val=fields}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=AccessibleObject}) (235{val=.}) (802{val=setAccessible}) (214{val=(}) (800{val=fields}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (54 (335{val=try}) (8 (218{val={}) (21 (7 (800{val=method}) (204{val==}) (32 (2 (801{val=interfaces}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getDeclaredMethod}) (214{val=(}) (800{val=methodName}) (234{val=,}) (800{val=parameterTypes}) (215{val=)}))) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NoSuchMethodException})) (800{val=e})) (215{val=)}) (8 (220{val={}})))))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (40{val=RandomUtils.JVM_RANDOM}) (235{val=.}) (802{val=setSeed}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=UnsupportedOperationException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberFormatException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberFormatException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberFormatException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberFormatException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberFormatException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=NumberFormatException})) (800{val=ex})) (215{val=)}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=comparison}) (242{val=!=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}}))) (21 (7 (800{val=comparison}) (204{val==}) (800{val=superCompareTo})) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=rule}) (204{val==}) (14 (304{val=new}) (43 (801{val=StringLiteral})) (214{val=(}) (800{val=sub}) (215{val=)}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=iTotal}) (204{val==}) (27 (27 (800{val=iTotal}) (202{val=*}) (800{val=iConstant})) (200{val=+}) (800{val=value}))) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=iTotal}) (204{val==}) (27 (27 (800{val=iTotal}) (202{val=*}) (800{val=iConstant})) (200{val=+}) (800{val=value}))) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=iTotal}) (204{val==}) (27 (27 (800{val=iTotal}) (202{val=*}) (800{val=iConstant})) (200{val=+}) (800{val=value}))) (227{val=;})) (41 (329{val=return}) (315{val=this}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (13{val=CHAR_CONS}) (234{val=,}) (32 (40{val=Entities.XML}) (235{val=.}) (802{val=entityValue}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=entityValue}) (204{val==}) (2 (2 (40{val=Entities.ISO8859_1_ARRAY}) (221{val=[}) (27 (800{val=i}) (211{val=%}) (40{val=Entities.ISO8859_1_ARRAY.length})) (222{val=]})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=entityValue}) (204{val==}) (2 (2 (40{val=Entities.HTML40_ARRAY}) (221{val=[}) (27 (800{val=i}) (211{val=%}) (40{val=Entities.HTML40_ARRAY.length})) (222{val=]})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=validateNumber}) (214{val=(}) (800{val=str}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BigDecimal})) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=validateNumber}) (214{val=(}) (800{val=str}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BigInteger})) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=validateNumber}) (214{val=(}) (800{val=str}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=validateNumber}) (214{val=(}) (800{val=str}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Integer}) (235{val=.}) (802{val=decode}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=validateNumber}) (214{val=(}) (800{val=str}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (38 (207{val=!}) (32 (802{val=validateNumber}) (214{val=(}) (800{val=str}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Float}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=str}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=BigInteger})) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=str}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Long}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=str}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Integer}) (235{val=.}) (802{val=decode}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=str}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Double}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=str}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (800{val=Float}) (235{val=.}) (802{val=valueOf}) (214{val=(}) (800{val=str}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=f}) (235{val=.}) (802{val=nextIdentifier}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=random}) (214{val=(}) (800{val=count}) (234{val=,}) (800{val=start}) (234{val=,}) (800{val=end}) (234{val=,}) (800{val=letters}) (234{val=,}) (800{val=numbers}) (234{val=,}) (500{val=null}) (234{val=,}) (800{val=RANDOM}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=out}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=out}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=array1}) (236{val===}) (500{val=null})) (250{val=||}) (27 (800{val=array2}) (236{val===}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=causeFrames}) (236{val===}) (500{val=null})) (250{val=||}) (27 (800{val=wrapperFrames}) (236{val===}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=writer}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=stream}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=objectData}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=inputStream}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=outputStream}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Validate}) (235{val=.}) (802{val=notNull}) (214{val=(}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=Validate}) (235{val=.}) (802{val=isTrue}) (214{val=(}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=shortName}) (204{val==}) (32 (800{val=ClassUtils}) (235{val=.}) (802{val=getShortClassName}) (214{val=(}) (32 (802{val=getEnumClass}) (216{val=()})) (215{val=)}))) (227{val=;})) (21 (7 (800{val=iToString}) (204{val==}) (27 (800{val=shortName}) (200{val=+}) (45{val=STRING_CONSTANT}) (200{val=+}) (32 (802{val=getName}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=entry.unmodifiableList}) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=entry.unmodifiableMap}) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (800{val=text}) (204{val==}) (32 (40{val=DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT}) (235{val=.}) (802{val=format}) (214{val=(}) (800{val=cal}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (800{val=date}) (234{val=,}) (800{val=pattern}) (234{val=,}) (40{val=DateUtils.UTC_TIME_ZONE}) (234{val=,}) (800{val=locale}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Date})) (214{val=(}) (800{val=millis}) (215{val=)})) (234{val=,}) (800{val=pattern}) (234{val=,}) (40{val=DateUtils.UTC_TIME_ZONE}) (234{val=,}) (800{val=locale}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (800{val=date}) (234{val=,}) (800{val=pattern}) (234{val=,}) (40{val=DateUtils.UTC_TIME_ZONE}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Date})) (214{val=(}) (800{val=millis}) (215{val=)})) (234{val=,}) (800{val=pattern}) (234{val=,}) (40{val=DateUtils.UTC_TIME_ZONE}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=at}) (236{val===}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=EMPTY}) (226{val=:}) (800{val=str})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=repeat}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=lastIdx}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=strLen}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=idx}) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=str}) (235{val=.}) (802{val=substring}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (27 (800{val=idx}) (200{val=+}) (32 (800{val=sep}) (235{val=.}) (802{val=length}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=idx}) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=str}) (235{val=.}) (802{val=substring}) (214{val=(}) (800{val=idx}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=ch}) (236{val===}) (13{val=CHAR_CONS})) (250{val=||}) (27 (800{val=ch}) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (800{val=str}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=overlay}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=overlay}) (204{val==}) (800{val=EMPTY})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=separator}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=separator}) (204{val==}) (800{val=EMPTY})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=separator}) (235{val=.}) (802{val=length}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=len}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=pos}) (231{val=>}) (32 (800{val=str}) (235{val=.}) (802{val=length}) (216{val=()})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=len}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=len}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=start}) (231{val=>}) (800{val=end})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=start}) (231{val=>}) (32 (800{val=str}) (235{val=.}) (802{val=length}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=EMPTY}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=EMPTY}) (226{val=:}) (32 (802{val=strip}) (214{val=(}) (800{val=str}) (234{val=,}) (500{val=null}) (215{val=)}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=EMPTY}) (226{val=:}) (32 (800{val=str}) (235{val=.}) (802{val=trim}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (36 (214{val=(}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=EMPTY}) (226{val=:}) (32 (800{val=str}) (235{val=.}) (802{val=trim}) (216{val=()}))) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=gcd}) (204{val==}) (32 (802{val=greatestCommonDivisor}) (214{val=(}) (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=numerator}) (215{val=)})) (234{val=,}) (800{val=denominator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=gcd}) (204{val==}) (32 (802{val=greatestCommonDivisor}) (214{val=(}) (32 (800{val=Math}) (235{val=.}) (802{val=abs}) (214{val=(}) (800{val=numerator}) (215{val=)})) (234{val=,}) (800{val=denominator}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (54 (335{val=try}) (8 (218{val={}) (21 (32 (800{val=Fraction}) (235{val=.}) (802{val=getFraction}) (214{val=(}) (500{val=null}) (215{val=)})) (227{val=;})) (21 (32 (802{val=fail}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}})) (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=IllegalArgumentException})) (800{val=ex})) (215{val=)}) (8 (220{val={}})))) (219{val=}})))
(AST_ROOT_SC2NF (21 (32 (802{val=assertEquals}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=StringUtils}) (235{val=.}) (802{val=overlayString}) (214{val=(}) (800{val=SENTENCE_UNCAP}) (234{val=,}) (800{val=FOO_UNCAP}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=at}) (204{val==}) (32 (802{val=indexOfDifference}) (214{val=(}) (800{val=str1}) (234{val=,}) (800{val=str2}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (39{val=int}) (59 (800{val=index}) (204{val==}) (32 (802{val=binarySearch}) (214{val=(}) (800{val=value}) (215{val=)}))) (227{val=;})) (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (2 (801{val=names}) (221{val=[}) (800{val=index}) (222{val=]})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=insertAt}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=value}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=value}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (800{val=escapeSingleQuote}) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=out}) (235{val=.}) (802{val=write}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=toString}) (214{val=(}) (800{val=object}) (234{val=,}) (800{val=style}) (234{val=,}) (800{val=outputTransients}) (234{val=,}) (9{val=false}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=toString}) (214{val=(}) (800{val=object}) (234{val=,}) (800{val=style}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=toString}) (214{val=(}) (800{val=object}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ReflectionToStringBuilder}) (235{val=.}) (802{val=toString}) (214{val=(}) (800{val=object}) (234{val=,}) (800{val=style}) (234{val=,}) (800{val=outputTransients}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=reflectUpToClass}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=ReflectionToStringBuilder}) (235{val=.}) (802{val=toString}) (214{val=(}) (800{val=object}) (234{val=,}) (800{val=style}) (234{val=,}) (800{val=outputTransients}) (234{val=,}) (9{val=false}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (43 (801{val=List})) (59 (800{val=list}) (204{val==}) (14 (304{val=new}) (43 (801{val=ArrayList})) (214{val=(}) (32 (800{val=ColorEnum}) (235{val=.}) (802{val=getEnumList}) (216{val=()})) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=flush}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (32 (36 (214{val=(}) (11 (214{val=(}) (43 (800{val=StringWriter})) (215{val=)}) (22 (315{val=this}) (235{val=.}) (800{val=out}))) (215{val=)})) (235{val=.}) (802{val=toString}) (216{val=()})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isEmpty}) (214{val=(}) (800{val=str}) (215{val=)})) (250{val=||}) (32 (802{val=isEmpty}) (214{val=(}) (800{val=searchChars}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=str}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isEmpty}) (214{val=(}) (800{val=str}) (215{val=)})) (250{val=||}) (32 (802{val=isEmpty}) (214{val=(}) (800{val=remove}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=str}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isEmpty}) (214{val=(}) (800{val=str}) (215{val=)})) (250{val=||}) (32 (802{val=isEmpty}) (214{val=(}) (800{val=remove}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=str}) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isEmpty}) (214{val=(}) (800{val=str}) (215{val=)})) (250{val=||}) (32 (802{val=isEmpty}) (214{val=(}) (800{val=searchChars}) (215{val=)}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (32 (802{val=isEmpty}) (214{val=(}) (800{val=str}) (215{val=)})) (250{val=||}) (27 (800{val=searchChars}) (236{val===}) (500{val=null}))) (250{val=||}) (27 (40{val=searchChars.length}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isAsciiNumeric}) (214{val=(}) (800{val=ch}) (215{val=)})) (236{val===}) (9{val=false})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=defaultValue}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (36 (214{val=(}) (27 (800{val=ch}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isAsciiNumeric}) (214{val=(}) (800{val=ch}) (215{val=)})) (236{val===}) (9{val=false})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=ch}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=ch}) (230{val=<}) (40{val=CHAR_ARRAY.length})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (2 (801{val=CHAR_ARRAY}) (221{val=[}) (800{val=ch}) (222{val=]})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Character})) (214{val=(}) (800{val=ch}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setValue}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Short})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (22 (315{val=this}) (235{val=.}) (800{val=value})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=MutableNumber}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setValue}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Float})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setValue}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Byte})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setValue}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Long})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setValue}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Integer})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setValue}) (214{val=(}) (14 (304{val=new}) (43 (801{val=Double})) (214{val=(}) (800{val=value}) (215{val=)})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (21 (32 (802{val=setValue}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (48 (349{val=super}) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=obj}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (802{val=MutableNumber}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Object})) (802{val=getValue}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=Integer})) (214{val=(}) (22 (315{val=this}) (235{val=.}) (800{val=value})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (60 (43 (800{val=Calendar})) (59 (800{val=gval}) (204{val==}) (32 (800{val=Calendar}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Calendar})) (59 (800{val=gval}) (204{val==}) (32 (800{val=Calendar}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (60 (43 (800{val=Calendar})) (59 (800{val=gval}) (204{val==}) (32 (800{val=Calendar}) (235{val=.}) (802{val=getInstance}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (21 (32 (800{val=suite}) (235{val=.}) (802{val=addTest}) (214{val=(}) (32 (800{val=MutableIntTest}) (235{val=.}) (800{val=suite}) (216{val=()})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=splitWorker}) (214{val=(}) (800{val=str}) (234{val=,}) (800{val=separatorChars}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (44 (39{val=byte}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=short}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=byte}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=short}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=short}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=short}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=holder})))
(AST_ROOT_SC2NF (44 (39{val=int}) (800{val=mask})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=boolean}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=float}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=byte}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=char}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=short}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=int}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=long}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=boolean}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Boolean})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=float}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Float})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Double})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=byte}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Byte})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=short}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Short})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=int}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Integer})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=long}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Long})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=boolean}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=float}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=byte}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=char}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=short}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=int}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=long}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=array})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=boolean}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=float}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=double}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=byte}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=char}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=short}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (39{val=long}) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (5 (43 (801{val=Object})) (85{val=[]})) (800{val=array})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=array})))
(AST_ROOT_SC2NF (44 (43 (801{val=Object})) (800{val=array})))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=EqualsBuilder}) (216{val=()}) (8 (220{val={}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=addToken}) (214{val=(}) (800{val=tokens}) (234{val=,}) (40{val=StringUtils.EMPTY}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=value})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (21 (37 (800{val=nEntries}) (247{val=++})) (227{val=;})) (21 (32 (800{val=markers}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=marker}) (215{val=)})) (227{val=;})) (21 (32 (800{val=sources}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=source}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=splitTime}) (204{val==}) (32 (800{val=watch}) (235{val=.}) (802{val=getSplitTime}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=tokenLen}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=rule}) (204{val==}) (32 (802{val=selectNumberRule}) (214{val=(}) (40{val=Calendar.YEAR}) (234{val=,}) (800{val=tokenLen}) (215{val=)}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=rule}) (204{val==}) (40{val=TwoDigitYearField.INSTANCE})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=format}) (214{val=(}) (800{val=millis}) (234{val=,}) (802{val=format}) (234{val=,}) (9{val=true}) (234{val=,}) (32 (800{val=TimeZone}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=isAssignableFrom}) (214{val=(}) (32 (2 (801{val=throwables}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getClass}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=i}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (800{val=type}) (235{val=.}) (802{val=isAssignableFrom}) (214{val=(}) (32 (2 (801{val=throwables}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getClass}) (216{val=()})) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=i}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (32 (2 (801{val=throwables}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=type}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=i}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (32 (2 (801{val=throwables}) (221{val=[}) (800{val=i}) (222{val=]})) (235{val=.}) (802{val=getClass}) (216{val=()})) (235{val=.}) (802{val=equals}) (214{val=(}) (800{val=type}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=i}) (227{val=;})) (219{val=}}))) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Class})) (802{val=getThrowableClass}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (57 (43 (800{val=EOFException})) (235{val=.}) (341{val=class})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EOFException})) (214{val=(}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Class})) (802{val=getThrowableClass}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (57 (43 (800{val=EOFException})) (235{val=.}) (341{val=class})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EOFException})) (214{val=(}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=Class})) (802{val=getThrowableClass}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (57 (43 (800{val=EOFException})) (235{val=.}) (341{val=class})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (14 (304{val=new}) (43 (801{val=EOFException})) (214{val=(}) (800{val=msg}) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (21 (7 (2 (800{val=newArray}) (221{val=[}) (27 (40{val=newArray.length}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (222{val=]})) (204{val==}) (800{val=element})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (27 (36 (214{val=(}) (16 (27 (800{val=argName}) (236{val===}) (500{val=null})) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (800{val=argName})) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)}) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=DurationFormatUtils}) (235{val=.}) (802{val=formatDurationHMS}) (214{val=(}) (32 (802{val=getSplitTime}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (43 (801{val=String})) (802{val=toString}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (32 (800{val=DurationFormatUtils}) (235{val=.}) (802{val=formatDurationHMS}) (214{val=(}) (32 (802{val=getTime}) (216{val=()})) (215{val=)})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (802{val=DurationFormatUtils}) (216{val=()}) (8 (218{val={}) (500{val=super();}) (219{val=}}))))
(AST_ROOT_SC2NF (21 (32 (802{val=assertFalse}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (32 (800{val=token}) (235{val=.}) (802{val=equals}) (214{val=(}) (14 (304{val=new}) (43 (40{val=DurationFormatUtils.Token})) (214{val=(}) (40{val=DurationFormatUtils.y}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (215{val=)})) (215{val=)})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=arrayEnd}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=arrayEnd}) (204{val==}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}}))) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=arrayEnd})) (204{val==}) (800{val=arrayEnd})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (11 (214{val=(}) (5 (43 (800{val=Object})) (85{val=[]})) (215{val=)}) (32 (802{val=add}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=index}) (234{val=,}) (800{val=element}) (234{val=,}) (800{val=clss}) (215{val=)}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=defaultStr}) (226{val=:}) (800{val=str})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=EMPTY}) (226{val=:}) (800{val=str})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=EMPTY}) (226{val=:}) (32 (800{val=str}) (235{val=.}) (802{val=trim}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (60 (43 (801{val=String})) (59 (800{val=ts}) (204{val==}) (32 (802{val=trim}) (214{val=(}) (800{val=str}) (215{val=)}))) (227{val=;})) (41 (329{val=return}) (16 (32 (802{val=isEmpty}) (214{val=(}) (800{val=ts}) (215{val=)})) (233{val=?}) (500{val=null}) (226{val=:}) (800{val=ts})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (500{val=null}) (226{val=:}) (32 (800{val=str}) (235{val=.}) (802{val=trim}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=str}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=EMPTY}) (226{val=:}) (32 (800{val=str}) (235{val=.}) (802{val=trim}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (2 (801{val=text}) (221{val=[}) (800{val=pos}) (222{val=]})) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=ch}) (236{val===}) (2 (801{val=text}) (221{val=[}) (800{val=pos}) (222{val=]}))) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=previousIndex}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=tokenPos}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=hasPrevious}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=tokenize}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (27 (800{val=tokenPos}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=hasNext}) (216{val=()}) (8 (218{val={}) (21 (32 (802{val=tokenize}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (27 (800{val=tokenPos}) (230{val=<}) (40{val=tokens.length})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=str}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (500{val=super();}) (25 (313{val=if}) (214{val=(}) (27 (800{val=initialCapacity}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=initialCapacity}) (204{val==}) (800{val=CAPACITY})) (227{val=;})) (219{val=}}))) (21 (7 (800{val=buf}) (204{val==}) (3 (304{val=new}) (5 (39{val=char}) (221{val=[})) (800{val=initialCapacity}) (222{val=]}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=min}) (236{val===}) (40{val=range.min})) (249{val=&&}) (27 (800{val=max}) (236{val===}) (40{val=range.max}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=value}) (251{val=>=}) (800{val=min})) (249{val=&&}) (27 (800{val=value}) (252{val=<=}) (800{val=max}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (22 (315{val=this}) (235{val=.}) (800{val=stopTime})) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=startTime}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=min}) (236{val===}) (40{val=range.min})) (249{val=&&}) (27 (800{val=max}) (236{val===}) (40{val=range.max}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=value}) (251{val=>=}) (800{val=min})) (249{val=&&}) (27 (800{val=value}) (252{val=<=}) (800{val=max}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=str}) (236{val===}) (500{val=null})) (250{val=||}) (27 (800{val=searchStr}) (236{val===}) (500{val=null}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (32 (800{val=str}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (800{val=searchStr}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (32 (802{val=isEmpty}) (214{val=(}) (800{val=str}) (215{val=)})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (32 (800{val=str}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (800{val=searchChar}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (27 (32 (800{val=str}) (235{val=.}) (802{val=length}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (500{val=null}) (226{val=:}) (800{val=str})) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (32 (800{val=date1}) (235{val=.}) (802{val=getTime}) (216{val=()})) (236{val===}) (32 (800{val=date2}) (235{val=.}) (802{val=getTime}) (216{val=()}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=valueToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (32 (802{val=indexOf}) (214{val=(}) (800{val=array}) (234{val=,}) (800{val=objectToFind}) (215{val=)})) (242{val=!=}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=obj}) (236{val===}) (500{val=null})) (233{val=?}) (800{val=nullStr}) (226{val=:}) (32 (800{val=obj}) (235{val=.}) (802{val=toString}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=obj}) (236{val===}) (500{val=null})) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (32 (800{val=obj}) (235{val=.}) (802{val=toString}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=object}) (242{val=!=}) (500{val=null})) (233{val=?}) (800{val=object}) (226{val=:}) (800{val=defaultValue})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=ch}) (251{val=>=}) (13{val=CHAR_CONS})) (249{val=&&}) (27 (800{val=ch}) (252{val=<=}) (13{val=CHAR_CONS}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=ch}) (251{val=>=}) (13{val=CHAR_CONS})) (249{val=&&}) (27 (800{val=ch}) (252{val=<=}) (13{val=CHAR_CONS}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=ch}) (251{val=>=}) (13{val=CHAR_CONS})) (249{val=&&}) (27 (800{val=ch}) (252{val=<=}) (13{val=CHAR_CONS}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=ch}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (27 (800{val=ch}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=ch}) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=ch}) (230{val=<}) (34{val=NUMBER_CONSTANT}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=ch}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (32 (802{val=isAsciiNumeric}) (214{val=(}) (800{val=ch}) (215{val=)})) (236{val===}) (9{val=false})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=defaultValue}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (800{val=ch}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (800{val=ch}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=cls}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (32 (32 (800{val=cls}) (235{val=.}) (802{val=getName}) (216{val=()})) (235{val=.}) (802{val=indexOf}) (214{val=(}) (800{val=INNER_CLASS_SEPARATOR_CHAR}) (215{val=)})) (251{val=>=}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=value}) (236{val===}) (500{val=null})) (233{val=?}) (45{val=STRING_CONSTANT}) (226{val=:}) (32 (800{val=value}) (235{val=.}) (802{val=toString}) (216{val=()}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=int}) (802{val=hashCode}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=value}) (236{val===}) (500{val=null})) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (32 (800{val=value}) (235{val=.}) (802{val=hashCode}) (216{val=()}))) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (31 (83{val=public}) (39{val=boolean}) (802{val=nextBoolean}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (32 (800{val=Math}) (235{val=.}) (802{val=random}) (216{val=()})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=value}) (251{val=>=}) (800{val=min})) (249{val=&&}) (27 (800{val=value}) (252{val=<=}) (800{val=max}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=compareMin}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=compareMax}) (251{val=>=}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=compareMin}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=compareMax}) (251{val=>=}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (31 (83{val=public}) (83{val=static}) (39{val=boolean}) (802{val=isThrowableNested}) (216{val=()}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=THROWABLE_CAUSE_METHOD}) (242{val=!=}) (500{val=null})) (227{val=;})) (219{val=}}))))
(AST_ROOT_SC2NF (41 (329{val=return}) (16 (32 (802{val=xor}) (214{val=(}) (800{val=primitive}) (215{val=)})) (233{val=?}) (40{val=Boolean.TRUE}) (226{val=:}) (40{val=Boolean.FALSE})) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (800{val=bool}) (233{val=?}) (800{val=trueString}) (226{val=:}) (800{val=falseString})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=nullString}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (800{val=trueString}) (226{val=:}) (800{val=falseString})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=nullValue}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (800{val=trueValue}) (226{val=:}) (800{val=falseValue})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (800{val=bool}) (233{val=?}) (800{val=trueValue}) (226{val=:}) (800{val=falseValue})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=nullValue}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (800{val=trueValue}) (226{val=:}) (800{val=falseValue})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (800{val=bool}) (233{val=?}) (800{val=trueValue}) (226{val=:}) (800{val=falseValue})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (40{val=NumberUtils.INTEGER_ONE}) (226{val=:}) (40{val=NumberUtils.INTEGER_ZERO})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (800{val=bool}) (233{val=?}) (40{val=NumberUtils.INTEGER_ONE}) (226{val=:}) (40{val=NumberUtils.INTEGER_ZERO})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (800{val=bool}) (233{val=?}) (34{val=NUMBER_CONSTANT}) (226{val=:}) (34{val=NUMBER_CONSTANT})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=value}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (500{val=null}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (27 (32 (800{val=value}) (235{val=.}) (802{val=intValue}) (216{val=()})) (236{val===}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (40{val=Boolean.FALSE}) (226{val=:}) (40{val=Boolean.TRUE})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=value}) (236{val===}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (40{val=Boolean.FALSE}) (226{val=:}) (40{val=Boolean.TRUE})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (27 (800{val=value}) (236{val===}) (34{val=NUMBER_CONSTANT})) (233{val=?}) (9{val=false}) (226{val=:}) (9{val=true})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=valueIfNull}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (9{val=true}) (226{val=:}) (9{val=false})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (9{val=true}) (226{val=:}) (9{val=false})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (800{val=bool}) (233{val=?}) (40{val=Boolean.TRUE}) (226{val=:}) (40{val=Boolean.FALSE})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (9{val=false}) (226{val=:}) (9{val=true})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=bool}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (16 (32 (800{val=bool}) (235{val=.}) (802{val=booleanValue}) (216{val=()})) (233{val=?}) (9{val=true}) (226{val=:}) (9{val=false})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (27 (800{val=value}) (251{val=>=}) (800{val=min})) (249{val=&&}) (27 (800{val=value}) (252{val=<=}) (800{val=max}))) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=JAVA_VERSION_INT}) (251{val=>=}) (800{val=requiredVersion})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=JAVA_VERSION_FLOAT}) (251{val=>=}) (800{val=requiredVersion})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=compareMin}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=compareMax}) (251{val=>=}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (800{val=holder}) (213{val=&}) (800{val=_mask})) (227{val=;})) (219{val=}})))
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=set}) (235{val=.}) (802{val=equals}) (214{val=(}) (40{val=other.set}) (215{val=)})) (227{val=;})))
